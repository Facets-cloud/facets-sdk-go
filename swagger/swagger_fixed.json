{
  "swagger": "2.0",
  "info": {
    "description": "Api Documentation",
    "version": "1.0",
    "title": "Api Documentation",
    "termsOfService": "urn:tos",
    "contact": {},
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "facetsdemo.console.facets.cloud",
  "basePath": "/",
  "tags": [
    {
      "name": "application-controller",
      "description": "Application Controller"
    },
    {
      "name": "artifact-controller",
      "description": "Artifact Controller"
    },
    {
      "name": "artifactory-controller",
      "description": "Artifactory Controller"
    },
    {
      "name": "aws-cluster-controller",
      "description": "Aws Cluster Controller"
    },
    {
      "name": "azure-cluster-controller",
      "description": "Azure Cluster Controller"
    },
    {
      "name": "build-controller",
      "description": "Build Controller"
    },
    {
      "name": "callback-controller",
      "description": "Callback Controller"
    },
    {
      "name": "capillary-cloud-callback-controller",
      "description": "Capillary Cloud Callback Controller"
    },
    {
      "name": "common-cluster-controller",
      "description": "Common Cluster Controller"
    },
    {
      "name": "deployment-controller",
      "description": "Deployment Controller"
    },
    {
      "name": "gcp-cluster-controller",
      "description": "GCP Cluster Controller"
    },
    {
      "name": "meta-controller",
      "description": "Meta Controller"
    },
    {
      "name": "public-ap-is",
      "description": "Public AP Is"
    },
    {
      "name": "stack-controller",
      "description": "Stack Controller"
    },
    {
      "name": "ui-accounts-controller",
      "description": "Ui Accounts Controller"
    },
    {
      "name": "ui-alerts-controller",
      "description": "Ui Alerts Controller"
    },
    {
      "name": "ui-application-controller",
      "description": "Ui Application Controller"
    },
    {
      "name": "ui-artifact-ci-controller",
      "description": "Ui Artifact Ci Controller"
    },
    {
      "name": "ui-artifact-hub-controller",
      "description": "Ui Artifact Hub Controller"
    },
    {
      "name": "ui-artifact-routing-rule-controller",
      "description": "Ui Artifact Routing Rule Controller"
    },
    {
      "name": "ui-artifactory-controller",
      "description": "Ui Artifactory Controller"
    },
    {
      "name": "ui-artifacts-controller",
      "description": "Ui Artifacts Controller"
    },
    {
      "name": "ui-assistant-controller",
      "description": "Ui Assistant Controller"
    },
    {
      "name": "ui-audit-logs-controller",
      "description": "Ui Audit Logs Controller"
    },
    {
      "name": "ui-aws-cluster-controller",
      "description": "Ui Aws Cluster Controller"
    },
    {
      "name": "ui-azure-cluster-controller",
      "description": "Ui Azure Cluster Controller"
    },
    {
      "name": "ui-billing-controller",
      "description": "Ui Billing Controller"
    },
    {
      "name": "ui-blueprint-designer-controller",
      "description": "Ui Blueprint Designer Controller"
    },
    {
      "name": "ui-chat-gpt-controller",
      "description": "Endpoints for Chat GPT operations"
    },
    {
      "name": "ui-ci-cd-controller",
      "description": "Ui Ci Cd Controller"
    },
    {
      "name": "ui-cloud-cost-explorer-controller",
      "description": "Ui Cloud Cost Explorer Controller"
    },
    {
      "name": "ui-coder-controller",
      "description": "Ui Coder Controller"
    },
    {
      "name": "ui-common-cluster-controller",
      "description": "Ui Common Cluster Controller"
    },
    {
      "name": "ui-custom-content-controller",
      "description": "Ui Custom Content Controller"
    },
    {
      "name": "ui-custom-role-controller",
      "description": "Ui Custom Role Controller"
    },
    {
      "name": "ui-delivery-pipeline-controller",
      "description": "UI Delivery Pipeline Controller"
    },
    {
      "name": "ui-deployment-controller",
      "description": "Ui Deployment Controller"
    },
    {
      "name": "ui-domain-mapping-controller",
      "description": "Ui Domain Mapping Controller"
    },
    {
      "name": "ui-dropdowns-controller",
      "description": "Ui Dropdowns Controller"
    },
    {
      "name": "ui-gcp-cluster-controller",
      "description": "Ui GCP Cluster Controller"
    },
    {
      "name": "ui-iac-repo-controller",
      "description": "Ui Iac Repo Controller"
    },
    {
      "name": "ui-intent-controller",
      "description": "Ui Intent Controller"
    },
    {
      "name": "ui-k-8s-cluster-controller",
      "description": "Ui K 8s Cluster Controller"
    },
    {
      "name": "ui-kubernetes-explorer-controller",
      "description": "Ui Kubernetes Explorer Controller"
    },
    {
      "name": "ui-local-cluster-controller",
      "description": "Ui Local Cluster Controller"
    },
    {
      "name": "ui-maintenance-window-controller",
      "description": "Ui Maintenance Window Controller"
    },
    {
      "name": "ui-meta-controller",
      "description": "Ui Meta Controller"
    },
    {
      "name": "ui-no-auth-user-controller",
      "description": "Ui No Auth User Controller"
    },
    {
      "name": "ui-notification-controller",
      "description": "Ui Notification Controller"
    },
    {
      "name": "ui-o-auth-controller",
      "description": "Ui O Auth Controller"
    },
    {
      "name": "ui-one-time-webhook-controller",
      "description": "Ui One Time Webhook Controller"
    },
    {
      "name": "ui-opa-controller",
      "description": "Ui Opa Controller"
    },
    {
      "name": "ui-project-type-controller",
      "description": "Ui Project Type Controller"
    },
    {
      "name": "ui-promotion-workflow-controller",
      "description": "Ui Promotion Workflow Controller"
    },
    {
      "name": "ui-provided-resources-controller",
      "description": "Ui Provided Resources Controller"
    },
    {
      "name": "ui-queued-release-controller",
      "description": "Ui Queued Release Controller"
    },
    {
      "name": "ui-release-stream-controller",
      "description": "Ui Release Stream Controller"
    },
    {
      "name": "ui-resource-group-controller",
      "description": "Ui Resource Group Controller"
    },
    {
      "name": "ui-resource-status-controller",
      "description": "Ui Resource Status Controller"
    },
    {
      "name": "ui-settings-controller",
      "description": "Ui Settings Controller"
    },
    {
      "name": "ui-stack-controller",
      "description": "Ui Stack Controller"
    },
    {
      "name": "ui-team-controller",
      "description": "Ui Team Controller"
    },
    {
      "name": "ui-tf-module-controller",
      "description": "Ui TF Module Controller"
    },
    {
      "name": "ui-tf-output-controller",
      "description": "Ui Tf Output Controller"
    },
    {
      "name": "ui-tf-version-controller",
      "description": "Ui Tf Version Controller"
    },
    {
      "name": "ui-theme-file-controller",
      "description": "Ui Theme File Controller"
    },
    {
      "name": "ui-user-controller",
      "description": "Ui User Controller"
    },
    {
      "name": "ui-user-group-controller",
      "description": "Ui User Group Controller"
    },
    {
      "name": "ui-user-vcs-token-controller",
      "description": "Ui User VCS Token Controller"
    },
    {
      "name": "ui-versioning-controller",
      "description": "Ui Versioning Controller"
    },
    {
      "name": "ui-web-component-controller",
      "description": "Ui Web Component Controller"
    }
  ],
  "paths": {
    "/api/applicationFamilies": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationFamilies",
        "operationId": "getApplicationFamiliesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "CRM",
                  "ECOMMERCE",
                  "INTEGRATIONS",
                  "OPS"
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/api/applicationFamilies/{applicationFamily}/metadata": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "upsertApplicationFamilyMetadata",
        "operationId": "upsertApplicationFamilyMetadataUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "in": "body",
            "name": "applicationFamilyMetadata",
            "description": "applicationFamilyMetadata",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationFamilyMetadata"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationFamilyMetadata"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/applicationTypes": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationTypes",
        "operationId": "getApplicationTypesUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SERVICE",
                  "SCHEDULED_JOB",
                  "STATEFUL_SET",
                  "SERVERLESS"
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/api/buildType/{buildType}/actions": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "createGenericAction",
        "operationId": "createGenericActionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "applicationAction",
            "description": "applicationAction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationAction"
            }
          },
          {
            "name": "buildType",
            "in": "path",
            "description": "buildType",
            "required": true,
            "type": "string",
            "enum": [
              "MVN",
              "MVN_SONAR_BRANCH",
              "MVN_SONAR_BRANCH_UT_STRICT",
              "JDK11_MAVEN3",
              "JDK11_MVN3_SONAR_BRANCH",
              "JDK17_MVN3_SONAR_BRANCH",
              "JDK17_MVN3_LIBRARY_SONAR_BRANCH",
              "JAVA8_LIBRARY",
              "JAVA8_LIBRARY_SONAR_BRANCH",
              "FREESTYLE_DOCKER",
              "DOTNET_CORE",
              "MVN_IONIC",
              "MVN_IONIC_SONAR_BRANCH",
              "JDK6_MAVEN2",
              "MJ_NUGET",
              "DOTNET_CORE22",
              "DOTNET_CORE3",
              "SBT",
              "NPM",
              "NPM_SONAR_BRANCH",
              "NPM_LTS_V18_SONAR_BRANCH",
              "NPM_UI",
              "NPM_UI_SONAR_BRANCH",
              "NPM_UI_V14_SONAR_BRANCH",
              "THRIFT8_LIBRARY",
              "THRIFT9_LIBRARY",
              "THRIFT8_WITH_FLAGS_LIBRARY",
              "SCALA_LIBRARY",
              "CHEETAH_LIBRARY",
              "SHARINGAN_LIBRARY",
              "NPM_LTS_V20_SONAR_BRANCH",
              "JDK11_MVN3_LIBRARY_SONAR_BRANCH"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ApplicationAction"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/cc-users": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "createUserCC",
        "operationId": "createUserCCUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/cc/{applicationFamily}/environmentMetaData": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getCCEnvironmentMetaData",
        "operationId": "getCCEnvironmentMetaDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentMetaData"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/codebuild/builds/{codeBuildId}/refresh": {
      "put": {
        "tags": [
          "application-controller"
        ],
        "summary": "refreshBuildDetails",
        "operationId": "refreshBuildDetailsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "codeBuildId",
            "in": "path",
            "description": "codeBuildId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/ecrRegistry": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "createECRRegistry",
        "operationId": "createECRRegistryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ecrRegistry",
            "description": "ecrRegistry",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ECRRegistry"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRRegistry"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/getEcrLoginToken": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getEcrToken",
        "operationId": "getEcrTokenUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Host",
            "in": "header",
            "description": "Host",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/getRegistries": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getAllRegistries",
        "operationId": "getAllRegistriesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Registry"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/api/login": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "head": {
        "tags": [
          "application-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingHEAD",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "put": {
        "tags": [
          "application-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "delete": {
        "tags": [
          "application-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "options": {
        "tags": [
          "application-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingOPTIONS",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "patch": {
        "tags": [
          "application-controller"
        ],
        "summary": "login",
        "operationId": "loginUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "me",
        "operationId": "meUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SimpleOauth2User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/api/stats": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "globalStats",
        "operationId": "globalStatsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GlobalStats"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getUsers",
        "operationId": "getUsersUsingGET",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "createUser",
        "operationId": "createUserUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/users/{userId}": {
      "put": {
        "tags": [
          "application-controller"
        ],
        "summary": "updateUser",
        "operationId": "updateUserUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "user",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/users/{userId}/changePassword": {
      "put": {
        "tags": [
          "application-controller"
        ],
        "summary": "changePassword",
        "operationId": "changePasswordUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pwdChange",
            "description": "pwdChange",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordChange"
            }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplications",
        "operationId": "getApplicationsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Application"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "createApplication",
        "operationId": "createApplicationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "application",
            "description": "application",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "application-controller"
        ],
        "summary": "updateApplication",
        "operationId": "updateApplicationUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "application",
            "description": "application",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplication",
        "operationId": "getApplicationUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Application"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "application-controller"
        ],
        "summary": "deleteApplication",
        "operationId": "deleteApplicationUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/branches": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationBranches",
        "operationId": "getApplicationBranchesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/builds": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getBuilds",
        "operationId": "getBuildsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Build"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "build",
        "operationId": "buildUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "build",
            "description": "build",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Build"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/builds/{buildId}": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getBuild",
        "operationId": "getBuildUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildId",
            "in": "path",
            "description": "buildId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "application-controller"
        ],
        "summary": "updateBuild",
        "operationId": "updateBuildUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "build",
            "description": "build",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          {
            "name": "buildId",
            "in": "path",
            "description": "buildId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/downloadArtifacts": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "downloadTestReport",
        "operationId": "downloadTestReportUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildId",
            "in": "path",
            "description": "buildId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InputStreamResource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getBuildLogs",
        "operationId": "getBuildLogsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildId",
            "in": "path",
            "description": "buildId",
            "required": true,
            "type": "string"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenPaginatedResponse«LogEvent»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getTestBuildDetails",
        "operationId": "getTestBuildDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildId",
            "in": "path",
            "description": "buildId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestBuildDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/executedActions": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getExecutedActionsForApplication",
        "operationId": "getExecutedActionsForApplicationUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionExecution"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/images": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getImages",
        "operationId": "getImagesUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/metrics": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationMetricSummary",
        "operationId": "getApplicationMetricSummaryUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ApplicationMetrics"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/secretRequests": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationSecretRequests",
        "operationId": "getApplicationSecretRequestsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationSecretRequest"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "createAppSecretRequest",
        "operationId": "createAppSecretRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationSecretRequests",
            "description": "applicationSecretRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationSecretRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationSecretRequest"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/tags": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationTags",
        "operationId": "getApplicationTagsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/webhooks/pr/bitbucket": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "processWebhookPRBitbucket",
        "operationId": "processWebhookPRBitbucketUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Host",
            "in": "header",
            "description": "Host",
            "required": true,
            "type": "string"
          },
          {
            "name": "X-Event-Key",
            "in": "header",
            "description": "X-Event-Key",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "webhook",
            "description": "webhook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BitbucketPREvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/applications/{applicationId}/webhooks/pr/github": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "processWebhookPRGithub",
        "operationId": "processWebhookPRGithubUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Host",
            "in": "header",
            "description": "Host",
            "required": true,
            "type": "string"
          },
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "webhook",
            "description": "webhook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GithubPREvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/appmetrics": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getAllApplicationMetrics",
        "operationId": "getAllApplicationMetricsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationMetricsWrapper"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/environmentMetaData": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getEnvironmentMetaData",
        "operationId": "getEnvironmentMetaDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnvironmentMetaData"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/environments": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getEnvironments",
        "operationId": "getEnvironmentsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Environment"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "upsertEnvironment",
        "operationId": "upsertEnvironmentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "in": "body",
            "name": "environment",
            "description": "environment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/environments/{id}": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getEnvironment",
        "operationId": "getEnvironmentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/alerting": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getAlertingDetails",
        "operationId": "getAlertingDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Alerting"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "enableAlerting",
        "operationId": "enableAlertingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "application-controller"
        ],
        "summary": "disableAlerting",
        "operationId": "disableAlertingUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getCurrentDeployment",
        "operationId": "getCurrentDeploymentUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getDeploymentStatus",
        "operationId": "getDeploymentStatusUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentStatusDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/deployments": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "deploy",
        "operationId": "deployUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "deployment",
            "description": "deployment",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Deployment"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/dumps": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getDumpFileList",
        "operationId": "getDumpFileListUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "date",
            "in": "query",
            "description": "date",
            "required": false,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/dumps/download": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "downloadDumpFile",
        "operationId": "downloadDumpFileUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "description": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/InputStreamResource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/halt": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "haltApplication",
        "operationId": "haltApplicationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getMonitoringDetails",
        "operationId": "getMonitoringDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Monitoring"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "enableMonitoring",
        "operationId": "enableMonitoringUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "application-controller"
        ],
        "summary": "disableMonitoring",
        "operationId": "disableMonitoringUsingDELETE",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/podDetails": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationPodDetails",
        "operationId": "getApplicationPodDetailsUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationPodDetails"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getActionsForPod",
        "operationId": "getActionsForPodUsingGET",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "path",
            "description": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationAction"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions/executeAction": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "executeActionOnPod",
        "operationId": "executeActionOnPodUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "applicationAction",
            "description": "applicationAction",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApplicationAction"
            }
          },
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "path",
            "description": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ActionExecution"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/resume": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "resumeApplication",
        "operationId": "resumeApplicationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/secretRequests": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "summary": "getApplicationSecrets",
        "operationId": "getApplicationSecretsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationSecret"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/secrets": {
      "put": {
        "tags": [
          "application-controller"
        ],
        "summary": "updateApplicationSecrets",
        "operationId": "updateApplicationSecretsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "applicationSecrets",
            "description": "applicationSecrets",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationSecret"
              }
            }
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicationSecret"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}": {
      "delete": {
        "tags": [
          "application-controller"
        ],
        "summary": "deleteApplicationSecret",
        "operationId": "deleteApplicationSecretUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "secretName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/api/{applicationFamily}/{environment}/redeployment": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "summary": "redeploy",
        "operationId": "redeployUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationFamily",
            "in": "path",
            "description": "applicationFamily",
            "required": true,
            "type": "string",
            "enum": [
              "CRM",
              "ECOMMERCE",
              "INTEGRATIONS",
              "OPS"
            ]
          },
          {
            "name": "environment",
            "in": "path",
            "description": "environment",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/callback/sonar": {
      "post": {
        "tags": [
          "callback-controller"
        ],
        "summary": "sonarCallBack",
        "operationId": "sonarCallBackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CallbackBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getAllAccounts",
        "operationId": "getAllAccountsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/accounts/aws/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createAwsAccount",
        "operationId": "createAwsAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "awsAccountRequest",
            "description": "awsAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/aws/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "validateAwsAccount",
        "operationId": "validateAwsAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "awsAccount",
            "description": "awsAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/aws/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateAwsAccount",
        "operationId": "updateAwsAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "awsAccountRequest",
            "description": "awsAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/azure/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createAzureAccount",
        "operationId": "createAzureAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "azureAccountRequest",
            "description": "azureAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/azure/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "validateAzureAccount",
        "operationId": "validateAzureAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "azureAccount",
            "description": "azureAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/azure/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateAzureAccount",
        "operationId": "updateAzureAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "azureAccountRequest",
            "description": "azureAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/bitbucket/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createBitBucketAccount",
        "operationId": "createBitBucketAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "bitbucketAccountRequest",
            "description": "bitbucketAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/bitbucket/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "validateBitbucketAccount",
        "operationId": "validateBitbucketAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "bitBucketAccount",
            "description": "bitBucketAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/bitbucket/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateBitBucketAccount",
        "operationId": "updateBitBucketAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "bitbucketAccountRequest",
            "description": "bitbucketAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/coder/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createCoderAccount",
        "operationId": "createCoderAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "coderAccountRequest",
            "description": "coderAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/coder/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateCoderAccount",
        "operationId": "updateCoderAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "coderAccount",
            "description": "coderAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/gcp/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createGcpAccount",
        "operationId": "createGcpAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gcpAccountRequest",
            "description": "gcpAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/gcp/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "validateGcpAccount",
        "operationId": "validateGcpAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gcpAccount",
            "description": "gcpAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/gcp/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateGcpAccount",
        "operationId": "updateGcpAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gcpAccountRequest",
            "description": "gcpAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/get-organisations": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getVCSOrganisations",
        "operationId": "getVCSOrganisationsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "VCSOrganizationsRequest",
            "description": "VCSOrganizationsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VCSOrganizationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/github/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createGitHubAccount",
        "operationId": "createGitHubAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "githubAccountRequest",
            "description": "githubAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/github/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "validateGithubAccount",
        "operationId": "validateGithubAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gitHubAccount",
            "description": "gitHubAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/github/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateGitHubAccount",
        "operationId": "updateGitHubAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "githubAccountRequest",
            "description": "githubAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/gitlab/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createGitLabAccount",
        "operationId": "createGitLabAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gitlabAccountRequest",
            "description": "gitlabAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/gitlab/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "validateGitlabAccount",
        "operationId": "validateGitlabAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gitLabAccount",
            "description": "gitLabAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/gitlab/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateGitLabAccount",
        "operationId": "updateGitLabAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "gitlabAccountRequest",
            "description": "gitlabAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/kubernetes/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "createKubernetesAccount",
        "operationId": "createKubernetesAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "k8sAccountRequest",
            "description": "k8sAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/kubernetes/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "validateKubernetesAccount",
        "operationId": "validateKubernetesAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "kubernetesAccount",
            "description": "kubernetesAccount",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/kubernetes/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateKubernetesAccount",
        "operationId": "updateKubernetesAccountUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "k8sAccountRequest",
            "description": "k8sAccountRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/link-cloud": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "requestCloudAccountLinking",
        "operationId": "requestCloudAccountLinkingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "cloudLinkingRequest",
            "description": "cloudLinkingRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CloudLinkingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/link-vcs": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "requestVCSLinking",
        "operationId": "requestVCSLinkingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "vcsLinkingRequest",
            "description": "vcsLinkingRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VCSLinkingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCSLinkingResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/name/{name}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getAccountByName",
        "operationId": "getAccountByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/stack/{stackName}/token-details": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getVCSTokenDetailsByStackName",
        "operationId": "getVCSTokenDetailsByStackNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCSTokenDetailsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/token-details": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getAllVCSTokenDetails",
        "operationId": "getAllVCSTokenDetailsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VCSTokenDetailsResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/accounts/token-details/refresh": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "refreshAllVCSTokenDetails",
        "operationId": "refreshAllVCSTokenDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/accounts/type/{type}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getAccountsByType",
        "operationId": "getAccountsByTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "type",
            "required": true,
            "type": "string",
            "enum": [
              "VERSION_CONTROL",
              "CLOUD",
              "CODER"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/vcs-orgs/{accountId}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getVcsOrganizationsByAccountId",
        "operationId": "getVcsOrganizationsByAccountIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Path parameter accountId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/vcs/{id}": {
      "patch": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "updateVCSAccount",
        "operationId": "updateVCSAccountUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "vcsAccountUpdateRequest",
            "description": "vcsAccountUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/VCSAccountUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/{accountId}/workspaces/{workspace}/projects": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getBitbucketProjectsForWorkspace",
        "operationId": "getBitbucketProjectsForWorkspaceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "description": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "name": "workspace",
            "in": "path",
            "description": "workspace",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/accounts/{id}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "getAccount",
        "operationId": "getAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-accounts-controller"
        ],
        "summary": "deleteAccount",
        "operationId": "deleteAccountUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/alerts": {
      "delete": {
        "tags": [
          "ui-alerts-controller"
        ],
        "summary": "deleteAll",
        "operationId": "deleteAllUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/alerts/firing": {
      "get": {
        "tags": [
          "ui-alerts-controller"
        ],
        "summary": "getFiringAlerts",
        "operationId": "getFiringAlertsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/alerts/firing/count": {
      "get": {
        "tags": [
          "ui-alerts-controller"
        ],
        "summary": "getAlertsCount",
        "operationId": "getAlertsCountUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/alerts/firing/overview": {
      "get": {
        "tags": [
          "ui-alerts-controller"
        ],
        "summary": "getAlertsOverview",
        "operationId": "getAlertsOverviewUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AlertOverview"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/alerts/{clusterId}/all": {
      "get": {
        "tags": [
          "ui-alerts-controller"
        ],
        "summary": "getClusterAlerts",
        "operationId": "getClusterAlertsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterFiringAlertsDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifact-routing-rule": {
      "get": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "summary": "getAllArtifactRoutingRules",
        "operationId": "getAllArtifactRoutingRulesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "registrationType",
            "in": "query",
            "description": "registrationType",
            "required": false,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "query",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArtifactRoutingRuleResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "summary": "addArtifactRoutingRule",
        "operationId": "addArtifactRoutingRuleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRoutingRuleRequest",
            "description": "artifactRoutingRuleRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "summary": "updateArtifactRoutingRule",
        "operationId": "updateArtifactRoutingRuleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRoutingRuleRequest",
            "description": "artifactRoutingRuleRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifact-routing-rule/operators": {
      "get": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "summary": "getAllOperators",
        "operationId": "getAllOperatorsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "CONTAINS"
                ]
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/artifact-routing-rule/test": {
      "post": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "summary": "testRuleForBranchName",
        "operationId": "testRuleForBranchNameUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "criteria",
            "description": "criteria",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Criterion"
              }
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "metadata",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestRuleResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifact-routing-rule/{ruleId}": {
      "get": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "summary": "getArtifactRoutingRule",
        "operationId": "getArtifactRoutingRuleUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "summary": "deleteArtifactRoutingRule",
        "operationId": "deleteArtifactRoutingRuleUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "ruleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactHub/packages/{packageId}/values": {
      "get": {
        "tags": [
          "ui-artifact-hub-controller"
        ],
        "summary": "getHelmValues",
        "operationId": "getHelmValuesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "description": "packageId",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "query",
            "description": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactHub/search-packages": {
      "get": {
        "tags": [
          "ui-artifact-hub-controller"
        ],
        "summary": "searchPackages",
        "operationId": "searchPackagesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "category",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "facets",
            "in": "query",
            "description": "facets",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "offset",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "sort",
            "required": false,
            "type": "string"
          },
          {
            "name": "tsQueryWeb",
            "in": "query",
            "description": "tsQueryWeb",
            "required": false,
            "type": "string"
          },
          {
            "name": "verified",
            "in": "query",
            "description": "verified",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PackageResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getAllArtifactories",
        "operationId": "getAllArtifactoriesUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifactory"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "createECRArtifactory",
        "operationId": "createECRArtifactoryUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ecrArtifactory",
            "description": "ecrArtifactory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/link-container-registry": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "requestArtifactoryLinking",
        "operationId": "requestArtifactoryLinkingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactoryLinkingRequest",
            "description": "artifactoryLinkingRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactoryLinkingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/mirrors": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "createArtifactoryMirror",
        "operationId": "createArtifactoryMirrorUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactoryMirror",
            "description": "artifactoryMirror",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactoryMirror"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactoryMirror"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/name/{name}": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getArtifactoryByName",
        "operationId": "getArtifactoryByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifactory"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/name/{name}/repos": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getRepositoriesByArtifactoryName",
        "operationId": "getRepositoriesByArtifactoryNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactType",
            "in": "query",
            "description": "artifactType",
            "required": false,
            "type": "string",
            "default": "docker_image",
            "enum": [
              "docker_image",
              "freestyle"
            ]
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/name/{name}/tags": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getTagsByArtifactoryName",
        "operationId": "getTagsByArtifactoryNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactType",
            "in": "query",
            "description": "artifactType",
            "required": false,
            "type": "string",
            "default": "docker_image",
            "enum": [
              "docker_image",
              "freestyle"
            ]
          },
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "in": "query",
            "description": "repo",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/others": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "createBasicDockerArtifactory",
        "operationId": "createBasicDockerArtifactoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "basicDockerDTO",
            "description": "basicDockerDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicDockerDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicDockerArtifactory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/others/{artifactoryId}": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "updateBasicDockerArtifactory",
        "operationId": "updateBasicDockerArtifactoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "basicDockerDTO",
            "description": "basicDockerDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BasicDockerDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicDockerArtifactory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/stack/{stackName}": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getAllArtifactoriesForStack",
        "operationId": "getAllArtifactoriesForStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifactory"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/v2/{artifactoryId}": {
      "delete": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "deleteArtifactory",
        "operationId": "deleteArtifactoryUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getArtifactoryById",
        "operationId": "getArtifactoryByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifactory"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "updateECRArtifactory",
        "operationId": "updateECRArtifactoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ecrArtifactory",
            "description": "ecrArtifactory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "deleteECRArtifactory",
        "operationId": "deleteECRArtifactoryUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}/associate-projects": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "associateStacks",
        "operationId": "associateStacksUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "stacks",
            "description": "stacks",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}/repos": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getRepositories",
        "operationId": "getRepositoriesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}/tags": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "summary": "getTags",
        "operationId": "getTagsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          },
          {
            "name": "repo",
            "in": "query",
            "description": "repo",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactory",
            "in": "query",
            "description": "artifactory",
            "required": false,
            "type": "string"
          },
          {
            "name": "classified",
            "in": "query",
            "description": "classified",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifact"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts-ci": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "getAllArtifactsCI",
        "operationId": "getAllArtifactsCIUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArtifactCI"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "createArtifactCI",
        "operationId": "createArtifactCIUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactCI",
            "description": "artifactCI",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts-ci/blueprint/{stackName}": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "getArtifactCisByStack",
        "operationId": "getArtifactCisByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArtifactCI"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts-ci/bulk-edit-workflow": {
      "post": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "bulkEditWorkflow",
        "operationId": "bulkEditWorkflowUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "bulkWorkflowAttachRequest",
            "description": "bulkWorkflowAttachRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkWorkflowAttachRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts-ci/name/{ciName}": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "getArtifactCiByName",
        "operationId": "getArtifactCiByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ciName",
            "in": "path",
            "description": "ciName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts-ci/{ciId}": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "getArtifactCI",
        "operationId": "getArtifactCIUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ciId",
            "in": "path",
            "description": "ciId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "updateArtifactCI",
        "operationId": "updateArtifactCIUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactCI",
            "description": "artifactCI",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          {
            "name": "ciId",
            "in": "path",
            "description": "ciId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "deleteArtifactCI",
        "operationId": "deleteArtifactCIUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ciId",
            "in": "path",
            "description": "ciId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts-ci/{ciName}/artifacts": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "summary": "getArtifactsForCI",
        "operationId": "getArtifactsForCIUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "ciName",
            "in": "path",
            "description": "ciName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CiArtifactResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/attach-image-via-register": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "attachImageViaRegister",
        "operationId": "attachImageViaRegisterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageOverrideRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "getArtifactByApplicationName",
        "operationId": "getArtifactByApplicationNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "description": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "getArtifactsByResourceNameAndResourceType",
        "operationId": "getArtifactsByResourceNameAndResourceTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "updateReleaseStream",
        "operationId": "updateReleaseStreamUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "currentReleaseStream",
            "in": "path",
            "description": "currentReleaseStream",
            "required": true,
            "type": "string"
          },
          {
            "name": "excludeApps",
            "in": "query",
            "description": "excludeApps",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "includeApps",
            "in": "query",
            "description": "includeApps",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "updatedReleaseStream",
            "in": "path",
            "description": "updatedReleaseStream",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/metadata/keys": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "getMetadataKeys",
        "operationId": "getMetadataKeysUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/artifacts/promote": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "promoteArtifactByArtifactCiName",
        "operationId": "promoteArtifactByArtifactCiNameUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactId",
            "in": "query",
            "description": "artifactId",
            "required": true,
            "type": "string"
          },
          {
            "name": "ciName",
            "in": "query",
            "description": "ciName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/push": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "pushArtifact",
        "operationId": "pushArtifactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRequest",
            "description": "artifactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/pushCredentials/{stackName}/{appName}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "generateArtifactPushCredentials",
        "operationId": "generateArtifactPushCredentialsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "appName",
            "in": "path",
            "description": "appName",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRAuthorizationData"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/pushCredentialsV2/artifactName/{artifactName}/registrationType/{registrationType}/value/{registrationValue}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "generateArtifactPushCredentialsV2",
        "operationId": "generateArtifactPushCredentialsV2UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactName",
            "in": "path",
            "description": "artifactName",
            "required": true,
            "type": "string"
          },
          {
            "name": "registrationType",
            "in": "path",
            "description": "registrationType",
            "required": true,
            "type": "string"
          },
          {
            "name": "registrationValue",
            "in": "path",
            "description": "registrationValue",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRAuthorizationData"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/pushCredentialsV3/artifactName/{artifactName}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "generateArtifactPushCredentialsV3",
        "operationId": "generateArtifactPushCredentialsV3UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactName",
            "in": "path",
            "description": "artifactName",
            "required": true,
            "type": "string"
          },
          {
            "name": "metadata",
            "in": "query",
            "description": "metadata",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRAuthorizationData"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/reclassify": {
      "put": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "reclassifyArtifacts",
        "operationId": "reclassifyArtifactsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactCiId",
            "in": "query",
            "description": "artifactCiId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/register": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "registerArtifact",
        "operationId": "registerArtifactUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifact",
            "description": "artifact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifact"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/artifacts/register-by-env": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "registerArtifactByEnv",
        "operationId": "registerArtifactByEnvUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRequest",
            "description": "artifactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactByEnvironmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/register-by-release-stream": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "registerArtifactByReleaseStream",
        "operationId": "registerArtifactByReleaseStreamUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRequest",
            "description": "artifactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactByReleaseStreamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/register-saas": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "registerArtifactSaas",
        "operationId": "registerArtifactSaasUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRequest",
            "description": "artifactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaasArtifactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/registerV2": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "registerArtifactV2",
        "operationId": "registerArtifactV2UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRequest",
            "description": "artifactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ArtifactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/upload": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "uploadArtifactsZip",
        "operationId": "uploadArtifactsZipUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "formData",
            "name": "artifactRequest",
            "description": "artifactRequest",
            "required": true,
            "type": "string"
          },
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/{artifactId}": {
      "delete": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "deleteArtifact",
        "operationId": "deleteArtifactUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "description": "artifactId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/{ciId}/promote/{artifactId}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "promoteArtifact",
        "operationId": "promoteArtifactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "description": "artifactId",
            "required": true,
            "type": "string"
          },
          {
            "name": "ciId",
            "in": "path",
            "description": "ciId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/artifacts/{clusterId}": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "summary": "getArtifactByClusterId",
        "operationId": "getArtifactByClusterIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/Artifact"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/audit-logs": {
      "get": {
        "tags": [
          "ui-audit-logs-controller"
        ],
        "summary": "getAuditLogs",
        "operationId": "getAuditLogsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterName",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "entity",
            "in": "query",
            "description": "entity",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "BLUEPRINT",
                "ENVIRONMENT",
                "RESOURCE",
                "CI_INTEGRATION",
                "CI_RULE",
                "CI_CD",
                "PROMOTION_WORKFLOW",
                "RELEASE_STREAM",
                "DELIVERY_PIPELINE",
                "TRASH",
                "RELEASE_SCHEDULE",
                "AVAILABILITY_RULES",
                "TEMPLATE_INPUT",
                "SETTINGS",
                "ACCOUNT",
                "CONTAINER_REGISTRY",
                "NOTIFICATION_CHANNEL",
                "NOTIFICATION_SUBSCRIPTION",
                "OAUTH_INTEGRATION",
                "GUARDRAIL_POLICY",
                "USER",
                "USER_GROUP",
                "CUSTOM_ROLE",
                "RESOURCE_GROUP",
                "PROJECT_TYPE",
                "MODULE",
                "WEB_COMPONENT",
                "UNKNOWN"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "BLUEPRINT",
              "ENVIRONMENT",
              "RESOURCE",
              "CI_INTEGRATION",
              "CI_RULE",
              "CI_CD",
              "PROMOTION_WORKFLOW",
              "RELEASE_STREAM",
              "DELIVERY_PIPELINE",
              "TRASH",
              "RELEASE_SCHEDULE",
              "AVAILABILITY_RULES",
              "TEMPLATE_INPUT",
              "SETTINGS",
              "ACCOUNT",
              "CONTAINER_REGISTRY",
              "NOTIFICATION_CHANNEL",
              "NOTIFICATION_SUBSCRIPTION",
              "OAUTH_INTEGRATION",
              "GUARDRAIL_POLICY",
              "USER",
              "USER_GROUP",
              "CUSTOM_ROLE",
              "RESOURCE_GROUP",
              "PROJECT_TYPE",
              "MODULE",
              "WEB_COMPONENT",
              "UNKNOWN"
            ]
          },
          {
            "name": "entityAction",
            "in": "query",
            "description": "entityAction",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "BLUEPRINT_CREATE",
                "BLUEPRINT_DELETE",
                "BLUEPRINT_UPDATE",
                "BLUEPRINT_RESOURCE_CREATE",
                "BLUEPRINT_RESOURCE_UPDATE",
                "BLUEPRINT_RESOURCE_RENAME",
                "BLUEPRINT_RESOURCE_DELETE",
                "BLUEPRINT_RESOURCE_ENABLE",
                "BLUEPRINT_RESOURCE_DISABLE",
                "BLUEPRINT_ADD_TEMPLATE",
                "BLUEPRINT_SECRETS_VARIABLES_CREATE",
                "BLUEPRINT_SECRETS_VARIABLES_UPDATE",
                "BLUEPRINT_SECRETS_VARIABLES_DELETE",
                "PROJECT_TYPE_CREATE",
                "PROJECT_TYPE_UPDATE",
                "PROJECT_TYPE_DELETE",
                "MODULE_UPLOAD",
                "MODULE_MARKED_AS_PUBLISHED",
                "MODULE_DELETE",
                "ENVIRONMENT_CREATE",
                "ENVIRONMENT_DELETE",
                "ENVIRONMENT_UPDATE",
                "CI_INTEGRATION_CREATE",
                "CI_INTEGRATION_UPDATE",
                "CI_INTEGRATION_DELETE",
                "CI_CD_CONFIGURE",
                "CI_RULE_CREATE",
                "CI_RULE_UPDATE",
                "CI_RULE_DELETE",
                "PROMOTION_WORKFLOW_CREATE",
                "PROMOTION_WORKFLOW_UPDATE",
                "PROMOTION_WORKFLOW_DELETE",
                "RELEASE_STREAM_CREATE",
                "RELEASE_STREAM_DELETE",
                "DELIVERY_PIPELINE_UPDATE",
                "OVERRIDE_UPDATE",
                "OVERRIDE_VERSION_ROLLBACK",
                "SECRETS_VARIABLES_UPDATE",
                "TEMPLATE_INPUT_CREATE",
                "TEMPLATE_INPUT_DELETE",
                "IAC_VERSION_UPDATE",
                "RELEASES_PAUSE",
                "RELEASES_RESUME",
                "RELEASE_SCHEDULE_CREATE",
                "RELEASE_SCHEDULE_UPDATE",
                "RELEASE_SCHEDULE_DELETE",
                "AVAILABILITY_RULES_CREATE",
                "AVAILABILITY_RULES_UPDATE",
                "AVAILABILITY_RULES_DELETE",
                "MAINTENANCE_WINDOW_UPDATE",
                "ENVIRONMENT_SETTINGS_UPDATE",
                "GENERAL_SETTINGS_UPDATE",
                "ACCOUNT_CREATE",
                "ACCOUNT_UPDATE",
                "ACCOUNT_DELETE",
                "CONTAINER_REGISTRY_CREATE",
                "CONTAINER_REGISTRY_UPDATE",
                "CONTAINER_REGISTRY_DELETE",
                "NOTIFICATION_SUBSCRIPTION_CREATE",
                "NOTIFICATION_SUBSCRIPTION_UPDATE",
                "NOTIFICATION_SUBSCRIPTION_DELETE",
                "NOTIFICATION_CHANNEL_CREATE",
                "NOTIFICATION_CHANNEL_UPDATE",
                "NOTIFICATION_CHANNEL_DELETE",
                "OAUTH_INTEGRATION_CREATE",
                "OAUTH_INTEGRATION_UPDATE",
                "OAUTH_INTEGRATION_DELETE",
                "ENVIRONMENT_RESOURCE_DISABLE",
                "ENVIRONMENT_RESOURCE_ENABLE",
                "GUARDRAIL_POLICY_CREATE",
                "GUARDRAIL_POLICY_UPDATE",
                "GUARDRAIL_POLICY_DELETE",
                "USER_CREATE",
                "USER_UPDATE",
                "USER_DELETE",
                "USER_GROUP_CREATE",
                "USER_GROUP_UPDATE",
                "USER_GROUP_DELETE",
                "RESOURCE_GROUP_CREATE",
                "RESOURCE_GROUP_UPDATE",
                "RESOURCE_GROUP_DELETE",
                "CUSTOM_ROLE_CREATE",
                "CUSTOM_ROLE_UPDATE",
                "CUSTOM_ROLE_DELETE",
                "TRASH_RESTORE",
                "TRASH_DELETE",
                "TRASH_EMPTY",
                "WEB_COMPONENT_CREATE",
                "WEB_COMPONENT_UPDATE",
                "WEB_COMPONENT_DELETE",
                "UNKNOWN"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "BLUEPRINT_CREATE",
              "BLUEPRINT_DELETE",
              "BLUEPRINT_UPDATE",
              "BLUEPRINT_RESOURCE_CREATE",
              "BLUEPRINT_RESOURCE_UPDATE",
              "BLUEPRINT_RESOURCE_RENAME",
              "BLUEPRINT_RESOURCE_DELETE",
              "BLUEPRINT_RESOURCE_ENABLE",
              "BLUEPRINT_RESOURCE_DISABLE",
              "BLUEPRINT_ADD_TEMPLATE",
              "BLUEPRINT_SECRETS_VARIABLES_CREATE",
              "BLUEPRINT_SECRETS_VARIABLES_UPDATE",
              "BLUEPRINT_SECRETS_VARIABLES_DELETE",
              "PROJECT_TYPE_CREATE",
              "PROJECT_TYPE_UPDATE",
              "PROJECT_TYPE_DELETE",
              "MODULE_UPLOAD",
              "MODULE_MARKED_AS_PUBLISHED",
              "MODULE_DELETE",
              "ENVIRONMENT_CREATE",
              "ENVIRONMENT_DELETE",
              "ENVIRONMENT_UPDATE",
              "CI_INTEGRATION_CREATE",
              "CI_INTEGRATION_UPDATE",
              "CI_INTEGRATION_DELETE",
              "CI_CD_CONFIGURE",
              "CI_RULE_CREATE",
              "CI_RULE_UPDATE",
              "CI_RULE_DELETE",
              "PROMOTION_WORKFLOW_CREATE",
              "PROMOTION_WORKFLOW_UPDATE",
              "PROMOTION_WORKFLOW_DELETE",
              "RELEASE_STREAM_CREATE",
              "RELEASE_STREAM_DELETE",
              "DELIVERY_PIPELINE_UPDATE",
              "OVERRIDE_UPDATE",
              "OVERRIDE_VERSION_ROLLBACK",
              "SECRETS_VARIABLES_UPDATE",
              "TEMPLATE_INPUT_CREATE",
              "TEMPLATE_INPUT_DELETE",
              "IAC_VERSION_UPDATE",
              "RELEASES_PAUSE",
              "RELEASES_RESUME",
              "RELEASE_SCHEDULE_CREATE",
              "RELEASE_SCHEDULE_UPDATE",
              "RELEASE_SCHEDULE_DELETE",
              "AVAILABILITY_RULES_CREATE",
              "AVAILABILITY_RULES_UPDATE",
              "AVAILABILITY_RULES_DELETE",
              "MAINTENANCE_WINDOW_UPDATE",
              "ENVIRONMENT_SETTINGS_UPDATE",
              "GENERAL_SETTINGS_UPDATE",
              "ACCOUNT_CREATE",
              "ACCOUNT_UPDATE",
              "ACCOUNT_DELETE",
              "CONTAINER_REGISTRY_CREATE",
              "CONTAINER_REGISTRY_UPDATE",
              "CONTAINER_REGISTRY_DELETE",
              "NOTIFICATION_SUBSCRIPTION_CREATE",
              "NOTIFICATION_SUBSCRIPTION_UPDATE",
              "NOTIFICATION_SUBSCRIPTION_DELETE",
              "NOTIFICATION_CHANNEL_CREATE",
              "NOTIFICATION_CHANNEL_UPDATE",
              "NOTIFICATION_CHANNEL_DELETE",
              "OAUTH_INTEGRATION_CREATE",
              "OAUTH_INTEGRATION_UPDATE",
              "OAUTH_INTEGRATION_DELETE",
              "ENVIRONMENT_RESOURCE_DISABLE",
              "ENVIRONMENT_RESOURCE_ENABLE",
              "GUARDRAIL_POLICY_CREATE",
              "GUARDRAIL_POLICY_UPDATE",
              "GUARDRAIL_POLICY_DELETE",
              "USER_CREATE",
              "USER_UPDATE",
              "USER_DELETE",
              "USER_GROUP_CREATE",
              "USER_GROUP_UPDATE",
              "USER_GROUP_DELETE",
              "RESOURCE_GROUP_CREATE",
              "RESOURCE_GROUP_UPDATE",
              "RESOURCE_GROUP_DELETE",
              "CUSTOM_ROLE_CREATE",
              "CUSTOM_ROLE_UPDATE",
              "CUSTOM_ROLE_DELETE",
              "TRASH_RESTORE",
              "TRASH_DELETE",
              "TRASH_EMPTY",
              "WEB_COMPONENT_CREATE",
              "WEB_COMPONENT_UPDATE",
              "WEB_COMPONENT_DELETE",
              "UNKNOWN"
            ]
          },
          {
            "name": "number",
            "in": "query",
            "description": "number",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "size",
            "in": "query",
            "description": "size",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          },
          {
            "name": "stackName",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "target",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«FacetsAuditLogResponse»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/aws/clusters": {
      "post": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "summary": "Create a new Environment for a blueprint",
        "operationId": "createClusterUsingPOST2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/aws/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "summary": "configureDraftCluster",
        "operationId": "configureDraftClusterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/aws/clusters/onboard-customer": {
      "post": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "summary": "onboardCustomer",
        "operationId": "onboardCustomerUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomerOnboardRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/aws/clusters/validate-vpcId": {
      "get": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "summary": "validateVpcId",
        "operationId": "validateVpcIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "region",
            "required": true,
            "type": "string"
          },
          {
            "name": "vpcId",
            "in": "query",
            "description": "vpcId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/aws/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "summary": "getCluster",
        "operationId": "getClusterUsingGET2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "summary": "updateCluster",
        "operationId": "updateClusterUsingPUT2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/azure/clusters": {
      "post": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "summary": "createAzureCluster",
        "operationId": "createAzureClusterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/azure/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "summary": "configureDraftCluster",
        "operationId": "configureDraftClusterUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/azure/clusters/validate-vnet": {
      "get": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "summary": "validateVnet",
        "operationId": "validateVnetUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceGroup",
            "in": "query",
            "description": "resourceGroup",
            "required": true,
            "type": "string"
          },
          {
            "name": "vnet",
            "in": "query",
            "description": "vnet",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/azure/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "summary": "getAzureCluster",
        "operationId": "getAzureClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "summary": "updateAzureCluster",
        "operationId": "updateAzureClusterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/billing/buy-support-plan": {
      "post": {
        "tags": [
          "ui-billing-controller"
        ],
        "summary": "buySupportPlan",
        "operationId": "buySupportPlanUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cancelUrl",
            "in": "query",
            "description": "cancelUrl",
            "required": true,
            "type": "string"
          },
          {
            "name": "successUrl",
            "in": "query",
            "description": "successUrl",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/billing/manage-billing": {
      "get": {
        "tags": [
          "ui-billing-controller"
        ],
        "summary": "startStripeCustomerPortalSession",
        "operationId": "startStripeCustomerPortalSessionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "description": "returnUrl",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/billing/metadata": {
      "get": {
        "tags": [
          "ui-billing-controller"
        ],
        "summary": "getBillingMetadata",
        "operationId": "getBillingMetadataUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillingMetadata"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/billing/report-usage": {
      "get": {
        "tags": [
          "ui-billing-controller"
        ],
        "summary": "reportUsage",
        "operationId": "reportUsageUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/ci-cd": {
      "post": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Save CI/CD Details",
        "description": "- **Description:** Saves CI/CD configuration details. \n- **Restrictions:** Cannot change registration type after initial configuration. \n- **Permissions:** Requires `CI_CD_CONFIGURE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "saveCiCdDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ciCdDto",
            "description": "ciCdDto",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CiCdDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully saved CI/CD details."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input provided."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/ci-cd/attach": {
      "put": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Attach Rule and Workflow",
        "description": "- **Description:** Attaches a rule and workflow to an artifact CI. \n- **Restrictions:** CI must exist or will be created for the project. \n- **Permissions:** Requires `ARTIFACT_CI_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "attachRuleAndWorkflowUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "attachDetachCiRequest",
            "description": "attachDetachCiRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachDetachCiRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rule and workflow attached successfully."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/ci-cd/detach": {
      "put": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Detach Rule and Workflow",
        "description": "- **Description:** Detaches a rule and workflow from an artifact CI. \n- **Restrictions:** Existing CI registration required. \n- **Permissions:** Requires `ARTIFACT_CI_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "detachRuleAndWorkflowUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "attachDetachCiRequest",
            "description": "attachDetachCiRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AttachDetachCiRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rule and workflow detached successfully."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/ci-cd/pushCredentials": {
      "post": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Generate Artifact Push Credentials",
        "description": "- **Description:** Generates push credentials for an artifact. \n- **Restrictions:** Only for supported artifactory types. \n- **Permissions:** Requires `ARTIFACTS_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "generateArtifactPushCredentialsUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pushCredentialsRequest",
            "description": "pushCredentialsRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PushCredentialsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Credentials generated successfully.",
            "schema": {
              "$ref": "#/definitions/PushCredentialsResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/ci-cd/register": {
      "post": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Register Artifact SaaS",
        "description": "- **Description:** Registers a new artifact within the system for SaaS. \n- **Restrictions:** Valid artifactory name and consistent registration type required. Blueprint must be CI/CD configured. \n- **Permissions:** Requires `ARTIFACTS_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "registerArtifactSaasUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifactRequest",
            "description": "artifactRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaasArtifactRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Artifact registered successfully."
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input."
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Stack not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/ci-cd/{stackName}": {
      "get": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Get CI/CD Details",
        "description": "- **Description:** Retrieves CI/CD details for a specified project name. \n- **Restrictions:** Requires existing default artifact routing rule or promotion workflow. \n- **Permissions:** None required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getCiCdDetailsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved CI/CD details.",
            "schema": {
              "$ref": "#/definitions/CiCdDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project not found."
          },
          "500": {
            "description": "Internal server error."
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/chat/metadata": {
      "get": {
        "tags": [
          "ui-chat-gpt-controller"
        ],
        "summary": "Get chat starters metadata",
        "operationId": "getAllStartersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Chat metadata found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChatStarterMetadata"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/clusters/chat/{chatId}": {
      "get": {
        "tags": [
          "ui-chat-gpt-controller"
        ],
        "summary": "Get chat by ID",
        "operationId": "getChatByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "Chat ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Chat found",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Chat not found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-chat-gpt-controller"
        ],
        "summary": "Send a message to a chat",
        "operationId": "chatUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "Chat ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Chat not found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/clusterTask/disable": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "disableClusterTask",
        "operationId": "disableClusterTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "description": "taskId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterTask"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/clusterTask/enable": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "enableClusterTask",
        "operationId": "enableClusterTaskUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "description": "taskId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterTask"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/draft-cluster": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "createDraftCluster",
        "operationId": "createDraftClusterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "clusterRequest",
            "description": "clusterRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DraftClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/draft-cluster/{clusterId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "updateDraftCluster",
        "operationId": "updateDraftClusterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "clusterRequest",
            "description": "clusterRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DraftClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getNamespacesInUseByDependentClusters",
        "operationId": "getNamespacesInUseByDependentClustersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "baseClusterId",
            "in": "path",
            "description": "baseClusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getClusterCommon",
        "operationId": "getClusterCommonUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteCluster",
        "operationId": "deleteClusterUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/abort": {
      "put": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "abort",
        "operationId": "abortUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/alerts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getAlerts",
        "operationId": "getAlertsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/alerts/silence/{silenceId}": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "removeSilence",
        "operationId": "removeSilenceUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "silenceId",
            "in": "path",
            "description": "silenceId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/argo-info": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getArgoRolloutInfo",
        "operationId": "getArgoRolloutInfoUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/attach-image": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "attachImage",
        "operationId": "attachImageUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageOverrideRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/availability-schedule": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getAvailabilitySchedules",
        "operationId": "getAvailabilitySchedulesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AvailabilitySchedule"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "createAvailabilitySchedule",
        "operationId": "createAvailabilityScheduleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "schedules",
            "description": "schedules",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduleRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteAvailabilitySchedule",
        "operationId": "deleteAvailabilityScheduleUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "availabilityScheduleId",
            "in": "path",
            "description": "availabilityScheduleId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "updateAvailabilitySchedules",
        "operationId": "updateAvailabilitySchedulesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "scheduleId",
            "in": "path",
            "description": "scheduleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "schedules",
            "description": "schedules",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduleRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/branch": {
      "patch": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "updateClusterBranch",
        "operationId": "updateClusterBranchUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "req",
            "description": "req",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BranchUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/chat": {
      "get": {
        "tags": [
          "ui-chat-gpt-controller"
        ],
        "summary": "Get chats by cluster ID",
        "operationId": "getAllChatsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "Cluster ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Chats found",
            "schema": {
              "$ref": "#/definitions/Page«Chat»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-chat-gpt-controller"
        ],
        "summary": "Create a new chat",
        "operationId": "createChatUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "Cluster ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateChatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "201": {
            "description": "Chat created successfully",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/cluster-metadata": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getClusterMetadata",
        "operationId": "getClusterMetadataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterMetadata"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/clusterTask": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getClusterTask",
        "operationId": "getClusterTaskUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterTask"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/copy-configurations-selective": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "Copy configurations from one cluster to another selectively",
        "description": "Copies configurations from the source cluster to the target cluster. When mode is INCLUDE: Only specified configuration types are copied. When mode is EXCLUDE: All configuration types are copied except the specified ones.",
        "operationId": "copyConfigurationsSelectiveUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "copyConfigurationsRequest",
            "description": "Request containing source cluster ID, selection mode (INCLUDE/EXCLUDE), and set of configuration types",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CopyConfigurationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getDeployments",
        "operationId": "getDeploymentsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDeploymentsWrapper"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "createDeployment",
        "operationId": "createDeploymentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "deploymentRequest",
            "description": "deploymentRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/clean-s3-sources": {
      "delete": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "cleanS3Sources",
        "operationId": "cleanS3SourcesUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Path parameter clusterId"
          }
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/destroy": {
      "delete": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "destroyCluster",
        "operationId": "destroyClusterUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getLatestRelease",
        "operationId": "getLatestReleaseUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getLatestReleaseByApplication",
        "operationId": "getLatestReleaseByApplicationUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "description": "application",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/launch": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "launchCluster",
        "operationId": "launchClusterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/maintenance": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "triggerMaintenanceRelease",
        "operationId": "triggerMaintenanceReleaseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/overview": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getDeploymentsOverview",
        "operationId": "getDeploymentsOverviewUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentOverview"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/qa/{executionId}/abortSuite": {
      "delete": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "abortAutomationSuite",
        "operationId": "abortAutomationSuiteUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "runHotfixDeploymentRecipe",
        "operationId": "runHotfixDeploymentRecipeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allowDestroy",
            "in": "query",
            "description": "allowDestroy",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "canQueue",
            "in": "query",
            "description": "canQueue",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "comment",
            "in": "query",
            "description": "comment",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "deploymentRecipe",
            "description": "deploymentRecipe",
            "required": true,
            "schema": {
              "$ref": "#/definitions/HotfixDeploymentRecipe"
            }
          },
          {
            "name": "forceRelease",
            "in": "query",
            "description": "forceRelease",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "isPlan",
            "in": "query",
            "description": "isPlan",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "withRefresh",
            "in": "query",
            "description": "withRefresh",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/release": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "release",
        "operationId": "releaseUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allowDestroy",
            "in": "query",
            "description": "allowDestroy",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "canQueue",
            "in": "query",
            "description": "canQueue",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "comment",
            "in": "query",
            "description": "comment",
            "required": false,
            "type": "string"
          },
          {
            "name": "forceRelease",
            "in": "query",
            "description": "forceRelease",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "withRefresh",
            "in": "query",
            "description": "withRefresh",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/releaseV2/{releaseType}": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "releaseV2",
        "operationId": "releaseV2UsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allowDestroy",
            "in": "query",
            "description": "allowDestroy",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "canQueue",
            "in": "query",
            "description": "canQueue",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "comment",
            "in": "query",
            "description": "comment",
            "required": false,
            "type": "string"
          },
          {
            "name": "forceRelease",
            "in": "query",
            "description": "forceRelease",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "releaseType",
            "in": "path",
            "description": "releaseType",
            "required": true,
            "type": "string"
          },
          {
            "name": "withRefresh",
            "in": "query",
            "description": "withRefresh",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/search": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "searchDeployments",
        "operationId": "searchDeploymentsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "excludeStatus",
            "in": "query",
            "description": "excludeStatus",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "SUCCEEDED",
                "FAILED",
                "FAULT",
                "TIMED_OUT",
                "IN_PROGRESS",
                "STOPPED",
                "INVALID",
                "STARTED",
                "UNKNOWN",
                "QUEUED",
                "PENDING_APPROVAL",
                "APPROVED",
                "REJECTED"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "FAULT",
              "TIMED_OUT",
              "IN_PROGRESS",
              "STOPPED",
              "INVALID",
              "STARTED",
              "UNKNOWN",
              "QUEUED",
              "PENDING_APPROVAL",
              "APPROVED",
              "REJECTED"
            ]
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          },
          {
            "name": "releaseType",
            "in": "query",
            "description": "releaseType",
            "required": false,
            "type": "string",
            "enum": [
              "HOTFIX",
              "RELEASE",
              "LAUNCH",
              "DESTROY",
              "CUSTOM",
              "UNLOCK_STATE",
              "PLAN",
              "HOTFIX_PLAN",
              "APPLY_PLAN",
              "APPLY_HOTFIX_PLAN",
              "SCALE_UP",
              "SCALE_DOWN",
              "MAINTENANCE"
            ]
          },
          {
            "name": "signedOff",
            "in": "query",
            "description": "signedOff",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "FAULT",
              "TIMED_OUT",
              "IN_PROGRESS",
              "STOPPED",
              "INVALID",
              "STARTED",
              "UNKNOWN",
              "QUEUED",
              "PENDING_APPROVAL",
              "APPROVED",
              "REJECTED"
            ]
          },
          {
            "name": "triggeredBy",
            "in": "query",
            "description": "triggeredBy",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«DeploymentLog»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/simulate": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "simulate",
        "operationId": "simulateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeRepresentation"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/state": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getClusterState",
        "operationId": "getClusterStateUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "STOPPED",
                "RUNNING",
                "LAUNCHING",
                "DESTROYING",
                "LAUNCH_FAILED",
                "DESTROY_FAILED",
                "UNKNOWN",
                "SCALE_DOWN",
                "SCALING_DOWN",
                "SCALE_DOWN_FAILED",
                "SCALING_UP",
                "SCALE_UP_FAILED"
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/stats": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getDeploymentStats",
        "operationId": "getDeploymentStatsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "days",
            "in": "query",
            "description": "days",
            "required": false,
            "type": "integer",
            "default": 30,
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentStatsDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/unlock": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "stateUnlock",
        "operationId": "stateUnlockUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "lockId",
            "in": "query",
            "description": "lockId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getDeployment",
        "operationId": "getDeploymentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/approveRelease": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "approveRelease",
        "operationId": "approveReleaseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getDeploymentLogs",
        "operationId": "getDeploymentLogsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "type": "string"
          },
          {
            "name": "nextToken",
            "in": "query",
            "description": "nextToken",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenPaginatedResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "streamDeploymentLogs",
        "operationId": "streamDeploymentLogsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/rejectRelease": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "rejectRelease",
        "operationId": "rejectReleaseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/release-changes": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "getReleaseChanges",
        "operationId": "getReleaseChangesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReleaseChanges"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/signoff": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "summary": "signOffDeployment",
        "operationId": "signOffDeploymentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentId",
            "in": "path",
            "description": "deploymentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/detachImage": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "detachImage",
        "operationId": "detachImageUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageOverrideRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "listSnapshots",
        "operationId": "listSnapshotsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SnapshotInfo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "createSnapshot",
        "operationId": "createSnapshotUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getPinnedSnapshot",
        "operationId": "getPinnedSnapshotUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "pinSnapshot",
        "operationId": "pinSnapshotUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "snapshotInfo",
            "description": "snapshotInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/force": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteClusterForce",
        "operationId": "deleteClusterForceUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/info": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getClusterInfo",
        "operationId": "getClusterInfoUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-chat": {
      "post": {
        "tags": [
          "ui-chat-gpt-controller"
        ],
        "summary": "Ask Questions about k8s operations",
        "operationId": "getK8sChatsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "Cluster ID",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "questions",
            "description": "questions",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChatContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chats found",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Cluster not found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listConfigMapByLabels",
        "operationId": "listConfigMapByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConfigMapDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "getConfigMapData",
        "operationId": "getConfigMapDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "configMapName",
            "in": "path",
            "description": "configMapName",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listCronJobByLabels",
        "operationId": "listCronJobByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CronJobDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listDaemonSetsByLabels",
        "operationId": "listDaemonSetsByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DaemonSetDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listDeploymentsByLabels",
        "operationId": "listDeploymentsByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments/{deploymentName}": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "getPodsForDeployment",
        "operationId": "getPodsForDeploymentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentName",
            "in": "path",
            "description": "deploymentName",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listHpaByLabels",
        "operationId": "listHpaByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HorizontalPodAutoscalerDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "getAllIngressRulesForCluster",
        "operationId": "getAllIngressRulesForClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IngressRulesDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listIngressesByLabels",
        "operationId": "listIngressesByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IngressDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listJobsByLabels",
        "operationId": "listJobsByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listPodsByLabels",
        "operationId": "listPodsByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PodDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "containerLogs",
        "operationId": "containerLogsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "containerName",
            "in": "path",
            "description": "containerName",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "podName",
            "in": "path",
            "description": "podName",
            "required": true,
            "type": "string"
          },
          {
            "name": "tail",
            "in": "query",
            "description": "tail",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listPVByLabels",
        "operationId": "listPVByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersistentVolumeDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listPVCByLabels",
        "operationId": "listPVCByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersistentVolumeClaimDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listReplicasetsByLabels",
        "operationId": "listReplicasetsByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReplicasetDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listSecretsByLabels",
        "operationId": "listSecretsByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecretDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "getSecretsData",
        "operationId": "getSecretsDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "secretName",
            "in": "path",
            "description": "secretName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/services": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listServicesByLabels",
        "operationId": "listServicesByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": false,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/statefulsets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listStatefulsetsLabelsByLabels",
        "operationId": "listStatefulsetsLabelsByLabelsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatefulSetDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listEventsByK8sResource",
        "operationId": "listEventsByK8sResourceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "k8sResourceName",
            "in": "path",
            "description": "k8sResourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "k8sResourceType",
            "in": "path",
            "description": "k8sResourceType",
            "required": true,
            "type": "string",
            "enum": [
              "Deployment",
              "Pod",
              "DaemonSet",
              "StatefulSet",
              "HorizontalPodAutoscaler",
              "ReplicaSet",
              "Job",
              "CronJob",
              "Ingress",
              "PersistentVolumeClaim",
              "PersistentVolume",
              "ConfigMaps"
            ]
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "getManifest",
        "operationId": "getManifestUsingGET",
        "produces": [
          "text/plain"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "k8sResourceName",
            "in": "path",
            "description": "k8sResourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "k8sResourceType",
            "in": "path",
            "description": "k8sResourceType",
            "required": true,
            "type": "string",
            "enum": [
              "Deployment",
              "Pod",
              "DaemonSet",
              "StatefulSet",
              "HorizontalPodAutoscaler",
              "ReplicaSet",
              "Job",
              "CronJob",
              "Ingress",
              "PersistentVolumeClaim",
              "PersistentVolume",
              "ConfigMaps"
            ]
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{podName}/containers": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listContainersInPod",
        "operationId": "listContainersInPodUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "podName",
            "in": "path",
            "description": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Container"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{podName}/v2/containers": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "summary": "listContainersInPodV2",
        "operationId": "listContainersInPodV2UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "podName",
            "in": "path",
            "description": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8sCredentials": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getK8sCredentials",
        "operationId": "getK8sCredentialsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "refreshPermissions",
            "in": "query",
            "description": "refreshPermissions",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCredential"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/kubeconfig": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getKubeConfig",
        "operationId": "getKubeConfigUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/kubeconfig/refresh": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "refreshKubeConfig",
        "operationId": "refreshKubeConfigUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/kubernetes/analyze": {
      "get": {
        "tags": [
          "ui-chat-gpt-controller"
        ],
        "summary": "analyzeKubernetesCluster",
        "operationId": "analyzeKubernetesClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "filters",
            "in": "query",
            "description": "filters",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/K8sAnalyzeResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/match-modules": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getMatchedModules",
        "operationId": "getMatchedModulesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MatchedModuleDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/open-alerts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getOpenAlerts",
        "operationId": "getOpenAlertsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/overrides": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getOverrides",
        "operationId": "getOverridesUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "overrideSizing",
        "operationId": "overrideSizingUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/overrides/{resourceType}/{resourceName}": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteOverrides",
        "operationId": "deleteOverridesUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/pause-release": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "pauseRelease",
        "operationId": "pauseReleaseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "pauseReleaseRequest",
            "description": "pauseReleaseRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PauseReleaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/pods/{podName}/events": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getEvents",
        "operationId": "getEventsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "podName",
            "in": "path",
            "description": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "logs",
        "operationId": "logsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          {
            "name": "podName",
            "in": "path",
            "description": "podName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/promote": {
      "put": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "promote",
        "operationId": "promoteUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/providedResources": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getProvidedResources",
        "operationId": "getProvidedResourcesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProvidedResources"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "upsertProvidedResources",
        "operationId": "upsertProvidedResourcesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "providedResources",
            "description": "providedResources",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProvidedResources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProvidedResources"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/queued-releases/": {
      "get": {
        "tags": [
          "ui-queued-release-controller"
        ],
        "summary": "getAllQueuedReleases",
        "operationId": "getAllQueuedReleasesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueuedRelease"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/queued-releases/{queuedReleaseId}": {
      "delete": {
        "tags": [
          "ui-queued-release-controller"
        ],
        "summary": "deleteById",
        "operationId": "deleteByIdUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "queuedReleaseId",
            "in": "path",
            "description": "queuedReleaseId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resource-enable-disable": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "bulkEnableDisableResources",
        "operationId": "bulkEnableDisableResourcesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceEnableDisableRequestList",
            "description": "resourceEnableDisableRequestList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceEnableDisableRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resource-stats": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getResourceStats",
        "operationId": "getResourceStatsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlueprintFileSummaryDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceDetails": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "resourceDetails",
        "operationId": "resourceDetailsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceDetails"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/hpa": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getHPA",
        "operationId": "getHPAUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "description": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorizontalPodAutoscaler"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getIngresses",
        "operationId": "getIngressesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "description": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ingress"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "listPods",
        "operationId": "listPodsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "description": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pod"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getResourceByNameV2",
        "operationId": "getResourceByNameV2UsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/deployed-commit-id": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getDeployedCommitIdForResource",
        "operationId": "getDeployedCommitIdForResourceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/overrides": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getResourceOverrideObject",
        "operationId": "getResourceOverrideObjectUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OverrideObject"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "postResourceOverrideObject",
        "operationId": "postResourceOverrideObjectUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "doSync",
            "in": "query",
            "description": "doSync",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "in": "body",
            "name": "overrideRequest",
            "description": "overrideRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OverrideRequest"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OverrideObject"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getReleaseImpacts",
        "operationId": "getReleaseImpactsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "attribute",
            "in": "query",
            "description": "attribute",
            "required": false,
            "type": "string"
          },
          {
            "name": "changeType",
            "in": "query",
            "description": "changeType",
            "required": false,
            "type": "string",
            "enum": [
              "ADDED",
              "MODIFIED",
              "REMOVED"
            ]
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          },
          {
            "name": "releaseType",
            "in": "query",
            "description": "releaseType",
            "required": false,
            "type": "string",
            "enum": [
              "HOTFIX",
              "RELEASE",
              "LAUNCH",
              "DESTROY",
              "CUSTOM",
              "UNLOCK_STATE",
              "PLAN",
              "HOTFIX_PLAN",
              "APPLY_PLAN",
              "APPLY_HOTFIX_PLAN",
              "SCALE_UP",
              "SCALE_DOWN",
              "MAINTENANCE"
            ]
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": false,
            "type": "string",
            "format": "date-time",
            "allowEmptyValue": false,
            "x-example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "triggeredBy",
            "in": "query",
            "description": "triggeredBy",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«ResourceReleaseImpact»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getResourceHistory",
        "operationId": "getResourceHistoryUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHistory"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-out-properties": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getResourceOutProperties",
        "operationId": "getResourceOutPropertiesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceOutProperties"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/restart/{applicationName}": {
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "rollingRestart",
        "operationId": "rollingRestartUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "description": "applicationName",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "description": "labels",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/schedule": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getClusterSchedules",
        "operationId": "getClusterSchedulesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "addClusterSchedules",
        "operationId": "addClusterSchedulesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "updateClusterSchedules",
        "operationId": "updateClusterSchedulesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterScheduleId",
            "in": "path",
            "description": "clusterScheduleId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteClusterSchedule",
        "operationId": "deleteClusterScheduleUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterScheduleId",
            "in": "path",
            "description": "clusterScheduleId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/setClusterCode": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "setClusterCode",
        "operationId": "setClusterCodeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/silence-alerts": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "silenceAlerts",
        "operationId": "silenceAlertsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SilenceAlarmRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/sync-with-git": {
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "clusterSyncWithGit",
        "operationId": "clusterSyncWithGitUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "force",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/templateInputs/": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getAllTemplateInputs",
        "operationId": "getAllTemplateInputsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/StackTemplateInput"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getTemplateInputs",
        "operationId": "getTemplateInputsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "inputType",
            "in": "path",
            "description": "inputType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StackTemplateInput"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "createTemplateInputs",
        "operationId": "createTemplateInputsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "inputType",
            "in": "path",
            "description": "inputType",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "templateInputs",
            "description": "templateInputs",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StackTemplateInput"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/StackTemplateInput"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getTemplateInputByUid",
        "operationId": "getTemplateInputByUidUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "inputType",
            "in": "path",
            "description": "inputType",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "updateTemplateInput",
        "operationId": "updateTemplateInputUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "inputType",
            "in": "path",
            "description": "inputType",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "templateInput",
            "description": "templateInput",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "description": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteTemplateInputs",
        "operationId": "deleteTemplateInputsUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "inputType",
            "in": "path",
            "description": "inputType",
            "required": true,
            "type": "string"
          },
          {
            "name": "uid",
            "in": "path",
            "description": "uid",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/tfRunConfigurations": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getClusterTFDetails",
        "operationId": "getClusterTFDetailsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFRunConfigurations"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "createClusterTFDetails",
        "operationId": "createClusterTFDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "tfRunConfigurations",
            "description": "tfRunConfigurations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TFRunConfigurations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFRunConfigurations"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "updateClusterTFDetails",
        "operationId": "updateClusterTFDetailsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "tfRunConfigurations",
            "description": "tfRunConfigurations",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TFRunConfigurations"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFRunConfigurations"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteClusterTFDetails",
        "operationId": "deleteClusterTFDetailsUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFRunConfigurations"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/tools-config": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getToolsConfig",
        "operationId": "getToolsConfigUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "addToolsConfig",
        "operationId": "addToolsConfigUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "toolsConfig",
            "description": "toolsConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "deleteToolsConfig",
        "operationId": "deleteToolsConfigUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "editToolsConfig",
        "operationId": "editToolsConfigUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "toolsConfig",
            "description": "toolsConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          },
          {
            "name": "toolsConfigId",
            "in": "path",
            "description": "toolsConfigId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/validate": {
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "runValidation",
        "operationId": "runValidationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/validation-errors": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getValidations",
        "operationId": "getValidationsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/variable-counts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getVariableCounts",
        "operationId": "getVariableCountsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariableCountDto"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vars": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getVars",
        "operationId": "getVarsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vars-with-secrets": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getVarsWithSecrets",
        "operationId": "getVarsWithSecretsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vars/upsert": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "upsertVars",
        "operationId": "upsertVarsUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "clusterVars",
            "description": "clusterVars",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/varsWithStatus": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getVarsWithStatus",
        "operationId": "getVarsWithStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Variables"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vpn-profile": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "getVPNProfile",
        "operationId": "getVPNProfileUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getResourceByName",
        "operationId": "getResourceByNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "appName",
            "in": "path",
            "description": "appName",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}/overrides": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "summary": "getApplicationOverrides",
        "operationId": "getApplicationOverridesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "appName",
            "in": "path",
            "description": "appName",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/coder-eligibility": {
      "get": {
        "tags": [
          "ui-coder-controller"
        ],
        "summary": "identifyCoderLaunchEligible",
        "operationId": "identifyCoderLaunchEligibleUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderLaunchEligibilityResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/existing-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "summary": "createWorkspaceWithExistingBranch",
        "operationId": "createWorkspaceWithExistingBranchUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createWorkspaceExistingBranchRequest",
            "description": "createWorkspaceExistingBranchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceExistingBranchRequest"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/new-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "summary": "createWorkspaceWithNewBranch",
        "operationId": "createWorkspaceWithNewBranchUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createWorkspaceNewBranchRequest",
            "description": "createWorkspaceNewBranchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceNewBranchRequest"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/existing-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "summary": "createWorkspaceWithExistingBranch",
        "operationId": "createWorkspaceWithExistingBranchUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createWorkspaceExistingBranchRequest",
            "description": "createWorkspaceExistingBranchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceExistingBranchRequest"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/new-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "summary": "createWorkspaceWithNewBranch",
        "operationId": "createWorkspaceWithNewBranchUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createWorkspaceNewBranchRequest",
            "description": "createWorkspaceNewBranchRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceNewBranchRequest"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workspaces": {
      "get": {
        "tags": [
          "ui-coder-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CoderWorkspaceResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/workspaces": {
      "get": {
        "tags": [
          "ui-coder-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CoderWorkspaceResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/content/files": {
      "post": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "summary": "createContentFile",
        "operationId": "createContentFileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "contentFile",
            "description": "contentFile",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/content/files/selectors/{contentType}": {
      "get": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "summary": "getContentFilesBySelectors",
        "operationId": "getContentFilesBySelectorsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "contentType",
            "in": "path",
            "description": "contentType",
            "required": true,
            "type": "string",
            "enum": [
              "CI",
              "DOCUMENTATION"
            ]
          },
          {
            "name": "displayType",
            "in": "query",
            "description": "displayType",
            "required": false,
            "type": "string",
            "enum": [
              "INLINE",
              "TAB",
              "PAGE"
            ]
          },
          {
            "name": "resourceName",
            "in": "query",
            "description": "resourceName",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "description": "resourceType",
            "required": false,
            "type": "string"
          },
          {
            "name": "subType",
            "in": "query",
            "description": "subType",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentFile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/content/files/{contentId}": {
      "put": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "summary": "updateContentFile",
        "operationId": "updateContentFileUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "contentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updatedContent",
            "description": "updatedContent",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "summary": "deleteContentFile",
        "operationId": "deleteContentFileUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "contentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/content/files/{contentId}/render": {
      "post": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "summary": "renderContent",
        "operationId": "renderContentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "description": "contentId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/cost-explorer/aws/enabled": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "summary": "isAwsCostExplorerEnabled",
        "operationId": "isAwsCostExplorerEnabledUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "summary": "getServiceWiseCost",
        "operationId": "getServiceWiseCostUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DailyCost"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/cost-explorer/stack/{stackName}/daily-cost": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "summary": "getDailyCloudCost",
        "operationId": "getDailyCloudCostUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterIds",
            "in": "query",
            "description": "clusterIds",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "end",
            "in": "query",
            "description": "end",
            "required": true,
            "type": "string",
            "format": "date"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "start",
            "in": "query",
            "description": "start",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DailyCloudCostDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/cost-explorer/sync-cost": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "summary": "syncCloudCost",
        "operationId": "syncCloudCostUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/custom-role": {
      "get": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "summary": "getAllCustomRoles",
        "operationId": "getAllCustomRolesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleMapping"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "summary": "createCustomRole",
        "operationId": "createCustomRoleUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleMapping"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/custom-role/roles": {
      "get": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "summary": "getAllRoles",
        "operationId": "getAllRolesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleMapping"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/custom-role/{roleName}": {
      "get": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "summary": "getCustomRole",
        "operationId": "getCustomRoleUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "description": "roleName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleMapping"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "summary": "updateCustomRole",
        "operationId": "updateCustomRoleUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomRoleRequest"
            }
          },
          {
            "name": "roleName",
            "in": "path",
            "description": "roleName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleMapping"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "summary": "deleteCustomRole",
        "operationId": "deleteCustomRoleUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "description": "roleName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/delivery-pipeline/{stackName}": {
      "get": {
        "tags": [
          "ui-delivery-pipeline-controller"
        ],
        "summary": "getDeliveryPipeline",
        "operationId": "getDeliveryPipelineUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PipelineNode"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-delivery-pipeline-controller"
        ],
        "summary": "updateDeliveryPipeline",
        "operationId": "updateDeliveryPipelineUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pipelineNodes",
            "description": "pipelineNodes",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PipelineNode"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PipelineNode"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/facets-components": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getSchemaMetadata",
        "operationId": "getSchemaMetadataUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/designer/{stackName}": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "createResources",
        "operationId": "createResourcesUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resourceFileRequests",
            "description": "resourceFileRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "updateResources",
        "operationId": "updateResourcesUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resourceFileRequests",
            "description": "resourceFileRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "deleteResources",
        "operationId": "deleteResourcesUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resourceFileRequests",
            "description": "resourceFileRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch-list": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "listBranches",
        "operationId": "listBranchesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BranchDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch/{branch}": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "createResources",
        "operationId": "createResourcesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "description": "branch",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceFileRequests",
            "description": "resourceFileRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "updateResources",
        "operationId": "updateResourcesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "description": "branch",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceFileRequests",
            "description": "resourceFileRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "deleteResources",
        "operationId": "deleteResourcesUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "description": "branch",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceFileRequests",
            "description": "resourceFileRequests",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch/{branch}/rename": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "renameResource",
        "operationId": "renameResourceUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "description": "branch",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceRenameRequest",
            "description": "resourceRenameRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceRenameRequest"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch/{branch}/resource-enable-disable": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "bulkEditDisabledForResources",
        "operationId": "bulkEditDisabledForResourcesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "description": "branch",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceEnableDisableRequestList",
            "description": "resourceEnableDisableRequestList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceEnableDisableRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getModuleInputs",
        "operationId": "getModuleInputsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "flavor",
            "in": "path",
            "description": "flavor",
            "required": true,
            "type": "string"
          },
          {
            "name": "intent",
            "in": "path",
            "description": "intent",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModuleInputDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/pulls": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getPullRequests",
        "operationId": "getPullRequestsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "createdDate",
            "in": "query",
            "description": "createdDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string",
            "default": "OPEN",
            "enum": [
              "OPEN",
              "CLOSED",
              "ALL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPullRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/ref-autocomplete-data": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getAutocompleteData",
        "operationId": "getAutocompleteDataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutocompleteResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/rename": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "renameResource",
        "operationId": "renameResourceUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resourceRenameRequest",
            "description": "resourceRenameRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceRenameRequest"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/resource-enable-disable": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "bulkEditDisabledForResources",
        "operationId": "bulkEditDisabledForResourcesUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resourceEnableDisableRequestList",
            "description": "resourceEnableDisableRequestList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceEnableDisableRequest"
              }
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "Get add ons for this resource",
        "operationId": "getAddOnModulesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cloud",
            "in": "query",
            "description": "cloud",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddOnDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "listBranches",
        "operationId": "listBranchesUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getPullRequests",
        "operationId": "getPullRequestsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "createdDate",
            "in": "query",
            "description": "createdDate",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "query",
            "in": "query",
            "description": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "description": "state",
            "required": false,
            "type": "string",
            "default": "OPEN",
            "enum": [
              "OPEN",
              "CLOSED",
              "ALL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPullRequestResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getWorkflowRuns",
        "operationId": "getWorkflowRunsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "actor",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch",
            "in": "query",
            "description": "branch",
            "required": false,
            "type": "string"
          },
          {
            "name": "event",
            "in": "query",
            "description": "event",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "description": "workflowId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListWorkflowRunsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflows": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getWorkflows",
        "operationId": "getWorkflowsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/variables": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "addVariables",
        "operationId": "addVariablesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "variables",
            "description": "variables",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/VariableDetails"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "updateVariables",
        "operationId": "updateVariablesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "variables",
            "description": "variables",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/VariableDetails"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "deleteVariables",
        "operationId": "deleteVariablesUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "variables",
            "description": "variables",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/workflow-runs": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getWorkflowRuns",
        "operationId": "getWorkflowRunsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "actor",
            "in": "query",
            "description": "actor",
            "required": false,
            "type": "string"
          },
          {
            "name": "branch",
            "in": "query",
            "description": "branch",
            "required": false,
            "type": "string"
          },
          {
            "name": "event",
            "in": "query",
            "description": "event",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "description": "pageNumber",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "pageSize",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "status",
            "required": false,
            "type": "string"
          },
          {
            "name": "workflowId",
            "in": "query",
            "description": "workflowId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListWorkflowRunsResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/workflows": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getWorkflows",
        "operationId": "getWorkflowsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/{branchName}/files": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "getDesignerResources",
        "operationId": "getDesignerResourcesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branchName",
            "in": "path",
            "description": "branchName",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/{branch}/create-branch": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "createBranch",
        "operationId": "createBranchUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "description": "branch",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{stackName}/{templateName}/apply": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "applyTemplate",
        "operationId": "applyTemplateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "description": "prefix",
            "required": false,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "suffix",
            "in": "query",
            "description": "suffix",
            "required": false,
            "type": "string"
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "templateName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/designer/{templateName}/sync": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "syncSpecifiedBlueprintsWithTemplates",
        "operationId": "syncSpecifiedBlueprintsWithTemplatesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "blueprintNames",
            "description": "blueprintNames",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "templateName",
            "in": "path",
            "description": "templateName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}": {
      "get": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "summary": "getAllDomains",
        "operationId": "getAllDomainsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DomainDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "summary": "addDomainMapping",
        "operationId": "addDomainMappingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "domain",
            "description": "domain",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainDTO"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "summary": "updateDomainMapping",
        "operationId": "updateDomainMappingUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "domain",
            "description": "domain",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DomainDTO"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "summary": "deleteDomainMapping",
        "operationId": "deleteDomainMappingUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "alias",
            "in": "query",
            "description": "alias",
            "required": true,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/cluster/{clusterId}/resources": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getAllResources",
        "operationId": "getAllResourcesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "excludeSubstackResources",
            "in": "query",
            "description": "excludeSubstackResources",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/cluster/{clusterId}/resources-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getAllResourcesByCluster",
        "operationId": "getAllResourcesByClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "excludeAddOns",
            "in": "query",
            "description": "excludeAddOns",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeContent",
            "in": "query",
            "description": "includeContent",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeSubstack",
            "in": "query",
            "description": "includeSubstack",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getResourceByClusterId",
        "operationId": "getResourceByClusterIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "includeContent",
            "in": "query",
            "description": "includeContent",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlueprintFile"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/file": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getFileFromFacetsModules",
        "operationId": "getFileFromFacetsModulesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "fileName",
            "in": "query",
            "description": "fileName",
            "required": true,
            "type": "string"
          },
          {
            "name": "path",
            "in": "query",
            "description": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/getAllPermissions": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getAllPermissions",
        "operationId": "getAllPermissionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RBACEntity"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/dropdown/logs/cluster/{clusterId}": {
      "post": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "syncClusterHistory",
        "operationId": "syncClusterHistoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "force",
            "in": "query",
            "description": "force",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/logs/cluster/{clusterId}/resourceName/{resourceName}/resourceType/{resourceType}": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getGitHistoryForResource",
        "operationId": "getGitHistoryForResourceUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackGitLog"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/logs/substack": {
      "post": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "syncSubstackGitHistory",
        "operationId": "syncSubstackGitHistoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "forceSync",
            "in": "query",
            "description": "forceSync",
            "required": true,
            "type": "boolean"
          },
          {
            "name": "substackName",
            "in": "query",
            "description": "substackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/releaseStreams": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getReleaseStreams",
        "operationId": "getReleaseStreamsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/dropdown/rolePermissions/{role}": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getRolePermissions",
        "operationId": "getRolePermissionsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "description": "role",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RBACEntity"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getAllResourcesForAllClusterOfStack",
        "operationId": "getAllResourcesForAllClusterOfStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "excludeAddOns",
            "in": "query",
            "description": "excludeAddOns",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterResourcesResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/resources-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getAllResourcesByStack",
        "operationId": "getAllResourcesByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "query",
            "description": "branch",
            "required": false,
            "type": "string"
          },
          {
            "name": "excludeAddOns",
            "in": "query",
            "description": "excludeAddOns",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeContent",
            "in": "query",
            "description": "includeContent",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getServiceOverview",
        "operationId": "getServiceOverviewUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "serviceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceOverview"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getAllClusterResourcesByStack",
        "operationId": "getAllClusterResourcesByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getResourceByStack",
        "operationId": "getResourceByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "branch",
            "in": "query",
            "description": "branch",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlueprintFile"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/vcs": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getAllVCS",
        "operationId": "getAllVCSUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/dropdown/{cloud}/regions": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getRegions",
        "operationId": "getRegionsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cloud",
            "in": "path",
            "description": "cloud",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllRegionsAndAZ"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getLaunchDAG",
        "operationId": "getLaunchDAGUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cloud",
            "in": "path",
            "description": "cloud",
            "required": true,
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "isDependent",
            "in": "query",
            "description": "isDependent",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "isProvidedK8s",
            "in": "query",
            "description": "isProvidedK8s",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/{clusterId}/{resourceType}": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getApplicationListByClusterIdAndResourceName",
        "operationId": "getApplicationListByClusterIdAndResourceNameUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/{stackName}/output/{outputType}/references": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getOutputReferences",
        "operationId": "getOutputReferencesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "outputType",
            "in": "path",
            "description": "outputType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutputReference"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getResourceHistoriesByStack",
        "operationId": "getResourceHistoriesByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceHistory"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history-overview": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "summary": "getResourceHistoryOverviewByStack",
        "operationId": "getResourceHistoryOverviewByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceHistoryOverview"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/gcp/clusters": {
      "post": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "summary": "createGCPCluster",
        "operationId": "createGCPClusterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/gcp/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "summary": "configureDraftCluster",
        "operationId": "configureDraftClusterUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/gcp/clusters/validate-vpcId": {
      "get": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "summary": "validateVpcId",
        "operationId": "validateVpcIdUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "description": "accountId",
            "required": true,
            "type": "string"
          },
          {
            "name": "vpcId",
            "in": "query",
            "description": "vpcId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/gcp/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "summary": "getGCPCluster",
        "operationId": "getGCPClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "summary": "updateGCPCluster",
        "operationId": "updateGCPClusterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/iac/repo": {
      "get": {
        "tags": [
          "ui-iac-repo-controller"
        ],
        "summary": "getAllIacRepos",
        "operationId": "getAllIacReposUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IacRepo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-iac-repo-controller"
        ],
        "summary": "createIacRepo",
        "operationId": "createIacRepoUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "iacRepo",
            "description": "iacRepo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IacRepo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IacRepo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/iac/repo/{id}": {
      "get": {
        "tags": [
          "ui-iac-repo-controller"
        ],
        "summary": "getIacRepoById",
        "operationId": "getIacRepoByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IacRepo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-iac-repo-controller"
        ],
        "summary": "updateIacRepo",
        "operationId": "updateIacRepoUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updatedIacRepo",
            "description": "updatedIacRepo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IacRepo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IacRepo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-iac-repo-controller"
        ],
        "summary": "deleteIacRepo",
        "operationId": "deleteIacRepoUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/intents": {
      "get": {
        "tags": [
          "ui-intent-controller"
        ],
        "summary": "getAllIntents",
        "operationId": "getAllIntentsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IntentResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-intent-controller"
        ],
        "summary": "createOrUpdateIntent",
        "operationId": "createOrUpdateIntentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestDTO",
            "description": "requestDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/IntentRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IntentResponseDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/intents/{name}": {
      "delete": {
        "tags": [
          "ui-intent-controller"
        ],
        "summary": "deleteIntent",
        "operationId": "deleteIntentUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/kubernetes/clusters": {
      "post": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "summary": "createK8sCluster",
        "operationId": "createK8sClusterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/kubernetes/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "summary": "createDraftCluster",
        "operationId": "createDraftClusterUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/kubernetes/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "summary": "getK8sCluster",
        "operationId": "getK8sClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "summary": "updateK8sCluster",
        "operationId": "updateK8sClusterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/KubernetesClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/local/clusters": {
      "post": {
        "tags": [
          "ui-local-cluster-controller"
        ],
        "summary": "Create a new Environment for a blueprint",
        "operationId": "createClusterUsingPOST3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocalCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/local/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-local-cluster-controller"
        ],
        "summary": "getCluster",
        "operationId": "getClusterUsingGET3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocalCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-local-cluster-controller"
        ],
        "summary": "updateCluster",
        "operationId": "updateClusterUsingPUT3",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LocalClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LocalCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/local/clusters/{clusterId}/vagrant": {
      "get": {
        "tags": [
          "ui-local-cluster-controller"
        ],
        "summary": "getVagrant",
        "operationId": "getVagrantUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/maintenance-window": {
      "put": {
        "tags": [
          "ui-maintenance-window-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "maintenanceWindowDTO",
            "description": "maintenanceWindowDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/maintenance-window/{clusterId}": {
      "get": {
        "tags": [
          "ui-maintenance-window-controller"
        ],
        "summary": "getByClusterId",
        "operationId": "getByClusterIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/maintenance-window/{clusterId}/enable-disable": {
      "put": {
        "tags": [
          "ui-maintenance-window-controller"
        ],
        "summary": "enableDisable",
        "operationId": "enableDisableUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "disabled",
            "in": "query",
            "description": "disabled",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/meta/components/supportedVersion": {
      "get": {
        "tags": [
          "ui-meta-controller"
        ],
        "summary": "getSupportedComponentVersions",
        "operationId": "getSupportedComponentVersionsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupportedVersions"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/meta/components/{componentType}/supportedVersion": {
      "get": {
        "tags": [
          "ui-meta-controller"
        ],
        "summary": "getSupportedComponentVersion",
        "operationId": "getSupportedComponentVersionUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "componentType",
            "in": "path",
            "description": "componentType",
            "required": true,
            "type": "string",
            "enum": [
              "KUBERNETES"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupportedVersions"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/meta/cpAccount": {
      "get": {
        "tags": [
          "ui-meta-controller"
        ],
        "summary": "getCPAccount",
        "operationId": "getCPAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/modules": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "getAllModules",
        "operationId": "getAllModulesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModuleListResponseDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/modules/all": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Get All Modules",
        "description": "- **Description:** Retrieves all modules with optional filtering.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getAllUsingGET_4",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allowPreviewModules",
            "in": "query",
            "description": "allowPreviewModules",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "includeFacetsYaml",
            "in": "query",
            "description": "includeFacetsYaml",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "withPathOnly",
            "in": "query",
            "description": "withPathOnly",
            "required": false,
            "type": "boolean",
            "default": false
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModule"
              }
            }
          },
          "400": {
            "description": "Invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/bootstrap": {
      "post": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Bootstrap Modules",
        "description": "- **Description:** Bootstraps modules for initialization.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "bootstrapModulesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Get Add-On Modules",
        "description": "- **Description:** Retrieves all add-on modules based on intent and flavor, optionally by cloud.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getIntentAddOnModulesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "cloud",
            "in": "query",
            "description": "cloud",
            "required": false,
            "type": "string"
          },
          {
            "name": "flavor",
            "in": "path",
            "description": "flavor",
            "required": true,
            "type": "string"
          },
          {
            "name": "intent",
            "in": "path",
            "description": "intent",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModuleLiteDTO"
              }
            }
          },
          "400": {
            "description": "Invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/version/{version}/mark-published": {
      "post": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Mark Module as Published",
        "description": "- **Description:** Marks a specific module version as published.\n- **Permissions:** Requires MODULE_WRITE permission. \n- **Audit Logging:** Yes",
        "operationId": "markAsPublishedUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "flavor",
            "in": "path",
            "description": "flavor",
            "required": true,
            "type": "string"
          },
          {
            "name": "intent",
            "in": "path",
            "description": "intent",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/modules-lite": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "getAllModulesLite",
        "operationId": "getAllModulesLiteUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "allowPreviewModules",
            "in": "query",
            "description": "allowPreviewModules",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "clouds",
            "in": "query",
            "description": "clouds",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "AWS",
                "AZURE",
                "LOCAL",
                "GCP",
                "KUBERNETES"
              ]
            },
            "collectionFormat": "multi",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModuleLiteDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/stack/{stackName}/grouped": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Get Grouped Modules for Stack",
        "description": "- **Description:** Retrieves grouped modules specifically for a stack name.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getGroupedModulesForStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/ListResourcesResponse"
            }
          },
          "400": {
            "description": "Invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/stack/{stackName}/{intent}/{flavor}/{version}/fields": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Get facets.yaml by Stack",
        "description": "- **Description:** Retrieves facets.yaml by stack information.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getFacetsYamlByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "flavor",
            "in": "path",
            "description": "flavor",
            "required": true,
            "type": "string"
          },
          {
            "name": "intent",
            "in": "path",
            "description": "intent",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "400": {
            "description": "Invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/stack/{stackName}/{intent}/{flavor}/{version}/module": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "getModuleForIFVAndStack",
        "operationId": "getModuleForIFVAndStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "flavor",
            "in": "path",
            "description": "flavor",
            "required": true,
            "type": "string"
          },
          {
            "name": "intent",
            "in": "path",
            "description": "intent",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModuleResponseDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/upload": {
      "post": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Upload a module",
        "description": "- **Description:** Uploads a module using a file.\n- **Permissions:** Requires MODULE_WRITE permission.\n- **Parameters:**\n - `file`: The module file to upload\n - `metadata` (optional): Additional module metadata including:\n - `gitUrl`: Web URL of the git repository (Expected to embed the commit id)\n - `gitRef`: Git reference (branch, tag, or commit)\n - `isFeatureBranch`: If this is true, this preview module cannot be directly marked as published until we register the module again with this as false.\n- **Audit Logging:** Yes",
        "operationId": "uploadModuleUsingPOST",
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "file",
            "in": "formData",
            "description": "file",
            "required": true,
            "type": "file"
          },
          {
            "in": "formData",
            "name": "metadata",
            "description": "metadata",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/version/{versionId}/download": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "downloadModuleByVersionId",
        "operationId": "downloadModuleByVersionIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "description": "versionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/{id}": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Get Module by ID",
        "description": "- **Description:** Retrieves a module by its ID.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/TFModuleResponseDTO"
            }
          },
          "400": {
            "description": "Invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Delete a Module",
        "description": "- **Description:** Deletes a module by ID.\n- **Permissions:** Requires MODULE_DELETE permission. \n- **Audit Logging:** Yes",
        "operationId": "deleteTfModuleUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Invalid input parameters"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Entity not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/{id}/download": {
      "get": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "downloadModuleById",
        "operationId": "downloadModuleByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/modules/{id}/mark-published": {
      "post": {
        "tags": [
          "ui-tf-module-controller"
        ],
        "summary": "Mark Module as Published",
        "description": "- **Description:** Marks a specific module version as published.\n- **Permissions:** Requires MODULE_WRITE permission. \n- **Audit Logging:** Yes",
        "operationId": "markAsPublishedByIdUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/channelTypes": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getAllChannelTypes",
        "operationId": "getAllChannelTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelTypePayload"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/notification/channels": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getAllChannels",
        "operationId": "getAllChannelsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "createNotificationChannel",
        "operationId": "createNotificationChannelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "nc",
            "description": "nc",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/channels/test": {
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "testNotificationChannel",
        "operationId": "testNotificationChannelUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "testNotificationRequest",
            "description": "testNotificationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TestNotificationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/channels/{channelId}": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getChannel",
        "operationId": "getChannelUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationChannel"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "editNotificationChannel",
        "operationId": "editNotificationChannelUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "nc",
            "description": "nc",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "deleteNotificationChannel",
        "operationId": "deleteNotificationChannelUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "description": "channelId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/notificationTags": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getAllNotificationTags",
        "operationId": "getAllNotificationTagsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTagPayload"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/notification/notificationType/{notificationType}/attributes": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getSubscriptionAttributes",
        "operationId": "getSubscriptionAttributesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "notificationType",
            "in": "path",
            "description": "notificationType",
            "required": true,
            "type": "string",
            "enum": [
              "DEPLOYMENT_STATUS_UPDATE",
              "APP_DEPLOYMENT",
              "QASUITE_SANITY",
              "DR_RESULT",
              "STACK_SIGNOFF",
              "ALERT",
              "TEST",
              "APPLICATION_DEPLOYMENT_COMPLETE",
              "ENVIRONMENT_CREATE",
              "ENVIRONMENT_DELETE",
              "ENVIRONMENT_LAUNCH",
              "ENVIRONMENT_DESTROY",
              "ENVIRONMENT_CONFIGURE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/notificationTypes": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getAllNotificationTypes",
        "operationId": "getAllNotificationTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTypeResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/notification/subscriptions": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getAllSubscriptions",
        "operationId": "getAllSubscriptionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "createSubscription",
        "operationId": "createSubscriptionUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "subscription",
            "description": "subscription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getSubscription",
        "operationId": "getSubscriptionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscriptionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "editSubscription",
        "operationId": "editSubscriptionUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "subscription",
            "description": "subscription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscriptionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "deleteSubscription",
        "operationId": "deleteSubscriptionUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "subscriptionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/": {
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getFiltersForSubscriptions",
        "operationId": "getFiltersForSubscriptionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "filterParams",
            "description": "filterParams",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "notificationType",
            "in": "path",
            "description": "notificationType",
            "required": true,
            "type": "string",
            "enum": [
              "DEPLOYMENT_STATUS_UPDATE",
              "APP_DEPLOYMENT",
              "QASUITE_SANITY",
              "DR_RESULT",
              "STACK_SIGNOFF",
              "ALERT",
              "TEST",
              "APPLICATION_DEPLOYMENT_COMPLETE",
              "ENVIRONMENT_CREATE",
              "ENVIRONMENT_DELETE",
              "ENVIRONMENT_LAUNCH",
              "ENVIRONMENT_DESTROY",
              "ENVIRONMENT_CONFIGURE"
            ]
          },
          {
            "name": "tagName",
            "in": "path",
            "description": "tagName",
            "required": true,
            "type": "string",
            "enum": [
              "CLUSTER_NAME",
              "CLUSTER_TYPE",
              "QASUITE_RESULT",
              "DR_ACTION",
              "DR_STATUS",
              "STACK_NAME",
              "SEVERITY",
              "ALERT_NAME",
              "DEPLOYMENT_STATUS",
              "APPLICATION_NAME",
              "SEND_RESOLVED",
              "RELEASE_TYPE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagDataModel"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/notification/{notificationType}/tags": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "summary": "getNotificationTagsForNotificationType",
        "operationId": "getNotificationTagsForNotificationTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "notificationType",
            "in": "path",
            "description": "notificationType",
            "required": true,
            "type": "string",
            "enum": [
              "DEPLOYMENT_STATUS_UPDATE",
              "APP_DEPLOYMENT",
              "QASUITE_SANITY",
              "DR_RESULT",
              "STACK_SIGNOFF",
              "ALERT",
              "TEST",
              "APPLICATION_DEPLOYMENT_COMPLETE",
              "ENVIRONMENT_CREATE",
              "ENVIRONMENT_DELETE",
              "ENVIRONMENT_LAUNCH",
              "ENVIRONMENT_DESTROY",
              "ENVIRONMENT_CONFIGURE"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTagsForTypeResult"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/oauth": {
      "get": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "summary": "getAllIntegrations",
        "operationId": "getAllIntegrationsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "summary": "addIntegrations",
        "operationId": "addIntegrationsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomOAuth2ClientRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/oauth/generic-oauth-integration": {
      "post": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "summary": "addGenericOAuthIntegration",
        "operationId": "addGenericOAuthIntegrationUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericOAuth2ClientRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "summary": "editGenericOAuthIntegration",
        "operationId": "editGenericOAuthIntegrationUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GenericOAuth2ClientRegistration"
            }
          },
          {
            "name": "registrationId",
            "in": "query",
            "description": "registrationId",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/oauth/{registrationId}": {
      "put": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "summary": "updateIntegrations",
        "operationId": "updateIntegrationsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "client",
            "description": "client",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CustomOAuth2ClientRegistration"
            }
          },
          {
            "name": "registrationId",
            "in": "path",
            "description": "registrationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "summary": "deleteIntegrations",
        "operationId": "deleteIntegrationsUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "description": "registrationId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/onetime-webhook/poll/{webhookId}": {
      "get": {
        "tags": [
          "ui-one-time-webhook-controller"
        ],
        "summary": "pollWebhook",
        "operationId": "pollWebhookUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "description": "webhookId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/onetime-webhook/register": {
      "post": {
        "tags": [
          "ui-one-time-webhook-controller"
        ],
        "summary": "registerWebhook",
        "operationId": "registerWebhookUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "webhook",
            "description": "webhook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/opa": {
      "get": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "getAllPolicies",
        "operationId": "getAllPoliciesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpaPolicy"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/opa/enable-disable-policies": {
      "post": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "bulkEditOpaPolicyState",
        "operationId": "bulkEditOpaPolicyStateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "enableDisableOPAPoliciesList",
            "description": "enableDisableOPAPoliciesList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnableDisableOPAPolicy"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/opa/policy-templates": {
      "get": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "getAllPolicyTemplates",
        "operationId": "getAllPolicyTemplatesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyTemplateDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/opa/{policyName}": {
      "get": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "getPolicy",
        "operationId": "getPolicyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "policyName",
            "in": "path",
            "description": "policyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicy"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "createPolicy",
        "operationId": "createPolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "opaRequest",
            "description": "opaRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpaPolicyRequest"
            }
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "policyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicy"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "editPolicy",
        "operationId": "editPolicyUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "opaRequest",
            "description": "opaRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OpaPolicyRequest"
            }
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "policyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicy"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "deletePolicy",
        "operationId": "deletePolicyUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "policyName",
            "in": "path",
            "description": "policyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/opa/{policyName}/execute": {
      "post": {
        "tags": [
          "ui-opa-controller"
        ],
        "summary": "executePolicy",
        "operationId": "executePolicyUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "inputJson",
            "description": "inputJson",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "policyName",
            "in": "path",
            "description": "policyName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicyExecutionResult"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/project-types": {
      "get": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Get all project types",
        "description": "- **Description:** Retrieve a list of all existing project types. \n- **Restrictions:** None. \n- **Permissions:** No specific permissions required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getAllProjectTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTypeResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Add a new project type",
        "description": "- **Description:** Creates a new project type from the provided request details. \n- **Restrictions:** Only users with the appropriate permissions can add project types. \n- **Permissions:** Requires `PROJECT_TYPE_WRITE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "addProjectTypeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "projectTypeRequest",
            "description": "projectTypeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project type created successfully",
            "schema": {
              "$ref": "#/definitions/ProjectTypeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/project-types/{id}": {
      "get": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Get project type by ID",
        "description": "- **Description:** Retrieve a specific project type by its ID. \n- **Restrictions:** None. \n- **Permissions:** No specific permissions required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getProjectTypeByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectTypeResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project type not found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Update an existing project type",
        "description": "- **Description:** Updates details of a specified project type by its ID. \n- **Restrictions:** Only users with the correct permissions can update project types. \n- **Permissions:** Requires `PROJECT_TYPE_WRITE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "updateProjectTypeUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "projectTypeRequest",
            "description": "projectTypeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProjectTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project type updated successfully",
            "schema": {
              "$ref": "#/definitions/ProjectTypeResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Invalid request or project ID"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project type not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Delete a project type",
        "description": "- **Description:** Deletes an existing project type based on its ID. \n- **Restrictions:** Only users with the correct RBAC permission can delete a project type. \n- **Permissions:** Requires `PROJECT_TYPE_DELETE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "deleteProjectTypeUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Project type deleted successfully"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Project type not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/provided-resources/cluster/{clusterId}/resource-type/{resourceType}/resource-name/{resourceName}": {
      "get": {
        "tags": [
          "ui-provided-resources-controller"
        ],
        "summary": "getProvidedResourcesInfo",
        "operationId": "getProvidedResourcesInfoUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetProvidedResourcesResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/provided-resources/{clusterId}": {
      "post": {
        "tags": [
          "ui-provided-resources-controller"
        ],
        "summary": "saveProvidedResourcesDetails",
        "operationId": "saveProvidedResourcesDetailsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "saveProvidedResourcesRequest",
            "description": "saveProvidedResourcesRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveProvidedResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/release-stream": {
      "get": {
        "tags": [
          "ui-release-stream-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET_3",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "query",
            "description": "stackName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseStreamResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-release-stream-controller"
        ],
        "summary": "add",
        "operationId": "addUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "releaseStreamRequest",
            "description": "releaseStreamRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReleaseStreamRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReleaseStream"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/release-stream/{name}": {
      "delete": {
        "tags": [
          "ui-release-stream-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/resource-groups": {
      "get": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "findAll",
        "operationId": "findAllUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "create",
        "operationId": "createUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resourceGroupRequest",
            "description": "resourceGroupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/resource-groups/me": {
      "get": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "getResourceGroupsForSessionUser",
        "operationId": "getResourceGroupsForSessionUserUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/resource-groups/{resourceGroupId}": {
      "get": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "getResourceGroup",
        "operationId": "getResourceGroupUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "description": "resourceGroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "description": "resourceGroupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceGroupRequest",
            "description": "resourceGroupRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "description": "resourceGroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/resource-groups/{resourceGroupId}/resources": {
      "put": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "updateAllResources",
        "operationId": "updateAllResourcesUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "allResourcesUpdateRequest",
            "description": "allResourcesUpdateRequest",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceInfo"
              }
            }
          },
          {
            "name": "resourceGroupId",
            "in": "path",
            "description": "resourceGroupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "patch": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "summary": "updateResource",
        "operationId": "updateResourceUsingPATCH",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "description": "resourceGroupId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "resourceUpdateRequest",
            "description": "resourceUpdateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/resources/sync": {
      "post": {
        "tags": [
          "ui-resource-status-controller"
        ],
        "summary": "syncResource",
        "operationId": "syncResourceUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceSyncRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceStatusResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/resources/{clusterId}/release-preview": {
      "get": {
        "tags": [
          "ui-resource-status-controller"
        ],
        "summary": "getReleasePreview",
        "operationId": "getReleasePreviewUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReleasePreviewResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/resources/{projectName}/{environmentName}/status": {
      "get": {
        "tags": [
          "ui-resource-status-controller"
        ],
        "summary": "getResourceStatus",
        "operationId": "getResourceStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "environmentName",
            "in": "path",
            "description": "environmentName",
            "required": true,
            "type": "string"
          },
          {
            "name": "projectName",
            "in": "path",
            "description": "projectName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resources",
            "in": "query",
            "description": "resources",
            "required": true,
            "items": {
              "type": "string"
            },
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/settings/entity/{entity}": {
      "get": {
        "tags": [
          "ui-settings-controller"
        ],
        "summary": "getAllSettingsForEntity",
        "operationId": "getAllSettingsForEntityUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "description": "entity",
            "required": true,
            "type": "string",
            "enum": [
              "CLUSTER",
              "BLUE_PRINT",
              "TEMPLATE_INPUT",
              "CONTROL_PLANE",
              "IAC",
              "ARTIFACT_CI",
              "USER_GROUP",
              "ACCOUNT",
              "ARTIFACTORY"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Setting"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/settings/onboarding-display/{value}": {
      "put": {
        "tags": [
          "ui-settings-controller"
        ],
        "summary": "setOnboardingDisplay",
        "operationId": "setOnboardingDisplayUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "description": "value",
            "required": true,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/settings/ui-yaml": {
      "get": {
        "tags": [
          "ui-settings-controller"
        ],
        "summary": "getAllSettingsYaml",
        "operationId": "getAllSettingsYamlUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/settings/value/{entityType}/{entityId}": {
      "get": {
        "tags": [
          "ui-settings-controller"
        ],
        "summary": "getSettingValue",
        "operationId": "getSettingValueUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string",
            "enum": [
              "CLUSTER",
              "BLUE_PRINT",
              "TEMPLATE_INPUT",
              "CONTROL_PLANE",
              "IAC",
              "ARTIFACT_CI",
              "USER_GROUP",
              "ACCOUNT",
              "ARTIFACTORY"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-settings-controller"
        ],
        "summary": "addSettingValue",
        "operationId": "addSettingValueUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "string"
          },
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string",
            "enum": [
              "CLUSTER",
              "BLUE_PRINT",
              "TEMPLATE_INPUT",
              "CONTROL_PLANE",
              "IAC",
              "ARTIFACT_CI",
              "USER_GROUP",
              "ACCOUNT",
              "ARTIFACTORY"
            ]
          },
          {
            "in": "body",
            "name": "settingValueRequest",
            "description": "settingValueRequest",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getStacks",
        "operationId": "getStacksUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Stack"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "createStack",
        "operationId": "createStackUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "stack",
            "description": "stack",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/clusterTask": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "createClusterTasks",
        "operationId": "createClusterTasksUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "taskRequest",
            "description": "taskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterTask"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/clusterTask/{stackName}": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getAllClusterTasks",
        "operationId": "getAllClusterTasksUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterTask"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/clusters": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getAllClusters",
        "operationId": "getAllClustersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "perPage",
            "required": false,
            "type": "integer",
            "default": 50,
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sortBy",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "CREATION_DATE",
              "CREATED_BY",
              "LAST_MODIFIED_DATE",
              "LAST_MODIFIED_BY"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Page«AbstractCluster»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/migrate-overrides": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "migrateOverridesToGit",
        "operationId": "migrateOverridesToGitUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "query",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/migrate-overrides-v2": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "migrateOverridesToGitV2",
        "operationId": "migrateOverridesToGitV2UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "migrateOverridesRequest",
            "description": "migrateOverridesRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MigrateOverridesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/project": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "createProject",
        "operationId": "createProjectUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateProjectRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/running-base-clusters": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getRunningBaseClusters",
        "operationId": "getRunningBaseClustersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbstractCluster"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/stacks/starter-project": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "createStarterProject",
        "operationId": "createStarterProjectUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/stacks/substack/{substackName}": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "createSubStack",
        "operationId": "createSubStackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "subStack",
            "description": "subStack",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SubstackRequest"
            }
          },
          {
            "name": "substackName",
            "in": "path",
            "description": "substackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Substack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/templates": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getStackTemplates",
        "operationId": "getStackTemplatesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StackTemplate"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/stacks/v2": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "createStackV2",
        "operationId": "createStackV2UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createBlueprintRequest",
            "description": "createBlueprintRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateBlueprintRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getStack",
        "operationId": "getStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "updateStack",
        "operationId": "updateStackUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "stack",
            "description": "stack",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "deleteStack",
        "operationId": "deleteStackUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clusters": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getClusters",
        "operationId": "getClustersUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbstractCluster"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clusters-metadata": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getClusterMetadataByStack",
        "operationId": "getClusterMetadataByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterMetadata"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clusters-overview": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getClustersOverview",
        "operationId": "getClustersOverviewUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterOverview"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clustersWithStatus": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getClustersWithStatus",
        "operationId": "getClustersWithStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbstractCluster"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/stacks/{stackName}/enable-git-ops": {
      "put": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "enableGitOps",
        "operationId": "enableGitOpsUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EnableGitOpsRequest"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/localDeploymentContext": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getLocalDeploymentContext",
        "operationId": "getLocalDeploymentContextUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentContext"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/notification/subscriptions": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getAllSubscriptions",
        "operationId": "getAllSubscriptionsUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "createSubscription",
        "operationId": "createSubscriptionUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "subscription",
            "description": "subscription",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/reload": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "reloadStack",
        "operationId": "reloadStackUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/overrides": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getOverrides",
        "operationId": "getOverridesUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterOverrideResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/suggestions/resourceType": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getResourceTypes",
        "operationId": "getResourceTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getResourcesByTypes",
        "operationId": "getResourcesByTypesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/stacks/{stackName}/sync-resources": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "syncResources",
        "operationId": "syncResourcesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/sync-with-git": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "syncStackWithGit",
        "operationId": "syncStackWithGitUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/sync-with-git/v2": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "Sync stack with git",
        "description": "Use this to sync stack with git. Runs synchronously for the stack, and then does a non-force sync of all clusters in async",
        "operationId": "stackSyncWithGitUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/template": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "saveAsTemplate",
        "operationId": "saveAsTemplateUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "createTemplateRequest",
            "description": "createTemplateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTemplateRequest"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/template-v2": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "saveAsTemplateV2",
        "operationId": "saveAsTemplateV2UsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "saveAsTemplateRequest",
            "description": "saveAsTemplateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SaveAsTemplateRequest"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/templateInputs/meta": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getAllTemplateInputsMeta",
        "operationId": "getAllTemplateInputsMetaUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/toggleRelease": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "toggleRelease",
        "operationId": "toggleReleaseUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "toggleRelease",
            "description": "toggleRelease",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToggleRelease"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToggleRelease"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/withAccount": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getStackWithAccount",
        "operationId": "getStackWithAccountUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/stacks/{stackName}/{resourceType}/": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getApplicationList",
        "operationId": "getApplicationListUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": true
      }
    },
    "/cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "getApplication",
        "operationId": "getApplicationUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "appName",
            "in": "path",
            "description": "appName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/teams/": {
      "get": {
        "tags": [
          "ui-team-controller"
        ],
        "summary": "getTeams",
        "operationId": "getTeamsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Team"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-team-controller"
        ],
        "summary": "upsertTeam",
        "operationId": "upsertTeamUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "team",
            "description": "team",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Team"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/teams/{teamId}": {
      "get": {
        "tags": [
          "ui-team-controller"
        ],
        "summary": "getTeam",
        "operationId": "getTeamUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Team"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/teams/{teamId}/members": {
      "get": {
        "tags": [
          "ui-team-controller"
        ],
        "summary": "getTeamMembers",
        "operationId": "getTeamMembersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMembership"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "ui-team-controller"
        ],
        "summary": "addTeamMembers",
        "operationId": "addTeamMembersUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "description": "teamId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "userNames",
            "description": "userNames",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TeamMembership"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/terraform/cluster/{clusterId}": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "summary": "getTfStreamForCluster",
        "operationId": "getTfStreamForClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterTfVersionMapping"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "summary": "setTfVersionForCluster",
        "operationId": "setTfVersionForClusterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "tfVersion",
            "description": "tfVersion",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TfVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterTfVersionMapping"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "summary": "deleteTfStreamForCluster",
        "operationId": "deleteTfStreamForClusterUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/terraform/cluster/{clusterId}/pending-migration-scripts": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "summary": "getPendingMigrationScriptsByClusterId",
        "operationId": "getPendingMigrationScriptsByClusterIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PendingMigrationDetails"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/terraform/stream/{tfStream}/versions": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "summary": "getTfVersionsForStream",
        "operationId": "getTfVersionsForStreamUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tfStream",
            "in": "path",
            "description": "tfStream",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfVersion"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/terraform/sync-release-stream-mapping": {
      "post": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "summary": "populateReleaseStreamTfVersionMapping",
        "operationId": "populateReleaseStreamTfVersionMappingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/terraform/versions": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "summary": "getAllVersions",
        "operationId": "getAllVersionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfVersion"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/tf-outputs": {
      "get": {
        "tags": [
          "ui-tf-output-controller"
        ],
        "summary": "getAllOutputs",
        "operationId": "getAllOutputsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFOutput"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-tf-output-controller"
        ],
        "summary": "createOrUpdateOutput",
        "operationId": "createOrUpdateOutputUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "requestDTO",
            "description": "requestDTO",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TFOutputRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFOutput"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/tf-outputs/{name}": {
      "delete": {
        "tags": [
          "ui-tf-output-controller"
        ],
        "summary": "deleteOutput",
        "operationId": "deleteOutputUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/themeFile": {
      "post": {
        "tags": [
          "ui-theme-file-controller"
        ],
        "summary": "saveThemeFile",
        "operationId": "saveThemeFileUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "themeFileContent",
            "description": "themeFileContent",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/user-groups/": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "summary": "getAllGroup",
        "operationId": "getAllGroupUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-user-group-controller"
        ],
        "summary": "createUserGroup",
        "operationId": "createUserGroupUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userGroup",
            "description": "userGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-user-group-controller"
        ],
        "summary": "updateUserGroup",
        "operationId": "updateUserGroupUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userGroup",
            "description": "userGroup",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/user-groups/list/groups-expanded": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "summary": "getAllUserGroupsExpanded",
        "operationId": "getAllUserGroupsExpandedUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpandedUserGroup"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/user-groups/{groupId}": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "summary": "getUserGroup",
        "operationId": "getUserGroupUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-user-group-controller"
        ],
        "summary": "deleteUserGroup",
        "operationId": "deleteUserGroupUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/user-groups/{groupId}/group-expanded": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "summary": "getUserGroupExpanded",
        "operationId": "getUserGroupExpandedUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "groupId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpandedUserGroup"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/user-token": {
      "get": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "summary": "getAll",
        "operationId": "getAllUsingGET_5",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserVCSTokenResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "summary": "add",
        "operationId": "addUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userVCSTokenRequest",
            "description": "userVCSTokenRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserVCSTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserVCSTokenResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "summary": "update",
        "operationId": "updateUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "userVCSTokenRequest",
            "description": "userVCSTokenRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserVCSTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserVCSTokenResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/user-token/{id}": {
      "delete": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "summary": "delete",
        "operationId": "deleteUsingDELETE_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/users/": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getAllUsers",
        "operationId": "getAllUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/users/analyze-access": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "analyzeAccess",
        "operationId": "analyzeAccessUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "permissions",
            "in": "query",
            "description": "permissions",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessAnalyzerResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/users/createAccessToken": {
      "post": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "createToken",
        "operationId": "createTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "createdOn",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "userName",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccessToken"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/users/current-user": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getCurrentUser",
        "operationId": "getCurrentUserUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/users/invite-users": {
      "post": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "inviteUsers",
        "operationId": "inviteUsersUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "inviteUserRequest",
            "description": "inviteUserRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/InviteUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/users/list/users-expanded": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getAllUsersExpanded",
        "operationId": "getAllUsersExpandedUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpandedUser"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/users/loggedIn": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getALlLoggedInUsers",
        "operationId": "getALlLoggedInUsersUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/users/loggedIn/session": {
      "delete": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "deleteALlLoggedInUsers",
        "operationId": "deleteALlLoggedInUsersUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/users/roles": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getAllSystemRoles",
        "operationId": "getAllSystemRolesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Role"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/users/tokens": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getToken",
        "operationId": "getTokenUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccessToken"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/users/tokens/{tokenId}": {
      "delete": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "deleteToken",
        "operationId": "deleteTokenUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "tokenId",
            "in": "query",
            "description": "tokenId",
            "required": false,
            "type": "string"
          },
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Path parameter tokenId"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccessToken"
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/users/updatePassword": {
      "post": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "updatePassword",
        "operationId": "updatePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "updatePasswordRequest",
            "description": "updatePasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PasswordChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/users/{userId}": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getUser",
        "operationId": "getUserUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "deleteUser",
        "operationId": "deleteUserUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/users/{userId}/user-expanded": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "summary": "getUserExpanded",
        "operationId": "getUserExpandedUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "userId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpandedUser"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/versions/id/{id}": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "getVersionById",
        "operationId": "getVersionByIdUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Version"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "softDeletedEntities",
        "operationId": "softDeletedEntitiesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "perPage",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sortBy",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "CREATION_DATE",
              "CREATED_BY",
              "LAST_MODIFIED_DATE",
              "LAST_MODIFIED_BY"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeletedEntity"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "deleteSoftDeleteEntity",
        "operationId": "deleteSoftDeleteEntityUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "id",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities/all": {
      "delete": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "deleteAllSoftDeleteEntities",
        "operationId": "deleteAllSoftDeleteEntitiesUsingDELETE",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities/{entityId}": {
      "post": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "restoreSoftDelete",
        "operationId": "restoreSoftDeleteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "description": "entityId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities/{entityType}": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "softDeletedEntitiesByType",
        "operationId": "softDeletedEntitiesByTypeUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "description": "entityType",
            "required": true,
            "type": "string",
            "enum": [
              "CLUSTER",
              "BLUE_PRINT",
              "TEMPLATE_INPUT",
              "CONTROL_PLANE",
              "IAC",
              "ARTIFACT_CI",
              "USER_GROUP",
              "ACCOUNT",
              "ARTIFACTORY"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "perPage",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "sortBy",
            "required": false,
            "type": "string",
            "enum": [
              "ID",
              "CREATION_DATE",
              "CREATED_BY",
              "LAST_MODIFIED_DATE",
              "LAST_MODIFIED_BY"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeletedEntity"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/versions/{versionId}/restore": {
      "post": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "restore",
        "operationId": "restoreUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "description": "versionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/versions/{versioningKey}": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "summary": "getVersions",
        "operationId": "getVersionsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32"
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "perPage",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32"
          },
          {
            "name": "versioningKey",
            "in": "path",
            "description": "versioningKey",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Version"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/web-components": {
      "get": {
        "tags": [
          "ui-web-component-controller"
        ],
        "summary": "getAllComponents",
        "operationId": "getAllComponentsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebComponentDTO"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-web-component-controller"
        ],
        "summary": "createComponent",
        "operationId": "createComponentUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "component",
            "description": "component",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/web-components/{webComponentId}": {
      "get": {
        "tags": [
          "ui-web-component-controller"
        ],
        "summary": "getComponent",
        "operationId": "getComponentUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "webComponentId",
            "in": "path",
            "description": "webComponentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-web-component-controller"
        ],
        "summary": "updateComponent",
        "operationId": "updateComponentUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "component",
            "description": "component",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          },
          {
            "name": "webComponentId",
            "in": "path",
            "description": "webComponentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-web-component-controller"
        ],
        "summary": "deleteComponent",
        "operationId": "deleteComponentUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "webComponentId",
            "in": "path",
            "description": "webComponentId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/workflow": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "getAllWorkflows",
        "operationId": "getAllWorkflowsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionWorkflow"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "createWorkflow",
        "operationId": "createWorkflowUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "promotionWorkflow",
            "description": "promotionWorkflow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/workflow/blueprint/{stackName}": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "getWorkflowsByStack",
        "operationId": "getWorkflowsByStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionWorkflow"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/workflow/default-workflow/registration-type/{registrationType}": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "getDefaultWorkflow",
        "operationId": "getDefaultWorkflowUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "registrationType",
            "in": "path",
            "description": "registrationType",
            "required": true,
            "type": "string",
            "enum": [
              "ENVIRONMENT",
              "RELEASE_STREAM",
              "HYBRID"
            ]
          },
          {
            "name": "stackName",
            "in": "query",
            "description": "stackName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/workflow/registration-specific": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "getRegistrationSpecificWorkflows",
        "operationId": "getRegistrationSpecificWorkflowsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "registrationType",
            "in": "query",
            "description": "registrationType",
            "required": true,
            "type": "string",
            "enum": [
              "ENVIRONMENT",
              "RELEASE_STREAM",
              "HYBRID"
            ]
          },
          {
            "name": "stackName",
            "in": "query",
            "description": "stackName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionWorkflow"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v1/workflow/{workflowId}": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "getWorkflow",
        "operationId": "getWorkflowUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "workflowId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "updateWorkflow",
        "operationId": "updateWorkflowUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "promotionWorkflow",
            "description": "promotionWorkflow",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          {
            "name": "workflowId",
            "in": "path",
            "description": "workflowId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "delete": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "summary": "deleteWorkflow",
        "operationId": "deleteWorkflowUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "description": "workflowId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v2/assistant/chat": {
      "post": {
        "tags": [
          "ui-assistant-controller"
        ],
        "summary": "Continue Chat",
        "operationId": "continueChatUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AssistantRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssistantResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc-ui/v2/assistant/thread": {
      "get": {
        "tags": [
          "ui-assistant-controller"
        ],
        "summary": "createThread",
        "operationId": "createThreadUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssistantResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc-ui/v2/assistant/{threadId}/getChat": {
      "post": {
        "tags": [
          "ui-assistant-controller"
        ],
        "summary": "getChat",
        "operationId": "getChatUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "description": "threadId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssistantResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/artifactories": {
      "get": {
        "tags": [
          "artifactory-controller"
        ],
        "summary": "getAllArtifactories",
        "operationId": "getAllArtifactoriesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifactory"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "artifactory-controller"
        ],
        "summary": "createECRArtifactory",
        "operationId": "createECRArtifactoryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "ecrArtifactory",
            "description": "ecrArtifactory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/artifactories/{artifactoryId}": {
      "put": {
        "tags": [
          "artifactory-controller"
        ],
        "summary": "updateECRArtifactory",
        "operationId": "updateECRArtifactoryUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "description": "artifactoryId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "ecrArtifactory",
            "description": "ecrArtifactory",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/artifacts/register": {
      "post": {
        "tags": [
          "artifact-controller"
        ],
        "summary": "registerArtifact",
        "operationId": "registerArtifactUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "artifact",
            "description": "artifact",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/aws/clusters": {
      "post": {
        "tags": [
          "aws-cluster-controller"
        ],
        "summary": "createCluster",
        "operationId": "createClusterUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/aws/clusters/{clusterId}": {
      "get": {
        "tags": [
          "aws-cluster-controller"
        ],
        "summary": "getCluster",
        "operationId": "getClusterUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "aws-cluster-controller"
        ],
        "summary": "updateCluster",
        "operationId": "updateClusterUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/azure/clusters": {
      "post": {
        "tags": [
          "azure-cluster-controller"
        ],
        "summary": "createCluster",
        "operationId": "createClusterUsingPOST_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/azure/clusters/{clusterId}": {
      "get": {
        "tags": [
          "azure-cluster-controller"
        ],
        "summary": "getCluster",
        "operationId": "getClusterUsingGET_1",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "azure-cluster-controller"
        ],
        "summary": "updateCluster",
        "operationId": "updateClusterUsingPUT_1",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/build/deployer/{applicationId}": {
      "get": {
        "tags": [
          "build-controller"
        ],
        "summary": "getImageFromDeployer",
        "operationId": "getImageFromDeployerUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "description": "applicationId",
            "required": true,
            "type": "string"
          },
          {
            "name": "releaseType",
            "in": "query",
            "description": "releaseType",
            "required": false,
            "type": "string",
            "default": "RELEASE",
            "enum": [
              "HOTFIX",
              "RELEASE",
              "LAUNCH",
              "DESTROY",
              "CUSTOM",
              "UNLOCK_STATE",
              "PLAN",
              "HOTFIX_PLAN",
              "APPLY_PLAN",
              "APPLY_HOTFIX_PLAN",
              "SCALE_UP",
              "SCALE_DOWN",
              "MAINTENANCE"
            ]
          },
          {
            "name": "strategy",
            "in": "query",
            "description": "strategy",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Build"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/callbacks/codebuild": {
      "post": {
        "tags": [
          "capillary-cloud-callback-controller"
        ],
        "summary": "codeBuildCallback",
        "operationId": "codeBuildCallbackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "callback",
            "description": "callback",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CodeBuildStatusCallback"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}": {
      "post": {
        "tags": [
          "capillary-cloud-callback-controller"
        ],
        "summary": "drResultCallback",
        "operationId": "drResultCallbackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "callback",
            "description": "callback",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DRResult"
            }
          },
          {
            "name": "cluster",
            "in": "path",
            "description": "cluster",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "moduleType",
            "in": "path",
            "description": "moduleType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}": {
      "delete": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "deleteCluster",
        "operationId": "deleteClusterUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/alerts": {
      "post": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "notifyAlerts",
        "operationId": "notifyAlertsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "alerts",
            "description": "alerts",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/app-name/{appName}/application-deployment-completed": {
      "post": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "notifyApplicationDeploymentComplete",
        "operationId": "notifyApplicationDeploymentCompleteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "appName",
            "in": "path",
            "description": "appName",
            "required": true,
            "type": "string"
          },
          {
            "name": "buildId",
            "in": "query",
            "description": "buildId",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentStatus",
            "in": "query",
            "description": "deploymentStatus",
            "required": false,
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "FAULT",
              "TIMED_OUT",
              "IN_PROGRESS",
              "STOPPED",
              "INVALID",
              "STARTED",
              "UNKNOWN",
              "QUEUED",
              "PENDING_APPROVAL",
              "APPROVED",
              "REJECTED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/credentials": {
      "post": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "addClusterK8sCredentials",
        "operationId": "addClusterK8sCredentialsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/K8sCredentials"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/deployments": {
      "get": {
        "tags": [
          "deployment-controller"
        ],
        "summary": "getDeployments",
        "operationId": "getDeploymentsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDeploymentsWrapper"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/deployments/qa/triggerSuite": {
      "post": {
        "tags": [
          "deployment-controller"
        ],
        "summary": "triggerAutomationSuite",
        "operationId": "triggerAutomationSuiteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "automationSuite",
            "description": "automationSuite",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QASuite"
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult": {
      "post": {
        "tags": [
          "deployment-controller"
        ],
        "summary": "validateSanityResult",
        "operationId": "validateSanityResultUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "qaSuiteResult",
            "description": "qaSuiteResult",
            "required": true,
            "schema": {
              "$ref": "#/definitions/QASuiteResult"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/abortSuite": {
      "delete": {
        "tags": [
          "deployment-controller"
        ],
        "summary": "abortAutomationSuite",
        "operationId": "abortAutomationSuiteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status": {
      "get": {
        "tags": [
          "deployment-controller"
        ],
        "summary": "getAutomationSuiteStatus",
        "operationId": "getAutomationSuiteStatusUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/deployments/{id}": {
      "get": {
        "tags": [
          "deployment-controller"
        ],
        "summary": "getLogs",
        "operationId": "getLogsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}": {
      "get": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "listSnapshots",
        "operationId": "listSnapshotsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SnapshotInfo"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot": {
      "get": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "getPinnedSnapshot",
        "operationId": "getPinnedSnapshotUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "pinSnapshot",
        "operationId": "pinSnapshotUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "instanceName",
            "in": "path",
            "description": "instanceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "snapshotInfo",
            "description": "snapshotInfo",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/overrides": {
      "get": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "getOverrides",
        "operationId": "getOverridesUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "post": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "overrideSizing",
        "operationId": "overrideSizingUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/resource-type/{resourceType}/resource-name/{resourceName}/resource-deployment-completed": {
      "post": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "notifyResourceDeploymentComplete",
        "operationId": "notifyResourceDeploymentCompleteUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "buildId",
            "in": "query",
            "description": "buildId",
            "required": false,
            "type": "string"
          },
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "name": "deploymentStatus",
            "in": "query",
            "description": "deploymentStatus",
            "required": true,
            "type": "string",
            "enum": [
              "SUCCEEDED",
              "FAILED",
              "FAULT",
              "TIMED_OUT",
              "IN_PROGRESS",
              "STOPPED",
              "INVALID",
              "STARTED",
              "UNKNOWN",
              "QUEUED",
              "PENDING_APPROVAL",
              "APPROVED",
              "REJECTED"
            ]
          },
          {
            "name": "resourceName",
            "in": "path",
            "description": "resourceName",
            "required": true,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "path",
            "description": "resourceType",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/clusters/{clusterId}/vars/upsert": {
      "post": {
        "tags": [
          "common-cluster-controller"
        ],
        "summary": "upsertVars",
        "operationId": "upsertVarsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "clusterVars",
            "description": "clusterVars",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/gcp/clusters": {
      "post": {
        "tags": [
          "gcp-cluster-controller"
        ],
        "summary": "createCluster",
        "operationId": "createClusterUsingPOST_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/gcp/clusters/{clusterId}": {
      "get": {
        "tags": [
          "gcp-cluster-controller"
        ],
        "summary": "getCluster",
        "operationId": "getClusterUsingGET_2",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      },
      "put": {
        "tags": [
          "gcp-cluster-controller"
        ],
        "summary": "updateCluster",
        "operationId": "updateClusterUsingPUT_2",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "clusterId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "request",
            "description": "request",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/meta/components/supportedVersion": {
      "get": {
        "tags": [
          "meta-controller"
        ],
        "summary": "getSupportedComponentVersions",
        "operationId": "getSupportedComponentVersionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SupportedVersions"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/cc/v1/meta/components/{componentType}/supportedVersion": {
      "get": {
        "tags": [
          "meta-controller"
        ],
        "summary": "getSupportedComponentVersion",
        "operationId": "getSupportedComponentVersionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "componentType",
            "in": "path",
            "description": "componentType",
            "required": true,
            "type": "string",
            "enum": [
              "KUBERNETES"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SupportedVersions"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/": {
      "get": {
        "tags": [
          "stack-controller"
        ],
        "summary": "getStacks",
        "operationId": "getStacksUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Stack"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      },
      "post": {
        "tags": [
          "stack-controller"
        ],
        "summary": "createStack",
        "operationId": "createStackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "stack",
            "description": "stack",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/clusterTask": {
      "post": {
        "tags": [
          "stack-controller"
        ],
        "summary": "createClusterTasks",
        "operationId": "createClusterTasksUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "taskRequest",
            "description": "taskRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterTaskRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterTask"
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/clusterTask/{stackName}": {
      "get": {
        "tags": [
          "stack-controller"
        ],
        "summary": "getClusterTasks",
        "operationId": "getClusterTasksUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterTask"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/substack/{substackName}": {
      "post": {
        "tags": [
          "stack-controller"
        ],
        "summary": "createSubstack",
        "operationId": "createSubstackUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "subStack",
            "description": "subStack",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Substack"
            }
          },
          {
            "name": "substackName",
            "in": "path",
            "description": "substackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Substack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/{stackName}": {
      "put": {
        "tags": [
          "stack-controller"
        ],
        "summary": "updateStack",
        "operationId": "updateStackUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "stack",
            "description": "stack",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/{stackName}/clusters": {
      "get": {
        "tags": [
          "stack-controller"
        ],
        "summary": "getClusters",
        "operationId": "getClustersUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbstractCluster"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/{stackName}/reload": {
      "get": {
        "tags": [
          "stack-controller"
        ],
        "summary": "reloadStack",
        "operationId": "reloadStackUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/cc/v1/stacks/{stackName}/toggleRelease": {
      "post": {
        "tags": [
          "stack-controller"
        ],
        "summary": "toggleRelease",
        "operationId": "toggleReleaseUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "stackName",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "toggleRelease",
            "description": "toggleRelease",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ToggleRelease"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToggleRelease"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public-ui/v1/user/resetPassword": {
      "post": {
        "tags": [
          "ui-no-auth-user-controller"
        ],
        "summary": "resetPasswordRequest",
        "operationId": "resetPasswordRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "resetPasswordRequest",
            "description": "resetPasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public-ui/v1/user/savePassword": {
      "post": {
        "tags": [
          "ui-no-auth-user-controller"
        ],
        "summary": "savePassword",
        "operationId": "savePasswordUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "savePasswordResetPasswordRequest",
            "description": "savePasswordResetPasswordRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SavePasswordResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public-ui/v1/user/token/validate": {
      "post": {
        "tags": [
          "ui-no-auth-user-controller"
        ],
        "summary": "validateToken",
        "operationId": "validateTokenUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "validationRequest",
            "description": "validationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TokenValidationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenValidity"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/cp-cloud": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "getCPCloud",
        "operationId": "getCPCloudUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "AWS",
                "AZURE",
                "LOCAL",
                "GCP",
                "KUBERNETES"
              ]
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/public/v1/features": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "getAllFeatureProperties",
        "operationId": "getAllFeaturePropertiesUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/public/v1/features/{name}": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "getFeatureProperty",
        "operationId": "getFeaturePropertyUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/github-installation-request": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "processGithubInstallationRequest",
        "operationId": "processGithubInstallationRequestUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "githubAppInstallationRequest",
            "description": "githubAppInstallationRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GithubAppInstallationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GithubAppInstallationRequestResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/health": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "healthCheck",
        "operationId": "healthCheckUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/public/v1/link-aws": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkAwsAccount",
        "operationId": "linkAwsAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«AwsAccount»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-azure": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkAzureAccount",
        "operationId": "linkAzureAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«AzureAccount»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-bitbucket": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkBitbucketAccount",
        "operationId": "linkBitbucketAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«BitbucketOauthAppPayload»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-docker-registries": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkDockerRegistries",
        "operationId": "linkDockerRegistriesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«BasicDockerDTO»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-ecr": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkECR",
        "operationId": "linkECRUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«ECRArtifactory»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-gcp": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkGcpAccount",
        "operationId": "linkGcpAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«GcpAccount»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-github": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkGithubAccount",
        "operationId": "linkGithubAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«GithubAppInstallationPayload»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-gitlab": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkGitlabAccount",
        "operationId": "linkGitlabAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«GitlabOauthAppPayload»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/link-kubernetes": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "linkK8sAccount",
        "operationId": "linkK8sAccountUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "payload",
            "description": "payload",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OneTimePayload«KubernetesAccount»"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false
      }
    },
    "/public/v1/loginOptions": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "getLoginOptions",
        "operationId": "getLoginOptionsUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/public/v1/logo": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "getLogo",
        "operationId": "getLogoUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    },
    "/public/v1/themeFile": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "summary": "retrieveThemeFile",
        "operationId": "retrieveThemeFileUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeFileResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "security": [
          {
            "main": [
              "global"
            ]
          }
        ],
        "deprecated": false,
        "parameters": []
      }
    }
  },
  "securityDefinitions": {
    "main": {
      "type": "basic"
    }
  },
  "definitions": {
    "AWSElasticBlockStoreVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "title": "AWSElasticBlockStoreVolumeSource"
    },
    "AbstractCluster": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configured": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretsUid": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "AbstractCluster"
    },
    "AccessAnalyzerResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRoleDetails"
          }
        },
        "userId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "AccessAnalyzerResponse"
    },
    "AccessRoleDetails": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "roleLabel": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        },
        "roleType": {
          "type": "string"
        }
      },
      "title": "AccessRoleDetails"
    },
    "Account": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "Account"
    },
    "AccountAssociationInfo": {
      "type": "object",
      "properties": {
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterInfo"
          }
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "AccountAssociationInfo"
    },
    "ActionExecution": {
      "type": "object",
      "properties": {
        "action": {
          "$ref": "#/definitions/ApplicationAction"
        },
        "applicationId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "output": {
          "type": "string"
        },
        "triggerException": {
          "type": "string"
        },
        "triggerStatus": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        },
        "triggerTime": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ActionExecution"
    },
    "AddOnDTO": {
      "type": "object",
      "properties": {
        "added": {
          "type": "boolean"
        },
        "flavor": {
          "type": "string"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          }
        },
        "intent": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      },
      "title": "AddOnDTO"
    },
    "Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/NodeAffinity"
        },
        "podAffinity": {
          "$ref": "#/definitions/PodAffinity"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/PodAntiAffinity"
        }
      },
      "title": "Affinity"
    },
    "Alert": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endsAt": {
          "type": "string",
          "format": "date-time"
        },
        "fingerprint": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startsAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "Alert"
    },
    "AlertGroup": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "groupKey": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "AlertGroup"
    },
    "AlertOverview": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "severityCounts": {
          "type": "object",
          "additionalProperties": {
            "type": "integer",
            "format": "int32"
          }
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "AlertOverview"
    },
    "Alerting": {
      "type": "object",
      "properties": {
        "applicationFamily": {
          "type": "string",
          "enum": [
            "CRM",
            "ECOMMERCE",
            "INTEGRATIONS",
            "OPS"
          ]
        },
        "applicationId": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "newRelicAlertsUrl": {
          "type": "string"
        }
      },
      "title": "Alerting"
    },
    "AllRegionsAndAZ": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionAndZone"
          }
        }
      },
      "title": "AllRegionsAndAZ"
    },
    "AppDeployment": {
      "type": "object",
      "properties": {
        "appName": {
          "type": "string"
        },
        "artifact": {
          "$ref": "#/definitions/Artifact"
        }
      },
      "title": "AppDeployment"
    },
    "Application": {
      "type": "object",
      "properties": {
        "applicationFamily": {
          "type": "string",
          "enum": [
            "CRM",
            "ECOMMERCE",
            "INTEGRATIONS",
            "OPS"
          ]
        },
        "applicationRootDirectory": {
          "type": "string"
        },
        "applicationType": {
          "type": "string",
          "enum": [
            "SERVICE",
            "SCHEDULED_JOB",
            "STATEFUL_SET",
            "SERVERLESS"
          ]
        },
        "branchBuildRepositoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "buildType": {
          "type": "string",
          "enum": [
            "MVN",
            "MVN_SONAR_BRANCH",
            "MVN_SONAR_BRANCH_UT_STRICT",
            "JDK11_MAVEN3",
            "JDK11_MVN3_SONAR_BRANCH",
            "JDK17_MVN3_SONAR_BRANCH",
            "JDK17_MVN3_LIBRARY_SONAR_BRANCH",
            "JAVA8_LIBRARY",
            "JAVA8_LIBRARY_SONAR_BRANCH",
            "FREESTYLE_DOCKER",
            "DOTNET_CORE",
            "MVN_IONIC",
            "MVN_IONIC_SONAR_BRANCH",
            "JDK6_MAVEN2",
            "MJ_NUGET",
            "DOTNET_CORE22",
            "DOTNET_CORE3",
            "SBT",
            "NPM",
            "NPM_SONAR_BRANCH",
            "NPM_LTS_V18_SONAR_BRANCH",
            "NPM_UI",
            "NPM_UI_SONAR_BRANCH",
            "NPM_UI_V14_SONAR_BRANCH",
            "THRIFT8_LIBRARY",
            "THRIFT9_LIBRARY",
            "THRIFT8_WITH_FLAGS_LIBRARY",
            "SCALA_LIBRARY",
            "CHEETAH_LIBRARY",
            "SHARINGAN_LIBRARY",
            "NPM_LTS_V20_SONAR_BRANCH",
            "JDK11_MVN3_LIBRARY_SONAR_BRANCH"
          ]
        },
        "ciEnabled": {
          "type": "boolean"
        },
        "commonConfigs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deploymentStrategy": {
          "type": "string",
          "enum": [
            "Recreate",
            "RollingUpdate"
          ]
        },
        "dnsPrefix": {
          "type": "string"
        },
        "dnsType": {
          "type": "string",
          "enum": [
            "PUBLIC",
            "PRIVATE"
          ]
        },
        "elbIdleTimeoutSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "healthCheck": {
          "$ref": "#/definitions/HealthCheck"
        },
        "id": {
          "type": "string"
        },
        "loadBalancerType": {
          "type": "string",
          "enum": [
            "INTERNAL",
            "EXTERNAL",
            "NONE"
          ]
        },
        "name": {
          "type": "string"
        },
        "newRelicAlertRecipients": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Port"
          }
        },
        "pvcList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PVC"
          }
        },
        "repositoryDefaultBranch": {
          "type": "string"
        },
        "repositoryUrl": {
          "type": "string"
        },
        "resourceAllocationStrategy": {
          "type": "string",
          "enum": [
            "GENERAL_PURPOSE",
            "CPU_INTENSIVE"
          ]
        },
        "sonarBranchWiseAnalysisSupported": {
          "type": "boolean"
        },
        "sonarProjectKey": {
          "type": "string"
        },
        "statusCallbackUrl": {
          "type": "string"
        },
        "statusCallbackUrls": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "strictGitFlowModeEnabled": {
          "type": "boolean"
        },
        "tagBuildRepositoryIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vcsProvider": {
          "type": "string",
          "enum": [
            "BITBUCKET",
            "GITHUB"
          ]
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "Application"
    },
    "ApplicationAction": {
      "type": "object",
      "properties": {
        "actionType": {
          "type": "string",
          "enum": [
            "GENERIC",
            "CUSTOM"
          ]
        },
        "applicationId": {
          "type": "string"
        },
        "arguments": {
          "type": "string"
        },
        "argumentsRegex": {
          "type": "string"
        },
        "buildType": {
          "type": "string",
          "enum": [
            "MVN",
            "MVN_SONAR_BRANCH",
            "MVN_SONAR_BRANCH_UT_STRICT",
            "JDK11_MAVEN3",
            "JDK11_MVN3_SONAR_BRANCH",
            "JDK17_MVN3_SONAR_BRANCH",
            "JDK17_MVN3_LIBRARY_SONAR_BRANCH",
            "JAVA8_LIBRARY",
            "JAVA8_LIBRARY_SONAR_BRANCH",
            "FREESTYLE_DOCKER",
            "DOTNET_CORE",
            "MVN_IONIC",
            "MVN_IONIC_SONAR_BRANCH",
            "JDK6_MAVEN2",
            "MJ_NUGET",
            "DOTNET_CORE22",
            "DOTNET_CORE3",
            "SBT",
            "NPM",
            "NPM_SONAR_BRANCH",
            "NPM_LTS_V18_SONAR_BRANCH",
            "NPM_UI",
            "NPM_UI_SONAR_BRANCH",
            "NPM_UI_V14_SONAR_BRANCH",
            "THRIFT8_LIBRARY",
            "THRIFT9_LIBRARY",
            "THRIFT8_WITH_FLAGS_LIBRARY",
            "SCALA_LIBRARY",
            "CHEETAH_LIBRARY",
            "SHARINGAN_LIBRARY",
            "NPM_LTS_V20_SONAR_BRANCH",
            "JDK11_MVN3_LIBRARY_SONAR_BRANCH"
          ]
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "ApplicationAction"
    },
    "ApplicationDeploymentDetails": {
      "type": "object",
      "properties": {
        "creationTimestamp": {
          "type": "string"
        },
        "credentialsList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "environmentConfigs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "hpaStatus": {
          "$ref": "#/definitions/HPADetails"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "replicas": {
          "$ref": "#/definitions/PodReplicationDetails"
        }
      },
      "title": "ApplicationDeploymentDetails"
    },
    "ApplicationFamilyMetadata": {
      "type": "object",
      "properties": {
        "applicationFamily": {
          "type": "string",
          "enum": [
            "CRM",
            "ECOMMERCE",
            "INTEGRATIONS",
            "OPS"
          ]
        },
        "id": {
          "type": "string"
        },
        "stacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ApplicationFamilyMetadata"
    },
    "ApplicationMetrics": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "integer",
          "format": "int32"
        },
        "applicationId": {
          "type": "string"
        },
        "buildFailures": {
          "type": "integer",
          "format": "int32"
        },
        "criticalCodeSmells": {
          "type": "integer",
          "format": "int32"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "errors": {
          "type": "integer",
          "format": "int32"
        },
        "fatalErrorsFromLogs": {
          "type": "integer",
          "format": "int32"
        },
        "issuesReported": {
          "type": "integer",
          "format": "int32"
        },
        "outages": {
          "type": "integer",
          "format": "int32"
        },
        "regressionCoverage": {
          "type": "integer",
          "format": "int32"
        },
        "regressionFailures": {
          "type": "integer",
          "format": "int32"
        },
        "responseTime": {
          "type": "number",
          "format": "double"
        },
        "sonarUrl": {
          "type": "string"
        },
        "unitTestCoverage": {
          "type": "integer",
          "format": "int32"
        },
        "unitTests": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ApplicationMetrics"
    },
    "ApplicationMetricsWrapper": {
      "type": "object",
      "properties": {
        "application": {
          "$ref": "#/definitions/Application"
        },
        "lastWeekMetrics": {
          "$ref": "#/definitions/ApplicationMetrics"
        },
        "recentMetrics": {
          "$ref": "#/definitions/ApplicationMetrics"
        }
      },
      "title": "ApplicationMetricsWrapper"
    },
    "ApplicationPodDetails": {
      "type": "object",
      "properties": {
        "creationTimestamp": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "imageID": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "podStatus": {
          "type": "string"
        },
        "ready": {
          "type": "boolean"
        },
        "resourceUsage": {
          "$ref": "#/definitions/PodResource"
        },
        "restartReason": {
          "type": "string"
        },
        "restarts": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ApplicationPodDetails"
    },
    "ApplicationSecret": {
      "type": "object",
      "properties": {
        "secretName": {
          "type": "string"
        },
        "secretStatus": {
          "type": "string",
          "enum": [
            "FULFILLED",
            "UNFULFILLED",
            "PENDING"
          ]
        },
        "secretValue": {
          "type": "string"
        }
      },
      "title": "ApplicationSecret"
    },
    "ApplicationSecretRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "secretName": {
          "type": "string"
        },
        "secretType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "FILE"
          ]
        }
      },
      "title": "ApplicationSecretRequest"
    },
    "ApplicationServiceDetails": {
      "type": "object",
      "properties": {
        "creationTimestamp": {
          "type": "string"
        },
        "externalDns": {
          "type": "string"
        },
        "externalEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          }
        },
        "internalEndpoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Endpoint"
          }
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "selectors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceType": {
          "type": "string",
          "enum": [
            "ClusterIP",
            "NodePort",
            "LoadBalancer",
            "ExternalName"
          ]
        }
      },
      "title": "ApplicationServiceDetails"
    },
    "Artifact": {
      "type": "object",
      "properties": {
        "applicationName": {
          "type": "string"
        },
        "appliedRuleId": {
          "type": "string"
        },
        "appliedRuleName": {
          "type": "string"
        },
        "appliedRuleVersionId": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "buildDescription": {
          "type": "string"
        },
        "buildId": {
          "type": "string"
        },
        "classified": {
          "type": "boolean"
        },
        "clusterId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "promoted": {
          "type": "boolean"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "registrationValue": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "repositoryName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "Artifact"
    },
    "ArtifactByEnvironmentRequest": {
      "type": "object",
      "properties": {
        "applicationName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ArtifactByEnvironmentRequest"
    },
    "ArtifactByReleaseStreamRequest": {
      "type": "object",
      "properties": {
        "applicationName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ArtifactByReleaseStreamRequest"
    },
    "ArtifactCI": {
      "type": "object",
      "properties": {
        "ciName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "integrationType": {
          "type": "string",
          "enum": [
            "EXTERNAL"
          ]
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "promotionWorkflowId": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "ruleId": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ArtifactCI"
    },
    "ArtifactRequest": {
      "type": "object",
      "properties": {
        "applicationName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "promoted": {
          "type": "boolean"
        },
        "registeredFor": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "RELEASE_STREAM"
          ]
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "releaseStream": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "ruleVersionId": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "title": "ArtifactRequest"
    },
    "ArtifactRoutingRuleRequest": {
      "type": "object",
      "properties": {
        "ciSystem": {
          "type": "string",
          "enum": [
            "BRANCH_PER_ENVIRONMENT",
            "SINGLE_BRANCH_PROMOTION",
            "ADVANCED"
          ]
        },
        "criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Criterion"
          }
        },
        "id": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "ruleName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ArtifactRoutingRuleRequest"
    },
    "ArtifactRoutingRuleResponse": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Criterion"
          }
        },
        "default": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "ruleName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ArtifactRoutingRuleResponse"
    },
    "Artifactory": {
      "type": "object",
      "properties": {
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "OTHERS"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "stacksAssociated": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "systemDefined": {
          "type": "boolean"
        },
        "uri": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "Artifactory"
    },
    "ArtifactoryLinkingRequest": {
      "type": "object",
      "properties": {
        "artifactoryName": {
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/OneTimeWebhook"
        }
      },
      "title": "ArtifactoryLinkingRequest"
    },
    "ArtifactoryMirror": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "mirrorArtifactory": {
          "type": "string"
        },
        "sourceArtifactory": {
          "type": "string"
        }
      },
      "title": "ArtifactoryMirror"
    },
    "Assistant": {
      "type": "object",
      "properties": {
        "ability": {
          "type": "string"
        },
        "conversational": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        }
      },
      "title": "Assistant"
    },
    "AssistantMessage": {
      "type": "object",
      "properties": {
        "assistant": {
          "$ref": "#/definitions/Assistant"
        },
        "context": {
          "type": "object"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "message": {
          "type": "string"
        },
        "role": {
          "type": "string"
        }
      },
      "title": "AssistantMessage"
    },
    "AssistantRequest": {
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string"
        },
        "context": {
          "$ref": "#/definitions/JSONObject"
        },
        "message": {
          "type": "string"
        },
        "threadId": {
          "type": "string"
        }
      },
      "title": "AssistantRequest"
    },
    "AssistantResponse": {
      "type": "object",
      "properties": {
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssistantMessage"
          }
        },
        "nextActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssistantRequest"
          }
        },
        "threadId": {
          "type": "string"
        }
      },
      "title": "AssistantResponse"
    },
    "AttachDetachCiRequest": {
      "type": "object",
      "required": [
        "blueprintName",
        "ciName",
        "registrationType"
      ],
      "properties": {
        "blueprintName": {
          "type": "string",
          "example": "blueprint-1",
          "description": "Blueprint name related to the CI."
        },
        "ciName": {
          "type": "string",
          "example": "ci-my-app",
          "description": "CI name to which the operation is applied."
        },
        "registrationType": {
          "type": "string",
          "example": "GIT_REF",
          "description": "Registration type for the operation.",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        }
      },
      "title": "AttachDetachCiRequest",
      "description": "Request details for attaching or detaching a rule and workflow to/from a CI."
    },
    "AutocompleteResponse": {
      "type": "object",
      "properties": {
        "outProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "title": "AutocompleteResponse"
    },
    "AvailabilitySchedule": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailabilityTaskSchedule"
          }
        }
      },
      "title": "AvailabilitySchedule"
    },
    "AvailabilityTaskSchedule": {
      "type": "object",
      "properties": {
        "byDay": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT",
              "SUN"
            ]
          }
        },
        "byTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "cronExpr": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "enum": [
            "PER_MINUTE",
            "HOURLY",
            "DAILY",
            "WEEKLY"
          ]
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        }
      },
      "title": "AvailabilityTaskSchedule"
    },
    "AwsAccount": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "externalId": {
          "type": "string"
        },
        "iamRole": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "AwsAccount"
    },
    "AwsCluster": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "awsRegion": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configured": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "externalId": {
          "type": "string"
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "providedVPCId": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "roleARN": {
          "type": "string"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretAccessKey": {
          "type": "string"
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretsUid": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "versioningKey": {
          "type": "string"
        },
        "vpcCIDR": {
          "type": "string"
        }
      },
      "title": "AwsCluster"
    },
    "AwsClusterRequest": {
      "type": "object",
      "properties": {
        "accessKeyId": {
          "type": "string"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseClusterId": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "namespace": {
          "type": "string"
        },
        "providedVPCId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretAccessKey": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "$ref": "#/definitions/TimeZone"
        },
        "vpcCIDR": {
          "type": "string"
        }
      },
      "title": "AwsClusterRequest"
    },
    "AzureAccount": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "tenantId": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "AzureAccount"
    },
    "AzureCluster": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configured": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "region": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "resourceGroupName": {
          "type": "string"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretsUid": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "versioningKey": {
          "type": "string"
        },
        "vnetName": {
          "type": "string"
        },
        "vpcCIDR": {
          "type": "string"
        }
      },
      "title": "AzureCluster"
    },
    "AzureClusterRequest": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseClusterId": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "namespace": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "resourceGroupName": {
          "type": "string"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stackName": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "tz": {
          "$ref": "#/definitions/TimeZone"
        },
        "vnetName": {
          "type": "string"
        },
        "vpcCIDR": {
          "type": "string"
        }
      },
      "title": "AzureClusterRequest"
    },
    "AzureDiskVolumeSource": {
      "type": "object",
      "properties": {
        "cachingMode": {
          "type": "string"
        },
        "diskName": {
          "type": "string"
        },
        "diskURI": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "title": "AzureDiskVolumeSource"
    },
    "AzureFileVolumeSource": {
      "type": "object",
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "shareName": {
          "type": "string"
        }
      },
      "title": "AzureFileVolumeSource"
    },
    "BasicDockerArtifactory": {
      "type": "object",
      "properties": {
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "OTHERS"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "stacksAssociated": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "systemDefined": {
          "type": "boolean"
        },
        "uri": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "BasicDockerArtifactory"
    },
    "BasicDockerDTO": {
      "type": "object",
      "properties": {
        "artifactoryName": {
          "type": "string"
        },
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "OTHERS"
          ]
        },
        "password": {
          "type": "string"
        },
        "stacksAssociated": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uri": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "BasicDockerDTO"
    },
    "BillingMetadata": {
      "type": "object",
      "properties": {
        "planName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "trialEnd": {
          "type": "string"
        }
      },
      "title": "BillingMetadata"
    },
    "BitBucketAccount": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "app": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "host": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "orgName": {
          "type": "string"
        },
        "projectKey": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "BitBucketAccount"
    },
    "BitbucketOauthAppPayload": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "title": "BitbucketOauthAppPayload"
    },
    "BitbucketPRBranchRef": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "branchName": {
          "type": "string"
        },
        "commit": {
          "type": "object"
        },
        "sha": {
          "type": "string"
        }
      },
      "title": "BitbucketPRBranchRef"
    },
    "BitbucketPREvent": {
      "type": "object",
      "properties": {
        "pullrequest": {
          "$ref": "#/definitions/BitbucketPRField"
        }
      },
      "title": "BitbucketPREvent"
    },
    "BitbucketPRField": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "destination": {
          "$ref": "#/definitions/BitbucketPRBranchRef"
        },
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "links": {
          "$ref": "#/definitions/BitbucketPRLinks"
        },
        "source": {
          "$ref": "#/definitions/BitbucketPRBranchRef"
        },
        "state": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "updated_on": {
          "type": "string"
        }
      },
      "title": "BitbucketPRField"
    },
    "BitbucketPRLinks": {
      "type": "object",
      "properties": {
        "comments": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "commentsUrl": {
          "type": "string"
        }
      },
      "title": "BitbucketPRLinks"
    },
    "BlueprintFile": {
      "type": "object",
      "properties": {
        "alpha": {
          "type": "boolean"
        },
        "childrenResourceIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterId": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "edges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintValidationError"
          }
        },
        "expressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefExpression"
          }
        },
        "filename": {
          "type": "string"
        },
        "info": {
          "$ref": "#/definitions/Info"
        },
        "overridden": {
          "type": "boolean"
        },
        "override": {
          "type": "object"
        },
        "parentResourceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "substack": {
          "type": "boolean"
        },
        "syncCtxMd5": {
          "type": "string"
        },
        "syncId": {
          "type": "string"
        },
        "templatedResource": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "BlueprintFile"
    },
    "BlueprintFileSummaryDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "integer",
          "format": "int64"
        },
        "grouped": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GroupedCountDto"
          }
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "BlueprintFileSummaryDto"
    },
    "BlueprintValidationError": {
      "type": "object",
      "properties": {
        "blueprintErrorLines": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "category": {
          "type": "string",
          "enum": [
            "Syntax Error",
            "Non-Existent Resource Reference",
            "Disabled Resource References",
            "Invalid Reference Expression",
            "Schema Compliance Error",
            "GuardRails Compliance Issues",
            "Overrides Syntax Error",
            "Invalid Filename Error"
          ]
        },
        "message": {
          "type": "string"
        },
        "overrideErrorLines": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "severity": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARNING"
          ]
        }
      },
      "title": "BlueprintValidationError"
    },
    "Branch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "Branch"
    },
    "BranchDTO": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultBranch": {
          "type": "string"
        }
      },
      "title": "BranchDTO"
    },
    "BranchUpdateRequest": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        }
      },
      "title": "BranchUpdateRequest"
    },
    "Build": {
      "type": "object",
      "properties": {
        "additionalRepositoryImages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "applicationFamily": {
          "type": "string",
          "enum": [
            "CRM",
            "ECOMMERCE",
            "INTEGRATIONS",
            "OPS"
          ]
        },
        "applicationId": {
          "type": "string"
        },
        "artifactUrl": {
          "type": "string"
        },
        "codeBuildId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "promotable": {
          "type": "boolean"
        },
        "promoted": {
          "type": "boolean"
        },
        "promotionIntent": {
          "type": "string",
          "enum": [
            "NA",
            "NOT_CC_ENABLED",
            "HOTFIX",
            "RELEASE"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCEEDED",
            "FAILED",
            "FAULT",
            "TIMED_OUT",
            "IN_PROGRESS",
            "STOPPED",
            "null"
          ]
        },
        "tag": {
          "type": "string"
        },
        "testBuild": {
          "type": "boolean"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        },
        "triggeredBy": {
          "type": "string"
        },
        "unpromoted": {
          "type": "boolean"
        }
      },
      "title": "Build"
    },
    "BulkWorkflowAttachRequest": {
      "type": "object",
      "properties": {
        "artifactCiIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "workflowId": {
          "type": "string"
        }
      },
      "title": "BulkWorkflowAttachRequest"
    },
    "CSIVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "CSIVolumeSource"
    },
    "CallbackBody": {
      "type": "object",
      "properties": {
        "appId": {
          "type": "string"
        },
        "applicationFamily": {
          "type": "string"
        },
        "branch": {
          "$ref": "#/definitions/Branch"
        },
        "deployerBuildId": {
          "type": "string"
        },
        "prNumber": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "qualityGate": {
          "$ref": "#/definitions/QualityGate"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "CallbackBody"
    },
    "Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "Capabilities"
    },
    "Category": {
      "type": "object",
      "properties": {
        "categoryLabel": {
          "type": "string"
        },
        "categoryName": {
          "type": "string"
        }
      },
      "title": "Category"
    },
    "CephFSVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretFile": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      },
      "title": "CephFSVolumeSource"
    },
    "Change": {
      "type": "object",
      "properties": {
        "changeType": {
          "type": "string",
          "enum": [
            "ADDED",
            "MODIFIED",
            "REMOVED"
          ]
        },
        "changedAttribute": {
          "$ref": "#/definitions/ChangedAttribute"
        }
      },
      "title": "Change"
    },
    "ChangeRepresentation": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "ADDED",
            "CHANGED",
            "REMOVED"
          ]
        },
        "changeType": {
          "type": "string",
          "enum": [
            "BLUEPRINT_CHANGES",
            "IAC_CHANGES",
            "OVERRIDE_CHANGES",
            "ARTIFACT_CHANGES"
          ]
        },
        "newValue": {
          "type": "object"
        },
        "oldValue": {
          "type": "object"
        }
      },
      "title": "ChangeRepresentation"
    },
    "ChangedAttribute": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "newValue": {
          "type": "string"
        },
        "oldValue": {
          "type": "string"
        }
      },
      "title": "ChangedAttribute"
    },
    "ChannelTypePayload": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        }
      },
      "title": "ChannelTypePayload"
    },
    "Chat": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "context": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessage"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "$ref": "#/definitions/ChatStarterMetadata"
        },
        "title": {
          "type": "string"
        },
        "totalTokens": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "Chat"
    },
    "ChatContext": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "system",
            "user",
            "assistant"
          ]
        }
      },
      "title": "ChatContext"
    },
    "ChatMessage": {
      "type": "object",
      "properties": {
        "chatState": {
          "type": "string",
          "enum": [
            "KEEP_ALIVE",
            "COMPLETE"
          ]
        },
        "content": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "system",
            "user",
            "assistant"
          ]
        },
        "token": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ChatMessage"
    },
    "ChatRequest": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        }
      },
      "title": "ChatRequest"
    },
    "ChatStarterMetadata": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "starter": {
          "type": "string",
          "enum": [
            "ALERTS"
          ]
        },
        "suggestions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string"
        }
      },
      "title": "ChatStarterMetadata"
    },
    "CiArtifactResponse": {
      "type": "object",
      "properties": {
        "appliedRuleId": {
          "type": "string"
        },
        "appliedRuleName": {
          "type": "string"
        },
        "appliedRuleVersionId": {
          "type": "string"
        },
        "artifactId": {
          "type": "string"
        },
        "artifactName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "buildDescription": {
          "type": "string"
        },
        "classified": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "externalId": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "promoted": {
          "type": "boolean"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "registrationValue": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "CiArtifactResponse"
    },
    "CiCdDto": {
      "type": "object",
      "required": [
        "promotionHierarchies",
        "registrationType",
        "routingRules",
        "stackName"
      ],
      "properties": {
        "ciSystem": {
          "type": "string",
          "example": "JENKINS",
          "description": "CI system used.",
          "enum": [
            "BRANCH_PER_ENVIRONMENT",
            "SINGLE_BRANCH_PROMOTION",
            "ADVANCED"
          ]
        },
        "mapToAllCis": {
          "type": "boolean",
          "description": "Indicate whether to map to all CI systems."
        },
        "promotionHierarchies": {
          "type": "array",
          "description": "Promotion workflow hierarchies.",
          "items": {
            "$ref": "#/definitions/WorkflowHierarchy"
          }
        },
        "registrationType": {
          "type": "string",
          "example": "GIT_REF",
          "description": "Registration type for the CI/CD setup.",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "routingRules": {
          "type": "array",
          "description": "Routing rules for artifact promotion.",
          "items": {
            "$ref": "#/definitions/Criterion"
          }
        },
        "stackName": {
          "type": "string",
          "example": "my-project",
          "description": "Name of the project."
        }
      },
      "title": "CiCdDto",
      "description": "Details required for configuring CI/CD for a project."
    },
    "CinderVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "title": "CinderVolumeSource"
    },
    "ClaimSource": {
      "type": "object",
      "properties": {
        "resourceClaimName": {
          "type": "string"
        },
        "resourceClaimTemplateName": {
          "type": "string"
        }
      },
      "title": "ClaimSource"
    },
    "ClientAuthenticationMethod": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "title": "ClientAuthenticationMethod"
    },
    "CloudLinkingRequest": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/OneTimeWebhook"
        }
      },
      "title": "CloudLinkingRequest"
    },
    "ClusterAutoscalerConfiguration": {
      "type": "object",
      "properties": {
        "autoscalingGroup": {
          "type": "string"
        },
        "maxSize": {
          "type": "integer",
          "format": "int32"
        },
        "minSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ClusterAutoscalerConfiguration"
    },
    "ClusterCostDTO": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "costs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostDTO"
          }
        },
        "total": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "ClusterCostDTO"
    },
    "ClusterFiringAlertsDTO": {
      "type": "object",
      "properties": {
        "alerts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alert"
          }
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ClusterFiringAlertsDTO"
    },
    "ClusterInfo": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      },
      "title": "ClusterInfo"
    },
    "ClusterLite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ClusterLite"
    },
    "ClusterMetadata": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "id": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ClusterMetadata"
    },
    "ClusterOverrideResponse": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "overrideObject": {
          "$ref": "#/definitions/OverrideObject"
        }
      },
      "title": "ClusterOverrideResponse"
    },
    "ClusterOverview": {
      "type": "object",
      "properties": {
        "baseCluster": {
          "$ref": "#/definitions/ClusterLite"
        },
        "cluster": {
          "$ref": "#/definitions/AbstractCluster"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "id": {
          "type": "string"
        },
        "lastRelease": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "timeToNextRelease": {
          "type": "string"
        }
      },
      "title": "ClusterOverview"
    },
    "ClusterResourcesResponse": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterResourcesResponse.FacetsResource"
          }
        }
      },
      "title": "ClusterResourcesResponse"
    },
    "ClusterResourcesResponse.FacetsResource": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ClusterResourcesResponse.FacetsResource"
    },
    "ClusterResponse": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "baseCluster": {
          "$ref": "#/definitions/ClusterLite"
        },
        "branch": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountName": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "configured": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "dependentClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterLite"
          }
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        }
      },
      "title": "ClusterResponse"
    },
    "ClusterSchedule": {
      "type": "object",
      "properties": {
        "byDay": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT",
              "SUN"
            ]
          }
        },
        "byTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "clusterId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "enum": [
            "PER_MINUTE",
            "HOURLY",
            "DAILY",
            "WEEKLY"
          ]
        },
        "id": {
          "type": "string"
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "isPaused": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "serverTimeZone": {
          "type": "string"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        }
      },
      "title": "ClusterSchedule"
    },
    "ClusterTask": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "taskStatus": {
          "type": "string",
          "enum": [
            "QUEUED",
            "EXECUTED",
            "DISABLED"
          ]
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ClusterTask"
    },
    "ClusterTaskRequest": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "tasks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ClusterTaskRequest"
    },
    "ClusterTfVersionMapping": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "$ref": "#/definitions/TfVersion"
        }
      },
      "title": "ClusterTfVersionMapping"
    },
    "CodeBuildStatusCallback": {
      "type": "object",
      "properties": {
        "codebuidId": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCEEDED",
            "FAILED",
            "FAULT",
            "TIMED_OUT",
            "IN_PROGRESS",
            "STOPPED",
            "null"
          ]
        }
      },
      "title": "CodeBuildStatusCallback"
    },
    "CoderAccount": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "apiToken": {
          "type": "string"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "default": {
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "organizationId": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "templateId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "CoderAccount"
    },
    "CoderLaunchEligibilityResponse": {
      "type": "object",
      "properties": {
        "coderAccountPresent": {
          "type": "boolean"
        },
        "userVCSTokenPresent": {
          "type": "boolean"
        }
      },
      "title": "CoderLaunchEligibilityResponse"
    },
    "CoderWorkspaceResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "workspaceId": {
          "type": "string"
        }
      },
      "title": "CoderWorkspaceResponse"
    },
    "Commit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "title": "Commit"
    },
    "CommitLog": {
      "type": "object",
      "properties": {
        "authorEmail": {
          "type": "string"
        },
        "authorName": {
          "type": "string"
        },
        "commitDate": {
          "type": "string",
          "format": "date-time"
        },
        "commitId": {
          "type": "string"
        },
        "commitMessage": {
          "type": "string"
        }
      },
      "title": "CommitLog"
    },
    "Condition": {
      "type": "object",
      "properties": {
        "errorThreshold": {
          "type": "string"
        },
        "metric": {
          "type": "string"
        },
        "metricLabel": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Condition"
    },
    "Config": {
      "type": "object",
      "properties": {
        "autoPromoteArtifact": {
          "type": "boolean"
        },
        "requiresSignOff": {
          "type": "boolean"
        }
      },
      "title": "Config"
    },
    "ConfigMapDTO": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        }
      },
      "title": "ConfigMapDTO"
    },
    "ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "title": "ConfigMapEnvSource"
    },
    "ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "title": "ConfigMapKeySelector"
    },
    "ConfigMapProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "title": "ConfigMapProjection"
    },
    "ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "title": "ConfigMapVolumeSource"
    },
    "Container": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvVar"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvFromSource"
          }
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          }
        },
        "readinessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "securityContext": {
          "$ref": "#/definitions/SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeDevice"
          }
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        },
        "workingDir": {
          "type": "string"
        }
      },
      "title": "Container"
    },
    "ContainerDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "image": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "restartCount": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ContainerDTO"
    },
    "ContainerPort": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32"
        },
        "hostIP": {
          "type": "string"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      },
      "title": "ContainerPort"
    },
    "ContainerResourceMetricSource": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      },
      "title": "ContainerResourceMetricSource"
    },
    "ContainerResourceMetricStatus": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "ContainerResourceMetricStatus"
    },
    "ContainerState": {
      "type": "object",
      "properties": {
        "running": {
          "$ref": "#/definitions/ContainerStateRunning"
        },
        "terminated": {
          "$ref": "#/definitions/ContainerStateTerminated"
        },
        "waiting": {
          "$ref": "#/definitions/ContainerStateWaiting"
        }
      },
      "title": "ContainerState"
    },
    "ContainerStateRunning": {
      "type": "object",
      "properties": {
        "startedAt": {
          "type": "string"
        }
      },
      "title": "ContainerStateRunning"
    },
    "ContainerStateTerminated": {
      "type": "object",
      "properties": {
        "containerID": {
          "type": "string"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32"
        },
        "finishedAt": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "signal": {
          "type": "integer",
          "format": "int32"
        },
        "startedAt": {
          "type": "string"
        }
      },
      "title": "ContainerStateTerminated"
    },
    "ContainerStateWaiting": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      },
      "title": "ContainerStateWaiting"
    },
    "ContainerStatus": {
      "type": "object",
      "properties": {
        "containerID": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "imageID": {
          "type": "string"
        },
        "lastState": {
          "$ref": "#/definitions/ContainerState"
        },
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "boolean"
        },
        "restartCount": {
          "type": "integer",
          "format": "int32"
        },
        "started": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/ContainerState"
        }
      },
      "title": "ContainerStatus"
    },
    "ContentFile": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "mdContent": {
          "type": "string"
        },
        "requiredPayload": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "selectors": {
          "$ref": "#/definitions/Selectors"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "CI",
            "DOCUMENTATION"
          ]
        }
      },
      "title": "ContentFile"
    },
    "CopyConfigurationsRequest": {
      "type": "object",
      "properties": {
        "configurationTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "VARIABLES_SECRETS",
              "ARTIFACTS",
              "ENVIRONMENT_SETTINGS",
              "SCHEDULES",
              "AVAILABILITY_SCHEDULES",
              "OVERRIDES",
              "TEMPLATE_INPUTS"
            ]
          }
        },
        "selectionMode": {
          "type": "string",
          "enum": [
            "INCLUDE",
            "EXCLUDE"
          ]
        },
        "sourceClusterId": {
          "type": "string"
        }
      },
      "title": "CopyConfigurationsRequest"
    },
    "CostDTO": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "serviceCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCostDTO"
          }
        }
      },
      "title": "CostDTO"
    },
    "CreateBlueprintRequest": {
      "type": "object",
      "properties": {
        "allowedClouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        },
        "branch": {
          "type": "string"
        },
        "coderAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "gitOpsEnabled": {
          "type": "boolean"
        },
        "githubAccountId": {
          "type": "string"
        },
        "githubOrganisationName": {
          "type": "string"
        },
        "isImportedProject": {
          "type": "boolean"
        },
        "monoRepo": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "primaryCloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "projectTypeId": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "repoName": {
          "type": "string"
        },
        "template": {
          "type": "boolean"
        },
        "templateId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "vcsUrl": {
          "type": "string"
        }
      },
      "title": "CreateBlueprintRequest"
    },
    "CreateChatRequest": {
      "type": "object",
      "properties": {
        "starter": {
          "type": "string",
          "enum": [
            "ALERTS"
          ]
        }
      },
      "title": "CreateChatRequest"
    },
    "CreateProjectRequest": {
      "type": "object",
      "properties": {
        "allowedClouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        },
        "bitbucketProjectKey": {
          "type": "string"
        },
        "blueprintName": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "description": {
          "type": "string"
        },
        "draftClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DraftClusterRequest"
          }
        },
        "gitOpsRequest": {
          "$ref": "#/definitions/EnableGitOpsRequest"
        },
        "orgName": {
          "type": "string"
        },
        "projectTypeId": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "vcsAccountId": {
          "type": "string"
        }
      },
      "title": "CreateProjectRequest"
    },
    "CreateTemplateRequest": {
      "type": "object",
      "properties": {
        "coderAccountId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "monoRepo": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        }
      },
      "title": "CreateTemplateRequest"
    },
    "CreateWorkspaceExistingBranchRequest": {
      "type": "object",
      "properties": {
        "existingBranch": {
          "type": "string"
        },
        "workspaceName": {
          "type": "string"
        }
      },
      "title": "CreateWorkspaceExistingBranchRequest"
    },
    "CreateWorkspaceNewBranchRequest": {
      "type": "object",
      "properties": {
        "newBranch": {
          "type": "string"
        },
        "sourceBranch": {
          "type": "string"
        },
        "workspaceName": {
          "type": "string"
        }
      },
      "title": "CreateWorkspaceNewBranchRequest"
    },
    "Criterion": {
      "type": "object",
      "properties": {
        "metadataKey": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "EQUALS",
            "STARTS_WITH",
            "ENDS_WITH",
            "CONTAINS"
          ]
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "routeTo": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Criterion"
    },
    "CronJobDTO": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "lastSchedule": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "schedule": {
          "type": "string"
        },
        "suspend": {
          "type": "boolean"
        }
      },
      "title": "CronJobDTO"
    },
    "CrossVersionObjectReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "CrossVersionObjectReference"
    },
    "CustomOAuth2ClientRegistration": {
      "type": "object",
      "properties": {
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "isSystemConfigured": {
          "type": "boolean"
        },
        "issuerUrl": {
          "type": "string"
        },
        "loginButtonText": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GOOGLE",
            "OKTA",
            "ONE_LOGIN",
            "AZURE_AD",
            "JUMP_CLOUD",
            "OPEN_ID"
          ]
        },
        "registrationId": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "secretsUid": {
          "type": "string"
        },
        "systemConfigured": {
          "type": "boolean"
        }
      },
      "title": "CustomOAuth2ClientRegistration"
    },
    "CustomRoleRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "k8sClusterRole": {
          "type": "string"
        },
        "k8sRole": {
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "roleName": {
          "type": "string"
        }
      },
      "title": "CustomRoleRequest"
    },
    "CustomerOnboardRequest": {
      "type": "object",
      "properties": {
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerName": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "roleARN": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      },
      "title": "CustomerOnboardRequest"
    },
    "DRResult": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "CREATE_SNAPSHOT",
            "DELETE_SNAPSHOT"
          ]
        },
        "exception": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCESS",
            "FAILURE"
          ]
        }
      },
      "title": "DRResult"
    },
    "DaemonSetDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "desired": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "upToDate": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "DaemonSetDTO"
    },
    "DailyCloudCostDTO": {
      "type": "object",
      "properties": {
        "dailyCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterCostDTO"
          }
        },
        "lastSync": {
          "type": "string",
          "format": "date-time"
        },
        "previousPeriodTotal": {
          "type": "number",
          "format": "double"
        },
        "serviceCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCostDTO"
          }
        },
        "stackName": {
          "type": "string"
        },
        "total": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "string"
        }
      },
      "title": "DailyCloudCostDTO"
    },
    "DailyCost": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "perServiceCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCost"
          }
        },
        "unit": {
          "type": "string"
        }
      },
      "title": "DailyCost"
    },
    "DeferredResult«AssistantResponse»": {
      "type": "object",
      "properties": {
        "result": {
          "type": "object"
        },
        "setOrExpired": {
          "type": "boolean"
        }
      },
      "title": "DeferredResult«AssistantResponse»"
    },
    "DeletedEntity": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entity": {
          "$ref": "#/definitions/SoftDelete"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "DeletedEntity"
    },
    "Deployment": {
      "type": "object",
      "properties": {
        "applicationFamily": {
          "type": "string",
          "enum": [
            "CRM",
            "ECOMMERCE",
            "INTEGRATIONS",
            "OPS"
          ]
        },
        "applicationId": {
          "type": "string"
        },
        "buildId": {
          "type": "string"
        },
        "configurations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvironmentVariable"
          }
        },
        "configurationsMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "deployedBy": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "horizontalPodAutoscaler": {
          "$ref": "#/definitions/HPA"
        },
        "id": {
          "type": "string"
        },
        "podSize": {
          "type": "string",
          "enum": [
            "SMALL",
            "LARGE",
            "XLARGE",
            "XXLARGE",
            "TINY",
            "MICRO"
          ]
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "rollbackEnabled": {
          "type": "boolean"
        },
        "schedule": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Deployment"
    },
    "DeploymentContext": {
      "type": "object",
      "properties": {
        "artifactoryDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifactory"
          }
        },
        "artifacts": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/Artifact"
            }
          }
        },
        "canSkipApproval": {
          "type": "boolean"
        },
        "extraEnv": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindowDTO"
        },
        "modules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ModuleDTO"
          }
        },
        "overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OverrideObject"
          }
        },
        "parallelRelease": {
          "type": "boolean"
        },
        "providedResources": {
          "$ref": "#/definitions/ProvidedResources"
        },
        "providedSecretsId": {
          "type": "string"
        },
        "resourceMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResourceMetadata"
            }
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MatchedResourceDTO"
          }
        },
        "secretsContext": {
          "$ref": "#/definitions/SecretsContextDTO"
        },
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "snapshots": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          }
        },
        "stackSourceVersion": {
          "type": "string"
        },
        "templateInputs": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          }
        },
        "tfVersion": {
          "$ref": "#/definitions/TfVersion"
        }
      },
      "title": "DeploymentContext"
    },
    "DeploymentDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "upToDate": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "DeploymentDTO"
    },
    "DeploymentLog": {
      "type": "object",
      "properties": {
        "allowDestroy": {
          "type": "boolean"
        },
        "appDeployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDeployment"
          }
        },
        "approvedReleaseId": {
          "type": "string"
        },
        "changesApplied": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TerraformChange"
          }
        },
        "codebuildId": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "deploymentContextFilePath": {
          "type": "string"
        },
        "deploymentContextVersion": {
          "type": "string"
        },
        "deploymentJobType": {
          "type": "string",
          "enum": [
            "CODEBUILD",
            "KUBERNETES_POD"
          ]
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "REGULAR",
            "CUSTOM",
            "ROLLBACK"
          ]
        },
        "description": {
          "type": "string"
        },
        "errorLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RawError"
          }
        },
        "finishedOn": {
          "type": "string",
          "format": "date-time"
        },
        "forceRelease": {
          "type": "boolean"
        },
        "hotfixResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "id": {
          "type": "string"
        },
        "integrationTest": {
          "type": "boolean"
        },
        "isDestroy": {
          "type": "boolean"
        },
        "migrationScriptsRun": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationScriptMetadata"
          }
        },
        "overrideBuildSteps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parallelRelease": {
          "type": "boolean"
        },
        "releaseComment": {
          "type": "string"
        },
        "releaseReviewedBy": {
          "type": "string"
        },
        "releaseTraceId": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "signedOff": {
          "type": "boolean"
        },
        "stackVersion": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCEEDED",
            "FAILED",
            "FAULT",
            "TIMED_OUT",
            "IN_PROGRESS",
            "STOPPED",
            "INVALID",
            "STARTED",
            "UNKNOWN",
            "QUEUED",
            "PENDING_APPROVAL",
            "APPROVED",
            "REJECTED"
          ]
        },
        "statusDeprecated": {
          "type": "string",
          "enum": [
            "SUCCEEDED",
            "FAILED",
            "FAULT",
            "TIMED_OUT",
            "IN_PROGRESS",
            "STOPPED",
            "null"
          ]
        },
        "tfVersion": {
          "type": "string"
        },
        "timeTakenInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "triggeredBy": {
          "type": "string"
        },
        "validationResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationResponse"
          }
        },
        "validationResult": {
          "$ref": "#/definitions/ValidationResult"
        },
        "withRefresh": {
          "type": "boolean"
        }
      },
      "title": "DeploymentLog"
    },
    "DeploymentOverview": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/AbstractCluster"
        },
        "clusterId": {
          "type": "string"
        },
        "currentSignedOffDeployment": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "deploymentsStats": {
          "$ref": "#/definitions/DeploymentsStats"
        },
        "downStreamClusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "executionTime": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExecutionTime"
          }
        },
        "inProgressDeployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "isScheduledReleasesPaused": {
          "type": "boolean"
        },
        "latestDeployment": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "nextExecutionTime": {
          "type": "string"
        },
        "queuedReleases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueuedRelease"
          }
        },
        "stack": {
          "$ref": "#/definitions/Stack"
        },
        "timeToNextExecution": {
          "type": "string"
        }
      },
      "title": "DeploymentOverview"
    },
    "DeploymentRequest": {
      "type": "object",
      "required": [
        "overrideBuildSteps"
      ],
      "properties": {
        "allowDestroy": {
          "type": "boolean",
          "example": false,
          "description": "false"
        },
        "alpha": {
          "type": "boolean"
        },
        "approvedRelease": {
          "type": "boolean"
        },
        "canQueue": {
          "type": "boolean"
        },
        "extraEnv": {
          "type": "object",
          "example": {},
          "additionalProperties": {
            "type": "string"
          }
        },
        "forceRelease": {
          "type": "boolean",
          "example": true,
          "description": "true"
        },
        "hotfixResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "lockId": {
          "type": "string"
        },
        "overrideBuildSteps": {
          "type": "array",
          "example": [
            "Command 1",
            "Command 2"
          ],
          "items": {
            "type": "string"
          }
        },
        "parallelRelease": {
          "type": "boolean"
        },
        "planCodeBuildId": {
          "type": "string"
        },
        "queuedReleaseId": {
          "type": "string"
        },
        "releaseComment": {
          "type": "string"
        },
        "releaseTraceId": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "example": "CUSTOM",
          "description": "CUSTOM",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "tfVersion": {
          "description": "true",
          "$ref": "#/definitions/TfVersion"
        },
        "withRefresh": {
          "type": "boolean",
          "example": false,
          "description": "false"
        }
      },
      "title": "DeploymentRequest"
    },
    "DeploymentStatsDto": {
      "type": "object",
      "properties": {
        "dateWiseCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentStatusCountDto"
          }
        },
        "stats": {
          "$ref": "#/definitions/DeploymentsStats"
        }
      },
      "title": "DeploymentStatsDto"
    },
    "DeploymentStatusCountDto": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int64"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCEEDED",
            "FAILED",
            "FAULT",
            "TIMED_OUT",
            "IN_PROGRESS",
            "STOPPED",
            "INVALID",
            "STARTED",
            "UNKNOWN",
            "QUEUED",
            "PENDING_APPROVAL",
            "APPROVED",
            "REJECTED"
          ]
        }
      },
      "title": "DeploymentStatusCountDto"
    },
    "DeploymentStatusDetails": {
      "type": "object",
      "properties": {
        "deployment": {
          "$ref": "#/definitions/ApplicationDeploymentDetails"
        },
        "pods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ApplicationPodDetails"
          }
        },
        "service": {
          "$ref": "#/definitions/ApplicationServiceDetails"
        }
      },
      "title": "DeploymentStatusDetails"
    },
    "DeploymentsStats": {
      "type": "object",
      "properties": {
        "failedReleases": {
          "type": "integer",
          "format": "int32"
        },
        "isFirstRelease": {
          "type": "boolean"
        },
        "noChangeReleases": {
          "type": "integer",
          "format": "int32"
        },
        "successReleases": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "DeploymentsStats"
    },
    "DomainDTO": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "certificateReference": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      },
      "title": "DomainDTO"
    },
    "DownwardAPIProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DownwardAPIVolumeFile"
          }
        }
      },
      "title": "DownwardAPIProjection"
    },
    "DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/ObjectFieldSelector"
        },
        "mode": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/ResourceFieldSelector"
        }
      },
      "title": "DownwardAPIVolumeFile"
    },
    "DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DownwardAPIVolumeFile"
          }
        }
      },
      "title": "DownwardAPIVolumeSource"
    },
    "DraftClusterRequest": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "namespace": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "$ref": "#/definitions/TimeZone"
        }
      },
      "title": "DraftClusterRequest"
    },
    "ECRArtifactory": {
      "type": "object",
      "properties": {
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "OTHERS"
          ]
        },
        "awsAccountId": {
          "type": "string"
        },
        "awsKey": {
          "type": "string"
        },
        "awsRegion": {
          "type": "string"
        },
        "awsSecret": {
          "type": "string"
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "stacksAssociated": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "systemDefined": {
          "type": "boolean"
        },
        "uri": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "ECRArtifactory"
    },
    "ECRAuthorizationData": {
      "type": "object",
      "properties": {
        "authorizationToken": {
          "type": "string"
        },
        "proxyEndpoint": {
          "type": "string"
        }
      },
      "title": "ECRAuthorizationData"
    },
    "ECRRegistry": {
      "type": "object",
      "properties": {
        "awsAccountId": {
          "type": "string"
        },
        "awsKey": {
          "type": "string"
        },
        "awsRegion": {
          "type": "string"
        },
        "awsSecret": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "title": "ECRRegistry"
    },
    "Edge": {
      "type": "object",
      "properties": {
        "blockEdits": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "inputName": {
          "type": "string"
        },
        "isInput": {
          "type": "boolean"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "Edge"
    },
    "EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string"
        },
        "sizeLimit": {
          "$ref": "#/definitions/Quantity"
        }
      },
      "title": "EmptyDirVolumeSource"
    },
    "EnableDisableOPAPolicy": {
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "policyName": {
          "type": "string"
        }
      },
      "title": "EnableDisableOPAPolicy"
    },
    "EnableGitOpsRequest": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "vcsAccountId": {
          "type": "string"
        },
        "vcsUrl": {
          "type": "string"
        }
      },
      "title": "EnableGitOpsRequest"
    },
    "Endpoint": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      },
      "title": "Endpoint"
    },
    "EnvFromSource": {
      "type": "object",
      "properties": {
        "configMapRef": {
          "$ref": "#/definitions/ConfigMapEnvSource"
        },
        "prefix": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/SecretEnvSource"
        }
      },
      "title": "EnvFromSource"
    },
    "EnvInfo": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "project": {
          "type": "string"
        }
      },
      "title": "EnvInfo"
    },
    "EnvSpecificAccess": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "roleInfo": {
          "$ref": "#/definitions/RoleInfo"
        }
      },
      "title": "EnvSpecificAccess"
    },
    "EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/EnvVarSource"
        }
      },
      "title": "EnvVar"
    },
    "EnvVarSource": {
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/ConfigMapKeySelector"
        },
        "fieldRef": {
          "$ref": "#/definitions/ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/ResourceFieldSelector"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/SecretKeySelector"
        }
      },
      "title": "EnvVarSource"
    },
    "Environment": {
      "type": "object",
      "properties": {
        "environmentConfiguration": {
          "$ref": "#/definitions/EnvironmentConfiguration"
        },
        "environmentMetaData": {
          "$ref": "#/definitions/EnvironmentMetaData"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "Environment"
    },
    "EnvironmentConfiguration": {
      "type": "object",
      "properties": {
        "clusterAutoscalerConfiguration": {
          "$ref": "#/definitions/ClusterAutoscalerConfiguration"
        },
        "commonConfigs": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "commonCredentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ecrMirrorRepo": {
          "type": "string"
        },
        "filebeatEnabled": {
          "type": "boolean"
        },
        "jmxSideCarEnabled": {
          "type": "boolean"
        },
        "k8sLoggingConfiguration": {
          "$ref": "#/definitions/K8sLoggingConfiguration"
        },
        "kube2IamConfiguration": {
          "$ref": "#/definitions/Kube2IamConfiguration"
        },
        "kubernetesApiEndpoint": {
          "type": "string"
        },
        "kubernetesToken": {
          "type": "string"
        },
        "metricServerEnabled": {
          "type": "boolean"
        },
        "newRelicClusterName": {
          "type": "string"
        },
        "nodeGroup": {
          "type": "string"
        },
        "preDeployTaskEnabled": {
          "type": "boolean"
        },
        "privateDnsConfiguration": {
          "$ref": "#/definitions/ExternalDnsConfiguration"
        },
        "publicDnsConfiguration": {
          "$ref": "#/definitions/ExternalDnsConfiguration"
        },
        "requestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "resourceAllocationStrategyDefinition": {
          "type": "object",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        },
        "s3DumpAwsConfig": {
          "$ref": "#/definitions/S3DumpAwsConfig"
        },
        "spotTerminationHandlingEnabled": {
          "type": "boolean"
        },
        "sslConfigs": {
          "$ref": "#/definitions/SSLConfigs"
        }
      },
      "title": "EnvironmentConfiguration"
    },
    "EnvironmentMetaData": {
      "type": "object",
      "properties": {
        "applicationFamily": {
          "type": "string",
          "enum": [
            "CRM",
            "ECOMMERCE",
            "INTEGRATIONS",
            "OPS"
          ]
        },
        "capCloud": {
          "type": "boolean"
        },
        "capillaryCloudClusterName": {
          "type": "string"
        },
        "environmentType": {
          "type": "string",
          "enum": [
            "QA",
            "PRODUCTION"
          ]
        },
        "name": {
          "type": "string"
        }
      },
      "title": "EnvironmentMetaData"
    },
    "EnvironmentVariable": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "EnvironmentVariable"
    },
    "EphemeralContainer": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvVar"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvFromSource"
          }
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          }
        },
        "readinessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "securityContext": {
          "$ref": "#/definitions/SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "targetContainerName": {
          "type": "string"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeDevice"
          }
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        },
        "workingDir": {
          "type": "string"
        }
      },
      "title": "EphemeralContainer"
    },
    "EphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/PersistentVolumeClaimTemplate"
        }
      },
      "title": "EphemeralVolumeSource"
    },
    "Error": {
      "type": "object",
      "properties": {
        "Text": {
          "type": "string"
        }
      },
      "title": "Error"
    },
    "Event": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "apiVersion": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "eventTime": {
          "$ref": "#/definitions/MicroTime"
        },
        "firstTimestamp": {
          "type": "string"
        },
        "involvedObject": {
          "$ref": "#/definitions/ObjectReference"
        },
        "kind": {
          "type": "string"
        },
        "lastTimestamp": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "reason": {
          "type": "string"
        },
        "related": {
          "$ref": "#/definitions/ObjectReference"
        },
        "reportingComponent": {
          "type": "string"
        },
        "reportingInstance": {
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/EventSeries"
        },
        "source": {
          "$ref": "#/definitions/EventSource"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "Event"
    },
    "EventDTO": {
      "type": "object",
      "properties": {
        "lastSeen": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "EventDTO"
    },
    "EventSeries": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/MicroTime"
        }
      },
      "title": "EventSeries"
    },
    "EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      },
      "title": "EventSource"
    },
    "ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "ExecAction"
    },
    "ExecutionTime": {
      "type": "object",
      "properties": {
        "nextReleaseTime": {
          "type": "string"
        },
        "timeToNextRelease": {
          "type": "string"
        }
      },
      "title": "ExecutionTime"
    },
    "ExpandedUser": {
      "type": "object",
      "properties": {
        "accessibleAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "accessibleEnvironments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvInfo"
          }
        },
        "accessibleProjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "associatedResourceGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "baseRole": {
          "$ref": "#/definitions/RoleInfo"
        },
        "envSpecificRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSpecificAccess"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "picture": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleInfo"
          }
        },
        "username": {
          "type": "string"
        }
      },
      "title": "ExpandedUser"
    },
    "ExpandedUserGroup": {
      "type": "object",
      "properties": {
        "accessibleAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "accessibleEnvironments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvInfo"
          }
        },
        "accessibleProjects": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "associatedResourceGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "baseRole": {
          "$ref": "#/definitions/RoleInfo"
        },
        "envSpecificRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSpecificAccess"
          }
        },
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        }
      },
      "title": "ExpandedUserGroup"
    },
    "ExternalDnsConfiguration": {
      "type": "object",
      "properties": {
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        },
        "zoneDns": {
          "type": "string"
        },
        "zoneId": {
          "type": "string"
        }
      },
      "title": "ExternalDnsConfiguration"
    },
    "ExternalMetricSource": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      },
      "title": "ExternalMetricSource"
    },
    "ExternalMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        }
      },
      "title": "ExternalMetricStatus"
    },
    "FCVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "boolean"
        },
        "targetWWNs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wwids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "FCVolumeSource"
    },
    "FacetsAuditLogResponse": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "entity": {
          "type": "string",
          "enum": [
            "BLUEPRINT",
            "ENVIRONMENT",
            "RESOURCE",
            "CI_INTEGRATION",
            "CI_RULE",
            "CI_CD",
            "PROMOTION_WORKFLOW",
            "RELEASE_STREAM",
            "DELIVERY_PIPELINE",
            "TRASH",
            "RELEASE_SCHEDULE",
            "AVAILABILITY_RULES",
            "TEMPLATE_INPUT",
            "SETTINGS",
            "ACCOUNT",
            "CONTAINER_REGISTRY",
            "NOTIFICATION_CHANNEL",
            "NOTIFICATION_SUBSCRIPTION",
            "OAUTH_INTEGRATION",
            "GUARDRAIL_POLICY",
            "USER",
            "USER_GROUP",
            "CUSTOM_ROLE",
            "RESOURCE_GROUP",
            "PROJECT_TYPE",
            "MODULE",
            "WEB_COMPONENT",
            "UNKNOWN"
          ]
        },
        "entityAction": {
          "type": "string",
          "enum": [
            "BLUEPRINT_CREATE",
            "BLUEPRINT_DELETE",
            "BLUEPRINT_UPDATE",
            "BLUEPRINT_RESOURCE_CREATE",
            "BLUEPRINT_RESOURCE_UPDATE",
            "BLUEPRINT_RESOURCE_RENAME",
            "BLUEPRINT_RESOURCE_DELETE",
            "BLUEPRINT_RESOURCE_ENABLE",
            "BLUEPRINT_RESOURCE_DISABLE",
            "BLUEPRINT_ADD_TEMPLATE",
            "BLUEPRINT_SECRETS_VARIABLES_CREATE",
            "BLUEPRINT_SECRETS_VARIABLES_UPDATE",
            "BLUEPRINT_SECRETS_VARIABLES_DELETE",
            "PROJECT_TYPE_CREATE",
            "PROJECT_TYPE_UPDATE",
            "PROJECT_TYPE_DELETE",
            "MODULE_UPLOAD",
            "MODULE_MARKED_AS_PUBLISHED",
            "MODULE_DELETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_UPDATE",
            "CI_INTEGRATION_CREATE",
            "CI_INTEGRATION_UPDATE",
            "CI_INTEGRATION_DELETE",
            "CI_CD_CONFIGURE",
            "CI_RULE_CREATE",
            "CI_RULE_UPDATE",
            "CI_RULE_DELETE",
            "PROMOTION_WORKFLOW_CREATE",
            "PROMOTION_WORKFLOW_UPDATE",
            "PROMOTION_WORKFLOW_DELETE",
            "RELEASE_STREAM_CREATE",
            "RELEASE_STREAM_DELETE",
            "DELIVERY_PIPELINE_UPDATE",
            "OVERRIDE_UPDATE",
            "OVERRIDE_VERSION_ROLLBACK",
            "SECRETS_VARIABLES_UPDATE",
            "TEMPLATE_INPUT_CREATE",
            "TEMPLATE_INPUT_DELETE",
            "IAC_VERSION_UPDATE",
            "RELEASES_PAUSE",
            "RELEASES_RESUME",
            "RELEASE_SCHEDULE_CREATE",
            "RELEASE_SCHEDULE_UPDATE",
            "RELEASE_SCHEDULE_DELETE",
            "AVAILABILITY_RULES_CREATE",
            "AVAILABILITY_RULES_UPDATE",
            "AVAILABILITY_RULES_DELETE",
            "MAINTENANCE_WINDOW_UPDATE",
            "ENVIRONMENT_SETTINGS_UPDATE",
            "GENERAL_SETTINGS_UPDATE",
            "ACCOUNT_CREATE",
            "ACCOUNT_UPDATE",
            "ACCOUNT_DELETE",
            "CONTAINER_REGISTRY_CREATE",
            "CONTAINER_REGISTRY_UPDATE",
            "CONTAINER_REGISTRY_DELETE",
            "NOTIFICATION_SUBSCRIPTION_CREATE",
            "NOTIFICATION_SUBSCRIPTION_UPDATE",
            "NOTIFICATION_SUBSCRIPTION_DELETE",
            "NOTIFICATION_CHANNEL_CREATE",
            "NOTIFICATION_CHANNEL_UPDATE",
            "NOTIFICATION_CHANNEL_DELETE",
            "OAUTH_INTEGRATION_CREATE",
            "OAUTH_INTEGRATION_UPDATE",
            "OAUTH_INTEGRATION_DELETE",
            "ENVIRONMENT_RESOURCE_DISABLE",
            "ENVIRONMENT_RESOURCE_ENABLE",
            "GUARDRAIL_POLICY_CREATE",
            "GUARDRAIL_POLICY_UPDATE",
            "GUARDRAIL_POLICY_DELETE",
            "USER_CREATE",
            "USER_UPDATE",
            "USER_DELETE",
            "USER_GROUP_CREATE",
            "USER_GROUP_UPDATE",
            "USER_GROUP_DELETE",
            "RESOURCE_GROUP_CREATE",
            "RESOURCE_GROUP_UPDATE",
            "RESOURCE_GROUP_DELETE",
            "CUSTOM_ROLE_CREATE",
            "CUSTOM_ROLE_UPDATE",
            "CUSTOM_ROLE_DELETE",
            "TRASH_RESTORE",
            "TRASH_DELETE",
            "TRASH_EMPTY",
            "WEB_COMPONENT_CREATE",
            "WEB_COMPONENT_UPDATE",
            "WEB_COMPONENT_DELETE",
            "UNKNOWN"
          ]
        },
        "entityActionLabel": {
          "type": "string"
        },
        "entityLabel": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "performedAt": {
          "type": "string",
          "format": "date-time"
        },
        "performedBy": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "title": "FacetsAuditLogResponse"
    },
    "FacetsResource": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "FacetsResource"
    },
    "FieldsV1": {
      "type": "object",
      "title": "FieldsV1"
    },
    "File": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "absoluteFile": {
          "$ref": "#/definitions/File"
        },
        "absolutePath": {
          "type": "string"
        },
        "canonicalFile": {
          "$ref": "#/definitions/File"
        },
        "canonicalPath": {
          "type": "string"
        },
        "directory": {
          "type": "boolean"
        },
        "file": {
          "type": "boolean"
        },
        "freeSpace": {
          "type": "integer",
          "format": "int64"
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "parent": {
          "type": "string"
        },
        "parentFile": {
          "$ref": "#/definitions/File"
        },
        "path": {
          "type": "string"
        },
        "totalSpace": {
          "type": "integer",
          "format": "int64"
        },
        "usableSpace": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "File"
    },
    "FlexVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        }
      },
      "title": "FlexVolumeSource"
    },
    "FlockerVolumeSource": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string"
        },
        "datasetUUID": {
          "type": "string"
        }
      },
      "title": "FlockerVolumeSource"
    },
    "GCEPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "type": "integer",
          "format": "int32"
        },
        "pdName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "title": "GCEPersistentDiskVolumeSource"
    },
    "GCPCluster": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configured": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "machineType": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "project": {
          "type": "string"
        },
        "providedVPCId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretsUid": {
          "type": "string"
        },
        "serviceAccountKey": {
          "type": "string"
        },
        "sharedVPCSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "versioningKey": {
          "type": "string"
        },
        "vpcCIDR": {
          "type": "string"
        }
      },
      "title": "GCPCluster"
    },
    "GCPClusterRequest": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseClusterId": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "machineType": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "providedVPCId": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "serviceAccountKey": {
          "type": "string"
        },
        "sharedVPCSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "$ref": "#/definitions/TimeZone"
        },
        "vpcCIDR": {
          "type": "string"
        }
      },
      "title": "GCPClusterRequest"
    },
    "GRPCAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "service": {
          "type": "string"
        }
      },
      "title": "GRPCAction"
    },
    "GcpAccount": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "project": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "serviceAccountKey": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "GcpAccount"
    },
    "GenericOAuth2ClientRegistration": {
      "type": "object",
      "properties": {
        "authorizationUri": {
          "type": "string"
        },
        "clientAuthenticationMethod": {
          "$ref": "#/definitions/ClientAuthenticationMethod"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "issuerUrl": {
          "type": "string"
        },
        "jwkSetUri": {
          "type": "string"
        },
        "loginButtonText": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GOOGLE",
            "OKTA",
            "ONE_LOGIN",
            "AZURE_AD",
            "JUMP_CLOUD",
            "OPEN_ID"
          ]
        },
        "registrationId": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "secretsUid": {
          "type": "string"
        },
        "systemConfigured": {
          "type": "boolean"
        },
        "tokenUri": {
          "type": "string"
        },
        "userInfoUri": {
          "type": "string"
        }
      },
      "title": "GenericOAuth2ClientRegistration"
    },
    "GetProvidedResourcesResponse": {
      "type": "object",
      "properties": {
        "intentOutputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/JsonNode"
          }
        },
        "outOverride": {
          "$ref": "#/definitions/JsonNode"
        }
      },
      "title": "GetProvidedResourcesResponse"
    },
    "GitHubAccount": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "apiBaseUrl": {
          "type": "string"
        },
        "app": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "host": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "orgName": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "GitHubAccount"
    },
    "GitLabAccount": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "apiBaseUrl": {
          "type": "string"
        },
        "app": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "host": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "orgName": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "userName": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "GitLabAccount"
    },
    "GitRepoVolumeSource": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        }
      },
      "title": "GitRepoVolumeSource"
    },
    "GithubAppInstallationPayload": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "installationId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GithubAppInstallationPayload"
    },
    "GithubAppInstallationRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "GithubAppInstallationRequest"
    },
    "GithubAppInstallationRequestResponse": {
      "type": "object",
      "properties": {
        "targetId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GithubAppInstallationRequestResponse"
    },
    "GithubLabel": {
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "GithubLabel"
    },
    "GithubPRBranchRef": {
      "type": "object",
      "properties": {
        "ref": {
          "type": "string"
        },
        "sha": {
          "type": "string"
        }
      },
      "title": "GithubPRBranchRef"
    },
    "GithubPREvent": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "pull_request": {
          "$ref": "#/definitions/GithubPRField"
        }
      },
      "title": "GithubPREvent"
    },
    "GithubPRField": {
      "type": "object",
      "properties": {
        "base": {
          "$ref": "#/definitions/GithubPRBranchRef"
        },
        "comments_url": {
          "type": "string"
        },
        "diff_url": {
          "type": "string"
        },
        "draft": {
          "type": "boolean"
        },
        "head": {
          "$ref": "#/definitions/GithubPRBranchRef"
        },
        "merged": {
          "type": "boolean"
        },
        "state": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      },
      "title": "GithubPRField"
    },
    "GithubUser": {
      "type": "object",
      "properties": {
        "htmlUrl": {
          "type": "string"
        },
        "login": {
          "type": "string"
        }
      },
      "title": "GithubUser"
    },
    "GitlabOauthAppPayload": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "redirectUrl": {
          "type": "string"
        }
      },
      "title": "GitlabOauthAppPayload"
    },
    "GlobalStats": {
      "type": "object",
      "properties": {
        "applicationCount": {
          "type": "integer",
          "format": "int64"
        },
        "totalBuilds": {
          "type": "integer",
          "format": "int64"
        },
        "totalDeployments": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GlobalStats"
    },
    "GlusterfsVolumeSource": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "title": "GlusterfsVolumeSource"
    },
    "GrantedAuthority": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        }
      },
      "title": "GrantedAuthority"
    },
    "GroupedCountDto": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "integer",
          "format": "int64"
        },
        "total": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "GroupedCountDto"
    },
    "HPA": {
      "type": "object",
      "properties": {
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "metricName": {
          "type": "string"
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "threshold": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HPA"
    },
    "HPADetails": {
      "type": "object",
      "properties": {
        "currentCPUAvg": {
          "type": "integer",
          "format": "int32"
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "targetCPUAvg": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HPADetails"
    },
    "HPAScalingPolicy": {
      "type": "object",
      "properties": {
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HPAScalingPolicy"
    },
    "HPAScalingRules": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HPAScalingPolicy"
          }
        },
        "selectPolicy": {
          "type": "string"
        },
        "stabilizationWindowSeconds": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "HPAScalingRules"
    },
    "HTTPGetAction": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HTTPHeader"
          }
        },
        "path": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/IntOrString"
        },
        "scheme": {
          "type": "string"
        }
      },
      "title": "HTTPGetAction"
    },
    "HTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "HTTPHeader"
    },
    "HTTPIngressPath": {
      "type": "object",
      "properties": {
        "backend": {
          "$ref": "#/definitions/IngressBackend"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string"
        }
      },
      "title": "HTTPIngressPath"
    },
    "HTTPIngressRuleValue": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HTTPIngressPath"
          }
        }
      },
      "title": "HTTPIngressRuleValue"
    },
    "HealthCheck": {
      "type": "object",
      "properties": {
        "livenessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "readinessProbe": {
          "$ref": "#/definitions/Probe"
        }
      },
      "title": "HealthCheck"
    },
    "HistoryMetadata": {
      "type": "object",
      "properties": {
        "liveVersionId": {
          "type": "string"
        },
        "previewVersionId": {
          "type": "string"
        },
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Version"
          }
        }
      },
      "title": "HistoryMetadata"
    },
    "HorizontalPodAutoscaler": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/HorizontalPodAutoscalerSpec"
        },
        "status": {
          "$ref": "#/definitions/HorizontalPodAutoscalerStatus"
        }
      },
      "title": "HorizontalPodAutoscaler"
    },
    "HorizontalPodAutoscalerBehavior": {
      "type": "object",
      "properties": {
        "scaleDown": {
          "$ref": "#/definitions/HPAScalingRules"
        },
        "scaleUp": {
          "$ref": "#/definitions/HPAScalingRules"
        }
      },
      "title": "HorizontalPodAutoscalerBehavior"
    },
    "HorizontalPodAutoscalerCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "HorizontalPodAutoscalerCondition"
    },
    "HorizontalPodAutoscalerDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "metric": {
          "$ref": "#/definitions/Metric"
        },
        "name": {
          "type": "string"
        },
        "replicaStatus": {
          "$ref": "#/definitions/ReplicaStatus"
        }
      },
      "title": "HorizontalPodAutoscalerDTO"
    },
    "HorizontalPodAutoscalerSpec": {
      "type": "object",
      "properties": {
        "behavior": {
          "$ref": "#/definitions/HorizontalPodAutoscalerBehavior"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpec"
          }
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/CrossVersionObjectReference"
        }
      },
      "title": "HorizontalPodAutoscalerSpec"
    },
    "HorizontalPodAutoscalerStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HorizontalPodAutoscalerCondition"
          }
        },
        "currentMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricStatus"
          }
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "lastScaleTime": {
          "type": "string"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "HorizontalPodAutoscalerStatus"
    },
    "HostAlias": {
      "type": "object",
      "properties": {
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "type": "string"
        }
      },
      "title": "HostAlias"
    },
    "HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "HostPathVolumeSource"
    },
    "HotfixDeploymentRecipe": {
      "type": "object",
      "properties": {
        "resourceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        }
      },
      "title": "HotfixDeploymentRecipe"
    },
    "ISCSIVolumeSource": {
      "type": "object",
      "properties": {
        "chapAuthDiscovery": {
          "type": "boolean"
        },
        "chapAuthSession": {
          "type": "boolean"
        },
        "fsType": {
          "type": "string"
        },
        "initiatorName": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "iscsiInterface": {
          "type": "string"
        },
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "targetPortal": {
          "type": "string"
        }
      },
      "title": "ISCSIVolumeSource"
    },
    "IacRepo": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "gitAccountId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "repoUrl": {
          "type": "string"
        }
      },
      "title": "IacRepo"
    },
    "IdName": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "IdName"
    },
    "ImageOverrideRequest": {
      "type": "object",
      "properties": {
        "artifactType": {
          "type": "string",
          "enum": [
            "docker_image",
            "freestyle"
          ]
        },
        "artifactUri": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "blueprintName": {
          "type": "string"
        },
        "ciName": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "GIT_REF",
            "ENVIRONMENT",
            "RELEASE_STREAM"
          ]
        },
        "registrationValue": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        }
      },
      "title": "ImageOverrideRequest"
    },
    "Info": {
      "type": "object",
      "properties": {
        "artifactType": {
          "type": "string",
          "enum": [
            "docker_image",
            "freestyle"
          ]
        },
        "artifactory": {
          "type": "string"
        },
        "ciName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "flavour": {
          "type": "string"
        },
        "githubRepositoryUrl": {
          "type": "string"
        },
        "inheritFromBase": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "overriddenName": {
          "type": "string"
        },
        "provided": {
          "type": "boolean"
        },
        "repository": {
          "type": "string"
        },
        "repositoryPath": {
          "type": "string"
        },
        "staticImage": {
          "type": "string"
        },
        "strategy": {
          "type": "string",
          "enum": [
            "RollingUpdate",
            "BlueGreen",
            "Canary"
          ]
        },
        "tag": {
          "type": "string"
        },
        "ui": {
          "type": "object"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Info"
    },
    "Ingress": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/IngressSpec"
        },
        "status": {
          "$ref": "#/definitions/IngressStatus"
        }
      },
      "title": "Ingress"
    },
    "IngressBackend": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "service": {
          "$ref": "#/definitions/IngressServiceBackend"
        }
      },
      "title": "IngressBackend"
    },
    "IngressBackendDTO": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "serviceName": {
          "type": "string"
        }
      },
      "title": "IngressBackendDTO"
    },
    "IngressDTO": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "ingressClass": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressRulesDTO"
          }
        }
      },
      "title": "IngressDTO"
    },
    "IngressLoadBalancerIngress": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressPortStatus"
          }
        }
      },
      "title": "IngressLoadBalancerIngress"
    },
    "IngressLoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressLoadBalancerIngress"
          }
        }
      },
      "title": "IngressLoadBalancerStatus"
    },
    "IngressPortStatus": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        }
      },
      "title": "IngressPortStatus"
    },
    "IngressRule": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/HTTPIngressRuleValue"
        }
      },
      "title": "IngressRule"
    },
    "IngressRulesDTO": {
      "type": "object",
      "properties": {
        "backend": {
          "$ref": "#/definitions/IngressBackendDTO"
        },
        "hosts": {
          "type": "string"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "IngressRulesDTO"
    },
    "IngressServiceBackend": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/ServiceBackendPort"
        }
      },
      "title": "IngressServiceBackend"
    },
    "IngressSpec": {
      "type": "object",
      "properties": {
        "defaultBackend": {
          "$ref": "#/definitions/IngressBackend"
        },
        "ingressClassName": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressRule"
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressTLS"
          }
        }
      },
      "title": "IngressSpec"
    },
    "IngressStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/IngressLoadBalancerStatus"
        }
      },
      "title": "IngressStatus"
    },
    "IngressTLS": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretName": {
          "type": "string"
        }
      },
      "title": "IngressTLS"
    },
    "Input": {
      "type": "object",
      "properties": {
        "addsCapability": {
          "type": "boolean"
        },
        "blockEdits": {
          "type": "boolean"
        },
        "defaultResource": {
          "$ref": "#/definitions/InputOutputResource"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "Input"
    },
    "InputOutputResource": {
      "type": "object",
      "properties": {
        "outputName": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "InputOutputResource"
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "InputStreamResource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      },
      "title": "InputStreamResource"
    },
    "IntOrString": {
      "type": "object",
      "properties": {
        "intVal": {
          "type": "integer",
          "format": "int32"
        },
        "strVal": {
          "type": "string"
        },
        "value": {
          "type": "object"
        }
      },
      "title": "IntOrString"
    },
    "IntentOutput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "IntentOutput"
    },
    "IntentRequestDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "inferredFromModule": {
          "type": "boolean"
        },
        "intentOutputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "IntentRequestDTO"
    },
    "IntentResponseDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "inferredFromModule": {
          "type": "boolean"
        },
        "intentOutputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "type": {
          "type": "string"
        }
      },
      "title": "IntentResponseDTO"
    },
    "InviteUserRequest": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "usersEmailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "InviteUserRequest"
    },
    "JSONObject": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      },
      "title": "JSONObject"
    },
    "JobDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "durationInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "podStatus": {
          "$ref": "#/definitions/PodStatusDTO"
        }
      },
      "title": "JobDTO"
    },
    "JsonNode": {
      "type": "object",
      "title": "JsonNode"
    },
    "K8sAnalyzeResponse": {
      "type": "object",
      "properties": {
        "problems": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Result"
          }
        },
        "status": {
          "type": "string"
        }
      },
      "title": "K8sAnalyzeResponse"
    },
    "K8sCredentials": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "kubernetesApiEndpoint": {
          "type": "string"
        },
        "kubernetesToken": {
          "type": "string"
        },
        "proxyHttpClientFactory": {
          "$ref": "#/definitions/Sock5OkHttpClientFactory"
        },
        "proxyUrl": {
          "type": "string"
        }
      },
      "title": "K8sCredentials"
    },
    "K8sLoggingConfiguration": {
      "type": "object",
      "properties": {
        "awsAccessKeyID": {
          "type": "string"
        },
        "awsRegion": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        },
        "efsHost": {
          "type": "string"
        },
        "logsS3Bucket": {
          "type": "string"
        }
      },
      "title": "K8sLoggingConfiguration"
    },
    "KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "mode": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "KeyToPath"
    },
    "Kube2IamConfiguration": {
      "type": "object",
      "properties": {
        "awsAccessKeyID": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "hostNetworkInterface": {
          "type": "string"
        }
      },
      "title": "Kube2IamConfiguration"
    },
    "KubernetesAccount": {
      "type": "object",
      "properties": {
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "certificateAuthority": {
          "type": "string"
        },
        "changeLog": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "host": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inUse": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "secretsUid": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "token": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "KubernetesAccount"
    },
    "KubernetesCluster": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "certificateAuthority": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configured": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "host": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretsUid": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "KubernetesCluster"
    },
    "KubernetesClusterRequest": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "namespace": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "$ref": "#/definitions/TimeZone"
        }
      },
      "title": "KubernetesClusterRequest"
    },
    "KubernetesCredential": {
      "type": "object",
      "properties": {
        "cacert": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "title": "KubernetesCredential"
    },
    "LabelSelector": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "LabelSelector"
    },
    "LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "LabelSelectorRequirement"
    },
    "Lifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/LifecycleHandler"
        },
        "preStop": {
          "$ref": "#/definitions/LifecycleHandler"
        }
      },
      "title": "Lifecycle"
    },
    "LifecycleHandler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/ExecAction"
        },
        "httpGet": {
          "$ref": "#/definitions/HTTPGetAction"
        },
        "tcpSocket": {
          "$ref": "#/definitions/TCPSocketAction"
        }
      },
      "title": "LifecycleHandler"
    },
    "ListDeploymentsWrapper": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "currentSignedOffDeployment": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "deploymentsFull": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "deploymentsStats": {
          "$ref": "#/definitions/DeploymentsStats"
        },
        "downStreamClusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "nextExecutionTime": {
          "type": "string"
        },
        "stack": {
          "$ref": "#/definitions/Stack"
        },
        "timeToNextExecution": {
          "type": "string"
        }
      },
      "title": "ListDeploymentsWrapper"
    },
    "ListPullRequestResponse": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pullRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PullRequestResponse"
          }
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ListPullRequestResponse"
    },
    "ListResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "description": "Grouped resources by type and name",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/TFModuleLiteListDTO"
            }
          }
        },
        "templates": {
          "type": "object",
          "description": "Templates associated with the resources",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TemplateResponseDTO"
            }
          }
        }
      },
      "title": "ListResourcesResponse",
      "description": "Response entity containing grouped resources and templates"
    },
    "ListWorkflowRunsResponse": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "workflowRuns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRun"
          }
        }
      },
      "title": "ListWorkflowRunsResponse"
    },
    "LocalCluster": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configured": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleted": {
          "type": "boolean"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "secretsUid": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "type": "string"
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "LocalCluster"
    },
    "LocalClusterRequest": {
      "type": "object",
      "properties": {
        "autoSignOffSchedule": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "cloudAccountId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "namespace": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stackName": {
          "type": "string"
        },
        "tz": {
          "$ref": "#/definitions/TimeZone"
        }
      },
      "title": "LocalClusterRequest"
    },
    "LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "LocalObjectReference"
    },
    "LocalTime": {
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "LocalTime"
    },
    "LogEvent": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "LogEvent"
    },
    "MaintenanceWindowDTO": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "cron": {
          "type": "string"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MON",
            "TUE",
            "WED",
            "THU",
            "FRI",
            "SAT",
            "SUN"
          ]
        },
        "disabled": {
          "type": "boolean"
        },
        "endTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "startTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        },
        "triggered": {
          "type": "boolean"
        }
      },
      "title": "MaintenanceWindowDTO"
    },
    "ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldsType": {
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/definitions/FieldsV1"
        },
        "manager": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "subresource": {
          "type": "string"
        },
        "time": {
          "type": "string"
        }
      },
      "title": "ManagedFieldsEntry"
    },
    "Map«string,Artifact»": {
      "type": "object",
      "title": "Map«string,Artifact»",
      "additionalProperties": {
        "$ref": "#/definitions/Artifact"
      }
    },
    "Map«string,SnapshotInfo»": {
      "type": "object",
      "title": "Map«string,SnapshotInfo»",
      "additionalProperties": {
        "$ref": "#/definitions/SnapshotInfo"
      }
    },
    "Map«string,TFModuleLiteListDTO»": {
      "type": "object",
      "title": "Map«string,TFModuleLiteListDTO»",
      "additionalProperties": {
        "$ref": "#/definitions/TFModuleLiteListDTO"
      }
    },
    "Map«string,object»": {
      "type": "object",
      "title": "Map«string,object»",
      "additionalProperties": {
        "type": "object"
      }
    },
    "MatchedModuleDTO": {
      "type": "object",
      "properties": {
        "modules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ModuleDTO"
          }
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MatchedResourceDTO"
          }
        }
      },
      "title": "MatchedModuleDTO"
    },
    "MatchedResourceDTO": {
      "type": "object",
      "properties": {
        "matched": {
          "type": "boolean"
        },
        "moduleRef": {
          "type": "string"
        }
      },
      "title": "MatchedResourceDTO"
    },
    "Metric": {
      "type": "object",
      "properties": {
        "cpuUtilization": {
          "$ref": "#/definitions/Utilization"
        },
        "memoryUtilization": {
          "$ref": "#/definitions/Utilization"
        }
      },
      "title": "Metric"
    },
    "MetricIdentifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/LabelSelector"
        }
      },
      "title": "MetricIdentifier"
    },
    "MetricSpec": {
      "type": "object",
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/ContainerResourceMetricSource"
        },
        "external": {
          "$ref": "#/definitions/ExternalMetricSource"
        },
        "object": {
          "$ref": "#/definitions/ObjectMetricSource"
        },
        "pods": {
          "$ref": "#/definitions/PodsMetricSource"
        },
        "resource": {
          "$ref": "#/definitions/ResourceMetricSource"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "MetricSpec"
    },
    "MetricStatus": {
      "type": "object",
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/ContainerResourceMetricStatus"
        },
        "external": {
          "$ref": "#/definitions/ExternalMetricStatus"
        },
        "object": {
          "$ref": "#/definitions/ObjectMetricStatus"
        },
        "pods": {
          "$ref": "#/definitions/PodsMetricStatus"
        },
        "resource": {
          "$ref": "#/definitions/ResourceMetricStatus"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "MetricStatus"
    },
    "MetricTarget": {
      "type": "object",
      "properties": {
        "averageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "averageValue": {
          "$ref": "#/definitions/Quantity"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Quantity"
        }
      },
      "title": "MetricTarget"
    },
    "MetricValueStatus": {
      "type": "object",
      "properties": {
        "averageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "averageValue": {
          "$ref": "#/definitions/Quantity"
        },
        "value": {
          "$ref": "#/definitions/Quantity"
        }
      },
      "title": "MetricValueStatus"
    },
    "MicroTime": {
      "type": "object",
      "properties": {
        "Time": {
          "type": "string"
        }
      },
      "title": "MicroTime"
    },
    "MigrateOverridesRequest": {
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string"
        },
        "gitOverrideUrl": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "MigrateOverridesRequest"
    },
    "MigrationScriptMetadata": {
      "type": "object",
      "properties": {
        "clouds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "downtime": {
          "type": "boolean"
        },
        "sequenceNumber": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "MigrationScriptMetadata"
    },
    "ModuleDTO": {
      "type": "object",
      "properties": {
        "facetsYaml": {
          "type": "object"
        },
        "tfModulePath": {
          "$ref": "#/definitions/TFModulePath"
        }
      },
      "title": "ModuleDTO"
    },
    "ModuleInputDTO": {
      "type": "object",
      "properties": {
        "compatibleResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputOutputResource"
          }
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "ModuleInputDTO"
    },
    "ModuleMetadata": {
      "type": "object",
      "properties": {
        "autoCreate": {
          "type": "boolean"
        },
        "featureBranch": {
          "type": "boolean"
        },
        "gitRef": {
          "type": "string"
        },
        "gitUrl": {
          "type": "string"
        }
      },
      "title": "ModuleMetadata"
    },
    "Monitoring": {
      "type": "object",
      "properties": {
        "applicationFamily": {
          "type": "string",
          "enum": [
            "CRM",
            "ECOMMERCE",
            "INTEGRATIONS",
            "OPS"
          ]
        },
        "applicationId": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "newRelicDashboardUrl": {
          "type": "string"
        }
      },
      "title": "Monitoring"
    },
    "NFSVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "server": {
          "type": "string"
        }
      },
      "title": "NFSVolumeSource"
    },
    "NodeAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreferredSchedulingTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/NodeSelector"
        }
      },
      "title": "NodeAffinity"
    },
    "NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSelectorTerm"
          }
        }
      },
      "title": "NodeSelector"
    },
    "NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "NodeSelectorRequirement"
    },
    "NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSelectorRequirement"
          }
        }
      },
      "title": "NodeSelectorTerm"
    },
    "NotificationChannel": {
      "type": "object",
      "properties": {
        "authorizationHeader": {
          "type": "string"
        },
        "channelAddress": {
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "integrationKey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "NotificationChannel"
    },
    "NotificationTagPayload": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "notificationTag": {
          "type": "string",
          "enum": [
            "CLUSTER_NAME",
            "CLUSTER_TYPE",
            "QASUITE_RESULT",
            "DR_ACTION",
            "DR_STATUS",
            "STACK_NAME",
            "SEVERITY",
            "ALERT_NAME",
            "DEPLOYMENT_STATUS",
            "APPLICATION_NAME",
            "SEND_RESOLVED",
            "RELEASE_TYPE"
          ]
        }
      },
      "title": "NotificationTagPayload"
    },
    "NotificationTagsForTypeResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "enum": [
            "CLUSTER_NAME",
            "CLUSTER_TYPE",
            "QASUITE_RESULT",
            "DR_ACTION",
            "DR_STATUS",
            "STACK_NAME",
            "SEVERITY",
            "ALERT_NAME",
            "DEPLOYMENT_STATUS",
            "APPLICATION_NAME",
            "SEND_RESOLVED",
            "RELEASE_TYPE"
          ]
        },
        "label": {
          "type": "string"
        },
        "tooltip": {
          "type": "string"
        }
      },
      "title": "NotificationTagsForTypeResult"
    },
    "NotificationTypeResponse": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "notificationName": {
          "type": "string"
        },
        "notificationType": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATUS_UPDATE",
            "APP_DEPLOYMENT",
            "QASUITE_SANITY",
            "DR_RESULT",
            "STACK_SIGNOFF",
            "ALERT",
            "TEST",
            "APPLICATION_DEPLOYMENT_COMPLETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_LAUNCH",
            "ENVIRONMENT_DESTROY",
            "ENVIRONMENT_CONFIGURE"
          ]
        },
        "supportedTags": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CLUSTER_NAME",
              "CLUSTER_TYPE",
              "QASUITE_RESULT",
              "DR_ACTION",
              "DR_STATUS",
              "STACK_NAME",
              "SEVERITY",
              "ALERT_NAME",
              "DEPLOYMENT_STATUS",
              "APPLICATION_NAME",
              "SEND_RESOLVED",
              "RELEASE_TYPE"
            ]
          }
        }
      },
      "title": "NotificationTypeResponse"
    },
    "ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        }
      },
      "title": "ObjectFieldSelector"
    },
    "ObjectMeta": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creationTimestamp": {
          "type": "string"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": "string"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "generateName": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          }
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "title": "ObjectMeta"
    },
    "ObjectMetricSource": {
      "type": "object",
      "properties": {
        "describedObject": {
          "$ref": "#/definitions/CrossVersionObjectReference"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      },
      "title": "ObjectMetricSource"
    },
    "ObjectMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "describedObject": {
          "$ref": "#/definitions/CrossVersionObjectReference"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        }
      },
      "title": "ObjectMetricStatus"
    },
    "ObjectReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "title": "ObjectReference"
    },
    "OneTimePayload«AwsAccount»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/AwsAccount"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«AwsAccount»"
    },
    "OneTimePayload«AzureAccount»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/AzureAccount"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«AzureAccount»"
    },
    "OneTimePayload«BasicDockerDTO»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/BasicDockerDTO"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«BasicDockerDTO»"
    },
    "OneTimePayload«BitbucketOauthAppPayload»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/BitbucketOauthAppPayload"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«BitbucketOauthAppPayload»"
    },
    "OneTimePayload«ECRArtifactory»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/ECRArtifactory"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«ECRArtifactory»"
    },
    "OneTimePayload«GcpAccount»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/GcpAccount"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«GcpAccount»"
    },
    "OneTimePayload«GithubAppInstallationPayload»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/GithubAppInstallationPayload"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«GithubAppInstallationPayload»"
    },
    "OneTimePayload«GitlabOauthAppPayload»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/GitlabOauthAppPayload"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«GitlabOauthAppPayload»"
    },
    "OneTimePayload«KubernetesAccount»": {
      "type": "object",
      "properties": {
        "payload": {
          "$ref": "#/definitions/KubernetesAccount"
        },
        "webhookId": {
          "type": "string"
        }
      },
      "title": "OneTimePayload«KubernetesAccount»"
    },
    "OneTimeWebhook": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "deleteAt": {
          "type": "string",
          "format": "date-time"
        },
        "errorMessage": {
          "type": "string"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "enum": [
            "WAITING",
            "SUCCESS",
            "FAILED",
            "EXPIRED"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "AZURE",
            "GCP",
            "AWS",
            "KUBERNETES",
            "ECR",
            "OTHER_DOCKER_REGISTRY",
            "GITHUB",
            "GITLAB",
            "BITBUCKET"
          ]
        }
      },
      "title": "OneTimeWebhook"
    },
    "OpaPolicy": {
      "type": "object",
      "properties": {
        "clusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "flavours": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputData": {
          "type": "object"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "packageName": {
          "type": "string"
        },
        "policyCode": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string",
          "enum": [
            "RAW",
            "TEMPLATED"
          ]
        },
        "resourceTypeAndResourceNamesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARNING"
          ]
        },
        "stackName": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      },
      "title": "OpaPolicy"
    },
    "OpaPolicyExecutionResult": {
      "type": "object",
      "properties": {
        "errorDetails": {
          "type": "object"
        },
        "serverResponse": {
          "type": "object"
        },
        "status": {
          "type": "boolean"
        }
      },
      "title": "OpaPolicyExecutionResult"
    },
    "OpaPolicyRequest": {
      "type": "object",
      "properties": {
        "clusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "flavours": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputData": {
          "type": "object"
        },
        "packageName": {
          "type": "string"
        },
        "policyName": {
          "type": "string"
        },
        "policyType": {
          "type": "string",
          "enum": [
            "RAW",
            "TEMPLATED"
          ]
        },
        "rawPolicy": {
          "type": "string"
        },
        "resourceTypeAndResourceNamesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARNING"
          ]
        },
        "stackName": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      },
      "title": "OpaPolicyRequest"
    },
    "OtherVersion": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "OtherVersion"
    },
    "OutputReference": {
      "type": "object",
      "properties": {
        "outputName": {
          "type": "string"
        },
        "outputTitle": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "OutputReference"
    },
    "OverrideConfig": {
      "type": "object",
      "properties": {
        "branchName": {
          "type": "string"
        },
        "gitOrgName": {
          "type": "string"
        },
        "gitOverrideUrl": {
          "type": "string"
        },
        "migrationFailureMessage": {
          "type": "string"
        },
        "overridesMigrationStatus": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "PENDING",
            "COMPLETED",
            "FAILED"
          ]
        },
        "overridesRepoName": {
          "type": "string"
        },
        "uiOverridesEnabled": {
          "type": "boolean"
        }
      },
      "title": "OverrideConfig"
    },
    "OverrideObject": {
      "type": "object",
      "properties": {
        "changeLog": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "overrides": {
          "type": "object"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "OverrideObject"
    },
    "OverrideRequest": {
      "type": "object",
      "properties": {
        "changeLog": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "OverrideRequest"
    },
    "OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "blockOwnerDeletion": {
          "type": "boolean"
        },
        "controller": {
          "type": "boolean"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "title": "OwnerReference"
    },
    "PVC": {
      "type": "object",
      "properties": {
        "accessMode": {
          "type": "string",
          "enum": [
            "ReadWriteOnce",
            "ReadOnlyMany",
            "ReadWriteMany"
          ]
        },
        "mountPath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "storageSize": {
          "type": "integer",
          "format": "int32"
        },
        "volumeDirectory": {
          "type": "string"
        }
      },
      "title": "PVC"
    },
    "Package": {
      "type": "object",
      "properties": {
        "all_containers_images_whitelisted": {
          "type": "boolean"
        },
        "app_version": {
          "type": "string"
        },
        "category": {
          "type": "integer",
          "format": "int32"
        },
        "deprecated": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "has_values_schema": {
          "type": "boolean"
        },
        "logo_image_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "normalized_name": {
          "type": "string"
        },
        "official": {
          "type": "boolean"
        },
        "package_id": {
          "type": "string"
        },
        "production_organizations_count": {
          "type": "integer",
          "format": "int32"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "security_report_summary": {
          "$ref": "#/definitions/SecurityReportSummary"
        },
        "signed": {
          "type": "boolean"
        },
        "stars": {
          "type": "integer",
          "format": "int32"
        },
        "ts": {
          "type": "integer",
          "format": "int64"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Package"
    },
    "PackageResponse": {
      "type": "object",
      "properties": {
        "packages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Package"
          }
        }
      },
      "title": "PackageResponse"
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      },
      "title": "Pageable"
    },
    "Page«AbstractCluster»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractCluster"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«AbstractCluster»"
    },
    "Page«Chat»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chat"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«Chat»"
    },
    "Page«DeploymentLog»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«DeploymentLog»"
    },
    "Page«FacetsAuditLogResponse»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsAuditLogResponse"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«FacetsAuditLogResponse»"
    },
    "Page«ResourceReleaseImpact»": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReleaseImpact"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Page«ResourceReleaseImpact»"
    },
    "PasswordChange": {
      "type": "object",
      "properties": {
        "newPassword": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        }
      },
      "title": "PasswordChange"
    },
    "PauseReleaseRequest": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "pauseReleases": {
          "type": "boolean"
        }
      },
      "title": "PauseReleaseRequest"
    },
    "PendingMigrationDetails": {
      "type": "object",
      "properties": {
        "blockReleases": {
          "type": "boolean"
        },
        "migrationStatusAvailable": {
          "type": "boolean"
        },
        "pendingMigrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationScriptMetadata"
          }
        }
      },
      "title": "PendingMigrationDetails"
    },
    "PersistentVolumeClaimDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "associatedPods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "capacity": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pvcAccessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "status": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        }
      },
      "title": "PersistentVolumeClaimDTO"
    },
    "PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSource": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/TypedObjectReference"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "selector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "storageClassName": {
          "type": "string"
        },
        "volumeMode": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "title": "PersistentVolumeClaimSpec"
    },
    "PersistentVolumeClaimTemplate": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/PersistentVolumeClaimSpec"
        }
      },
      "title": "PersistentVolumeClaimTemplate"
    },
    "PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      },
      "title": "PersistentVolumeClaimVolumeSource"
    },
    "PersistentVolumeDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "capacity": {
          "type": "string"
        },
        "claim": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pvAccessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reason": {
          "type": "string"
        },
        "reclaimPolicy": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        }
      },
      "title": "PersistentVolumeDTO"
    },
    "PhotonPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "pdID": {
          "type": "string"
        }
      },
      "title": "PhotonPersistentDiskVolumeSource"
    },
    "PipelineNode": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/Config"
        },
        "id": {
          "type": "string"
        },
        "parentClusterId": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "PipelineNode"
    },
    "Pod": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/PodSpec"
        },
        "status": {
          "$ref": "#/definitions/PodStatus"
        }
      },
      "title": "Pod"
    },
    "PodAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodAffinityTerm"
          }
        }
      },
      "title": "PodAffinity"
    },
    "PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topologyKey": {
          "type": "string"
        }
      },
      "title": "PodAffinityTerm"
    },
    "PodAntiAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodAffinityTerm"
          }
        }
      },
      "title": "PodAntiAffinity"
    },
    "PodCondition": {
      "type": "object",
      "properties": {
        "lastProbeTime": {
          "type": "string"
        },
        "lastTransitionTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "PodCondition"
    },
    "PodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodDNSConfigOption"
          }
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "PodDNSConfig"
    },
    "PodDNSConfigOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "PodDNSConfigOption"
    },
    "PodDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "string"
        },
        "restarts": {
          "type": "integer",
          "format": "int32"
        },
        "role": {
          "type": "string",
          "enum": [
            "active",
            "preview",
            "na"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Running",
            "Succeeded",
            "Failed",
            "Unknown",
            "CrashLoopBackOff",
            "ImagePullBackOff",
            "ContainerCreating",
            "Terminating",
            "Evicted",
            "Completed",
            "Restarting",
            "Error",
            "InvalidImageName"
          ]
        }
      },
      "title": "PodDTO"
    },
    "PodIP": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        }
      },
      "title": "PodIP"
    },
    "PodOS": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "PodOS"
    },
    "PodReadinessGate": {
      "type": "object",
      "properties": {
        "conditionType": {
          "type": "string"
        }
      },
      "title": "PodReadinessGate"
    },
    "PodReplicationDetails": {
      "type": "object",
      "properties": {
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "unavailable": {
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PodReplicationDetails"
    },
    "PodResource": {
      "type": "object",
      "properties": {
        "cpu": {
          "type": "string"
        },
        "memory": {
          "type": "string"
        }
      },
      "title": "PodResource"
    },
    "PodResourceClaim": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/ClaimSource"
        }
      },
      "title": "PodResourceClaim"
    },
    "PodSchedulingGate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "PodSchedulingGate"
    },
    "PodSecurityContext": {
      "type": "object",
      "properties": {
        "fsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "fsGroupChangePolicy": {
          "type": "string"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/SeccompProfile"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "sysctls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sysctl"
          }
        },
        "windowsOptions": {
          "$ref": "#/definitions/WindowsSecurityContextOptions"
        }
      },
      "title": "PodSecurityContext"
    },
    "PodSpec": {
      "type": "object",
      "properties": {
        "activeDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "affinity": {
          "$ref": "#/definitions/Affinity"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          }
        },
        "dnsConfig": {
          "$ref": "#/definitions/PodDNSConfig"
        },
        "dnsPolicy": {
          "type": "string"
        },
        "enableServiceLinks": {
          "type": "boolean"
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EphemeralContainer"
          }
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostAlias"
          }
        },
        "hostIPC": {
          "type": "boolean"
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "hostPID": {
          "type": "boolean"
        },
        "hostUsers": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalObjectReference"
          }
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          }
        },
        "nodeName": {
          "type": "string"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "os": {
          "$ref": "#/definitions/PodOS"
        },
        "overhead": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Quantity"
          }
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "priorityClassName": {
          "type": "string"
        },
        "readinessGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodReadinessGate"
          }
        },
        "resourceClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodResourceClaim"
          }
        },
        "restartPolicy": {
          "type": "string"
        },
        "runtimeClassName": {
          "type": "string"
        },
        "schedulerName": {
          "type": "string"
        },
        "schedulingGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodSchedulingGate"
          }
        },
        "securityContext": {
          "$ref": "#/definitions/PodSecurityContext"
        },
        "serviceAccount": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        },
        "setHostnameAsFQDN": {
          "type": "boolean"
        },
        "shareProcessNamespace": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Toleration"
          }
        },
        "topologySpreadConstraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopologySpreadConstraint"
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        }
      },
      "title": "PodSpec"
    },
    "PodStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodCondition"
          }
        },
        "containerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerStatus"
          }
        },
        "ephemeralContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerStatus"
          }
        },
        "hostIP": {
          "type": "string"
        },
        "initContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerStatus"
          }
        },
        "message": {
          "type": "string"
        },
        "nominatedNodeName": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "podIP": {
          "type": "string"
        },
        "podIPs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodIP"
          }
        },
        "qosClass": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        }
      },
      "title": "PodStatus"
    },
    "PodStatusDTO": {
      "type": "object",
      "properties": {
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "completions": {
          "type": "string"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        },
        "succeeded": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PodStatusDTO"
    },
    "PodsMetricSource": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      },
      "title": "PodsMetricSource"
    },
    "PodsMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        }
      },
      "title": "PodsMetricStatus"
    },
    "PolicyTemplateDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "flavours": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputData": {
          "type": "object"
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "templateId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        }
      },
      "title": "PolicyTemplateDTO"
    },
    "Port": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int64"
        },
        "lbPort": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string",
          "enum": [
            "TCP",
            "HTTP",
            "HTTPS"
          ]
        }
      },
      "title": "Port"
    },
    "PortInfo": {
      "type": "object",
      "properties": {
        "port": {
          "type": "string"
        }
      },
      "title": "PortInfo"
    },
    "PortworxVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      },
      "title": "PortworxVolumeSource"
    },
    "PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "preference": {
          "$ref": "#/definitions/NodeSelectorTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PreferredSchedulingTerm"
    },
    "Probe": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/ExecAction"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "grpc": {
          "$ref": "#/definitions/GRPCAction"
        },
        "httpGet": {
          "$ref": "#/definitions/HTTPGetAction"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "$ref": "#/definitions/TCPSocketAction"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Probe"
    },
    "ProjectTypeMappedResource": {
      "type": "object",
      "properties": {
        "flavor": {
          "type": "string"
        },
        "intent": {
          "type": "string"
        },
        "intentType": {
          "type": "string"
        }
      },
      "title": "ProjectTypeMappedResource"
    },
    "ProjectTypeRequest": {
      "type": "object",
      "required": [
        "allowedClouds",
        "name",
        "templateGitDetails"
      ],
      "properties": {
        "allowedClouds": {
          "type": "array",
          "description": "Set of allowed clouds",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        },
        "baseProjectName": {
          "type": "string",
          "example": "base-project",
          "description": "Base project name"
        },
        "description": {
          "type": "string",
          "example": "This is a sample project type",
          "description": "Description of the project type"
        },
        "mappedResources": {
          "type": "array",
          "description": "Allowed modules for the project",
          "items": {
            "$ref": "#/definitions/ProjectTypeMappedResource"
          }
        },
        "name": {
          "type": "string",
          "example": "Cloud Project",
          "description": "Name of the project type"
        },
        "templateGitDetails": {
          "description": "Details of the Git template used by the project type",
          "$ref": "#/definitions/TemplateGitDetails"
        },
        "useBranch": {
          "type": "boolean",
          "example": true,
          "description": "Use branch flag"
        }
      },
      "title": "ProjectTypeRequest",
      "description": "Request model for Project Type operations."
    },
    "ProjectTypeResponse": {
      "type": "object",
      "properties": {
        "allowedClouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        },
        "associatedBlueprints": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseProjectName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "mappedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectTypeMappedResource"
          }
        },
        "name": {
          "type": "string"
        },
        "templateGitDetails": {
          "$ref": "#/definitions/TemplateGitDetails"
        }
      },
      "title": "ProjectTypeResponse"
    },
    "ProjectedVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeProjection"
          }
        }
      },
      "title": "ProjectedVolumeSource"
    },
    "PromotionWorkflow": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "defaultWorkflow": {
          "type": "boolean"
        },
        "hierarchies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowHierarchy"
          }
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "stackName": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        }
      },
      "title": "PromotionWorkflow"
    },
    "ProvidedAuthenticatedResource": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "ProvidedAuthenticatedResource"
    },
    "ProvidedCloudResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ProvidedCloudResource"
    },
    "ProvidedResources": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "providedAuthenticatedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedAuthenticatedResource"
          }
        },
        "providedCloudResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedCloudResource"
          }
        },
        "providedShardedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedShardedService"
          }
        },
        "providedUnauthenticatedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedUnauthenticatedResource"
          }
        }
      },
      "title": "ProvidedResources"
    },
    "ProvidedShardedService": {
      "type": "object",
      "properties": {
        "shards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedAuthenticatedResource"
          }
        }
      },
      "title": "ProvidedShardedService"
    },
    "ProvidedUnauthenticatedResource": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ProvidedUnauthenticatedResource"
    },
    "PullRequestResponse": {
      "type": "object",
      "properties": {
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "htmlUrl": {
          "type": "string"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GithubLabel"
          }
        },
        "mergedAt": {
          "type": "string",
          "format": "date-time"
        },
        "number": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/GithubUser"
        }
      },
      "title": "PullRequestResponse"
    },
    "PushCredentialsRequest": {
      "type": "object",
      "required": [
        "applicationName",
        "artifactory",
        "blueprintName"
      ],
      "properties": {
        "applicationName": {
          "type": "string",
          "example": "my-app",
          "description": "Application name associated with the request."
        },
        "artifactory": {
          "type": "string",
          "example": "DOCKER",
          "description": "Name of the artifactory."
        },
        "blueprintName": {
          "type": "string",
          "example": "blueprint-1",
          "description": "Blueprint name for which credentials are requested."
        }
      },
      "title": "PushCredentialsRequest",
      "description": "Request details for generating push credentials for an artifact."
    },
    "PushCredentialsResponse": {
      "type": "object",
      "properties": {
        "artifactoryUri": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "repositoryUri": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      },
      "title": "PushCredentialsResponse"
    },
    "QASuite": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string"
        },
        "environmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "module": {
          "type": "string"
        },
        "runId": {
          "type": "string"
        }
      },
      "title": "QASuite"
    },
    "QASuiteResult": {
      "type": "object",
      "properties": {
        "deploymentId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "moduleStatusMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "redeployment": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "NA",
            "SUCCESS",
            "ERROR",
            "FAILURE",
            "TIMEOUT",
            "CANCELLED",
            "RUNNING"
          ]
        }
      },
      "title": "QASuiteResult"
    },
    "QualityGate": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "status": {
          "type": "string"
        }
      },
      "title": "QualityGate"
    },
    "Quantity": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      },
      "title": "Quantity"
    },
    "QueuedRelease": {
      "type": "object",
      "properties": {
        "allowDestroy": {
          "type": "boolean"
        },
        "canQueue": {
          "type": "boolean"
        },
        "clusterId": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "forceRelease": {
          "type": "boolean"
        },
        "hotfixResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "id": {
          "type": "string"
        },
        "overrideBuildSteps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "parallelRelease": {
          "type": "boolean"
        },
        "releaseTraceId": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "tfVersion": {
          "$ref": "#/definitions/TfVersion"
        },
        "triggeredBy": {
          "type": "string"
        },
        "withRefresh": {
          "type": "boolean"
        }
      },
      "title": "QueuedRelease"
    },
    "QuobyteVolumeSource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "registry": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        }
      },
      "title": "QuobyteVolumeSource"
    },
    "RBACEntity": {
      "type": "object",
      "properties": {
        "category": {
          "$ref": "#/definitions/Category"
        },
        "childPermissions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "permission": {
          "type": "string"
        }
      },
      "title": "RBACEntity"
    },
    "RBDVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keyring": {
          "type": "string"
        },
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      },
      "title": "RBDVolumeSource"
    },
    "RawError": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "resolution": {
          "type": "string"
        },
        "stackTrace": {
          "type": "string"
        }
      },
      "title": "RawError"
    },
    "RefExpression": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        }
      },
      "title": "RefExpression"
    },
    "RegionAndZone": {
      "type": "object",
      "properties": {
        "availabilityZones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "region": {
          "type": "string"
        }
      },
      "title": "RegionAndZone"
    },
    "Registry": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        }
      },
      "title": "Registry"
    },
    "ReleaseButtonStatus": {
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "nbTooltip": {
          "type": "string"
        }
      },
      "title": "ReleaseButtonStatus"
    },
    "ReleaseChanges": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceChange"
          }
        },
        "deploymentId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "ReleaseChanges"
    },
    "ReleaseDetails": {
      "type": "object",
      "properties": {
        "deploymentLogId": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "stackVersion": {
          "type": "string"
        },
        "triggeredBy": {
          "type": "string"
        },
        "triggeredOn": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ReleaseDetails"
    },
    "ReleasePreviewResponse": {
      "type": "object",
      "properties": {
        "changedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceStatus"
          }
        },
        "clusterId": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        }
      },
      "title": "ReleasePreviewResponse"
    },
    "ReleaseStream": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prod": {
          "type": "boolean"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ReleaseStream"
    },
    "ReleaseStreamRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prod": {
          "type": "boolean"
        }
      },
      "title": "ReleaseStreamRequest"
    },
    "ReleaseStreamResponse": {
      "type": "object",
      "properties": {
        "builtIn": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "mappedClusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "prod": {
          "type": "boolean"
        }
      },
      "title": "ReleaseStreamResponse"
    },
    "ReplicaStatus": {
      "type": "object",
      "properties": {
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "targetReplicas": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ReplicaStatus"
    },
    "ReplicasetDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "desired": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "role": {
          "type": "string",
          "enum": [
            "active",
            "preview",
            "na"
          ]
        }
      },
      "title": "ReplicasetDTO"
    },
    "Repository": {
      "type": "object",
      "properties": {
        "display_name": {
          "type": "string"
        },
        "kind": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "official": {
          "type": "boolean"
        },
        "organization_display_name": {
          "type": "string"
        },
        "organization_name": {
          "type": "string"
        },
        "repository_id": {
          "type": "string"
        },
        "scanner_disabled": {
          "type": "boolean"
        },
        "url": {
          "type": "string"
        },
        "verified_publisher": {
          "type": "boolean"
        }
      },
      "title": "Repository"
    },
    "ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      },
      "title": "ResetPasswordRequest"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "$ref": "#/definitions/File"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "$ref": "#/definitions/URI"
        },
        "url": {
          "$ref": "#/definitions/URL"
        }
      },
      "title": "Resource"
    },
    "ResourceChange": {
      "type": "object",
      "properties": {
        "changeType": {
          "type": "string",
          "enum": [
            "ADDED",
            "MODIFIED",
            "REMOVED"
          ]
        },
        "changedAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangedAttribute"
          }
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceChange"
    },
    "ResourceClaim": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "ResourceClaim"
    },
    "ResourceDetails": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "ResourceDetails"
    },
    "ResourceEnableDisableRequest": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "filename": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceEnableDisableRequest"
    },
    "ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "divisor": {
          "$ref": "#/definitions/Quantity"
        },
        "resource": {
          "type": "string"
        }
      },
      "title": "ResourceFieldSelector"
    },
    "ResourceFileRequest": {
      "type": "object",
      "properties": {
        "content": {
          "type": "object"
        },
        "directory": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "flavor": {
          "type": "string"
        },
        "mergeContent": {
          "type": "object"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceFileRequest"
    },
    "ResourceGroup": {
      "type": "object",
      "properties": {
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "resourceInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceInfo"
          }
        }
      },
      "title": "ResourceGroup"
    },
    "ResourceGroupRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "title": "ResourceGroupRequest"
    },
    "ResourceHistory": {
      "type": "object",
      "properties": {
        "alpha": {
          "type": "boolean"
        },
        "artifactVersion": {
          "$ref": "#/definitions/HistoryMetadata"
        },
        "blueprintVersion": {
          "$ref": "#/definitions/HistoryMetadata"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "overrideVersion": {
          "$ref": "#/definitions/HistoryMetadata"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceStatus": {
          "type": "string",
          "enum": [
            "RUNNING",
            "STOPPED"
          ]
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceHistory"
    },
    "ResourceHistoryOverview": {
      "type": "object",
      "properties": {
        "artifactVersion": {
          "$ref": "#/definitions/ResourceStatusMetadata"
        },
        "blueprintVersion": {
          "$ref": "#/definitions/ResourceStatusMetadata"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "overridden": {
          "type": "boolean"
        },
        "overrideVersion": {
          "$ref": "#/definitions/ResourceStatusMetadata"
        },
        "releaseButtonStatus": {
          "$ref": "#/definitions/ReleaseButtonStatus"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceStatus": {
          "type": "string",
          "enum": [
            "RUNNING",
            "STOPPED"
          ]
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceHistoryOverview"
    },
    "ResourceInfo": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceList"
          }
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ResourceInfo"
    },
    "ResourceList": {
      "type": "object",
      "properties": {
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceList"
    },
    "ResourceMetadata": {
      "type": "object",
      "properties": {
        "artifactUrl": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "overrideVersion": {
          "type": "integer",
          "format": "int64"
        },
        "overrideVersionId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceMetadata"
    },
    "ResourceMetricSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      },
      "title": "ResourceMetricSource"
    },
    "ResourceMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "ResourceMetricStatus"
    },
    "ResourceOutProperties": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object"
        },
        "clusterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "interfaces": {
          "type": "object"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ResourceOutProperties"
    },
    "ResourceReleaseImpact": {
      "type": "object",
      "properties": {
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Change"
          }
        },
        "clusterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "releaseDetails": {
          "$ref": "#/definitions/ReleaseDetails"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceReleaseImpact"
    },
    "ResourceRenameRequest": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string"
        },
        "newResourceName": {
          "type": "string"
        },
        "oldFileName": {
          "type": "string"
        },
        "oldResourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ResourceRenameRequest"
    },
    "ResourceRequirements": {
      "type": "object",
      "properties": {
        "claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceClaim"
          }
        },
        "limits": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Quantity"
          }
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Quantity"
          }
        }
      },
      "title": "ResourceRequirements"
    },
    "ResourceStatus": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "currentArtifactUrl": {
          "type": "string"
        },
        "currentBPVersion": {
          "type": "string"
        },
        "currentOverrideVersion": {
          "type": "string"
        },
        "currentState": {
          "type": "string",
          "enum": [
            "ENABLED",
            "DISABLED"
          ]
        },
        "disabled": {
          "type": "boolean"
        },
        "hasStateChange": {
          "type": "boolean"
        },
        "healthStatus": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "isAlpha": {
          "type": "boolean"
        },
        "liveArtifactUrl": {
          "type": "string"
        },
        "liveBPVersion": {
          "type": "string"
        },
        "liveOverrideVersion": {
          "type": "string"
        },
        "previousState": {
          "type": "string",
          "enum": [
            "ENABLED",
            "DISABLED"
          ]
        },
        "releaseStatus": {
          "type": "string",
          "enum": [
            "QUEUED",
            "FAILED",
            "IN_PROGRESS",
            "COMPLETED"
          ]
        },
        "releaseTraceId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "syncStatus": {
          "type": "string",
          "enum": [
            "IN_SYNC",
            "OUT_OF_SYNC"
          ]
        }
      },
      "title": "ResourceStatus"
    },
    "ResourceStatusMetadata": {
      "type": "object",
      "properties": {
        "liveVersion": {
          "type": "string"
        },
        "pendingVersion": {
          "type": "string"
        },
        "previewVersion": {
          "type": "string"
        }
      },
      "title": "ResourceStatusMetadata"
    },
    "ResourceStatusResponse": {
      "type": "object",
      "properties": {
        "environmentName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "resourceStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceStatus"
          }
        }
      },
      "title": "ResourceStatusResponse"
    },
    "ResourceSyncRequest": {
      "type": "object",
      "properties": {
        "environmentName": {
          "type": "string"
        },
        "projectName": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        }
      },
      "title": "ResourceSyncRequest"
    },
    "Response": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "Response"
    },
    "Result": {
      "type": "object",
      "properties": {
        "details": {
          "type": "string"
        },
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "parentObject": {
          "type": "string"
        }
      },
      "title": "Result"
    },
    "Role": {
      "type": "object",
      "properties": {
        "baseRole": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      },
      "title": "Role"
    },
    "RoleInfo": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "roleName": {
          "type": "string"
        }
      },
      "title": "RoleInfo"
    },
    "RoleMapping": {
      "type": "object",
      "properties": {
        "baseRole": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RBACEntity"
          }
        },
        "k8sClusterRole": {
          "type": "string"
        },
        "k8sRole": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "roleName": {
          "type": "string"
        },
        "roleType": {
          "type": "string",
          "enum": [
            "SYSTEM_DEFINED",
            "USER_DEFINED"
          ]
        }
      },
      "title": "RoleMapping"
    },
    "S3DumpAwsConfig": {
      "type": "object",
      "properties": {
        "awsAccessKeyId": {
          "type": "string"
        },
        "awsSecretAccessKey": {
          "type": "string"
        }
      },
      "title": "S3DumpAwsConfig"
    },
    "SELinuxOptions": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "title": "SELinuxOptions"
    },
    "SSLConfigs": {
      "type": "object",
      "properties": {
        "sslcertName": {
          "type": "string"
        }
      },
      "title": "SSLConfigs"
    },
    "SaasArtifactRequest": {
      "type": "object",
      "required": [
        "artifactRegisterType",
        "artifactRegisterValue",
        "artifactUri",
        "artifactory",
        "blueprintName"
      ],
      "properties": {
        "applicationName": {
          "type": "string",
          "example": "my-app",
          "description": "Application name of the artifact."
        },
        "artifactRegisterType": {
          "type": "string",
          "example": "ENVIRONMENT",
          "description": "Type of artifact registration.",
          "enum": [
            "GIT_REF",
            "ENVIRONMENT",
            "RELEASE_STREAM"
          ]
        },
        "artifactRegisterValue": {
          "type": "string",
          "example": "release-1.0",
          "description": "Artifact register value dependent on register type."
        },
        "artifactUri": {
          "type": "string",
          "example": "docker.io/project/image:tag",
          "description": "URI of the artifact."
        },
        "artifactory": {
          "type": "string",
          "example": "DOCKER",
          "description": "Name of the artifactory."
        },
        "blueprintName": {
          "type": "string",
          "example": "blueprint-1",
          "description": "Blueprint name associated with the artifact."
        },
        "ciName": {
          "type": "string",
          "example": "ci-my-app",
          "description": "Custom CI name if applicationName is not used."
        },
        "externalId": {
          "type": "string",
          "example": 12345,
          "description": "External identifier for the artifact."
        },
        "repositoryName": {
          "type": "string",
          "example": "repo-name",
          "description": "Repository name in the artifactory."
        },
        "tag": {
          "type": "string",
          "example": "v1.0",
          "description": "The tag of the artifact."
        }
      },
      "title": "SaasArtifactRequest",
      "description": "Request details for registering a SaaS artifact."
    },
    "SaveAsTemplateRequest": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "clouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        },
        "description": {
          "type": "string"
        },
        "gitRef": {
          "type": "string"
        },
        "gitUrl": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "organisationName": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "MULTI_INSTANCE",
            "SINGLE_INSTANCE",
            "AUTO_INJECT"
          ]
        }
      },
      "title": "SaveAsTemplateRequest"
    },
    "SavePasswordResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "title": "SavePasswordResetPasswordRequest"
    },
    "SaveProvidedResourcesRequest": {
      "type": "object",
      "properties": {
        "provided": {
          "type": "boolean"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "secrets": {
          "$ref": "#/definitions/JsonNode"
        },
        "variables": {
          "$ref": "#/definitions/JsonNode"
        }
      },
      "title": "SaveProvidedResourcesRequest"
    },
    "ScaleIOVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "storageMode": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      },
      "title": "ScaleIOVolumeSource"
    },
    "ScheduleRequest": {
      "type": "object",
      "properties": {
        "byDay": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT",
              "SUN"
            ]
          }
        },
        "byTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "frequency": {
          "type": "string",
          "enum": [
            "PER_MINUTE",
            "HOURLY",
            "DAILY",
            "WEEKLY"
          ]
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "pauseReleaseSchedule": {
          "type": "boolean"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE"
          ]
        },
        "timeZone": {
          "$ref": "#/definitions/TimeZone"
        }
      },
      "title": "ScheduleRequest"
    },
    "SeccompProfile": {
      "type": "object",
      "properties": {
        "localhostProfile": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "SeccompProfile"
    },
    "SecretDTO": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "dataCount": {
          "type": "integer",
          "format": "int32"
        },
        "dataKeySet": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "SecretDTO"
    },
    "SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "title": "SecretEnvSource"
    },
    "SecretKeySelector": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "title": "SecretKeySelector"
    },
    "SecretProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      },
      "title": "SecretProjection"
    },
    "SecretVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "optional": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        }
      },
      "title": "SecretVolumeSource"
    },
    "SecretsContextDTO": {
      "type": "object",
      "properties": {
        "cloudAccountSecretsId": {
          "type": "string"
        },
        "cpCloud": {
          "type": "string"
        },
        "gcpSecretManagerEnabled": {
          "type": "boolean"
        },
        "gcpSecretManagerMode": {
          "type": "string",
          "enum": [
            "AUTOMATIC_REPLICATION",
            "USER_MANAGED_REPLICATION",
            "REGIONAL"
          ]
        },
        "gcpSecretManagerProjectId": {
          "type": "string"
        },
        "providedSecretsId": {
          "type": "string"
        },
        "secretManagerRegion": {
          "type": "string"
        }
      },
      "title": "SecretsContextDTO"
    },
    "SecurityContext": {
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "$ref": "#/definitions/Capabilities"
        },
        "privileged": {
          "type": "boolean"
        },
        "procMount": {
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/SeccompProfile"
        },
        "windowsOptions": {
          "$ref": "#/definitions/WindowsSecurityContextOptions"
        }
      },
      "title": "SecurityContext"
    },
    "SecurityReportSummary": {
      "type": "object",
      "properties": {
        "critical": {
          "type": "integer",
          "format": "int32"
        },
        "high": {
          "type": "integer",
          "format": "int32"
        },
        "low": {
          "type": "integer",
          "format": "int32"
        },
        "medium": {
          "type": "integer",
          "format": "int32"
        },
        "unknown": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SecurityReportSummary"
    },
    "Selectors": {
      "type": "object",
      "properties": {
        "displayType": {
          "type": "string",
          "enum": [
            "INLINE",
            "TAB",
            "PAGE"
          ]
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "subType": {
          "type": "string"
        }
      },
      "title": "Selectors"
    },
    "ServiceAccountTokenProjection": {
      "type": "object",
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        }
      },
      "title": "ServiceAccountTokenProjection"
    },
    "ServiceBackendPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ServiceBackendPort"
    },
    "ServiceCost": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "serviceName": {
          "type": "string"
        }
      },
      "title": "ServiceCost"
    },
    "ServiceCostDTO": {
      "type": "object",
      "properties": {
        "cost": {
          "type": "number",
          "format": "double"
        },
        "previousCost": {
          "type": "number",
          "format": "double"
        },
        "serviceName": {
          "type": "string"
        }
      },
      "title": "ServiceCostDTO"
    },
    "ServiceDTO": {
      "type": "object",
      "properties": {
        "age": {
          "type": "integer",
          "format": "int64"
        },
        "clusterIp": {
          "type": "string"
        },
        "externalIp": {
          "type": "string"
        },
        "ipFamilies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "port": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicePortDTO"
          }
        },
        "type": {
          "type": "string"
        }
      },
      "title": "ServiceDTO"
    },
    "ServiceOverview": {
      "type": "object",
      "properties": {
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortInfo"
          }
        }
      },
      "title": "ServiceOverview"
    },
    "ServicePortDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "targetPort": {
          "type": "string"
        }
      },
      "title": "ServicePortDTO"
    },
    "Setting": {
      "type": "object",
      "properties": {
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "defaultValue": {
          "type": "object"
        },
        "description": {
          "type": "string"
        },
        "entity": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "settingType": {
          "type": "string",
          "enum": [
            "NUMBER",
            "STRING",
            "ENUM",
            "BOOLEAN",
            "FLOAT"
          ]
        },
        "supportedForClouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        }
      },
      "title": "Setting"
    },
    "SilenceAlarmRequest": {
      "type": "object",
      "properties": {
        "comment": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "snoozeInMinutes": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SilenceAlarmRequest"
    },
    "SimpleOauth2User": {
      "type": "object",
      "properties": {
        "allowedAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedClusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedStackNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "associatedToResourceGroup": {
          "type": "boolean"
        },
        "attributes": {
          "type": "object"
        },
        "authorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantedAuthority"
          }
        },
        "clusterRoleBinding": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "stackResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackResource"
          }
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "SimpleOauth2User"
    },
    "SnapshotInfo": {
      "type": "object",
      "properties": {
        "cloudSpecificId": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "instanceName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "pinned": {
          "type": "boolean"
        },
        "resourceType": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "storageSize": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "SnapshotInfo"
    },
    "Sock5OkHttpClientFactory": {
      "type": "object",
      "title": "Sock5OkHttpClientFactory"
    },
    "SoftDelete": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "id": {
          "type": "string"
        }
      },
      "title": "SoftDelete"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      },
      "title": "Sort"
    },
    "Stack": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "allowedClouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        },
        "alphaBlueprint": {
          "type": "boolean"
        },
        "appPassword": {
          "type": "string"
        },
        "artifactories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "autoEnabledSubStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "branch": {
          "type": "string"
        },
        "changeLog": {
          "type": "string"
        },
        "childStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterVariablesMeta": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableDetails"
          }
        },
        "coderAccountId": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configModulesDisabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "gitOpsEnabled": {
          "type": "boolean"
        },
        "gitOverridesEnabled": {
          "type": "boolean"
        },
        "githubOrganizationName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "importedProject": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "monoRepo": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "overrideConfig": {
          "$ref": "#/definitions/OverrideConfig"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "previewModulesAllowed": {
          "type": "boolean"
        },
        "primaryCloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "projectTypeId": {
          "type": "string"
        },
        "projectTypeName": {
          "type": "string"
        },
        "providedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "relativePath": {
          "type": "string"
        },
        "stackVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "starterProject": {
          "type": "boolean"
        },
        "template": {
          "type": "boolean"
        },
        "templateId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "vcs": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        },
        "vcsUrl": {
          "type": "string"
        },
        "versionControlAccountId": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "Stack"
    },
    "StackGitLog": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "commitLog": {
          "$ref": "#/definitions/CommitLog"
        },
        "directory": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "StackGitLog"
    },
    "StackResource": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "StackResource"
    },
    "StackTemplate": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "gitUrl": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "monoRepo": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        }
      },
      "title": "StackTemplate"
    },
    "StackTemplateInput": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "inputType": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      },
      "title": "StackTemplateInput"
    },
    "StatefulSetDTO": {
      "type": "object",
      "properties": {
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "podCount": {
          "type": "integer",
          "format": "int32"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "StatefulSetDTO"
    },
    "StorageOSVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeNamespace": {
          "type": "string"
        }
      },
      "title": "StorageOSVolumeSource"
    },
    "StreamingResponseBody": {
      "type": "object",
      "title": "StreamingResponseBody"
    },
    "Subscription": {
      "type": "object",
      "properties": {
        "channelAddress": {
          "type": "string"
        },
        "channelId": {
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        },
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notificationSubject": {
          "type": "string"
        },
        "notificationType": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATUS_UPDATE",
            "APP_DEPLOYMENT",
            "QASUITE_SANITY",
            "DR_RESULT",
            "STACK_SIGNOFF",
            "ALERT",
            "TEST",
            "APPLICATION_DEPLOYMENT_COMPLETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_LAUNCH",
            "ENVIRONMENT_DESTROY",
            "ENVIRONMENT_CONFIGURE"
          ]
        },
        "payloadJson": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "test": {
          "type": "boolean"
        }
      },
      "title": "Subscription"
    },
    "Substack": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "allowedClouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES"
            ]
          }
        },
        "alphaBlueprint": {
          "type": "boolean"
        },
        "appPassword": {
          "type": "string"
        },
        "artifactPath": {
          "type": "string"
        },
        "artifactories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "autoEnabledSubStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "branch": {
          "type": "string"
        },
        "changeLog": {
          "type": "string"
        },
        "childStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterVariablesMeta": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableDetails"
          }
        },
        "coderAccountId": {
          "type": "string"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "configModulesDisabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "gitOpsEnabled": {
          "type": "boolean"
        },
        "gitOverridesEnabled": {
          "type": "boolean"
        },
        "githubOrganizationName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "importedProject": {
          "type": "boolean"
        },
        "label": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "monoRepo": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "overrideConfig": {
          "$ref": "#/definitions/OverrideConfig"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "previewModulesAllowed": {
          "type": "boolean"
        },
        "primaryCloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES"
          ]
        },
        "projectTypeId": {
          "type": "string"
        },
        "projectTypeName": {
          "type": "string"
        },
        "providedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "relativePath": {
          "type": "string"
        },
        "stackVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "starterProject": {
          "type": "boolean"
        },
        "template": {
          "type": "boolean"
        },
        "templateId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "tfModule": {
          "type": "boolean"
        },
        "user": {
          "type": "string"
        },
        "vcs": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        },
        "vcsUrl": {
          "type": "string"
        },
        "versionControlAccountId": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "Substack"
    },
    "SubstackRequest": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "tfModule": {
          "type": "boolean"
        },
        "vcs": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        },
        "vcsUrl": {
          "type": "string"
        },
        "versionControlAccountId": {
          "type": "string"
        }
      },
      "title": "SubstackRequest"
    },
    "SupportedVersions": {
      "type": "object",
      "properties": {
        "componentType": {
          "type": "string",
          "enum": [
            "KUBERNETES"
          ]
        },
        "supportedVersions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "SupportedVersions"
    },
    "Sysctl": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Sysctl"
    },
    "TCPSocketAction": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/IntOrString"
        }
      },
      "title": "TCPSocketAction"
    },
    "TFModule": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "example": 67890,
          "description": "Account identifier"
        },
        "aliasFlavors": {
          "type": "array",
          "example": [
            "medium",
            "extra-large"
          ],
          "description": "Alias flavors for the module",
          "items": {
            "type": "string"
          }
        },
        "allowedTestProjects": {
          "type": "array",
          "example": [
            "project-1",
            "project-2"
          ],
          "description": "List of test projects where this module will be available. If absent, it is available globally.",
          "items": {
            "type": "string"
          }
        },
        "clouds": {
          "type": "array",
          "example": [
            "gcp"
          ],
          "description": "Supported cloud providers for this module",
          "items": {
            "type": "string"
          }
        },
        "containsOverridableFields": {
          "type": "boolean"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "facetsYaml": {
          "type": "string",
          "description": "Facets YAML content"
        },
        "featureBranch": {
          "type": "boolean"
        },
        "flavor": {
          "type": "string",
          "example": "large",
          "description": "Flavor of the TF Module"
        },
        "gitRef": {
          "type": "string",
          "example": "develop",
          "description": "Reference to a specific GIT branch or commit"
        },
        "gitUrl": {
          "type": "string",
          "example": "https://gitlab.com/repo.git",
          "description": "URL of the GIT repository"
        },
        "id": {
          "type": "string"
        },
        "inputs": {
          "type": "object",
          "description": "Input parameters for this module",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          }
        },
        "intent": {
          "type": "string",
          "example": "compute",
          "description": "Intent of the TF Module"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "path": {
          "description": "Path information related to TF Module",
          "$ref": "#/definitions/TFModulePath"
        },
        "readmeMd": {
          "type": "string"
        },
        "relativePath": {
          "type": "string",
          "example": "modules/path",
          "description": "Relative path within the repository"
        },
        "sampleJson": {
          "type": "string",
          "example": {},
          "description": "Sample JSON configuration"
        },
        "source": {
          "type": "string",
          "description": "Source of the module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "spec": {
          "type": "string",
          "description": "Specification details of the module"
        },
        "specModeled": {
          "type": "boolean"
        },
        "stage": {
          "type": "string",
          "example": "PUBLISHED",
          "description": "Stage of the TF Module in its lifecycle",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "example": "SIMPLE",
          "description": "Type of the TF Module",
          "enum": [
            "SIMPLE",
            "ADD_ON"
          ]
        },
        "version": {
          "type": "string",
          "example": "2.0.0",
          "description": "Version of the TF Module"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "TFModule",
      "description": "Model representing a Terraform Module"
    },
    "TFModuleListResponseDTO": {
      "type": "object",
      "properties": {
        "clouds": {
          "type": "array",
          "example": [
            "aws",
            "azure"
          ],
          "description": "Supported cloud providers",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "featureBranch": {
          "type": "boolean"
        },
        "flavor": {
          "type": "string",
          "example": "small",
          "description": "Flavor of the TF Module"
        },
        "gitRef": {
          "type": "string"
        },
        "gitUrl": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "intentDetails": {
          "$ref": "#/definitions/IntentResponseDTO"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "previewGitRef": {
          "type": "string"
        },
        "previewGitUrl": {
          "type": "string"
        },
        "previewModuleId": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Source of the TF Module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "stage": {
          "type": "string",
          "example": "PUBLISHED",
          "description": "Stage of the TF Module in its lifecycle",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "tags": {
          "type": "array",
          "example": [
            "tag1",
            "tag2"
          ],
          "description": "Tags associated with the module",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "example": "SIMPLE",
          "description": "Type of the TF Module",
          "enum": [
            "SIMPLE",
            "ADD_ON"
          ]
        },
        "version": {
          "type": "string",
          "example": "1.0.0",
          "description": "Version of the TF Module"
        }
      },
      "title": "TFModuleListResponseDTO"
    },
    "TFModuleLiteDTO": {
      "type": "object",
      "properties": {
        "allowedTestProjects": {
          "type": "array",
          "description": "List of test projects where this module will be available",
          "items": {
            "type": "string"
          }
        },
        "clouds": {
          "type": "array",
          "example": [
            "aws",
            "azure"
          ],
          "description": "Supported cloud providers",
          "items": {
            "type": "string"
          }
        },
        "flavor": {
          "type": "string",
          "example": "small",
          "description": "Flavor of the TF Module"
        },
        "id": {
          "type": "string"
        },
        "inputs": {
          "type": "object",
          "description": "Input parameters for the module",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          }
        },
        "intent": {
          "type": "string",
          "example": "deploy",
          "description": "Intent of the TF Module"
        },
        "intentType": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "description": "Source of the TF Module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "stage": {
          "type": "string",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "tags": {
          "type": "array",
          "example": [
            "tag1",
            "tag2"
          ],
          "description": "Tags associated with the module",
          "items": {
            "type": "string"
          }
        },
        "version": {
          "type": "string",
          "example": "1.0.0",
          "description": "Version of the TF Module"
        }
      },
      "title": "TFModuleLiteDTO",
      "description": "Lightweight DTO for TF Modules providing minimal details"
    },
    "TFModuleLiteListDTO": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TFModuleLiteDTO"
          }
        }
      },
      "title": "TFModuleLiteListDTO"
    },
    "TFModulePath": {
      "type": "object",
      "properties": {
        "etag": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string",
          "enum": [
            "S3",
            "FACETS_S3"
          ]
        }
      },
      "title": "TFModulePath"
    },
    "TFModuleResponseDTO": {
      "type": "object",
      "properties": {
        "aliasFlavors": {
          "type": "array",
          "example": [
            "medium",
            "extra-large"
          ],
          "description": "Alias flavors for the module",
          "items": {
            "type": "string"
          }
        },
        "allowedTestProjects": {
          "type": "array",
          "description": "List of test projects where this module will be available. If absent, it is available globally.",
          "items": {
            "type": "string"
          }
        },
        "clouds": {
          "type": "array",
          "example": [
            "aws",
            "azure"
          ],
          "description": "Supported cloud providers",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "Module description"
        },
        "featureBranch": {
          "type": "boolean"
        },
        "flavor": {
          "type": "string",
          "example": "small",
          "description": "Flavor of the TF Module"
        },
        "gitRef": {
          "type": "string",
          "example": "develop",
          "description": "Reference to a specific GIT branch or commit"
        },
        "gitUrl": {
          "type": "string",
          "example": "https://gitlab.com/repo.git",
          "description": "URL of the GIT repository"
        },
        "id": {
          "type": "string"
        },
        "inputs": {
          "type": "object",
          "description": "Input parameters for this module",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          }
        },
        "intent": {
          "type": "string",
          "example": "compute",
          "description": "Intent of the TF Module"
        },
        "intentDetails": {
          "$ref": "#/definitions/IntentResponseDTO"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "latestVersion": {
          "$ref": "#/definitions/OtherVersion"
        },
        "metadata": {
          "type": "string",
          "description": "Metadata of the module"
        },
        "otherVersions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherVersion"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "previewModuleId": {
          "type": "string"
        },
        "publishedModuleId": {
          "type": "string"
        },
        "readmeMd": {
          "type": "string",
          "description": "Readme content in markdown format"
        },
        "sampleJson": {
          "type": "string",
          "example": {},
          "description": "Sample JSON configuration"
        },
        "source": {
          "type": "string",
          "description": "Source of the TF Module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "spec": {
          "type": "string",
          "description": "Specification details of the module"
        },
        "stage": {
          "type": "string",
          "example": "PUBLISHED",
          "description": "Stage of the TF Module in its lifecycle",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "tags": {
          "type": "array",
          "example": [
            "tag1",
            "tag2"
          ],
          "description": "Tags associated with the module",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "example": "SIMPLE",
          "description": "Type of the TF Module",
          "enum": [
            "SIMPLE",
            "ADD_ON"
          ]
        },
        "version": {
          "type": "string",
          "example": "1.0.0",
          "description": "Version of the TF Module"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "TFModuleResponseDTO"
    },
    "TFOutput": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "facetsYaml": {
          "type": "string"
        },
        "gitRef": {
          "type": "string"
        },
        "gitUrl": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "inferredFromModule": {
          "type": "boolean"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lookupTree": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        }
      },
      "title": "TFOutput"
    },
    "TFOutputRequestDTO": {
      "type": "object",
      "properties": {
        "inferredFromModule": {
          "type": "boolean"
        },
        "lookupTree": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "TFOutputRequestDTO"
    },
    "TFRunConfigurations": {
      "type": "object",
      "properties": {
        "additionalEnvVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "branchOverride": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "TFRunConfigurations"
    },
    "TagDataModel": {
      "type": "object",
      "title": "TagDataModel"
    },
    "Team": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notificationChannels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NotificationChannel"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamResource"
          }
        }
      },
      "title": "Team"
    },
    "TeamMembership": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "teamId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "TeamMembership"
    },
    "TeamResource": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "TeamResource"
    },
    "TemplateGitDetails": {
      "type": "object",
      "required": [
        "accountId",
        "gitRef",
        "gitUrl",
        "path"
      ],
      "properties": {
        "accountId": {
          "type": "string",
          "example": "acct123",
          "description": "Account ID associated with the Git repository"
        },
        "gitRef": {
          "type": "string",
          "example": "main",
          "description": "Git reference (branch or tag)"
        },
        "gitUrl": {
          "type": "string",
          "example": "https://github.com/example/repo.git",
          "description": "Git repository URL"
        },
        "path": {
          "type": "string",
          "example": "/templates/project",
          "description": "Path within the Git repository"
        }
      },
      "title": "TemplateGitDetails",
      "description": "Git details for the template used in Project Type"
    },
    "TemplateResponseDTO": {
      "type": "object",
      "properties": {
        "clouds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "MULTI_INSTANCE",
            "SINGLE_INSTANCE",
            "AUTO_INJECT"
          ]
        }
      },
      "title": "TemplateResponseDTO"
    },
    "TerraformChange": {
      "type": "object",
      "properties": {
        "resourceKey": {
          "type": "string"
        },
        "resourcePath": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Destruction",
            "Creation",
            "Modifications"
          ]
        }
      },
      "title": "TerraformChange"
    },
    "TestBuildDetails": {
      "type": "object",
      "properties": {
        "applicationFamily": {
          "type": "string"
        },
        "applicationId": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "branchType": {
          "type": "string"
        },
        "buildId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "prId": {
          "type": "string"
        },
        "sonarUrl": {
          "type": "string"
        },
        "testStatus": {
          "type": "string",
          "enum": [
            "PASS",
            "FAIL",
            "TEST_FAILED",
            "INPROGRESS"
          ]
        },
        "testStatusRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Condition"
          }
        },
        "timestamp": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "TestBuildDetails"
    },
    "TestNotificationRequest": {
      "type": "object",
      "properties": {
        "authorizationHeader": {
          "type": "string"
        },
        "channelAddress": {
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "integrationKey": {
          "type": "string"
        },
        "notificationType": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATUS_UPDATE",
            "APP_DEPLOYMENT",
            "QASUITE_SANITY",
            "DR_RESULT",
            "STACK_SIGNOFF",
            "ALERT",
            "TEST",
            "APPLICATION_DEPLOYMENT_COMPLETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_LAUNCH",
            "ENVIRONMENT_DESTROY",
            "ENVIRONMENT_CONFIGURE"
          ]
        },
        "payload": {
          "type": "string"
        }
      },
      "title": "TestNotificationRequest"
    },
    "TestRuleResponse": {
      "type": "object",
      "properties": {
        "routeTo": {
          "type": "string"
        }
      },
      "title": "TestRuleResponse"
    },
    "TfVersion": {
      "type": "object",
      "properties": {
        "lastModified": {
          "type": "string",
          "format": "date-time"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "minorVersion": {
          "type": "string",
          "example": "LATEST",
          "description": "LATEST"
        },
        "tfStream": {
          "type": "string"
        }
      },
      "title": "TfVersion"
    },
    "ThemeFileResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      },
      "title": "ThemeFileResponse"
    },
    "TimeZone": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "dstsavings": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "rawOffset": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "TimeZone"
    },
    "ToggleRelease": {
      "type": "object",
      "properties": {
        "pauseReleases": {
          "type": "boolean"
        },
        "stackName": {
          "type": "string"
        }
      },
      "title": "ToggleRelease"
    },
    "TokenPaginatedResponse": {
      "type": "object",
      "properties": {
        "logEventList": {
          "type": "array",
          "items": {
            "type": "object"
          }
        },
        "nextToken": {
          "type": "string"
        }
      },
      "title": "TokenPaginatedResponse"
    },
    "TokenPaginatedResponse«LogEvent»": {
      "type": "object",
      "properties": {
        "logEventList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogEvent"
          }
        },
        "nextToken": {
          "type": "string"
        }
      },
      "title": "TokenPaginatedResponse«LogEvent»"
    },
    "TokenValidationRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "title": "TokenValidationRequest"
    },
    "TokenValidity": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "enum": [
            "TOKEN_NOT_FOUND",
            "TOKEN_EXPIRED",
            "TOKEN_ALREADY_USED"
          ]
        },
        "username": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      },
      "title": "TokenValidity"
    },
    "Toleration": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Toleration"
    },
    "ToolsConfig": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "toolsKey": {
          "type": "string"
        },
        "toolsUser": {
          "type": "string"
        }
      },
      "title": "ToolsConfig"
    },
    "TopologySpreadConstraint": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "matchLabelKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxSkew": {
          "type": "integer",
          "format": "int32"
        },
        "minDomains": {
          "type": "integer",
          "format": "int32"
        },
        "nodeAffinityPolicy": {
          "type": "string"
        },
        "nodeTaintsPolicy": {
          "type": "string"
        },
        "topologyKey": {
          "type": "string"
        },
        "whenUnsatisfiable": {
          "type": "string"
        }
      },
      "title": "TopologySpreadConstraint"
    },
    "TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "TypedLocalObjectReference"
    },
    "TypedObjectReference": {
      "type": "object",
      "properties": {
        "apiGroup": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      },
      "title": "TypedObjectReference"
    },
    "URI": {
      "type": "object",
      "properties": {
        "absolute": {
          "type": "boolean"
        },
        "authority": {
          "type": "string"
        },
        "fragment": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "opaque": {
          "type": "boolean"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "query": {
          "type": "string"
        },
        "rawAuthority": {
          "type": "string"
        },
        "rawFragment": {
          "type": "string"
        },
        "rawPath": {
          "type": "string"
        },
        "rawQuery": {
          "type": "string"
        },
        "rawSchemeSpecificPart": {
          "type": "string"
        },
        "rawUserInfo": {
          "type": "string"
        },
        "scheme": {
          "type": "string"
        },
        "schemeSpecificPart": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      },
      "title": "URI"
    },
    "URL": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        },
        "content": {
          "type": "object"
        },
        "defaultPort": {
          "type": "integer",
          "format": "int32"
        },
        "file": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "ref": {
          "type": "string"
        },
        "userInfo": {
          "type": "string"
        }
      },
      "title": "URL"
    },
    "User": {
      "type": "object",
      "properties": {
        "clusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupId": {
          "type": "string"
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "User"
    },
    "UserAccessToken": {
      "type": "object",
      "properties": {
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tokenId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "UserAccessToken"
    },
    "UserGroup": {
      "type": "object",
      "properties": {
        "accounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "additionalRoles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "associatedResourceGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseRole": {
          "type": "string"
        },
        "changeLog": {
          "type": "string"
        },
        "clusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterRoleBindings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "groupName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "stackNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "UserGroup"
    },
    "UserVCSTokenRequest": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "personalAccessToken": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "UserVCSTokenRequest"
    },
    "UserVCSTokenResponse": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      },
      "title": "UserVCSTokenResponse"
    },
    "Utilization": {
      "type": "object",
      "properties": {
        "current": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      },
      "title": "Utilization"
    },
    "VCSAccountUpdateRequest": {
      "type": "object",
      "properties": {
        "organisationName": {
          "type": "string"
        },
        "projectKey": {
          "type": "string"
        }
      },
      "title": "VCSAccountUpdateRequest"
    },
    "VCSLinkingRequest": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/OneTimeWebhook"
        }
      },
      "title": "VCSLinkingRequest"
    },
    "VCSLinkingResponse": {
      "type": "object",
      "properties": {
        "redirectUrl": {
          "type": "string"
        },
        "webhook": {
          "$ref": "#/definitions/OneTimeWebhook"
        }
      },
      "title": "VCSLinkingResponse"
    },
    "VCSOrganizationsRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "vcsType": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        }
      },
      "title": "VCSOrganizationsRequest"
    },
    "VCSTokenDetailsResponse": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "expired": {
          "type": "boolean"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        },
        "id": {
          "type": "string"
        }
      },
      "title": "VCSTokenDetailsResponse"
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "syntaxError": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "Syntax Error",
            "Missing File Error",
            "Reference Error",
            "Invalid Filename"
          ]
        }
      },
      "title": "ValidationError"
    },
    "ValidationResponse": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintValidationError"
          }
        },
        "filename": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      },
      "title": "ValidationResponse"
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        },
        "valid": {
          "type": "boolean"
        }
      },
      "title": "ValidationResult"
    },
    "VariableCountDto": {
      "type": "object",
      "properties": {
        "overriddenSecrets": {
          "type": "integer",
          "format": "int32"
        },
        "overriddenVariables": {
          "type": "integer",
          "format": "int32"
        },
        "totalSecrets": {
          "type": "integer",
          "format": "int32"
        },
        "totalVariables": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "VariableCountDto"
    },
    "VariableDetails": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "global": {
          "type": "boolean"
        },
        "required": {
          "type": "boolean"
        },
        "secret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "VariableDetails"
    },
    "Variables": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "global": {
          "type": "boolean"
        },
        "secret": {
          "type": "boolean"
        },
        "status": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "OVERRIDDEN"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Variables"
    },
    "Version": {
      "type": "object",
      "properties": {
        "archiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "entity": {
          "$ref": "#/definitions/Versioned"
        },
        "id": {
          "type": "string"
        },
        "sequenceKey": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "Version"
    },
    "Versioned": {
      "type": "object",
      "properties": {
        "numberOfVersions": {
          "type": "integer",
          "format": "int32"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "title": "Versioned"
    },
    "Volume": {
      "type": "object",
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/definitions/AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/definitions/AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/definitions/AzureFileVolumeSource"
        },
        "cephfs": {
          "$ref": "#/definitions/CephFSVolumeSource"
        },
        "cinder": {
          "$ref": "#/definitions/CinderVolumeSource"
        },
        "configMap": {
          "$ref": "#/definitions/ConfigMapVolumeSource"
        },
        "csi": {
          "$ref": "#/definitions/CSIVolumeSource"
        },
        "downwardAPI": {
          "$ref": "#/definitions/DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "$ref": "#/definitions/EmptyDirVolumeSource"
        },
        "ephemeral": {
          "$ref": "#/definitions/EphemeralVolumeSource"
        },
        "fc": {
          "$ref": "#/definitions/FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/definitions/FlexVolumeSource"
        },
        "flocker": {
          "$ref": "#/definitions/FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "$ref": "#/definitions/GitRepoVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/definitions/GlusterfsVolumeSource"
        },
        "hostPath": {
          "$ref": "#/definitions/HostPathVolumeSource"
        },
        "iscsi": {
          "$ref": "#/definitions/ISCSIVolumeSource"
        },
        "name": {
          "type": "string"
        },
        "nfs": {
          "$ref": "#/definitions/NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/definitions/PortworxVolumeSource"
        },
        "projected": {
          "$ref": "#/definitions/ProjectedVolumeSource"
        },
        "quobyte": {
          "$ref": "#/definitions/QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/definitions/RBDVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/definitions/ScaleIOVolumeSource"
        },
        "secret": {
          "$ref": "#/definitions/SecretVolumeSource"
        },
        "storageos": {
          "$ref": "#/definitions/StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/VsphereVirtualDiskVolumeSource"
        }
      },
      "title": "Volume"
    },
    "VolumeDevice": {
      "type": "object",
      "properties": {
        "devicePath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "VolumeDevice"
    },
    "VolumeMount": {
      "type": "object",
      "properties": {
        "mountPath": {
          "type": "string"
        },
        "mountPropagation": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "subPath": {
          "type": "string"
        },
        "subPathExpr": {
          "type": "string"
        }
      },
      "title": "VolumeMount"
    },
    "VolumeProjection": {
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/ConfigMapProjection"
        },
        "downwardAPI": {
          "$ref": "#/definitions/DownwardAPIProjection"
        },
        "secret": {
          "$ref": "#/definitions/SecretProjection"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/ServiceAccountTokenProjection"
        }
      },
      "title": "VolumeProjection"
    },
    "VsphereVirtualDiskVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "storagePolicyID": {
          "type": "string"
        },
        "storagePolicyName": {
          "type": "string"
        },
        "volumePath": {
          "type": "string"
        }
      },
      "title": "VsphereVirtualDiskVolumeSource"
    },
    "WebComponentDTO": {
      "type": "object",
      "required": [
        "enabled",
        "name",
        "remoteURL",
        "type"
      ],
      "properties": {
        "contextualAttributes": {
          "type": "object",
          "example": {
            "theme": "dark",
            "width": "100%"
          },
          "description": "Additional contextual attributes for component configuration"
        },
        "enabled": {
          "type": "boolean",
          "example": true,
          "description": "Flag to enable/disable component visibility"
        },
        "iconURL": {
          "type": "string",
          "example": "https://example.com/icon.png",
          "description": "URL of the icon to be displayed in the UI"
        },
        "id": {
          "type": "string",
          "example": "abc123",
          "description": "Unique identifier for the web component"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string",
          "example": "custom-dashboard",
          "description": "Unique identifier for the web component"
        },
        "order": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "Position priority of the component"
        },
        "remoteURL": {
          "type": "string",
          "example": "https://example.com/component.js",
          "description": "Hosted location of the component script"
        },
        "tooltip": {
          "type": "string",
          "example": "Custom Dashboard Component",
          "description": "Tooltip text to display on hover"
        },
        "type": {
          "type": "string",
          "example": "NAV_APP",
          "description": "Type of web component (NAV_TYPE or TAB_TYPE)",
          "enum": [
            "NAV_APP",
            "TAB_APP"
          ]
        }
      },
      "title": "WebComponentDTO",
      "description": "Model representing a Web Component for embedding custom applications"
    },
    "WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "podAffinityTerm": {
          "$ref": "#/definitions/PodAffinityTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "WeightedPodAffinityTerm"
    },
    "WindowsSecurityContextOptions": {
      "type": "object",
      "properties": {
        "gmsaCredentialSpec": {
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "type": "string"
        },
        "hostProcess": {
          "type": "boolean"
        },
        "runAsUserName": {
          "type": "string"
        }
      },
      "title": "WindowsSecurityContextOptions"
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Workflow"
    },
    "WorkflowHierarchy": {
      "type": "object",
      "properties": {
        "registrationValue": {
          "type": "string"
        },
        "sequence": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "WorkflowHierarchy"
    },
    "WorkflowRun": {
      "type": "object",
      "properties": {
        "actor": {
          "$ref": "#/definitions/GithubUser"
        },
        "conclusion": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "displayTitle": {
          "type": "string"
        },
        "headBranch": {
          "type": "string"
        },
        "headCommit": {
          "$ref": "#/definitions/Commit"
        },
        "htmlUrl": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "runNumber": {
          "type": "integer",
          "format": "int64"
        },
        "runStartedAt": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string"
        },
        "triggeringActor": {
          "$ref": "#/definitions/GithubUser"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "WorkflowRun"
    }
  }
}