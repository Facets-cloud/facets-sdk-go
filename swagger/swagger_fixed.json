{
  "swagger": "2.0",
  "info": {
    "title": "Control-plane",
    "description": "API Documentation",
    "version": "1.0"
  },
  "host": "facetsdemo.console.facets.cloud",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/cc-ui/v1/workflow/{workflowId}": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "getWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "updateWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "deleteWorkflow",
        "parameters": [
          {
            "name": "workflowId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/web-components/{webComponentId}": {
      "get": {
        "tags": [
          "ui-web-component-controller"
        ],
        "operationId": "getComponent",
        "parameters": [
          {
            "name": "webComponentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-web-component-controller"
        ],
        "operationId": "updateComponent",
        "parameters": [
          {
            "name": "webComponentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-web-component-controller"
        ],
        "operationId": "deleteComponent",
        "parameters": [
          {
            "name": "webComponentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/user-token": {
      "get": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserVCSTokenResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "operationId": "update",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserVCSTokenResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserVCSTokenRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "operationId": "add",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserVCSTokenResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserVCSTokenRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/user-groups/": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "operationId": "getAllGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-user-group-controller"
        ],
        "operationId": "updateUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-user-group-controller"
        ],
        "operationId": "createUserGroup",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/terraform/cluster/{clusterId}": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "operationId": "getTfStreamForCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterTfVersionMapping"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "operationId": "setTfVersionForCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TfVersion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterTfVersionMapping"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "operationId": "deleteTfStreamForCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "updateStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "deleteStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/variables": {
      "put": {
        "tags": [
          "Variable Management"
        ],
        "summary": "Update variable/secret",
        "description": "Updates an existing variable/secret with project-level default and optional environment-specific values",
        "operationId": "updateVariable",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my-stack"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variable updated successfully"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project or variable not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "Variable Management"
        ],
        "summary": "Add new variable/secret",
        "description": "Adds a new variable/secret with project-level default and optional environment-specific values",
        "operationId": "addVariable",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my-stack"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VariableRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variable added successfully"
          },
          "400": {
            "description": "Invalid request or variable already exists",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/enable-git-ops": {
      "put": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "enableGitOps",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnableGitOpsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/settings/value/{entityType}/{entityId}": {
      "get": {
        "tags": [
          "ui-settings-controller"
        ],
        "operationId": "getSettingValue",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CLUSTER",
                "BLUE_PRINT",
                "TEMPLATE_INPUT",
                "CONTROL_PLANE",
                "IAC",
                "ARTIFACT_CI",
                "USER_GROUP",
                "ACCOUNT",
                "ARTIFACTORY"
              ]
            }
          },
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-settings-controller"
        ],
        "operationId": "addSettingValue",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CLUSTER",
                "BLUE_PRINT",
                "TEMPLATE_INPUT",
                "CONTROL_PLANE",
                "IAC",
                "ARTIFACT_CI",
                "USER_GROUP",
                "ACCOUNT",
                "ARTIFACTORY"
              ]
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/settings/onboarding-display/{value}": {
      "put": {
        "tags": [
          "ui-settings-controller"
        ],
        "operationId": "setOnboardingDisplay",
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resource-groups/{resourceGroupId}": {
      "get": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "getResourceGroup",
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "update_1",
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroupRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resource-groups/{resourceGroupId}/resources": {
      "put": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "updateAllResources",
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceInfo"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "updateResource",
        "parameters": [
          {
            "name": "resourceGroupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceInfo"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/project-types/{id}": {
      "get": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Get project type by ID",
        "description": "- **Description:** Retrieve a specific project type by its ID. \n- **Restrictions:** None. \n- **Permissions:** No specific permissions required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getProjectTypeById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ProjectTypeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project type not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Update an existing project type",
        "description": "- **Description:** Updates details of a specified project type by its ID. \n- **Restrictions:** Only users with the correct permissions can update project types. \n- **Permissions:** Requires `PROJECT_TYPE_WRITE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "updateProjectType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTypeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project type updated successfully",
            "schema": {
              "$ref": "#/definitions/ProjectTypeResponse"
            }
          },
          "400": {
            "description": "Invalid request or project ID",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project type not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Delete a project type",
        "description": "- **Description:** Deletes an existing project type based on its ID. \n- **Restrictions:** Only users with the correct RBAC permission can delete a project type. \n- **Permissions:** Requires `PROJECT_TYPE_DELETE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "deleteProjectType",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Project type deleted successfully"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project type not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/opa/{policyName}": {
      "get": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "getPolicy",
        "parameters": [
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicy"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "editPolicy",
        "parameters": [
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpaPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicy"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "createPolicy",
        "parameters": [
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OpaPolicyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicy"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "deletePolicy",
        "parameters": [
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/oauth/{registrationId}": {
      "put": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "operationId": "updateIntegrations",
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomOAuth2ClientRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "operationId": "deleteIntegrations",
        "parameters": [
          {
            "name": "registrationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/oauth/generic-oauth-integration": {
      "put": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "operationId": "editGenericOAuthIntegration",
        "parameters": [
          {
            "name": "registrationId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericOAuth2ClientRegistration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "operationId": "addGenericOAuthIntegration",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GenericOAuth2ClientRegistration"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/subscriptions/{subscriptionId}": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "editSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "deleteSubscription",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/channels/{channelId}": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getChannel",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NotificationChannel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "editNotificationChannel",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NotificationChannel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "deleteNotificationChannel",
        "parameters": [
          {
            "name": "channelId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/maintenance-window": {
      "put": {
        "tags": [
          "ui-maintenance-window-controller"
        ],
        "operationId": "update_2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/maintenance-window/{clusterId}/enable-disable": {
      "put": {
        "tags": [
          "ui-maintenance-window-controller"
        ],
        "operationId": "enableDisable",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "disabled",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/kubernetes/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "operationId": "getK8sCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "operationId": "updateK8sCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/gcp/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "operationId": "getGCPCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "operationId": "updateGCPCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/environments/{clusterId}": {
      "get": {
        "tags": [
          "ui-environment-controller"
        ],
        "operationId": "getEnvironment",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-environment-controller"
        ],
        "operationId": "updateEnvironment",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}": {
      "get": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "operationId": "getAllDomains",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DomainDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "operationId": "updateDomainMapping",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DomainDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "operationId": "addDomainMapping",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DomainDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-domain-mapping-controller"
        ],
        "operationId": "deleteDomainMapping",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "alias",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/variables": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "updateVariables",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/VariableDetails"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "addVariables",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/VariableDetails"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "deleteVariables",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/resource-enable-disable": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "bulkEditDisabledForResources",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceEnableDisableRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch/{branch}": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "updateResources",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changeAffectedResources",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UpdateBlueprintRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "createResources",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "deleteResources",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceFileRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch/{branch}/resource-inherit-from-base": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "bulkEditInheritFromBaseForResources",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceInheritFromBaseRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch/{branch}/resource-enable-disable": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "bulkEditDisabledForResources_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceEnableDisableRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch/{branch}/rename": {
      "put": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "renameResource",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceRenameRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/delivery-pipeline/{stackName}": {
      "get": {
        "tags": [
          "ui-delivery-pipeline-controller"
        ],
        "operationId": "getDeliveryPipeline",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PipelineNode"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-delivery-pipeline-controller"
        ],
        "operationId": "updateDeliveryPipeline",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PipelineNode"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PipelineNode"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/custom-role/{roleName}": {
      "get": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "operationId": "getCustomRole",
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleMapping"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "operationId": "updateCustomRole",
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomRoleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleMapping"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "operationId": "deleteCustomRole",
        "parameters": [
          {
            "name": "roleName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/content/files/{contentId}": {
      "put": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "operationId": "updateContentFile",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "operationId": "deleteContentFile",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "editToolsConfig",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toolsConfigId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getTemplateInputByUid",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "updateTemplateInput",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "deleteTemplateInputs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "updateClusterSchedules",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "deleteClusterSchedule",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resource-inherit-from-base": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "bulkEditInheritFromBaseForResources_1",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceInheritFromBaseRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resource-enable-disable": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "bulkEnableDisableResources",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceEnableDisableRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/promote": {
      "put": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "promote",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/signoff": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "signOffDeployment",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/unlock": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "stateUnlock",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lockId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/release": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "release",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withRefresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "forceRelease",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "allowDestroy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canQueue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/releaseV2/{releaseType}": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "releaseV2",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "releaseType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "withRefresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "forceRelease",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "allowDestroy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "canQueue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/launch": {
      "put": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "launchCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/copy-configurations-selective": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "summary": "Copy configurations from one cluster to another selectively",
        "description": "Copies configurations from the source cluster to the target cluster. When mode is INCLUDE: Only specified configuration types are copied. When mode is EXCLUDE: All configuration types are copied except the specified ones.",
        "operationId": "copyConfigurationsSelective",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CopyConfigurationsRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "updateAvailabilitySchedules",
        "parameters": [
          {
            "name": "scheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduleRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/abort": {
      "put": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "abort",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/draft-cluster/{clusterId}": {
      "put": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "updateDraftCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DraftClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/ci-cd/detach": {
      "put": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Detach Rule and Workflow",
        "description": "- **Description:** Detaches a rule and workflow from an artifact CI. \n- **Restrictions:** Existing CI registration required. \n- **Permissions:** Requires `ARTIFACT_CI_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "detachRuleAndWorkflow",
        "responses": {
          "200": {
            "description": "Rule and workflow detached successfully."
          },
          "400": {
            "description": "Invalid input.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttachDetachCiRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/ci-cd/attach": {
      "put": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Attach Rule and Workflow",
        "description": "- **Description:** Attaches a rule and workflow to an artifact CI. \n- **Restrictions:** CI must exist or will be created for the project. \n- **Permissions:** Requires `ARTIFACT_CI_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "attachRuleAndWorkflow",
        "responses": {
          "200": {
            "description": "Rule and workflow attached successfully."
          },
          "400": {
            "description": "Invalid input.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AttachDetachCiRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/azure/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "operationId": "getAzureCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "operationId": "updateAzureCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/aws/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "operationId": "getClusterUsingGET2",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "operationId": "updateClusterUsingPUT2",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/reclassify": {
      "put": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "reclassifyArtifacts",
        "parameters": [
          {
            "name": "artifactCiId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts-ci/{ciId}": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "getArtifactCI",
        "parameters": [
          {
            "name": "ciId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "updateArtifactCI",
        "parameters": [
          {
            "name": "ciId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "deleteArtifactCI",
        "parameters": [
          {
            "name": "ciId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifact-routing-rule": {
      "get": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "operationId": "getAllArtifactRoutingRules",
        "parameters": [
          {
            "name": "stackName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registrationType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ENVIRONMENT",
                "RELEASE_STREAM",
                "HYBRID"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArtifactRoutingRuleResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "operationId": "updateArtifactRoutingRule",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "operationId": "addArtifactRoutingRule",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/kubernetes/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateKubernetesAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/gitlab/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateGitLabAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/github/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateGitHubAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/gcp/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateGcpAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/coder/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateCoderAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/bitbucket/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateBitBucketAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/azure/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateAzureAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/aws/{id}": {
      "put": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateAwsAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/users/{userId}": {
      "put": {
        "tags": [
          "application-controller"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/users/{userId}/changePassword": {
      "put": {
        "tags": [
          "application-controller"
        ],
        "operationId": "changePassword",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PasswordChange"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-kubernetes": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkK8sAccount",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadKubernetesAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-gitlab": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkGitlabAccount",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadGitlabOauthAppPayload"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-github": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkGithubAccount",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadGithubAppInstallationPayload"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-gcp": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkGcpAccount",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadGcpAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-ecr": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkECR",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadECRArtifactory"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-docker-registries": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkDockerRegistries",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadBasicDockerDTO"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-bitbucket": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkBitbucketAccount",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadBitbucketOauthAppPayload"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-azure": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkAzureAccount",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadAzureAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/link-aws": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "linkAwsAccount",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimePayloadAwsAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/github-installation-request": {
      "post": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "processGithubInstallationRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GithubAppInstallationRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GithubAppInstallationRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public-ui/v1/user/token/validate": {
      "post": {
        "tags": [
          "ui-no-auth-user-controller"
        ],
        "operationId": "validateToken",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenValidity"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TokenValidationRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public-ui/v1/user/savePassword": {
      "post": {
        "tags": [
          "ui-no-auth-user-controller"
        ],
        "operationId": "savePassword",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SavePasswordResetPasswordRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public-ui/v1/user/resetPassword": {
      "post": {
        "tags": [
          "ui-no-auth-user-controller"
        ],
        "operationId": "resetPasswordRequest",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v2/assistant/{threadId}/getChat": {
      "post": {
        "tags": [
          "ui-assistant-controller"
        ],
        "operationId": "getChat",
        "parameters": [
          {
            "name": "threadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssistantResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v2/assistant/chat": {
      "post": {
        "tags": [
          "ui-assistant-controller"
        ],
        "summary": "Continue Chat",
        "operationId": "continueChat",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssistantResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AssistantRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/workflow": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "getAllWorkflows",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionWorkflow"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "createWorkflow",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/web-components": {
      "get": {
        "tags": [
          "ui-web-component-controller"
        ],
        "operationId": "getAllComponents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WebComponentDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-web-component-controller"
        ],
        "operationId": "createComponent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebComponentDTO"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/{versionId}/restore": {
      "post": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "restore",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities/{entityId}": {
      "post": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "restoreSoftDelete",
        "parameters": [
          {
            "name": "entityId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/updatePassword": {
      "post": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "updatePassword",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PasswordChange"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/invite-users": {
      "post": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "inviteUsers",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/InviteUserRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/createAccessToken": {
      "post": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "createToken",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserAccessToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccessToken"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/themeFile": {
      "post": {
        "tags": [
          "ui-theme-file-controller"
        ],
        "operationId": "saveThemeFile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/tf-outputs": {
      "get": {
        "tags": [
          "TF Output Management"
        ],
        "operationId": "getAllOutputs",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFOutputResponseDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "TF Output Management"
        ],
        "operationId": "createOrUpdateOutput",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFOutputResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TFOutputRequestDTO"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/terraform/sync-release-stream-mapping": {
      "post": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "operationId": "populateReleaseStreamTfVersionMapping",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/variables/bulk": {
      "post": {
        "tags": [
          "Variable Management"
        ],
        "summary": "Add multiple new variables/secrets",
        "description": "Adds multiple new variables/secrets with project-level defaults and optional environment-specific values",
        "operationId": "addVariablesBulk",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my-stack"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "description": "List of variable requests with project defaults and environment values",
              "items": {
                "$ref": "#/definitions/VariableRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Variables added successfully"
          },
          "400": {
            "description": "Invalid request or variables already exist",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/toggleRelease": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "toggleRelease",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ToggleRelease"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToggleRelease"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/template": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "saveAsTemplate",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/template-v2": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "saveAsTemplateV2",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveAsTemplateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/notification/subscriptions": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getAllSubscriptions",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "createSubscription",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/v2": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "createStackV2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateBlueprintRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/substack/{substackName}": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "createSubStack",
        "parameters": [
          {
            "name": "substackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SubstackRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Substack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/starter-project": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "createStarterProject",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/project": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "createProject",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateProjectRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/migrate-overrides-v2": {
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "migrateOverridesToGitV2",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MigrateOverridesRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getStacks",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Stack"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "createStack",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resources/sync": {
      "post": {
        "tags": [
          "ui-resource-status-controller"
        ],
        "operationId": "syncResource",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceSyncRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resource-groups": {
      "get": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "findAll",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "create",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ResourceGroupRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resource-groups/update-resource-groups-for-resource": {
      "post": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "updateResourceGroupsForResource",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddResourceToGroupsRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/release-stream": {
      "get": {
        "tags": [
          "ui-release-stream-controller"
        ],
        "operationId": "getAll_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReleaseStreamResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-release-stream-controller"
        ],
        "operationId": "add_1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReleaseStream"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReleaseStreamRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/project-types": {
      "get": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Get all project types",
        "description": "- **Description:** Retrieve a list of all existing project types. \n- **Restrictions:** None. \n- **Permissions:** No specific permissions required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getAllProjectTypes",
        "parameters": [
          {
            "name": "legacy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProjectTypeResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-project-type-controller"
        ],
        "summary": "Add a new project type",
        "description": "- **Description:** Creates a new project type from the provided request details. \n- **Restrictions:** Only users with the appropriate permissions can add project types. \n- **Permissions:** Requires `PROJECT_TYPE_WRITE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "addProjectType",
        "responses": {
          "200": {
            "description": "Project type created successfully",
            "schema": {
              "$ref": "#/definitions/ProjectTypeResponse"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProjectTypeRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/opa/{policyName}/execute": {
      "post": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "executePolicy",
        "parameters": [
          {
            "name": "policyName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OpaPolicyExecutionResult"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/opa/enable-disable-policies": {
      "post": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "bulkEditOpaPolicyState",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EnableDisableOPAPolicy"
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/onetime-webhook/register": {
      "post": {
        "tags": [
          "ui-one-time-webhook-controller"
        ],
        "operationId": "registerWebhook",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/oauth": {
      "get": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "operationId": "getAllIntegrations",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-o-auth-controller"
        ],
        "operationId": "addIntegrations",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomOAuth2ClientRegistration"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/": {
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getFiltersForSubscriptions",
        "parameters": [
          {
            "name": "notificationType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DEPLOYMENT_STATUS_UPDATE",
                "APP_DEPLOYMENT",
                "QASUITE_SANITY",
                "DR_RESULT",
                "STACK_SIGNOFF",
                "ALERT",
                "TEST",
                "APPLICATION_DEPLOYMENT_COMPLETE",
                "ENVIRONMENT_CREATE",
                "ENVIRONMENT_DELETE",
                "ENVIRONMENT_LAUNCH",
                "ENVIRONMENT_DESTROY",
                "ENVIRONMENT_CONFIGURE"
              ]
            }
          },
          {
            "name": "tagName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CLUSTER_NAME",
                "CLUSTER_TYPE",
                "QASUITE_RESULT",
                "DR_ACTION",
                "DR_STATUS",
                "STACK_NAME",
                "SEVERITY",
                "ALERT_NAME",
                "DEPLOYMENT_STATUS",
                "APPLICATION_NAME",
                "SEND_RESOLVED",
                "RELEASE_TYPE"
              ]
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagDataModel"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/subscriptions": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getAllSubscriptions_1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "createSubscription_1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Subscription"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Subscription"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/channels": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getAllChannels",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "createNotificationChannel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationChannel"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/NotificationChannel"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/channels/test": {
      "post": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "testNotificationChannel",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TestNotificationRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/{id}/mark-published": {
      "post": {
        "tags": [
          "Module Management"
        ],
        "summary": "Mark Module as Published",
        "description": "- **Description:** Marks a specific module version as published.\n- **Permissions:** Requires MODULE_WRITE permission. \n- **Audit Logging:** Yes",
        "operationId": "markAsPublishedById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/upload": {
      "post": {
        "tags": [
          "Module Management"
        ],
        "summary": "Upload a module",
        "description": "- **Description:** Uploads a module using a file.\n- **Permissions:** Requires MODULE_WRITE permission.\n- **Parameters:**\n  - `file`: The module file to upload\n  - `metadata` (optional): Additional module metadata including:\n    - `gitUrl`: Web URL of the git repository (Expected to embed the commit id)\n    - `gitRef`: Git reference (branch, tag, or commit)\n    - `isFeatureBranch`: If this is true, this preview module cannot be directly marked as published until we register the module again with this as false.\n- **Audit Logging:** Yes",
        "operationId": "uploadModule",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "description": "",
            "schema": {
              "required": [
                "file"
              ],
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "format": "binary"
                },
                "metadata": {
                  "$ref": "#/definitions/ModuleMetadata"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/version/{version}/mark-published": {
      "post": {
        "tags": [
          "Module Management"
        ],
        "summary": "Mark Module as Published",
        "description": "- **Description:** Marks a specific module version as published.\n- **Permissions:** Requires MODULE_WRITE permission. \n- **Audit Logging:** Yes",
        "operationId": "markAsPublished",
        "parameters": [
          {
            "name": "intent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flavor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/bootstrap": {
      "post": {
        "tags": [
          "Module Management"
        ],
        "summary": "Bootstrap Modules",
        "description": "- **Description:** Bootstraps modules for initialization.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "bootstrapModules",
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/kubernetes/clusters": {
      "post": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "operationId": "createK8sCluster",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesClusterRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/kubernetes/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-k-8s-cluster-controller"
        ],
        "operationId": "createDraftCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/intents": {
      "get": {
        "tags": [
          "Intent Management"
        ],
        "operationId": "getAllIntents",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IntentResponseDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "Intent Management"
        ],
        "operationId": "createOrUpdateIntent",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IntentResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/IntentRequestDTO"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/gcp/clusters": {
      "post": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "operationId": "createGCPCluster",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/gcp/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "operationId": "configureDraftCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GCPClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GCPCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/environments": {
      "post": {
        "tags": [
          "ui-environment-controller"
        ],
        "operationId": "createEnvironment",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/environments/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-environment-controller"
        ],
        "operationId": "configureDraftEnvironment",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/EnvironmentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Environment"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/affected-resources": {
      "post": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAffectedResourcesByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AffectedResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceAffectedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/logs/substack": {
      "post": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "syncSubstackGitHistory",
        "parameters": [
          {
            "name": "substackName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "forceSync",
            "in": "query",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/logs/cluster/{clusterId}": {
      "post": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "syncClusterHistory",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/cluster/{clusterId}/affected-resources": {
      "post": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAffectedResourcesByCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AffectedResourcesRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceAffectedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{templateName}/sync": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "syncSpecifiedBlueprintsWithTemplates",
        "parameters": [
          {
            "name": "templateName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/{templateName}/apply": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "applyTemplate",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "suffix",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/{branch}/create-branch": {
      "post": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "createBranch",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/custom-role": {
      "get": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "operationId": "getAllCustomRoles",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleMapping"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "operationId": "createCustomRole",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RoleMapping"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomRoleRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/content/files": {
      "post": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "operationId": "createContentFile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ContentFile"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/content/files/{contentId}/render": {
      "post": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "operationId": "renderContent",
        "parameters": [
          {
            "name": "contentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/new-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "operationId": "createWorkspaceWithNewBranch",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceNewBranchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/existing-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "operationId": "createWorkspaceWithExistingBranch",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceExistingBranchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/new-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "operationId": "createWorkspaceWithNewBranch_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceNewBranchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/existing-branch": {
      "post": {
        "tags": [
          "ui-coder-controller"
        ],
        "operationId": "createWorkspaceWithExistingBranch_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateWorkspaceExistingBranchRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderWorkspaceResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vars/upsert": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "upsertVars",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/validate": {
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "runValidation",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/tools-config": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getToolsConfig",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "addToolsConfig",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ToolsConfig"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "deleteToolsConfig",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getTemplateInputs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StackTemplateInput"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "createTemplateInputs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "inputType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StackTemplateInput"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/StackTemplateInput"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/sync-with-git": {
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "clusterSyncWithGit",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/silence-alerts": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "silenceAlerts",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SilenceAlarmRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/setClusterCode": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "setClusterCode",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/schedule": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getClusterSchedules",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "addClusterSchedules",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterSchedule"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/restart/{applicationName}": {
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "rollingRestart",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/overrides": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getResourceOverrideObject",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OverrideObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "postResourceOverrideObject",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "doSync",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "changeAffectedResources",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OverrideRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OverrideObject"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/providedResources": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getProvidedResources",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProvidedResources"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "upsertProvidedResources",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProvidedResources"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProvidedResources"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/pause-release": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "pauseRelease",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PauseReleaseRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/overrides": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getOverrides_1",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "overrideSizing",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-chat": {
      "post": {
        "tags": [
          "UI Chat GPT Controller"
        ],
        "summary": "Ask Questions about k8s operations",
        "operationId": "getK8sChats",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "Cluster ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChatContext"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chats found",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Cluster not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getDeployments",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListDeploymentsWrapper"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "createDeployment",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeploymentRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/{resourceType}/{resourceName}/rollback-plan": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "triggerRollbackPlanRelease",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/upload-release-metadata": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "uploadReleaseMetadata",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": false,
            "description": "",
            "schema": {
              "required": [
                "file"
              ],
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/rejectRelease": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "rejectRelease",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/approveRelease": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "approveRelease",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/abort": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "abortRelease",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/terraform-export": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "triggerTerraformExport",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "runHotfixDeploymentRecipe",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allowDestroy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "withRefresh",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "forceRelease",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "isPlan",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "canQueue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "releaseTraceId",
            "in": "query",
            "description": "Unique identifier of the release that you can search it with",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "skipStateCheck",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/HotfixDeploymentRecipe"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/maintenance": {
      "post": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "triggerMaintenanceRelease",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/chat": {
      "get": {
        "tags": [
          "UI Chat GPT Controller"
        ],
        "summary": "Get chats by cluster ID",
        "operationId": "getAllChats",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "Cluster ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chats found",
            "schema": {
              "$ref": "#/definitions/PageChat"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Cluster not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "UI Chat GPT Controller"
        ],
        "summary": "Create a new chat",
        "operationId": "createChat",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "description": "Cluster ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CreateChatRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Chat created successfully",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/availability-schedule": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getAvailabilitySchedules",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AvailabilitySchedule"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "createAvailabilitySchedule",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ScheduleRequest"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/attach-image": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "attachImage",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageOverrideRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/draft-cluster": {
      "post": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "createDraftCluster_1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/DraftClusterRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/chat/{chatId}": {
      "get": {
        "tags": [
          "UI Chat GPT Controller"
        ],
        "summary": "Get chat by ID",
        "operationId": "getChatById",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "Chat ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Chat found",
            "schema": {
              "$ref": "#/definitions/Chat"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Chat not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "UI Chat GPT Controller"
        ],
        "summary": "Send a message to a chat",
        "operationId": "chat",
        "parameters": [
          {
            "name": "chatId",
            "in": "path",
            "description": "Chat ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ChatRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent successfully",
            "schema": {
              "$ref": "#/definitions/ChatMessage"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Chat not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/ci-cd": {
      "post": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Save CI/CD Details",
        "description": "- **Description:** Saves CI/CD configuration details. \n- **Restrictions:** Cannot change registration type after initial configuration. \n- **Permissions:** Requires `CI_CD_CONFIGURE` permission. \n- **Audit Logging:** This operation is logged for audit purposes.",
        "operationId": "saveCiCdDetails",
        "responses": {
          "200": {
            "description": "Successfully saved CI/CD details."
          },
          "400": {
            "description": "Invalid input provided.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CiCdDto"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/ci-cd/register": {
      "post": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Register Artifact SaaS",
        "description": "- **Description:** Registers a new artifact within the system for SaaS. \n- **Restrictions:** Valid artifactory name and consistent registration type required. Blueprint must be CI/CD configured. \n- **Permissions:** Requires `ARTIFACTS_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "registerArtifactSaas",
        "responses": {
          "200": {
            "description": "Artifact registered successfully."
          },
          "400": {
            "description": "Invalid input.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Stack not found.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaasArtifactRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/ci-cd/pushCredentials": {
      "post": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Generate Artifact Push Credentials",
        "description": "- **Description:** Generates push credentials for an artifact. \n- **Restrictions:** Only for supported artifactory types. \n- **Permissions:** Requires `ARTIFACTS_WRITE` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "generateArtifactPushCredentials",
        "responses": {
          "200": {
            "description": "Credentials generated successfully.",
            "schema": {
              "$ref": "#/definitions/PushCredentialsResponse"
            }
          },
          "400": {
            "description": "Invalid request.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PushCredentialsRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/billing/buy-support-plan": {
      "post": {
        "tags": [
          "ui-billing-controller"
        ],
        "operationId": "buySupportPlan",
        "parameters": [
          {
            "name": "successUrl",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cancelUrl",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/azure/clusters": {
      "post": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "operationId": "createAzureCluster",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/azure/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "operationId": "configureDraftCluster_1",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/aws/clusters": {
      "post": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "summary": "Create a new Environment for a blueprint",
        "operationId": "createClusterUsingPOST2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/aws/clusters/onboard-customer": {
      "post": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "operationId": "onboardCustomer",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CustomerOnboardRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/aws/clusters/configure/{clusterId}": {
      "post": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "operationId": "configureDraftCluster_2",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsClusterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/{ciId}/promote/{artifactId}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "promoteArtifact",
        "parameters": [
          {
            "name": "ciId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/upload": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "uploadArtifactsZip",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": false,
            "description": "",
            "schema": {
              "required": [
                "artifactRequest",
                "file"
              ],
              "type": "object",
              "properties": {
                "file": {
                  "type": "string",
                  "format": "binary"
                },
                "artifactRequest": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/register": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "registerArtifact",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifact"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/registerV2": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "registerArtifactV2",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/register-saas": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "registerArtifactSaas_1",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaasArtifactRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/register-by-release-stream": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "registerArtifactByReleaseStream",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactByReleaseStreamRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/register-by-env": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "registerArtifactByEnv",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactByEnvironmentRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/push": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "pushArtifact",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/pushCredentialsV3/artifactName/{artifactName}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "generateArtifactPushCredentialsV3",
        "parameters": [
          {
            "name": "artifactName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "metadata",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRAuthorizationData"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/pushCredentialsV2/artifactName/{artifactName}/registrationType/{registrationType}/value/{registrationValue}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "generateArtifactPushCredentialsV2",
        "parameters": [
          {
            "name": "artifactName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registrationType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "registrationValue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRAuthorizationData"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/pushCredentials/{stackName}/{appName}": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "generateArtifactPushCredentials_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRAuthorizationData"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/promote": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "promoteArtifactByArtifactCiName",
        "parameters": [
          {
            "name": "ciName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "updateReleaseStream",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "currentReleaseStream",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "updatedReleaseStream",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeApps",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "excludeApps",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/attach-image-via-register": {
      "post": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "attachImageViaRegister",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageOverrideRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts-ci": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "getAllArtifactsCI",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArtifactCI"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "createArtifactCI",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts-ci/bulk-edit-workflow": {
      "post": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "bulkEditWorkflow",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BulkWorkflowAttachRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getAllArtifactories",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifactory"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "createECRArtifactory",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getArtifactoryById",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifactory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "updateECRArtifactory",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ECRArtifactory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "deleteECRArtifactory",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}/associate-projects": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "associateStacks",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/others": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "createBasicDockerArtifactory",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicDockerArtifactory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BasicDockerDTO"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/others/{artifactoryId}": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "updateBasicDockerArtifactory",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BasicDockerDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BasicDockerArtifactory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/mirrors": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "createArtifactoryMirror",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactoryMirror"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactoryMirror"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/link-container-registry": {
      "post": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "requestArtifactoryLinking",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ArtifactoryLinkingRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifact-routing-rule/test": {
      "post": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "operationId": "testRuleForBranchName",
        "parameters": [
          {
            "name": "metadata",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Criterion"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TestRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/actions/run": {
      "post": {
        "tags": [
          "ui-tekton-action-controller"
        ],
        "summary": "Run Multiple Actions",
        "description": "- **Description:** Create and run Action Runs for multiple Actions with individual parameters. \n- **Restrictions:** None. \n- **Permissions:** Requires `RUN_ACTION` permission. \n- **Audit Logging:** Not applicable.",
        "operationId": "runActions",
        "responses": {
          "200": {
            "description": "Successfully ran Action Runs.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionRunDto"
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BulkActionRunRequestDto"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/token-details/refresh": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "refreshAllVCSTokenDetails",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/link-vcs": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "requestVCSLinking",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCSLinkingResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VCSLinkingRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/link-cloud": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "requestCloudAccountLinking",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CloudLinkingRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/kubernetes/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "validateKubernetesAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/kubernetes/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createKubernetesAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/KubernetesAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/gitlab/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "validateGitlabAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/gitlab/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createGitLabAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GitLabAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/github/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "validateGithubAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/github/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createGitHubAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GitHubAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/get-organisations": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getVCSOrganisations",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VCSOrganizationsRequest"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/gcp/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "validateGcpAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/gcp/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createGcpAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/GcpAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/coder/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createCoderAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/CoderAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/bitbucket/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "validateBitbucketAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/bitbucket/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createBitBucketAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BitBucketAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/azure/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "validateAzureAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/azure/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createAzureAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AzureAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/aws/validate": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "validateAwsAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Response"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/aws/": {
      "post": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "createAwsAccount",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AwsAccount"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "operationId": "createUser",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/cc-users": {
      "post": {
        "tags": [
          "application-controller"
        ],
        "operationId": "createUserCC",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/branch": {
      "patch": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "updateClusterBranch",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/BranchUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/vcs/{id}": {
      "patch": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "updateVCSAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/VCSAccountUpdateRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/themeFile": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "retrieveThemeFile",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ThemeFileResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/module/{intent}/{flavor}/{version}/schema": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "getModuleSchema",
        "parameters": [
          {
            "name": "intent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flavor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "allowPreview",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ModuleSchemaResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/logo": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "getLogo",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/loginOptions": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "getLoginOptions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustomOAuth2ClientRegistration"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/health": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "healthCheck",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/features": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "getAllFeatureProperties",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/features/{name}": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "getFeatureProperty",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/public/v1/cp-cloud": {
      "get": {
        "tags": [
          "public-ap-is"
        ],
        "operationId": "getCPCloud",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "AWS",
                "AZURE",
                "LOCAL",
                "GCP",
                "KUBERNETES",
                "NO_CLOUD"
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v2/assistant/thread": {
      "get": {
        "tags": [
          "ui-assistant-controller"
        ],
        "operationId": "createThread",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AssistantResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/workflow/registration-specific": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "getRegistrationSpecificWorkflows",
        "parameters": [
          {
            "name": "registrationType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ENVIRONMENT",
                "RELEASE_STREAM",
                "HYBRID"
              ]
            }
          },
          {
            "name": "stackName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionWorkflow"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/workflow/default-workflow/registration-type/{registrationType}": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "getDefaultWorkflow",
        "parameters": [
          {
            "name": "registrationType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ENVIRONMENT",
                "RELEASE_STREAM",
                "HYBRID"
              ]
            }
          },
          {
            "name": "stackName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PromotionWorkflow"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/workflow/blueprint/{stackName}": {
      "get": {
        "tags": [
          "ui-promotion-workflow-controller"
        ],
        "operationId": "getWorkflowsByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PromotionWorkflow"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/{versioningKey}": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "getVersions",
        "parameters": [
          {
            "name": "versioningKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VersionVersioned"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/{versioningKey}/paginated": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "getVersionsPaginated",
        "parameters": [
          {
            "name": "versioningKey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageVersionVersioned"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "softDeletedEntities",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED_DATE",
              "enum": [
                "ID",
                "CREATION_DATE",
                "CREATED_BY",
                "LAST_MODIFIED_DATE",
                "LAST_MODIFIED_BY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeletedEntitySoftDelete"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "deleteSoftDeleteEntity",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities/{entityType}": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "softDeletedEntitiesByType",
        "parameters": [
          {
            "name": "entityType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CLUSTER",
                "BLUE_PRINT",
                "TEMPLATE_INPUT",
                "CONTROL_PLANE",
                "IAC",
                "ARTIFACT_CI",
                "USER_GROUP",
                "ACCOUNT",
                "ARTIFACTORY"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED_DATE",
              "enum": [
                "ID",
                "CREATION_DATE",
                "CREATED_BY",
                "LAST_MODIFIED_DATE",
                "LAST_MODIFIED_BY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeletedEntitySoftDelete"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/id/{id}": {
      "get": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "getVersionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Version"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/{userId}": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/{userId}/user-expanded": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getUserExpanded",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpandedUser"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/tokens": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getToken",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccessToken"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/roles": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getAllSystemRoles",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ADMIN",
                  "DEVELOPER",
                  "VIEWER",
                  "GUEST",
                  "CLUSTER_ADMIN",
                  "K8S_READER",
                  "K8S_DEBUGGER",
                  "CLI_ARTIFACT_PUSH"
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/loggedIn": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getALlLoggedInUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/list/users-expanded": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getAllUsersExpanded",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpandedUser"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/current-user": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getCurrentUser",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/analyze-access": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "analyzeAccess",
        "parameters": [
          {
            "name": "permissions",
            "in": "query",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccessAnalyzerResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/": {
      "get": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/user-groups/{groupId}": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "operationId": "getUserGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-user-group-controller"
        ],
        "operationId": "deleteUserGroup",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/user-groups/{groupId}/group-expanded": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "operationId": "getUserGroupExpanded",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ExpandedUserGroup"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/user-groups/list/groups-expanded": {
      "get": {
        "tags": [
          "ui-user-group-controller"
        ],
        "operationId": "getAllUserGroupsExpanded",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExpandedUserGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/tf-outputs/{name}": {
      "get": {
        "tags": [
          "TF Output Management"
        ],
        "operationId": "getOutputByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFOutputResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "TF Output Management"
        ],
        "operationId": "deleteOutput",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "namespace",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/tf-outputs/provider": {
      "get": {
        "tags": [
          "TF Output Management"
        ],
        "summary": "Get all outputs that use a specific provider source",
        "operationId": "getOutputsByProviderSource",
        "parameters": [
          {
            "name": "source",
            "in": "query",
            "description": "Provider source name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFOutputResponseDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/terraform/versions": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "operationId": "getAllVersions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfVersion"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/terraform/stream/{tfStream}/versions": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "operationId": "getTfVersionsForStream",
        "parameters": [
          {
            "name": "tfStream",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TfVersion"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/terraform/cluster/{clusterId}/pending-migration-scripts": {
      "get": {
        "tags": [
          "ui-tf-version-controller"
        ],
        "operationId": "getPendingMigrationScriptsByClusterId",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PendingMigrationDetails"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getApplication",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/{resourceType}/": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getApplicationList",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/withAccount": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getStackWithAccount",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/variables/{variableName}/environments": {
      "get": {
        "tags": [
          "Variable Management"
        ],
        "summary": "Get variable/secret across environments",
        "description": "Retrieves values of a specific variable/secret across all environments in a project",
        "operationId": "getVariableAcrossEnvironments",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "my-stack"
          },
          {
            "name": "variableName",
            "in": "path",
            "description": "Variable name",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "database_password"
          }
        ],
        "responses": {
          "200": {
            "description": "Variable values retrieved successfully",
            "schema": {
              "$ref": "#/definitions/VariableEnvironmentResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Access denied",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project or variable not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/templateInputs/meta": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getAllTemplateInputsMeta",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/sync-with-git": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "syncStackWithGit",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/sync-with-git/v2": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "summary": "Sync stack with git",
        "description": "Use this to sync stack with git. Runs synchronously for the stack, and then does a non-force sync of all clusters in async",
        "operationId": "stackSyncWithGit",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/sync-resources": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "syncResources",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/suggestions/resourceType": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getResourceTypes",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getResourcesByTypes",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/overrides": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getOverrides",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterOverrideResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/reload": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "reloadStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Stack"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/localDeploymentContext": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getLocalDeploymentContext",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentContext"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clusters": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getClusters",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbstractCluster"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clustersWithStatus": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getClustersWithStatus",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbstractCluster"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clusters-overview": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getClustersOverview",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterOverview"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/clusters-metadata": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getClusterMetadataByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterMetadata"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/templates": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getStackTemplates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StackTemplate"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/running-clusters-with-kubedebugger": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getRunningClustersWithKubedebugger",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/running-base-clusters": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getRunningBaseClusters",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AbstractCluster"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/migrate-overrides": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "migrateOverridesToGit",
        "parameters": [
          {
            "name": "stackName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/clusters": {
      "get": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "getAllClusters",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "LAST_MODIFIED_DATE",
              "enum": [
                "ID",
                "CREATION_DATE",
                "CREATED_BY",
                "LAST_MODIFIED_DATE",
                "LAST_MODIFIED_BY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageAbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/settings/ui-yaml": {
      "get": {
        "tags": [
          "ui-settings-controller"
        ],
        "operationId": "getAllSettingsYaml",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/settings/entity/{entity}": {
      "get": {
        "tags": [
          "ui-settings-controller"
        ],
        "operationId": "getAllSettingsForEntity",
        "parameters": [
          {
            "name": "entity",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CLUSTER",
                "BLUE_PRINT",
                "TEMPLATE_INPUT",
                "CONTROL_PLANE",
                "IAC",
                "ARTIFACT_CI",
                "USER_GROUP",
                "ACCOUNT",
                "ARTIFACTORY"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Setting"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resources/{projectName}/{environmentName}/status": {
      "get": {
        "tags": [
          "ui-resource-status-controller"
        ],
        "operationId": "getResourceStatus",
        "parameters": [
          {
            "name": "projectName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "environmentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resources",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceStatusResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resources/{clusterId}/release-preview": {
      "get": {
        "tags": [
          "ui-resource-status-controller"
        ],
        "operationId": "getReleasePreview",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReleasePreviewResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces": {
      "get": {
        "tags": [
          "ui-resource-status-controller"
        ],
        "operationId": "getNamespacesInUseByDependentClusters",
        "parameters": [
          {
            "name": "baseClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resource-groups/{stackName}/{resourceType}/{resourceName}": {
      "get": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "getResourceGroupsForResource",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/resource-groups/me": {
      "get": {
        "tags": [
          "ui-resource-group-controller"
        ],
        "operationId": "getResourceGroupsForSessionUser",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceGroup"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/opa": {
      "get": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "getAllPolicies",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OpaPolicy"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/opa/policy-templates": {
      "get": {
        "tags": [
          "ui-opa-controller"
        ],
        "operationId": "getAllPolicyTemplates",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PolicyTemplateDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/onetime-webhook/poll/{webhookId}": {
      "get": {
        "tags": [
          "ui-one-time-webhook-controller"
        ],
        "operationId": "pollWebhook",
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OneTimeWebhook"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/{notificationType}/tags": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getNotificationTagsForNotificationType",
        "parameters": [
          {
            "name": "notificationType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DEPLOYMENT_STATUS_UPDATE",
                "APP_DEPLOYMENT",
                "QASUITE_SANITY",
                "DR_RESULT",
                "STACK_SIGNOFF",
                "ALERT",
                "TEST",
                "APPLICATION_DEPLOYMENT_COMPLETE",
                "ENVIRONMENT_CREATE",
                "ENVIRONMENT_DELETE",
                "ENVIRONMENT_LAUNCH",
                "ENVIRONMENT_DESTROY",
                "ENVIRONMENT_CONFIGURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTagsForTypeResult"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/notificationTypes": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getAllNotificationTypes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTypeResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/notificationType/{notificationType}/attributes": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getSubscriptionAttributes",
        "parameters": [
          {
            "name": "notificationType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "DEPLOYMENT_STATUS_UPDATE",
                "APP_DEPLOYMENT",
                "QASUITE_SANITY",
                "DR_RESULT",
                "STACK_SIGNOFF",
                "ALERT",
                "TEST",
                "APPLICATION_DEPLOYMENT_COMPLETE",
                "ENVIRONMENT_CREATE",
                "ENVIRONMENT_DELETE",
                "ENVIRONMENT_LAUNCH",
                "ENVIRONMENT_DESTROY",
                "ENVIRONMENT_CONFIGURE"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/notificationTags": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getAllNotificationTags",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationTagPayload"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/notification/channelTypes": {
      "get": {
        "tags": [
          "ui-notification-controller"
        ],
        "operationId": "getAllChannelTypes",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChannelTypePayload"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "summary": "Get All Modules",
        "description": "- **Description:** Retrieves all modules with optional filtering.\n- **Parameters:**\n  - `canDownload` (optional): When true, returns only modules that have downloadable content (modules with path). Defaults to false.\n- **Permissions:** Requires MODULE_READ permission.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getAllModules",
        "parameters": [
          {
            "name": "canDownload",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModuleListResponseDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/{stackName}/intent/{intent}/flavor/{flavor}/add-ons": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "summary": "Get Add-On Modules",
        "description": "- **Description:** Retrieves all add-on modules based on stack, intent and flavor, optionally by cloud.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getIntentAddOnModules",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flavor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloud",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModuleLiteDTO"
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/{id}": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "summary": "Get Module by ID",
        "description": "- **Description:** Retrieves a module by its ID.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/TFModuleResponseDTO"
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "Module Management"
        ],
        "summary": "Delete a Module",
        "description": "- **Description:** Deletes a module by ID.\n- **Permissions:** Requires MODULE_DELETE permission. \n- **Audit Logging:** Yes",
        "operationId": "deleteTfModule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/TFModule"
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/{id}/usages": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "summary": "Get Module Usages",
        "description": "- **Description:** Retrieves all usages of a module across stacks and clusters.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getModuleUsages",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ModuleUsageDTO"
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Module not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/{id}/download": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "operationId": "downloadModuleById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/version/{versionId}/download": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "operationId": "downloadModuleByVersionId",
        "parameters": [
          {
            "name": "versionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/stack/{stackName}/{intent}/{flavor}/{version}/module": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "operationId": "getModuleForIFVAndStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flavor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TFModuleResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/stack/{stackName}/grouped": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "summary": "Get Grouped Modules for Stack",
        "description": "- **Description:** Retrieves grouped modules specifically for a stack name.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getGroupedModulesForStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "$ref": "#/definitions/ListResourcesResponse"
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/modules-lite": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "operationId": "getAllModulesLite",
        "parameters": [
          {
            "name": "clouds",
            "in": "query",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "AWS",
                  "AZURE",
                  "LOCAL",
                  "GCP",
                  "KUBERNETES",
                  "NO_CLOUD"
                ]
              }
            }
          },
          {
            "name": "allowPreviewModules",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModuleLiteDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/modules/all": {
      "get": {
        "tags": [
          "Module Management"
        ],
        "summary": "Get All Modules",
        "description": "- **Description:** Retrieves all modules with optional filtering.\n- **Audit Logging:** No specific audit logging at the moment.",
        "operationId": "getAll_2",
        "parameters": [
          {
            "name": "includeFacetsYaml",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "allowPreviewModules",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "withPathOnly",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Operation successful",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFModule"
              }
            }
          },
          "400": {
            "description": "Invalid input parameters",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Entity not found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/maintenance-window/{clusterId}": {
      "get": {
        "tags": [
          "ui-maintenance-window-controller"
        ],
        "operationId": "getByClusterId",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MaintenanceWindowDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/gcp/clusters/validate-vpcId": {
      "get": {
        "tags": [
          "ui-gcp-cluster-controller"
        ],
        "operationId": "validateVpcId",
        "parameters": [
          {
            "name": "vpcId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getResourceHistoriesByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceHistory"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history-overview": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getResourceHistoryOverviewByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceHistoryOverview"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{stackName}/output/{outputType}/references": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getOutputReferences",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outputType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutputReference"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{stackName}/output-references": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getOutputReferencesByType",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "outputType",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OutputReference"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{clusterId}/{resourceType}": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getApplicationListByClusterIdAndResourceName",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getLaunchDAG",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloud",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AWS",
                "AZURE",
                "LOCAL",
                "GCP",
                "KUBERNETES",
                "NO_CLOUD"
              ]
            }
          },
          {
            "name": "isProvidedK8s",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "isDependent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{cloud}/regions": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getRegions",
        "parameters": [
          {
            "name": "cloud",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AllRegionsAndAZ"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{cloud}/regions-v2": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getRegionsV2",
        "parameters": [
          {
            "name": "cloud",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AllRegionsAndAZ"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAzForRegionByCloud",
        "parameters": [
          {
            "name": "cloud",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/vcs": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAllVCS",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getResourceByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlueprintFile"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAllClusterResourcesByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getServiceOverview",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ServiceOverview"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/resources-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAllResourcesByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeContent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": ""
            }
          },
          {
            "name": "excludeAddOns",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAllResourcesForAllClusterOfStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeAddOns",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ClusterResourcesResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/rolePermissions/{role}": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getRolePermissions",
        "parameters": [
          {
            "name": "role",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCOUNTS_WRITE",
                  "ACCOUNTS_DELETE",
                  "ALERTS_CONFIGURE",
                  "ARTIFACTORY_WRITE",
                  "ARTIFACTORY_DELETE",
                  "ARTIFACTS_DELETE",
                  "ARTIFACTS_WRITE",
                  "ARTIFACT_ROUTING_RULE_WRITE",
                  "ARTIFACT_ROUTING_RULE_DELETE",
                  "APPLICATION_ROLLING_RESTART",
                  "RUN_ACTION",
                  "APPLICATION_DEPLOYMENT_PROMOTE",
                  "APPLICATION_DEPLOYMENT_ABORT",
                  "BILLING_MANAGE",
                  "CHANNEL_WRITE",
                  "CHANNEL_DELETE",
                  "ENVIRONMENT_CONFIGURE",
                  "ENVIRONMENT_DELETE",
                  "ENVIRONMENT_WRITE",
                  "ENVIRONMENT_DESTROY",
                  "ENVIRONMENT_LAUNCH",
                  "OAUTH_INTEGRATION_DELETE",
                  "OAUTH_INTEGRATION_WRITE",
                  "RESOURCE_OVERRIDE",
                  "RESOURCE_WRITE",
                  "RESOURCE_DELETE",
                  "CRITICAL_RESOURCE_WRITE",
                  "RESOURCE_GROUP_READ",
                  "RESOURCE_GROUP_WRITE",
                  "RESOURCE_GROUP_DELETE",
                  "RELEASE_APPROVAL_AUTHORITY",
                  "RELEASE_FULL",
                  "RELEASE_PLAN",
                  "RELEASE_APPLY_PLAN",
                  "RELEASE_SELECTIVE",
                  "RELEASE_CUSTOM",
                  "RELEASE_MAINTENANCE",
                  "RELEASE_TERRAFORM_EXPORT",
                  "RELEASE_SCALE_UP",
                  "RELEASE_SCALE_DOWN",
                  "RELEASE_FULL_ALLOW_DESTROY",
                  "RELEASE_SELECTIVE_ALLOW_DESTROY",
                  "RELEASE_CUSTOM_ALLOW_DESTROY",
                  "RELEASE_PAUSE",
                  "RELEASE_ABORT",
                  "STACK_CONFIGURE",
                  "STACK_WRITE",
                  "STACK_DELETE",
                  "SUBSCRIPTION_WRITE",
                  "SUBSCRIPTION_DELETE",
                  "SETTINGS_WRITE",
                  "USER_READ",
                  "USER_WRITE",
                  "USER_DELETE",
                  "TEMPLATE_WRITE",
                  "TEMPLATE_DELETE",
                  "TRASH_RESTORE",
                  "TRASH_DELETE",
                  "USER_GROUP_READ",
                  "USER_GROUP_WRITE",
                  "USER_GROUP_DELETE",
                  "CUSTOM_ROLE_READ",
                  "CUSTOM_ROLE_WRITE",
                  "CUSTOM_ROLE_DELETE",
                  "K8S_READER",
                  "K8S_DEBUGGER",
                  "K8S_CUSTOM",
                  "K8S_CREDENTIALS",
                  "CLI_ARTIFACT_PUSH",
                  "K8S_PERMISSION",
                  "PIPELINE_WRITE",
                  "ARTIFACT_CI_WRITE",
                  "ARTIFACT_CI_DELETE",
                  "PROMOTIONAL_WORKFLOW_WRITE",
                  "PROMOTIONAL_WORKFLOW_DELETE",
                  "VIEW_RESOURCE_SECRETS",
                  "COST_EXPLORER_VIEW",
                  "RELEASE_STREAM_WRITE",
                  "RELEASE_STREAM_DELETE",
                  "BLUEPRINT_TEMPLATE_WRITE",
                  "BLUEPRINT_TEMPLATE_DELETE",
                  "VPN_CONNECT",
                  "OPA_WRITE",
                  "OPA_EXECUTE",
                  "OPA_DELETE",
                  "AUDIT_LOGS_VIEW",
                  "CI_CD_CONFIGURE",
                  "VIEW_SECRETS",
                  "MAINTENANCE_WINDOW_EDIT",
                  "MODULE_READ",
                  "MODULE_WRITE",
                  "MODULE_DELETE",
                  "PROJECT_TYPE_WRITE",
                  "PROJECT_TYPE_DELETE",
                  "WEB_COMPONENT_WRITE",
                  "WEB_COMPONENT_DELETE"
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/releaseStreams": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getReleaseStreams",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/logs/cluster/{clusterId}/resourceName/{resourceName}/resourceType/{resourceType}": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getGitHistoryForResource",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StackGitLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/getAllPermissions": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAllPermissions",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "ACCOUNTS_WRITE",
                  "ACCOUNTS_DELETE",
                  "ALERTS_CONFIGURE",
                  "ARTIFACTORY_WRITE",
                  "ARTIFACTORY_DELETE",
                  "ARTIFACTS_DELETE",
                  "ARTIFACTS_WRITE",
                  "ARTIFACT_ROUTING_RULE_WRITE",
                  "ARTIFACT_ROUTING_RULE_DELETE",
                  "APPLICATION_ROLLING_RESTART",
                  "RUN_ACTION",
                  "APPLICATION_DEPLOYMENT_PROMOTE",
                  "APPLICATION_DEPLOYMENT_ABORT",
                  "BILLING_MANAGE",
                  "CHANNEL_WRITE",
                  "CHANNEL_DELETE",
                  "ENVIRONMENT_CONFIGURE",
                  "ENVIRONMENT_DELETE",
                  "ENVIRONMENT_WRITE",
                  "ENVIRONMENT_DESTROY",
                  "ENVIRONMENT_LAUNCH",
                  "OAUTH_INTEGRATION_DELETE",
                  "OAUTH_INTEGRATION_WRITE",
                  "RESOURCE_OVERRIDE",
                  "RESOURCE_WRITE",
                  "RESOURCE_DELETE",
                  "CRITICAL_RESOURCE_WRITE",
                  "RESOURCE_GROUP_READ",
                  "RESOURCE_GROUP_WRITE",
                  "RESOURCE_GROUP_DELETE",
                  "RELEASE_APPROVAL_AUTHORITY",
                  "RELEASE_FULL",
                  "RELEASE_PLAN",
                  "RELEASE_APPLY_PLAN",
                  "RELEASE_SELECTIVE",
                  "RELEASE_CUSTOM",
                  "RELEASE_MAINTENANCE",
                  "RELEASE_TERRAFORM_EXPORT",
                  "RELEASE_SCALE_UP",
                  "RELEASE_SCALE_DOWN",
                  "RELEASE_FULL_ALLOW_DESTROY",
                  "RELEASE_SELECTIVE_ALLOW_DESTROY",
                  "RELEASE_CUSTOM_ALLOW_DESTROY",
                  "RELEASE_PAUSE",
                  "RELEASE_ABORT",
                  "STACK_CONFIGURE",
                  "STACK_WRITE",
                  "STACK_DELETE",
                  "SUBSCRIPTION_WRITE",
                  "SUBSCRIPTION_DELETE",
                  "SETTINGS_WRITE",
                  "USER_READ",
                  "USER_WRITE",
                  "USER_DELETE",
                  "TEMPLATE_WRITE",
                  "TEMPLATE_DELETE",
                  "TRASH_RESTORE",
                  "TRASH_DELETE",
                  "USER_GROUP_READ",
                  "USER_GROUP_WRITE",
                  "USER_GROUP_DELETE",
                  "CUSTOM_ROLE_READ",
                  "CUSTOM_ROLE_WRITE",
                  "CUSTOM_ROLE_DELETE",
                  "K8S_READER",
                  "K8S_DEBUGGER",
                  "K8S_CUSTOM",
                  "K8S_CREDENTIALS",
                  "CLI_ARTIFACT_PUSH",
                  "K8S_PERMISSION",
                  "PIPELINE_WRITE",
                  "ARTIFACT_CI_WRITE",
                  "ARTIFACT_CI_DELETE",
                  "PROMOTIONAL_WORKFLOW_WRITE",
                  "PROMOTIONAL_WORKFLOW_DELETE",
                  "VIEW_RESOURCE_SECRETS",
                  "COST_EXPLORER_VIEW",
                  "RELEASE_STREAM_WRITE",
                  "RELEASE_STREAM_DELETE",
                  "BLUEPRINT_TEMPLATE_WRITE",
                  "BLUEPRINT_TEMPLATE_DELETE",
                  "VPN_CONNECT",
                  "OPA_WRITE",
                  "OPA_EXECUTE",
                  "OPA_DELETE",
                  "AUDIT_LOGS_VIEW",
                  "CI_CD_CONFIGURE",
                  "VIEW_SECRETS",
                  "MAINTENANCE_WINDOW_EDIT",
                  "MODULE_READ",
                  "MODULE_WRITE",
                  "MODULE_DELETE",
                  "PROJECT_TYPE_WRITE",
                  "PROJECT_TYPE_DELETE",
                  "WEB_COMPONENT_WRITE",
                  "WEB_COMPONENT_DELETE"
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/file": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getFileFromFacetsModules",
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fileName",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getResourceByClusterId",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeContent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlueprintFile"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/cluster/{clusterId}/resources": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAllResources",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "excludeSubstackResources",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "uniqueItems": true,
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/dropdown/cluster/{clusterId}/resources-info": {
      "get": {
        "tags": [
          "ui-dropdowns-controller"
        ],
        "operationId": "getAllResourcesByCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeContent",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "includeSubstack",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          },
          {
            "name": "excludeAddOns",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/{branchName}/files": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getDesignerResources",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branchName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BlueprintFile"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/workflows": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getWorkflows",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/workflow-runs": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getWorkflowRuns",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListWorkflowRunsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflows": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getWorkflows_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getWorkflowRuns_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "workflowId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "branch",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "actor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListWorkflowRunsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getPullRequests",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "OPEN",
              "enum": [
                "OPEN",
                "CLOSED",
                "ALL"
              ]
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "createdDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPullRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "listBranches",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "Get add ons for this resource",
        "operationId": "getAddOnModules",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cloud",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AddOnDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/ref-autocomplete-data": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getAutocompleteData",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutocompleteResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/ref-autocomplete-data-v2": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "summary": "Get autocomplete data with module-specific output trees",
        "description": "Returns module-specific output trees for each resource with automatic fallback to intent-level outputs",
        "operationId": "getAutocompleteDataV2",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AutocompleteResponseV2"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/pulls": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getPullRequests_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "OPEN",
              "enum": [
                "OPEN",
                "CLOSED",
                "ALL"
              ]
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 10
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 1
            }
          },
          {
            "name": "createdDate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ListPullRequestResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "listProvidersExposedByModule",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flavor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "$ref": "#/definitions/TFProvider"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getModuleInputs",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "intent",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "flavor",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/ModuleInputDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/{stackName}/branch-list": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "listBranches_1",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BranchDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/designer/facets-components": {
      "get": {
        "tags": [
          "ui-blueprint-designer-controller"
        ],
        "operationId": "getSchemaMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/JsonNode"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/custom-role/roles": {
      "get": {
        "tags": [
          "ui-custom-role-controller"
        ],
        "operationId": "getAllRoles",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RoleMapping"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/cost-explorer/sync-cost": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "operationId": "syncCloudCost",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/cost-explorer/stack/{stackName}/daily-cost": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "operationId": "getDailyCloudCost",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "clusterIds",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DailyCloudCostDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "operationId": "getServiceWiseCost",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DailyCost"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/cost-explorer/aws/enabled": {
      "get": {
        "tags": [
          "ui-cloud-cost-explorer-controller"
        ],
        "operationId": "isAwsCostExplorerEnabled",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/content/files/selectors/{contentType}": {
      "get": {
        "tags": [
          "ui-custom-content-controller"
        ],
        "operationId": "getContentFilesBySelectors",
        "parameters": [
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "displayType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "INLINE",
                "TAB",
                "PAGE"
              ]
            }
          },
          {
            "name": "subType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "contentType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CI",
                "DOCUMENTATION"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentFile"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/workspaces": {
      "get": {
        "tags": [
          "ui-coder-controller"
        ],
        "operationId": "getAll_3",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CoderWorkspaceResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workspaces": {
      "get": {
        "tags": [
          "ui-coder-controller"
        ],
        "operationId": "getAll_4",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CoderWorkspaceResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/coder/stack/{stackName}/coder-eligibility": {
      "get": {
        "tags": [
          "ui-coder-controller"
        ],
        "operationId": "identifyCoderLaunchEligible",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CoderLaunchEligibilityResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getClusterCommon",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "deleteCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getResourceByName",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}/overrides": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getApplicationOverrides",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "appName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "deprecated": true,
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vpn-profile": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getVPNProfile",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vars": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getVars",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/varsWithStatus": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getVarsWithStatus",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/definitions/Variables"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/vars-with-secrets": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getVarsWithSecrets",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AbstractCluster"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/variable-counts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getVariableCounts",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VariableCountDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/validation-errors": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getValidations",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ValidationResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/templateInputs/": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getAllTemplateInputs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "$ref": "#/definitions/StackTemplateInput"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getResourceByNameV2",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-out-properties": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getResourceOutProperties",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceOutProperties"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getResourceHistory",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResourceHistory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getReleaseImpacts",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "triggeredBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "releaseType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "HOTFIX",
                "RELEASE",
                "LAUNCH",
                "DESTROY",
                "CUSTOM",
                "UNLOCK_STATE",
                "PLAN",
                "HOTFIX_PLAN",
                "APPLY_PLAN",
                "APPLY_HOTFIX_PLAN",
                "SCALE_UP",
                "SCALE_DOWN",
                "MAINTENANCE",
                "TERRAFORM_EXPORT",
                "ROLLBACK_PLAN",
                "APPLY_ROLLBACK_PLAN"
              ]
            }
          },
          {
            "name": "attribute",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "changeType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "ADDED",
                "MODIFIED",
                "REMOVED"
              ]
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageResourceReleaseImpact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/deployed-commit-id": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getDeployedCommitIdForResource",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "listPods",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pod"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getIngresses",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Ingress"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/hpa": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getHPA",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HorizontalPodAutoscaler"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resourceDetails": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "resourceDetails",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceDetails"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/resource-stats": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getResourceStats",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BlueprintFileSummaryDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/queued-releases/": {
      "get": {
        "tags": [
          "ui-queued-release-controller"
        ],
        "operationId": "getAllQueuedReleases",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/QueuedRelease"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "logs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/pods/{podName}/events": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getEvents",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Event"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/open-alerts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getOpenAlerts",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/match-modules": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getMatchedModules",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MatchedModuleDTO"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/kubernetes/analyze": {
      "get": {
        "tags": [
          "UI Chat GPT Controller"
        ],
        "operationId": "analyzeKubernetesCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "filters",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/K8sAnalyzeResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/kubeconfig": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getKubeConfig",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/kubeconfig/refresh": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "refreshKubeConfig",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8sCredentials": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getK8sCredentials",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "refreshPermissions",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KubernetesCredential"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{podName}/v2/containers": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listContainersInPodV2",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContainerDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{podName}/containers": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listContainersInPod",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Container"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "getManifest",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "k8sResourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Deployment",
                "Pod",
                "DaemonSet",
                "StatefulSet",
                "HorizontalPodAutoscaler",
                "ReplicaSet",
                "Job",
                "CronJob",
                "Ingress",
                "PersistentVolumeClaim",
                "PersistentVolume",
                "ConfigMaps"
              ]
            }
          },
          {
            "name": "k8sResourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "text/plain"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listEventsByK8sResource",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "k8sResourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Deployment",
                "Pod",
                "DaemonSet",
                "StatefulSet",
                "HorizontalPodAutoscaler",
                "ReplicaSet",
                "Job",
                "CronJob",
                "Ingress",
                "PersistentVolumeClaim",
                "PersistentVolume",
                "ConfigMaps"
              ]
            }
          },
          {
            "name": "k8sResourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EventDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/statefulsets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listStatefulsetsLabelsByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StatefulSetDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/services": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listServicesByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ServiceDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listSecretsByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SecretDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "getSecretsData",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "secretName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listReplicasetsByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ReplicasetDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listPVCByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersistentVolumeClaimDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listPVByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersistentVolumeDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listPodsByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PodDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "containerLogs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "podName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tail",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listJobsByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listIngressesByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IngressDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "getAllIngressRulesForCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IngressRulesDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listHpaByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/HorizontalPodAutoscalerDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listDeploymentsByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DeploymentDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments/{deploymentName}": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "getPodsForDeployment",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listDaemonSetsByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/DaemonSetDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listCronJobByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CronJobDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "listConfigMapByLabels",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConfigMapDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}": {
      "get": {
        "tags": [
          "ui-kubernetes-explorer-controller"
        ],
        "operationId": "getConfigMapData",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "configMapName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/info": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getClusterInfo",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getDeployment",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/release-changes": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getReleaseChanges",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReleaseChanges"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getDeploymentLogs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "nextToken",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TokenPaginatedResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "streamDeploymentLogs",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StreamingResponseBody"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/download-terraform-export": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "downloadTerraformExport",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deploymentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/trace-id/{releaseTraceId}": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getDeploymentByReleaseTraceId",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "releaseTraceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/stats": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getDeploymentStats",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "days",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentStatsDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/state": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getClusterState",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string",
              "enum": [
                "STOPPED",
                "RUNNING",
                "LAUNCHING",
                "DESTROYING",
                "LAUNCH_FAILED",
                "DESTROY_FAILED",
                "UNKNOWN",
                "SCALE_DOWN",
                "SCALING_DOWN",
                "SCALE_DOWN_FAILED",
                "SCALING_UP",
                "SCALE_UP_FAILED"
              ]
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/simulate": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "simulate",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChangeRepresentationObject"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/search": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "searchDeployments",
        "parameters": [
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "releaseType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "HOTFIX",
                "RELEASE",
                "LAUNCH",
                "DESTROY",
                "CUSTOM",
                "UNLOCK_STATE",
                "PLAN",
                "HOTFIX_PLAN",
                "APPLY_PLAN",
                "APPLY_HOTFIX_PLAN",
                "SCALE_UP",
                "SCALE_DOWN",
                "MAINTENANCE",
                "TERRAFORM_EXPORT",
                "ROLLBACK_PLAN",
                "APPLY_ROLLBACK_PLAN"
              ]
            }
          },
          {
            "name": "signedOff",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "SUCCEEDED",
                "FAILED",
                "FAULT",
                "TIMED_OUT",
                "IN_PROGRESS",
                "STOPPED",
                "INVALID",
                "STARTED",
                "UNKNOWN",
                "QUEUED",
                "PENDING_APPROVAL",
                "APPROVED",
                "ABORTED",
                "REJECTED"
              ]
            }
          },
          {
            "name": "excludeStatus",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "SUCCEEDED",
                  "FAILED",
                  "FAULT",
                  "TIMED_OUT",
                  "IN_PROGRESS",
                  "STOPPED",
                  "INVALID",
                  "STARTED",
                  "UNKNOWN",
                  "QUEUED",
                  "PENDING_APPROVAL",
                  "APPROVED",
                  "ABORTED",
                  "REJECTED"
                ]
              }
            }
          },
          {
            "name": "triggeredBy",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "tfVersion",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageDeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/overview": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getDeploymentsOverview",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentOverview"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getLatestRelease",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}": {
      "get": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "getLatestReleaseByApplication",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "application",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/cluster-metadata": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getClusterMetadata",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ClusterMetadata"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/argo-info": {
      "get": {
        "tags": [
          "ui-application-controller"
        ],
        "operationId": "getArgoRolloutInfo",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "labels",
            "in": "query",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/alerts": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getAlerts",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces": {
      "get": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "getNamespacesInUseByDependentClusters_1",
        "parameters": [
          {
            "name": "baseClusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/chat/metadata": {
      "get": {
        "tags": [
          "UI Chat GPT Controller"
        ],
        "summary": "Get chat starters metadata",
        "operationId": "getAllStarters",
        "responses": {
          "200": {
            "description": "Chat metadata found",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ChatStarterMetadata"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/ci-cd/{stackName}": {
      "get": {
        "tags": [
          "ui-ci-cd-controller"
        ],
        "summary": "Get CI/CD Details",
        "description": "- **Description:** Retrieves CI/CD details for a specified project name. \n- **Restrictions:** Requires existing default artifact routing rule or promotion workflow. \n- **Permissions:** None required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getCiCdDetails",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved CI/CD details.",
            "schema": {
              "$ref": "#/definitions/CiCdDto"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Project not found.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/billing/report-usage": {
      "get": {
        "tags": [
          "ui-billing-controller"
        ],
        "operationId": "reportUsage",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/billing/metadata": {
      "get": {
        "tags": [
          "ui-billing-controller"
        ],
        "operationId": "getBillingMetadata",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BillingMetadata"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/billing/manage-billing": {
      "get": {
        "tags": [
          "ui-billing-controller"
        ],
        "operationId": "startStripeCustomerPortalSession",
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/azure/clusters/validate-vnet": {
      "get": {
        "tags": [
          "ui-azure-cluster-controller"
        ],
        "operationId": "validateVnet",
        "parameters": [
          {
            "name": "vnet",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceGroup",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/aws/clusters/validate-vpcId": {
      "get": {
        "tags": [
          "ui-aws-cluster-controller"
        ],
        "operationId": "validateVpcId_1",
        "parameters": [
          {
            "name": "vpcId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/audit-logs": {
      "get": {
        "tags": [
          "ui-audit-logs-controller"
        ],
        "operationId": "getAuditLogs",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "example": "2023-10-31T01:30:00.000+05:30"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          },
          {
            "name": "stackName",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterName",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "target",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "performedBy",
            "in": "query",
            "description": "Regex based string match",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "entity",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "BLUEPRINT",
                  "ENVIRONMENT",
                  "RESOURCE",
                  "CI_INTEGRATION",
                  "CI_RULE",
                  "CI_CD",
                  "PROMOTION_WORKFLOW",
                  "RELEASE_STREAM",
                  "DELIVERY_PIPELINE",
                  "TRASH",
                  "RELEASE_SCHEDULE",
                  "AVAILABILITY_RULES",
                  "TEMPLATE_INPUT",
                  "SETTINGS",
                  "ACCOUNT",
                  "CONTAINER_REGISTRY",
                  "NOTIFICATION_CHANNEL",
                  "NOTIFICATION_SUBSCRIPTION",
                  "OAUTH_INTEGRATION",
                  "GUARDRAIL_POLICY",
                  "USER",
                  "USER_GROUP",
                  "CUSTOM_ROLE",
                  "RESOURCE_GROUP",
                  "PROJECT_TYPE",
                  "MODULE",
                  "WEB_COMPONENT",
                  "UNKNOWN"
                ]
              }
            }
          },
          {
            "name": "entityAction",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "BLUEPRINT_CREATE",
                  "BLUEPRINT_DELETE",
                  "BLUEPRINT_UPDATE",
                  "BLUEPRINT_RESOURCE_CREATE",
                  "BLUEPRINT_RESOURCE_UPDATE",
                  "BLUEPRINT_RESOURCE_RENAME",
                  "BLUEPRINT_RESOURCE_DELETE",
                  "BLUEPRINT_RESOURCE_ENABLE",
                  "BLUEPRINT_RESOURCE_DISABLE",
                  "BLUEPRINT_ADD_TEMPLATE",
                  "BLUEPRINT_SECRETS_VARIABLES_CREATE",
                  "BLUEPRINT_SECRETS_VARIABLES_UPDATE",
                  "BLUEPRINT_SECRETS_VARIABLES_DELETE",
                  "PROJECT_TYPE_CREATE",
                  "PROJECT_TYPE_UPDATE",
                  "PROJECT_TYPE_DELETE",
                  "MODULE_UPLOAD",
                  "MODULE_MARKED_AS_PUBLISHED",
                  "MODULE_DELETE",
                  "ENVIRONMENT_CREATE",
                  "ENVIRONMENT_DELETE",
                  "ENVIRONMENT_UPDATE",
                  "CI_INTEGRATION_CREATE",
                  "CI_INTEGRATION_UPDATE",
                  "CI_INTEGRATION_DELETE",
                  "CI_CD_CONFIGURE",
                  "CI_RULE_CREATE",
                  "CI_RULE_UPDATE",
                  "CI_RULE_DELETE",
                  "PROMOTION_WORKFLOW_CREATE",
                  "PROMOTION_WORKFLOW_UPDATE",
                  "PROMOTION_WORKFLOW_DELETE",
                  "RELEASE_STREAM_CREATE",
                  "RELEASE_STREAM_DELETE",
                  "DELIVERY_PIPELINE_UPDATE",
                  "OVERRIDE_UPDATE",
                  "OVERRIDE_VERSION_ROLLBACK",
                  "SECRETS_VARIABLES_UPDATE",
                  "TEMPLATE_INPUT_CREATE",
                  "TEMPLATE_INPUT_DELETE",
                  "IAC_VERSION_UPDATE",
                  "RELEASES_PAUSE",
                  "RELEASES_RESUME",
                  "RELEASE_SCHEDULE_CREATE",
                  "RELEASE_SCHEDULE_UPDATE",
                  "RELEASE_SCHEDULE_DELETE",
                  "AVAILABILITY_RULES_CREATE",
                  "AVAILABILITY_RULES_UPDATE",
                  "AVAILABILITY_RULES_DELETE",
                  "MAINTENANCE_WINDOW_UPDATE",
                  "ENVIRONMENT_SETTINGS_UPDATE",
                  "GENERAL_SETTINGS_UPDATE",
                  "ACCOUNT_CREATE",
                  "ACCOUNT_UPDATE",
                  "ACCOUNT_DELETE",
                  "CONTAINER_REGISTRY_CREATE",
                  "CONTAINER_REGISTRY_UPDATE",
                  "CONTAINER_REGISTRY_DELETE",
                  "NOTIFICATION_SUBSCRIPTION_CREATE",
                  "NOTIFICATION_SUBSCRIPTION_UPDATE",
                  "NOTIFICATION_SUBSCRIPTION_DELETE",
                  "NOTIFICATION_CHANNEL_CREATE",
                  "NOTIFICATION_CHANNEL_UPDATE",
                  "NOTIFICATION_CHANNEL_DELETE",
                  "OAUTH_INTEGRATION_CREATE",
                  "OAUTH_INTEGRATION_UPDATE",
                  "OAUTH_INTEGRATION_DELETE",
                  "ENVIRONMENT_RESOURCE_DISABLE",
                  "ENVIRONMENT_RESOURCE_ENABLE",
                  "APPLICATION_ROLLOUT_RESTART",
                  "GUARDRAIL_POLICY_CREATE",
                  "GUARDRAIL_POLICY_UPDATE",
                  "GUARDRAIL_POLICY_DELETE",
                  "USER_CREATE",
                  "USER_UPDATE",
                  "USER_DELETE",
                  "USER_GROUP_CREATE",
                  "USER_GROUP_UPDATE",
                  "USER_GROUP_DELETE",
                  "RESOURCE_GROUP_CREATE",
                  "RESOURCE_GROUP_UPDATE",
                  "RESOURCE_GROUP_DELETE",
                  "CUSTOM_ROLE_CREATE",
                  "CUSTOM_ROLE_UPDATE",
                  "CUSTOM_ROLE_DELETE",
                  "TRASH_RESTORE",
                  "TRASH_DELETE",
                  "TRASH_EMPTY",
                  "WEB_COMPONENT_CREATE",
                  "WEB_COMPONENT_UPDATE",
                  "WEB_COMPONENT_DELETE",
                  "ACTION_RUN",
                  "UNKNOWN"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageFacetsAuditLogResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/{clusterId}": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "getArtifactByClusterId",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                  "$ref": "#/definitions/Artifact"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/metadata/keys": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "getMetadataKeys",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "getArtifactsByResourceNameAndResourceType",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}": {
      "get": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "getArtifactByApplicationName",
        "parameters": [
          {
            "name": "applicationName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifact"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts-ci/{ciName}/artifacts": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "getArtifactsForCI",
        "parameters": [
          {
            "name": "ciName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CiArtifactResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts-ci/name/{ciName}": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "getArtifactCiByName",
        "parameters": [
          {
            "name": "ciName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactCI"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts-ci/blueprint/{stackName}": {
      "get": {
        "tags": [
          "ui-artifact-ci-controller"
        ],
        "operationId": "getArtifactCisByStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ArtifactCI"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}/tags": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getTags",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/{artifactoryId}/repos": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getRepositories",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/stack/{stackName}": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getAllArtifactoriesForStack",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Artifactory"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/name/{name}": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getArtifactoryByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Artifactory"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/name/{name}/tags": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getTagsByArtifactoryName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "repo",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "docker_image",
              "enum": [
                "docker_image",
                "freestyle"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/name/{name}/repos": {
      "get": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "getRepositoriesByArtifactoryName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "artifactType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "default": "docker_image",
              "enum": [
                "docker_image",
                "freestyle"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactHub/search-packages": {
      "get": {
        "tags": [
          "ui-artifact-hub-controller"
        ],
        "operationId": "searchPackages",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 20
            }
          },
          {
            "name": "facets",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "tsQueryWeb",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "verified",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PackageResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactHub/packages/{packageId}/values": {
      "get": {
        "tags": [
          "ui-artifact-hub-controller"
        ],
        "operationId": "getHelmValues",
        "parameters": [
          {
            "name": "packageId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifact-routing-rule/{ruleId}": {
      "get": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "operationId": "getArtifactRoutingRule",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ArtifactRoutingRuleResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "operationId": "deleteArtifactRoutingRule",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifact-routing-rule/operators": {
      "get": {
        "tags": [
          "ui-artifact-routing-rule-controller"
        ],
        "operationId": "getAllOperators",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "EQUALS",
                  "STARTS_WITH",
                  "ENDS_WITH",
                  "CONTAINS"
                ]
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/actions": {
      "get": {
        "tags": [
          "ui-tekton-action-controller"
        ],
        "summary": "Get Actions",
        "description": "- **Description:** Retrieve Actions optionally filtered by cluster, resource type, and resource name. \n- **Restrictions:** Actions are filtered based on provided parameters. \n- **Permissions:** None required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getActions",
        "parameters": [
          {
            "name": "clusterId",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Actions.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/actions/{actionName}/runs": {
      "get": {
        "tags": [
          "ui-tekton-action-controller"
        ],
        "summary": "Get Action Runs",
        "description": "- **Description:** Retrieve Action Runs for a specific Action. \n- **Restrictions:** None. \n- **Permissions:** None required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getActionRuns",
        "parameters": [
          {
            "name": "actionName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved Action Runs.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ActionRunDto"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Action not found.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/actions/runs/{actionRunName}/upload": {
      "get": {
        "tags": [
          "ui-tekton-action-controller"
        ],
        "summary": "Download Upload for Action Run",
        "description": "- **Description:** Download the file uploaded for a specific Action Run. \\n- **Restrictions:** User must have access to the associated task. \\n- **Permissions:** Requires task access permissions. \\n- **Audit Logging:** Not applicable.",
        "operationId": "downloadUpload",
        "parameters": [
          {
            "name": "actionRunName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "File downloaded successfully.",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden - no access to task.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Upload not found.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/actions/runs/{actionRunName}/steps/{stepName}/logs": {
      "get": {
        "tags": [
          "ui-tekton-action-controller"
        ],
        "summary": "Get Step Logs",
        "description": "- **Description:** Retrieve logs for a specific step of an Action Run. \n- **Restrictions:** None. \n- **Permissions:** None required. \n- **Audit Logging:** Not applicable.",
        "operationId": "getStepLogs",
        "parameters": [
          {
            "name": "actionRunName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "stepName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved step logs.",
            "schema": {
              "$ref": "#/definitions/StepLogDto"
            }
          },
          "400": {
            "description": "Bad request.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden.",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal server error.",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/{id}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "deleteAccount",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/{accountId}/workspaces/{workspace}/projects": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getBitbucketProjectsForWorkspace",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workspace",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/vcs-orgs/{accountId}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getVcsOrganizationsByAccountId",
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/type/{type}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getAccountsByType",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "VERSION_CONTROL",
                "CLOUD",
                "CODER"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/token-details": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getAllVCSTokenDetails",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/VCSTokenDetailsResponse"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/stack/{stackName}/token-details": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getVCSTokenDetailsByStackName",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/VCSTokenDetailsResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/name/{name}": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getAccountByName",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Account"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/accounts/": {
      "get": {
        "tags": [
          "ui-accounts-controller"
        ],
        "operationId": "getAllAccounts",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Account"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/me": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "operationId": "me",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SimpleOauth2User"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/versions/softDeletedEntities/all": {
      "delete": {
        "tags": [
          "ui-versioning-controller"
        ],
        "operationId": "deleteAllSoftDeleteEntities",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/tokens/{tokenId}": {
      "delete": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "deleteToken",
        "parameters": [
          {
            "name": "tokenId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserAccessToken"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/users/loggedIn/session": {
      "delete": {
        "tags": [
          "ui-user-controller"
        ],
        "operationId": "deleteALlLoggedInUsers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/user-token/{id}": {
      "delete": {
        "tags": [
          "ui-user-vcs-token-controller"
        ],
        "operationId": "delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/stacks/{stackName}/overrides-fields": {
      "delete": {
        "tags": [
          "ui-stack-controller"
        ],
        "operationId": "deleteOverridesFields",
        "parameters": [
          {
            "name": "stackName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OverrideDeleteRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/release-stream/{name}": {
      "delete": {
        "tags": [
          "ui-release-stream-controller"
        ],
        "operationId": "delete_2",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/intents/{name}": {
      "delete": {
        "tags": [
          "Intent Management"
        ],
        "operationId": "deleteIntent",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/queued-releases/{queuedReleaseId}": {
      "delete": {
        "tags": [
          "ui-queued-release-controller"
        ],
        "operationId": "deleteById",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "queuedReleaseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/overrides/{resourceType}/{resourceName}": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "deleteOverrides",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "resourceName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OverrideObject"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/force": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "deleteClusterForce",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/detachImage": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "detachImage",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageOverrideRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/qa/{executionId}/abortSuite": {
      "delete": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "abortAutomationSuite",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "executionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/deployments/destroy": {
      "delete": {
        "tags": [
          "ui-deployment-controller"
        ],
        "operationId": "destroyCluster",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/DeploymentLog"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "deleteAvailabilitySchedule",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "availabilityScheduleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/clusters/{clusterId}/alerts/silence/{silenceId}": {
      "delete": {
        "tags": [
          "ui-common-cluster-controller"
        ],
        "operationId": "removeSilence",
        "parameters": [
          {
            "name": "clusterId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "silenceId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifacts/{artifactId}": {
      "delete": {
        "tags": [
          "ui-artifacts-controller"
        ],
        "operationId": "deleteArtifact",
        "parameters": [
          {
            "name": "artifactId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/cc-ui/v1/artifactories/v2/{artifactoryId}": {
      "delete": {
        "tags": [
          "ui-artifactory-controller"
        ],
        "operationId": "deleteArtifactory",
        "parameters": [
          {
            "name": "artifactoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/api/login": {
      "get": {
        "tags": [
          "application-controller"
        ],
        "operationId": "login",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "application-controller"
        ],
        "operationId": "login_3",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "tags": [
          "application-controller"
        ],
        "operationId": "login_2",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "application-controller"
        ],
        "operationId": "login_5",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "options": {
        "tags": [
          "application-controller"
        ],
        "operationId": "login_6",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "head": {
        "tags": [
          "application-controller"
        ],
        "operationId": "login_1",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      },
      "patch": {
        "tags": [
          "application-controller"
        ],
        "operationId": "login_4",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "type": "string"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorDetails"
            }
          }
        },
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "definitions": {
    "ErrorDetails": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "PromotionWorkflow": {
      "required": [
        "registrationType",
        "workflowName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "workflowName": {
          "type": "string"
        },
        "hierarchies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowHierarchy"
          }
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "stackName": {
          "type": "string"
        },
        "defaultWorkflow": {
          "type": "boolean"
        }
      }
    },
    "WorkflowHierarchy": {
      "type": "object",
      "properties": {
        "sequence": {
          "type": "integer",
          "format": "int32"
        },
        "registrationValue": {
          "type": "string"
        }
      }
    },
    "WebComponentDTO": {
      "required": [
        "enabled",
        "name",
        "remoteURL",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the web component",
          "example": "abc123"
        },
        "name": {
          "type": "string",
          "description": "Unique identifier for the web component",
          "example": "custom-dashboard"
        },
        "type": {
          "type": "string",
          "description": "Type of web component (NAV_TYPE or TAB_TYPE)",
          "example": "NAV_APP",
          "enum": [
            "NAV_APP",
            "TAB_APP"
          ]
        },
        "remoteURL": {
          "type": "string",
          "description": "Hosted location of the component script",
          "example": "https://example.com/component.js"
        },
        "iconURL": {
          "type": "string",
          "description": "URL of the icon to be displayed in the UI",
          "example": "https://example.com/icon.png"
        },
        "enabled": {
          "type": "boolean",
          "description": "Flag to enable/disable component visibility",
          "example": true
        },
        "tooltip": {
          "type": "string",
          "description": "Tooltip text to display on hover",
          "example": "Custom Dashboard Component"
        },
        "order": {
          "type": "integer",
          "description": "Position priority of the component",
          "format": "int32",
          "example": 1
        },
        "contextualAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Additional contextual attributes for component configuration",
            "example": {
              "theme": "dark",
              "width": "100%"
            }
          },
          "description": "Additional contextual attributes for component configuration",
          "example": {
            "theme": "dark",
            "width": "100%"
          }
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastModifiedBy": {
          "type": "string",
          "readOnly": true
        }
      },
      "description": "Model representing a Web Component for embedding custom applications"
    },
    "UserVCSTokenRequest": {
      "required": [
        "hostName",
        "personalAccessToken",
        "userName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "personalAccessToken": {
          "type": "string"
        }
      }
    },
    "UserVCSTokenResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "hostName": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        }
      }
    },
    "UserGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "clusterRoleBindings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterIds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "baseRole": {
          "type": "string"
        },
        "additionalRoles": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "associatedResourceGroups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "stackNames": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accounts": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "TfVersion": {
      "required": [
        "majorVersion",
        "minorVersion",
        "tfStream"
      ],
      "type": "object",
      "properties": {
        "tfStream": {
          "type": "string"
        },
        "majorVersion": {
          "type": "integer",
          "format": "int32"
        },
        "minorVersion": {
          "type": "string",
          "description": "LATEST",
          "example": "LATEST"
        },
        "lastModified": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ClusterTfVersionMapping": {
      "required": [
        "clusterId",
        "version"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "version": {
          "$ref": "#/definitions/TfVersion"
        },
        "clusterId": {
          "type": "string"
        }
      }
    },
    "FacetsResource": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      }
    },
    "OverrideConfig": {
      "type": "object",
      "properties": {
        "gitOverrideUrl": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "uiOverridesEnabled": {
          "type": "boolean"
        },
        "gitOrgName": {
          "type": "string"
        },
        "overridesRepoName": {
          "type": "string"
        },
        "overridesMigrationStatus": {
          "type": "string",
          "enum": [
            "IN_PROGRESS",
            "PENDING",
            "COMPLETED",
            "FAILED"
          ]
        },
        "migrationFailureMessage": {
          "type": "string"
        }
      }
    },
    "Stack": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "vcsUrl": {
          "type": "string"
        },
        "vcs": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        },
        "relativePath": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "changeLog": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "primaryCloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "allowedClouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "stackVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterVariablesMeta": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableDetails"
          }
        },
        "childStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "artifactories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providedResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "accountId": {
          "type": "string"
        },
        "autoEnabledSubStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versionControlAccountId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "appPassword": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "gitOpsEnabled": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "githubOrganizationName": {
          "type": "string"
        },
        "coderAccountId": {
          "type": "string"
        },
        "gitOverridesEnabled": {
          "type": "boolean"
        },
        "overrideConfig": {
          "$ref": "#/definitions/OverrideConfig"
        },
        "configModulesDisabled": {
          "type": "boolean"
        },
        "projectTypeId": {
          "type": "string"
        },
        "projectTypeName": {
          "type": "string"
        },
        "previewModulesAllowed": {
          "type": "boolean",
          "description": "Alternatively called isTestProject"
        },
        "id": {
          "type": "string"
        },
        "template": {
          "type": "boolean"
        },
        "monoRepo": {
          "type": "boolean"
        },
        "starterProject": {
          "type": "boolean"
        },
        "alphaBlueprint": {
          "type": "boolean"
        },
        "importedProject": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "VariableDetails": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "global": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "required": {
          "type": "boolean"
        }
      }
    },
    "VariableRequest": {
      "required": [
        "variableName"
      ],
      "type": "object",
      "properties": {
        "variableName": {
          "type": "string",
          "description": "Name of the variable/secret",
          "example": "database_password"
        },
        "description": {
          "type": "string",
          "description": "Description of the variable/secret",
          "example": "Database connection password"
        },
        "global": {
          "type": "boolean",
          "description": "Whether this is a global variable",
          "example": false
        },
        "stackDefault": {
          "type": "string",
          "description": "Default value at stack level",
          "example": "default_password"
        },
        "clusterIdToValueMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "description": "Environment-specific values",
            "example": "{\"clusterid1\":\"prod_password\",\"clusterid2\":\"staging_password\"}"
          },
          "description": "Environment-specific values",
          "example": {
            "clusterid1": "prod_password",
            "clusterid2": "staging_password"
          }
        },
        "secret": {
          "type": "boolean"
        }
      },
      "description": "Variable request with project default and environment values"
    },
    "EnableGitOpsRequest": {
      "type": "object",
      "properties": {
        "vcsUrl": {
          "type": "string"
        },
        "vcsAccountId": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        }
      }
    },
    "ResourceGroupRequest": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "maxLength": 2147483647,
          "minLength": 2,
          "type": "string"
        }
      }
    },
    "ResourceGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "resourceInfo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceInfo"
          }
        }
      }
    },
    "ResourceInfo": {
      "required": [
        "stackName"
      ],
      "type": "object",
      "properties": {
        "stackName": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceList"
          }
        }
      }
    },
    "ResourceList": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ProjectTypeMappedResource": {
      "required": [
        "flavor",
        "intent",
        "intentType"
      ],
      "type": "object",
      "properties": {
        "intent": {
          "type": "string"
        },
        "intentType": {
          "type": "string"
        },
        "flavor": {
          "type": "string"
        }
      },
      "description": "Allowed modules for the project"
    },
    "ProjectTypeRequest": {
      "required": [
        "allowedClouds",
        "iacTool",
        "name",
        "templateGitDetails"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the project type",
          "example": "Cloud Project"
        },
        "allowedClouds": {
          "uniqueItems": true,
          "type": "array",
          "description": "Set of allowed clouds",
          "items": {
            "type": "string",
            "description": "Set of allowed clouds",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "description": {
          "type": "string",
          "description": "Description of the project type",
          "example": "This is a sample project type"
        },
        "templateGitDetails": {
          "$ref": "#/definitions/TemplateGitDetails"
        },
        "useBranch": {
          "type": "boolean",
          "description": "Use branch flag",
          "example": true
        },
        "baseProjectName": {
          "type": "string",
          "description": "Base project name",
          "example": "base-project"
        },
        "mappedResources": {
          "uniqueItems": true,
          "type": "array",
          "description": "Allowed modules for the project",
          "items": {
            "$ref": "#/definitions/ProjectTypeMappedResource"
          }
        },
        "iacTool": {
          "type": "string",
          "description": "IAC tool used for the project",
          "enum": [
            "TERRAFORM",
            "OPENTOFU"
          ]
        },
        "iacToolVersion": {
          "type": "string"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableNoCloudEnvironment": {
          "type": "boolean"
        },
        "legacy": {
          "type": "boolean",
          "description": "Whether this is a legacy project type",
          "example": false
        },
        "includeToolingProvider": {
          "type": "boolean",
          "description": "Whether to include tooling provider",
          "example": false
        },
        "includeCpK8sProvider": {
          "type": "boolean",
          "description": "Whether to include CPK8s provider",
          "example": false
        }
      },
      "description": "Request model for Project Type operations."
    },
    "TemplateGitDetails": {
      "required": [
        "accountId",
        "gitRef",
        "gitUrl",
        "path"
      ],
      "type": "object",
      "properties": {
        "gitUrl": {
          "type": "string",
          "description": "Git repository URL",
          "example": "https://github.com/example/repo.git"
        },
        "gitRef": {
          "type": "string",
          "description": "Git reference (branch or tag)",
          "example": "main"
        },
        "path": {
          "type": "string",
          "description": "Path within the Git repository",
          "example": "/templates/project"
        },
        "accountId": {
          "type": "string",
          "description": "Account ID associated with the Git repository",
          "example": "acct123"
        }
      },
      "description": "Git details for the template used in Project Type"
    },
    "ProjectTypeResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "allowedClouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "templateGitDetails": {
          "$ref": "#/definitions/TemplateGitDetails"
        },
        "mappedResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectTypeMappedResource"
          }
        },
        "associatedBlueprints": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iacTool": {
          "type": "string",
          "enum": [
            "TERRAFORM",
            "OPENTOFU"
          ]
        },
        "iacToolVersion": {
          "type": "string"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableNoCloudEnvironment": {
          "type": "boolean"
        },
        "baseProjectName": {
          "type": "string"
        },
        "legacy": {
          "type": "boolean"
        },
        "includeToolingProvider": {
          "type": "boolean"
        },
        "includeCpK8sProvider": {
          "type": "boolean"
        }
      }
    },
    "OpaPolicyRequest": {
      "type": "object",
      "properties": {
        "policyName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "rawPolicy": {
          "type": "string"
        },
        "clusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypeAndResourceNamesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "policyType": {
          "type": "string",
          "enum": [
            "RAW",
            "TEMPLATED"
          ]
        },
        "templateId": {
          "type": "string"
        },
        "flavours": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "severity": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARNING"
          ]
        },
        "packageName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        }
      }
    },
    "OpaPolicy": {
      "type": "object",
      "properties": {
        "policyName": {
          "type": "string"
        },
        "policyCode": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "packageName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "clusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "disabled": {
          "type": "boolean"
        },
        "resourceTypeAndResourceNamesMap": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "policyType": {
          "type": "string",
          "enum": [
            "RAW",
            "TEMPLATED"
          ]
        },
        "templateId": {
          "type": "string"
        },
        "severity": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARNING"
          ]
        },
        "inputData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "flavours": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        }
      }
    },
    "CustomOAuth2ClientRegistration": {
      "required": [
        "clientId",
        "clientSecret",
        "loginButtonText",
        "provider",
        "registrationId",
        "scope"
      ],
      "type": "object",
      "properties": {
        "registrationId": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GOOGLE",
            "OKTA",
            "ONE_LOGIN",
            "AZURE_AD",
            "JUMP_CLOUD",
            "OPEN_ID"
          ]
        },
        "issuerUrl": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "writeOnly": true
        },
        "scope": {
          "type": "string"
        },
        "isSystemConfigured": {
          "type": "boolean",
          "readOnly": true
        },
        "loginButtonText": {
          "type": "string"
        },
        "systemConfigured": {
          "type": "boolean"
        }
      }
    },
    "ClientAuthenticationMethod": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "GenericOAuth2ClientRegistration": {
      "required": [
        "authorizationUri",
        "clientId",
        "clientSecret",
        "jwkSetUri",
        "loginButtonText",
        "provider",
        "registrationId",
        "scope",
        "tokenUri",
        "userInfoUri"
      ],
      "type": "object",
      "properties": {
        "registrationId": {
          "type": "string"
        },
        "provider": {
          "type": "string",
          "enum": [
            "GOOGLE",
            "OKTA",
            "ONE_LOGIN",
            "AZURE_AD",
            "JUMP_CLOUD",
            "OPEN_ID"
          ]
        },
        "issuerUrl": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "writeOnly": true
        },
        "scope": {
          "type": "string"
        },
        "isSystemConfigured": {
          "type": "boolean",
          "readOnly": true
        },
        "loginButtonText": {
          "type": "string"
        },
        "tokenUri": {
          "type": "string"
        },
        "authorizationUri": {
          "type": "string"
        },
        "userInfoUri": {
          "type": "string"
        },
        "jwkSetUri": {
          "type": "string"
        },
        "clientAuthenticationMethod": {
          "$ref": "#/definitions/ClientAuthenticationMethod"
        },
        "systemConfigured": {
          "type": "boolean"
        }
      }
    },
    "Subscription": {
      "required": [
        "channelId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "deprecated": true,
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        },
        "channelAddress": {
          "type": "string",
          "deprecated": true
        },
        "notificationType": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATUS_UPDATE",
            "APP_DEPLOYMENT",
            "QASUITE_SANITY",
            "DR_RESULT",
            "STACK_SIGNOFF",
            "ALERT",
            "TEST",
            "APPLICATION_DEPLOYMENT_COMPLETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_LAUNCH",
            "ENVIRONMENT_DESTROY",
            "ENVIRONMENT_CONFIGURE"
          ]
        },
        "channelId": {
          "type": "string"
        },
        "notificationSubject": {
          "type": "string"
        },
        "filters": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "payloadJson": {
          "type": "string"
        },
        "test": {
          "type": "boolean"
        }
      }
    },
    "NotificationChannel": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "channelAddress": {
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        },
        "integrationKey": {
          "type": "string"
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorizationHeader": {
          "type": "string"
        }
      }
    },
    "LocalTime": {
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MaintenanceWindowDTO": {
      "required": [
        "clusterId",
        "dayOfWeek",
        "endTime",
        "startTime",
        "timeZone"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "MON",
            "TUE",
            "WED",
            "THU",
            "FRI",
            "SAT",
            "SUN"
          ]
        },
        "startTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "endTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "timeZone": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "cron": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        },
        "triggered": {
          "type": "boolean",
          "deprecated": true
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        }
      }
    },
    "KubernetesClusterRequest": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "tz": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "releaseStream": {
          "type": "string"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "KubernetesCluster": {
      "required": [
        "name",
        "releaseStream",
        "stackName",
        "tz"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "tz": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "configured": {
          "type": "boolean"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "branch": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string",
          "readOnly": true
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "hasK8sCredentials": {
          "type": "boolean"
        },
        "host": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "certificateAuthority": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "Variables": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "boolean"
        },
        "value": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "DEFAULT",
            "OVERRIDDEN"
          ]
        },
        "global": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "GCPClusterRequest": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "tz": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "releaseStream": {
          "type": "string"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "serviceAccountKey": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcCIDR": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "providedVPCId": {
          "type": "string"
        },
        "sharedVPCSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "GCPCluster": {
      "required": [
        "name",
        "releaseStream",
        "stackName",
        "tz"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "tz": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "configured": {
          "type": "boolean"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "branch": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string",
          "readOnly": true
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "hasK8sCredentials": {
          "type": "boolean"
        },
        "serviceAccountKey": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcCIDR": {
          "type": "string"
        },
        "machineType": {
          "type": "string"
        },
        "providedVPCId": {
          "type": "string"
        },
        "sharedVPCSettings": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "EnvironmentRequest": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "tz": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "releaseStream": {
          "type": "string"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "Environment": {
      "required": [
        "name",
        "releaseStream",
        "stackName",
        "tz"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "tz": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "configured": {
          "type": "boolean"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "branch": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string",
          "readOnly": true
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "hasK8sCredentials": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "DomainDTO": {
      "required": [
        "alias",
        "domain"
      ],
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        },
        "certificateReference": {
          "type": "string"
        }
      }
    },
    "ResourceEnableDisableRequest": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        }
      }
    },
    "ResourceFileRequest": {
      "required": [
        "resourceName",
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "content": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "directory": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "mergeContent": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "flavor": {
          "type": "string"
        },
        "resourceGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "UpdateBlueprintRequest": {
      "type": "object",
      "properties": {
        "files": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceFileRequest"
          }
        },
        "affectedFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceEnableDisableRequest"
          }
        }
      }
    },
    "ResourceInheritFromBaseRequest": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "inheritFromBase": {
          "type": "boolean"
        }
      }
    },
    "ResourceRenameRequest": {
      "required": [
        "newResourceName",
        "oldResourceName",
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "newResourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "oldResourceName": {
          "type": "string"
        },
        "oldFileName": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        }
      }
    },
    "Config": {
      "type": "object",
      "properties": {
        "requiresSignOff": {
          "type": "boolean"
        },
        "autoPromoteArtifact": {
          "type": "boolean"
        }
      }
    },
    "PipelineNode": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "parentClusterId": {
          "type": "string"
        },
        "config": {
          "$ref": "#/definitions/Config"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "CustomRoleRequest": {
      "required": [
        "permissions"
      ],
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "permissions": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string"
        },
        "k8sRole": {
          "type": "string"
        },
        "k8sClusterRole": {
          "type": "string"
        }
      }
    },
    "RoleMapping": {
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "entities": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "ACCOUNTS_WRITE",
              "ACCOUNTS_DELETE",
              "ALERTS_CONFIGURE",
              "ARTIFACTORY_WRITE",
              "ARTIFACTORY_DELETE",
              "ARTIFACTS_DELETE",
              "ARTIFACTS_WRITE",
              "ARTIFACT_ROUTING_RULE_WRITE",
              "ARTIFACT_ROUTING_RULE_DELETE",
              "APPLICATION_ROLLING_RESTART",
              "RUN_ACTION",
              "APPLICATION_DEPLOYMENT_PROMOTE",
              "APPLICATION_DEPLOYMENT_ABORT",
              "BILLING_MANAGE",
              "CHANNEL_WRITE",
              "CHANNEL_DELETE",
              "ENVIRONMENT_CONFIGURE",
              "ENVIRONMENT_DELETE",
              "ENVIRONMENT_WRITE",
              "ENVIRONMENT_DESTROY",
              "ENVIRONMENT_LAUNCH",
              "OAUTH_INTEGRATION_DELETE",
              "OAUTH_INTEGRATION_WRITE",
              "RESOURCE_OVERRIDE",
              "RESOURCE_WRITE",
              "RESOURCE_DELETE",
              "CRITICAL_RESOURCE_WRITE",
              "RESOURCE_GROUP_READ",
              "RESOURCE_GROUP_WRITE",
              "RESOURCE_GROUP_DELETE",
              "RELEASE_APPROVAL_AUTHORITY",
              "RELEASE_FULL",
              "RELEASE_PLAN",
              "RELEASE_APPLY_PLAN",
              "RELEASE_SELECTIVE",
              "RELEASE_CUSTOM",
              "RELEASE_MAINTENANCE",
              "RELEASE_TERRAFORM_EXPORT",
              "RELEASE_SCALE_UP",
              "RELEASE_SCALE_DOWN",
              "RELEASE_FULL_ALLOW_DESTROY",
              "RELEASE_SELECTIVE_ALLOW_DESTROY",
              "RELEASE_CUSTOM_ALLOW_DESTROY",
              "RELEASE_PAUSE",
              "RELEASE_ABORT",
              "STACK_CONFIGURE",
              "STACK_WRITE",
              "STACK_DELETE",
              "SUBSCRIPTION_WRITE",
              "SUBSCRIPTION_DELETE",
              "SETTINGS_WRITE",
              "USER_READ",
              "USER_WRITE",
              "USER_DELETE",
              "TEMPLATE_WRITE",
              "TEMPLATE_DELETE",
              "TRASH_RESTORE",
              "TRASH_DELETE",
              "USER_GROUP_READ",
              "USER_GROUP_WRITE",
              "USER_GROUP_DELETE",
              "CUSTOM_ROLE_READ",
              "CUSTOM_ROLE_WRITE",
              "CUSTOM_ROLE_DELETE",
              "K8S_READER",
              "K8S_DEBUGGER",
              "K8S_CUSTOM",
              "K8S_CREDENTIALS",
              "CLI_ARTIFACT_PUSH",
              "K8S_PERMISSION",
              "PIPELINE_WRITE",
              "ARTIFACT_CI_WRITE",
              "ARTIFACT_CI_DELETE",
              "PROMOTIONAL_WORKFLOW_WRITE",
              "PROMOTIONAL_WORKFLOW_DELETE",
              "VIEW_RESOURCE_SECRETS",
              "COST_EXPLORER_VIEW",
              "RELEASE_STREAM_WRITE",
              "RELEASE_STREAM_DELETE",
              "BLUEPRINT_TEMPLATE_WRITE",
              "BLUEPRINT_TEMPLATE_DELETE",
              "VPN_CONNECT",
              "OPA_WRITE",
              "OPA_EXECUTE",
              "OPA_DELETE",
              "AUDIT_LOGS_VIEW",
              "CI_CD_CONFIGURE",
              "VIEW_SECRETS",
              "MAINTENANCE_WINDOW_EDIT",
              "MODULE_READ",
              "MODULE_WRITE",
              "MODULE_DELETE",
              "PROJECT_TYPE_WRITE",
              "PROJECT_TYPE_DELETE",
              "WEB_COMPONENT_WRITE",
              "WEB_COMPONENT_DELETE"
            ]
          }
        },
        "k8sRole": {
          "type": "string"
        },
        "k8sClusterRole": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "roleType": {
          "type": "string",
          "enum": [
            "SYSTEM_DEFINED",
            "USER_DEFINED"
          ]
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "baseRole": {
          "type": "boolean"
        }
      }
    },
    "ContentFile": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "CI",
            "DOCUMENTATION"
          ]
        },
        "title": {
          "type": "string"
        },
        "selectors": {
          "$ref": "#/definitions/Selectors"
        },
        "mdContent": {
          "type": "string"
        },
        "requiredPayload": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string",
            "readOnly": true
          }
        }
      }
    },
    "Selectors": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "displayType": {
          "type": "string",
          "enum": [
            "INLINE",
            "TAB",
            "PAGE"
          ]
        },
        "subType": {
          "type": "string"
        }
      }
    },
    "ToolsConfig": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "toolsKey": {
          "type": "string"
        },
        "toolsUser": {
          "type": "string"
        }
      }
    },
    "StackTemplateInput": {
      "required": [
        "clusterId",
        "data",
        "inputType",
        "uid"
      ],
      "type": "object",
      "properties": {
        "uid": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "inputType": {
          "type": "string"
        },
        "data": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ScheduleRequest": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "string",
          "enum": [
            "PER_MINUTE",
            "HOURLY",
            "DAILY",
            "WEEKLY"
          ]
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "byDay": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT",
              "SUN"
            ]
          }
        },
        "byTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "timeZone": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "pauseReleaseSchedule": {
          "type": "boolean"
        },
        "tearDownAfter": {
          "type": "integer",
          "format": "int32"
        },
        "shortLived": {
          "type": "boolean"
        }
      }
    },
    "ClusterSchedule": {
      "required": [
        "clusterId",
        "releaseType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "description": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "enum": [
            "PER_MINUTE",
            "HOURLY",
            "DAILY",
            "WEEKLY"
          ]
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "byDay": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT",
              "SUN"
            ]
          }
        },
        "byTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "timeZone": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "serverTimeZone": {
          "type": "string"
        },
        "isPaused": {
          "type": "boolean"
        }
      }
    },
    "AppDeployment": {
      "type": "object",
      "properties": {
        "appName": {
          "type": "string"
        },
        "artifact": {
          "$ref": "#/definitions/Artifact"
        }
      }
    },
    "Artifact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "buildId": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "artifactory": {
          "type": "string"
        },
        "buildDescription": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "appliedRuleVersionId": {
          "type": "string"
        },
        "appliedRuleId": {
          "type": "string"
        },
        "appliedRuleName": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "promoted": {
          "type": "boolean"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "registrationValue": {
          "type": "string"
        },
        "classified": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "BlueprintValidationError": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string",
          "enum": [
            "Syntax Error",
            "Non-Existent Resource Reference",
            "Disabled Resource References",
            "Invalid Reference Expression",
            "Schema Compliance Error",
            "GuardRails Compliance Issues",
            "Overrides Syntax Error",
            "Invalid Filename Error"
          ]
        },
        "severity": {
          "type": "string",
          "enum": [
            "ERROR",
            "WARNING"
          ]
        },
        "message": {
          "type": "string"
        },
        "blueprintErrorLines": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        },
        "overrideErrorLines": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      }
    },
    "DeploymentLog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deploymentJobType": {
          "type": "string",
          "enum": [
            "CODEBUILD",
            "KUBERNETES_POD"
          ]
        },
        "codebuildId": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "finishedOn": {
          "type": "string",
          "format": "date-time"
        },
        "timeTakenInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCEEDED",
            "FAILED",
            "FAULT",
            "TIMED_OUT",
            "IN_PROGRESS",
            "STOPPED",
            "INVALID",
            "STARTED",
            "UNKNOWN",
            "QUEUED",
            "PENDING_APPROVAL",
            "APPROVED",
            "ABORTED",
            "REJECTED"
          ]
        },
        "changesApplied": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TerraformChange"
          }
        },
        "appDeployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AppDeployment"
          }
        },
        "migrationScriptsRun": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationScriptMetadata"
          }
        },
        "errorLogs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RawError"
          }
        },
        "deploymentType": {
          "type": "string",
          "enum": [
            "REGULAR",
            "CUSTOM",
            "ROLLBACK"
          ]
        },
        "stackVersion": {
          "type": "string"
        },
        "tfVersion": {
          "type": "string"
        },
        "signedOff": {
          "type": "boolean"
        },
        "deploymentContextVersion": {
          "type": "string"
        },
        "triggeredBy": {
          "type": "string"
        },
        "overrideBuildSteps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "integrationTest": {
          "type": "boolean"
        },
        "withRefresh": {
          "type": "boolean"
        },
        "isDestroy": {
          "type": "boolean"
        },
        "allowDestroy": {
          "type": "boolean"
        },
        "forceRelease": {
          "type": "boolean"
        },
        "validationResult": {
          "$ref": "#/definitions/ValidationResult"
        },
        "deploymentContextFilePath": {
          "type": "string"
        },
        "releaseComment": {
          "type": "string"
        },
        "hotfixResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "releaseReviewedBy": {
          "type": "string"
        },
        "approvedReleaseId": {
          "type": "string"
        },
        "validationResponses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationResponse"
          }
        },
        "releaseTraceId": {
          "type": "string"
        },
        "rollbackDeploymentId": {
          "type": "string"
        },
        "parallelRelease": {
          "type": "boolean"
        }
      }
    },
    "MigrationScriptMetadata": {
      "type": "object",
      "properties": {
        "sequenceNumber": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "downtime": {
          "type": "boolean"
        },
        "clouds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "RawError": {
      "type": "object",
      "properties": {
        "stackTrace": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "resolution": {
          "type": "string"
        }
      }
    },
    "TerraformChange": {
      "type": "object",
      "properties": {
        "resourcePath": {
          "type": "string"
        },
        "resourceKey": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Destruction",
            "Creation",
            "Modifications"
          ]
        }
      }
    },
    "ValidationError": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "Syntax Error",
            "Missing File Error",
            "Reference Error",
            "Invalid Filename"
          ]
        },
        "syntaxError": {
          "type": "boolean"
        }
      }
    },
    "ValidationResponse": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintValidationError"
          }
        }
      }
    },
    "ValidationResult": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      }
    },
    "CopyConfigurationsRequest": {
      "type": "object",
      "properties": {
        "sourceClusterId": {
          "type": "string"
        },
        "selectionMode": {
          "type": "string",
          "enum": [
            "INCLUDE",
            "EXCLUDE"
          ]
        },
        "configurationTypes": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "VARIABLES_SECRETS",
              "ARTIFACTS",
              "ENVIRONMENT_SETTINGS",
              "SCHEDULES",
              "AVAILABILITY_SCHEDULES",
              "OVERRIDES",
              "TEMPLATE_INPUTS"
            ]
          }
        }
      },
      "description": "Request containing source cluster ID, selection mode (INCLUDE/EXCLUDE), and set of configuration types"
    },
    "AbstractCluster": {
      "required": [
        "name",
        "releaseStream",
        "stackName",
        "tz"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "tz": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "configured": {
          "type": "boolean"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "branch": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string",
          "readOnly": true
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "hasK8sCredentials": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "DraftClusterRequest": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "tz": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "releaseStream": {
          "type": "string"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "AttachDetachCiRequest": {
      "required": [
        "blueprintName",
        "ciName",
        "registrationType"
      ],
      "type": "object",
      "properties": {
        "ciName": {
          "type": "string",
          "description": "CI name to which the operation is applied.",
          "example": "ci-my-app"
        },
        "registrationType": {
          "type": "string",
          "description": "Registration type for the operation.",
          "example": "GIT_REF",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "blueprintName": {
          "type": "string",
          "description": "Blueprint name related to the CI.",
          "example": "blueprint-1"
        }
      },
      "description": "Request details for attaching or detaching a rule and workflow to/from a CI."
    },
    "AzureClusterRequest": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "tz": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "releaseStream": {
          "type": "string"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcCIDR": {
          "type": "string"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vnetName": {
          "type": "string"
        },
        "resourceGroupName": {
          "type": "string"
        }
      }
    },
    "AzureCluster": {
      "required": [
        "name",
        "releaseStream",
        "stackName",
        "tz"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "tz": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "configured": {
          "type": "boolean"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "branch": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string",
          "readOnly": true
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "hasK8sCredentials": {
          "type": "boolean"
        },
        "tenantId": {
          "type": "string"
        },
        "subscriptionId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcCIDR": {
          "type": "string"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceGroupName": {
          "type": "string"
        },
        "vnetName": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "AwsClusterRequest": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "tz": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "releaseStream": {
          "type": "string"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "baseClusterId": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcCIDR": {
          "type": "string"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providedVPCId": {
          "type": "string"
        }
      }
    },
    "AwsCluster": {
      "required": [
        "name",
        "releaseStream",
        "stackName",
        "tz"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "tz": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "deleted": {
          "type": "boolean"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "configured": {
          "type": "boolean"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "branch": {
          "type": "string"
        },
        "clusterCode": {
          "type": "string",
          "readOnly": true
        },
        "commonEnvironmentVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Variables"
          }
        },
        "secrets": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "globalVariables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "schedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountSecretId": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "baseClusterId": {
          "type": "string"
        },
        "baseClusterName": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "hasK8sCredentials": {
          "type": "boolean"
        },
        "awsRegion": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vpcCIDR": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "roleARN": {
          "type": "string"
        },
        "accessKeyId": {
          "type": "string"
        },
        "secretAccessKey": {
          "type": "string"
        },
        "providedVPCId": {
          "type": "string"
        },
        "instanceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "ArtifactCI": {
      "required": [
        "ciName",
        "registrationType"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "ciName": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "stackName": {
          "type": "string"
        },
        "promotionWorkflowId": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        }
      }
    },
    "ArtifactRoutingRuleRequest": {
      "required": [
        "criteria",
        "registrationType",
        "ruleName",
        "stackName"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Criterion"
          }
        },
        "stackName": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "ciSystem": {
          "type": "string",
          "enum": [
            "BRANCH_PER_ENVIRONMENT",
            "SINGLE_BRANCH_PROMOTION",
            "ADVANCED"
          ]
        }
      }
    },
    "Criterion": {
      "required": [
        "metadataKey",
        "operator",
        "routeTo",
        "value"
      ],
      "type": "object",
      "properties": {
        "operator": {
          "type": "string",
          "enum": [
            "EQUALS",
            "STARTS_WITH",
            "ENDS_WITH",
            "CONTAINS"
          ]
        },
        "value": {
          "type": "string"
        },
        "routeTo": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "metadataKey": {
          "type": "string"
        }
      }
    },
    "ArtifactRoutingRuleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Criterion"
          }
        },
        "ruleName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "AccountAssociationInfo": {
      "type": "object",
      "properties": {
        "stackName": {
          "type": "string"
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterInfo"
          }
        }
      }
    },
    "ClusterInfo": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        }
      }
    },
    "KubernetesAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "host": {
          "type": "string"
        },
        "certificateAuthority": {
          "type": "string",
          "writeOnly": true
        },
        "token": {
          "type": "string",
          "writeOnly": true
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "GitLabAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "userName": {
          "type": "string"
        },
        "accessToken": {
          "type": "string",
          "writeOnly": true
        },
        "orgName": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "apiBaseUrl": {
          "type": "string"
        },
        "app": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "GitHubAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "userName": {
          "type": "string"
        },
        "accessToken": {
          "type": "string",
          "writeOnly": true
        },
        "orgName": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "apiBaseUrl": {
          "type": "string"
        },
        "app": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "GcpAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "serviceAccountKey": {
          "type": "string",
          "writeOnly": true
        },
        "project": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "CoderAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "url": {
          "type": "string"
        },
        "organizationId": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "apiToken": {
          "type": "string",
          "writeOnly": true
        },
        "default": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "BitBucketAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "userName": {
          "type": "string"
        },
        "accessToken": {
          "type": "string",
          "writeOnly": true
        },
        "orgName": {
          "type": "string"
        },
        "projectKey": {
          "type": "string"
        },
        "host": {
          "type": "string"
        },
        "app": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "AzureAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "subscriptionId": {
          "type": "string"
        },
        "tenantId": {
          "type": "string"
        },
        "clientId": {
          "type": "string"
        },
        "clientSecret": {
          "type": "string",
          "writeOnly": true
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "AwsAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "externalId": {
          "type": "string"
        },
        "iamRole": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userName": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "writeOnly": true
        },
        "picture": {
          "type": "string"
        },
        "roles": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupId": {
          "type": "string",
          "deprecated": true
        },
        "groupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterIds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teams": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PasswordChange": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "OneTimePayloadKubernetesAccount": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/KubernetesAccount"
        }
      }
    },
    "GitlabOauthAppPayload": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "redirectUrl": {
          "type": "string"
        }
      }
    },
    "OneTimePayloadGitlabOauthAppPayload": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/GitlabOauthAppPayload"
        }
      }
    },
    "GithubAppInstallationPayload": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "installationId": {
          "type": "integer",
          "format": "int64"
        },
        "enterpriseHostName": {
          "type": "string"
        }
      }
    },
    "OneTimePayloadGithubAppInstallationPayload": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/GithubAppInstallationPayload"
        }
      }
    },
    "OneTimePayloadGcpAccount": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/GcpAccount"
        }
      }
    },
    "ECRArtifactory": {
      "required": [
        "awsAccountId",
        "awsKey",
        "awsRegion",
        "awsSecret",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "HARBOR",
            "OTHERS"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "stacksAssociated": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "awsKey": {
          "type": "string",
          "writeOnly": true
        },
        "awsSecret": {
          "type": "string",
          "writeOnly": true
        },
        "awsRegion": {
          "type": "string"
        },
        "awsAccountId": {
          "type": "string"
        },
        "imageTagMutability": {
          "type": "string",
          "enum": [
            "MUTABLE",
            "IMMUTABLE"
          ]
        },
        "maxImages": {
          "type": "integer",
          "format": "int32"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "OneTimePayloadECRArtifactory": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/ECRArtifactory"
        }
      }
    },
    "BasicDockerDTO": {
      "required": [
        "artifactoryName",
        "artifactoryType",
        "password",
        "uri",
        "username"
      ],
      "type": "object",
      "properties": {
        "artifactoryName": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "HARBOR",
            "OTHERS"
          ]
        },
        "artifactoryProject": {
          "type": "string"
        },
        "stacksAssociated": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OneTimePayloadBasicDockerDTO": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/BasicDockerDTO"
        }
      }
    },
    "BitbucketOauthAppPayload": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "OneTimePayloadBitbucketOauthAppPayload": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/BitbucketOauthAppPayload"
        }
      }
    },
    "OneTimePayloadAzureAccount": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/AzureAccount"
        }
      }
    },
    "OneTimePayloadAwsAccount": {
      "type": "object",
      "properties": {
        "webhookId": {
          "type": "string"
        },
        "payload": {
          "$ref": "#/definitions/AwsAccount"
        }
      }
    },
    "GithubAppInstallationRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        },
        "webhookId": {
          "type": "string"
        }
      }
    },
    "GithubAppInstallationRequestResponse": {
      "type": "object",
      "properties": {
        "targetId": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TokenValidationRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "TokenValidity": {
      "type": "object",
      "properties": {
        "valid": {
          "type": "boolean"
        },
        "message": {
          "type": "string",
          "enum": [
            "TOKEN_NOT_FOUND",
            "TOKEN_EXPIRED",
            "TOKEN_ALREADY_USED"
          ]
        },
        "username": {
          "type": "string"
        }
      }
    },
    "SavePasswordResetPasswordRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "Response": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      }
    },
    "ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "Assistant": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "prompt": {
          "type": "string"
        },
        "ability": {
          "type": "string"
        },
        "conversational": {
          "type": "boolean"
        }
      }
    },
    "AssistantMessage": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "assistant": {
          "$ref": "#/definitions/Assistant"
        },
        "message": {
          "type": "string"
        },
        "context": {
          "type": "object"
        }
      }
    },
    "AssistantRequest": {
      "type": "object",
      "properties": {
        "threadId": {
          "type": "string"
        },
        "actionName": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "context": {
          "$ref": "#/definitions/JSONObject"
        }
      }
    },
    "AssistantResponse": {
      "type": "object",
      "properties": {
        "threadId": {
          "type": "string"
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssistantMessage"
          }
        },
        "nextActions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AssistantRequest"
          }
        }
      }
    },
    "JSONObject": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        }
      }
    },
    "InviteUserRequest": {
      "type": "object",
      "properties": {
        "usersEmailList": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "groupId": {
          "type": "string"
        }
      }
    },
    "UserAccessToken": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string",
          "readOnly": true
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "token": {
          "type": "string",
          "writeOnly": true
        },
        "userName": {
          "type": "string",
          "readOnly": true
        },
        "createdOn": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "JsonNode": {
      "type": "object"
    },
    "TFOutputRequestDTO": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lookupTree": {
          "type": "string"
        },
        "inferredFromModule": {
          "type": "boolean"
        },
        "properties": {
          "$ref": "#/definitions/JsonNode"
        },
        "namespace": {
          "type": "string"
        },
        "providers": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TFProvider"
          }
        }
      }
    },
    "TFProvider": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      }
    },
    "TFOutputResponseDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "facetsYaml": {
          "type": "string"
        },
        "source": {
          "type": "string",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "inferredFromModule": {
          "type": "boolean"
        },
        "lookupTree": {
          "type": "string"
        },
        "properties": {
          "$ref": "#/definitions/JsonNode"
        },
        "namespace": {
          "type": "string"
        },
        "providers": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TFProvider"
          }
        }
      }
    },
    "ToggleRelease": {
      "type": "object",
      "properties": {
        "stackName": {
          "type": "string"
        },
        "pauseReleases": {
          "type": "boolean"
        }
      }
    },
    "CreateTemplateRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "coderAccountId": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "monoRepo": {
          "type": "boolean"
        }
      }
    },
    "SaveAsTemplateRequest": {
      "required": [
        "accountId",
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "gitUrl": {
          "type": "string"
        },
        "gitRef": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "clouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "MULTI_INSTANCE",
            "SINGLE_INSTANCE",
            "AUTO_INJECT"
          ]
        },
        "organisationName": {
          "type": "string"
        }
      }
    },
    "CreateBlueprintRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "githubAccountId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "githubOrganisationName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "coderAccountId": {
          "type": "string"
        },
        "primaryCloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "allowedClouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "relativePath": {
          "type": "string"
        },
        "isImportedProject": {
          "type": "boolean"
        },
        "vcsUrl": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "repoName": {
          "type": "string"
        },
        "gitOpsEnabled": {
          "type": "boolean"
        },
        "projectTypeId": {
          "type": "string"
        },
        "template": {
          "type": "boolean"
        },
        "monoRepo": {
          "type": "boolean"
        }
      }
    },
    "SubstackRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "vcsUrl": {
          "type": "string"
        },
        "vcs": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        },
        "relativePath": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "versionControlAccountId": {
          "type": "string"
        },
        "tfModule": {
          "type": "boolean"
        }
      }
    },
    "Substack": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "vcsUrl": {
          "type": "string"
        },
        "vcs": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        },
        "relativePath": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "changeLog": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "primaryCloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "allowedClouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "componentVersions": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "stackVars": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "clusterVariablesMeta": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/VariableDetails"
          }
        },
        "childStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "artifactories": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "providedResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "accountId": {
          "type": "string"
        },
        "autoEnabledSubStacks": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "versionControlAccountId": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "appPassword": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "gitOpsEnabled": {
          "type": "boolean"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "githubOrganizationName": {
          "type": "string"
        },
        "coderAccountId": {
          "type": "string"
        },
        "gitOverridesEnabled": {
          "type": "boolean"
        },
        "overrideConfig": {
          "$ref": "#/definitions/OverrideConfig"
        },
        "configModulesDisabled": {
          "type": "boolean"
        },
        "projectTypeId": {
          "type": "string"
        },
        "projectTypeName": {
          "type": "string"
        },
        "previewModulesAllowed": {
          "type": "boolean",
          "description": "Alternatively called isTestProject"
        },
        "artifactPath": {
          "type": "string"
        },
        "tfModule": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "template": {
          "type": "boolean"
        },
        "monoRepo": {
          "type": "boolean"
        },
        "starterProject": {
          "type": "boolean"
        },
        "alphaBlueprint": {
          "type": "boolean"
        },
        "importedProject": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "CreateProjectRequest": {
      "type": "object",
      "properties": {
        "blueprintName": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "allowedClouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "description": {
          "type": "string"
        },
        "gitOpsRequest": {
          "$ref": "#/definitions/EnableGitOpsRequest"
        },
        "draftClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DraftClusterRequest"
          }
        },
        "vcsAccountId": {
          "type": "string"
        },
        "orgName": {
          "type": "string"
        },
        "projectTypeId": {
          "type": "string"
        },
        "bitbucketProjectKey": {
          "type": "string"
        },
        "templateId": {
          "type": "string"
        }
      }
    },
    "MigrateOverridesRequest": {
      "type": "object",
      "properties": {
        "gitOverrideUrl": {
          "type": "string"
        },
        "branchName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      }
    },
    "ResourceSyncRequest": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        }
      }
    },
    "ResourceStatus": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "syncStatus": {
          "type": "string",
          "enum": [
            "IN_SYNC",
            "OUT_OF_SYNC"
          ]
        },
        "currentBPVersion": {
          "type": "string"
        },
        "liveBPVersion": {
          "type": "string"
        },
        "currentArtifactUrl": {
          "type": "string"
        },
        "liveArtifactUrl": {
          "type": "string"
        },
        "currentArtifactBuildId": {
          "type": "string"
        },
        "liveArtifactBuildId": {
          "type": "string"
        },
        "currentOverrideVersion": {
          "type": "string"
        },
        "liveOverrideVersion": {
          "type": "string"
        },
        "healthStatus": {
          "type": "string"
        },
        "releaseStatus": {
          "type": "string",
          "enum": [
            "QUEUED",
            "FAILED",
            "IN_PROGRESS",
            "COMPLETED"
          ]
        },
        "releaseTraceId": {
          "type": "string"
        },
        "isAlpha": {
          "type": "boolean"
        },
        "disabled": {
          "type": "boolean"
        },
        "currentState": {
          "type": "string",
          "enum": [
            "ENABLED",
            "DISABLED"
          ]
        },
        "previousState": {
          "type": "string",
          "enum": [
            "ENABLED",
            "DISABLED"
          ]
        },
        "hasStateChange": {
          "type": "boolean"
        },
        "flavor": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "ciName": {
          "type": "string"
        },
        "deployed": {
          "type": "boolean"
        }
      }
    },
    "ResourceStatusResponse": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "resourceStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceStatus"
          }
        }
      }
    },
    "AddResourceToGroupsRequest": {
      "required": [
        "resourceGroupIds",
        "resourceName",
        "resourceType",
        "stackName"
      ],
      "type": "object",
      "properties": {
        "stackName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceGroupIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ReleaseStreamRequest": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "prod": {
          "type": "boolean"
        }
      }
    },
    "ReleaseStream": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "prod": {
          "type": "boolean"
        }
      }
    },
    "OpaPolicyExecutionResult": {
      "type": "object",
      "properties": {
        "status": {
          "type": "boolean"
        },
        "errorDetails": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "serverResponse": {
          "type": "object"
        }
      }
    },
    "EnableDisableOPAPolicy": {
      "type": "object",
      "properties": {
        "policyName": {
          "type": "string"
        },
        "disabled": {
          "type": "boolean"
        }
      }
    },
    "OneTimeWebhook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "AZURE",
            "GCP",
            "AWS",
            "KUBERNETES",
            "ECR",
            "OTHER_DOCKER_REGISTRY",
            "GITHUB",
            "GITLAB",
            "BITBUCKET"
          ]
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "WAITING",
            "SUCCESS",
            "FAILED",
            "EXPIRED"
          ]
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleteAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "TagDataModel": {
      "type": "object"
    },
    "TestNotificationRequest": {
      "type": "object",
      "properties": {
        "channelAddress": {
          "type": "string"
        },
        "channelType": {
          "type": "string",
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        },
        "notificationType": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATUS_UPDATE",
            "APP_DEPLOYMENT",
            "QASUITE_SANITY",
            "DR_RESULT",
            "STACK_SIGNOFF",
            "ALERT",
            "TEST",
            "APPLICATION_DEPLOYMENT_COMPLETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_LAUNCH",
            "ENVIRONMENT_DESTROY",
            "ENVIRONMENT_CONFIGURE"
          ]
        },
        "payload": {
          "type": "string"
        },
        "integrationKey": {
          "type": "string"
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "authorizationHeader": {
          "type": "string"
        }
      }
    },
    "Input": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "addsCapability": {
          "type": "boolean"
        },
        "optional": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "defaultResource": {
          "$ref": "#/definitions/InputOutputResource"
        },
        "blockEdits": {
          "type": "boolean"
        }
      },
      "description": "Input parameters for this module"
    },
    "InputOutputResource": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "outputName": {
          "type": "string"
        },
        "default": {
          "type": "boolean"
        }
      }
    },
    "IntentOutput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "TFModule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "intent": {
          "type": "string",
          "description": "Intent of the TF Module",
          "example": "compute"
        },
        "flavor": {
          "type": "string",
          "description": "Flavor of the TF Module",
          "example": "large"
        },
        "aliasFlavors": {
          "uniqueItems": true,
          "type": "array",
          "description": "Alias flavors for the module",
          "example": [
            "medium",
            "extra-large"
          ],
          "items": {
            "type": "string",
            "description": "Alias flavors for the module",
            "example": "[\"medium\",\"extra-large\"]"
          }
        },
        "version": {
          "type": "string",
          "description": "Version of the TF Module",
          "example": "2.0.0"
        },
        "gitUrl": {
          "type": "string",
          "description": "URL of the GIT repository",
          "example": "https://gitlab.com/repo.git"
        },
        "gitRef": {
          "type": "string",
          "description": "Reference to a specific GIT branch or commit",
          "example": "develop"
        },
        "relativePath": {
          "type": "string",
          "description": "Relative path within the repository",
          "example": "modules/path"
        },
        "accountId": {
          "type": "string",
          "description": "Account identifier",
          "example": "67890"
        },
        "facetsYaml": {
          "type": "string",
          "description": "Facets YAML content"
        },
        "clouds": {
          "uniqueItems": true,
          "type": "array",
          "description": "Supported cloud providers for this module",
          "example": [
            "gcp"
          ],
          "items": {
            "type": "string",
            "description": "Supported cloud providers for this module",
            "example": "[\"gcp\"]"
          }
        },
        "sampleJson": {
          "type": "string",
          "description": "Sample JSON configuration",
          "example": "{}"
        },
        "spec": {
          "type": "string",
          "description": "Specification details of the module"
        },
        "metadata": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type of the TF Module",
          "example": "SIMPLE",
          "enum": [
            "SIMPLE",
            "ADD_ON"
          ]
        },
        "source": {
          "type": "string",
          "description": "Source of the module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Input parameters for this module"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "path": {
          "$ref": "#/definitions/TFModulePath"
        },
        "stage": {
          "type": "string",
          "description": "Stage of the TF Module in its lifecycle",
          "example": "PUBLISHED",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "allowedTestProjects": {
          "type": "array",
          "description": "List of test projects where this module will be available. If absent, it is available globally.",
          "example": [
            "project-1",
            "project-2"
          ],
          "items": {
            "type": "string",
            "description": "List of test projects where this module will be available. If absent, it is available globally.",
            "example": "[\"project-1\",\"project-2\"]"
          }
        },
        "description": {
          "type": "string"
        },
        "readmeMd": {
          "type": "string"
        },
        "containsOverridableFields": {
          "type": "boolean"
        },
        "tags": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iacTool": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "TERRAFORM",
              "OPENTOFU"
            ]
          }
        },
        "moduleGroupId": {
          "type": "string"
        },
        "criticalResource": {
          "type": "boolean"
        },
        "enableKubernetesExplorer": {
          "type": "boolean"
        },
        "nameLengthLimit": {
          "minimum": 1,
          "type": "integer",
          "description": "Maximum allowed length for resource names using this module",
          "format": "int32",
          "example": 40
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "featureBranch": {
          "type": "boolean"
        },
        "specModeled": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      },
      "description": "Model representing a Terraform Module"
    },
    "TFModulePath": {
      "type": "object",
      "properties": {
        "pathType": {
          "type": "string",
          "enum": [
            "S3",
            "FACETS_S3"
          ]
        },
        "path": {
          "type": "string"
        },
        "etag": {
          "type": "string"
        }
      },
      "description": "Path information related to TF Module"
    },
    "ModuleMetadata": {
      "type": "object",
      "properties": {
        "gitUrl": {
          "type": "string"
        },
        "gitRef": {
          "type": "string"
        },
        "autoCreate": {
          "type": "boolean"
        },
        "skipOutputWrite": {
          "type": "boolean"
        },
        "featureBranch": {
          "type": "boolean"
        }
      }
    },
    "IntentRequestDTO": {
      "required": [
        "displayName",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "intentOutputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "inferredFromModule": {
          "type": "boolean"
        }
      }
    },
    "IntentResponseDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "intentOutputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "source": {
          "type": "string",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "description": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        },
        "inferredFromModule": {
          "type": "boolean"
        }
      }
    },
    "AffectedResourcesRequest": {
      "required": [
        "targetResources"
      ],
      "type": "object",
      "properties": {
        "targetResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetResource"
          }
        }
      }
    },
    "TargetResource": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        }
      }
    },
    "AffectedResource": {
      "type": "object",
      "properties": {
        "blueprintFile": {
          "$ref": "#/definitions/BlueprintFile"
        },
        "parent": {
          "type": "boolean"
        }
      }
    },
    "BlueprintFile": {
      "type": "object",
      "properties": {
        "stackName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "syncCtxMd5": {
          "type": "string"
        },
        "syncId": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "alpha": {
          "type": "boolean"
        },
        "info": {
          "$ref": "#/definitions/Info"
        },
        "overridden": {
          "type": "boolean"
        },
        "override": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "edges": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/Edge"
          }
        },
        "expressions": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/RefExpression"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BlueprintValidationError"
          }
        },
        "parentResourceId": {
          "type": "string"
        },
        "childrenResourceIds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "iconUrl": {
          "type": "string"
        },
        "substack": {
          "type": "boolean"
        },
        "templatedResource": {
          "type": "boolean"
        }
      }
    },
    "Edge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "isInput": {
          "type": "boolean"
        },
        "inputName": {
          "type": "string"
        },
        "blockEdits": {
          "type": "boolean"
        },
        "outputName": {
          "type": "string"
        }
      }
    },
    "Info": {
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "provided": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "flavour": {
          "type": "string"
        },
        "tfModuleId": {
          "type": "string"
        },
        "strategy": {
          "type": "string",
          "enum": [
            "RollingUpdate",
            "BlueGreen",
            "Canary"
          ]
        },
        "ciName": {
          "type": "string"
        },
        "artifactType": {
          "type": "string",
          "enum": [
            "docker_image",
            "freestyle"
          ]
        },
        "staticImage": {
          "type": "string"
        },
        "githubRepositoryUrl": {
          "type": "string"
        },
        "repositoryPath": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "overriddenName": {
          "type": "string"
        },
        "inheritFromBase": {
          "type": "boolean"
        },
        "artifactory": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "ui": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "criticalResource": {
          "type": "boolean"
        },
        "enableKubernetesExplorer": {
          "type": "boolean"
        }
      }
    },
    "RefExpression": {
      "type": "object",
      "properties": {
        "expression": {
          "type": "string"
        }
      }
    },
    "ResourceAffectedResponse": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "affectedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AffectedResource"
          }
        },
        "targetResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/TargetResource"
          }
        }
      }
    },
    "CreateWorkspaceNewBranchRequest": {
      "required": [
        "newBranch",
        "sourceBranch",
        "workspaceName"
      ],
      "type": "object",
      "properties": {
        "workspaceName": {
          "type": "string"
        },
        "sourceBranch": {
          "type": "string"
        },
        "newBranch": {
          "type": "string"
        }
      }
    },
    "CoderWorkspaceResponse": {
      "type": "object",
      "properties": {
        "workspaceId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "CreateWorkspaceExistingBranchRequest": {
      "required": [
        "existingBranch",
        "workspaceName"
      ],
      "type": "object",
      "properties": {
        "workspaceName": {
          "type": "string"
        },
        "existingBranch": {
          "type": "string"
        }
      }
    },
    "SilenceAlarmRequest": {
      "required": [
        "comment",
        "labels",
        "snoozeInMinutes"
      ],
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "snoozeInMinutes": {
          "type": "integer",
          "format": "int32"
        },
        "id": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      }
    },
    "OverrideRequest": {
      "required": [
        "resourceName",
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "affectedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceEnableDisableRequest"
          }
        }
      }
    },
    "OverrideObject": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "overrides": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "changeLog": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "ProvidedAuthenticatedResource": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "port": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "ProvidedCloudResource": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ProvidedResources": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "providedUnauthenticatedResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedUnauthenticatedResource"
          }
        },
        "providedAuthenticatedResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedAuthenticatedResource"
          }
        },
        "providedShardedResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedShardedService"
          }
        },
        "providedCloudResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedCloudResource"
          }
        }
      }
    },
    "ProvidedShardedService": {
      "type": "object",
      "properties": {
        "shards": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProvidedAuthenticatedResource"
          }
        }
      }
    },
    "ProvidedUnauthenticatedResource": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "endpoint": {
          "type": "string"
        },
        "port": {
          "type": "string"
        }
      }
    },
    "PauseReleaseRequest": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "pauseReleases": {
          "type": "boolean"
        }
      }
    },
    "ChatContext": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "system",
            "user",
            "assistant"
          ]
        },
        "content": {
          "type": "string"
        }
      }
    },
    "ChatMessage": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "system",
            "user",
            "assistant"
          ]
        },
        "content": {
          "type": "string"
        },
        "chatState": {
          "type": "string",
          "enum": [
            "KEEP_ALIVE",
            "COMPLETE"
          ]
        },
        "token": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DeploymentRequest": {
      "required": [
        "overrideBuildSteps"
      ],
      "type": "object",
      "properties": {
        "releaseType": {
          "type": "string",
          "description": "CUSTOM",
          "example": "CUSTOM",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "extraEnv": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "example": "{}"
          },
          "example": {}
        },
        "overrideBuildSteps": {
          "type": "array",
          "example": [
            "Command 1",
            "Command 2"
          ],
          "items": {
            "type": "string",
            "example": "[\"Command 1\",\"Command 2\"]"
          }
        },
        "allowDestroy": {
          "type": "boolean",
          "description": "false",
          "example": false
        },
        "withRefresh": {
          "type": "boolean",
          "description": "false",
          "example": false
        },
        "forceRelease": {
          "type": "boolean",
          "description": "true",
          "example": true
        },
        "tfVersion": {
          "$ref": "#/definitions/TfVersion"
        },
        "releaseComment": {
          "type": "string"
        },
        "planCodeBuildId": {
          "type": "string"
        },
        "hotfixResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "lockId": {
          "type": "string"
        },
        "canQueue": {
          "type": "boolean"
        },
        "parallelRelease": {
          "type": "boolean",
          "default": false
        },
        "releaseTraceId": {
          "type": "string"
        },
        "queuedReleaseId": {
          "type": "string"
        },
        "rollbackDeploymentId": {
          "type": "string"
        },
        "skipStateCheck": {
          "type": "boolean"
        },
        "alpha": {
          "type": "boolean"
        },
        "approvedRelease": {
          "type": "boolean"
        }
      }
    },
    "HotfixDeploymentRecipe": {
      "type": "object",
      "properties": {
        "resourceList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        }
      }
    },
    "CreateChatRequest": {
      "type": "object",
      "properties": {
        "starter": {
          "type": "string",
          "enum": [
            "ALERTS"
          ]
        }
      }
    },
    "Chat": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ChatStarterMetadata"
        },
        "context": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChatMessage"
          }
        },
        "totalTokens": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ChatStarterMetadata": {
      "type": "object",
      "properties": {
        "starter": {
          "type": "string",
          "enum": [
            "ALERTS"
          ]
        },
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "suggestions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ImageOverrideRequest": {
      "required": [
        "resourceName",
        "resourceType"
      ],
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "repositoryName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "artifactType": {
          "type": "string",
          "enum": [
            "docker_image",
            "freestyle"
          ]
        },
        "artifactUri": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "GIT_REF",
            "ENVIRONMENT",
            "RELEASE_STREAM"
          ]
        },
        "registrationValue": {
          "type": "string"
        },
        "blueprintName": {
          "type": "string"
        },
        "ciName": {
          "type": "string"
        }
      }
    },
    "ChatRequest": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string"
        }
      }
    },
    "CiCdDto": {
      "required": [
        "promotionHierarchies",
        "registrationType",
        "routingRules",
        "stackName"
      ],
      "type": "object",
      "properties": {
        "registrationType": {
          "type": "string",
          "description": "Registration type for the CI/CD setup.",
          "example": "GIT_REF",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "stackName": {
          "type": "string",
          "description": "Name of the project.",
          "example": "my-project"
        },
        "routingRules": {
          "type": "array",
          "description": "Routing rules for artifact promotion.",
          "items": {
            "$ref": "#/definitions/Criterion"
          }
        },
        "promotionHierarchies": {
          "type": "array",
          "description": "Promotion workflow hierarchies.",
          "items": {
            "$ref": "#/definitions/WorkflowHierarchy"
          }
        },
        "ciSystem": {
          "type": "string",
          "description": "CI system used.",
          "example": "JENKINS",
          "enum": [
            "BRANCH_PER_ENVIRONMENT",
            "SINGLE_BRANCH_PROMOTION",
            "ADVANCED"
          ]
        },
        "mapToAllCis": {
          "type": "boolean",
          "description": "Indicate whether to map to all CI systems."
        }
      },
      "description": "Details required for configuring CI/CD for a project."
    },
    "SaasArtifactRequest": {
      "required": [
        "artifactRegisterType",
        "artifactRegisterValue",
        "artifactUri",
        "artifactory",
        "blueprintName"
      ],
      "type": "object",
      "properties": {
        "blueprintName": {
          "type": "string",
          "description": "Blueprint name associated with the artifact.",
          "example": "blueprint-1"
        },
        "applicationName": {
          "type": "string",
          "description": "Application name of the artifact.",
          "example": "my-app"
        },
        "ciName": {
          "type": "string",
          "description": "Custom CI name if applicationName is not used.",
          "example": "ci-my-app"
        },
        "artifactUri": {
          "type": "string",
          "description": "URI of the artifact.",
          "example": "docker.io/project/image:tag"
        },
        "externalId": {
          "type": "string",
          "description": "External identifier for the artifact.",
          "example": "12345"
        },
        "artifactory": {
          "type": "string",
          "description": "Name of the artifactory.",
          "example": "DOCKER"
        },
        "artifactRegisterType": {
          "type": "string",
          "description": "Type of artifact registration.",
          "example": "ENVIRONMENT",
          "enum": [
            "GIT_REF",
            "ENVIRONMENT",
            "RELEASE_STREAM"
          ]
        },
        "artifactRegisterValue": {
          "type": "string",
          "description": "Artifact register value dependent on register type.",
          "example": "release-1.0"
        },
        "repositoryName": {
          "type": "string",
          "description": "Repository name in the artifactory.",
          "example": "repo-name"
        },
        "tag": {
          "type": "string",
          "description": "The tag of the artifact.",
          "example": "v1.0"
        }
      },
      "description": "Request details for registering a SaaS artifact."
    },
    "PushCredentialsRequest": {
      "required": [
        "applicationName",
        "artifactory",
        "blueprintName"
      ],
      "type": "object",
      "properties": {
        "blueprintName": {
          "type": "string",
          "description": "Blueprint name for which credentials are requested.",
          "example": "blueprint-1"
        },
        "artifactory": {
          "type": "string",
          "description": "Name of the artifactory.",
          "example": "DOCKER"
        },
        "applicationName": {
          "type": "string",
          "description": "Application name associated with the request.",
          "example": "my-app"
        }
      },
      "description": "Request details for generating push credentials for an artifact."
    },
    "PushCredentialsResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "artifactoryUri": {
          "type": "string"
        },
        "repositoryUri": {
          "type": "string"
        }
      }
    },
    "CustomerOnboardRequest": {
      "required": [
        "customerName",
        "externalId",
        "region",
        "releaseStream",
        "roleARN"
      ],
      "type": "object",
      "properties": {
        "customerName": {
          "maxLength": 50,
          "minLength": 3,
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "roleARN": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "azs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "releaseStream": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        }
      }
    },
    "ArtifactRequest": {
      "required": [
        "applicationName",
        "artifactUri"
      ],
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "registeredFor": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "RELEASE_STREAM"
          ]
        },
        "promoted": {
          "type": "boolean"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ruleVersionId": {
          "type": "string"
        },
        "ruleId": {
          "type": "string"
        },
        "ruleName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        }
      }
    },
    "ArtifactByReleaseStreamRequest": {
      "required": [
        "applicationName",
        "artifactUri",
        "releaseStream"
      ],
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ArtifactByEnvironmentRequest": {
      "required": [
        "applicationName",
        "artifactUri",
        "clusterName",
        "stackName"
      ],
      "type": "object",
      "properties": {
        "externalId": {
          "type": "string"
        },
        "applicationName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ECRAuthorizationData": {
      "type": "object",
      "properties": {
        "authorizationToken": {
          "type": "string"
        },
        "proxyEndpoint": {
          "type": "string"
        }
      }
    },
    "BulkWorkflowAttachRequest": {
      "type": "object",
      "properties": {
        "workflowId": {
          "type": "string"
        },
        "artifactCiIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "BasicDockerArtifactory": {
      "required": [
        "name",
        "password"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "HARBOR",
            "OTHERS"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "stacksAssociated": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "writeOnly": true
        },
        "artifactoryProject": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "ArtifactoryMirror": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "sourceArtifactory": {
          "type": "string"
        },
        "mirrorArtifactory": {
          "type": "string"
        }
      }
    },
    "ArtifactoryLinkingRequest": {
      "type": "object",
      "properties": {
        "webhook": {
          "$ref": "#/definitions/ArtifactoryOneTimeWebhook"
        },
        "artifactoryName": {
          "type": "string"
        }
      }
    },
    "ArtifactoryOneTimeWebhook": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "AZURE",
            "GCP",
            "AWS",
            "KUBERNETES",
            "ECR",
            "OTHER_DOCKER_REGISTRY",
            "GITHUB",
            "GITLAB",
            "BITBUCKET"
          ]
        },
        "status": {
          "type": "string",
          "readOnly": true,
          "enum": [
            "WAITING",
            "SUCCESS",
            "FAILED",
            "EXPIRED"
          ]
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "deleteAt": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "errorMessage": {
          "type": "string"
        },
        "stackAssociated": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestRuleResponse": {
      "type": "object",
      "properties": {
        "routeTo": {
          "type": "string"
        }
      }
    },
    "ActionParameterValueDto": {
      "required": [
        "type"
      ],
      "type": "object",
      "properties": {
        "arrayVal": {
          "type": "array",
          "description": "Array value for array type parameters. Only used when type is 'array'",
          "items": {
            "type": "string",
            "description": "Array value for array type parameters. Only used when type is 'array'"
          }
        },
        "stringVal": {
          "type": "string",
          "description": "String value for string type parameters. Only used when type is 'string'",
          "example": "my-app:latest"
        },
        "type": {
          "type": "string",
          "description": "Type of the parameter value",
          "example": "string",
          "enum": [
            "string",
            "array"
          ]
        }
      },
      "description": "Represents the value of an action parameter"
    },
    "ActionRunRequestDto": {
      "required": [
        "actionName"
      ],
      "type": "object",
      "properties": {
        "actionName": {
          "type": "string",
          "description": "Name of the action to run",
          "example": "build-action"
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ActionParameterValueDto"
          },
          "description": "Parameters to pass to the action"
        }
      },
      "description": "Request for running a single action with parameters"
    },
    "BulkActionRunRequestDto": {
      "required": [
        "actions"
      ],
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "description": "List of actions to run with their individual parameters",
          "items": {
            "$ref": "#/definitions/ActionRunRequestDto"
          }
        }
      },
      "description": "Request for running multiple actions with individual parameters"
    },
    "ActionRunDto": {
      "required": [
        "actionName",
        "name",
        "status"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the action run",
          "example": "build-action-run-xyz123"
        },
        "actionName": {
          "type": "string",
          "description": "Name of the action being executed",
          "example": "build-action"
        },
        "actionDisplayName": {
          "type": "string",
          "description": "Display name of the action being executed",
          "example": "Build Application"
        },
        "status": {
          "type": "string",
          "description": "Represents the possible statuses of an action run",
          "enum": [
            "STARTED",
            "PENDING",
            "RUNNING",
            "SUCCEEDED",
            "FAILED",
            "CANCELLED",
            "CANCELLING",
            "NON_PERMANENT_ERROR"
          ]
        },
        "reason": {
          "type": "string",
          "description": "Reason for the current status",
          "example": "TaskRunTimeout"
        },
        "message": {
          "type": "string",
          "description": "Detailed message about the current status",
          "example": "Task run exceeded timeout of 60 minutes"
        },
        "startTime": {
          "type": "string",
          "description": "Timestamp when the action run started",
          "format": "date-time"
        },
        "completionTime": {
          "type": "string",
          "description": "Timestamp when the action run completed",
          "format": "date-time"
        },
        "steps": {
          "type": "array",
          "description": "List of steps executed in this action run",
          "items": {
            "$ref": "#/definitions/ActionStepDto"
          }
        },
        "params": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ActionParameterValueDto"
          },
          "description": "Parameters passed to this action run, keyed by parameter name"
        },
        "clusterId": {
          "type": "string",
          "description": "Cluster ID associated with this action",
          "example": "prod-cluster-1"
        },
        "resourceType": {
          "type": "string",
          "description": "Resource type associated with this action",
          "example": "deployment"
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name associated with this action",
          "example": "web-app"
        },
        "triggeredBy": {
          "type": "string",
          "description": "User who triggered this action run",
          "example": "user@example.com"
        },
        "hasUpload": {
          "type": "boolean",
          "description": "Indicates if this action run has an associated upload",
          "example": false
        }
      },
      "description": "Represents an action run instance with its execution details"
    },
    "ActionStepDto": {
      "required": [
        "name",
        "status"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the step",
          "example": "build-step"
        },
        "status": {
          "type": "string",
          "description": "Represents the status of a step within an action run",
          "example": "COMPLETED",
          "enum": [
            "WAITING",
            "RUNNING",
            "COMPLETED",
            "ERROR",
            "PENDING"
          ]
        },
        "containerName": {
          "type": "string",
          "description": "Name of the container running this step",
          "example": "step-build"
        },
        "podName": {
          "type": "string",
          "description": "Name of the pod running this step",
          "example": "build-action-run-xyz123-pod-abc456"
        },
        "startTime": {
          "type": "string",
          "description": "Timestamp when the step started",
          "format": "date-time"
        },
        "finishedAt": {
          "type": "string",
          "description": "Timestamp when the step finished",
          "format": "date-time"
        },
        "terminationReason": {
          "type": "string",
          "description": "Reason for termination if the step did not complete successfully",
          "example": "Error"
        },
        "exitCode": {
          "type": "integer",
          "description": "Exit code of the step",
          "format": "int32",
          "example": 0
        }
      },
      "description": "Represents a single step within an action run"
    },
    "VCSLinkingRequest": {
      "type": "object",
      "properties": {
        "webhook": {
          "$ref": "#/definitions/OneTimeWebhook"
        },
        "accountName": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        }
      }
    },
    "VCSLinkingResponse": {
      "type": "object",
      "properties": {
        "webhook": {
          "$ref": "#/definitions/OneTimeWebhook"
        },
        "redirectUrl": {
          "type": "string"
        }
      }
    },
    "CloudLinkingRequest": {
      "type": "object",
      "properties": {
        "webhook": {
          "$ref": "#/definitions/OneTimeWebhook"
        },
        "accountName": {
          "type": "string"
        }
      }
    },
    "VCSOrganizationsRequest": {
      "type": "object",
      "properties": {
        "vcsType": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB"
          ]
        },
        "accessToken": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "enterpriseHostName": {
          "type": "string"
        }
      }
    },
    "BranchUpdateRequest": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string"
        }
      }
    },
    "VCSAccountUpdateRequest": {
      "type": "object",
      "properties": {
        "organisationName": {
          "type": "string"
        },
        "projectKey": {
          "type": "string"
        }
      }
    },
    "ThemeFileResponse": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string"
        }
      }
    },
    "ModuleSchemaResponseDTO": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Schema type",
          "example": "object"
        },
        "required": {
          "type": "array",
          "description": "Required fields",
          "items": {
            "type": "string",
            "description": "Required fields"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Schema properties"
          },
          "description": "Schema properties"
        },
        "additionalProperties": {
          "type": "boolean",
          "description": "Allow additional properties",
          "example": true
        },
        "$schema": {
          "type": "string",
          "description": "JSON Schema URL"
        }
      },
      "description": "Response containing complete JSON schema for module configuration"
    },
    "VersionVersioned": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/Versioned"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "archiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceKey": {
          "type": "string"
        },
        "sequence": {
          "type": "integer",
          "format": "int64",
          "writeOnly": true
        }
      }
    },
    "Versioned": {
      "type": "object",
      "properties": {
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "PageVersionVersioned": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "first": {
          "type": "boolean"
        },
        "pageable": {
          "$ref": "#/definitions/PageableObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VersionVersioned"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/SortObject"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "PageableObject": {
      "type": "object",
      "properties": {
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "sort": {
          "$ref": "#/definitions/SortObject"
        },
        "paged": {
          "type": "boolean"
        },
        "unpaged": {
          "type": "boolean"
        }
      }
    },
    "SortObject": {
      "type": "object",
      "properties": {
        "sorted": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      }
    },
    "DeletedEntitySoftDelete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/SoftDelete"
        },
        "entityType": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        }
      }
    },
    "SoftDelete": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "Version": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "versioningKey": {
          "type": "string"
        },
        "entity": {
          "$ref": "#/definitions/Versioned"
        },
        "version": {
          "type": "integer",
          "format": "int64"
        },
        "archiveDate": {
          "type": "string",
          "format": "date-time"
        },
        "sequenceKey": {
          "type": "string"
        },
        "sequence": {
          "type": "integer",
          "format": "int64",
          "writeOnly": true
        }
      }
    },
    "EnvInfo": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "project": {
          "type": "string"
        }
      }
    },
    "EnvSpecificAccess": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "envName": {
          "type": "string"
        },
        "project": {
          "type": "string"
        },
        "roleInfo": {
          "$ref": "#/definitions/RoleInfo"
        }
      }
    },
    "ExpandedUser": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "baseRole": {
          "$ref": "#/definitions/RoleInfo"
        },
        "picture": {
          "type": "string"
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "accessibleProjects": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessibleEnvironments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvInfo"
          }
        },
        "accessibleAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "envSpecificRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSpecificAccess"
          }
        },
        "associatedResourceGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "userRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleInfo"
          }
        }
      }
    },
    "IdName": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "RoleInfo": {
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "label": {
          "type": "string"
        }
      }
    },
    "AccessAnalyzerResponse": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccessRoleDetails"
          }
        }
      }
    },
    "AccessRoleDetails": {
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string"
        },
        "roleLabel": {
          "type": "string"
        },
        "roleType": {
          "type": "string"
        },
        "environment": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        }
      }
    },
    "ExpandedUserGroup": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string"
        },
        "groupName": {
          "type": "string"
        },
        "baseRole": {
          "$ref": "#/definitions/RoleInfo"
        },
        "accessibleProjects": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "accessibleEnvironments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvInfo"
          }
        },
        "accessibleAccounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        },
        "envSpecificRoles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvSpecificAccess"
          }
        },
        "associatedResourceGroups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IdName"
          }
        }
      }
    },
    "PendingMigrationDetails": {
      "type": "object",
      "properties": {
        "pendingMigrations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MigrationScriptMetadata"
          }
        },
        "blockReleases": {
          "type": "boolean"
        },
        "migrationStatusAvailable": {
          "type": "boolean"
        }
      }
    },
    "EnvironmentVariableValue": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the variable/secret",
          "example": "actual_password"
        },
        "status": {
          "type": "string",
          "description": "Status indicating if value is overridden, default, or not set",
          "enum": [
            "NOT_SET",
            "OVERRIDDEN",
            "NO_ACCESS"
          ]
        },
        "clusterId": {
          "type": "string",
          "description": "Environment ID",
          "example": "prod-env-123"
        },
        "environmentName": {
          "type": "string",
          "description": "Environment name",
          "example": "production"
        }
      },
      "description": "Variable/secret value in a specific environment"
    },
    "VariableEnvironmentResponse": {
      "type": "object",
      "properties": {
        "variableName": {
          "type": "string",
          "description": "Name of the variable/secret",
          "example": "database_password"
        },
        "isSecret": {
          "type": "boolean",
          "description": "Whether this is a secret or regular variable",
          "example": true
        },
        "description": {
          "type": "string",
          "description": "Description of the variable/secret",
          "example": "Database connection password"
        },
        "global": {
          "type": "boolean",
          "description": "Whether this is a global variable",
          "example": false
        },
        "stackDefault": {
          "type": "string",
          "description": "Default value defined at stack level",
          "example": "default_password"
        },
        "environmentValues": {
          "type": "array",
          "description": "Values across different environments",
          "items": {
            "$ref": "#/definitions/EnvironmentVariableValue"
          }
        }
      },
      "description": "Variable/secret values across environments"
    },
    "ClusterOverrideResponse": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "overrideObject": {
          "$ref": "#/definitions/OverrideObject"
        }
      }
    },
    "Artifactory": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "uri": {
          "type": "string"
        },
        "artifactoryType": {
          "type": "string",
          "enum": [
            "ECR",
            "AZURE_CONTAINER_REGISTRY",
            "GOOGLE_ARTIFACT_REGISTRY",
            "GOOGLE_CONTAINER_REGISTRY",
            "NEXUS",
            "DOCKER_HUB",
            "JFROG",
            "HARBOR",
            "OTHERS"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "stacksAssociated": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "systemDefined": {
          "type": "boolean"
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "DeploymentContext": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/Artifact"
            }
          }
        },
        "artifactoryDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifactory"
          }
        },
        "overrides": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OverrideObject"
          }
        },
        "snapshots": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/SnapshotInfo"
            }
          }
        },
        "extraEnv": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "providedResources": {
          "$ref": "#/definitions/ProvidedResources"
        },
        "settings": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "templateInputs": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/StackTemplateInput"
            }
          }
        },
        "stackSourceVersion": {
          "type": "string"
        },
        "tfVersion": {
          "$ref": "#/definitions/TfVersion"
        },
        "resourceMetadata": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/ResourceMetadata"
            }
          }
        },
        "providedSecretsId": {
          "type": "string"
        },
        "canSkipApproval": {
          "type": "boolean"
        },
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MatchedResourceDTO"
          }
        },
        "modules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ModuleDTO"
          }
        },
        "maintenanceWindow": {
          "$ref": "#/definitions/MaintenanceWindowDTO"
        },
        "secretsContext": {
          "$ref": "#/definitions/SecretsContextDTO"
        },
        "projectType": {
          "$ref": "#/definitions/ProjectType"
        },
        "parallelRelease": {
          "type": "boolean"
        }
      }
    },
    "MatchedResourceDTO": {
      "type": "object",
      "properties": {
        "moduleRef": {
          "type": "string"
        },
        "matched": {
          "type": "boolean"
        }
      }
    },
    "ModuleDTO": {
      "type": "object",
      "properties": {
        "facetsYaml": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "tfModulePath": {
          "$ref": "#/definitions/TFModulePath"
        }
      }
    },
    "ProjectType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "allowedClouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "description": {
          "type": "string"
        },
        "templateGitDetails": {
          "$ref": "#/definitions/TemplateGitDetails"
        },
        "mappedResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProjectTypeMappedResource"
          }
        },
        "baseProjectName": {
          "type": "string"
        },
        "iacTool": {
          "type": "string",
          "enum": [
            "TERRAFORM",
            "OPENTOFU"
          ]
        },
        "iacToolVersion": {
          "type": "string"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "enableNoCloudEnvironment": {
          "type": "boolean"
        },
        "legacy": {
          "type": "boolean"
        },
        "includeToolingProvider": {
          "type": "boolean"
        },
        "includeCpK8sProvider": {
          "type": "boolean"
        }
      }
    },
    "ResourceMetadata": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "commitId": {
          "type": "string"
        },
        "overrideVersion": {
          "type": "integer",
          "format": "int64"
        },
        "overrideVersionId": {
          "type": "string"
        },
        "artifactUrl": {
          "type": "string"
        }
      }
    },
    "SecretsContextDTO": {
      "type": "object",
      "properties": {
        "providedSecretsId": {
          "type": "string"
        },
        "cloudAccountSecretsId": {
          "type": "string"
        },
        "cpCloud": {
          "type": "string"
        },
        "gcpSecretManagerEnabled": {
          "type": "boolean"
        },
        "secretManagerRegion": {
          "type": "string"
        },
        "gcpSecretManagerProjectId": {
          "type": "string"
        },
        "gcpSecretManagerMode": {
          "type": "string",
          "enum": [
            "AUTOMATIC_REPLICATION",
            "USER_MANAGED_REPLICATION",
            "REGIONAL"
          ]
        }
      }
    },
    "SnapshotInfo": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "cloudSpecificId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "instanceName": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "date-time"
        },
        "endTime": {
          "type": "string",
          "format": "date-time"
        },
        "storageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pinned": {
          "type": "boolean"
        }
      }
    },
    "ClusterLite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      }
    },
    "ClusterOverview": {
      "type": "object",
      "properties": {
        "cluster": {
          "$ref": "#/definitions/AbstractCluster"
        },
        "timeToNextRelease": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "lastRelease": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "id": {
          "type": "string"
        },
        "baseCluster": {
          "$ref": "#/definitions/ClusterLite"
        }
      }
    },
    "ClusterMetadata": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "clusterName": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "stackName": {
          "type": "string"
        }
      }
    },
    "StackTemplate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "gitUrl": {
          "type": "string"
        },
        "relativePath": {
          "type": "string"
        },
        "monoRepo": {
          "type": "boolean"
        }
      }
    },
    "ClusterResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "branch": {
          "type": "string"
        },
        "cloud": {
          "type": "string",
          "enum": [
            "AWS",
            "AZURE",
            "LOCAL",
            "GCP",
            "KUBERNETES",
            "NO_CLOUD"
          ]
        },
        "tz": {
          "type": "string"
        },
        "releaseStream": {
          "type": "string"
        },
        "cdPipelineParent": {
          "type": "string"
        },
        "requireSignOff": {
          "type": "boolean"
        },
        "autoSignOffSchedule": {
          "type": "string"
        },
        "enableAutoSignOff": {
          "type": "boolean"
        },
        "clusterCode": {
          "type": "string"
        },
        "cloudAccountId": {
          "type": "string"
        },
        "cloudAccountName": {
          "type": "string"
        },
        "isEphemeral": {
          "type": "boolean"
        },
        "pauseReleases": {
          "type": "boolean"
        },
        "namespace": {
          "type": "string"
        },
        "baseCluster": {
          "$ref": "#/definitions/ClusterLite"
        },
        "dependentClusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterLite"
          }
        },
        "clusterState": {
          "type": "string",
          "enum": [
            "STOPPED",
            "RUNNING",
            "LAUNCHING",
            "DESTROYING",
            "LAUNCH_FAILED",
            "DESTROY_FAILED",
            "UNKNOWN",
            "SCALE_DOWN",
            "SCALING_DOWN",
            "SCALE_DOWN_FAILED",
            "SCALING_UP",
            "SCALE_UP_FAILED"
          ]
        },
        "configured": {
          "type": "boolean"
        },
        "k8sRequestsToLimitsRatio": {
          "type": "number",
          "format": "double"
        },
        "dynamicLaunch": {
          "type": "boolean"
        },
        "hasK8sCredentials": {
          "type": "boolean"
        },
        "showKubedebugger": {
          "type": "boolean"
        }
      }
    },
    "PageAbstractCluster": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "first": {
          "type": "boolean"
        },
        "pageable": {
          "$ref": "#/definitions/PageableObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AbstractCluster"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/SortObject"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "Setting": {
      "required": [
        "defaultValue",
        "entity",
        "name",
        "settingType",
        "supportedForClouds"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "allowedValues": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultValue": {
          "type": "object"
        },
        "supportedForClouds": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "AWS",
              "AZURE",
              "LOCAL",
              "GCP",
              "KUBERNETES",
              "NO_CLOUD"
            ]
          }
        },
        "description": {
          "type": "string"
        },
        "entity": {
          "type": "string",
          "enum": [
            "CLUSTER",
            "BLUE_PRINT",
            "TEMPLATE_INPUT",
            "CONTROL_PLANE",
            "IAC",
            "ARTIFACT_CI",
            "USER_GROUP",
            "ACCOUNT",
            "ARTIFACTORY"
          ]
        },
        "settingType": {
          "type": "string",
          "enum": [
            "NUMBER",
            "STRING",
            "ENUM",
            "BOOLEAN",
            "FLOAT"
          ]
        },
        "min": {
          "type": "integer",
          "format": "int32"
        },
        "max": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReleasePreviewResponse": {
      "type": "object",
      "properties": {
        "projectName": {
          "type": "string"
        },
        "environmentName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "changedResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceStatus"
          }
        }
      }
    },
    "ReleaseStreamResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "mappedClusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "prod": {
          "type": "boolean"
        },
        "builtIn": {
          "type": "boolean"
        }
      }
    },
    "PolicyTemplateDTO": {
      "type": "object",
      "properties": {
        "templateId": {
          "type": "string"
        },
        "templateName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "flavours": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "resourceTypes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "inputData": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        }
      }
    },
    "NotificationTagsForTypeResult": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "enum": [
            "CLUSTER_NAME",
            "CLUSTER_TYPE",
            "QASUITE_RESULT",
            "DR_ACTION",
            "DR_STATUS",
            "STACK_NAME",
            "SEVERITY",
            "ALERT_NAME",
            "DEPLOYMENT_STATUS",
            "APPLICATION_NAME",
            "SEND_RESOLVED",
            "RELEASE_TYPE"
          ]
        },
        "label": {
          "type": "string"
        },
        "tooltip": {
          "type": "string"
        }
      }
    },
    "NotificationTypeResponse": {
      "type": "object",
      "properties": {
        "supportedTags": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "CLUSTER_NAME",
              "CLUSTER_TYPE",
              "QASUITE_RESULT",
              "DR_ACTION",
              "DR_STATUS",
              "STACK_NAME",
              "SEVERITY",
              "ALERT_NAME",
              "DEPLOYMENT_STATUS",
              "APPLICATION_NAME",
              "SEND_RESOLVED",
              "RELEASE_TYPE"
            ]
          }
        },
        "key": {
          "type": "string"
        },
        "notificationName": {
          "type": "string"
        },
        "notificationType": {
          "type": "string",
          "enum": [
            "DEPLOYMENT_STATUS_UPDATE",
            "APP_DEPLOYMENT",
            "QASUITE_SANITY",
            "DR_RESULT",
            "STACK_SIGNOFF",
            "ALERT",
            "TEST",
            "APPLICATION_DEPLOYMENT_COMPLETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_LAUNCH",
            "ENVIRONMENT_DESTROY",
            "ENVIRONMENT_CONFIGURE"
          ]
        }
      }
    },
    "NotificationTagPayload": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "notificationTag": {
          "type": "string",
          "enum": [
            "CLUSTER_NAME",
            "CLUSTER_TYPE",
            "QASUITE_RESULT",
            "DR_ACTION",
            "DR_STATUS",
            "STACK_NAME",
            "SEVERITY",
            "ALERT_NAME",
            "DEPLOYMENT_STATUS",
            "APPLICATION_NAME",
            "SEND_RESOLVED",
            "RELEASE_TYPE"
          ]
        }
      }
    },
    "ChannelTypePayload": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "SLACK",
            "CAPILLARY_VALIDATOR",
            "WEBHOOK",
            "PAGER_DUTY",
            "ZEN_DUTY",
            "EMAIL",
            "MS_TEAMS",
            "MS_TEAMS_WORKFLOW"
          ]
        }
      }
    },
    "TFModuleListResponseDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "intentDetails": {
          "$ref": "#/definitions/IntentResponseDTO"
        },
        "flavor": {
          "type": "string",
          "description": "Flavor of the TF Module",
          "example": "small"
        },
        "version": {
          "type": "string",
          "description": "Version of the TF Module",
          "example": "1.0.0"
        },
        "clouds": {
          "uniqueItems": true,
          "type": "array",
          "description": "Supported cloud providers",
          "example": [
            "aws",
            "azure"
          ],
          "items": {
            "type": "string",
            "description": "Supported cloud providers",
            "example": "[\"aws\",\"azure\"]"
          }
        },
        "source": {
          "type": "string",
          "description": "Source of the TF Module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "stage": {
          "type": "string",
          "description": "Stage of the TF Module in its lifecycle",
          "example": "PUBLISHED",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "previewModuleId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type of the TF Module",
          "example": "SIMPLE",
          "enum": [
            "SIMPLE",
            "ADD_ON"
          ]
        },
        "tags": {
          "uniqueItems": true,
          "type": "array",
          "description": "Tags associated with the module",
          "example": [
            "tag1",
            "tag2"
          ],
          "items": {
            "type": "string",
            "description": "Tags associated with the module",
            "example": "[\"tag1\",\"tag2\"]"
          }
        },
        "gitUrl": {
          "type": "string"
        },
        "gitRef": {
          "type": "string"
        },
        "previewGitUrl": {
          "type": "string"
        },
        "previewGitRef": {
          "type": "string"
        },
        "iacTool": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "TERRAFORM",
              "OPENTOFU"
            ]
          }
        },
        "featureBranch": {
          "type": "boolean"
        }
      }
    },
    "TFModuleLiteDTO": {
      "type": "object",
      "properties": {
        "intent": {
          "type": "string",
          "description": "Intent of the TF Module",
          "example": "deploy"
        },
        "intentType": {
          "type": "string"
        },
        "flavor": {
          "type": "string",
          "description": "Flavor of the TF Module",
          "example": "small"
        },
        "version": {
          "type": "string",
          "description": "Version of the TF Module",
          "example": "1.0.0"
        },
        "clouds": {
          "uniqueItems": true,
          "type": "array",
          "description": "Supported cloud providers",
          "example": [
            "aws",
            "azure"
          ],
          "items": {
            "type": "string",
            "description": "Supported cloud providers",
            "example": "[\"aws\",\"azure\"]"
          }
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Input parameters for the module"
        },
        "source": {
          "type": "string",
          "description": "Source of the TF Module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "tags": {
          "uniqueItems": true,
          "type": "array",
          "description": "Tags associated with the module",
          "example": [
            "tag1",
            "tag2"
          ],
          "items": {
            "type": "string",
            "description": "Tags associated with the module",
            "example": "[\"tag1\",\"tag2\"]"
          }
        },
        "allowedTestProjects": {
          "type": "array",
          "description": "List of test projects where this module will be available",
          "items": {
            "type": "string",
            "description": "List of test projects where this module will be available"
          }
        },
        "id": {
          "type": "string"
        },
        "stage": {
          "type": "string",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "iacTool": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "TERRAFORM",
              "OPENTOFU"
            ]
          }
        },
        "nameLengthLimit": {
          "type": "integer",
          "description": "Maximum allowed length for resource names using this module",
          "format": "int32",
          "example": 40
        }
      },
      "description": "Lightweight DTO for TF Modules providing minimal details"
    },
    "OtherVersion": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "TFModuleResponseDTO": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "intentDetails": {
          "$ref": "#/definitions/IntentResponseDTO"
        },
        "intent": {
          "type": "string",
          "description": "Intent of the TF Module",
          "example": "compute"
        },
        "flavor": {
          "type": "string",
          "description": "Flavor of the TF Module",
          "example": "small"
        },
        "aliasFlavors": {
          "uniqueItems": true,
          "type": "array",
          "description": "Alias flavors for the module",
          "example": [
            "medium",
            "extra-large"
          ],
          "items": {
            "type": "string",
            "description": "Alias flavors for the module",
            "example": "[\"medium\",\"extra-large\"]"
          }
        },
        "version": {
          "type": "string",
          "description": "Version of the TF Module",
          "example": "1.0.0"
        },
        "clouds": {
          "uniqueItems": true,
          "type": "array",
          "description": "Supported cloud providers",
          "example": [
            "aws",
            "azure"
          ],
          "items": {
            "type": "string",
            "description": "Supported cloud providers",
            "example": "[\"aws\",\"azure\"]"
          }
        },
        "source": {
          "type": "string",
          "description": "Source of the TF Module",
          "enum": [
            "BUILT_IN",
            "CUSTOM"
          ]
        },
        "stage": {
          "type": "string",
          "description": "Stage of the TF Module in its lifecycle",
          "example": "PUBLISHED",
          "enum": [
            "PREVIEW",
            "PUBLISHED"
          ]
        },
        "previewModuleId": {
          "type": "string"
        },
        "publishedModuleId": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type of the TF Module",
          "example": "SIMPLE",
          "enum": [
            "SIMPLE",
            "ADD_ON"
          ]
        },
        "gitUrl": {
          "type": "string",
          "description": "URL of the GIT repository",
          "example": "https://gitlab.com/repo.git"
        },
        "gitRef": {
          "type": "string",
          "description": "Reference to a specific GIT branch or commit",
          "example": "develop"
        },
        "sampleJson": {
          "type": "string",
          "description": "Sample JSON configuration",
          "example": "{}"
        },
        "spec": {
          "type": "string",
          "description": "Specification details of the module"
        },
        "metadata": {
          "type": "string",
          "description": "Metadata of the module"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          },
          "description": "Input parameters for this module"
        },
        "outputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IntentOutput"
          }
        },
        "versioningKey": {
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Module description"
        },
        "readmeMd": {
          "type": "string",
          "description": "Readme content in markdown format"
        },
        "otherVersions": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherVersion"
          }
        },
        "latestVersion": {
          "$ref": "#/definitions/OtherVersion"
        },
        "criticalResource": {
          "type": "boolean"
        },
        "kubernetes": {
          "type": "boolean"
        },
        "tags": {
          "uniqueItems": true,
          "type": "array",
          "description": "Tags associated with the module",
          "example": [
            "tag1",
            "tag2"
          ],
          "items": {
            "type": "string",
            "description": "Tags associated with the module",
            "example": "[\"tag1\",\"tag2\"]"
          }
        },
        "allowedTestProjects": {
          "type": "array",
          "description": "List of test projects where this module will be available. If absent, it is available globally.",
          "items": {
            "type": "string",
            "description": "List of test projects where this module will be available. If absent, it is available globally."
          }
        },
        "iacTool": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "TERRAFORM",
              "OPENTOFU"
            ]
          }
        },
        "nameLengthLimit": {
          "type": "integer",
          "description": "Maximum allowed length for resource names using this module",
          "format": "int32",
          "example": 40
        },
        "canDownload": {
          "type": "boolean"
        },
        "featureBranch": {
          "type": "boolean"
        }
      }
    },
    "ModuleUsageDTO": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      }
    },
    "ListResourcesResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/TFModuleLiteListDTO"
            },
            "description": "Grouped resources by type and name"
          },
          "description": "Grouped resources by type and name"
        },
        "templates": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "description": "Templates associated with the resources",
            "items": {
              "$ref": "#/definitions/TemplateResponseDTO"
            }
          },
          "description": "Templates associated with the resources"
        }
      },
      "description": "Response entity containing grouped resources and templates"
    },
    "TFModuleLiteListDTO": {
      "type": "object",
      "properties": {
        "modules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TFModuleLiteDTO"
          }
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "iconUrl": {
          "type": "string"
        }
      },
      "description": "Grouped resources by type and name"
    },
    "TemplateResponseDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "group": {
          "type": "string"
        },
        "clouds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "MULTI_INSTANCE",
            "SINGLE_INSTANCE",
            "AUTO_INJECT"
          ]
        },
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "description": "Templates associated with the resources"
    },
    "HistoryMetadata": {
      "type": "object",
      "properties": {
        "versions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Version"
          }
        },
        "liveVersionId": {
          "type": "string"
        },
        "previewVersionId": {
          "type": "string"
        }
      }
    },
    "ResourceHistory": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "alpha": {
          "type": "boolean"
        },
        "resourceStatus": {
          "type": "string",
          "enum": [
            "RUNNING",
            "STOPPED"
          ]
        },
        "disabled": {
          "type": "boolean"
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "blueprintVersion": {
          "$ref": "#/definitions/HistoryMetadata"
        },
        "overrideVersion": {
          "$ref": "#/definitions/HistoryMetadata"
        },
        "artifactVersion": {
          "$ref": "#/definitions/HistoryMetadata"
        }
      }
    },
    "ReleaseButtonStatus": {
      "type": "object",
      "properties": {
        "disabled": {
          "type": "boolean"
        },
        "nbTooltip": {
          "type": "string"
        }
      }
    },
    "ResourceHistoryOverview": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceStatus": {
          "type": "string",
          "enum": [
            "RUNNING",
            "STOPPED"
          ]
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "blueprintVersion": {
          "$ref": "#/definitions/ResourceStatusMetadata"
        },
        "overrideVersion": {
          "$ref": "#/definitions/ResourceStatusMetadata"
        },
        "artifactVersion": {
          "$ref": "#/definitions/ResourceStatusMetadata"
        },
        "disabled": {
          "type": "boolean"
        },
        "releaseButtonStatus": {
          "$ref": "#/definitions/ReleaseButtonStatus"
        },
        "overridden": {
          "type": "boolean"
        }
      }
    },
    "ResourceStatusMetadata": {
      "type": "object",
      "properties": {
        "liveVersion": {
          "type": "string"
        },
        "previewVersion": {
          "type": "string"
        },
        "pendingVersion": {
          "type": "string"
        }
      }
    },
    "OutputReference": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "outputName": {
          "type": "string"
        },
        "outputTitle": {
          "type": "string"
        },
        "outputDescription": {
          "type": "string"
        }
      }
    },
    "AllRegionsAndAZ": {
      "type": "object",
      "properties": {
        "cloud": {
          "type": "string"
        },
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegionAndZone"
          }
        }
      }
    },
    "RegionAndZone": {
      "type": "object",
      "properties": {
        "region": {
          "type": "string"
        },
        "availabilityZones": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PortInfo": {
      "type": "object",
      "properties": {
        "port": {
          "type": "string"
        }
      }
    },
    "ServiceOverview": {
      "type": "object",
      "properties": {
        "ports": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortInfo"
          }
        }
      }
    },
    "ClusterResourcesResponse": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterResourcesResponse.FacetsResource"
          }
        }
      }
    },
    "ClusterResourcesResponse.FacetsResource": {
      "type": "object",
      "properties": {
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        }
      }
    },
    "CommitLog": {
      "type": "object",
      "properties": {
        "commitId": {
          "type": "string"
        },
        "authorEmail": {
          "type": "string"
        },
        "authorName": {
          "type": "string"
        },
        "commitMessage": {
          "type": "string"
        },
        "commitDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "StackGitLog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "directory": {
          "type": "string"
        },
        "filename": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "commitLog": {
          "$ref": "#/definitions/CommitLog"
        },
        "changeLog": {
          "type": "string",
          "writeOnly": true
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "Workflow": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Commit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "GithubUser": {
      "type": "object",
      "properties": {
        "login": {
          "type": "string"
        },
        "htmlUrl": {
          "type": "string"
        }
      }
    },
    "ListWorkflowRunsResponse": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "workflowRuns": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WorkflowRun"
          }
        }
      }
    },
    "WorkflowRun": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "displayTitle": {
          "type": "string"
        },
        "htmlUrl": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "conclusion": {
          "type": "string"
        },
        "workflowId": {
          "type": "integer",
          "format": "int64"
        },
        "runNumber": {
          "type": "integer",
          "format": "int64"
        },
        "actor": {
          "$ref": "#/definitions/GithubUser"
        },
        "triggeringActor": {
          "$ref": "#/definitions/GithubUser"
        },
        "headCommit": {
          "$ref": "#/definitions/Commit"
        },
        "headBranch": {
          "type": "string"
        },
        "runStartedAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GithubLabel": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "color": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ListPullRequestResponse": {
      "type": "object",
      "properties": {
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "pullRequests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PullRequestResponse"
          }
        }
      }
    },
    "PullRequestResponse": {
      "type": "object",
      "properties": {
        "htmlUrl": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "number": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/GithubUser"
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GithubLabel"
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "mergedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "AddOnDTO": {
      "type": "object",
      "properties": {
        "intent": {
          "type": "string"
        },
        "flavor": {
          "type": "string"
        },
        "inputs": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Input"
          }
        },
        "added": {
          "type": "boolean"
        },
        "resourceName": {
          "type": "string"
        }
      }
    },
    "AutocompleteResponse": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "outProperties": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/JsonNode"
          }
        }
      }
    },
    "AutocompleteResponseV2": {
      "type": "object",
      "properties": {
        "resourceOutputTrees": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/JsonNode"
            }
          }
        }
      }
    },
    "ModuleInputDTO": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        },
        "compatibleResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/InputOutputResource"
          }
        }
      }
    },
    "BranchDTO": {
      "type": "object",
      "properties": {
        "branches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "defaultBranch": {
          "type": "string"
        }
      }
    },
    "ClusterCostDTO": {
      "type": "object",
      "properties": {
        "clusterName": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "total": {
          "type": "number",
          "format": "double"
        },
        "costs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CostDTO"
          }
        }
      }
    },
    "CostDTO": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "date": {
          "type": "string",
          "format": "date-time"
        },
        "serviceCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCostDTO"
          }
        }
      }
    },
    "DailyCloudCostDTO": {
      "type": "object",
      "properties": {
        "stackName": {
          "type": "string"
        },
        "unit": {
          "type": "string"
        },
        "total": {
          "type": "number",
          "format": "double"
        },
        "previousPeriodTotal": {
          "type": "number",
          "format": "double"
        },
        "serviceCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCostDTO"
          }
        },
        "dailyCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClusterCostDTO"
          }
        },
        "lastSync": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ServiceCostDTO": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "previousCost": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "DailyCost": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "double"
        },
        "unit": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        },
        "perServiceCost": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServiceCost"
          }
        }
      }
    },
    "ServiceCost": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "cost": {
          "type": "number",
          "format": "double"
        },
        "currency": {
          "type": "string"
        },
        "date": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "CoderLaunchEligibilityResponse": {
      "type": "object",
      "properties": {
        "coderAccountPresent": {
          "type": "boolean"
        },
        "userVCSTokenPresent": {
          "type": "boolean"
        }
      }
    },
    "VariableCountDto": {
      "type": "object",
      "properties": {
        "totalVariables": {
          "type": "integer",
          "format": "int32"
        },
        "overriddenVariables": {
          "type": "integer",
          "format": "int32"
        },
        "totalSecrets": {
          "type": "integer",
          "format": "int32"
        },
        "overriddenSecrets": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ResourceOutProperties": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "interfaces": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Change": {
      "type": "object",
      "properties": {
        "changedAttribute": {
          "$ref": "#/definitions/ChangedAttribute"
        },
        "changeType": {
          "type": "string",
          "enum": [
            "ADDED",
            "MODIFIED",
            "REMOVED"
          ]
        }
      }
    },
    "ChangedAttribute": {
      "type": "object",
      "properties": {
        "attribute": {
          "type": "string"
        },
        "newValue": {
          "type": "string"
        },
        "oldValue": {
          "type": "string"
        }
      }
    },
    "PageResourceReleaseImpact": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "first": {
          "type": "boolean"
        },
        "pageable": {
          "$ref": "#/definitions/PageableObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceReleaseImpact"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/SortObject"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "ReleaseDetails": {
      "type": "object",
      "properties": {
        "deploymentLogId": {
          "type": "string"
        },
        "stackVersion": {
          "type": "string"
        },
        "triggeredBy": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "triggeredOn": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ResourceReleaseImpact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "releaseDetails": {
          "$ref": "#/definitions/ReleaseDetails"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Change"
          }
        }
      }
    },
    "AWSElasticBlockStoreVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      }
    },
    "Affinity": {
      "type": "object",
      "properties": {
        "nodeAffinity": {
          "$ref": "#/definitions/NodeAffinity"
        },
        "podAffinity": {
          "$ref": "#/definitions/PodAffinity"
        },
        "podAntiAffinity": {
          "$ref": "#/definitions/PodAntiAffinity"
        }
      }
    },
    "AzureDiskVolumeSource": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "cachingMode": {
          "type": "string"
        },
        "diskName": {
          "type": "string"
        },
        "diskURI": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "AzureFileVolumeSource": {
      "type": "object",
      "properties": {
        "readOnly": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        },
        "shareName": {
          "type": "string"
        }
      }
    },
    "CSIVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "nodePublishSecretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeAttributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Capabilities": {
      "type": "object",
      "properties": {
        "add": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "drop": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CephFSVolumeSource": {
      "type": "object",
      "properties": {
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretFile": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "CinderVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "volumeID": {
          "type": "string"
        }
      }
    },
    "ClaimSource": {
      "type": "object",
      "properties": {
        "resourceClaimName": {
          "type": "string"
        },
        "resourceClaimTemplateName": {
          "type": "string"
        }
      }
    },
    "ConfigMapEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "ConfigMapKeySelector": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "ConfigMapProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "ConfigMapVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "Container": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvVar"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvFromSource"
          }
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          }
        },
        "readinessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "securityContext": {
          "$ref": "#/definitions/SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeDevice"
          }
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        },
        "workingDir": {
          "type": "string"
        }
      }
    },
    "ContainerPort": {
      "type": "object",
      "properties": {
        "containerPort": {
          "type": "integer",
          "format": "int32"
        },
        "hostIP": {
          "type": "string"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "ContainerState": {
      "type": "object",
      "properties": {
        "running": {
          "$ref": "#/definitions/ContainerStateRunning"
        },
        "terminated": {
          "$ref": "#/definitions/ContainerStateTerminated"
        },
        "waiting": {
          "$ref": "#/definitions/ContainerStateWaiting"
        }
      }
    },
    "ContainerStateRunning": {
      "type": "object",
      "properties": {
        "startedAt": {
          "type": "string"
        }
      }
    },
    "ContainerStateTerminated": {
      "type": "object",
      "properties": {
        "containerID": {
          "type": "string"
        },
        "exitCode": {
          "type": "integer",
          "format": "int32"
        },
        "finishedAt": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "signal": {
          "type": "integer",
          "format": "int32"
        },
        "startedAt": {
          "type": "string"
        }
      }
    },
    "ContainerStateWaiting": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "ContainerStatus": {
      "type": "object",
      "properties": {
        "containerID": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "imageID": {
          "type": "string"
        },
        "lastState": {
          "$ref": "#/definitions/ContainerState"
        },
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "boolean"
        },
        "restartCount": {
          "type": "integer",
          "format": "int32"
        },
        "started": {
          "type": "boolean"
        },
        "state": {
          "$ref": "#/definitions/ContainerState"
        }
      }
    },
    "DownwardAPIProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DownwardAPIVolumeFile"
          }
        }
      }
    },
    "DownwardAPIVolumeFile": {
      "type": "object",
      "properties": {
        "fieldRef": {
          "$ref": "#/definitions/ObjectFieldSelector"
        },
        "mode": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/ResourceFieldSelector"
        }
      }
    },
    "DownwardAPIVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DownwardAPIVolumeFile"
          }
        }
      }
    },
    "EmptyDirVolumeSource": {
      "type": "object",
      "properties": {
        "medium": {
          "type": "string"
        },
        "sizeLimit": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "EnvFromSource": {
      "type": "object",
      "properties": {
        "configMapRef": {
          "$ref": "#/definitions/ConfigMapEnvSource"
        },
        "prefix": {
          "type": "string"
        },
        "secretRef": {
          "$ref": "#/definitions/SecretEnvSource"
        }
      }
    },
    "EnvVar": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        },
        "valueFrom": {
          "$ref": "#/definitions/EnvVarSource"
        }
      }
    },
    "EnvVarSource": {
      "type": "object",
      "properties": {
        "configMapKeyRef": {
          "$ref": "#/definitions/ConfigMapKeySelector"
        },
        "fieldRef": {
          "$ref": "#/definitions/ObjectFieldSelector"
        },
        "resourceFieldRef": {
          "$ref": "#/definitions/ResourceFieldSelector"
        },
        "secretKeyRef": {
          "$ref": "#/definitions/SecretKeySelector"
        }
      }
    },
    "EphemeralContainer": {
      "type": "object",
      "properties": {
        "args": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvVar"
          }
        },
        "envFrom": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EnvFromSource"
          }
        },
        "image": {
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string"
        },
        "lifecycle": {
          "$ref": "#/definitions/Lifecycle"
        },
        "livenessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "name": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerPort"
          }
        },
        "readinessProbe": {
          "$ref": "#/definitions/Probe"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "securityContext": {
          "$ref": "#/definitions/SecurityContext"
        },
        "startupProbe": {
          "$ref": "#/definitions/Probe"
        },
        "stdin": {
          "type": "boolean"
        },
        "stdinOnce": {
          "type": "boolean"
        },
        "targetContainerName": {
          "type": "string"
        },
        "terminationMessagePath": {
          "type": "string"
        },
        "terminationMessagePolicy": {
          "type": "string"
        },
        "tty": {
          "type": "boolean"
        },
        "volumeDevices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeDevice"
          }
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMount"
          }
        },
        "workingDir": {
          "type": "string"
        }
      }
    },
    "EphemeralVolumeSource": {
      "type": "object",
      "properties": {
        "volumeClaimTemplate": {
          "$ref": "#/definitions/PersistentVolumeClaimTemplate"
        }
      }
    },
    "ExecAction": {
      "type": "object",
      "properties": {
        "command": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FCVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "readOnly": {
          "type": "boolean"
        },
        "targetWWNs": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "wwids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "FieldsV1": {
      "type": "object"
    },
    "FlexVolumeSource": {
      "type": "object",
      "properties": {
        "driver": {
          "type": "string"
        },
        "fsType": {
          "type": "string"
        },
        "options": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        }
      }
    },
    "FlockerVolumeSource": {
      "type": "object",
      "properties": {
        "datasetName": {
          "type": "string"
        },
        "datasetUUID": {
          "type": "string"
        }
      }
    },
    "GCEPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "partition": {
          "type": "integer",
          "format": "int32"
        },
        "pdName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "GRPCAction": {
      "type": "object",
      "properties": {
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "GitRepoVolumeSource": {
      "type": "object",
      "properties": {
        "directory": {
          "type": "string"
        },
        "repository": {
          "type": "string"
        },
        "revision": {
          "type": "string"
        }
      }
    },
    "GlusterfsVolumeSource": {
      "type": "object",
      "properties": {
        "endpoints": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "HTTPGetAction": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "httpHeaders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HTTPHeader"
          }
        },
        "path": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/IntOrString"
        },
        "scheme": {
          "type": "string"
        }
      }
    },
    "HTTPHeader": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "HostAlias": {
      "type": "object",
      "properties": {
        "hostnames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ip": {
          "type": "string"
        }
      }
    },
    "HostPathVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ISCSIVolumeSource": {
      "type": "object",
      "properties": {
        "chapAuthDiscovery": {
          "type": "boolean"
        },
        "chapAuthSession": {
          "type": "boolean"
        },
        "fsType": {
          "type": "string"
        },
        "initiatorName": {
          "type": "string"
        },
        "iqn": {
          "type": "string"
        },
        "iscsiInterface": {
          "type": "string"
        },
        "lun": {
          "type": "integer",
          "format": "int32"
        },
        "portals": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "targetPortal": {
          "type": "string"
        }
      }
    },
    "IntOrString": {
      "type": "object",
      "properties": {
        "value": {
          "type": "object"
        },
        "intVal": {
          "type": "integer",
          "format": "int32"
        },
        "strVal": {
          "type": "string"
        }
      }
    },
    "KeyToPath": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "mode": {
          "type": "integer",
          "format": "int32"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "LabelSelector": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LabelSelectorRequirement"
          }
        },
        "matchLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "LabelSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Lifecycle": {
      "type": "object",
      "properties": {
        "postStart": {
          "$ref": "#/definitions/LifecycleHandler"
        },
        "preStop": {
          "$ref": "#/definitions/LifecycleHandler"
        }
      }
    },
    "LifecycleHandler": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/ExecAction"
        },
        "httpGet": {
          "$ref": "#/definitions/HTTPGetAction"
        },
        "tcpSocket": {
          "$ref": "#/definitions/TCPSocketAction"
        }
      }
    },
    "LocalObjectReference": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ManagedFieldsEntry": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldsType": {
          "type": "string"
        },
        "fieldsV1": {
          "$ref": "#/definitions/FieldsV1"
        },
        "manager": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "subresource": {
          "type": "string"
        },
        "time": {
          "type": "string"
        }
      }
    },
    "NFSVolumeSource": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "server": {
          "type": "string"
        }
      }
    },
    "NodeAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PreferredSchedulingTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "$ref": "#/definitions/NodeSelector"
        }
      }
    },
    "NodeSelector": {
      "type": "object",
      "properties": {
        "nodeSelectorTerms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSelectorTerm"
          }
        }
      }
    },
    "NodeSelectorRequirement": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "values": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "NodeSelectorTerm": {
      "type": "object",
      "properties": {
        "matchExpressions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSelectorRequirement"
          }
        },
        "matchFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NodeSelectorRequirement"
          }
        }
      }
    },
    "ObjectFieldSelector": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        }
      }
    },
    "ObjectMeta": {
      "type": "object",
      "properties": {
        "annotations": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "creationTimestamp": {
          "type": "string"
        },
        "deletionGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "deletionTimestamp": {
          "type": "string"
        },
        "finalizers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "generateName": {
          "type": "string"
        },
        "generation": {
          "type": "integer",
          "format": "int64"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "managedFields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ManagedFieldsEntry"
          }
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "ownerReferences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OwnerReference"
          }
        },
        "resourceVersion": {
          "type": "string"
        },
        "selfLink": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "OwnerReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "blockOwnerDeletion": {
          "type": "boolean"
        },
        "controller": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "PersistentVolumeClaimSpec": {
      "type": "object",
      "properties": {
        "accessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataSource": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "dataSourceRef": {
          "$ref": "#/definitions/TypedObjectReference"
        },
        "resources": {
          "$ref": "#/definitions/ResourceRequirements"
        },
        "selector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "storageClassName": {
          "type": "string"
        },
        "volumeMode": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "PersistentVolumeClaimTemplate": {
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/PersistentVolumeClaimSpec"
        }
      }
    },
    "PersistentVolumeClaimVolumeSource": {
      "type": "object",
      "properties": {
        "claimName": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        }
      }
    },
    "PhotonPersistentDiskVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "pdID": {
          "type": "string"
        }
      }
    },
    "Pod": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/PodSpec"
        },
        "status": {
          "$ref": "#/definitions/PodStatus"
        }
      }
    },
    "PodAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodAffinityTerm"
          }
        }
      }
    },
    "PodAffinityTerm": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "namespaceSelector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "namespaces": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "topologyKey": {
          "type": "string"
        }
      }
    },
    "PodAntiAffinity": {
      "type": "object",
      "properties": {
        "preferredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeightedPodAffinityTerm"
          }
        },
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodAffinityTerm"
          }
        }
      }
    },
    "PodCondition": {
      "type": "object",
      "properties": {
        "lastProbeTime": {
          "type": "string"
        },
        "lastTransitionTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "PodDNSConfig": {
      "type": "object",
      "properties": {
        "nameservers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "options": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodDNSConfigOption"
          }
        },
        "searches": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PodDNSConfigOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "PodIP": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        }
      }
    },
    "PodOS": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "PodReadinessGate": {
      "type": "object",
      "properties": {
        "conditionType": {
          "type": "string"
        }
      }
    },
    "PodResourceClaim": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/ClaimSource"
        }
      }
    },
    "PodSchedulingGate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "PodSecurityContext": {
      "type": "object",
      "properties": {
        "fsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "fsGroupChangePolicy": {
          "type": "string"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/SeccompProfile"
        },
        "supplementalGroups": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          }
        },
        "sysctls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Sysctl"
          }
        },
        "windowsOptions": {
          "$ref": "#/definitions/WindowsSecurityContextOptions"
        }
      }
    },
    "PodSpec": {
      "type": "object",
      "properties": {
        "activeDeadlineSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "affinity": {
          "$ref": "#/definitions/Affinity"
        },
        "automountServiceAccountToken": {
          "type": "boolean"
        },
        "containers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          }
        },
        "dnsConfig": {
          "$ref": "#/definitions/PodDNSConfig"
        },
        "dnsPolicy": {
          "type": "string"
        },
        "enableServiceLinks": {
          "type": "boolean"
        },
        "ephemeralContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EphemeralContainer"
          }
        },
        "hostAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HostAlias"
          }
        },
        "hostIPC": {
          "type": "boolean"
        },
        "hostNetwork": {
          "type": "boolean"
        },
        "hostPID": {
          "type": "boolean"
        },
        "hostUsers": {
          "type": "boolean"
        },
        "hostname": {
          "type": "string"
        },
        "imagePullSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalObjectReference"
          }
        },
        "initContainers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Container"
          }
        },
        "nodeName": {
          "type": "string"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "os": {
          "$ref": "#/definitions/PodOS"
        },
        "overhead": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Quantity"
          }
        },
        "preemptionPolicy": {
          "type": "string"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "priorityClassName": {
          "type": "string"
        },
        "readinessGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodReadinessGate"
          }
        },
        "resourceClaims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodResourceClaim"
          }
        },
        "restartPolicy": {
          "type": "string"
        },
        "runtimeClassName": {
          "type": "string"
        },
        "schedulerName": {
          "type": "string"
        },
        "schedulingGates": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodSchedulingGate"
          }
        },
        "securityContext": {
          "$ref": "#/definitions/PodSecurityContext"
        },
        "serviceAccount": {
          "type": "string"
        },
        "serviceAccountName": {
          "type": "string"
        },
        "setHostnameAsFQDN": {
          "type": "boolean"
        },
        "shareProcessNamespace": {
          "type": "boolean"
        },
        "subdomain": {
          "type": "string"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "tolerations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Toleration"
          }
        },
        "topologySpreadConstraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TopologySpreadConstraint"
          }
        },
        "volumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Volume"
          }
        }
      }
    },
    "PodStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodCondition"
          }
        },
        "containerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerStatus"
          }
        },
        "ephemeralContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerStatus"
          }
        },
        "hostIP": {
          "type": "string"
        },
        "initContainerStatuses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContainerStatus"
          }
        },
        "message": {
          "type": "string"
        },
        "nominatedNodeName": {
          "type": "string"
        },
        "phase": {
          "type": "string"
        },
        "podIP": {
          "type": "string"
        },
        "podIPs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PodIP"
          }
        },
        "qosClass": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "startTime": {
          "type": "string"
        }
      }
    },
    "PortworxVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "volumeID": {
          "type": "string"
        }
      }
    },
    "PreferredSchedulingTerm": {
      "type": "object",
      "properties": {
        "preference": {
          "$ref": "#/definitions/NodeSelectorTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Probe": {
      "type": "object",
      "properties": {
        "exec": {
          "$ref": "#/definitions/ExecAction"
        },
        "failureThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "grpc": {
          "$ref": "#/definitions/GRPCAction"
        },
        "httpGet": {
          "$ref": "#/definitions/HTTPGetAction"
        },
        "initialDelaySeconds": {
          "type": "integer",
          "format": "int32"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "successThreshold": {
          "type": "integer",
          "format": "int32"
        },
        "tcpSocket": {
          "$ref": "#/definitions/TCPSocketAction"
        },
        "terminationGracePeriodSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ProjectedVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "sources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeProjection"
          }
        }
      }
    },
    "Quantity": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "QuobyteVolumeSource": {
      "type": "object",
      "properties": {
        "group": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "registry": {
          "type": "string"
        },
        "tenant": {
          "type": "string"
        },
        "user": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        }
      }
    },
    "RBDVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "keyring": {
          "type": "string"
        },
        "monitors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "pool": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "ResourceClaim": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "ResourceFieldSelector": {
      "type": "object",
      "properties": {
        "containerName": {
          "type": "string"
        },
        "divisor": {
          "$ref": "#/definitions/Quantity"
        },
        "resource": {
          "type": "string"
        }
      }
    },
    "ResourceRequirements": {
      "type": "object",
      "properties": {
        "claims": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceClaim"
          }
        },
        "limits": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Quantity"
          }
        },
        "requests": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/Quantity"
          }
        }
      }
    },
    "SELinuxOptions": {
      "type": "object",
      "properties": {
        "level": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "ScaleIOVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "protectionDomain": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "sslEnabled": {
          "type": "boolean"
        },
        "storageMode": {
          "type": "string"
        },
        "storagePool": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "volumeName": {
          "type": "string"
        }
      }
    },
    "SeccompProfile": {
      "type": "object",
      "properties": {
        "localhostProfile": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "SecretEnvSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "SecretKeySelector": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "SecretProjection": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "name": {
          "type": "string"
        },
        "optional": {
          "type": "boolean"
        }
      }
    },
    "SecretVolumeSource": {
      "type": "object",
      "properties": {
        "defaultMode": {
          "type": "integer",
          "format": "int32"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyToPath"
          }
        },
        "optional": {
          "type": "boolean"
        },
        "secretName": {
          "type": "string"
        }
      }
    },
    "SecurityContext": {
      "type": "object",
      "properties": {
        "allowPrivilegeEscalation": {
          "type": "boolean"
        },
        "capabilities": {
          "$ref": "#/definitions/Capabilities"
        },
        "privileged": {
          "type": "boolean"
        },
        "procMount": {
          "type": "string"
        },
        "readOnlyRootFilesystem": {
          "type": "boolean"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int64"
        },
        "runAsNonRoot": {
          "type": "boolean"
        },
        "runAsUser": {
          "type": "integer",
          "format": "int64"
        },
        "seLinuxOptions": {
          "$ref": "#/definitions/SELinuxOptions"
        },
        "seccompProfile": {
          "$ref": "#/definitions/SeccompProfile"
        },
        "windowsOptions": {
          "$ref": "#/definitions/WindowsSecurityContextOptions"
        }
      }
    },
    "ServiceAccountTokenProjection": {
      "type": "object",
      "properties": {
        "audience": {
          "type": "string"
        },
        "expirationSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "StorageOSVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "secretRef": {
          "$ref": "#/definitions/LocalObjectReference"
        },
        "volumeName": {
          "type": "string"
        },
        "volumeNamespace": {
          "type": "string"
        }
      }
    },
    "Sysctl": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TCPSocketAction": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/IntOrString"
        }
      }
    },
    "Toleration": {
      "type": "object",
      "properties": {
        "effect": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "operator": {
          "type": "string"
        },
        "tolerationSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "TopologySpreadConstraint": {
      "type": "object",
      "properties": {
        "labelSelector": {
          "$ref": "#/definitions/LabelSelector"
        },
        "matchLabelKeys": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "maxSkew": {
          "type": "integer",
          "format": "int32"
        },
        "minDomains": {
          "type": "integer",
          "format": "int32"
        },
        "nodeAffinityPolicy": {
          "type": "string"
        },
        "nodeTaintsPolicy": {
          "type": "string"
        },
        "topologyKey": {
          "type": "string"
        },
        "whenUnsatisfiable": {
          "type": "string"
        }
      }
    },
    "TypedLocalObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiGroup": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TypedObjectReference": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string"
        },
        "apiGroup": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        }
      }
    },
    "Volume": {
      "type": "object",
      "properties": {
        "awsElasticBlockStore": {
          "$ref": "#/definitions/AWSElasticBlockStoreVolumeSource"
        },
        "azureDisk": {
          "$ref": "#/definitions/AzureDiskVolumeSource"
        },
        "azureFile": {
          "$ref": "#/definitions/AzureFileVolumeSource"
        },
        "cephfs": {
          "$ref": "#/definitions/CephFSVolumeSource"
        },
        "cinder": {
          "$ref": "#/definitions/CinderVolumeSource"
        },
        "configMap": {
          "$ref": "#/definitions/ConfigMapVolumeSource"
        },
        "csi": {
          "$ref": "#/definitions/CSIVolumeSource"
        },
        "downwardAPI": {
          "$ref": "#/definitions/DownwardAPIVolumeSource"
        },
        "emptyDir": {
          "$ref": "#/definitions/EmptyDirVolumeSource"
        },
        "ephemeral": {
          "$ref": "#/definitions/EphemeralVolumeSource"
        },
        "fc": {
          "$ref": "#/definitions/FCVolumeSource"
        },
        "flexVolume": {
          "$ref": "#/definitions/FlexVolumeSource"
        },
        "flocker": {
          "$ref": "#/definitions/FlockerVolumeSource"
        },
        "gcePersistentDisk": {
          "$ref": "#/definitions/GCEPersistentDiskVolumeSource"
        },
        "gitRepo": {
          "$ref": "#/definitions/GitRepoVolumeSource"
        },
        "glusterfs": {
          "$ref": "#/definitions/GlusterfsVolumeSource"
        },
        "hostPath": {
          "$ref": "#/definitions/HostPathVolumeSource"
        },
        "iscsi": {
          "$ref": "#/definitions/ISCSIVolumeSource"
        },
        "name": {
          "type": "string"
        },
        "nfs": {
          "$ref": "#/definitions/NFSVolumeSource"
        },
        "persistentVolumeClaim": {
          "$ref": "#/definitions/PersistentVolumeClaimVolumeSource"
        },
        "photonPersistentDisk": {
          "$ref": "#/definitions/PhotonPersistentDiskVolumeSource"
        },
        "portworxVolume": {
          "$ref": "#/definitions/PortworxVolumeSource"
        },
        "projected": {
          "$ref": "#/definitions/ProjectedVolumeSource"
        },
        "quobyte": {
          "$ref": "#/definitions/QuobyteVolumeSource"
        },
        "rbd": {
          "$ref": "#/definitions/RBDVolumeSource"
        },
        "scaleIO": {
          "$ref": "#/definitions/ScaleIOVolumeSource"
        },
        "secret": {
          "$ref": "#/definitions/SecretVolumeSource"
        },
        "storageos": {
          "$ref": "#/definitions/StorageOSVolumeSource"
        },
        "vsphereVolume": {
          "$ref": "#/definitions/VsphereVirtualDiskVolumeSource"
        }
      }
    },
    "VolumeDevice": {
      "type": "object",
      "properties": {
        "devicePath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "VolumeMount": {
      "type": "object",
      "properties": {
        "mountPath": {
          "type": "string"
        },
        "mountPropagation": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "subPath": {
          "type": "string"
        },
        "subPathExpr": {
          "type": "string"
        }
      }
    },
    "VolumeProjection": {
      "type": "object",
      "properties": {
        "configMap": {
          "$ref": "#/definitions/ConfigMapProjection"
        },
        "downwardAPI": {
          "$ref": "#/definitions/DownwardAPIProjection"
        },
        "secret": {
          "$ref": "#/definitions/SecretProjection"
        },
        "serviceAccountToken": {
          "$ref": "#/definitions/ServiceAccountTokenProjection"
        }
      }
    },
    "VsphereVirtualDiskVolumeSource": {
      "type": "object",
      "properties": {
        "fsType": {
          "type": "string"
        },
        "storagePolicyID": {
          "type": "string"
        },
        "storagePolicyName": {
          "type": "string"
        },
        "volumePath": {
          "type": "string"
        }
      }
    },
    "WeightedPodAffinityTerm": {
      "type": "object",
      "properties": {
        "podAffinityTerm": {
          "$ref": "#/definitions/PodAffinityTerm"
        },
        "weight": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "WindowsSecurityContextOptions": {
      "type": "object",
      "properties": {
        "gmsaCredentialSpec": {
          "type": "string"
        },
        "gmsaCredentialSpecName": {
          "type": "string"
        },
        "hostProcess": {
          "type": "boolean"
        },
        "runAsUserName": {
          "type": "string"
        }
      }
    },
    "HTTPIngressPath": {
      "type": "object",
      "properties": {
        "backend": {
          "$ref": "#/definitions/IngressBackend"
        },
        "path": {
          "type": "string"
        },
        "pathType": {
          "type": "string"
        }
      }
    },
    "HTTPIngressRuleValue": {
      "type": "object",
      "properties": {
        "paths": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HTTPIngressPath"
          }
        }
      }
    },
    "Ingress": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/IngressSpec"
        },
        "status": {
          "$ref": "#/definitions/IngressStatus"
        }
      }
    },
    "IngressBackend": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/TypedLocalObjectReference"
        },
        "service": {
          "$ref": "#/definitions/IngressServiceBackend"
        }
      }
    },
    "IngressLoadBalancerIngress": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressPortStatus"
          }
        }
      }
    },
    "IngressLoadBalancerStatus": {
      "type": "object",
      "properties": {
        "ingress": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressLoadBalancerIngress"
          }
        }
      }
    },
    "IngressPortStatus": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        }
      }
    },
    "IngressRule": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string"
        },
        "http": {
          "$ref": "#/definitions/HTTPIngressRuleValue"
        }
      }
    },
    "IngressServiceBackend": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "$ref": "#/definitions/ServiceBackendPort"
        }
      }
    },
    "IngressSpec": {
      "type": "object",
      "properties": {
        "defaultBackend": {
          "$ref": "#/definitions/IngressBackend"
        },
        "ingressClassName": {
          "type": "string"
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressRule"
          }
        },
        "tls": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressTLS"
          }
        }
      }
    },
    "IngressStatus": {
      "type": "object",
      "properties": {
        "loadBalancer": {
          "$ref": "#/definitions/IngressLoadBalancerStatus"
        }
      }
    },
    "IngressTLS": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "secretName": {
          "type": "string"
        }
      }
    },
    "ServiceBackendPort": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ContainerResourceMetricSource": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      }
    },
    "ContainerResourceMetricStatus": {
      "type": "object",
      "properties": {
        "container": {
          "type": "string"
        },
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "CrossVersionObjectReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ExternalMetricSource": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      }
    },
    "ExternalMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        }
      }
    },
    "HPAScalingPolicy": {
      "type": "object",
      "properties": {
        "periodSeconds": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HPAScalingRules": {
      "type": "object",
      "properties": {
        "policies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HPAScalingPolicy"
          }
        },
        "selectPolicy": {
          "type": "string"
        },
        "stabilizationWindowSeconds": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "HorizontalPodAutoscaler": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "spec": {
          "$ref": "#/definitions/HorizontalPodAutoscalerSpec"
        },
        "status": {
          "$ref": "#/definitions/HorizontalPodAutoscalerStatus"
        }
      }
    },
    "HorizontalPodAutoscalerBehavior": {
      "type": "object",
      "properties": {
        "scaleDown": {
          "$ref": "#/definitions/HPAScalingRules"
        },
        "scaleUp": {
          "$ref": "#/definitions/HPAScalingRules"
        }
      }
    },
    "HorizontalPodAutoscalerCondition": {
      "type": "object",
      "properties": {
        "lastTransitionTime": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "HorizontalPodAutoscalerSpec": {
      "type": "object",
      "properties": {
        "behavior": {
          "$ref": "#/definitions/HorizontalPodAutoscalerBehavior"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricSpec"
          }
        },
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "scaleTargetRef": {
          "$ref": "#/definitions/CrossVersionObjectReference"
        }
      }
    },
    "HorizontalPodAutoscalerStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/HorizontalPodAutoscalerCondition"
          }
        },
        "currentMetrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricStatus"
          }
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "lastScaleTime": {
          "type": "string"
        },
        "observedGeneration": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "MetricIdentifier": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "selector": {
          "$ref": "#/definitions/LabelSelector"
        }
      }
    },
    "MetricSpec": {
      "type": "object",
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/ContainerResourceMetricSource"
        },
        "external": {
          "$ref": "#/definitions/ExternalMetricSource"
        },
        "object": {
          "$ref": "#/definitions/ObjectMetricSource"
        },
        "pods": {
          "$ref": "#/definitions/PodsMetricSource"
        },
        "resource": {
          "$ref": "#/definitions/ResourceMetricSource"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MetricStatus": {
      "type": "object",
      "properties": {
        "containerResource": {
          "$ref": "#/definitions/ContainerResourceMetricStatus"
        },
        "external": {
          "$ref": "#/definitions/ExternalMetricStatus"
        },
        "object": {
          "$ref": "#/definitions/ObjectMetricStatus"
        },
        "pods": {
          "$ref": "#/definitions/PodsMetricStatus"
        },
        "resource": {
          "$ref": "#/definitions/ResourceMetricStatus"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "MetricTarget": {
      "type": "object",
      "properties": {
        "averageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "averageValue": {
          "$ref": "#/definitions/Quantity"
        },
        "type": {
          "type": "string"
        },
        "value": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "MetricValueStatus": {
      "type": "object",
      "properties": {
        "averageUtilization": {
          "type": "integer",
          "format": "int32"
        },
        "averageValue": {
          "$ref": "#/definitions/Quantity"
        },
        "value": {
          "$ref": "#/definitions/Quantity"
        }
      }
    },
    "ObjectMetricSource": {
      "type": "object",
      "properties": {
        "describedObject": {
          "$ref": "#/definitions/CrossVersionObjectReference"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      }
    },
    "ObjectMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "describedObject": {
          "$ref": "#/definitions/CrossVersionObjectReference"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        }
      }
    },
    "PodsMetricSource": {
      "type": "object",
      "properties": {
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      }
    },
    "PodsMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "metric": {
          "$ref": "#/definitions/MetricIdentifier"
        }
      }
    },
    "ResourceMetricSource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/MetricTarget"
        }
      }
    },
    "ResourceMetricStatus": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/MetricValueStatus"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ResourceDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "BlueprintFileSummaryDto": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "enabled": {
          "type": "integer",
          "format": "int64"
        },
        "grouped": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/GroupedCountDto"
          }
        }
      }
    },
    "GroupedCountDto": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "format": "int64"
        },
        "enabled": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "QueuedRelease": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "hotfixResources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        },
        "withRefresh": {
          "type": "boolean"
        },
        "forceRelease": {
          "type": "boolean"
        },
        "allowDestroy": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        },
        "overrideBuildSteps": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "canQueue": {
          "type": "boolean"
        },
        "triggeredBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "releaseTraceId": {
          "type": "string"
        },
        "skipStateCheck": {
          "type": "boolean"
        },
        "tfVersion": {
          "$ref": "#/definitions/TfVersion"
        },
        "parallelRelease": {
          "type": "boolean"
        }
      }
    },
    "StreamingResponseBody": {
      "type": "object"
    },
    "Event": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/ObjectMeta"
        },
        "action": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "eventTime": {
          "$ref": "#/definitions/MicroTime"
        },
        "firstTimestamp": {
          "type": "string"
        },
        "involvedObject": {
          "$ref": "#/definitions/ObjectReference"
        },
        "lastTimestamp": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "related": {
          "$ref": "#/definitions/ObjectReference"
        },
        "reportingComponent": {
          "type": "string"
        },
        "reportingInstance": {
          "type": "string"
        },
        "series": {
          "$ref": "#/definitions/EventSeries"
        },
        "source": {
          "$ref": "#/definitions/EventSource"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "EventSeries": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "lastObservedTime": {
          "$ref": "#/definitions/MicroTime"
        }
      }
    },
    "EventSource": {
      "type": "object",
      "properties": {
        "component": {
          "type": "string"
        },
        "host": {
          "type": "string"
        }
      }
    },
    "MicroTime": {
      "type": "object",
      "properties": {
        "Time": {
          "type": "string"
        }
      }
    },
    "ObjectReference": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string"
        },
        "kind": {
          "type": "string"
        },
        "fieldPath": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "namespace": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string"
        },
        "uid": {
          "type": "string"
        }
      }
    },
    "MatchedModuleDTO": {
      "type": "object",
      "properties": {
        "resources": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MatchedResourceDTO"
          }
        },
        "modules": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ModuleDTO"
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "Text": {
          "type": "string"
        }
      }
    },
    "K8sAnalyzeResponse": {
      "type": "object",
      "properties": {
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Result"
          }
        },
        "problems": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "provider": {
          "type": "string"
        }
      }
    },
    "Result": {
      "type": "object",
      "properties": {
        "error": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "kind": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "details": {
          "type": "string"
        },
        "parentObject": {
          "type": "string"
        }
      }
    },
    "KubernetesCredential": {
      "type": "object",
      "properties": {
        "endpoint": {
          "type": "string"
        },
        "cacert": {
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "ContainerDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "restartCount": {
          "type": "integer",
          "format": "int32"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "EventDTO": {
      "type": "object",
      "properties": {
        "lastSeen": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "object": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "StatefulSetDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "replicas": {
          "type": "integer",
          "format": "int32"
        },
        "podCount": {
          "type": "integer",
          "format": "int32"
        },
        "readyReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "desiredReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "type": "string"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServiceDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "clusterIp": {
          "type": "string"
        },
        "externalIp": {
          "type": "string"
        },
        "ipFamilies": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "port": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ServicePortDTO"
          }
        },
        "age": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ServicePortDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "protocol": {
          "type": "string"
        },
        "targetPort": {
          "type": "string"
        }
      }
    },
    "SecretDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "dataKeySet": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "dataCount": {
          "type": "integer",
          "format": "int32"
        },
        "age": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ReplicasetDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "desired": {
          "type": "integer",
          "format": "int32"
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "role": {
          "type": "string",
          "enum": [
            "active",
            "preview",
            "na"
          ]
        }
      }
    },
    "PersistentVolumeClaimDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "capacity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "volume": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "pvcAccessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "associatedPods": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PersistentVolumeDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "capacity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "storageClass": {
          "type": "string"
        },
        "pvAccessModes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "reclaimPolicy": {
          "type": "string"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "claim": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        }
      }
    },
    "PodDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "Pending",
            "Running",
            "Succeeded",
            "Failed",
            "Unknown",
            "CrashLoopBackOff",
            "ImagePullBackOff",
            "ContainerCreating",
            "Terminating",
            "Evicted",
            "Completed",
            "Restarting",
            "Error",
            "InvalidImageName",
            "OOMKilled"
          ]
        },
        "restarts": {
          "type": "integer",
          "format": "int32"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "role": {
          "type": "string",
          "enum": [
            "active",
            "preview",
            "na"
          ]
        }
      }
    },
    "JobDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "durationInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        },
        "podStatus": {
          "$ref": "#/definitions/PodStatusDTO"
        }
      }
    },
    "PodStatusDTO": {
      "type": "object",
      "properties": {
        "completions": {
          "type": "string"
        },
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "succeeded": {
          "type": "integer",
          "format": "int32"
        },
        "failed": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IngressBackendDTO": {
      "type": "object",
      "properties": {
        "serviceName": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IngressDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ingressClass": {
          "type": "string"
        },
        "addresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/IngressRulesDTO"
          }
        },
        "age": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "IngressRulesDTO": {
      "type": "object",
      "properties": {
        "hosts": {
          "type": "string"
        },
        "backend": {
          "$ref": "#/definitions/IngressBackendDTO"
        },
        "path": {
          "type": "string"
        }
      }
    },
    "HorizontalPodAutoscalerDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "replicaStatus": {
          "$ref": "#/definitions/ReplicaStatus"
        },
        "metric": {
          "$ref": "#/definitions/Metric"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "Metric": {
      "type": "object",
      "properties": {
        "cpuUtilization": {
          "$ref": "#/definitions/Utilization"
        },
        "memoryUtilization": {
          "$ref": "#/definitions/Utilization"
        }
      }
    },
    "ReplicaStatus": {
      "type": "object",
      "properties": {
        "minReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "maxReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "currentReplicas": {
          "type": "integer",
          "format": "int32"
        },
        "targetReplicas": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Utilization": {
      "type": "object",
      "properties": {
        "current": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    },
    "DeploymentDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "upToDate": {
          "type": "integer",
          "format": "int32"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DaemonSetDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "desired": {
          "type": "integer",
          "format": "int32"
        },
        "current": {
          "type": "integer",
          "format": "int32"
        },
        "ready": {
          "type": "integer",
          "format": "int32"
        },
        "upToDate": {
          "type": "integer",
          "format": "int32"
        },
        "available": {
          "type": "integer",
          "format": "int32"
        },
        "nodeSelector": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "CronJobDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "schedule": {
          "type": "string"
        },
        "suspend": {
          "type": "boolean"
        },
        "active": {
          "type": "integer",
          "format": "int32"
        },
        "lastSchedule": {
          "type": "string"
        },
        "ageInSeconds": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConfigMapDTO": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "keys": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "age": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "DeploymentsStats": {
      "type": "object",
      "properties": {
        "successReleases": {
          "type": "integer",
          "format": "int32"
        },
        "failedReleases": {
          "type": "integer",
          "format": "int32"
        },
        "noChangeReleases": {
          "type": "integer",
          "format": "int32"
        },
        "isFirstRelease": {
          "type": "boolean"
        }
      }
    },
    "ListDeploymentsWrapper": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "deployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "deploymentsFull": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "downStreamClusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentSignedOffDeployment": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "stack": {
          "$ref": "#/definitions/Stack"
        },
        "deploymentsStats": {
          "$ref": "#/definitions/DeploymentsStats"
        },
        "nextExecutionTime": {
          "type": "string",
          "deprecated": true
        },
        "timeToNextExecution": {
          "type": "string",
          "deprecated": true
        }
      }
    },
    "ReleaseChanges": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deploymentId": {
          "type": "string"
        },
        "changes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceChange"
          }
        }
      }
    },
    "ResourceChange": {
      "type": "object",
      "properties": {
        "changeType": {
          "type": "string",
          "enum": [
            "ADDED",
            "MODIFIED",
            "REMOVED"
          ]
        },
        "resourceName": {
          "type": "string"
        },
        "resourceType": {
          "type": "string"
        },
        "changedAttributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ChangedAttribute"
          }
        },
        "flavor": {
          "type": "string"
        }
      }
    },
    "TokenPaginatedResponse": {
      "type": "object",
      "properties": {
        "nextToken": {
          "type": "string"
        },
        "logEventList": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "DeploymentStatsDto": {
      "type": "object",
      "properties": {
        "stats": {
          "$ref": "#/definitions/DeploymentsStats"
        },
        "dateWiseCounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentStatusCountDto"
          }
        }
      }
    },
    "DeploymentStatusCountDto": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date"
        },
        "status": {
          "type": "string",
          "enum": [
            "SUCCEEDED",
            "FAILED",
            "FAULT",
            "TIMED_OUT",
            "IN_PROGRESS",
            "STOPPED",
            "INVALID",
            "STARTED",
            "UNKNOWN",
            "QUEUED",
            "PENDING_APPROVAL",
            "APPROVED",
            "ABORTED",
            "REJECTED"
          ]
        },
        "count": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ChangeRepresentationObject": {
      "type": "object",
      "properties": {
        "changeType": {
          "type": "string",
          "enum": [
            "BLUEPRINT_CHANGES",
            "IAC_CHANGES",
            "OVERRIDE_CHANGES",
            "ARTIFACT_CHANGES"
          ]
        },
        "oldValue": {
          "type": "object"
        },
        "newValue": {
          "type": "object"
        },
        "action": {
          "type": "string",
          "enum": [
            "ADDED",
            "CHANGED",
            "REMOVED"
          ]
        }
      }
    },
    "PageDeploymentLog": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "first": {
          "type": "boolean"
        },
        "pageable": {
          "$ref": "#/definitions/PageableObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/SortObject"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "DeploymentOverview": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "downStreamClusterNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "currentSignedOffDeployment": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "stack": {
          "$ref": "#/definitions/Stack"
        },
        "deploymentsStats": {
          "$ref": "#/definitions/DeploymentsStats"
        },
        "nextExecutionTime": {
          "type": "string",
          "deprecated": true
        },
        "timeToNextExecution": {
          "type": "string",
          "deprecated": true
        },
        "latestDeployment": {
          "$ref": "#/definitions/DeploymentLog"
        },
        "inProgressDeployments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeploymentLog"
          }
        },
        "cluster": {
          "$ref": "#/definitions/AbstractCluster"
        },
        "isScheduledReleasesPaused": {
          "type": "boolean"
        },
        "queuedReleases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/QueuedRelease"
          }
        },
        "executionTime": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ExecutionTime"
          }
        }
      }
    },
    "ExecutionTime": {
      "type": "object",
      "properties": {
        "nextReleaseTime": {
          "type": "string"
        },
        "timeToNextRelease": {
          "type": "string"
        }
      }
    },
    "PageChat": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "first": {
          "type": "boolean"
        },
        "pageable": {
          "$ref": "#/definitions/PageableObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Chat"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/SortObject"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "AvailabilitySchedule": {
      "required": [
        "clusterId"
      ],
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "clusterId": {
          "type": "string"
        },
        "schedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailabilityTaskSchedule"
          }
        },
        "shortLivedSchedules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ShortLivedTaskSchedule"
          }
        }
      }
    },
    "AvailabilityTaskSchedule": {
      "required": [
        "releaseType"
      ],
      "type": "object",
      "properties": {
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "description": {
          "type": "string"
        },
        "frequency": {
          "type": "string",
          "enum": [
            "PER_MINUTE",
            "HOURLY",
            "DAILY",
            "WEEKLY"
          ]
        },
        "interval": {
          "type": "integer",
          "format": "int32"
        },
        "byDay": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "MON",
              "TUE",
              "WED",
              "THU",
              "FRI",
              "SAT",
              "SUN"
            ]
          }
        },
        "byTime": {
          "$ref": "#/definitions/LocalTime"
        },
        "timeZone": {
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "id": {
              "type": "string"
            },
            "dstsavings": {
              "type": "integer",
              "format": "int32"
            },
            "rawOffset": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "cronExpr": {
          "type": "string"
        }
      }
    },
    "ShortLivedTaskSchedule": {
      "required": [
        "frequency",
        "releaseType"
      ],
      "type": "object",
      "properties": {
        "releaseType": {
          "type": "string",
          "enum": [
            "HOTFIX",
            "RELEASE",
            "LAUNCH",
            "DESTROY",
            "CUSTOM",
            "UNLOCK_STATE",
            "PLAN",
            "HOTFIX_PLAN",
            "APPLY_PLAN",
            "APPLY_HOTFIX_PLAN",
            "SCALE_UP",
            "SCALE_DOWN",
            "MAINTENANCE",
            "TERRAFORM_EXPORT",
            "ROLLBACK_PLAN",
            "APPLY_ROLLBACK_PLAN"
          ]
        },
        "frequency": {
          "type": "string",
          "enum": [
            "PER_MINUTE",
            "HOURLY",
            "DAILY",
            "WEEKLY"
          ]
        },
        "tearDownAfter": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "BillingMetadata": {
      "type": "object",
      "properties": {
        "planName": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "trialEnd": {
          "type": "string"
        }
      }
    },
    "FacetsAuditLogResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "performedBy": {
          "type": "string"
        },
        "performedAt": {
          "type": "string",
          "format": "date-time"
        },
        "entity": {
          "type": "string",
          "enum": [
            "BLUEPRINT",
            "ENVIRONMENT",
            "RESOURCE",
            "CI_INTEGRATION",
            "CI_RULE",
            "CI_CD",
            "PROMOTION_WORKFLOW",
            "RELEASE_STREAM",
            "DELIVERY_PIPELINE",
            "TRASH",
            "RELEASE_SCHEDULE",
            "AVAILABILITY_RULES",
            "TEMPLATE_INPUT",
            "SETTINGS",
            "ACCOUNT",
            "CONTAINER_REGISTRY",
            "NOTIFICATION_CHANNEL",
            "NOTIFICATION_SUBSCRIPTION",
            "OAUTH_INTEGRATION",
            "GUARDRAIL_POLICY",
            "USER",
            "USER_GROUP",
            "CUSTOM_ROLE",
            "RESOURCE_GROUP",
            "PROJECT_TYPE",
            "MODULE",
            "WEB_COMPONENT",
            "UNKNOWN"
          ]
        },
        "entityLabel": {
          "type": "string"
        },
        "entityAction": {
          "type": "string",
          "enum": [
            "BLUEPRINT_CREATE",
            "BLUEPRINT_DELETE",
            "BLUEPRINT_UPDATE",
            "BLUEPRINT_RESOURCE_CREATE",
            "BLUEPRINT_RESOURCE_UPDATE",
            "BLUEPRINT_RESOURCE_RENAME",
            "BLUEPRINT_RESOURCE_DELETE",
            "BLUEPRINT_RESOURCE_ENABLE",
            "BLUEPRINT_RESOURCE_DISABLE",
            "BLUEPRINT_ADD_TEMPLATE",
            "BLUEPRINT_SECRETS_VARIABLES_CREATE",
            "BLUEPRINT_SECRETS_VARIABLES_UPDATE",
            "BLUEPRINT_SECRETS_VARIABLES_DELETE",
            "PROJECT_TYPE_CREATE",
            "PROJECT_TYPE_UPDATE",
            "PROJECT_TYPE_DELETE",
            "MODULE_UPLOAD",
            "MODULE_MARKED_AS_PUBLISHED",
            "MODULE_DELETE",
            "ENVIRONMENT_CREATE",
            "ENVIRONMENT_DELETE",
            "ENVIRONMENT_UPDATE",
            "CI_INTEGRATION_CREATE",
            "CI_INTEGRATION_UPDATE",
            "CI_INTEGRATION_DELETE",
            "CI_CD_CONFIGURE",
            "CI_RULE_CREATE",
            "CI_RULE_UPDATE",
            "CI_RULE_DELETE",
            "PROMOTION_WORKFLOW_CREATE",
            "PROMOTION_WORKFLOW_UPDATE",
            "PROMOTION_WORKFLOW_DELETE",
            "RELEASE_STREAM_CREATE",
            "RELEASE_STREAM_DELETE",
            "DELIVERY_PIPELINE_UPDATE",
            "OVERRIDE_UPDATE",
            "OVERRIDE_VERSION_ROLLBACK",
            "SECRETS_VARIABLES_UPDATE",
            "TEMPLATE_INPUT_CREATE",
            "TEMPLATE_INPUT_DELETE",
            "IAC_VERSION_UPDATE",
            "RELEASES_PAUSE",
            "RELEASES_RESUME",
            "RELEASE_SCHEDULE_CREATE",
            "RELEASE_SCHEDULE_UPDATE",
            "RELEASE_SCHEDULE_DELETE",
            "AVAILABILITY_RULES_CREATE",
            "AVAILABILITY_RULES_UPDATE",
            "AVAILABILITY_RULES_DELETE",
            "MAINTENANCE_WINDOW_UPDATE",
            "ENVIRONMENT_SETTINGS_UPDATE",
            "GENERAL_SETTINGS_UPDATE",
            "ACCOUNT_CREATE",
            "ACCOUNT_UPDATE",
            "ACCOUNT_DELETE",
            "CONTAINER_REGISTRY_CREATE",
            "CONTAINER_REGISTRY_UPDATE",
            "CONTAINER_REGISTRY_DELETE",
            "NOTIFICATION_SUBSCRIPTION_CREATE",
            "NOTIFICATION_SUBSCRIPTION_UPDATE",
            "NOTIFICATION_SUBSCRIPTION_DELETE",
            "NOTIFICATION_CHANNEL_CREATE",
            "NOTIFICATION_CHANNEL_UPDATE",
            "NOTIFICATION_CHANNEL_DELETE",
            "OAUTH_INTEGRATION_CREATE",
            "OAUTH_INTEGRATION_UPDATE",
            "OAUTH_INTEGRATION_DELETE",
            "ENVIRONMENT_RESOURCE_DISABLE",
            "ENVIRONMENT_RESOURCE_ENABLE",
            "APPLICATION_ROLLOUT_RESTART",
            "GUARDRAIL_POLICY_CREATE",
            "GUARDRAIL_POLICY_UPDATE",
            "GUARDRAIL_POLICY_DELETE",
            "USER_CREATE",
            "USER_UPDATE",
            "USER_DELETE",
            "USER_GROUP_CREATE",
            "USER_GROUP_UPDATE",
            "USER_GROUP_DELETE",
            "RESOURCE_GROUP_CREATE",
            "RESOURCE_GROUP_UPDATE",
            "RESOURCE_GROUP_DELETE",
            "CUSTOM_ROLE_CREATE",
            "CUSTOM_ROLE_UPDATE",
            "CUSTOM_ROLE_DELETE",
            "TRASH_RESTORE",
            "TRASH_DELETE",
            "TRASH_EMPTY",
            "WEB_COMPONENT_CREATE",
            "WEB_COMPONENT_UPDATE",
            "WEB_COMPONENT_DELETE",
            "ACTION_RUN",
            "UNKNOWN"
          ]
        },
        "entityActionLabel": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "clusterId": {
          "type": "string"
        },
        "clusterName": {
          "type": "string"
        },
        "stackName": {
          "type": "string"
        }
      }
    },
    "PageFacetsAuditLogResponse": {
      "type": "object",
      "properties": {
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "first": {
          "type": "boolean"
        },
        "pageable": {
          "$ref": "#/definitions/PageableObject"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsAuditLogResponse"
          }
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/SortObject"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "last": {
          "type": "boolean"
        },
        "empty": {
          "type": "boolean"
        }
      }
    },
    "CiArtifactResponse": {
      "type": "object",
      "properties": {
        "artifactId": {
          "type": "string"
        },
        "externalId": {
          "type": "string"
        },
        "artifactName": {
          "type": "string"
        },
        "artifactUri": {
          "type": "string"
        },
        "artifactory": {
          "type": "string"
        },
        "buildDescription": {
          "type": "string"
        },
        "createdOn": {
          "type": "string",
          "format": "date-time"
        },
        "versioningKey": {
          "type": "string"
        },
        "registrationValue": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "registrationType": {
          "type": "string",
          "enum": [
            "ENVIRONMENT",
            "RELEASE_STREAM",
            "HYBRID"
          ]
        },
        "appliedRuleVersionId": {
          "type": "string"
        },
        "appliedRuleId": {
          "type": "string"
        },
        "appliedRuleName": {
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "repositoryName": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "promoted": {
          "type": "boolean"
        },
        "classified": {
          "type": "boolean"
        }
      }
    },
    "Package": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "category": {
          "type": "integer",
          "format": "int32"
        },
        "stars": {
          "type": "integer",
          "format": "int32"
        },
        "official": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "deprecated": {
          "type": "boolean"
        },
        "signed": {
          "type": "boolean"
        },
        "ts": {
          "type": "integer",
          "format": "int64"
        },
        "repository": {
          "$ref": "#/definitions/Repository"
        },
        "package_id": {
          "type": "string"
        },
        "normalized_name": {
          "type": "string"
        },
        "logo_image_id": {
          "type": "string"
        },
        "app_version": {
          "type": "string"
        },
        "has_values_schema": {
          "type": "boolean"
        },
        "security_report_summary": {
          "$ref": "#/definitions/SecurityReportSummary"
        },
        "all_containers_images_whitelisted": {
          "type": "boolean"
        },
        "production_organizations_count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PackageResponse": {
      "type": "object",
      "properties": {
        "packages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Package"
          }
        }
      }
    },
    "Repository": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "kind": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "official": {
          "type": "boolean"
        },
        "display_name": {
          "type": "string"
        },
        "repository_id": {
          "type": "string"
        },
        "scanner_disabled": {
          "type": "boolean"
        },
        "organization_name": {
          "type": "string"
        },
        "verified_publisher": {
          "type": "boolean"
        },
        "organization_display_name": {
          "type": "string"
        }
      }
    },
    "SecurityReportSummary": {
      "type": "object",
      "properties": {
        "low": {
          "type": "integer",
          "format": "int32"
        },
        "high": {
          "type": "integer",
          "format": "int32"
        },
        "medium": {
          "type": "integer",
          "format": "int32"
        },
        "unknown": {
          "type": "integer",
          "format": "int32"
        },
        "critical": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ActionDto": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the action",
          "example": "build-action"
        },
        "description": {
          "type": "string",
          "description": "Description of what the action does",
          "example": "Builds and packages the application"
        },
        "params": {
          "type": "array",
          "description": "List of parameters that can be passed to the action",
          "items": {
            "$ref": "#/definitions/ActionParameterDto"
          }
        },
        "displayName": {
          "type": "string",
          "description": "Display name for the action",
          "example": "Build and Deploy Action"
        },
        "clusterId": {
          "type": "string",
          "description": "Cluster ID associated with the action"
        },
        "resourceType": {
          "type": "string",
          "description": "Resource type associated with the action"
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name associated with the action"
        }
      },
      "description": "Represents an action definition"
    },
    "ActionParameterDto": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the parameter",
          "example": "image-name"
        },
        "type": {
          "type": "string",
          "description": "Type of the parameter",
          "example": "string",
          "enum": [
            "string",
            "array",
            "object"
          ]
        },
        "description": {
          "type": "string",
          "description": "Description of the parameter",
          "example": "Docker image name to build"
        },
        "defaultValue": {
          "$ref": "#/definitions/ActionParameterValueDto"
        },
        "properties": {
          "uniqueItems": true,
          "type": "array",
          "description": "Properties for object type parameters. Only applicable when type is 'object'",
          "items": {
            "type": "string",
            "description": "Properties for object type parameters. Only applicable when type is 'object'"
          }
        }
      },
      "description": "Defines a parameter that can be passed to an action"
    },
    "StepLogDto": {
      "required": [
        "stepName"
      ],
      "type": "object",
      "properties": {
        "stepName": {
          "type": "string",
          "description": "Name of the step",
          "example": "build-step"
        },
        "logs": {
          "type": "string",
          "description": "Log output from the step execution",
          "example": "Building application..."
        }
      },
      "description": "Contains logs for a specific step in a Tekton task run"
    },
    "Account": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "creationDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedDate": {
          "type": "string",
          "format": "date-time"
        },
        "lastModifiedBy": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "accountType": {
          "type": "string",
          "enum": [
            "VERSION_CONTROL",
            "CLOUD",
            "CODER"
          ]
        },
        "provider": {
          "type": "string",
          "enum": [
            "GITHUB",
            "BITBUCKET",
            "GITLAB",
            "AWS",
            "AZURE",
            "GCP",
            "KUBERNETES",
            "CODER"
          ]
        },
        "changeLog": {
          "type": "string"
        },
        "systemDefined": {
          "type": "boolean"
        },
        "inUse": {
          "type": "boolean"
        },
        "associatedTo": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountAssociationInfo"
          }
        },
        "versioningKey": {
          "type": "string"
        }
      }
    },
    "VCSTokenDetailsResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "accountId": {
          "type": "string"
        },
        "accountName": {
          "type": "string"
        },
        "expired": {
          "type": "boolean"
        },
        "expiryDate": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GrantedAuthority": {
      "type": "object",
      "properties": {
        "authority": {
          "type": "string"
        }
      }
    },
    "SimpleOauth2User": {
      "type": "object",
      "properties": {
        "grantedAuthorities": {
          "type": "array",
          "writeOnly": true,
          "items": {
            "$ref": "#/definitions/GrantedAuthority"
          }
        },
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          }
        },
        "name": {
          "type": "string"
        },
        "allowedClusterIds": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "allowedStackNames": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "clusterRoleBinding": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "stackResources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/StackResource"
          }
        },
        "allowedAccounts": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userId": {
          "type": "string"
        },
        "authorities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GrantedAuthority"
          }
        },
        "associatedToResourceGroup": {
          "type": "boolean"
        }
      }
    },
    "StackResource": {
      "type": "object",
      "properties": {
        "stackName": {
          "type": "string"
        },
        "resources": {
          "uniqueItems": true,
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetsResource"
          }
        }
      }
    },
    "OverrideDelete": {
      "type": "object",
      "properties": {
        "clusterId": {
          "type": "string"
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "OverrideDeleteRequest": {
      "type": "object",
      "properties": {
        "resourceType": {
          "type": "string"
        },
        "resourceName": {
          "type": "string"
        },
        "deletions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OverrideDelete"
          }
        },
        "clusterIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },
  "security": [
    {
      "basicAuth": []
    }
  ],
  "tags": [
    {
      "name": "Variable Management",
      "description": "APIs for managing individual variables and secrets"
    },
    {
      "name": "UI Chat GPT Controller",
      "description": "Endpoints for Chat GPT operations"
    }
  ]
}