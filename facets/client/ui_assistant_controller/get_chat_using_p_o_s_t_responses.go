// Code generated by go-swagger; DO NOT EDIT.

package ui_assistant_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetChatUsingPOSTReader is a Reader for the GetChatUsingPOST structure.
type GetChatUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChatUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChatUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewGetChatUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetChatUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChatUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChatUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v2/assistant/{threadId}/getChat] getChatUsingPOST", response, response.Code())
	}
}

// NewGetChatUsingPOSTOK creates a GetChatUsingPOSTOK with default headers values
func NewGetChatUsingPOSTOK() *GetChatUsingPOSTOK {
	return &GetChatUsingPOSTOK{}
}

/*
GetChatUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type GetChatUsingPOSTOK struct {
	Payload *models.AssistantResponse
}

// IsSuccess returns true when this get chat using p o s t o k response has a 2xx status code
func (o *GetChatUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chat using p o s t o k response has a 3xx status code
func (o *GetChatUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat using p o s t o k response has a 4xx status code
func (o *GetChatUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chat using p o s t o k response has a 5xx status code
func (o *GetChatUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat using p o s t o k response a status code equal to that given
func (o *GetChatUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chat using p o s t o k response
func (o *GetChatUsingPOSTOK) Code() int {
	return 200
}

func (o *GetChatUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTOK %s", 200, payload)
}

func (o *GetChatUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTOK %s", 200, payload)
}

func (o *GetChatUsingPOSTOK) GetPayload() *models.AssistantResponse {
	return o.Payload
}

func (o *GetChatUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AssistantResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatUsingPOSTCreated creates a GetChatUsingPOSTCreated with default headers values
func NewGetChatUsingPOSTCreated() *GetChatUsingPOSTCreated {
	return &GetChatUsingPOSTCreated{}
}

/*
GetChatUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type GetChatUsingPOSTCreated struct {
}

// IsSuccess returns true when this get chat using p o s t created response has a 2xx status code
func (o *GetChatUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chat using p o s t created response has a 3xx status code
func (o *GetChatUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat using p o s t created response has a 4xx status code
func (o *GetChatUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chat using p o s t created response has a 5xx status code
func (o *GetChatUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat using p o s t created response a status code equal to that given
func (o *GetChatUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the get chat using p o s t created response
func (o *GetChatUsingPOSTCreated) Code() int {
	return 201
}

func (o *GetChatUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTCreated", 201)
}

func (o *GetChatUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTCreated", 201)
}

func (o *GetChatUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChatUsingPOSTUnauthorized creates a GetChatUsingPOSTUnauthorized with default headers values
func NewGetChatUsingPOSTUnauthorized() *GetChatUsingPOSTUnauthorized {
	return &GetChatUsingPOSTUnauthorized{}
}

/*
GetChatUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetChatUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this get chat using p o s t unauthorized response has a 2xx status code
func (o *GetChatUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chat using p o s t unauthorized response has a 3xx status code
func (o *GetChatUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat using p o s t unauthorized response has a 4xx status code
func (o *GetChatUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chat using p o s t unauthorized response has a 5xx status code
func (o *GetChatUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat using p o s t unauthorized response a status code equal to that given
func (o *GetChatUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get chat using p o s t unauthorized response
func (o *GetChatUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *GetChatUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTUnauthorized", 401)
}

func (o *GetChatUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTUnauthorized", 401)
}

func (o *GetChatUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChatUsingPOSTForbidden creates a GetChatUsingPOSTForbidden with default headers values
func NewGetChatUsingPOSTForbidden() *GetChatUsingPOSTForbidden {
	return &GetChatUsingPOSTForbidden{}
}

/*
GetChatUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetChatUsingPOSTForbidden struct {
}

// IsSuccess returns true when this get chat using p o s t forbidden response has a 2xx status code
func (o *GetChatUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chat using p o s t forbidden response has a 3xx status code
func (o *GetChatUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat using p o s t forbidden response has a 4xx status code
func (o *GetChatUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chat using p o s t forbidden response has a 5xx status code
func (o *GetChatUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat using p o s t forbidden response a status code equal to that given
func (o *GetChatUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get chat using p o s t forbidden response
func (o *GetChatUsingPOSTForbidden) Code() int {
	return 403
}

func (o *GetChatUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTForbidden", 403)
}

func (o *GetChatUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTForbidden", 403)
}

func (o *GetChatUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChatUsingPOSTNotFound creates a GetChatUsingPOSTNotFound with default headers values
func NewGetChatUsingPOSTNotFound() *GetChatUsingPOSTNotFound {
	return &GetChatUsingPOSTNotFound{}
}

/*
GetChatUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetChatUsingPOSTNotFound struct {
}

// IsSuccess returns true when this get chat using p o s t not found response has a 2xx status code
func (o *GetChatUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chat using p o s t not found response has a 3xx status code
func (o *GetChatUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat using p o s t not found response has a 4xx status code
func (o *GetChatUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chat using p o s t not found response has a 5xx status code
func (o *GetChatUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat using p o s t not found response a status code equal to that given
func (o *GetChatUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chat using p o s t not found response
func (o *GetChatUsingPOSTNotFound) Code() int {
	return 404
}

func (o *GetChatUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTNotFound", 404)
}

func (o *GetChatUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v2/assistant/{threadId}/getChat][%d] getChatUsingPOSTNotFound", 404)
}

func (o *GetChatUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
