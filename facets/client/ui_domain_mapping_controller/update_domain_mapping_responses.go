// Code generated by go-swagger; DO NOT EDIT.

package ui_domain_mapping_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateDomainMappingReader is a Reader for the UpdateDomainMapping structure.
type UpdateDomainMappingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDomainMappingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDomainMappingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateDomainMappingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDomainMappingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateDomainMappingMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateDomainMappingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}] updateDomainMapping", response, response.Code())
	}
}

// NewUpdateDomainMappingOK creates a UpdateDomainMappingOK with default headers values
func NewUpdateDomainMappingOK() *UpdateDomainMappingOK {
	return &UpdateDomainMappingOK{}
}

/*
UpdateDomainMappingOK describes a response with status code 200, with default header values.

OK
*/
type UpdateDomainMappingOK struct {
}

// IsSuccess returns true when this update domain mapping o k response has a 2xx status code
func (o *UpdateDomainMappingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update domain mapping o k response has a 3xx status code
func (o *UpdateDomainMappingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain mapping o k response has a 4xx status code
func (o *UpdateDomainMappingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update domain mapping o k response has a 5xx status code
func (o *UpdateDomainMappingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain mapping o k response a status code equal to that given
func (o *UpdateDomainMappingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update domain mapping o k response
func (o *UpdateDomainMappingOK) Code() int {
	return 200
}

func (o *UpdateDomainMappingOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingOK", 200)
}

func (o *UpdateDomainMappingOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingOK", 200)
}

func (o *UpdateDomainMappingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDomainMappingBadRequest creates a UpdateDomainMappingBadRequest with default headers values
func NewUpdateDomainMappingBadRequest() *UpdateDomainMappingBadRequest {
	return &UpdateDomainMappingBadRequest{}
}

/*
UpdateDomainMappingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateDomainMappingBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update domain mapping bad request response has a 2xx status code
func (o *UpdateDomainMappingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update domain mapping bad request response has a 3xx status code
func (o *UpdateDomainMappingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain mapping bad request response has a 4xx status code
func (o *UpdateDomainMappingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update domain mapping bad request response has a 5xx status code
func (o *UpdateDomainMappingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain mapping bad request response a status code equal to that given
func (o *UpdateDomainMappingBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update domain mapping bad request response
func (o *UpdateDomainMappingBadRequest) Code() int {
	return 400
}

func (o *UpdateDomainMappingBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingBadRequest %s", 400, payload)
}

func (o *UpdateDomainMappingBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingBadRequest %s", 400, payload)
}

func (o *UpdateDomainMappingBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateDomainMappingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDomainMappingNotFound creates a UpdateDomainMappingNotFound with default headers values
func NewUpdateDomainMappingNotFound() *UpdateDomainMappingNotFound {
	return &UpdateDomainMappingNotFound{}
}

/*
UpdateDomainMappingNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateDomainMappingNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update domain mapping not found response has a 2xx status code
func (o *UpdateDomainMappingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update domain mapping not found response has a 3xx status code
func (o *UpdateDomainMappingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain mapping not found response has a 4xx status code
func (o *UpdateDomainMappingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update domain mapping not found response has a 5xx status code
func (o *UpdateDomainMappingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain mapping not found response a status code equal to that given
func (o *UpdateDomainMappingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update domain mapping not found response
func (o *UpdateDomainMappingNotFound) Code() int {
	return 404
}

func (o *UpdateDomainMappingNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingNotFound %s", 404, payload)
}

func (o *UpdateDomainMappingNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingNotFound %s", 404, payload)
}

func (o *UpdateDomainMappingNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateDomainMappingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDomainMappingMethodNotAllowed creates a UpdateDomainMappingMethodNotAllowed with default headers values
func NewUpdateDomainMappingMethodNotAllowed() *UpdateDomainMappingMethodNotAllowed {
	return &UpdateDomainMappingMethodNotAllowed{}
}

/*
UpdateDomainMappingMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateDomainMappingMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update domain mapping method not allowed response has a 2xx status code
func (o *UpdateDomainMappingMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update domain mapping method not allowed response has a 3xx status code
func (o *UpdateDomainMappingMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain mapping method not allowed response has a 4xx status code
func (o *UpdateDomainMappingMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update domain mapping method not allowed response has a 5xx status code
func (o *UpdateDomainMappingMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update domain mapping method not allowed response a status code equal to that given
func (o *UpdateDomainMappingMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update domain mapping method not allowed response
func (o *UpdateDomainMappingMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateDomainMappingMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingMethodNotAllowed %s", 405, payload)
}

func (o *UpdateDomainMappingMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingMethodNotAllowed %s", 405, payload)
}

func (o *UpdateDomainMappingMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateDomainMappingMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDomainMappingInternalServerError creates a UpdateDomainMappingInternalServerError with default headers values
func NewUpdateDomainMappingInternalServerError() *UpdateDomainMappingInternalServerError {
	return &UpdateDomainMappingInternalServerError{}
}

/*
UpdateDomainMappingInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateDomainMappingInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update domain mapping internal server error response has a 2xx status code
func (o *UpdateDomainMappingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update domain mapping internal server error response has a 3xx status code
func (o *UpdateDomainMappingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update domain mapping internal server error response has a 4xx status code
func (o *UpdateDomainMappingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update domain mapping internal server error response has a 5xx status code
func (o *UpdateDomainMappingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update domain mapping internal server error response a status code equal to that given
func (o *UpdateDomainMappingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update domain mapping internal server error response
func (o *UpdateDomainMappingInternalServerError) Code() int {
	return 500
}

func (o *UpdateDomainMappingInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingInternalServerError %s", 500, payload)
}

func (o *UpdateDomainMappingInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] updateDomainMappingInternalServerError %s", 500, payload)
}

func (o *UpdateDomainMappingInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateDomainMappingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
