// Code generated by go-swagger; DO NOT EDIT.

package ui_domain_mapping_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteDomainMappingUsingDELETEReader is a Reader for the DeleteDomainMappingUsingDELETE structure.
type DeleteDomainMappingUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDomainMappingUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDomainMappingUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteDomainMappingUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteDomainMappingUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteDomainMappingUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}] deleteDomainMappingUsingDELETE", response, response.Code())
	}
}

// NewDeleteDomainMappingUsingDELETEOK creates a DeleteDomainMappingUsingDELETEOK with default headers values
func NewDeleteDomainMappingUsingDELETEOK() *DeleteDomainMappingUsingDELETEOK {
	return &DeleteDomainMappingUsingDELETEOK{}
}

/*
DeleteDomainMappingUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type DeleteDomainMappingUsingDELETEOK struct {
}

// IsSuccess returns true when this delete domain mapping using d e l e t e o k response has a 2xx status code
func (o *DeleteDomainMappingUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete domain mapping using d e l e t e o k response has a 3xx status code
func (o *DeleteDomainMappingUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping using d e l e t e o k response has a 4xx status code
func (o *DeleteDomainMappingUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete domain mapping using d e l e t e o k response has a 5xx status code
func (o *DeleteDomainMappingUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping using d e l e t e o k response a status code equal to that given
func (o *DeleteDomainMappingUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete domain mapping using d e l e t e o k response
func (o *DeleteDomainMappingUsingDELETEOK) Code() int {
	return 200
}

func (o *DeleteDomainMappingUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETEOK", 200)
}

func (o *DeleteDomainMappingUsingDELETEOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETEOK", 200)
}

func (o *DeleteDomainMappingUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDomainMappingUsingDELETENoContent creates a DeleteDomainMappingUsingDELETENoContent with default headers values
func NewDeleteDomainMappingUsingDELETENoContent() *DeleteDomainMappingUsingDELETENoContent {
	return &DeleteDomainMappingUsingDELETENoContent{}
}

/*
DeleteDomainMappingUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteDomainMappingUsingDELETENoContent struct {
}

// IsSuccess returns true when this delete domain mapping using d e l e t e no content response has a 2xx status code
func (o *DeleteDomainMappingUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete domain mapping using d e l e t e no content response has a 3xx status code
func (o *DeleteDomainMappingUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping using d e l e t e no content response has a 4xx status code
func (o *DeleteDomainMappingUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete domain mapping using d e l e t e no content response has a 5xx status code
func (o *DeleteDomainMappingUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping using d e l e t e no content response a status code equal to that given
func (o *DeleteDomainMappingUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete domain mapping using d e l e t e no content response
func (o *DeleteDomainMappingUsingDELETENoContent) Code() int {
	return 204
}

func (o *DeleteDomainMappingUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETENoContent", 204)
}

func (o *DeleteDomainMappingUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETENoContent", 204)
}

func (o *DeleteDomainMappingUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDomainMappingUsingDELETEUnauthorized creates a DeleteDomainMappingUsingDELETEUnauthorized with default headers values
func NewDeleteDomainMappingUsingDELETEUnauthorized() *DeleteDomainMappingUsingDELETEUnauthorized {
	return &DeleteDomainMappingUsingDELETEUnauthorized{}
}

/*
DeleteDomainMappingUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteDomainMappingUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete domain mapping using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteDomainMappingUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete domain mapping using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteDomainMappingUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteDomainMappingUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete domain mapping using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteDomainMappingUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteDomainMappingUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete domain mapping using d e l e t e unauthorized response
func (o *DeleteDomainMappingUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *DeleteDomainMappingUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETEUnauthorized", 401)
}

func (o *DeleteDomainMappingUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETEUnauthorized", 401)
}

func (o *DeleteDomainMappingUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDomainMappingUsingDELETEForbidden creates a DeleteDomainMappingUsingDELETEForbidden with default headers values
func NewDeleteDomainMappingUsingDELETEForbidden() *DeleteDomainMappingUsingDELETEForbidden {
	return &DeleteDomainMappingUsingDELETEForbidden{}
}

/*
DeleteDomainMappingUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteDomainMappingUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete domain mapping using d e l e t e forbidden response has a 2xx status code
func (o *DeleteDomainMappingUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete domain mapping using d e l e t e forbidden response has a 3xx status code
func (o *DeleteDomainMappingUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping using d e l e t e forbidden response has a 4xx status code
func (o *DeleteDomainMappingUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete domain mapping using d e l e t e forbidden response has a 5xx status code
func (o *DeleteDomainMappingUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping using d e l e t e forbidden response a status code equal to that given
func (o *DeleteDomainMappingUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete domain mapping using d e l e t e forbidden response
func (o *DeleteDomainMappingUsingDELETEForbidden) Code() int {
	return 403
}

func (o *DeleteDomainMappingUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETEForbidden", 403)
}

func (o *DeleteDomainMappingUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingUsingDELETEForbidden", 403)
}

func (o *DeleteDomainMappingUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
