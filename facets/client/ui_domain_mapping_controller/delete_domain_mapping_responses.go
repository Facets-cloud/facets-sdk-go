// Code generated by go-swagger; DO NOT EDIT.

package ui_domain_mapping_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteDomainMappingReader is a Reader for the DeleteDomainMapping structure.
type DeleteDomainMappingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDomainMappingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteDomainMappingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteDomainMappingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteDomainMappingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteDomainMappingMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteDomainMappingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}] deleteDomainMapping", response, response.Code())
	}
}

// NewDeleteDomainMappingOK creates a DeleteDomainMappingOK with default headers values
func NewDeleteDomainMappingOK() *DeleteDomainMappingOK {
	return &DeleteDomainMappingOK{}
}

/*
DeleteDomainMappingOK describes a response with status code 200, with default header values.

OK
*/
type DeleteDomainMappingOK struct {
}

// IsSuccess returns true when this delete domain mapping o k response has a 2xx status code
func (o *DeleteDomainMappingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete domain mapping o k response has a 3xx status code
func (o *DeleteDomainMappingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping o k response has a 4xx status code
func (o *DeleteDomainMappingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete domain mapping o k response has a 5xx status code
func (o *DeleteDomainMappingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping o k response a status code equal to that given
func (o *DeleteDomainMappingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete domain mapping o k response
func (o *DeleteDomainMappingOK) Code() int {
	return 200
}

func (o *DeleteDomainMappingOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingOK", 200)
}

func (o *DeleteDomainMappingOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingOK", 200)
}

func (o *DeleteDomainMappingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDomainMappingBadRequest creates a DeleteDomainMappingBadRequest with default headers values
func NewDeleteDomainMappingBadRequest() *DeleteDomainMappingBadRequest {
	return &DeleteDomainMappingBadRequest{}
}

/*
DeleteDomainMappingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteDomainMappingBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete domain mapping bad request response has a 2xx status code
func (o *DeleteDomainMappingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete domain mapping bad request response has a 3xx status code
func (o *DeleteDomainMappingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping bad request response has a 4xx status code
func (o *DeleteDomainMappingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete domain mapping bad request response has a 5xx status code
func (o *DeleteDomainMappingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping bad request response a status code equal to that given
func (o *DeleteDomainMappingBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete domain mapping bad request response
func (o *DeleteDomainMappingBadRequest) Code() int {
	return 400
}

func (o *DeleteDomainMappingBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingBadRequest %s", 400, payload)
}

func (o *DeleteDomainMappingBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingBadRequest %s", 400, payload)
}

func (o *DeleteDomainMappingBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteDomainMappingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDomainMappingNotFound creates a DeleteDomainMappingNotFound with default headers values
func NewDeleteDomainMappingNotFound() *DeleteDomainMappingNotFound {
	return &DeleteDomainMappingNotFound{}
}

/*
DeleteDomainMappingNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteDomainMappingNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete domain mapping not found response has a 2xx status code
func (o *DeleteDomainMappingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete domain mapping not found response has a 3xx status code
func (o *DeleteDomainMappingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping not found response has a 4xx status code
func (o *DeleteDomainMappingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete domain mapping not found response has a 5xx status code
func (o *DeleteDomainMappingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping not found response a status code equal to that given
func (o *DeleteDomainMappingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete domain mapping not found response
func (o *DeleteDomainMappingNotFound) Code() int {
	return 404
}

func (o *DeleteDomainMappingNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingNotFound %s", 404, payload)
}

func (o *DeleteDomainMappingNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingNotFound %s", 404, payload)
}

func (o *DeleteDomainMappingNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteDomainMappingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDomainMappingMethodNotAllowed creates a DeleteDomainMappingMethodNotAllowed with default headers values
func NewDeleteDomainMappingMethodNotAllowed() *DeleteDomainMappingMethodNotAllowed {
	return &DeleteDomainMappingMethodNotAllowed{}
}

/*
DeleteDomainMappingMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteDomainMappingMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete domain mapping method not allowed response has a 2xx status code
func (o *DeleteDomainMappingMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete domain mapping method not allowed response has a 3xx status code
func (o *DeleteDomainMappingMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping method not allowed response has a 4xx status code
func (o *DeleteDomainMappingMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete domain mapping method not allowed response has a 5xx status code
func (o *DeleteDomainMappingMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete domain mapping method not allowed response a status code equal to that given
func (o *DeleteDomainMappingMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete domain mapping method not allowed response
func (o *DeleteDomainMappingMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteDomainMappingMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingMethodNotAllowed %s", 405, payload)
}

func (o *DeleteDomainMappingMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingMethodNotAllowed %s", 405, payload)
}

func (o *DeleteDomainMappingMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteDomainMappingMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDomainMappingInternalServerError creates a DeleteDomainMappingInternalServerError with default headers values
func NewDeleteDomainMappingInternalServerError() *DeleteDomainMappingInternalServerError {
	return &DeleteDomainMappingInternalServerError{}
}

/*
DeleteDomainMappingInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteDomainMappingInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete domain mapping internal server error response has a 2xx status code
func (o *DeleteDomainMappingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete domain mapping internal server error response has a 3xx status code
func (o *DeleteDomainMappingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete domain mapping internal server error response has a 4xx status code
func (o *DeleteDomainMappingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete domain mapping internal server error response has a 5xx status code
func (o *DeleteDomainMappingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete domain mapping internal server error response a status code equal to that given
func (o *DeleteDomainMappingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete domain mapping internal server error response
func (o *DeleteDomainMappingInternalServerError) Code() int {
	return 500
}

func (o *DeleteDomainMappingInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingInternalServerError %s", 500, payload)
}

func (o *DeleteDomainMappingInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/domain-mapping/clusterId/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] deleteDomainMappingInternalServerError %s", 500, payload)
}

func (o *DeleteDomainMappingInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteDomainMappingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
