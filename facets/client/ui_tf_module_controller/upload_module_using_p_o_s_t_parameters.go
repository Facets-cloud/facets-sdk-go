// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_module_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUploadModuleUsingPOSTParams creates a new UploadModuleUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUploadModuleUsingPOSTParams() *UploadModuleUsingPOSTParams {
	return &UploadModuleUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUploadModuleUsingPOSTParamsWithTimeout creates a new UploadModuleUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewUploadModuleUsingPOSTParamsWithTimeout(timeout time.Duration) *UploadModuleUsingPOSTParams {
	return &UploadModuleUsingPOSTParams{
		timeout: timeout,
	}
}

// NewUploadModuleUsingPOSTParamsWithContext creates a new UploadModuleUsingPOSTParams object
// with the ability to set a context for a request.
func NewUploadModuleUsingPOSTParamsWithContext(ctx context.Context) *UploadModuleUsingPOSTParams {
	return &UploadModuleUsingPOSTParams{
		Context: ctx,
	}
}

// NewUploadModuleUsingPOSTParamsWithHTTPClient creates a new UploadModuleUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUploadModuleUsingPOSTParamsWithHTTPClient(client *http.Client) *UploadModuleUsingPOSTParams {
	return &UploadModuleUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
UploadModuleUsingPOSTParams contains all the parameters to send to the API endpoint

	for the upload module using p o s t operation.

	Typically these are written to a http.Request.
*/
type UploadModuleUsingPOSTParams struct {

	/* File.

	   file
	*/
	File runtime.NamedReadCloser

	/* Metadata.

	   metadata
	*/
	Metadata *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upload module using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadModuleUsingPOSTParams) WithDefaults() *UploadModuleUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upload module using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UploadModuleUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) WithTimeout(timeout time.Duration) *UploadModuleUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) WithContext(ctx context.Context) *UploadModuleUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) WithHTTPClient(client *http.Client) *UploadModuleUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithFile adds the file to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) WithFile(file runtime.NamedReadCloser) *UploadModuleUsingPOSTParams {
	o.SetFile(file)
	return o
}

// SetFile adds the file to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) SetFile(file runtime.NamedReadCloser) {
	o.File = file
}

// WithMetadata adds the metadata to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) WithMetadata(metadata *string) *UploadModuleUsingPOSTParams {
	o.SetMetadata(metadata)
	return o
}

// SetMetadata adds the metadata to the upload module using p o s t params
func (o *UploadModuleUsingPOSTParams) SetMetadata(metadata *string) {
	o.Metadata = metadata
}

// WriteToRequest writes these params to a swagger request
func (o *UploadModuleUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	// form file param file
	if err := r.SetFileParam("file", o.File); err != nil {
		return err
	}

	if o.Metadata != nil {

		// form param metadata
		var frMetadata string
		if o.Metadata != nil {
			frMetadata = *o.Metadata
		}
		fMetadata := frMetadata
		if fMetadata != "" {
			if err := r.SetFormParam("metadata", fMetadata); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
