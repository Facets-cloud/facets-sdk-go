// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_module_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// BootstrapModulesUsingPOSTReader is a Reader for the BootstrapModulesUsingPOST structure.
type BootstrapModulesUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BootstrapModulesUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBootstrapModulesUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewBootstrapModulesUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBootstrapModulesUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBootstrapModulesUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBootstrapModulesUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBootstrapModulesUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBootstrapModulesUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/modules/bootstrap] bootstrapModulesUsingPOST", response, response.Code())
	}
}

// NewBootstrapModulesUsingPOSTOK creates a BootstrapModulesUsingPOSTOK with default headers values
func NewBootstrapModulesUsingPOSTOK() *BootstrapModulesUsingPOSTOK {
	return &BootstrapModulesUsingPOSTOK{}
}

/*
BootstrapModulesUsingPOSTOK describes a response with status code 200, with default header values.

Operation successful
*/
type BootstrapModulesUsingPOSTOK struct {
	Payload map[string][]string
}

// IsSuccess returns true when this bootstrap modules using p o s t o k response has a 2xx status code
func (o *BootstrapModulesUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bootstrap modules using p o s t o k response has a 3xx status code
func (o *BootstrapModulesUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules using p o s t o k response has a 4xx status code
func (o *BootstrapModulesUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this bootstrap modules using p o s t o k response has a 5xx status code
func (o *BootstrapModulesUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules using p o s t o k response a status code equal to that given
func (o *BootstrapModulesUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the bootstrap modules using p o s t o k response
func (o *BootstrapModulesUsingPOSTOK) Code() int {
	return 200
}

func (o *BootstrapModulesUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTOK %s", 200, payload)
}

func (o *BootstrapModulesUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTOK %s", 200, payload)
}

func (o *BootstrapModulesUsingPOSTOK) GetPayload() map[string][]string {
	return o.Payload
}

func (o *BootstrapModulesUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapModulesUsingPOSTCreated creates a BootstrapModulesUsingPOSTCreated with default headers values
func NewBootstrapModulesUsingPOSTCreated() *BootstrapModulesUsingPOSTCreated {
	return &BootstrapModulesUsingPOSTCreated{}
}

/*
BootstrapModulesUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type BootstrapModulesUsingPOSTCreated struct {
}

// IsSuccess returns true when this bootstrap modules using p o s t created response has a 2xx status code
func (o *BootstrapModulesUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bootstrap modules using p o s t created response has a 3xx status code
func (o *BootstrapModulesUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules using p o s t created response has a 4xx status code
func (o *BootstrapModulesUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this bootstrap modules using p o s t created response has a 5xx status code
func (o *BootstrapModulesUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules using p o s t created response a status code equal to that given
func (o *BootstrapModulesUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the bootstrap modules using p o s t created response
func (o *BootstrapModulesUsingPOSTCreated) Code() int {
	return 201
}

func (o *BootstrapModulesUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTCreated", 201)
}

func (o *BootstrapModulesUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTCreated", 201)
}

func (o *BootstrapModulesUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBootstrapModulesUsingPOSTBadRequest creates a BootstrapModulesUsingPOSTBadRequest with default headers values
func NewBootstrapModulesUsingPOSTBadRequest() *BootstrapModulesUsingPOSTBadRequest {
	return &BootstrapModulesUsingPOSTBadRequest{}
}

/*
BootstrapModulesUsingPOSTBadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type BootstrapModulesUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this bootstrap modules using p o s t bad request response has a 2xx status code
func (o *BootstrapModulesUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules using p o s t bad request response has a 3xx status code
func (o *BootstrapModulesUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules using p o s t bad request response has a 4xx status code
func (o *BootstrapModulesUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this bootstrap modules using p o s t bad request response has a 5xx status code
func (o *BootstrapModulesUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules using p o s t bad request response a status code equal to that given
func (o *BootstrapModulesUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the bootstrap modules using p o s t bad request response
func (o *BootstrapModulesUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *BootstrapModulesUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTBadRequest", 400)
}

func (o *BootstrapModulesUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTBadRequest", 400)
}

func (o *BootstrapModulesUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBootstrapModulesUsingPOSTUnauthorized creates a BootstrapModulesUsingPOSTUnauthorized with default headers values
func NewBootstrapModulesUsingPOSTUnauthorized() *BootstrapModulesUsingPOSTUnauthorized {
	return &BootstrapModulesUsingPOSTUnauthorized{}
}

/*
BootstrapModulesUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BootstrapModulesUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this bootstrap modules using p o s t unauthorized response has a 2xx status code
func (o *BootstrapModulesUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules using p o s t unauthorized response has a 3xx status code
func (o *BootstrapModulesUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules using p o s t unauthorized response has a 4xx status code
func (o *BootstrapModulesUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this bootstrap modules using p o s t unauthorized response has a 5xx status code
func (o *BootstrapModulesUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules using p o s t unauthorized response a status code equal to that given
func (o *BootstrapModulesUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the bootstrap modules using p o s t unauthorized response
func (o *BootstrapModulesUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *BootstrapModulesUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTUnauthorized", 401)
}

func (o *BootstrapModulesUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTUnauthorized", 401)
}

func (o *BootstrapModulesUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBootstrapModulesUsingPOSTForbidden creates a BootstrapModulesUsingPOSTForbidden with default headers values
func NewBootstrapModulesUsingPOSTForbidden() *BootstrapModulesUsingPOSTForbidden {
	return &BootstrapModulesUsingPOSTForbidden{}
}

/*
BootstrapModulesUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BootstrapModulesUsingPOSTForbidden struct {
}

// IsSuccess returns true when this bootstrap modules using p o s t forbidden response has a 2xx status code
func (o *BootstrapModulesUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules using p o s t forbidden response has a 3xx status code
func (o *BootstrapModulesUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules using p o s t forbidden response has a 4xx status code
func (o *BootstrapModulesUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this bootstrap modules using p o s t forbidden response has a 5xx status code
func (o *BootstrapModulesUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules using p o s t forbidden response a status code equal to that given
func (o *BootstrapModulesUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the bootstrap modules using p o s t forbidden response
func (o *BootstrapModulesUsingPOSTForbidden) Code() int {
	return 403
}

func (o *BootstrapModulesUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTForbidden", 403)
}

func (o *BootstrapModulesUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTForbidden", 403)
}

func (o *BootstrapModulesUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBootstrapModulesUsingPOSTNotFound creates a BootstrapModulesUsingPOSTNotFound with default headers values
func NewBootstrapModulesUsingPOSTNotFound() *BootstrapModulesUsingPOSTNotFound {
	return &BootstrapModulesUsingPOSTNotFound{}
}

/*
BootstrapModulesUsingPOSTNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type BootstrapModulesUsingPOSTNotFound struct {
}

// IsSuccess returns true when this bootstrap modules using p o s t not found response has a 2xx status code
func (o *BootstrapModulesUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules using p o s t not found response has a 3xx status code
func (o *BootstrapModulesUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules using p o s t not found response has a 4xx status code
func (o *BootstrapModulesUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this bootstrap modules using p o s t not found response has a 5xx status code
func (o *BootstrapModulesUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules using p o s t not found response a status code equal to that given
func (o *BootstrapModulesUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the bootstrap modules using p o s t not found response
func (o *BootstrapModulesUsingPOSTNotFound) Code() int {
	return 404
}

func (o *BootstrapModulesUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTNotFound", 404)
}

func (o *BootstrapModulesUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTNotFound", 404)
}

func (o *BootstrapModulesUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBootstrapModulesUsingPOSTInternalServerError creates a BootstrapModulesUsingPOSTInternalServerError with default headers values
func NewBootstrapModulesUsingPOSTInternalServerError() *BootstrapModulesUsingPOSTInternalServerError {
	return &BootstrapModulesUsingPOSTInternalServerError{}
}

/*
BootstrapModulesUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type BootstrapModulesUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this bootstrap modules using p o s t internal server error response has a 2xx status code
func (o *BootstrapModulesUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules using p o s t internal server error response has a 3xx status code
func (o *BootstrapModulesUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules using p o s t internal server error response has a 4xx status code
func (o *BootstrapModulesUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this bootstrap modules using p o s t internal server error response has a 5xx status code
func (o *BootstrapModulesUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this bootstrap modules using p o s t internal server error response a status code equal to that given
func (o *BootstrapModulesUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the bootstrap modules using p o s t internal server error response
func (o *BootstrapModulesUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *BootstrapModulesUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTInternalServerError", 500)
}

func (o *BootstrapModulesUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesUsingPOSTInternalServerError", 500)
}

func (o *BootstrapModulesUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
