// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_module_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllModulesLiteUsingGETReader is a Reader for the GetAllModulesLiteUsingGET structure.
type GetAllModulesLiteUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllModulesLiteUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllModulesLiteUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllModulesLiteUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllModulesLiteUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllModulesLiteUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/modules/modules-lite] getAllModulesLiteUsingGET", response, response.Code())
	}
}

// NewGetAllModulesLiteUsingGETOK creates a GetAllModulesLiteUsingGETOK with default headers values
func NewGetAllModulesLiteUsingGETOK() *GetAllModulesLiteUsingGETOK {
	return &GetAllModulesLiteUsingGETOK{}
}

/*
GetAllModulesLiteUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllModulesLiteUsingGETOK struct {
	Payload []*models.TFModuleLiteDTO
}

// IsSuccess returns true when this get all modules lite using g e t o k response has a 2xx status code
func (o *GetAllModulesLiteUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all modules lite using g e t o k response has a 3xx status code
func (o *GetAllModulesLiteUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite using g e t o k response has a 4xx status code
func (o *GetAllModulesLiteUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all modules lite using g e t o k response has a 5xx status code
func (o *GetAllModulesLiteUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite using g e t o k response a status code equal to that given
func (o *GetAllModulesLiteUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all modules lite using g e t o k response
func (o *GetAllModulesLiteUsingGETOK) Code() int {
	return 200
}

func (o *GetAllModulesLiteUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETOK %s", 200, payload)
}

func (o *GetAllModulesLiteUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETOK %s", 200, payload)
}

func (o *GetAllModulesLiteUsingGETOK) GetPayload() []*models.TFModuleLiteDTO {
	return o.Payload
}

func (o *GetAllModulesLiteUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllModulesLiteUsingGETUnauthorized creates a GetAllModulesLiteUsingGETUnauthorized with default headers values
func NewGetAllModulesLiteUsingGETUnauthorized() *GetAllModulesLiteUsingGETUnauthorized {
	return &GetAllModulesLiteUsingGETUnauthorized{}
}

/*
GetAllModulesLiteUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllModulesLiteUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all modules lite using g e t unauthorized response has a 2xx status code
func (o *GetAllModulesLiteUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all modules lite using g e t unauthorized response has a 3xx status code
func (o *GetAllModulesLiteUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite using g e t unauthorized response has a 4xx status code
func (o *GetAllModulesLiteUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all modules lite using g e t unauthorized response has a 5xx status code
func (o *GetAllModulesLiteUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite using g e t unauthorized response a status code equal to that given
func (o *GetAllModulesLiteUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all modules lite using g e t unauthorized response
func (o *GetAllModulesLiteUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllModulesLiteUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETUnauthorized", 401)
}

func (o *GetAllModulesLiteUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETUnauthorized", 401)
}

func (o *GetAllModulesLiteUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllModulesLiteUsingGETForbidden creates a GetAllModulesLiteUsingGETForbidden with default headers values
func NewGetAllModulesLiteUsingGETForbidden() *GetAllModulesLiteUsingGETForbidden {
	return &GetAllModulesLiteUsingGETForbidden{}
}

/*
GetAllModulesLiteUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllModulesLiteUsingGETForbidden struct {
}

// IsSuccess returns true when this get all modules lite using g e t forbidden response has a 2xx status code
func (o *GetAllModulesLiteUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all modules lite using g e t forbidden response has a 3xx status code
func (o *GetAllModulesLiteUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite using g e t forbidden response has a 4xx status code
func (o *GetAllModulesLiteUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all modules lite using g e t forbidden response has a 5xx status code
func (o *GetAllModulesLiteUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite using g e t forbidden response a status code equal to that given
func (o *GetAllModulesLiteUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all modules lite using g e t forbidden response
func (o *GetAllModulesLiteUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllModulesLiteUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETForbidden", 403)
}

func (o *GetAllModulesLiteUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETForbidden", 403)
}

func (o *GetAllModulesLiteUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllModulesLiteUsingGETNotFound creates a GetAllModulesLiteUsingGETNotFound with default headers values
func NewGetAllModulesLiteUsingGETNotFound() *GetAllModulesLiteUsingGETNotFound {
	return &GetAllModulesLiteUsingGETNotFound{}
}

/*
GetAllModulesLiteUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllModulesLiteUsingGETNotFound struct {
}

// IsSuccess returns true when this get all modules lite using g e t not found response has a 2xx status code
func (o *GetAllModulesLiteUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all modules lite using g e t not found response has a 3xx status code
func (o *GetAllModulesLiteUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite using g e t not found response has a 4xx status code
func (o *GetAllModulesLiteUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all modules lite using g e t not found response has a 5xx status code
func (o *GetAllModulesLiteUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite using g e t not found response a status code equal to that given
func (o *GetAllModulesLiteUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all modules lite using g e t not found response
func (o *GetAllModulesLiteUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllModulesLiteUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETNotFound", 404)
}

func (o *GetAllModulesLiteUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteUsingGETNotFound", 404)
}

func (o *GetAllModulesLiteUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
