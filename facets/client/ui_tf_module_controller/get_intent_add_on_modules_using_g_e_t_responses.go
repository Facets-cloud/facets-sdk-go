// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_module_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetIntentAddOnModulesUsingGETReader is a Reader for the GetIntentAddOnModulesUsingGET structure.
type GetIntentAddOnModulesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIntentAddOnModulesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIntentAddOnModulesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIntentAddOnModulesUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetIntentAddOnModulesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIntentAddOnModulesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIntentAddOnModulesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetIntentAddOnModulesUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons] getIntentAddOnModulesUsingGET", response, response.Code())
	}
}

// NewGetIntentAddOnModulesUsingGETOK creates a GetIntentAddOnModulesUsingGETOK with default headers values
func NewGetIntentAddOnModulesUsingGETOK() *GetIntentAddOnModulesUsingGETOK {
	return &GetIntentAddOnModulesUsingGETOK{}
}

/*
GetIntentAddOnModulesUsingGETOK describes a response with status code 200, with default header values.

Operation successful
*/
type GetIntentAddOnModulesUsingGETOK struct {
	Payload []*models.TFModuleLiteDTO
}

// IsSuccess returns true when this get intent add on modules using g e t o k response has a 2xx status code
func (o *GetIntentAddOnModulesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get intent add on modules using g e t o k response has a 3xx status code
func (o *GetIntentAddOnModulesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intent add on modules using g e t o k response has a 4xx status code
func (o *GetIntentAddOnModulesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get intent add on modules using g e t o k response has a 5xx status code
func (o *GetIntentAddOnModulesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get intent add on modules using g e t o k response a status code equal to that given
func (o *GetIntentAddOnModulesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get intent add on modules using g e t o k response
func (o *GetIntentAddOnModulesUsingGETOK) Code() int {
	return 200
}

func (o *GetIntentAddOnModulesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETOK %s", 200, payload)
}

func (o *GetIntentAddOnModulesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETOK %s", 200, payload)
}

func (o *GetIntentAddOnModulesUsingGETOK) GetPayload() []*models.TFModuleLiteDTO {
	return o.Payload
}

func (o *GetIntentAddOnModulesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIntentAddOnModulesUsingGETBadRequest creates a GetIntentAddOnModulesUsingGETBadRequest with default headers values
func NewGetIntentAddOnModulesUsingGETBadRequest() *GetIntentAddOnModulesUsingGETBadRequest {
	return &GetIntentAddOnModulesUsingGETBadRequest{}
}

/*
GetIntentAddOnModulesUsingGETBadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type GetIntentAddOnModulesUsingGETBadRequest struct {
}

// IsSuccess returns true when this get intent add on modules using g e t bad request response has a 2xx status code
func (o *GetIntentAddOnModulesUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intent add on modules using g e t bad request response has a 3xx status code
func (o *GetIntentAddOnModulesUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intent add on modules using g e t bad request response has a 4xx status code
func (o *GetIntentAddOnModulesUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intent add on modules using g e t bad request response has a 5xx status code
func (o *GetIntentAddOnModulesUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get intent add on modules using g e t bad request response a status code equal to that given
func (o *GetIntentAddOnModulesUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get intent add on modules using g e t bad request response
func (o *GetIntentAddOnModulesUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetIntentAddOnModulesUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETBadRequest", 400)
}

func (o *GetIntentAddOnModulesUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETBadRequest", 400)
}

func (o *GetIntentAddOnModulesUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIntentAddOnModulesUsingGETUnauthorized creates a GetIntentAddOnModulesUsingGETUnauthorized with default headers values
func NewGetIntentAddOnModulesUsingGETUnauthorized() *GetIntentAddOnModulesUsingGETUnauthorized {
	return &GetIntentAddOnModulesUsingGETUnauthorized{}
}

/*
GetIntentAddOnModulesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIntentAddOnModulesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get intent add on modules using g e t unauthorized response has a 2xx status code
func (o *GetIntentAddOnModulesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intent add on modules using g e t unauthorized response has a 3xx status code
func (o *GetIntentAddOnModulesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intent add on modules using g e t unauthorized response has a 4xx status code
func (o *GetIntentAddOnModulesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intent add on modules using g e t unauthorized response has a 5xx status code
func (o *GetIntentAddOnModulesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get intent add on modules using g e t unauthorized response a status code equal to that given
func (o *GetIntentAddOnModulesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get intent add on modules using g e t unauthorized response
func (o *GetIntentAddOnModulesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetIntentAddOnModulesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETUnauthorized", 401)
}

func (o *GetIntentAddOnModulesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETUnauthorized", 401)
}

func (o *GetIntentAddOnModulesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIntentAddOnModulesUsingGETForbidden creates a GetIntentAddOnModulesUsingGETForbidden with default headers values
func NewGetIntentAddOnModulesUsingGETForbidden() *GetIntentAddOnModulesUsingGETForbidden {
	return &GetIntentAddOnModulesUsingGETForbidden{}
}

/*
GetIntentAddOnModulesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIntentAddOnModulesUsingGETForbidden struct {
}

// IsSuccess returns true when this get intent add on modules using g e t forbidden response has a 2xx status code
func (o *GetIntentAddOnModulesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intent add on modules using g e t forbidden response has a 3xx status code
func (o *GetIntentAddOnModulesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intent add on modules using g e t forbidden response has a 4xx status code
func (o *GetIntentAddOnModulesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intent add on modules using g e t forbidden response has a 5xx status code
func (o *GetIntentAddOnModulesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get intent add on modules using g e t forbidden response a status code equal to that given
func (o *GetIntentAddOnModulesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get intent add on modules using g e t forbidden response
func (o *GetIntentAddOnModulesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetIntentAddOnModulesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETForbidden", 403)
}

func (o *GetIntentAddOnModulesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETForbidden", 403)
}

func (o *GetIntentAddOnModulesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIntentAddOnModulesUsingGETNotFound creates a GetIntentAddOnModulesUsingGETNotFound with default headers values
func NewGetIntentAddOnModulesUsingGETNotFound() *GetIntentAddOnModulesUsingGETNotFound {
	return &GetIntentAddOnModulesUsingGETNotFound{}
}

/*
GetIntentAddOnModulesUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetIntentAddOnModulesUsingGETNotFound struct {
}

// IsSuccess returns true when this get intent add on modules using g e t not found response has a 2xx status code
func (o *GetIntentAddOnModulesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intent add on modules using g e t not found response has a 3xx status code
func (o *GetIntentAddOnModulesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intent add on modules using g e t not found response has a 4xx status code
func (o *GetIntentAddOnModulesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get intent add on modules using g e t not found response has a 5xx status code
func (o *GetIntentAddOnModulesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get intent add on modules using g e t not found response a status code equal to that given
func (o *GetIntentAddOnModulesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get intent add on modules using g e t not found response
func (o *GetIntentAddOnModulesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetIntentAddOnModulesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETNotFound", 404)
}

func (o *GetIntentAddOnModulesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETNotFound", 404)
}

func (o *GetIntentAddOnModulesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIntentAddOnModulesUsingGETInternalServerError creates a GetIntentAddOnModulesUsingGETInternalServerError with default headers values
func NewGetIntentAddOnModulesUsingGETInternalServerError() *GetIntentAddOnModulesUsingGETInternalServerError {
	return &GetIntentAddOnModulesUsingGETInternalServerError{}
}

/*
GetIntentAddOnModulesUsingGETInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetIntentAddOnModulesUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get intent add on modules using g e t internal server error response has a 2xx status code
func (o *GetIntentAddOnModulesUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get intent add on modules using g e t internal server error response has a 3xx status code
func (o *GetIntentAddOnModulesUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get intent add on modules using g e t internal server error response has a 4xx status code
func (o *GetIntentAddOnModulesUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get intent add on modules using g e t internal server error response has a 5xx status code
func (o *GetIntentAddOnModulesUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get intent add on modules using g e t internal server error response a status code equal to that given
func (o *GetIntentAddOnModulesUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get intent add on modules using g e t internal server error response
func (o *GetIntentAddOnModulesUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetIntentAddOnModulesUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETInternalServerError", 500)
}

func (o *GetIntentAddOnModulesUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/intent/{intent}/flavor/{flavor}/add-ons][%d] getIntentAddOnModulesUsingGETInternalServerError", 500)
}

func (o *GetIntentAddOnModulesUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
