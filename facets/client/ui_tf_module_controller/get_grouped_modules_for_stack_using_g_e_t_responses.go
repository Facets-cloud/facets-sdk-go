// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_module_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetGroupedModulesForStackUsingGETReader is a Reader for the GetGroupedModulesForStackUsingGET structure.
type GetGroupedModulesForStackUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGroupedModulesForStackUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGroupedModulesForStackUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGroupedModulesForStackUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGroupedModulesForStackUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGroupedModulesForStackUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGroupedModulesForStackUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGroupedModulesForStackUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/modules/stack/{stackName}/grouped] getGroupedModulesForStackUsingGET", response, response.Code())
	}
}

// NewGetGroupedModulesForStackUsingGETOK creates a GetGroupedModulesForStackUsingGETOK with default headers values
func NewGetGroupedModulesForStackUsingGETOK() *GetGroupedModulesForStackUsingGETOK {
	return &GetGroupedModulesForStackUsingGETOK{}
}

/*
GetGroupedModulesForStackUsingGETOK describes a response with status code 200, with default header values.

Operation successful
*/
type GetGroupedModulesForStackUsingGETOK struct {
	Payload *models.ListResourcesResponse
}

// IsSuccess returns true when this get grouped modules for stack using g e t o k response has a 2xx status code
func (o *GetGroupedModulesForStackUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get grouped modules for stack using g e t o k response has a 3xx status code
func (o *GetGroupedModulesForStackUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get grouped modules for stack using g e t o k response has a 4xx status code
func (o *GetGroupedModulesForStackUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get grouped modules for stack using g e t o k response has a 5xx status code
func (o *GetGroupedModulesForStackUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get grouped modules for stack using g e t o k response a status code equal to that given
func (o *GetGroupedModulesForStackUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get grouped modules for stack using g e t o k response
func (o *GetGroupedModulesForStackUsingGETOK) Code() int {
	return 200
}

func (o *GetGroupedModulesForStackUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETOK %s", 200, payload)
}

func (o *GetGroupedModulesForStackUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETOK %s", 200, payload)
}

func (o *GetGroupedModulesForStackUsingGETOK) GetPayload() *models.ListResourcesResponse {
	return o.Payload
}

func (o *GetGroupedModulesForStackUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListResourcesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGroupedModulesForStackUsingGETBadRequest creates a GetGroupedModulesForStackUsingGETBadRequest with default headers values
func NewGetGroupedModulesForStackUsingGETBadRequest() *GetGroupedModulesForStackUsingGETBadRequest {
	return &GetGroupedModulesForStackUsingGETBadRequest{}
}

/*
GetGroupedModulesForStackUsingGETBadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type GetGroupedModulesForStackUsingGETBadRequest struct {
}

// IsSuccess returns true when this get grouped modules for stack using g e t bad request response has a 2xx status code
func (o *GetGroupedModulesForStackUsingGETBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get grouped modules for stack using g e t bad request response has a 3xx status code
func (o *GetGroupedModulesForStackUsingGETBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get grouped modules for stack using g e t bad request response has a 4xx status code
func (o *GetGroupedModulesForStackUsingGETBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get grouped modules for stack using g e t bad request response has a 5xx status code
func (o *GetGroupedModulesForStackUsingGETBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get grouped modules for stack using g e t bad request response a status code equal to that given
func (o *GetGroupedModulesForStackUsingGETBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get grouped modules for stack using g e t bad request response
func (o *GetGroupedModulesForStackUsingGETBadRequest) Code() int {
	return 400
}

func (o *GetGroupedModulesForStackUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETBadRequest", 400)
}

func (o *GetGroupedModulesForStackUsingGETBadRequest) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETBadRequest", 400)
}

func (o *GetGroupedModulesForStackUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupedModulesForStackUsingGETUnauthorized creates a GetGroupedModulesForStackUsingGETUnauthorized with default headers values
func NewGetGroupedModulesForStackUsingGETUnauthorized() *GetGroupedModulesForStackUsingGETUnauthorized {
	return &GetGroupedModulesForStackUsingGETUnauthorized{}
}

/*
GetGroupedModulesForStackUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetGroupedModulesForStackUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get grouped modules for stack using g e t unauthorized response has a 2xx status code
func (o *GetGroupedModulesForStackUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get grouped modules for stack using g e t unauthorized response has a 3xx status code
func (o *GetGroupedModulesForStackUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get grouped modules for stack using g e t unauthorized response has a 4xx status code
func (o *GetGroupedModulesForStackUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get grouped modules for stack using g e t unauthorized response has a 5xx status code
func (o *GetGroupedModulesForStackUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get grouped modules for stack using g e t unauthorized response a status code equal to that given
func (o *GetGroupedModulesForStackUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get grouped modules for stack using g e t unauthorized response
func (o *GetGroupedModulesForStackUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetGroupedModulesForStackUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETUnauthorized", 401)
}

func (o *GetGroupedModulesForStackUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETUnauthorized", 401)
}

func (o *GetGroupedModulesForStackUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupedModulesForStackUsingGETForbidden creates a GetGroupedModulesForStackUsingGETForbidden with default headers values
func NewGetGroupedModulesForStackUsingGETForbidden() *GetGroupedModulesForStackUsingGETForbidden {
	return &GetGroupedModulesForStackUsingGETForbidden{}
}

/*
GetGroupedModulesForStackUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGroupedModulesForStackUsingGETForbidden struct {
}

// IsSuccess returns true when this get grouped modules for stack using g e t forbidden response has a 2xx status code
func (o *GetGroupedModulesForStackUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get grouped modules for stack using g e t forbidden response has a 3xx status code
func (o *GetGroupedModulesForStackUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get grouped modules for stack using g e t forbidden response has a 4xx status code
func (o *GetGroupedModulesForStackUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get grouped modules for stack using g e t forbidden response has a 5xx status code
func (o *GetGroupedModulesForStackUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get grouped modules for stack using g e t forbidden response a status code equal to that given
func (o *GetGroupedModulesForStackUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get grouped modules for stack using g e t forbidden response
func (o *GetGroupedModulesForStackUsingGETForbidden) Code() int {
	return 403
}

func (o *GetGroupedModulesForStackUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETForbidden", 403)
}

func (o *GetGroupedModulesForStackUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETForbidden", 403)
}

func (o *GetGroupedModulesForStackUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupedModulesForStackUsingGETNotFound creates a GetGroupedModulesForStackUsingGETNotFound with default headers values
func NewGetGroupedModulesForStackUsingGETNotFound() *GetGroupedModulesForStackUsingGETNotFound {
	return &GetGroupedModulesForStackUsingGETNotFound{}
}

/*
GetGroupedModulesForStackUsingGETNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetGroupedModulesForStackUsingGETNotFound struct {
}

// IsSuccess returns true when this get grouped modules for stack using g e t not found response has a 2xx status code
func (o *GetGroupedModulesForStackUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get grouped modules for stack using g e t not found response has a 3xx status code
func (o *GetGroupedModulesForStackUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get grouped modules for stack using g e t not found response has a 4xx status code
func (o *GetGroupedModulesForStackUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get grouped modules for stack using g e t not found response has a 5xx status code
func (o *GetGroupedModulesForStackUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get grouped modules for stack using g e t not found response a status code equal to that given
func (o *GetGroupedModulesForStackUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get grouped modules for stack using g e t not found response
func (o *GetGroupedModulesForStackUsingGETNotFound) Code() int {
	return 404
}

func (o *GetGroupedModulesForStackUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETNotFound", 404)
}

func (o *GetGroupedModulesForStackUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETNotFound", 404)
}

func (o *GetGroupedModulesForStackUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetGroupedModulesForStackUsingGETInternalServerError creates a GetGroupedModulesForStackUsingGETInternalServerError with default headers values
func NewGetGroupedModulesForStackUsingGETInternalServerError() *GetGroupedModulesForStackUsingGETInternalServerError {
	return &GetGroupedModulesForStackUsingGETInternalServerError{}
}

/*
GetGroupedModulesForStackUsingGETInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetGroupedModulesForStackUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get grouped modules for stack using g e t internal server error response has a 2xx status code
func (o *GetGroupedModulesForStackUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get grouped modules for stack using g e t internal server error response has a 3xx status code
func (o *GetGroupedModulesForStackUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get grouped modules for stack using g e t internal server error response has a 4xx status code
func (o *GetGroupedModulesForStackUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get grouped modules for stack using g e t internal server error response has a 5xx status code
func (o *GetGroupedModulesForStackUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get grouped modules for stack using g e t internal server error response a status code equal to that given
func (o *GetGroupedModulesForStackUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get grouped modules for stack using g e t internal server error response
func (o *GetGroupedModulesForStackUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetGroupedModulesForStackUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETInternalServerError", 500)
}

func (o *GetGroupedModulesForStackUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/modules/stack/{stackName}/grouped][%d] getGroupedModulesForStackUsingGETInternalServerError", 500)
}

func (o *GetGroupedModulesForStackUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
