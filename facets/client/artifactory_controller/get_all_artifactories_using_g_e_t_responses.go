// Code generated by go-swagger; DO NOT EDIT.

package artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllArtifactoriesUsingGETReader is a Reader for the GetAllArtifactoriesUsingGET structure.
type GetAllArtifactoriesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllArtifactoriesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllArtifactoriesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllArtifactoriesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllArtifactoriesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllArtifactoriesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/artifactories] getAllArtifactoriesUsingGET", response, response.Code())
	}
}

// NewGetAllArtifactoriesUsingGETOK creates a GetAllArtifactoriesUsingGETOK with default headers values
func NewGetAllArtifactoriesUsingGETOK() *GetAllArtifactoriesUsingGETOK {
	return &GetAllArtifactoriesUsingGETOK{}
}

/*
GetAllArtifactoriesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllArtifactoriesUsingGETOK struct {
	Payload []*models.Artifactory
}

// IsSuccess returns true when this get all artifactories using g e t o k response has a 2xx status code
func (o *GetAllArtifactoriesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all artifactories using g e t o k response has a 3xx status code
func (o *GetAllArtifactoriesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifactories using g e t o k response has a 4xx status code
func (o *GetAllArtifactoriesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all artifactories using g e t o k response has a 5xx status code
func (o *GetAllArtifactoriesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifactories using g e t o k response a status code equal to that given
func (o *GetAllArtifactoriesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all artifactories using g e t o k response
func (o *GetAllArtifactoriesUsingGETOK) Code() int {
	return 200
}

func (o *GetAllArtifactoriesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETOK %s", 200, payload)
}

func (o *GetAllArtifactoriesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETOK %s", 200, payload)
}

func (o *GetAllArtifactoriesUsingGETOK) GetPayload() []*models.Artifactory {
	return o.Payload
}

func (o *GetAllArtifactoriesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllArtifactoriesUsingGETUnauthorized creates a GetAllArtifactoriesUsingGETUnauthorized with default headers values
func NewGetAllArtifactoriesUsingGETUnauthorized() *GetAllArtifactoriesUsingGETUnauthorized {
	return &GetAllArtifactoriesUsingGETUnauthorized{}
}

/*
GetAllArtifactoriesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllArtifactoriesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all artifactories using g e t unauthorized response has a 2xx status code
func (o *GetAllArtifactoriesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifactories using g e t unauthorized response has a 3xx status code
func (o *GetAllArtifactoriesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifactories using g e t unauthorized response has a 4xx status code
func (o *GetAllArtifactoriesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifactories using g e t unauthorized response has a 5xx status code
func (o *GetAllArtifactoriesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifactories using g e t unauthorized response a status code equal to that given
func (o *GetAllArtifactoriesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all artifactories using g e t unauthorized response
func (o *GetAllArtifactoriesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllArtifactoriesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETUnauthorized", 401)
}

func (o *GetAllArtifactoriesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETUnauthorized", 401)
}

func (o *GetAllArtifactoriesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllArtifactoriesUsingGETForbidden creates a GetAllArtifactoriesUsingGETForbidden with default headers values
func NewGetAllArtifactoriesUsingGETForbidden() *GetAllArtifactoriesUsingGETForbidden {
	return &GetAllArtifactoriesUsingGETForbidden{}
}

/*
GetAllArtifactoriesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllArtifactoriesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all artifactories using g e t forbidden response has a 2xx status code
func (o *GetAllArtifactoriesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifactories using g e t forbidden response has a 3xx status code
func (o *GetAllArtifactoriesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifactories using g e t forbidden response has a 4xx status code
func (o *GetAllArtifactoriesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifactories using g e t forbidden response has a 5xx status code
func (o *GetAllArtifactoriesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifactories using g e t forbidden response a status code equal to that given
func (o *GetAllArtifactoriesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all artifactories using g e t forbidden response
func (o *GetAllArtifactoriesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllArtifactoriesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETForbidden", 403)
}

func (o *GetAllArtifactoriesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETForbidden", 403)
}

func (o *GetAllArtifactoriesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllArtifactoriesUsingGETNotFound creates a GetAllArtifactoriesUsingGETNotFound with default headers values
func NewGetAllArtifactoriesUsingGETNotFound() *GetAllArtifactoriesUsingGETNotFound {
	return &GetAllArtifactoriesUsingGETNotFound{}
}

/*
GetAllArtifactoriesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllArtifactoriesUsingGETNotFound struct {
}

// IsSuccess returns true when this get all artifactories using g e t not found response has a 2xx status code
func (o *GetAllArtifactoriesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifactories using g e t not found response has a 3xx status code
func (o *GetAllArtifactoriesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifactories using g e t not found response has a 4xx status code
func (o *GetAllArtifactoriesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifactories using g e t not found response has a 5xx status code
func (o *GetAllArtifactoriesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifactories using g e t not found response a status code equal to that given
func (o *GetAllArtifactoriesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all artifactories using g e t not found response
func (o *GetAllArtifactoriesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllArtifactoriesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETNotFound", 404)
}

func (o *GetAllArtifactoriesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/artifactories][%d] getAllArtifactoriesUsingGETNotFound", 404)
}

func (o *GetAllArtifactoriesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
