// Code generated by go-swagger; DO NOT EDIT.

package ui_billing_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewBuySupportPlanParams creates a new BuySupportPlanParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewBuySupportPlanParams() *BuySupportPlanParams {
	return &BuySupportPlanParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewBuySupportPlanParamsWithTimeout creates a new BuySupportPlanParams object
// with the ability to set a timeout on a request.
func NewBuySupportPlanParamsWithTimeout(timeout time.Duration) *BuySupportPlanParams {
	return &BuySupportPlanParams{
		timeout: timeout,
	}
}

// NewBuySupportPlanParamsWithContext creates a new BuySupportPlanParams object
// with the ability to set a context for a request.
func NewBuySupportPlanParamsWithContext(ctx context.Context) *BuySupportPlanParams {
	return &BuySupportPlanParams{
		Context: ctx,
	}
}

// NewBuySupportPlanParamsWithHTTPClient creates a new BuySupportPlanParams object
// with the ability to set a custom HTTPClient for a request.
func NewBuySupportPlanParamsWithHTTPClient(client *http.Client) *BuySupportPlanParams {
	return &BuySupportPlanParams{
		HTTPClient: client,
	}
}

/*
BuySupportPlanParams contains all the parameters to send to the API endpoint

	for the buy support plan operation.

	Typically these are written to a http.Request.
*/
type BuySupportPlanParams struct {

	// CancelURL.
	CancelURL string

	// SuccessURL.
	SuccessURL string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the buy support plan params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BuySupportPlanParams) WithDefaults() *BuySupportPlanParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the buy support plan params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *BuySupportPlanParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the buy support plan params
func (o *BuySupportPlanParams) WithTimeout(timeout time.Duration) *BuySupportPlanParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the buy support plan params
func (o *BuySupportPlanParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the buy support plan params
func (o *BuySupportPlanParams) WithContext(ctx context.Context) *BuySupportPlanParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the buy support plan params
func (o *BuySupportPlanParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the buy support plan params
func (o *BuySupportPlanParams) WithHTTPClient(client *http.Client) *BuySupportPlanParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the buy support plan params
func (o *BuySupportPlanParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCancelURL adds the cancelURL to the buy support plan params
func (o *BuySupportPlanParams) WithCancelURL(cancelURL string) *BuySupportPlanParams {
	o.SetCancelURL(cancelURL)
	return o
}

// SetCancelURL adds the cancelUrl to the buy support plan params
func (o *BuySupportPlanParams) SetCancelURL(cancelURL string) {
	o.CancelURL = cancelURL
}

// WithSuccessURL adds the successURL to the buy support plan params
func (o *BuySupportPlanParams) WithSuccessURL(successURL string) *BuySupportPlanParams {
	o.SetSuccessURL(successURL)
	return o
}

// SetSuccessURL adds the successUrl to the buy support plan params
func (o *BuySupportPlanParams) SetSuccessURL(successURL string) {
	o.SuccessURL = successURL
}

// WriteToRequest writes these params to a swagger request
func (o *BuySupportPlanParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param cancelUrl
	qrCancelURL := o.CancelURL
	qCancelURL := qrCancelURL
	if qCancelURL != "" {

		if err := r.SetQueryParam("cancelUrl", qCancelURL); err != nil {
			return err
		}
	}

	// query param successUrl
	qrSuccessURL := o.SuccessURL
	qSuccessURL := qrSuccessURL
	if qSuccessURL != "" {

		if err := r.SetQueryParam("successUrl", qSuccessURL); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
