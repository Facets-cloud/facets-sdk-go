// Code generated by go-swagger; DO NOT EDIT.

package ui_billing_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetBillingMetadataReader is a Reader for the GetBillingMetadata structure.
type GetBillingMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBillingMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBillingMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetBillingMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBillingMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetBillingMetadataMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetBillingMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/billing/metadata] getBillingMetadata", response, response.Code())
	}
}

// NewGetBillingMetadataOK creates a GetBillingMetadataOK with default headers values
func NewGetBillingMetadataOK() *GetBillingMetadataOK {
	return &GetBillingMetadataOK{}
}

/*
GetBillingMetadataOK describes a response with status code 200, with default header values.

OK
*/
type GetBillingMetadataOK struct {
	Payload []*models.BillingMetadata
}

// IsSuccess returns true when this get billing metadata o k response has a 2xx status code
func (o *GetBillingMetadataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get billing metadata o k response has a 3xx status code
func (o *GetBillingMetadataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing metadata o k response has a 4xx status code
func (o *GetBillingMetadataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get billing metadata o k response has a 5xx status code
func (o *GetBillingMetadataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing metadata o k response a status code equal to that given
func (o *GetBillingMetadataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get billing metadata o k response
func (o *GetBillingMetadataOK) Code() int {
	return 200
}

func (o *GetBillingMetadataOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataOK %s", 200, payload)
}

func (o *GetBillingMetadataOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataOK %s", 200, payload)
}

func (o *GetBillingMetadataOK) GetPayload() []*models.BillingMetadata {
	return o.Payload
}

func (o *GetBillingMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingMetadataBadRequest creates a GetBillingMetadataBadRequest with default headers values
func NewGetBillingMetadataBadRequest() *GetBillingMetadataBadRequest {
	return &GetBillingMetadataBadRequest{}
}

/*
GetBillingMetadataBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetBillingMetadataBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get billing metadata bad request response has a 2xx status code
func (o *GetBillingMetadataBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing metadata bad request response has a 3xx status code
func (o *GetBillingMetadataBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing metadata bad request response has a 4xx status code
func (o *GetBillingMetadataBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing metadata bad request response has a 5xx status code
func (o *GetBillingMetadataBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing metadata bad request response a status code equal to that given
func (o *GetBillingMetadataBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get billing metadata bad request response
func (o *GetBillingMetadataBadRequest) Code() int {
	return 400
}

func (o *GetBillingMetadataBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataBadRequest %s", 400, payload)
}

func (o *GetBillingMetadataBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataBadRequest %s", 400, payload)
}

func (o *GetBillingMetadataBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetBillingMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingMetadataNotFound creates a GetBillingMetadataNotFound with default headers values
func NewGetBillingMetadataNotFound() *GetBillingMetadataNotFound {
	return &GetBillingMetadataNotFound{}
}

/*
GetBillingMetadataNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBillingMetadataNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get billing metadata not found response has a 2xx status code
func (o *GetBillingMetadataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing metadata not found response has a 3xx status code
func (o *GetBillingMetadataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing metadata not found response has a 4xx status code
func (o *GetBillingMetadataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing metadata not found response has a 5xx status code
func (o *GetBillingMetadataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing metadata not found response a status code equal to that given
func (o *GetBillingMetadataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get billing metadata not found response
func (o *GetBillingMetadataNotFound) Code() int {
	return 404
}

func (o *GetBillingMetadataNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataNotFound %s", 404, payload)
}

func (o *GetBillingMetadataNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataNotFound %s", 404, payload)
}

func (o *GetBillingMetadataNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetBillingMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingMetadataMethodNotAllowed creates a GetBillingMetadataMethodNotAllowed with default headers values
func NewGetBillingMetadataMethodNotAllowed() *GetBillingMetadataMethodNotAllowed {
	return &GetBillingMetadataMethodNotAllowed{}
}

/*
GetBillingMetadataMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetBillingMetadataMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get billing metadata method not allowed response has a 2xx status code
func (o *GetBillingMetadataMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing metadata method not allowed response has a 3xx status code
func (o *GetBillingMetadataMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing metadata method not allowed response has a 4xx status code
func (o *GetBillingMetadataMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get billing metadata method not allowed response has a 5xx status code
func (o *GetBillingMetadataMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get billing metadata method not allowed response a status code equal to that given
func (o *GetBillingMetadataMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get billing metadata method not allowed response
func (o *GetBillingMetadataMethodNotAllowed) Code() int {
	return 405
}

func (o *GetBillingMetadataMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataMethodNotAllowed %s", 405, payload)
}

func (o *GetBillingMetadataMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataMethodNotAllowed %s", 405, payload)
}

func (o *GetBillingMetadataMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetBillingMetadataMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBillingMetadataInternalServerError creates a GetBillingMetadataInternalServerError with default headers values
func NewGetBillingMetadataInternalServerError() *GetBillingMetadataInternalServerError {
	return &GetBillingMetadataInternalServerError{}
}

/*
GetBillingMetadataInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetBillingMetadataInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get billing metadata internal server error response has a 2xx status code
func (o *GetBillingMetadataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get billing metadata internal server error response has a 3xx status code
func (o *GetBillingMetadataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get billing metadata internal server error response has a 4xx status code
func (o *GetBillingMetadataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get billing metadata internal server error response has a 5xx status code
func (o *GetBillingMetadataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get billing metadata internal server error response a status code equal to that given
func (o *GetBillingMetadataInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get billing metadata internal server error response
func (o *GetBillingMetadataInternalServerError) Code() int {
	return 500
}

func (o *GetBillingMetadataInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataInternalServerError %s", 500, payload)
}

func (o *GetBillingMetadataInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/metadata][%d] getBillingMetadataInternalServerError %s", 500, payload)
}

func (o *GetBillingMetadataInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetBillingMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
