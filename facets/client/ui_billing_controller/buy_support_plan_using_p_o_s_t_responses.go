// Code generated by go-swagger; DO NOT EDIT.

package ui_billing_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// BuySupportPlanUsingPOSTReader is a Reader for the BuySupportPlanUsingPOST structure.
type BuySupportPlanUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BuySupportPlanUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBuySupportPlanUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewBuySupportPlanUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewBuySupportPlanUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewBuySupportPlanUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBuySupportPlanUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/billing/buy-support-plan] buySupportPlanUsingPOST", response, response.Code())
	}
}

// NewBuySupportPlanUsingPOSTOK creates a BuySupportPlanUsingPOSTOK with default headers values
func NewBuySupportPlanUsingPOSTOK() *BuySupportPlanUsingPOSTOK {
	return &BuySupportPlanUsingPOSTOK{}
}

/*
BuySupportPlanUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type BuySupportPlanUsingPOSTOK struct {
	Payload string
}

// IsSuccess returns true when this buy support plan using p o s t o k response has a 2xx status code
func (o *BuySupportPlanUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this buy support plan using p o s t o k response has a 3xx status code
func (o *BuySupportPlanUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this buy support plan using p o s t o k response has a 4xx status code
func (o *BuySupportPlanUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this buy support plan using p o s t o k response has a 5xx status code
func (o *BuySupportPlanUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this buy support plan using p o s t o k response a status code equal to that given
func (o *BuySupportPlanUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the buy support plan using p o s t o k response
func (o *BuySupportPlanUsingPOSTOK) Code() int {
	return 200
}

func (o *BuySupportPlanUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTOK %s", 200, payload)
}

func (o *BuySupportPlanUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTOK %s", 200, payload)
}

func (o *BuySupportPlanUsingPOSTOK) GetPayload() string {
	return o.Payload
}

func (o *BuySupportPlanUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBuySupportPlanUsingPOSTCreated creates a BuySupportPlanUsingPOSTCreated with default headers values
func NewBuySupportPlanUsingPOSTCreated() *BuySupportPlanUsingPOSTCreated {
	return &BuySupportPlanUsingPOSTCreated{}
}

/*
BuySupportPlanUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type BuySupportPlanUsingPOSTCreated struct {
}

// IsSuccess returns true when this buy support plan using p o s t created response has a 2xx status code
func (o *BuySupportPlanUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this buy support plan using p o s t created response has a 3xx status code
func (o *BuySupportPlanUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this buy support plan using p o s t created response has a 4xx status code
func (o *BuySupportPlanUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this buy support plan using p o s t created response has a 5xx status code
func (o *BuySupportPlanUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this buy support plan using p o s t created response a status code equal to that given
func (o *BuySupportPlanUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the buy support plan using p o s t created response
func (o *BuySupportPlanUsingPOSTCreated) Code() int {
	return 201
}

func (o *BuySupportPlanUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTCreated", 201)
}

func (o *BuySupportPlanUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTCreated", 201)
}

func (o *BuySupportPlanUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBuySupportPlanUsingPOSTUnauthorized creates a BuySupportPlanUsingPOSTUnauthorized with default headers values
func NewBuySupportPlanUsingPOSTUnauthorized() *BuySupportPlanUsingPOSTUnauthorized {
	return &BuySupportPlanUsingPOSTUnauthorized{}
}

/*
BuySupportPlanUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type BuySupportPlanUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this buy support plan using p o s t unauthorized response has a 2xx status code
func (o *BuySupportPlanUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this buy support plan using p o s t unauthorized response has a 3xx status code
func (o *BuySupportPlanUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this buy support plan using p o s t unauthorized response has a 4xx status code
func (o *BuySupportPlanUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this buy support plan using p o s t unauthorized response has a 5xx status code
func (o *BuySupportPlanUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this buy support plan using p o s t unauthorized response a status code equal to that given
func (o *BuySupportPlanUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the buy support plan using p o s t unauthorized response
func (o *BuySupportPlanUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *BuySupportPlanUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTUnauthorized", 401)
}

func (o *BuySupportPlanUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTUnauthorized", 401)
}

func (o *BuySupportPlanUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBuySupportPlanUsingPOSTForbidden creates a BuySupportPlanUsingPOSTForbidden with default headers values
func NewBuySupportPlanUsingPOSTForbidden() *BuySupportPlanUsingPOSTForbidden {
	return &BuySupportPlanUsingPOSTForbidden{}
}

/*
BuySupportPlanUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type BuySupportPlanUsingPOSTForbidden struct {
}

// IsSuccess returns true when this buy support plan using p o s t forbidden response has a 2xx status code
func (o *BuySupportPlanUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this buy support plan using p o s t forbidden response has a 3xx status code
func (o *BuySupportPlanUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this buy support plan using p o s t forbidden response has a 4xx status code
func (o *BuySupportPlanUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this buy support plan using p o s t forbidden response has a 5xx status code
func (o *BuySupportPlanUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this buy support plan using p o s t forbidden response a status code equal to that given
func (o *BuySupportPlanUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the buy support plan using p o s t forbidden response
func (o *BuySupportPlanUsingPOSTForbidden) Code() int {
	return 403
}

func (o *BuySupportPlanUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTForbidden", 403)
}

func (o *BuySupportPlanUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTForbidden", 403)
}

func (o *BuySupportPlanUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBuySupportPlanUsingPOSTNotFound creates a BuySupportPlanUsingPOSTNotFound with default headers values
func NewBuySupportPlanUsingPOSTNotFound() *BuySupportPlanUsingPOSTNotFound {
	return &BuySupportPlanUsingPOSTNotFound{}
}

/*
BuySupportPlanUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BuySupportPlanUsingPOSTNotFound struct {
}

// IsSuccess returns true when this buy support plan using p o s t not found response has a 2xx status code
func (o *BuySupportPlanUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this buy support plan using p o s t not found response has a 3xx status code
func (o *BuySupportPlanUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this buy support plan using p o s t not found response has a 4xx status code
func (o *BuySupportPlanUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this buy support plan using p o s t not found response has a 5xx status code
func (o *BuySupportPlanUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this buy support plan using p o s t not found response a status code equal to that given
func (o *BuySupportPlanUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the buy support plan using p o s t not found response
func (o *BuySupportPlanUsingPOSTNotFound) Code() int {
	return 404
}

func (o *BuySupportPlanUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTNotFound", 404)
}

func (o *BuySupportPlanUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/billing/buy-support-plan][%d] buySupportPlanUsingPOSTNotFound", 404)
}

func (o *BuySupportPlanUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
