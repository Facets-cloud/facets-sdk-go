// Code generated by go-swagger; DO NOT EDIT.

package ui_billing_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// StartStripeCustomerPortalSessionReader is a Reader for the StartStripeCustomerPortalSession structure.
type StartStripeCustomerPortalSessionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartStripeCustomerPortalSessionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartStripeCustomerPortalSessionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartStripeCustomerPortalSessionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartStripeCustomerPortalSessionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewStartStripeCustomerPortalSessionMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStartStripeCustomerPortalSessionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/billing/manage-billing] startStripeCustomerPortalSession", response, response.Code())
	}
}

// NewStartStripeCustomerPortalSessionOK creates a StartStripeCustomerPortalSessionOK with default headers values
func NewStartStripeCustomerPortalSessionOK() *StartStripeCustomerPortalSessionOK {
	return &StartStripeCustomerPortalSessionOK{}
}

/*
StartStripeCustomerPortalSessionOK describes a response with status code 200, with default header values.

OK
*/
type StartStripeCustomerPortalSessionOK struct {
	Payload string
}

// IsSuccess returns true when this start stripe customer portal session o k response has a 2xx status code
func (o *StartStripeCustomerPortalSessionOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this start stripe customer portal session o k response has a 3xx status code
func (o *StartStripeCustomerPortalSessionOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start stripe customer portal session o k response has a 4xx status code
func (o *StartStripeCustomerPortalSessionOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this start stripe customer portal session o k response has a 5xx status code
func (o *StartStripeCustomerPortalSessionOK) IsServerError() bool {
	return false
}

// IsCode returns true when this start stripe customer portal session o k response a status code equal to that given
func (o *StartStripeCustomerPortalSessionOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the start stripe customer portal session o k response
func (o *StartStripeCustomerPortalSessionOK) Code() int {
	return 200
}

func (o *StartStripeCustomerPortalSessionOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionOK %s", 200, payload)
}

func (o *StartStripeCustomerPortalSessionOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionOK %s", 200, payload)
}

func (o *StartStripeCustomerPortalSessionOK) GetPayload() string {
	return o.Payload
}

func (o *StartStripeCustomerPortalSessionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartStripeCustomerPortalSessionBadRequest creates a StartStripeCustomerPortalSessionBadRequest with default headers values
func NewStartStripeCustomerPortalSessionBadRequest() *StartStripeCustomerPortalSessionBadRequest {
	return &StartStripeCustomerPortalSessionBadRequest{}
}

/*
StartStripeCustomerPortalSessionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StartStripeCustomerPortalSessionBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this start stripe customer portal session bad request response has a 2xx status code
func (o *StartStripeCustomerPortalSessionBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start stripe customer portal session bad request response has a 3xx status code
func (o *StartStripeCustomerPortalSessionBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start stripe customer portal session bad request response has a 4xx status code
func (o *StartStripeCustomerPortalSessionBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this start stripe customer portal session bad request response has a 5xx status code
func (o *StartStripeCustomerPortalSessionBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this start stripe customer portal session bad request response a status code equal to that given
func (o *StartStripeCustomerPortalSessionBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the start stripe customer portal session bad request response
func (o *StartStripeCustomerPortalSessionBadRequest) Code() int {
	return 400
}

func (o *StartStripeCustomerPortalSessionBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionBadRequest %s", 400, payload)
}

func (o *StartStripeCustomerPortalSessionBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionBadRequest %s", 400, payload)
}

func (o *StartStripeCustomerPortalSessionBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StartStripeCustomerPortalSessionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartStripeCustomerPortalSessionNotFound creates a StartStripeCustomerPortalSessionNotFound with default headers values
func NewStartStripeCustomerPortalSessionNotFound() *StartStripeCustomerPortalSessionNotFound {
	return &StartStripeCustomerPortalSessionNotFound{}
}

/*
StartStripeCustomerPortalSessionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StartStripeCustomerPortalSessionNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this start stripe customer portal session not found response has a 2xx status code
func (o *StartStripeCustomerPortalSessionNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start stripe customer portal session not found response has a 3xx status code
func (o *StartStripeCustomerPortalSessionNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start stripe customer portal session not found response has a 4xx status code
func (o *StartStripeCustomerPortalSessionNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this start stripe customer portal session not found response has a 5xx status code
func (o *StartStripeCustomerPortalSessionNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this start stripe customer portal session not found response a status code equal to that given
func (o *StartStripeCustomerPortalSessionNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the start stripe customer portal session not found response
func (o *StartStripeCustomerPortalSessionNotFound) Code() int {
	return 404
}

func (o *StartStripeCustomerPortalSessionNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionNotFound %s", 404, payload)
}

func (o *StartStripeCustomerPortalSessionNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionNotFound %s", 404, payload)
}

func (o *StartStripeCustomerPortalSessionNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StartStripeCustomerPortalSessionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartStripeCustomerPortalSessionMethodNotAllowed creates a StartStripeCustomerPortalSessionMethodNotAllowed with default headers values
func NewStartStripeCustomerPortalSessionMethodNotAllowed() *StartStripeCustomerPortalSessionMethodNotAllowed {
	return &StartStripeCustomerPortalSessionMethodNotAllowed{}
}

/*
StartStripeCustomerPortalSessionMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type StartStripeCustomerPortalSessionMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this start stripe customer portal session method not allowed response has a 2xx status code
func (o *StartStripeCustomerPortalSessionMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start stripe customer portal session method not allowed response has a 3xx status code
func (o *StartStripeCustomerPortalSessionMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start stripe customer portal session method not allowed response has a 4xx status code
func (o *StartStripeCustomerPortalSessionMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this start stripe customer portal session method not allowed response has a 5xx status code
func (o *StartStripeCustomerPortalSessionMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this start stripe customer portal session method not allowed response a status code equal to that given
func (o *StartStripeCustomerPortalSessionMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the start stripe customer portal session method not allowed response
func (o *StartStripeCustomerPortalSessionMethodNotAllowed) Code() int {
	return 405
}

func (o *StartStripeCustomerPortalSessionMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionMethodNotAllowed %s", 405, payload)
}

func (o *StartStripeCustomerPortalSessionMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionMethodNotAllowed %s", 405, payload)
}

func (o *StartStripeCustomerPortalSessionMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StartStripeCustomerPortalSessionMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartStripeCustomerPortalSessionInternalServerError creates a StartStripeCustomerPortalSessionInternalServerError with default headers values
func NewStartStripeCustomerPortalSessionInternalServerError() *StartStripeCustomerPortalSessionInternalServerError {
	return &StartStripeCustomerPortalSessionInternalServerError{}
}

/*
StartStripeCustomerPortalSessionInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type StartStripeCustomerPortalSessionInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this start stripe customer portal session internal server error response has a 2xx status code
func (o *StartStripeCustomerPortalSessionInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this start stripe customer portal session internal server error response has a 3xx status code
func (o *StartStripeCustomerPortalSessionInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this start stripe customer portal session internal server error response has a 4xx status code
func (o *StartStripeCustomerPortalSessionInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this start stripe customer portal session internal server error response has a 5xx status code
func (o *StartStripeCustomerPortalSessionInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this start stripe customer portal session internal server error response a status code equal to that given
func (o *StartStripeCustomerPortalSessionInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the start stripe customer portal session internal server error response
func (o *StartStripeCustomerPortalSessionInternalServerError) Code() int {
	return 500
}

func (o *StartStripeCustomerPortalSessionInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionInternalServerError %s", 500, payload)
}

func (o *StartStripeCustomerPortalSessionInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/billing/manage-billing][%d] startStripeCustomerPortalSessionInternalServerError %s", 500, payload)
}

func (o *StartStripeCustomerPortalSessionInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StartStripeCustomerPortalSessionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
