// Code generated by go-swagger; DO NOT EDIT.

package ui_alerts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAlertsOverviewUsingGETReader is a Reader for the GetAlertsOverviewUsingGET structure.
type GetAlertsOverviewUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlertsOverviewUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAlertsOverviewUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAlertsOverviewUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAlertsOverviewUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAlertsOverviewUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/alerts/firing/overview] getAlertsOverviewUsingGET", response, response.Code())
	}
}

// NewGetAlertsOverviewUsingGETOK creates a GetAlertsOverviewUsingGETOK with default headers values
func NewGetAlertsOverviewUsingGETOK() *GetAlertsOverviewUsingGETOK {
	return &GetAlertsOverviewUsingGETOK{}
}

/*
GetAlertsOverviewUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAlertsOverviewUsingGETOK struct {
	Payload []*models.AlertOverview
}

// IsSuccess returns true when this get alerts overview using g e t o k response has a 2xx status code
func (o *GetAlertsOverviewUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get alerts overview using g e t o k response has a 3xx status code
func (o *GetAlertsOverviewUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts overview using g e t o k response has a 4xx status code
func (o *GetAlertsOverviewUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alerts overview using g e t o k response has a 5xx status code
func (o *GetAlertsOverviewUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts overview using g e t o k response a status code equal to that given
func (o *GetAlertsOverviewUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get alerts overview using g e t o k response
func (o *GetAlertsOverviewUsingGETOK) Code() int {
	return 200
}

func (o *GetAlertsOverviewUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETOK %s", 200, payload)
}

func (o *GetAlertsOverviewUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETOK %s", 200, payload)
}

func (o *GetAlertsOverviewUsingGETOK) GetPayload() []*models.AlertOverview {
	return o.Payload
}

func (o *GetAlertsOverviewUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertsOverviewUsingGETUnauthorized creates a GetAlertsOverviewUsingGETUnauthorized with default headers values
func NewGetAlertsOverviewUsingGETUnauthorized() *GetAlertsOverviewUsingGETUnauthorized {
	return &GetAlertsOverviewUsingGETUnauthorized{}
}

/*
GetAlertsOverviewUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAlertsOverviewUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get alerts overview using g e t unauthorized response has a 2xx status code
func (o *GetAlertsOverviewUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alerts overview using g e t unauthorized response has a 3xx status code
func (o *GetAlertsOverviewUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts overview using g e t unauthorized response has a 4xx status code
func (o *GetAlertsOverviewUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alerts overview using g e t unauthorized response has a 5xx status code
func (o *GetAlertsOverviewUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts overview using g e t unauthorized response a status code equal to that given
func (o *GetAlertsOverviewUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get alerts overview using g e t unauthorized response
func (o *GetAlertsOverviewUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAlertsOverviewUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETUnauthorized", 401)
}

func (o *GetAlertsOverviewUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETUnauthorized", 401)
}

func (o *GetAlertsOverviewUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAlertsOverviewUsingGETForbidden creates a GetAlertsOverviewUsingGETForbidden with default headers values
func NewGetAlertsOverviewUsingGETForbidden() *GetAlertsOverviewUsingGETForbidden {
	return &GetAlertsOverviewUsingGETForbidden{}
}

/*
GetAlertsOverviewUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAlertsOverviewUsingGETForbidden struct {
}

// IsSuccess returns true when this get alerts overview using g e t forbidden response has a 2xx status code
func (o *GetAlertsOverviewUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alerts overview using g e t forbidden response has a 3xx status code
func (o *GetAlertsOverviewUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts overview using g e t forbidden response has a 4xx status code
func (o *GetAlertsOverviewUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alerts overview using g e t forbidden response has a 5xx status code
func (o *GetAlertsOverviewUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts overview using g e t forbidden response a status code equal to that given
func (o *GetAlertsOverviewUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get alerts overview using g e t forbidden response
func (o *GetAlertsOverviewUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAlertsOverviewUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETForbidden", 403)
}

func (o *GetAlertsOverviewUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETForbidden", 403)
}

func (o *GetAlertsOverviewUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAlertsOverviewUsingGETNotFound creates a GetAlertsOverviewUsingGETNotFound with default headers values
func NewGetAlertsOverviewUsingGETNotFound() *GetAlertsOverviewUsingGETNotFound {
	return &GetAlertsOverviewUsingGETNotFound{}
}

/*
GetAlertsOverviewUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAlertsOverviewUsingGETNotFound struct {
}

// IsSuccess returns true when this get alerts overview using g e t not found response has a 2xx status code
func (o *GetAlertsOverviewUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alerts overview using g e t not found response has a 3xx status code
func (o *GetAlertsOverviewUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts overview using g e t not found response has a 4xx status code
func (o *GetAlertsOverviewUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alerts overview using g e t not found response has a 5xx status code
func (o *GetAlertsOverviewUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts overview using g e t not found response a status code equal to that given
func (o *GetAlertsOverviewUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get alerts overview using g e t not found response
func (o *GetAlertsOverviewUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAlertsOverviewUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETNotFound", 404)
}

func (o *GetAlertsOverviewUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/firing/overview][%d] getAlertsOverviewUsingGETNotFound", 404)
}

func (o *GetAlertsOverviewUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
