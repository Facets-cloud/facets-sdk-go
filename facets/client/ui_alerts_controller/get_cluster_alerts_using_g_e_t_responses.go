// Code generated by go-swagger; DO NOT EDIT.

package ui_alerts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterAlertsUsingGETReader is a Reader for the GetClusterAlertsUsingGET structure.
type GetClusterAlertsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterAlertsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterAlertsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterAlertsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterAlertsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterAlertsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/alerts/{clusterId}/all] getClusterAlertsUsingGET", response, response.Code())
	}
}

// NewGetClusterAlertsUsingGETOK creates a GetClusterAlertsUsingGETOK with default headers values
func NewGetClusterAlertsUsingGETOK() *GetClusterAlertsUsingGETOK {
	return &GetClusterAlertsUsingGETOK{}
}

/*
GetClusterAlertsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterAlertsUsingGETOK struct {
	Payload *models.ClusterFiringAlertsDTO
}

// IsSuccess returns true when this get cluster alerts using g e t o k response has a 2xx status code
func (o *GetClusterAlertsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster alerts using g e t o k response has a 3xx status code
func (o *GetClusterAlertsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster alerts using g e t o k response has a 4xx status code
func (o *GetClusterAlertsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster alerts using g e t o k response has a 5xx status code
func (o *GetClusterAlertsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster alerts using g e t o k response a status code equal to that given
func (o *GetClusterAlertsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster alerts using g e t o k response
func (o *GetClusterAlertsUsingGETOK) Code() int {
	return 200
}

func (o *GetClusterAlertsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETOK %s", 200, payload)
}

func (o *GetClusterAlertsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETOK %s", 200, payload)
}

func (o *GetClusterAlertsUsingGETOK) GetPayload() *models.ClusterFiringAlertsDTO {
	return o.Payload
}

func (o *GetClusterAlertsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterFiringAlertsDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterAlertsUsingGETUnauthorized creates a GetClusterAlertsUsingGETUnauthorized with default headers values
func NewGetClusterAlertsUsingGETUnauthorized() *GetClusterAlertsUsingGETUnauthorized {
	return &GetClusterAlertsUsingGETUnauthorized{}
}

/*
GetClusterAlertsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClusterAlertsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get cluster alerts using g e t unauthorized response has a 2xx status code
func (o *GetClusterAlertsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster alerts using g e t unauthorized response has a 3xx status code
func (o *GetClusterAlertsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster alerts using g e t unauthorized response has a 4xx status code
func (o *GetClusterAlertsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster alerts using g e t unauthorized response has a 5xx status code
func (o *GetClusterAlertsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster alerts using g e t unauthorized response a status code equal to that given
func (o *GetClusterAlertsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cluster alerts using g e t unauthorized response
func (o *GetClusterAlertsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClusterAlertsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETUnauthorized", 401)
}

func (o *GetClusterAlertsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETUnauthorized", 401)
}

func (o *GetClusterAlertsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterAlertsUsingGETForbidden creates a GetClusterAlertsUsingGETForbidden with default headers values
func NewGetClusterAlertsUsingGETForbidden() *GetClusterAlertsUsingGETForbidden {
	return &GetClusterAlertsUsingGETForbidden{}
}

/*
GetClusterAlertsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClusterAlertsUsingGETForbidden struct {
}

// IsSuccess returns true when this get cluster alerts using g e t forbidden response has a 2xx status code
func (o *GetClusterAlertsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster alerts using g e t forbidden response has a 3xx status code
func (o *GetClusterAlertsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster alerts using g e t forbidden response has a 4xx status code
func (o *GetClusterAlertsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster alerts using g e t forbidden response has a 5xx status code
func (o *GetClusterAlertsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster alerts using g e t forbidden response a status code equal to that given
func (o *GetClusterAlertsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cluster alerts using g e t forbidden response
func (o *GetClusterAlertsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClusterAlertsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETForbidden", 403)
}

func (o *GetClusterAlertsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETForbidden", 403)
}

func (o *GetClusterAlertsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterAlertsUsingGETNotFound creates a GetClusterAlertsUsingGETNotFound with default headers values
func NewGetClusterAlertsUsingGETNotFound() *GetClusterAlertsUsingGETNotFound {
	return &GetClusterAlertsUsingGETNotFound{}
}

/*
GetClusterAlertsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterAlertsUsingGETNotFound struct {
}

// IsSuccess returns true when this get cluster alerts using g e t not found response has a 2xx status code
func (o *GetClusterAlertsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster alerts using g e t not found response has a 3xx status code
func (o *GetClusterAlertsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster alerts using g e t not found response has a 4xx status code
func (o *GetClusterAlertsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster alerts using g e t not found response has a 5xx status code
func (o *GetClusterAlertsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster alerts using g e t not found response a status code equal to that given
func (o *GetClusterAlertsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster alerts using g e t not found response
func (o *GetClusterAlertsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClusterAlertsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETNotFound", 404)
}

func (o *GetClusterAlertsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/alerts/{clusterId}/all][%d] getClusterAlertsUsingGETNotFound", 404)
}

func (o *GetClusterAlertsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
