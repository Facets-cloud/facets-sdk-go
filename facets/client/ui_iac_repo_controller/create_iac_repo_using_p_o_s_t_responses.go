// Code generated by go-swagger; DO NOT EDIT.

package ui_iac_repo_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateIacRepoUsingPOSTReader is a Reader for the CreateIacRepoUsingPOST structure.
type CreateIacRepoUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateIacRepoUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateIacRepoUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateIacRepoUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateIacRepoUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateIacRepoUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateIacRepoUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/iac/repo] createIacRepoUsingPOST", response, response.Code())
	}
}

// NewCreateIacRepoUsingPOSTOK creates a CreateIacRepoUsingPOSTOK with default headers values
func NewCreateIacRepoUsingPOSTOK() *CreateIacRepoUsingPOSTOK {
	return &CreateIacRepoUsingPOSTOK{}
}

/*
CreateIacRepoUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateIacRepoUsingPOSTOK struct {
	Payload *models.IacRepo
}

// IsSuccess returns true when this create iac repo using p o s t o k response has a 2xx status code
func (o *CreateIacRepoUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create iac repo using p o s t o k response has a 3xx status code
func (o *CreateIacRepoUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create iac repo using p o s t o k response has a 4xx status code
func (o *CreateIacRepoUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create iac repo using p o s t o k response has a 5xx status code
func (o *CreateIacRepoUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create iac repo using p o s t o k response a status code equal to that given
func (o *CreateIacRepoUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create iac repo using p o s t o k response
func (o *CreateIacRepoUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateIacRepoUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTOK %s", 200, payload)
}

func (o *CreateIacRepoUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTOK %s", 200, payload)
}

func (o *CreateIacRepoUsingPOSTOK) GetPayload() *models.IacRepo {
	return o.Payload
}

func (o *CreateIacRepoUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.IacRepo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateIacRepoUsingPOSTCreated creates a CreateIacRepoUsingPOSTCreated with default headers values
func NewCreateIacRepoUsingPOSTCreated() *CreateIacRepoUsingPOSTCreated {
	return &CreateIacRepoUsingPOSTCreated{}
}

/*
CreateIacRepoUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateIacRepoUsingPOSTCreated struct {
}

// IsSuccess returns true when this create iac repo using p o s t created response has a 2xx status code
func (o *CreateIacRepoUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create iac repo using p o s t created response has a 3xx status code
func (o *CreateIacRepoUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create iac repo using p o s t created response has a 4xx status code
func (o *CreateIacRepoUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create iac repo using p o s t created response has a 5xx status code
func (o *CreateIacRepoUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create iac repo using p o s t created response a status code equal to that given
func (o *CreateIacRepoUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create iac repo using p o s t created response
func (o *CreateIacRepoUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateIacRepoUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTCreated", 201)
}

func (o *CreateIacRepoUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTCreated", 201)
}

func (o *CreateIacRepoUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateIacRepoUsingPOSTUnauthorized creates a CreateIacRepoUsingPOSTUnauthorized with default headers values
func NewCreateIacRepoUsingPOSTUnauthorized() *CreateIacRepoUsingPOSTUnauthorized {
	return &CreateIacRepoUsingPOSTUnauthorized{}
}

/*
CreateIacRepoUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateIacRepoUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create iac repo using p o s t unauthorized response has a 2xx status code
func (o *CreateIacRepoUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create iac repo using p o s t unauthorized response has a 3xx status code
func (o *CreateIacRepoUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create iac repo using p o s t unauthorized response has a 4xx status code
func (o *CreateIacRepoUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create iac repo using p o s t unauthorized response has a 5xx status code
func (o *CreateIacRepoUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create iac repo using p o s t unauthorized response a status code equal to that given
func (o *CreateIacRepoUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create iac repo using p o s t unauthorized response
func (o *CreateIacRepoUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateIacRepoUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTUnauthorized", 401)
}

func (o *CreateIacRepoUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTUnauthorized", 401)
}

func (o *CreateIacRepoUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateIacRepoUsingPOSTForbidden creates a CreateIacRepoUsingPOSTForbidden with default headers values
func NewCreateIacRepoUsingPOSTForbidden() *CreateIacRepoUsingPOSTForbidden {
	return &CreateIacRepoUsingPOSTForbidden{}
}

/*
CreateIacRepoUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateIacRepoUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create iac repo using p o s t forbidden response has a 2xx status code
func (o *CreateIacRepoUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create iac repo using p o s t forbidden response has a 3xx status code
func (o *CreateIacRepoUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create iac repo using p o s t forbidden response has a 4xx status code
func (o *CreateIacRepoUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create iac repo using p o s t forbidden response has a 5xx status code
func (o *CreateIacRepoUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create iac repo using p o s t forbidden response a status code equal to that given
func (o *CreateIacRepoUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create iac repo using p o s t forbidden response
func (o *CreateIacRepoUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateIacRepoUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTForbidden", 403)
}

func (o *CreateIacRepoUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTForbidden", 403)
}

func (o *CreateIacRepoUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateIacRepoUsingPOSTNotFound creates a CreateIacRepoUsingPOSTNotFound with default headers values
func NewCreateIacRepoUsingPOSTNotFound() *CreateIacRepoUsingPOSTNotFound {
	return &CreateIacRepoUsingPOSTNotFound{}
}

/*
CreateIacRepoUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateIacRepoUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create iac repo using p o s t not found response has a 2xx status code
func (o *CreateIacRepoUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create iac repo using p o s t not found response has a 3xx status code
func (o *CreateIacRepoUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create iac repo using p o s t not found response has a 4xx status code
func (o *CreateIacRepoUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create iac repo using p o s t not found response has a 5xx status code
func (o *CreateIacRepoUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create iac repo using p o s t not found response a status code equal to that given
func (o *CreateIacRepoUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create iac repo using p o s t not found response
func (o *CreateIacRepoUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateIacRepoUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTNotFound", 404)
}

func (o *CreateIacRepoUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/iac/repo][%d] createIacRepoUsingPOSTNotFound", 404)
}

func (o *CreateIacRepoUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
