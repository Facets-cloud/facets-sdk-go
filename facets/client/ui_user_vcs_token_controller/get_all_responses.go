// Code generated by go-swagger; DO NOT EDIT.

package ui_user_vcs_token_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllReader is a Reader for the GetAll structure.
type GetAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/user-token] getAll", response, response.Code())
	}
}

// NewGetAllOK creates a GetAllOK with default headers values
func NewGetAllOK() *GetAllOK {
	return &GetAllOK{}
}

/*
GetAllOK describes a response with status code 200, with default header values.

OK
*/
type GetAllOK struct {
	Payload []*models.UserVCSTokenResponse
}

// IsSuccess returns true when this get all o k response has a 2xx status code
func (o *GetAllOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all o k response has a 3xx status code
func (o *GetAllOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all o k response has a 4xx status code
func (o *GetAllOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all o k response has a 5xx status code
func (o *GetAllOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all o k response a status code equal to that given
func (o *GetAllOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all o k response
func (o *GetAllOK) Code() int {
	return 200
}

func (o *GetAllOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllOK %s", 200, payload)
}

func (o *GetAllOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllOK %s", 200, payload)
}

func (o *GetAllOK) GetPayload() []*models.UserVCSTokenResponse {
	return o.Payload
}

func (o *GetAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllBadRequest creates a GetAllBadRequest with default headers values
func NewGetAllBadRequest() *GetAllBadRequest {
	return &GetAllBadRequest{}
}

/*
GetAllBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all bad request response has a 2xx status code
func (o *GetAllBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all bad request response has a 3xx status code
func (o *GetAllBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all bad request response has a 4xx status code
func (o *GetAllBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all bad request response has a 5xx status code
func (o *GetAllBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all bad request response a status code equal to that given
func (o *GetAllBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all bad request response
func (o *GetAllBadRequest) Code() int {
	return 400
}

func (o *GetAllBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllBadRequest %s", 400, payload)
}

func (o *GetAllBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllBadRequest %s", 400, payload)
}

func (o *GetAllBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNotFound creates a GetAllNotFound with default headers values
func NewGetAllNotFound() *GetAllNotFound {
	return &GetAllNotFound{}
}

/*
GetAllNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all not found response has a 2xx status code
func (o *GetAllNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all not found response has a 3xx status code
func (o *GetAllNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all not found response has a 4xx status code
func (o *GetAllNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all not found response has a 5xx status code
func (o *GetAllNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all not found response a status code equal to that given
func (o *GetAllNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all not found response
func (o *GetAllNotFound) Code() int {
	return 404
}

func (o *GetAllNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllNotFound %s", 404, payload)
}

func (o *GetAllNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllNotFound %s", 404, payload)
}

func (o *GetAllNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllMethodNotAllowed creates a GetAllMethodNotAllowed with default headers values
func NewGetAllMethodNotAllowed() *GetAllMethodNotAllowed {
	return &GetAllMethodNotAllowed{}
}

/*
GetAllMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all method not allowed response has a 2xx status code
func (o *GetAllMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all method not allowed response has a 3xx status code
func (o *GetAllMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all method not allowed response has a 4xx status code
func (o *GetAllMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all method not allowed response has a 5xx status code
func (o *GetAllMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all method not allowed response a status code equal to that given
func (o *GetAllMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all method not allowed response
func (o *GetAllMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllMethodNotAllowed %s", 405, payload)
}

func (o *GetAllMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllMethodNotAllowed %s", 405, payload)
}

func (o *GetAllMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllInternalServerError creates a GetAllInternalServerError with default headers values
func NewGetAllInternalServerError() *GetAllInternalServerError {
	return &GetAllInternalServerError{}
}

/*
GetAllInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all internal server error response has a 2xx status code
func (o *GetAllInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all internal server error response has a 3xx status code
func (o *GetAllInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all internal server error response has a 4xx status code
func (o *GetAllInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all internal server error response has a 5xx status code
func (o *GetAllInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all internal server error response a status code equal to that given
func (o *GetAllInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all internal server error response
func (o *GetAllInternalServerError) Code() int {
	return 500
}

func (o *GetAllInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllInternalServerError %s", 500, payload)
}

func (o *GetAllInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-token][%d] getAllInternalServerError %s", 500, payload)
}

func (o *GetAllInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
