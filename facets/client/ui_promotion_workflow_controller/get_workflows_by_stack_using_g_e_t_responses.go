// Code generated by go-swagger; DO NOT EDIT.

package ui_promotion_workflow_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetWorkflowsByStackUsingGETReader is a Reader for the GetWorkflowsByStackUsingGET structure.
type GetWorkflowsByStackUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowsByStackUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowsByStackUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowsByStackUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkflowsByStackUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowsByStackUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/workflow/blueprint/{stackName}] getWorkflowsByStackUsingGET", response, response.Code())
	}
}

// NewGetWorkflowsByStackUsingGETOK creates a GetWorkflowsByStackUsingGETOK with default headers values
func NewGetWorkflowsByStackUsingGETOK() *GetWorkflowsByStackUsingGETOK {
	return &GetWorkflowsByStackUsingGETOK{}
}

/*
GetWorkflowsByStackUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetWorkflowsByStackUsingGETOK struct {
	Payload []*models.PromotionWorkflow
}

// IsSuccess returns true when this get workflows by stack using g e t o k response has a 2xx status code
func (o *GetWorkflowsByStackUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflows by stack using g e t o k response has a 3xx status code
func (o *GetWorkflowsByStackUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows by stack using g e t o k response has a 4xx status code
func (o *GetWorkflowsByStackUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflows by stack using g e t o k response has a 5xx status code
func (o *GetWorkflowsByStackUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows by stack using g e t o k response a status code equal to that given
func (o *GetWorkflowsByStackUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflows by stack using g e t o k response
func (o *GetWorkflowsByStackUsingGETOK) Code() int {
	return 200
}

func (o *GetWorkflowsByStackUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETOK %s", 200, payload)
}

func (o *GetWorkflowsByStackUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETOK %s", 200, payload)
}

func (o *GetWorkflowsByStackUsingGETOK) GetPayload() []*models.PromotionWorkflow {
	return o.Payload
}

func (o *GetWorkflowsByStackUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowsByStackUsingGETUnauthorized creates a GetWorkflowsByStackUsingGETUnauthorized with default headers values
func NewGetWorkflowsByStackUsingGETUnauthorized() *GetWorkflowsByStackUsingGETUnauthorized {
	return &GetWorkflowsByStackUsingGETUnauthorized{}
}

/*
GetWorkflowsByStackUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetWorkflowsByStackUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get workflows by stack using g e t unauthorized response has a 2xx status code
func (o *GetWorkflowsByStackUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflows by stack using g e t unauthorized response has a 3xx status code
func (o *GetWorkflowsByStackUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows by stack using g e t unauthorized response has a 4xx status code
func (o *GetWorkflowsByStackUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflows by stack using g e t unauthorized response has a 5xx status code
func (o *GetWorkflowsByStackUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows by stack using g e t unauthorized response a status code equal to that given
func (o *GetWorkflowsByStackUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workflows by stack using g e t unauthorized response
func (o *GetWorkflowsByStackUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetWorkflowsByStackUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETUnauthorized", 401)
}

func (o *GetWorkflowsByStackUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETUnauthorized", 401)
}

func (o *GetWorkflowsByStackUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowsByStackUsingGETForbidden creates a GetWorkflowsByStackUsingGETForbidden with default headers values
func NewGetWorkflowsByStackUsingGETForbidden() *GetWorkflowsByStackUsingGETForbidden {
	return &GetWorkflowsByStackUsingGETForbidden{}
}

/*
GetWorkflowsByStackUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWorkflowsByStackUsingGETForbidden struct {
}

// IsSuccess returns true when this get workflows by stack using g e t forbidden response has a 2xx status code
func (o *GetWorkflowsByStackUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflows by stack using g e t forbidden response has a 3xx status code
func (o *GetWorkflowsByStackUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows by stack using g e t forbidden response has a 4xx status code
func (o *GetWorkflowsByStackUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflows by stack using g e t forbidden response has a 5xx status code
func (o *GetWorkflowsByStackUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows by stack using g e t forbidden response a status code equal to that given
func (o *GetWorkflowsByStackUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workflows by stack using g e t forbidden response
func (o *GetWorkflowsByStackUsingGETForbidden) Code() int {
	return 403
}

func (o *GetWorkflowsByStackUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETForbidden", 403)
}

func (o *GetWorkflowsByStackUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETForbidden", 403)
}

func (o *GetWorkflowsByStackUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowsByStackUsingGETNotFound creates a GetWorkflowsByStackUsingGETNotFound with default headers values
func NewGetWorkflowsByStackUsingGETNotFound() *GetWorkflowsByStackUsingGETNotFound {
	return &GetWorkflowsByStackUsingGETNotFound{}
}

/*
GetWorkflowsByStackUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetWorkflowsByStackUsingGETNotFound struct {
}

// IsSuccess returns true when this get workflows by stack using g e t not found response has a 2xx status code
func (o *GetWorkflowsByStackUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflows by stack using g e t not found response has a 3xx status code
func (o *GetWorkflowsByStackUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows by stack using g e t not found response has a 4xx status code
func (o *GetWorkflowsByStackUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflows by stack using g e t not found response has a 5xx status code
func (o *GetWorkflowsByStackUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows by stack using g e t not found response a status code equal to that given
func (o *GetWorkflowsByStackUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflows by stack using g e t not found response
func (o *GetWorkflowsByStackUsingGETNotFound) Code() int {
	return 404
}

func (o *GetWorkflowsByStackUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETNotFound", 404)
}

func (o *GetWorkflowsByStackUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/workflow/blueprint/{stackName}][%d] getWorkflowsByStackUsingGETNotFound", 404)
}

func (o *GetWorkflowsByStackUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
