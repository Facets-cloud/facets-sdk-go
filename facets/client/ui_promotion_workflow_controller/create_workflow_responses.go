// Code generated by go-swagger; DO NOT EDIT.

package ui_promotion_workflow_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateWorkflowReader is a Reader for the CreateWorkflow structure.
type CreateWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateWorkflowMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/workflow] createWorkflow", response, response.Code())
	}
}

// NewCreateWorkflowOK creates a CreateWorkflowOK with default headers values
func NewCreateWorkflowOK() *CreateWorkflowOK {
	return &CreateWorkflowOK{}
}

/*
CreateWorkflowOK describes a response with status code 200, with default header values.

OK
*/
type CreateWorkflowOK struct {
	Payload *models.PromotionWorkflow
}

// IsSuccess returns true when this create workflow o k response has a 2xx status code
func (o *CreateWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create workflow o k response has a 3xx status code
func (o *CreateWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow o k response has a 4xx status code
func (o *CreateWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create workflow o k response has a 5xx status code
func (o *CreateWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow o k response a status code equal to that given
func (o *CreateWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create workflow o k response
func (o *CreateWorkflowOK) Code() int {
	return 200
}

func (o *CreateWorkflowOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowOK %s", 200, payload)
}

func (o *CreateWorkflowOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowOK %s", 200, payload)
}

func (o *CreateWorkflowOK) GetPayload() *models.PromotionWorkflow {
	return o.Payload
}

func (o *CreateWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PromotionWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowBadRequest creates a CreateWorkflowBadRequest with default headers values
func NewCreateWorkflowBadRequest() *CreateWorkflowBadRequest {
	return &CreateWorkflowBadRequest{}
}

/*
CreateWorkflowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateWorkflowBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create workflow bad request response has a 2xx status code
func (o *CreateWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow bad request response has a 3xx status code
func (o *CreateWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow bad request response has a 4xx status code
func (o *CreateWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow bad request response has a 5xx status code
func (o *CreateWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow bad request response a status code equal to that given
func (o *CreateWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create workflow bad request response
func (o *CreateWorkflowBadRequest) Code() int {
	return 400
}

func (o *CreateWorkflowBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowBadRequest %s", 400, payload)
}

func (o *CreateWorkflowBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowBadRequest %s", 400, payload)
}

func (o *CreateWorkflowBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowNotFound creates a CreateWorkflowNotFound with default headers values
func NewCreateWorkflowNotFound() *CreateWorkflowNotFound {
	return &CreateWorkflowNotFound{}
}

/*
CreateWorkflowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateWorkflowNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create workflow not found response has a 2xx status code
func (o *CreateWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow not found response has a 3xx status code
func (o *CreateWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow not found response has a 4xx status code
func (o *CreateWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow not found response has a 5xx status code
func (o *CreateWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow not found response a status code equal to that given
func (o *CreateWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create workflow not found response
func (o *CreateWorkflowNotFound) Code() int {
	return 404
}

func (o *CreateWorkflowNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowNotFound %s", 404, payload)
}

func (o *CreateWorkflowNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowNotFound %s", 404, payload)
}

func (o *CreateWorkflowNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowMethodNotAllowed creates a CreateWorkflowMethodNotAllowed with default headers values
func NewCreateWorkflowMethodNotAllowed() *CreateWorkflowMethodNotAllowed {
	return &CreateWorkflowMethodNotAllowed{}
}

/*
CreateWorkflowMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateWorkflowMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create workflow method not allowed response has a 2xx status code
func (o *CreateWorkflowMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow method not allowed response has a 3xx status code
func (o *CreateWorkflowMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow method not allowed response has a 4xx status code
func (o *CreateWorkflowMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow method not allowed response has a 5xx status code
func (o *CreateWorkflowMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow method not allowed response a status code equal to that given
func (o *CreateWorkflowMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create workflow method not allowed response
func (o *CreateWorkflowMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateWorkflowMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowMethodNotAllowed %s", 405, payload)
}

func (o *CreateWorkflowMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowMethodNotAllowed %s", 405, payload)
}

func (o *CreateWorkflowMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateWorkflowMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowInternalServerError creates a CreateWorkflowInternalServerError with default headers values
func NewCreateWorkflowInternalServerError() *CreateWorkflowInternalServerError {
	return &CreateWorkflowInternalServerError{}
}

/*
CreateWorkflowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateWorkflowInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create workflow internal server error response has a 2xx status code
func (o *CreateWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow internal server error response has a 3xx status code
func (o *CreateWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow internal server error response has a 4xx status code
func (o *CreateWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create workflow internal server error response has a 5xx status code
func (o *CreateWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create workflow internal server error response a status code equal to that given
func (o *CreateWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create workflow internal server error response
func (o *CreateWorkflowInternalServerError) Code() int {
	return 500
}

func (o *CreateWorkflowInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowInternalServerError %s", 500, payload)
}

func (o *CreateWorkflowInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowInternalServerError %s", 500, payload)
}

func (o *CreateWorkflowInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
