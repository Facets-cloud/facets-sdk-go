// Code generated by go-swagger; DO NOT EDIT.

package ui_promotion_workflow_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateWorkflowUsingPOSTReader is a Reader for the CreateWorkflowUsingPOST structure.
type CreateWorkflowUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateWorkflowUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateWorkflowUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateWorkflowUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateWorkflowUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateWorkflowUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateWorkflowUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/workflow] createWorkflowUsingPOST", response, response.Code())
	}
}

// NewCreateWorkflowUsingPOSTOK creates a CreateWorkflowUsingPOSTOK with default headers values
func NewCreateWorkflowUsingPOSTOK() *CreateWorkflowUsingPOSTOK {
	return &CreateWorkflowUsingPOSTOK{}
}

/*
CreateWorkflowUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateWorkflowUsingPOSTOK struct {
	Payload *models.PromotionWorkflow
}

// IsSuccess returns true when this create workflow using p o s t o k response has a 2xx status code
func (o *CreateWorkflowUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create workflow using p o s t o k response has a 3xx status code
func (o *CreateWorkflowUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow using p o s t o k response has a 4xx status code
func (o *CreateWorkflowUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create workflow using p o s t o k response has a 5xx status code
func (o *CreateWorkflowUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow using p o s t o k response a status code equal to that given
func (o *CreateWorkflowUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create workflow using p o s t o k response
func (o *CreateWorkflowUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateWorkflowUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTOK %s", 200, payload)
}

func (o *CreateWorkflowUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTOK %s", 200, payload)
}

func (o *CreateWorkflowUsingPOSTOK) GetPayload() *models.PromotionWorkflow {
	return o.Payload
}

func (o *CreateWorkflowUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PromotionWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateWorkflowUsingPOSTCreated creates a CreateWorkflowUsingPOSTCreated with default headers values
func NewCreateWorkflowUsingPOSTCreated() *CreateWorkflowUsingPOSTCreated {
	return &CreateWorkflowUsingPOSTCreated{}
}

/*
CreateWorkflowUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateWorkflowUsingPOSTCreated struct {
}

// IsSuccess returns true when this create workflow using p o s t created response has a 2xx status code
func (o *CreateWorkflowUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create workflow using p o s t created response has a 3xx status code
func (o *CreateWorkflowUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow using p o s t created response has a 4xx status code
func (o *CreateWorkflowUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create workflow using p o s t created response has a 5xx status code
func (o *CreateWorkflowUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow using p o s t created response a status code equal to that given
func (o *CreateWorkflowUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create workflow using p o s t created response
func (o *CreateWorkflowUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateWorkflowUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTCreated", 201)
}

func (o *CreateWorkflowUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTCreated", 201)
}

func (o *CreateWorkflowUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateWorkflowUsingPOSTUnauthorized creates a CreateWorkflowUsingPOSTUnauthorized with default headers values
func NewCreateWorkflowUsingPOSTUnauthorized() *CreateWorkflowUsingPOSTUnauthorized {
	return &CreateWorkflowUsingPOSTUnauthorized{}
}

/*
CreateWorkflowUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateWorkflowUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create workflow using p o s t unauthorized response has a 2xx status code
func (o *CreateWorkflowUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow using p o s t unauthorized response has a 3xx status code
func (o *CreateWorkflowUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow using p o s t unauthorized response has a 4xx status code
func (o *CreateWorkflowUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow using p o s t unauthorized response has a 5xx status code
func (o *CreateWorkflowUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow using p o s t unauthorized response a status code equal to that given
func (o *CreateWorkflowUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create workflow using p o s t unauthorized response
func (o *CreateWorkflowUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateWorkflowUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTUnauthorized", 401)
}

func (o *CreateWorkflowUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTUnauthorized", 401)
}

func (o *CreateWorkflowUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateWorkflowUsingPOSTForbidden creates a CreateWorkflowUsingPOSTForbidden with default headers values
func NewCreateWorkflowUsingPOSTForbidden() *CreateWorkflowUsingPOSTForbidden {
	return &CreateWorkflowUsingPOSTForbidden{}
}

/*
CreateWorkflowUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateWorkflowUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create workflow using p o s t forbidden response has a 2xx status code
func (o *CreateWorkflowUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow using p o s t forbidden response has a 3xx status code
func (o *CreateWorkflowUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow using p o s t forbidden response has a 4xx status code
func (o *CreateWorkflowUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow using p o s t forbidden response has a 5xx status code
func (o *CreateWorkflowUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow using p o s t forbidden response a status code equal to that given
func (o *CreateWorkflowUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create workflow using p o s t forbidden response
func (o *CreateWorkflowUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateWorkflowUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTForbidden", 403)
}

func (o *CreateWorkflowUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTForbidden", 403)
}

func (o *CreateWorkflowUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateWorkflowUsingPOSTNotFound creates a CreateWorkflowUsingPOSTNotFound with default headers values
func NewCreateWorkflowUsingPOSTNotFound() *CreateWorkflowUsingPOSTNotFound {
	return &CreateWorkflowUsingPOSTNotFound{}
}

/*
CreateWorkflowUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateWorkflowUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create workflow using p o s t not found response has a 2xx status code
func (o *CreateWorkflowUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create workflow using p o s t not found response has a 3xx status code
func (o *CreateWorkflowUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create workflow using p o s t not found response has a 4xx status code
func (o *CreateWorkflowUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create workflow using p o s t not found response has a 5xx status code
func (o *CreateWorkflowUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create workflow using p o s t not found response a status code equal to that given
func (o *CreateWorkflowUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create workflow using p o s t not found response
func (o *CreateWorkflowUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateWorkflowUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTNotFound", 404)
}

func (o *CreateWorkflowUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/workflow][%d] createWorkflowUsingPOSTNotFound", 404)
}

func (o *CreateWorkflowUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
