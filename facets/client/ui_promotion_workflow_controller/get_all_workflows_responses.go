// Code generated by go-swagger; DO NOT EDIT.

package ui_promotion_workflow_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllWorkflowsReader is a Reader for the GetAllWorkflows structure.
type GetAllWorkflowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllWorkflowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllWorkflowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllWorkflowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllWorkflowsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllWorkflowsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllWorkflowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/workflow] getAllWorkflows", response, response.Code())
	}
}

// NewGetAllWorkflowsOK creates a GetAllWorkflowsOK with default headers values
func NewGetAllWorkflowsOK() *GetAllWorkflowsOK {
	return &GetAllWorkflowsOK{}
}

/*
GetAllWorkflowsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllWorkflowsOK struct {
	Payload []*models.PromotionWorkflow
}

// IsSuccess returns true when this get all workflows o k response has a 2xx status code
func (o *GetAllWorkflowsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all workflows o k response has a 3xx status code
func (o *GetAllWorkflowsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all workflows o k response has a 4xx status code
func (o *GetAllWorkflowsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all workflows o k response has a 5xx status code
func (o *GetAllWorkflowsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all workflows o k response a status code equal to that given
func (o *GetAllWorkflowsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all workflows o k response
func (o *GetAllWorkflowsOK) Code() int {
	return 200
}

func (o *GetAllWorkflowsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsOK %s", 200, payload)
}

func (o *GetAllWorkflowsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsOK %s", 200, payload)
}

func (o *GetAllWorkflowsOK) GetPayload() []*models.PromotionWorkflow {
	return o.Payload
}

func (o *GetAllWorkflowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllWorkflowsBadRequest creates a GetAllWorkflowsBadRequest with default headers values
func NewGetAllWorkflowsBadRequest() *GetAllWorkflowsBadRequest {
	return &GetAllWorkflowsBadRequest{}
}

/*
GetAllWorkflowsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllWorkflowsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all workflows bad request response has a 2xx status code
func (o *GetAllWorkflowsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all workflows bad request response has a 3xx status code
func (o *GetAllWorkflowsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all workflows bad request response has a 4xx status code
func (o *GetAllWorkflowsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all workflows bad request response has a 5xx status code
func (o *GetAllWorkflowsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all workflows bad request response a status code equal to that given
func (o *GetAllWorkflowsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all workflows bad request response
func (o *GetAllWorkflowsBadRequest) Code() int {
	return 400
}

func (o *GetAllWorkflowsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsBadRequest %s", 400, payload)
}

func (o *GetAllWorkflowsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsBadRequest %s", 400, payload)
}

func (o *GetAllWorkflowsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllWorkflowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllWorkflowsNotFound creates a GetAllWorkflowsNotFound with default headers values
func NewGetAllWorkflowsNotFound() *GetAllWorkflowsNotFound {
	return &GetAllWorkflowsNotFound{}
}

/*
GetAllWorkflowsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllWorkflowsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all workflows not found response has a 2xx status code
func (o *GetAllWorkflowsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all workflows not found response has a 3xx status code
func (o *GetAllWorkflowsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all workflows not found response has a 4xx status code
func (o *GetAllWorkflowsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all workflows not found response has a 5xx status code
func (o *GetAllWorkflowsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all workflows not found response a status code equal to that given
func (o *GetAllWorkflowsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all workflows not found response
func (o *GetAllWorkflowsNotFound) Code() int {
	return 404
}

func (o *GetAllWorkflowsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsNotFound %s", 404, payload)
}

func (o *GetAllWorkflowsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsNotFound %s", 404, payload)
}

func (o *GetAllWorkflowsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllWorkflowsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllWorkflowsMethodNotAllowed creates a GetAllWorkflowsMethodNotAllowed with default headers values
func NewGetAllWorkflowsMethodNotAllowed() *GetAllWorkflowsMethodNotAllowed {
	return &GetAllWorkflowsMethodNotAllowed{}
}

/*
GetAllWorkflowsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllWorkflowsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all workflows method not allowed response has a 2xx status code
func (o *GetAllWorkflowsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all workflows method not allowed response has a 3xx status code
func (o *GetAllWorkflowsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all workflows method not allowed response has a 4xx status code
func (o *GetAllWorkflowsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all workflows method not allowed response has a 5xx status code
func (o *GetAllWorkflowsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all workflows method not allowed response a status code equal to that given
func (o *GetAllWorkflowsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all workflows method not allowed response
func (o *GetAllWorkflowsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllWorkflowsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllWorkflowsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllWorkflowsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllWorkflowsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllWorkflowsInternalServerError creates a GetAllWorkflowsInternalServerError with default headers values
func NewGetAllWorkflowsInternalServerError() *GetAllWorkflowsInternalServerError {
	return &GetAllWorkflowsInternalServerError{}
}

/*
GetAllWorkflowsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllWorkflowsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all workflows internal server error response has a 2xx status code
func (o *GetAllWorkflowsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all workflows internal server error response has a 3xx status code
func (o *GetAllWorkflowsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all workflows internal server error response has a 4xx status code
func (o *GetAllWorkflowsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all workflows internal server error response has a 5xx status code
func (o *GetAllWorkflowsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all workflows internal server error response a status code equal to that given
func (o *GetAllWorkflowsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all workflows internal server error response
func (o *GetAllWorkflowsInternalServerError) Code() int {
	return 500
}

func (o *GetAllWorkflowsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsInternalServerError %s", 500, payload)
}

func (o *GetAllWorkflowsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/workflow][%d] getAllWorkflowsInternalServerError %s", 500, payload)
}

func (o *GetAllWorkflowsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllWorkflowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
