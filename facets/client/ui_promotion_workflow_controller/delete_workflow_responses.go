// Code generated by go-swagger; DO NOT EDIT.

package ui_promotion_workflow_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteWorkflowReader is a Reader for the DeleteWorkflow structure.
type DeleteWorkflowReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteWorkflowReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteWorkflowOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteWorkflowBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteWorkflowNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteWorkflowMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteWorkflowInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/workflow/{workflowId}] deleteWorkflow", response, response.Code())
	}
}

// NewDeleteWorkflowOK creates a DeleteWorkflowOK with default headers values
func NewDeleteWorkflowOK() *DeleteWorkflowOK {
	return &DeleteWorkflowOK{}
}

/*
DeleteWorkflowOK describes a response with status code 200, with default header values.

OK
*/
type DeleteWorkflowOK struct {
	Payload *models.PromotionWorkflow
}

// IsSuccess returns true when this delete workflow o k response has a 2xx status code
func (o *DeleteWorkflowOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete workflow o k response has a 3xx status code
func (o *DeleteWorkflowOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow o k response has a 4xx status code
func (o *DeleteWorkflowOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete workflow o k response has a 5xx status code
func (o *DeleteWorkflowOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflow o k response a status code equal to that given
func (o *DeleteWorkflowOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete workflow o k response
func (o *DeleteWorkflowOK) Code() int {
	return 200
}

func (o *DeleteWorkflowOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowOK %s", 200, payload)
}

func (o *DeleteWorkflowOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowOK %s", 200, payload)
}

func (o *DeleteWorkflowOK) GetPayload() *models.PromotionWorkflow {
	return o.Payload
}

func (o *DeleteWorkflowOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PromotionWorkflow)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowBadRequest creates a DeleteWorkflowBadRequest with default headers values
func NewDeleteWorkflowBadRequest() *DeleteWorkflowBadRequest {
	return &DeleteWorkflowBadRequest{}
}

/*
DeleteWorkflowBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteWorkflowBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete workflow bad request response has a 2xx status code
func (o *DeleteWorkflowBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflow bad request response has a 3xx status code
func (o *DeleteWorkflowBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow bad request response has a 4xx status code
func (o *DeleteWorkflowBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete workflow bad request response has a 5xx status code
func (o *DeleteWorkflowBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflow bad request response a status code equal to that given
func (o *DeleteWorkflowBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete workflow bad request response
func (o *DeleteWorkflowBadRequest) Code() int {
	return 400
}

func (o *DeleteWorkflowBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowBadRequest %s", 400, payload)
}

func (o *DeleteWorkflowBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowBadRequest %s", 400, payload)
}

func (o *DeleteWorkflowBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteWorkflowBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowNotFound creates a DeleteWorkflowNotFound with default headers values
func NewDeleteWorkflowNotFound() *DeleteWorkflowNotFound {
	return &DeleteWorkflowNotFound{}
}

/*
DeleteWorkflowNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteWorkflowNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete workflow not found response has a 2xx status code
func (o *DeleteWorkflowNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflow not found response has a 3xx status code
func (o *DeleteWorkflowNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow not found response has a 4xx status code
func (o *DeleteWorkflowNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete workflow not found response has a 5xx status code
func (o *DeleteWorkflowNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflow not found response a status code equal to that given
func (o *DeleteWorkflowNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete workflow not found response
func (o *DeleteWorkflowNotFound) Code() int {
	return 404
}

func (o *DeleteWorkflowNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowNotFound %s", 404, payload)
}

func (o *DeleteWorkflowNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowNotFound %s", 404, payload)
}

func (o *DeleteWorkflowNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteWorkflowNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowMethodNotAllowed creates a DeleteWorkflowMethodNotAllowed with default headers values
func NewDeleteWorkflowMethodNotAllowed() *DeleteWorkflowMethodNotAllowed {
	return &DeleteWorkflowMethodNotAllowed{}
}

/*
DeleteWorkflowMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteWorkflowMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete workflow method not allowed response has a 2xx status code
func (o *DeleteWorkflowMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflow method not allowed response has a 3xx status code
func (o *DeleteWorkflowMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow method not allowed response has a 4xx status code
func (o *DeleteWorkflowMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete workflow method not allowed response has a 5xx status code
func (o *DeleteWorkflowMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete workflow method not allowed response a status code equal to that given
func (o *DeleteWorkflowMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete workflow method not allowed response
func (o *DeleteWorkflowMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteWorkflowMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowMethodNotAllowed %s", 405, payload)
}

func (o *DeleteWorkflowMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowMethodNotAllowed %s", 405, payload)
}

func (o *DeleteWorkflowMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteWorkflowMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteWorkflowInternalServerError creates a DeleteWorkflowInternalServerError with default headers values
func NewDeleteWorkflowInternalServerError() *DeleteWorkflowInternalServerError {
	return &DeleteWorkflowInternalServerError{}
}

/*
DeleteWorkflowInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteWorkflowInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete workflow internal server error response has a 2xx status code
func (o *DeleteWorkflowInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete workflow internal server error response has a 3xx status code
func (o *DeleteWorkflowInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete workflow internal server error response has a 4xx status code
func (o *DeleteWorkflowInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete workflow internal server error response has a 5xx status code
func (o *DeleteWorkflowInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete workflow internal server error response a status code equal to that given
func (o *DeleteWorkflowInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete workflow internal server error response
func (o *DeleteWorkflowInternalServerError) Code() int {
	return 500
}

func (o *DeleteWorkflowInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowInternalServerError %s", 500, payload)
}

func (o *DeleteWorkflowInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/workflow/{workflowId}][%d] deleteWorkflowInternalServerError %s", 500, payload)
}

func (o *DeleteWorkflowInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteWorkflowInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
