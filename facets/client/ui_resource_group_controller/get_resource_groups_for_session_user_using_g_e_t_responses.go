// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceGroupsForSessionUserUsingGETReader is a Reader for the GetResourceGroupsForSessionUserUsingGET structure.
type GetResourceGroupsForSessionUserUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceGroupsForSessionUserUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceGroupsForSessionUserUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceGroupsForSessionUserUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceGroupsForSessionUserUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceGroupsForSessionUserUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/resource-groups/me] getResourceGroupsForSessionUserUsingGET", response, response.Code())
	}
}

// NewGetResourceGroupsForSessionUserUsingGETOK creates a GetResourceGroupsForSessionUserUsingGETOK with default headers values
func NewGetResourceGroupsForSessionUserUsingGETOK() *GetResourceGroupsForSessionUserUsingGETOK {
	return &GetResourceGroupsForSessionUserUsingGETOK{}
}

/*
GetResourceGroupsForSessionUserUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceGroupsForSessionUserUsingGETOK struct {
	Payload []*models.ResourceGroup
}

// IsSuccess returns true when this get resource groups for session user using g e t o k response has a 2xx status code
func (o *GetResourceGroupsForSessionUserUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource groups for session user using g e t o k response has a 3xx status code
func (o *GetResourceGroupsForSessionUserUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user using g e t o k response has a 4xx status code
func (o *GetResourceGroupsForSessionUserUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource groups for session user using g e t o k response has a 5xx status code
func (o *GetResourceGroupsForSessionUserUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user using g e t o k response a status code equal to that given
func (o *GetResourceGroupsForSessionUserUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource groups for session user using g e t o k response
func (o *GetResourceGroupsForSessionUserUsingGETOK) Code() int {
	return 200
}

func (o *GetResourceGroupsForSessionUserUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETOK %s", 200, payload)
}

func (o *GetResourceGroupsForSessionUserUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETOK %s", 200, payload)
}

func (o *GetResourceGroupsForSessionUserUsingGETOK) GetPayload() []*models.ResourceGroup {
	return o.Payload
}

func (o *GetResourceGroupsForSessionUserUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupsForSessionUserUsingGETUnauthorized creates a GetResourceGroupsForSessionUserUsingGETUnauthorized with default headers values
func NewGetResourceGroupsForSessionUserUsingGETUnauthorized() *GetResourceGroupsForSessionUserUsingGETUnauthorized {
	return &GetResourceGroupsForSessionUserUsingGETUnauthorized{}
}

/*
GetResourceGroupsForSessionUserUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceGroupsForSessionUserUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource groups for session user using g e t unauthorized response has a 2xx status code
func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource groups for session user using g e t unauthorized response has a 3xx status code
func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user using g e t unauthorized response has a 4xx status code
func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource groups for session user using g e t unauthorized response has a 5xx status code
func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user using g e t unauthorized response a status code equal to that given
func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource groups for session user using g e t unauthorized response
func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETUnauthorized", 401)
}

func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETUnauthorized", 401)
}

func (o *GetResourceGroupsForSessionUserUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceGroupsForSessionUserUsingGETForbidden creates a GetResourceGroupsForSessionUserUsingGETForbidden with default headers values
func NewGetResourceGroupsForSessionUserUsingGETForbidden() *GetResourceGroupsForSessionUserUsingGETForbidden {
	return &GetResourceGroupsForSessionUserUsingGETForbidden{}
}

/*
GetResourceGroupsForSessionUserUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceGroupsForSessionUserUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource groups for session user using g e t forbidden response has a 2xx status code
func (o *GetResourceGroupsForSessionUserUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource groups for session user using g e t forbidden response has a 3xx status code
func (o *GetResourceGroupsForSessionUserUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user using g e t forbidden response has a 4xx status code
func (o *GetResourceGroupsForSessionUserUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource groups for session user using g e t forbidden response has a 5xx status code
func (o *GetResourceGroupsForSessionUserUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user using g e t forbidden response a status code equal to that given
func (o *GetResourceGroupsForSessionUserUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource groups for session user using g e t forbidden response
func (o *GetResourceGroupsForSessionUserUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceGroupsForSessionUserUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETForbidden", 403)
}

func (o *GetResourceGroupsForSessionUserUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETForbidden", 403)
}

func (o *GetResourceGroupsForSessionUserUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceGroupsForSessionUserUsingGETNotFound creates a GetResourceGroupsForSessionUserUsingGETNotFound with default headers values
func NewGetResourceGroupsForSessionUserUsingGETNotFound() *GetResourceGroupsForSessionUserUsingGETNotFound {
	return &GetResourceGroupsForSessionUserUsingGETNotFound{}
}

/*
GetResourceGroupsForSessionUserUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceGroupsForSessionUserUsingGETNotFound struct {
}

// IsSuccess returns true when this get resource groups for session user using g e t not found response has a 2xx status code
func (o *GetResourceGroupsForSessionUserUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource groups for session user using g e t not found response has a 3xx status code
func (o *GetResourceGroupsForSessionUserUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user using g e t not found response has a 4xx status code
func (o *GetResourceGroupsForSessionUserUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource groups for session user using g e t not found response has a 5xx status code
func (o *GetResourceGroupsForSessionUserUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user using g e t not found response a status code equal to that given
func (o *GetResourceGroupsForSessionUserUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource groups for session user using g e t not found response
func (o *GetResourceGroupsForSessionUserUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceGroupsForSessionUserUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETNotFound", 404)
}

func (o *GetResourceGroupsForSessionUserUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserUsingGETNotFound", 404)
}

func (o *GetResourceGroupsForSessionUserUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
