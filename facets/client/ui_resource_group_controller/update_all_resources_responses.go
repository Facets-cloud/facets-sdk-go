// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateAllResourcesReader is a Reader for the UpdateAllResources structure.
type UpdateAllResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAllResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAllResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAllResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAllResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateAllResourcesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAllResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources] updateAllResources", response, response.Code())
	}
}

// NewUpdateAllResourcesOK creates a UpdateAllResourcesOK with default headers values
func NewUpdateAllResourcesOK() *UpdateAllResourcesOK {
	return &UpdateAllResourcesOK{}
}

/*
UpdateAllResourcesOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAllResourcesOK struct {
	Payload *models.ResourceGroup
}

// IsSuccess returns true when this update all resources o k response has a 2xx status code
func (o *UpdateAllResourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update all resources o k response has a 3xx status code
func (o *UpdateAllResourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update all resources o k response has a 4xx status code
func (o *UpdateAllResourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update all resources o k response has a 5xx status code
func (o *UpdateAllResourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update all resources o k response a status code equal to that given
func (o *UpdateAllResourcesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update all resources o k response
func (o *UpdateAllResourcesOK) Code() int {
	return 200
}

func (o *UpdateAllResourcesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesOK %s", 200, payload)
}

func (o *UpdateAllResourcesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesOK %s", 200, payload)
}

func (o *UpdateAllResourcesOK) GetPayload() *models.ResourceGroup {
	return o.Payload
}

func (o *UpdateAllResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAllResourcesBadRequest creates a UpdateAllResourcesBadRequest with default headers values
func NewUpdateAllResourcesBadRequest() *UpdateAllResourcesBadRequest {
	return &UpdateAllResourcesBadRequest{}
}

/*
UpdateAllResourcesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAllResourcesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update all resources bad request response has a 2xx status code
func (o *UpdateAllResourcesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update all resources bad request response has a 3xx status code
func (o *UpdateAllResourcesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update all resources bad request response has a 4xx status code
func (o *UpdateAllResourcesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update all resources bad request response has a 5xx status code
func (o *UpdateAllResourcesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update all resources bad request response a status code equal to that given
func (o *UpdateAllResourcesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update all resources bad request response
func (o *UpdateAllResourcesBadRequest) Code() int {
	return 400
}

func (o *UpdateAllResourcesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesBadRequest %s", 400, payload)
}

func (o *UpdateAllResourcesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesBadRequest %s", 400, payload)
}

func (o *UpdateAllResourcesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAllResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAllResourcesNotFound creates a UpdateAllResourcesNotFound with default headers values
func NewUpdateAllResourcesNotFound() *UpdateAllResourcesNotFound {
	return &UpdateAllResourcesNotFound{}
}

/*
UpdateAllResourcesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAllResourcesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update all resources not found response has a 2xx status code
func (o *UpdateAllResourcesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update all resources not found response has a 3xx status code
func (o *UpdateAllResourcesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update all resources not found response has a 4xx status code
func (o *UpdateAllResourcesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update all resources not found response has a 5xx status code
func (o *UpdateAllResourcesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update all resources not found response a status code equal to that given
func (o *UpdateAllResourcesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update all resources not found response
func (o *UpdateAllResourcesNotFound) Code() int {
	return 404
}

func (o *UpdateAllResourcesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesNotFound %s", 404, payload)
}

func (o *UpdateAllResourcesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesNotFound %s", 404, payload)
}

func (o *UpdateAllResourcesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAllResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAllResourcesMethodNotAllowed creates a UpdateAllResourcesMethodNotAllowed with default headers values
func NewUpdateAllResourcesMethodNotAllowed() *UpdateAllResourcesMethodNotAllowed {
	return &UpdateAllResourcesMethodNotAllowed{}
}

/*
UpdateAllResourcesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateAllResourcesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update all resources method not allowed response has a 2xx status code
func (o *UpdateAllResourcesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update all resources method not allowed response has a 3xx status code
func (o *UpdateAllResourcesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update all resources method not allowed response has a 4xx status code
func (o *UpdateAllResourcesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update all resources method not allowed response has a 5xx status code
func (o *UpdateAllResourcesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update all resources method not allowed response a status code equal to that given
func (o *UpdateAllResourcesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update all resources method not allowed response
func (o *UpdateAllResourcesMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateAllResourcesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAllResourcesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAllResourcesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAllResourcesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAllResourcesInternalServerError creates a UpdateAllResourcesInternalServerError with default headers values
func NewUpdateAllResourcesInternalServerError() *UpdateAllResourcesInternalServerError {
	return &UpdateAllResourcesInternalServerError{}
}

/*
UpdateAllResourcesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateAllResourcesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update all resources internal server error response has a 2xx status code
func (o *UpdateAllResourcesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update all resources internal server error response has a 3xx status code
func (o *UpdateAllResourcesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update all resources internal server error response has a 4xx status code
func (o *UpdateAllResourcesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update all resources internal server error response has a 5xx status code
func (o *UpdateAllResourcesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update all resources internal server error response a status code equal to that given
func (o *UpdateAllResourcesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update all resources internal server error response
func (o *UpdateAllResourcesInternalServerError) Code() int {
	return 500
}

func (o *UpdateAllResourcesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesInternalServerError %s", 500, payload)
}

func (o *UpdateAllResourcesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/resource-groups/{resourceGroupId}/resources][%d] updateAllResourcesInternalServerError %s", 500, payload)
}

func (o *UpdateAllResourcesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAllResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
