// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceGroupUsingGETReader is a Reader for the GetResourceGroupUsingGET structure.
type GetResourceGroupUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceGroupUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceGroupUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceGroupUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceGroupUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceGroupUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/resource-groups/{resourceGroupId}] getResourceGroupUsingGET", response, response.Code())
	}
}

// NewGetResourceGroupUsingGETOK creates a GetResourceGroupUsingGETOK with default headers values
func NewGetResourceGroupUsingGETOK() *GetResourceGroupUsingGETOK {
	return &GetResourceGroupUsingGETOK{}
}

/*
GetResourceGroupUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceGroupUsingGETOK struct {
	Payload *models.ResourceGroup
}

// IsSuccess returns true when this get resource group using g e t o k response has a 2xx status code
func (o *GetResourceGroupUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource group using g e t o k response has a 3xx status code
func (o *GetResourceGroupUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group using g e t o k response has a 4xx status code
func (o *GetResourceGroupUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource group using g e t o k response has a 5xx status code
func (o *GetResourceGroupUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group using g e t o k response a status code equal to that given
func (o *GetResourceGroupUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource group using g e t o k response
func (o *GetResourceGroupUsingGETOK) Code() int {
	return 200
}

func (o *GetResourceGroupUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETOK %s", 200, payload)
}

func (o *GetResourceGroupUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETOK %s", 200, payload)
}

func (o *GetResourceGroupUsingGETOK) GetPayload() *models.ResourceGroup {
	return o.Payload
}

func (o *GetResourceGroupUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupUsingGETUnauthorized creates a GetResourceGroupUsingGETUnauthorized with default headers values
func NewGetResourceGroupUsingGETUnauthorized() *GetResourceGroupUsingGETUnauthorized {
	return &GetResourceGroupUsingGETUnauthorized{}
}

/*
GetResourceGroupUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceGroupUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource group using g e t unauthorized response has a 2xx status code
func (o *GetResourceGroupUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource group using g e t unauthorized response has a 3xx status code
func (o *GetResourceGroupUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group using g e t unauthorized response has a 4xx status code
func (o *GetResourceGroupUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource group using g e t unauthorized response has a 5xx status code
func (o *GetResourceGroupUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group using g e t unauthorized response a status code equal to that given
func (o *GetResourceGroupUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource group using g e t unauthorized response
func (o *GetResourceGroupUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceGroupUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETUnauthorized", 401)
}

func (o *GetResourceGroupUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETUnauthorized", 401)
}

func (o *GetResourceGroupUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceGroupUsingGETForbidden creates a GetResourceGroupUsingGETForbidden with default headers values
func NewGetResourceGroupUsingGETForbidden() *GetResourceGroupUsingGETForbidden {
	return &GetResourceGroupUsingGETForbidden{}
}

/*
GetResourceGroupUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceGroupUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource group using g e t forbidden response has a 2xx status code
func (o *GetResourceGroupUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource group using g e t forbidden response has a 3xx status code
func (o *GetResourceGroupUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group using g e t forbidden response has a 4xx status code
func (o *GetResourceGroupUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource group using g e t forbidden response has a 5xx status code
func (o *GetResourceGroupUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group using g e t forbidden response a status code equal to that given
func (o *GetResourceGroupUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource group using g e t forbidden response
func (o *GetResourceGroupUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceGroupUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETForbidden", 403)
}

func (o *GetResourceGroupUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETForbidden", 403)
}

func (o *GetResourceGroupUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceGroupUsingGETNotFound creates a GetResourceGroupUsingGETNotFound with default headers values
func NewGetResourceGroupUsingGETNotFound() *GetResourceGroupUsingGETNotFound {
	return &GetResourceGroupUsingGETNotFound{}
}

/*
GetResourceGroupUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceGroupUsingGETNotFound struct {
}

// IsSuccess returns true when this get resource group using g e t not found response has a 2xx status code
func (o *GetResourceGroupUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource group using g e t not found response has a 3xx status code
func (o *GetResourceGroupUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group using g e t not found response has a 4xx status code
func (o *GetResourceGroupUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource group using g e t not found response has a 5xx status code
func (o *GetResourceGroupUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group using g e t not found response a status code equal to that given
func (o *GetResourceGroupUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource group using g e t not found response
func (o *GetResourceGroupUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceGroupUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETNotFound", 404)
}

func (o *GetResourceGroupUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupUsingGETNotFound", 404)
}

func (o *GetResourceGroupUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
