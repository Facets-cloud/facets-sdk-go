// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateUsingPOSTReader is a Reader for the CreateUsingPOST structure.
type CreateUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/resource-groups] createUsingPOST", response, response.Code())
	}
}

// NewCreateUsingPOSTOK creates a CreateUsingPOSTOK with default headers values
func NewCreateUsingPOSTOK() *CreateUsingPOSTOK {
	return &CreateUsingPOSTOK{}
}

/*
CreateUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateUsingPOSTOK struct {
	Payload *models.ResourceGroup
}

// IsSuccess returns true when this create using p o s t o k response has a 2xx status code
func (o *CreateUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create using p o s t o k response has a 3xx status code
func (o *CreateUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t o k response has a 4xx status code
func (o *CreateUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create using p o s t o k response has a 5xx status code
func (o *CreateUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t o k response a status code equal to that given
func (o *CreateUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create using p o s t o k response
func (o *CreateUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTOK %s", 200, payload)
}

func (o *CreateUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTOK %s", 200, payload)
}

func (o *CreateUsingPOSTOK) GetPayload() *models.ResourceGroup {
	return o.Payload
}

func (o *CreateUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUsingPOSTCreated creates a CreateUsingPOSTCreated with default headers values
func NewCreateUsingPOSTCreated() *CreateUsingPOSTCreated {
	return &CreateUsingPOSTCreated{}
}

/*
CreateUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateUsingPOSTCreated struct {
}

// IsSuccess returns true when this create using p o s t created response has a 2xx status code
func (o *CreateUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create using p o s t created response has a 3xx status code
func (o *CreateUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t created response has a 4xx status code
func (o *CreateUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create using p o s t created response has a 5xx status code
func (o *CreateUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t created response a status code equal to that given
func (o *CreateUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create using p o s t created response
func (o *CreateUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTCreated", 201)
}

func (o *CreateUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTCreated", 201)
}

func (o *CreateUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUsingPOSTUnauthorized creates a CreateUsingPOSTUnauthorized with default headers values
func NewCreateUsingPOSTUnauthorized() *CreateUsingPOSTUnauthorized {
	return &CreateUsingPOSTUnauthorized{}
}

/*
CreateUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create using p o s t unauthorized response has a 2xx status code
func (o *CreateUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create using p o s t unauthorized response has a 3xx status code
func (o *CreateUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t unauthorized response has a 4xx status code
func (o *CreateUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create using p o s t unauthorized response has a 5xx status code
func (o *CreateUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t unauthorized response a status code equal to that given
func (o *CreateUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create using p o s t unauthorized response
func (o *CreateUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTUnauthorized", 401)
}

func (o *CreateUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTUnauthorized", 401)
}

func (o *CreateUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUsingPOSTForbidden creates a CreateUsingPOSTForbidden with default headers values
func NewCreateUsingPOSTForbidden() *CreateUsingPOSTForbidden {
	return &CreateUsingPOSTForbidden{}
}

/*
CreateUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create using p o s t forbidden response has a 2xx status code
func (o *CreateUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create using p o s t forbidden response has a 3xx status code
func (o *CreateUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t forbidden response has a 4xx status code
func (o *CreateUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create using p o s t forbidden response has a 5xx status code
func (o *CreateUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t forbidden response a status code equal to that given
func (o *CreateUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create using p o s t forbidden response
func (o *CreateUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTForbidden", 403)
}

func (o *CreateUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTForbidden", 403)
}

func (o *CreateUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUsingPOSTNotFound creates a CreateUsingPOSTNotFound with default headers values
func NewCreateUsingPOSTNotFound() *CreateUsingPOSTNotFound {
	return &CreateUsingPOSTNotFound{}
}

/*
CreateUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create using p o s t not found response has a 2xx status code
func (o *CreateUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create using p o s t not found response has a 3xx status code
func (o *CreateUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create using p o s t not found response has a 4xx status code
func (o *CreateUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create using p o s t not found response has a 5xx status code
func (o *CreateUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create using p o s t not found response a status code equal to that given
func (o *CreateUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create using p o s t not found response
func (o *CreateUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTNotFound", 404)
}

func (o *CreateUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/resource-groups][%d] createUsingPOSTNotFound", 404)
}

func (o *CreateUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
