// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceGroupReader is a Reader for the GetResourceGroup structure.
type GetResourceGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetResourceGroupMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/resource-groups/{resourceGroupId}] getResourceGroup", response, response.Code())
	}
}

// NewGetResourceGroupOK creates a GetResourceGroupOK with default headers values
func NewGetResourceGroupOK() *GetResourceGroupOK {
	return &GetResourceGroupOK{}
}

/*
GetResourceGroupOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceGroupOK struct {
	Payload *models.ResourceGroup
}

// IsSuccess returns true when this get resource group o k response has a 2xx status code
func (o *GetResourceGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource group o k response has a 3xx status code
func (o *GetResourceGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group o k response has a 4xx status code
func (o *GetResourceGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource group o k response has a 5xx status code
func (o *GetResourceGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group o k response a status code equal to that given
func (o *GetResourceGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource group o k response
func (o *GetResourceGroupOK) Code() int {
	return 200
}

func (o *GetResourceGroupOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupOK %s", 200, payload)
}

func (o *GetResourceGroupOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupOK %s", 200, payload)
}

func (o *GetResourceGroupOK) GetPayload() *models.ResourceGroup {
	return o.Payload
}

func (o *GetResourceGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupBadRequest creates a GetResourceGroupBadRequest with default headers values
func NewGetResourceGroupBadRequest() *GetResourceGroupBadRequest {
	return &GetResourceGroupBadRequest{}
}

/*
GetResourceGroupBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceGroupBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource group bad request response has a 2xx status code
func (o *GetResourceGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource group bad request response has a 3xx status code
func (o *GetResourceGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group bad request response has a 4xx status code
func (o *GetResourceGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource group bad request response has a 5xx status code
func (o *GetResourceGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group bad request response a status code equal to that given
func (o *GetResourceGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get resource group bad request response
func (o *GetResourceGroupBadRequest) Code() int {
	return 400
}

func (o *GetResourceGroupBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupBadRequest %s", 400, payload)
}

func (o *GetResourceGroupBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupBadRequest %s", 400, payload)
}

func (o *GetResourceGroupBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupNotFound creates a GetResourceGroupNotFound with default headers values
func NewGetResourceGroupNotFound() *GetResourceGroupNotFound {
	return &GetResourceGroupNotFound{}
}

/*
GetResourceGroupNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceGroupNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource group not found response has a 2xx status code
func (o *GetResourceGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource group not found response has a 3xx status code
func (o *GetResourceGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group not found response has a 4xx status code
func (o *GetResourceGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource group not found response has a 5xx status code
func (o *GetResourceGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group not found response a status code equal to that given
func (o *GetResourceGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource group not found response
func (o *GetResourceGroupNotFound) Code() int {
	return 404
}

func (o *GetResourceGroupNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupNotFound %s", 404, payload)
}

func (o *GetResourceGroupNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupNotFound %s", 404, payload)
}

func (o *GetResourceGroupNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupMethodNotAllowed creates a GetResourceGroupMethodNotAllowed with default headers values
func NewGetResourceGroupMethodNotAllowed() *GetResourceGroupMethodNotAllowed {
	return &GetResourceGroupMethodNotAllowed{}
}

/*
GetResourceGroupMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetResourceGroupMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource group method not allowed response has a 2xx status code
func (o *GetResourceGroupMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource group method not allowed response has a 3xx status code
func (o *GetResourceGroupMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group method not allowed response has a 4xx status code
func (o *GetResourceGroupMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource group method not allowed response has a 5xx status code
func (o *GetResourceGroupMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource group method not allowed response a status code equal to that given
func (o *GetResourceGroupMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get resource group method not allowed response
func (o *GetResourceGroupMethodNotAllowed) Code() int {
	return 405
}

func (o *GetResourceGroupMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceGroupMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceGroupMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupInternalServerError creates a GetResourceGroupInternalServerError with default headers values
func NewGetResourceGroupInternalServerError() *GetResourceGroupInternalServerError {
	return &GetResourceGroupInternalServerError{}
}

/*
GetResourceGroupInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceGroupInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource group internal server error response has a 2xx status code
func (o *GetResourceGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource group internal server error response has a 3xx status code
func (o *GetResourceGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource group internal server error response has a 4xx status code
func (o *GetResourceGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource group internal server error response has a 5xx status code
func (o *GetResourceGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource group internal server error response a status code equal to that given
func (o *GetResourceGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource group internal server error response
func (o *GetResourceGroupInternalServerError) Code() int {
	return 500
}

func (o *GetResourceGroupInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupInternalServerError %s", 500, payload)
}

func (o *GetResourceGroupInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/{resourceGroupId}][%d] getResourceGroupInternalServerError %s", 500, payload)
}

func (o *GetResourceGroupInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
