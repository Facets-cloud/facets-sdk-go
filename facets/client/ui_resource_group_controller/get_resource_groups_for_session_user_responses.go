// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceGroupsForSessionUserReader is a Reader for the GetResourceGroupsForSessionUser structure.
type GetResourceGroupsForSessionUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceGroupsForSessionUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceGroupsForSessionUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceGroupsForSessionUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceGroupsForSessionUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetResourceGroupsForSessionUserMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceGroupsForSessionUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/resource-groups/me] getResourceGroupsForSessionUser", response, response.Code())
	}
}

// NewGetResourceGroupsForSessionUserOK creates a GetResourceGroupsForSessionUserOK with default headers values
func NewGetResourceGroupsForSessionUserOK() *GetResourceGroupsForSessionUserOK {
	return &GetResourceGroupsForSessionUserOK{}
}

/*
GetResourceGroupsForSessionUserOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceGroupsForSessionUserOK struct {
	Payload []*models.ResourceGroup
}

// IsSuccess returns true when this get resource groups for session user o k response has a 2xx status code
func (o *GetResourceGroupsForSessionUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource groups for session user o k response has a 3xx status code
func (o *GetResourceGroupsForSessionUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user o k response has a 4xx status code
func (o *GetResourceGroupsForSessionUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource groups for session user o k response has a 5xx status code
func (o *GetResourceGroupsForSessionUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user o k response a status code equal to that given
func (o *GetResourceGroupsForSessionUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource groups for session user o k response
func (o *GetResourceGroupsForSessionUserOK) Code() int {
	return 200
}

func (o *GetResourceGroupsForSessionUserOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserOK %s", 200, payload)
}

func (o *GetResourceGroupsForSessionUserOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserOK %s", 200, payload)
}

func (o *GetResourceGroupsForSessionUserOK) GetPayload() []*models.ResourceGroup {
	return o.Payload
}

func (o *GetResourceGroupsForSessionUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupsForSessionUserBadRequest creates a GetResourceGroupsForSessionUserBadRequest with default headers values
func NewGetResourceGroupsForSessionUserBadRequest() *GetResourceGroupsForSessionUserBadRequest {
	return &GetResourceGroupsForSessionUserBadRequest{}
}

/*
GetResourceGroupsForSessionUserBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceGroupsForSessionUserBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource groups for session user bad request response has a 2xx status code
func (o *GetResourceGroupsForSessionUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource groups for session user bad request response has a 3xx status code
func (o *GetResourceGroupsForSessionUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user bad request response has a 4xx status code
func (o *GetResourceGroupsForSessionUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource groups for session user bad request response has a 5xx status code
func (o *GetResourceGroupsForSessionUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user bad request response a status code equal to that given
func (o *GetResourceGroupsForSessionUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get resource groups for session user bad request response
func (o *GetResourceGroupsForSessionUserBadRequest) Code() int {
	return 400
}

func (o *GetResourceGroupsForSessionUserBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserBadRequest %s", 400, payload)
}

func (o *GetResourceGroupsForSessionUserBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserBadRequest %s", 400, payload)
}

func (o *GetResourceGroupsForSessionUserBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupsForSessionUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupsForSessionUserNotFound creates a GetResourceGroupsForSessionUserNotFound with default headers values
func NewGetResourceGroupsForSessionUserNotFound() *GetResourceGroupsForSessionUserNotFound {
	return &GetResourceGroupsForSessionUserNotFound{}
}

/*
GetResourceGroupsForSessionUserNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceGroupsForSessionUserNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource groups for session user not found response has a 2xx status code
func (o *GetResourceGroupsForSessionUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource groups for session user not found response has a 3xx status code
func (o *GetResourceGroupsForSessionUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user not found response has a 4xx status code
func (o *GetResourceGroupsForSessionUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource groups for session user not found response has a 5xx status code
func (o *GetResourceGroupsForSessionUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user not found response a status code equal to that given
func (o *GetResourceGroupsForSessionUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource groups for session user not found response
func (o *GetResourceGroupsForSessionUserNotFound) Code() int {
	return 404
}

func (o *GetResourceGroupsForSessionUserNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserNotFound %s", 404, payload)
}

func (o *GetResourceGroupsForSessionUserNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserNotFound %s", 404, payload)
}

func (o *GetResourceGroupsForSessionUserNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupsForSessionUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupsForSessionUserMethodNotAllowed creates a GetResourceGroupsForSessionUserMethodNotAllowed with default headers values
func NewGetResourceGroupsForSessionUserMethodNotAllowed() *GetResourceGroupsForSessionUserMethodNotAllowed {
	return &GetResourceGroupsForSessionUserMethodNotAllowed{}
}

/*
GetResourceGroupsForSessionUserMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetResourceGroupsForSessionUserMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource groups for session user method not allowed response has a 2xx status code
func (o *GetResourceGroupsForSessionUserMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource groups for session user method not allowed response has a 3xx status code
func (o *GetResourceGroupsForSessionUserMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user method not allowed response has a 4xx status code
func (o *GetResourceGroupsForSessionUserMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource groups for session user method not allowed response has a 5xx status code
func (o *GetResourceGroupsForSessionUserMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource groups for session user method not allowed response a status code equal to that given
func (o *GetResourceGroupsForSessionUserMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get resource groups for session user method not allowed response
func (o *GetResourceGroupsForSessionUserMethodNotAllowed) Code() int {
	return 405
}

func (o *GetResourceGroupsForSessionUserMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceGroupsForSessionUserMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceGroupsForSessionUserMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupsForSessionUserMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceGroupsForSessionUserInternalServerError creates a GetResourceGroupsForSessionUserInternalServerError with default headers values
func NewGetResourceGroupsForSessionUserInternalServerError() *GetResourceGroupsForSessionUserInternalServerError {
	return &GetResourceGroupsForSessionUserInternalServerError{}
}

/*
GetResourceGroupsForSessionUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceGroupsForSessionUserInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource groups for session user internal server error response has a 2xx status code
func (o *GetResourceGroupsForSessionUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource groups for session user internal server error response has a 3xx status code
func (o *GetResourceGroupsForSessionUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource groups for session user internal server error response has a 4xx status code
func (o *GetResourceGroupsForSessionUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource groups for session user internal server error response has a 5xx status code
func (o *GetResourceGroupsForSessionUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource groups for session user internal server error response a status code equal to that given
func (o *GetResourceGroupsForSessionUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource groups for session user internal server error response
func (o *GetResourceGroupsForSessionUserInternalServerError) Code() int {
	return 500
}

func (o *GetResourceGroupsForSessionUserInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserInternalServerError %s", 500, payload)
}

func (o *GetResourceGroupsForSessionUserInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups/me][%d] getResourceGroupsForSessionUserInternalServerError %s", 500, payload)
}

func (o *GetResourceGroupsForSessionUserInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceGroupsForSessionUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
