// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// FindAllReader is a Reader for the FindAll structure.
type FindAllReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *FindAllReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewFindAllOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewFindAllBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewFindAllNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewFindAllMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewFindAllInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/resource-groups] findAll", response, response.Code())
	}
}

// NewFindAllOK creates a FindAllOK with default headers values
func NewFindAllOK() *FindAllOK {
	return &FindAllOK{}
}

/*
FindAllOK describes a response with status code 200, with default header values.

OK
*/
type FindAllOK struct {
	Payload []*models.ResourceGroup
}

// IsSuccess returns true when this find all o k response has a 2xx status code
func (o *FindAllOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this find all o k response has a 3xx status code
func (o *FindAllOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all o k response has a 4xx status code
func (o *FindAllOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this find all o k response has a 5xx status code
func (o *FindAllOK) IsServerError() bool {
	return false
}

// IsCode returns true when this find all o k response a status code equal to that given
func (o *FindAllOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the find all o k response
func (o *FindAllOK) Code() int {
	return 200
}

func (o *FindAllOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllOK %s", 200, payload)
}

func (o *FindAllOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllOK %s", 200, payload)
}

func (o *FindAllOK) GetPayload() []*models.ResourceGroup {
	return o.Payload
}

func (o *FindAllOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindAllBadRequest creates a FindAllBadRequest with default headers values
func NewFindAllBadRequest() *FindAllBadRequest {
	return &FindAllBadRequest{}
}

/*
FindAllBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type FindAllBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this find all bad request response has a 2xx status code
func (o *FindAllBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find all bad request response has a 3xx status code
func (o *FindAllBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all bad request response has a 4xx status code
func (o *FindAllBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this find all bad request response has a 5xx status code
func (o *FindAllBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this find all bad request response a status code equal to that given
func (o *FindAllBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the find all bad request response
func (o *FindAllBadRequest) Code() int {
	return 400
}

func (o *FindAllBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllBadRequest %s", 400, payload)
}

func (o *FindAllBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllBadRequest %s", 400, payload)
}

func (o *FindAllBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *FindAllBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindAllNotFound creates a FindAllNotFound with default headers values
func NewFindAllNotFound() *FindAllNotFound {
	return &FindAllNotFound{}
}

/*
FindAllNotFound describes a response with status code 404, with default header values.

Not Found
*/
type FindAllNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this find all not found response has a 2xx status code
func (o *FindAllNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find all not found response has a 3xx status code
func (o *FindAllNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all not found response has a 4xx status code
func (o *FindAllNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this find all not found response has a 5xx status code
func (o *FindAllNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this find all not found response a status code equal to that given
func (o *FindAllNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the find all not found response
func (o *FindAllNotFound) Code() int {
	return 404
}

func (o *FindAllNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllNotFound %s", 404, payload)
}

func (o *FindAllNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllNotFound %s", 404, payload)
}

func (o *FindAllNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *FindAllNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindAllMethodNotAllowed creates a FindAllMethodNotAllowed with default headers values
func NewFindAllMethodNotAllowed() *FindAllMethodNotAllowed {
	return &FindAllMethodNotAllowed{}
}

/*
FindAllMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type FindAllMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this find all method not allowed response has a 2xx status code
func (o *FindAllMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find all method not allowed response has a 3xx status code
func (o *FindAllMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all method not allowed response has a 4xx status code
func (o *FindAllMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this find all method not allowed response has a 5xx status code
func (o *FindAllMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this find all method not allowed response a status code equal to that given
func (o *FindAllMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the find all method not allowed response
func (o *FindAllMethodNotAllowed) Code() int {
	return 405
}

func (o *FindAllMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllMethodNotAllowed %s", 405, payload)
}

func (o *FindAllMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllMethodNotAllowed %s", 405, payload)
}

func (o *FindAllMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *FindAllMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewFindAllInternalServerError creates a FindAllInternalServerError with default headers values
func NewFindAllInternalServerError() *FindAllInternalServerError {
	return &FindAllInternalServerError{}
}

/*
FindAllInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type FindAllInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this find all internal server error response has a 2xx status code
func (o *FindAllInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this find all internal server error response has a 3xx status code
func (o *FindAllInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this find all internal server error response has a 4xx status code
func (o *FindAllInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this find all internal server error response has a 5xx status code
func (o *FindAllInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this find all internal server error response a status code equal to that given
func (o *FindAllInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the find all internal server error response
func (o *FindAllInternalServerError) Code() int {
	return 500
}

func (o *FindAllInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllInternalServerError %s", 500, payload)
}

func (o *FindAllInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resource-groups][%d] findAllInternalServerError %s", 500, payload)
}

func (o *FindAllInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *FindAllInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
