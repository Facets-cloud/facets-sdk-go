// Code generated by go-swagger; DO NOT EDIT.

package ui_team_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTeamMembersUsingGETReader is a Reader for the GetTeamMembersUsingGET structure.
type GetTeamMembersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamMembersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamMembersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTeamMembersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTeamMembersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTeamMembersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/teams/{teamId}/members] getTeamMembersUsingGET", response, response.Code())
	}
}

// NewGetTeamMembersUsingGETOK creates a GetTeamMembersUsingGETOK with default headers values
func NewGetTeamMembersUsingGETOK() *GetTeamMembersUsingGETOK {
	return &GetTeamMembersUsingGETOK{}
}

/*
GetTeamMembersUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetTeamMembersUsingGETOK struct {
	Payload []*models.TeamMembership
}

// IsSuccess returns true when this get team members using g e t o k response has a 2xx status code
func (o *GetTeamMembersUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get team members using g e t o k response has a 3xx status code
func (o *GetTeamMembersUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team members using g e t o k response has a 4xx status code
func (o *GetTeamMembersUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get team members using g e t o k response has a 5xx status code
func (o *GetTeamMembersUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get team members using g e t o k response a status code equal to that given
func (o *GetTeamMembersUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get team members using g e t o k response
func (o *GetTeamMembersUsingGETOK) Code() int {
	return 200
}

func (o *GetTeamMembersUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETOK %s", 200, payload)
}

func (o *GetTeamMembersUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETOK %s", 200, payload)
}

func (o *GetTeamMembersUsingGETOK) GetPayload() []*models.TeamMembership {
	return o.Payload
}

func (o *GetTeamMembersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamMembersUsingGETUnauthorized creates a GetTeamMembersUsingGETUnauthorized with default headers values
func NewGetTeamMembersUsingGETUnauthorized() *GetTeamMembersUsingGETUnauthorized {
	return &GetTeamMembersUsingGETUnauthorized{}
}

/*
GetTeamMembersUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTeamMembersUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get team members using g e t unauthorized response has a 2xx status code
func (o *GetTeamMembersUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team members using g e t unauthorized response has a 3xx status code
func (o *GetTeamMembersUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team members using g e t unauthorized response has a 4xx status code
func (o *GetTeamMembersUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team members using g e t unauthorized response has a 5xx status code
func (o *GetTeamMembersUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get team members using g e t unauthorized response a status code equal to that given
func (o *GetTeamMembersUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get team members using g e t unauthorized response
func (o *GetTeamMembersUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetTeamMembersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETUnauthorized", 401)
}

func (o *GetTeamMembersUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETUnauthorized", 401)
}

func (o *GetTeamMembersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTeamMembersUsingGETForbidden creates a GetTeamMembersUsingGETForbidden with default headers values
func NewGetTeamMembersUsingGETForbidden() *GetTeamMembersUsingGETForbidden {
	return &GetTeamMembersUsingGETForbidden{}
}

/*
GetTeamMembersUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTeamMembersUsingGETForbidden struct {
}

// IsSuccess returns true when this get team members using g e t forbidden response has a 2xx status code
func (o *GetTeamMembersUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team members using g e t forbidden response has a 3xx status code
func (o *GetTeamMembersUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team members using g e t forbidden response has a 4xx status code
func (o *GetTeamMembersUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team members using g e t forbidden response has a 5xx status code
func (o *GetTeamMembersUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get team members using g e t forbidden response a status code equal to that given
func (o *GetTeamMembersUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get team members using g e t forbidden response
func (o *GetTeamMembersUsingGETForbidden) Code() int {
	return 403
}

func (o *GetTeamMembersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETForbidden", 403)
}

func (o *GetTeamMembersUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETForbidden", 403)
}

func (o *GetTeamMembersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTeamMembersUsingGETNotFound creates a GetTeamMembersUsingGETNotFound with default headers values
func NewGetTeamMembersUsingGETNotFound() *GetTeamMembersUsingGETNotFound {
	return &GetTeamMembersUsingGETNotFound{}
}

/*
GetTeamMembersUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTeamMembersUsingGETNotFound struct {
}

// IsSuccess returns true when this get team members using g e t not found response has a 2xx status code
func (o *GetTeamMembersUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get team members using g e t not found response has a 3xx status code
func (o *GetTeamMembersUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get team members using g e t not found response has a 4xx status code
func (o *GetTeamMembersUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get team members using g e t not found response has a 5xx status code
func (o *GetTeamMembersUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get team members using g e t not found response a status code equal to that given
func (o *GetTeamMembersUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get team members using g e t not found response
func (o *GetTeamMembersUsingGETNotFound) Code() int {
	return 404
}

func (o *GetTeamMembersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETNotFound", 404)
}

func (o *GetTeamMembersUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/{teamId}/members][%d] getTeamMembersUsingGETNotFound", 404)
}

func (o *GetTeamMembersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
