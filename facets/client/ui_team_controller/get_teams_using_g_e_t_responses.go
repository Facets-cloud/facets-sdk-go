// Code generated by go-swagger; DO NOT EDIT.

package ui_team_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTeamsUsingGETReader is a Reader for the GetTeamsUsingGET structure.
type GetTeamsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTeamsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTeamsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTeamsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTeamsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTeamsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/teams/] getTeamsUsingGET", response, response.Code())
	}
}

// NewGetTeamsUsingGETOK creates a GetTeamsUsingGETOK with default headers values
func NewGetTeamsUsingGETOK() *GetTeamsUsingGETOK {
	return &GetTeamsUsingGETOK{}
}

/*
GetTeamsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetTeamsUsingGETOK struct {
	Payload []*models.Team
}

// IsSuccess returns true when this get teams using g e t o k response has a 2xx status code
func (o *GetTeamsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get teams using g e t o k response has a 3xx status code
func (o *GetTeamsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teams using g e t o k response has a 4xx status code
func (o *GetTeamsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get teams using g e t o k response has a 5xx status code
func (o *GetTeamsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get teams using g e t o k response a status code equal to that given
func (o *GetTeamsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get teams using g e t o k response
func (o *GetTeamsUsingGETOK) Code() int {
	return 200
}

func (o *GetTeamsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETOK %s", 200, payload)
}

func (o *GetTeamsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETOK %s", 200, payload)
}

func (o *GetTeamsUsingGETOK) GetPayload() []*models.Team {
	return o.Payload
}

func (o *GetTeamsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTeamsUsingGETUnauthorized creates a GetTeamsUsingGETUnauthorized with default headers values
func NewGetTeamsUsingGETUnauthorized() *GetTeamsUsingGETUnauthorized {
	return &GetTeamsUsingGETUnauthorized{}
}

/*
GetTeamsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTeamsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get teams using g e t unauthorized response has a 2xx status code
func (o *GetTeamsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get teams using g e t unauthorized response has a 3xx status code
func (o *GetTeamsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teams using g e t unauthorized response has a 4xx status code
func (o *GetTeamsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get teams using g e t unauthorized response has a 5xx status code
func (o *GetTeamsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get teams using g e t unauthorized response a status code equal to that given
func (o *GetTeamsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get teams using g e t unauthorized response
func (o *GetTeamsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetTeamsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETUnauthorized", 401)
}

func (o *GetTeamsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETUnauthorized", 401)
}

func (o *GetTeamsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTeamsUsingGETForbidden creates a GetTeamsUsingGETForbidden with default headers values
func NewGetTeamsUsingGETForbidden() *GetTeamsUsingGETForbidden {
	return &GetTeamsUsingGETForbidden{}
}

/*
GetTeamsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTeamsUsingGETForbidden struct {
}

// IsSuccess returns true when this get teams using g e t forbidden response has a 2xx status code
func (o *GetTeamsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get teams using g e t forbidden response has a 3xx status code
func (o *GetTeamsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teams using g e t forbidden response has a 4xx status code
func (o *GetTeamsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get teams using g e t forbidden response has a 5xx status code
func (o *GetTeamsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get teams using g e t forbidden response a status code equal to that given
func (o *GetTeamsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get teams using g e t forbidden response
func (o *GetTeamsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetTeamsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETForbidden", 403)
}

func (o *GetTeamsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETForbidden", 403)
}

func (o *GetTeamsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTeamsUsingGETNotFound creates a GetTeamsUsingGETNotFound with default headers values
func NewGetTeamsUsingGETNotFound() *GetTeamsUsingGETNotFound {
	return &GetTeamsUsingGETNotFound{}
}

/*
GetTeamsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTeamsUsingGETNotFound struct {
}

// IsSuccess returns true when this get teams using g e t not found response has a 2xx status code
func (o *GetTeamsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get teams using g e t not found response has a 3xx status code
func (o *GetTeamsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get teams using g e t not found response has a 4xx status code
func (o *GetTeamsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get teams using g e t not found response has a 5xx status code
func (o *GetTeamsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get teams using g e t not found response a status code equal to that given
func (o *GetTeamsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get teams using g e t not found response
func (o *GetTeamsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetTeamsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETNotFound", 404)
}

func (o *GetTeamsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/teams/][%d] getTeamsUsingGETNotFound", 404)
}

func (o *GetTeamsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
