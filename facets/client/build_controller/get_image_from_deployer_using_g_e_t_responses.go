// Code generated by go-swagger; DO NOT EDIT.

package build_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetImageFromDeployerUsingGETReader is a Reader for the GetImageFromDeployerUsingGET structure.
type GetImageFromDeployerUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImageFromDeployerUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetImageFromDeployerUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetImageFromDeployerUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetImageFromDeployerUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetImageFromDeployerUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/build/deployer/{applicationId}] getImageFromDeployerUsingGET", response, response.Code())
	}
}

// NewGetImageFromDeployerUsingGETOK creates a GetImageFromDeployerUsingGETOK with default headers values
func NewGetImageFromDeployerUsingGETOK() *GetImageFromDeployerUsingGETOK {
	return &GetImageFromDeployerUsingGETOK{}
}

/*
GetImageFromDeployerUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetImageFromDeployerUsingGETOK struct {
	Payload *models.Build
}

// IsSuccess returns true when this get image from deployer using g e t o k response has a 2xx status code
func (o *GetImageFromDeployerUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get image from deployer using g e t o k response has a 3xx status code
func (o *GetImageFromDeployerUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get image from deployer using g e t o k response has a 4xx status code
func (o *GetImageFromDeployerUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get image from deployer using g e t o k response has a 5xx status code
func (o *GetImageFromDeployerUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get image from deployer using g e t o k response a status code equal to that given
func (o *GetImageFromDeployerUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get image from deployer using g e t o k response
func (o *GetImageFromDeployerUsingGETOK) Code() int {
	return 200
}

func (o *GetImageFromDeployerUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETOK %s", 200, payload)
}

func (o *GetImageFromDeployerUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETOK %s", 200, payload)
}

func (o *GetImageFromDeployerUsingGETOK) GetPayload() *models.Build {
	return o.Payload
}

func (o *GetImageFromDeployerUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Build)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImageFromDeployerUsingGETUnauthorized creates a GetImageFromDeployerUsingGETUnauthorized with default headers values
func NewGetImageFromDeployerUsingGETUnauthorized() *GetImageFromDeployerUsingGETUnauthorized {
	return &GetImageFromDeployerUsingGETUnauthorized{}
}

/*
GetImageFromDeployerUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetImageFromDeployerUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get image from deployer using g e t unauthorized response has a 2xx status code
func (o *GetImageFromDeployerUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get image from deployer using g e t unauthorized response has a 3xx status code
func (o *GetImageFromDeployerUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get image from deployer using g e t unauthorized response has a 4xx status code
func (o *GetImageFromDeployerUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get image from deployer using g e t unauthorized response has a 5xx status code
func (o *GetImageFromDeployerUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get image from deployer using g e t unauthorized response a status code equal to that given
func (o *GetImageFromDeployerUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get image from deployer using g e t unauthorized response
func (o *GetImageFromDeployerUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetImageFromDeployerUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETUnauthorized", 401)
}

func (o *GetImageFromDeployerUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETUnauthorized", 401)
}

func (o *GetImageFromDeployerUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetImageFromDeployerUsingGETForbidden creates a GetImageFromDeployerUsingGETForbidden with default headers values
func NewGetImageFromDeployerUsingGETForbidden() *GetImageFromDeployerUsingGETForbidden {
	return &GetImageFromDeployerUsingGETForbidden{}
}

/*
GetImageFromDeployerUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetImageFromDeployerUsingGETForbidden struct {
}

// IsSuccess returns true when this get image from deployer using g e t forbidden response has a 2xx status code
func (o *GetImageFromDeployerUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get image from deployer using g e t forbidden response has a 3xx status code
func (o *GetImageFromDeployerUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get image from deployer using g e t forbidden response has a 4xx status code
func (o *GetImageFromDeployerUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get image from deployer using g e t forbidden response has a 5xx status code
func (o *GetImageFromDeployerUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get image from deployer using g e t forbidden response a status code equal to that given
func (o *GetImageFromDeployerUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get image from deployer using g e t forbidden response
func (o *GetImageFromDeployerUsingGETForbidden) Code() int {
	return 403
}

func (o *GetImageFromDeployerUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETForbidden", 403)
}

func (o *GetImageFromDeployerUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETForbidden", 403)
}

func (o *GetImageFromDeployerUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetImageFromDeployerUsingGETNotFound creates a GetImageFromDeployerUsingGETNotFound with default headers values
func NewGetImageFromDeployerUsingGETNotFound() *GetImageFromDeployerUsingGETNotFound {
	return &GetImageFromDeployerUsingGETNotFound{}
}

/*
GetImageFromDeployerUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetImageFromDeployerUsingGETNotFound struct {
}

// IsSuccess returns true when this get image from deployer using g e t not found response has a 2xx status code
func (o *GetImageFromDeployerUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get image from deployer using g e t not found response has a 3xx status code
func (o *GetImageFromDeployerUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get image from deployer using g e t not found response has a 4xx status code
func (o *GetImageFromDeployerUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get image from deployer using g e t not found response has a 5xx status code
func (o *GetImageFromDeployerUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get image from deployer using g e t not found response a status code equal to that given
func (o *GetImageFromDeployerUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get image from deployer using g e t not found response
func (o *GetImageFromDeployerUsingGETNotFound) Code() int {
	return 404
}

func (o *GetImageFromDeployerUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETNotFound", 404)
}

func (o *GetImageFromDeployerUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/build/deployer/{applicationId}][%d] getImageFromDeployerUsingGETNotFound", 404)
}

func (o *GetImageFromDeployerUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
