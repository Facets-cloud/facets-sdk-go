// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AttachImageReader is a Reader for the AttachImage structure.
type AttachImageReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttachImageReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAttachImageOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAttachImageBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAttachImageNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAttachImageMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAttachImageInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/attach-image] attachImage", response, response.Code())
	}
}

// NewAttachImageOK creates a AttachImageOK with default headers values
func NewAttachImageOK() *AttachImageOK {
	return &AttachImageOK{}
}

/*
AttachImageOK describes a response with status code 200, with default header values.

OK
*/
type AttachImageOK struct {
}

// IsSuccess returns true when this attach image o k response has a 2xx status code
func (o *AttachImageOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this attach image o k response has a 3xx status code
func (o *AttachImageOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image o k response has a 4xx status code
func (o *AttachImageOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this attach image o k response has a 5xx status code
func (o *AttachImageOK) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image o k response a status code equal to that given
func (o *AttachImageOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the attach image o k response
func (o *AttachImageOK) Code() int {
	return 200
}

func (o *AttachImageOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageOK", 200)
}

func (o *AttachImageOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageOK", 200)
}

func (o *AttachImageOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageBadRequest creates a AttachImageBadRequest with default headers values
func NewAttachImageBadRequest() *AttachImageBadRequest {
	return &AttachImageBadRequest{}
}

/*
AttachImageBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AttachImageBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this attach image bad request response has a 2xx status code
func (o *AttachImageBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image bad request response has a 3xx status code
func (o *AttachImageBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image bad request response has a 4xx status code
func (o *AttachImageBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image bad request response has a 5xx status code
func (o *AttachImageBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image bad request response a status code equal to that given
func (o *AttachImageBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the attach image bad request response
func (o *AttachImageBadRequest) Code() int {
	return 400
}

func (o *AttachImageBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageBadRequest %s", 400, payload)
}

func (o *AttachImageBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageBadRequest %s", 400, payload)
}

func (o *AttachImageBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AttachImageBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachImageNotFound creates a AttachImageNotFound with default headers values
func NewAttachImageNotFound() *AttachImageNotFound {
	return &AttachImageNotFound{}
}

/*
AttachImageNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AttachImageNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this attach image not found response has a 2xx status code
func (o *AttachImageNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image not found response has a 3xx status code
func (o *AttachImageNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image not found response has a 4xx status code
func (o *AttachImageNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image not found response has a 5xx status code
func (o *AttachImageNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image not found response a status code equal to that given
func (o *AttachImageNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the attach image not found response
func (o *AttachImageNotFound) Code() int {
	return 404
}

func (o *AttachImageNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageNotFound %s", 404, payload)
}

func (o *AttachImageNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageNotFound %s", 404, payload)
}

func (o *AttachImageNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AttachImageNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachImageMethodNotAllowed creates a AttachImageMethodNotAllowed with default headers values
func NewAttachImageMethodNotAllowed() *AttachImageMethodNotAllowed {
	return &AttachImageMethodNotAllowed{}
}

/*
AttachImageMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AttachImageMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this attach image method not allowed response has a 2xx status code
func (o *AttachImageMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image method not allowed response has a 3xx status code
func (o *AttachImageMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image method not allowed response has a 4xx status code
func (o *AttachImageMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image method not allowed response has a 5xx status code
func (o *AttachImageMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image method not allowed response a status code equal to that given
func (o *AttachImageMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the attach image method not allowed response
func (o *AttachImageMethodNotAllowed) Code() int {
	return 405
}

func (o *AttachImageMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageMethodNotAllowed %s", 405, payload)
}

func (o *AttachImageMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageMethodNotAllowed %s", 405, payload)
}

func (o *AttachImageMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AttachImageMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAttachImageInternalServerError creates a AttachImageInternalServerError with default headers values
func NewAttachImageInternalServerError() *AttachImageInternalServerError {
	return &AttachImageInternalServerError{}
}

/*
AttachImageInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AttachImageInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this attach image internal server error response has a 2xx status code
func (o *AttachImageInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image internal server error response has a 3xx status code
func (o *AttachImageInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image internal server error response has a 4xx status code
func (o *AttachImageInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this attach image internal server error response has a 5xx status code
func (o *AttachImageInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this attach image internal server error response a status code equal to that given
func (o *AttachImageInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the attach image internal server error response
func (o *AttachImageInternalServerError) Code() int {
	return 500
}

func (o *AttachImageInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageInternalServerError %s", 500, payload)
}

func (o *AttachImageInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageInternalServerError %s", 500, payload)
}

func (o *AttachImageInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AttachImageInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
