// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetKubeConfigReader is a Reader for the GetKubeConfig structure.
type GetKubeConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubeConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubeConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetKubeConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKubeConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetKubeConfigMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetKubeConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig] getKubeConfig", response, response.Code())
	}
}

// NewGetKubeConfigOK creates a GetKubeConfigOK with default headers values
func NewGetKubeConfigOK() *GetKubeConfigOK {
	return &GetKubeConfigOK{}
}

/*
GetKubeConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetKubeConfigOK struct {
	Payload string
}

// IsSuccess returns true when this get kube config o k response has a 2xx status code
func (o *GetKubeConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kube config o k response has a 3xx status code
func (o *GetKubeConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config o k response has a 4xx status code
func (o *GetKubeConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kube config o k response has a 5xx status code
func (o *GetKubeConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config o k response a status code equal to that given
func (o *GetKubeConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kube config o k response
func (o *GetKubeConfigOK) Code() int {
	return 200
}

func (o *GetKubeConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigOK %s", 200, payload)
}

func (o *GetKubeConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigOK %s", 200, payload)
}

func (o *GetKubeConfigOK) GetPayload() string {
	return o.Payload
}

func (o *GetKubeConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubeConfigBadRequest creates a GetKubeConfigBadRequest with default headers values
func NewGetKubeConfigBadRequest() *GetKubeConfigBadRequest {
	return &GetKubeConfigBadRequest{}
}

/*
GetKubeConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetKubeConfigBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get kube config bad request response has a 2xx status code
func (o *GetKubeConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kube config bad request response has a 3xx status code
func (o *GetKubeConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config bad request response has a 4xx status code
func (o *GetKubeConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kube config bad request response has a 5xx status code
func (o *GetKubeConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config bad request response a status code equal to that given
func (o *GetKubeConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get kube config bad request response
func (o *GetKubeConfigBadRequest) Code() int {
	return 400
}

func (o *GetKubeConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigBadRequest %s", 400, payload)
}

func (o *GetKubeConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigBadRequest %s", 400, payload)
}

func (o *GetKubeConfigBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetKubeConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubeConfigNotFound creates a GetKubeConfigNotFound with default headers values
func NewGetKubeConfigNotFound() *GetKubeConfigNotFound {
	return &GetKubeConfigNotFound{}
}

/*
GetKubeConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetKubeConfigNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get kube config not found response has a 2xx status code
func (o *GetKubeConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kube config not found response has a 3xx status code
func (o *GetKubeConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config not found response has a 4xx status code
func (o *GetKubeConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kube config not found response has a 5xx status code
func (o *GetKubeConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config not found response a status code equal to that given
func (o *GetKubeConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get kube config not found response
func (o *GetKubeConfigNotFound) Code() int {
	return 404
}

func (o *GetKubeConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigNotFound %s", 404, payload)
}

func (o *GetKubeConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigNotFound %s", 404, payload)
}

func (o *GetKubeConfigNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetKubeConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubeConfigMethodNotAllowed creates a GetKubeConfigMethodNotAllowed with default headers values
func NewGetKubeConfigMethodNotAllowed() *GetKubeConfigMethodNotAllowed {
	return &GetKubeConfigMethodNotAllowed{}
}

/*
GetKubeConfigMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetKubeConfigMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get kube config method not allowed response has a 2xx status code
func (o *GetKubeConfigMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kube config method not allowed response has a 3xx status code
func (o *GetKubeConfigMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config method not allowed response has a 4xx status code
func (o *GetKubeConfigMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kube config method not allowed response has a 5xx status code
func (o *GetKubeConfigMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config method not allowed response a status code equal to that given
func (o *GetKubeConfigMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get kube config method not allowed response
func (o *GetKubeConfigMethodNotAllowed) Code() int {
	return 405
}

func (o *GetKubeConfigMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigMethodNotAllowed %s", 405, payload)
}

func (o *GetKubeConfigMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigMethodNotAllowed %s", 405, payload)
}

func (o *GetKubeConfigMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetKubeConfigMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubeConfigInternalServerError creates a GetKubeConfigInternalServerError with default headers values
func NewGetKubeConfigInternalServerError() *GetKubeConfigInternalServerError {
	return &GetKubeConfigInternalServerError{}
}

/*
GetKubeConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetKubeConfigInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get kube config internal server error response has a 2xx status code
func (o *GetKubeConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kube config internal server error response has a 3xx status code
func (o *GetKubeConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config internal server error response has a 4xx status code
func (o *GetKubeConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kube config internal server error response has a 5xx status code
func (o *GetKubeConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get kube config internal server error response a status code equal to that given
func (o *GetKubeConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get kube config internal server error response
func (o *GetKubeConfigInternalServerError) Code() int {
	return 500
}

func (o *GetKubeConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigInternalServerError %s", 500, payload)
}

func (o *GetKubeConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigInternalServerError %s", 500, payload)
}

func (o *GetKubeConfigInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetKubeConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
