// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SilenceAlertsUsingPOSTReader is a Reader for the SilenceAlertsUsingPOST structure.
type SilenceAlertsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SilenceAlertsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSilenceAlertsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewSilenceAlertsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSilenceAlertsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSilenceAlertsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSilenceAlertsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts] silenceAlertsUsingPOST", response, response.Code())
	}
}

// NewSilenceAlertsUsingPOSTOK creates a SilenceAlertsUsingPOSTOK with default headers values
func NewSilenceAlertsUsingPOSTOK() *SilenceAlertsUsingPOSTOK {
	return &SilenceAlertsUsingPOSTOK{}
}

/*
SilenceAlertsUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type SilenceAlertsUsingPOSTOK struct {
	Payload map[string]interface{}
}

// IsSuccess returns true when this silence alerts using p o s t o k response has a 2xx status code
func (o *SilenceAlertsUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this silence alerts using p o s t o k response has a 3xx status code
func (o *SilenceAlertsUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this silence alerts using p o s t o k response has a 4xx status code
func (o *SilenceAlertsUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this silence alerts using p o s t o k response has a 5xx status code
func (o *SilenceAlertsUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this silence alerts using p o s t o k response a status code equal to that given
func (o *SilenceAlertsUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the silence alerts using p o s t o k response
func (o *SilenceAlertsUsingPOSTOK) Code() int {
	return 200
}

func (o *SilenceAlertsUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTOK %s", 200, payload)
}

func (o *SilenceAlertsUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTOK %s", 200, payload)
}

func (o *SilenceAlertsUsingPOSTOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *SilenceAlertsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSilenceAlertsUsingPOSTCreated creates a SilenceAlertsUsingPOSTCreated with default headers values
func NewSilenceAlertsUsingPOSTCreated() *SilenceAlertsUsingPOSTCreated {
	return &SilenceAlertsUsingPOSTCreated{}
}

/*
SilenceAlertsUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type SilenceAlertsUsingPOSTCreated struct {
}

// IsSuccess returns true when this silence alerts using p o s t created response has a 2xx status code
func (o *SilenceAlertsUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this silence alerts using p o s t created response has a 3xx status code
func (o *SilenceAlertsUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this silence alerts using p o s t created response has a 4xx status code
func (o *SilenceAlertsUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this silence alerts using p o s t created response has a 5xx status code
func (o *SilenceAlertsUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this silence alerts using p o s t created response a status code equal to that given
func (o *SilenceAlertsUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the silence alerts using p o s t created response
func (o *SilenceAlertsUsingPOSTCreated) Code() int {
	return 201
}

func (o *SilenceAlertsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTCreated", 201)
}

func (o *SilenceAlertsUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTCreated", 201)
}

func (o *SilenceAlertsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSilenceAlertsUsingPOSTUnauthorized creates a SilenceAlertsUsingPOSTUnauthorized with default headers values
func NewSilenceAlertsUsingPOSTUnauthorized() *SilenceAlertsUsingPOSTUnauthorized {
	return &SilenceAlertsUsingPOSTUnauthorized{}
}

/*
SilenceAlertsUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SilenceAlertsUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this silence alerts using p o s t unauthorized response has a 2xx status code
func (o *SilenceAlertsUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this silence alerts using p o s t unauthorized response has a 3xx status code
func (o *SilenceAlertsUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this silence alerts using p o s t unauthorized response has a 4xx status code
func (o *SilenceAlertsUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this silence alerts using p o s t unauthorized response has a 5xx status code
func (o *SilenceAlertsUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this silence alerts using p o s t unauthorized response a status code equal to that given
func (o *SilenceAlertsUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the silence alerts using p o s t unauthorized response
func (o *SilenceAlertsUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *SilenceAlertsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTUnauthorized", 401)
}

func (o *SilenceAlertsUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTUnauthorized", 401)
}

func (o *SilenceAlertsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSilenceAlertsUsingPOSTForbidden creates a SilenceAlertsUsingPOSTForbidden with default headers values
func NewSilenceAlertsUsingPOSTForbidden() *SilenceAlertsUsingPOSTForbidden {
	return &SilenceAlertsUsingPOSTForbidden{}
}

/*
SilenceAlertsUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SilenceAlertsUsingPOSTForbidden struct {
}

// IsSuccess returns true when this silence alerts using p o s t forbidden response has a 2xx status code
func (o *SilenceAlertsUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this silence alerts using p o s t forbidden response has a 3xx status code
func (o *SilenceAlertsUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this silence alerts using p o s t forbidden response has a 4xx status code
func (o *SilenceAlertsUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this silence alerts using p o s t forbidden response has a 5xx status code
func (o *SilenceAlertsUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this silence alerts using p o s t forbidden response a status code equal to that given
func (o *SilenceAlertsUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the silence alerts using p o s t forbidden response
func (o *SilenceAlertsUsingPOSTForbidden) Code() int {
	return 403
}

func (o *SilenceAlertsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTForbidden", 403)
}

func (o *SilenceAlertsUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTForbidden", 403)
}

func (o *SilenceAlertsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSilenceAlertsUsingPOSTNotFound creates a SilenceAlertsUsingPOSTNotFound with default headers values
func NewSilenceAlertsUsingPOSTNotFound() *SilenceAlertsUsingPOSTNotFound {
	return &SilenceAlertsUsingPOSTNotFound{}
}

/*
SilenceAlertsUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SilenceAlertsUsingPOSTNotFound struct {
}

// IsSuccess returns true when this silence alerts using p o s t not found response has a 2xx status code
func (o *SilenceAlertsUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this silence alerts using p o s t not found response has a 3xx status code
func (o *SilenceAlertsUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this silence alerts using p o s t not found response has a 4xx status code
func (o *SilenceAlertsUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this silence alerts using p o s t not found response has a 5xx status code
func (o *SilenceAlertsUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this silence alerts using p o s t not found response a status code equal to that given
func (o *SilenceAlertsUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the silence alerts using p o s t not found response
func (o *SilenceAlertsUsingPOSTNotFound) Code() int {
	return 404
}

func (o *SilenceAlertsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTNotFound", 404)
}

func (o *SilenceAlertsUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/silence-alerts][%d] silenceAlertsUsingPOSTNotFound", 404)
}

func (o *SilenceAlertsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
