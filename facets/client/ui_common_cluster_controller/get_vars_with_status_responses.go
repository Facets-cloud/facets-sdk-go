// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVarsWithStatusReader is a Reader for the GetVarsWithStatus structure.
type GetVarsWithStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVarsWithStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVarsWithStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVarsWithStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVarsWithStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetVarsWithStatusMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVarsWithStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus] getVarsWithStatus", response, response.Code())
	}
}

// NewGetVarsWithStatusOK creates a GetVarsWithStatusOK with default headers values
func NewGetVarsWithStatusOK() *GetVarsWithStatusOK {
	return &GetVarsWithStatusOK{}
}

/*
GetVarsWithStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetVarsWithStatusOK struct {
	Payload map[string]models.Variables
}

// IsSuccess returns true when this get vars with status o k response has a 2xx status code
func (o *GetVarsWithStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vars with status o k response has a 3xx status code
func (o *GetVarsWithStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with status o k response has a 4xx status code
func (o *GetVarsWithStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vars with status o k response has a 5xx status code
func (o *GetVarsWithStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with status o k response a status code equal to that given
func (o *GetVarsWithStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vars with status o k response
func (o *GetVarsWithStatusOK) Code() int {
	return 200
}

func (o *GetVarsWithStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusOK %s", 200, payload)
}

func (o *GetVarsWithStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusOK %s", 200, payload)
}

func (o *GetVarsWithStatusOK) GetPayload() map[string]models.Variables {
	return o.Payload
}

func (o *GetVarsWithStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithStatusBadRequest creates a GetVarsWithStatusBadRequest with default headers values
func NewGetVarsWithStatusBadRequest() *GetVarsWithStatusBadRequest {
	return &GetVarsWithStatusBadRequest{}
}

/*
GetVarsWithStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVarsWithStatusBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with status bad request response has a 2xx status code
func (o *GetVarsWithStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with status bad request response has a 3xx status code
func (o *GetVarsWithStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with status bad request response has a 4xx status code
func (o *GetVarsWithStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with status bad request response has a 5xx status code
func (o *GetVarsWithStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with status bad request response a status code equal to that given
func (o *GetVarsWithStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get vars with status bad request response
func (o *GetVarsWithStatusBadRequest) Code() int {
	return 400
}

func (o *GetVarsWithStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusBadRequest %s", 400, payload)
}

func (o *GetVarsWithStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusBadRequest %s", 400, payload)
}

func (o *GetVarsWithStatusBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithStatusNotFound creates a GetVarsWithStatusNotFound with default headers values
func NewGetVarsWithStatusNotFound() *GetVarsWithStatusNotFound {
	return &GetVarsWithStatusNotFound{}
}

/*
GetVarsWithStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVarsWithStatusNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with status not found response has a 2xx status code
func (o *GetVarsWithStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with status not found response has a 3xx status code
func (o *GetVarsWithStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with status not found response has a 4xx status code
func (o *GetVarsWithStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with status not found response has a 5xx status code
func (o *GetVarsWithStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with status not found response a status code equal to that given
func (o *GetVarsWithStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vars with status not found response
func (o *GetVarsWithStatusNotFound) Code() int {
	return 404
}

func (o *GetVarsWithStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusNotFound %s", 404, payload)
}

func (o *GetVarsWithStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusNotFound %s", 404, payload)
}

func (o *GetVarsWithStatusNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithStatusMethodNotAllowed creates a GetVarsWithStatusMethodNotAllowed with default headers values
func NewGetVarsWithStatusMethodNotAllowed() *GetVarsWithStatusMethodNotAllowed {
	return &GetVarsWithStatusMethodNotAllowed{}
}

/*
GetVarsWithStatusMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetVarsWithStatusMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with status method not allowed response has a 2xx status code
func (o *GetVarsWithStatusMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with status method not allowed response has a 3xx status code
func (o *GetVarsWithStatusMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with status method not allowed response has a 4xx status code
func (o *GetVarsWithStatusMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with status method not allowed response has a 5xx status code
func (o *GetVarsWithStatusMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with status method not allowed response a status code equal to that given
func (o *GetVarsWithStatusMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get vars with status method not allowed response
func (o *GetVarsWithStatusMethodNotAllowed) Code() int {
	return 405
}

func (o *GetVarsWithStatusMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusMethodNotAllowed %s", 405, payload)
}

func (o *GetVarsWithStatusMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusMethodNotAllowed %s", 405, payload)
}

func (o *GetVarsWithStatusMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithStatusMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithStatusInternalServerError creates a GetVarsWithStatusInternalServerError with default headers values
func NewGetVarsWithStatusInternalServerError() *GetVarsWithStatusInternalServerError {
	return &GetVarsWithStatusInternalServerError{}
}

/*
GetVarsWithStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVarsWithStatusInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with status internal server error response has a 2xx status code
func (o *GetVarsWithStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with status internal server error response has a 3xx status code
func (o *GetVarsWithStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with status internal server error response has a 4xx status code
func (o *GetVarsWithStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vars with status internal server error response has a 5xx status code
func (o *GetVarsWithStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vars with status internal server error response a status code equal to that given
func (o *GetVarsWithStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get vars with status internal server error response
func (o *GetVarsWithStatusInternalServerError) Code() int {
	return 500
}

func (o *GetVarsWithStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusInternalServerError %s", 500, payload)
}

func (o *GetVarsWithStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/varsWithStatus][%d] getVarsWithStatusInternalServerError %s", 500, payload)
}

func (o *GetVarsWithStatusInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
