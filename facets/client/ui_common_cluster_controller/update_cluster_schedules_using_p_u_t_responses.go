// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateClusterSchedulesUsingPUTReader is a Reader for the UpdateClusterSchedulesUsingPUT structure.
type UpdateClusterSchedulesUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterSchedulesUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterSchedulesUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateClusterSchedulesUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateClusterSchedulesUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateClusterSchedulesUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterSchedulesUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}] updateClusterSchedulesUsingPUT", response, response.Code())
	}
}

// NewUpdateClusterSchedulesUsingPUTOK creates a UpdateClusterSchedulesUsingPUTOK with default headers values
func NewUpdateClusterSchedulesUsingPUTOK() *UpdateClusterSchedulesUsingPUTOK {
	return &UpdateClusterSchedulesUsingPUTOK{}
}

/*
UpdateClusterSchedulesUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateClusterSchedulesUsingPUTOK struct {
	Payload []*models.ClusterSchedule
}

// IsSuccess returns true when this update cluster schedules using p u t o k response has a 2xx status code
func (o *UpdateClusterSchedulesUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster schedules using p u t o k response has a 3xx status code
func (o *UpdateClusterSchedulesUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules using p u t o k response has a 4xx status code
func (o *UpdateClusterSchedulesUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster schedules using p u t o k response has a 5xx status code
func (o *UpdateClusterSchedulesUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules using p u t o k response a status code equal to that given
func (o *UpdateClusterSchedulesUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cluster schedules using p u t o k response
func (o *UpdateClusterSchedulesUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateClusterSchedulesUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTOK %s", 200, payload)
}

func (o *UpdateClusterSchedulesUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTOK %s", 200, payload)
}

func (o *UpdateClusterSchedulesUsingPUTOK) GetPayload() []*models.ClusterSchedule {
	return o.Payload
}

func (o *UpdateClusterSchedulesUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterSchedulesUsingPUTCreated creates a UpdateClusterSchedulesUsingPUTCreated with default headers values
func NewUpdateClusterSchedulesUsingPUTCreated() *UpdateClusterSchedulesUsingPUTCreated {
	return &UpdateClusterSchedulesUsingPUTCreated{}
}

/*
UpdateClusterSchedulesUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateClusterSchedulesUsingPUTCreated struct {
}

// IsSuccess returns true when this update cluster schedules using p u t created response has a 2xx status code
func (o *UpdateClusterSchedulesUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster schedules using p u t created response has a 3xx status code
func (o *UpdateClusterSchedulesUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules using p u t created response has a 4xx status code
func (o *UpdateClusterSchedulesUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster schedules using p u t created response has a 5xx status code
func (o *UpdateClusterSchedulesUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules using p u t created response a status code equal to that given
func (o *UpdateClusterSchedulesUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update cluster schedules using p u t created response
func (o *UpdateClusterSchedulesUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateClusterSchedulesUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTCreated", 201)
}

func (o *UpdateClusterSchedulesUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTCreated", 201)
}

func (o *UpdateClusterSchedulesUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterSchedulesUsingPUTUnauthorized creates a UpdateClusterSchedulesUsingPUTUnauthorized with default headers values
func NewUpdateClusterSchedulesUsingPUTUnauthorized() *UpdateClusterSchedulesUsingPUTUnauthorized {
	return &UpdateClusterSchedulesUsingPUTUnauthorized{}
}

/*
UpdateClusterSchedulesUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateClusterSchedulesUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update cluster schedules using p u t unauthorized response has a 2xx status code
func (o *UpdateClusterSchedulesUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster schedules using p u t unauthorized response has a 3xx status code
func (o *UpdateClusterSchedulesUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules using p u t unauthorized response has a 4xx status code
func (o *UpdateClusterSchedulesUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster schedules using p u t unauthorized response has a 5xx status code
func (o *UpdateClusterSchedulesUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules using p u t unauthorized response a status code equal to that given
func (o *UpdateClusterSchedulesUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update cluster schedules using p u t unauthorized response
func (o *UpdateClusterSchedulesUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateClusterSchedulesUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTUnauthorized", 401)
}

func (o *UpdateClusterSchedulesUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTUnauthorized", 401)
}

func (o *UpdateClusterSchedulesUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterSchedulesUsingPUTForbidden creates a UpdateClusterSchedulesUsingPUTForbidden with default headers values
func NewUpdateClusterSchedulesUsingPUTForbidden() *UpdateClusterSchedulesUsingPUTForbidden {
	return &UpdateClusterSchedulesUsingPUTForbidden{}
}

/*
UpdateClusterSchedulesUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateClusterSchedulesUsingPUTForbidden struct {
}

// IsSuccess returns true when this update cluster schedules using p u t forbidden response has a 2xx status code
func (o *UpdateClusterSchedulesUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster schedules using p u t forbidden response has a 3xx status code
func (o *UpdateClusterSchedulesUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules using p u t forbidden response has a 4xx status code
func (o *UpdateClusterSchedulesUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster schedules using p u t forbidden response has a 5xx status code
func (o *UpdateClusterSchedulesUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules using p u t forbidden response a status code equal to that given
func (o *UpdateClusterSchedulesUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cluster schedules using p u t forbidden response
func (o *UpdateClusterSchedulesUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateClusterSchedulesUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTForbidden", 403)
}

func (o *UpdateClusterSchedulesUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTForbidden", 403)
}

func (o *UpdateClusterSchedulesUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterSchedulesUsingPUTNotFound creates a UpdateClusterSchedulesUsingPUTNotFound with default headers values
func NewUpdateClusterSchedulesUsingPUTNotFound() *UpdateClusterSchedulesUsingPUTNotFound {
	return &UpdateClusterSchedulesUsingPUTNotFound{}
}

/*
UpdateClusterSchedulesUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateClusterSchedulesUsingPUTNotFound struct {
}

// IsSuccess returns true when this update cluster schedules using p u t not found response has a 2xx status code
func (o *UpdateClusterSchedulesUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster schedules using p u t not found response has a 3xx status code
func (o *UpdateClusterSchedulesUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules using p u t not found response has a 4xx status code
func (o *UpdateClusterSchedulesUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster schedules using p u t not found response has a 5xx status code
func (o *UpdateClusterSchedulesUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules using p u t not found response a status code equal to that given
func (o *UpdateClusterSchedulesUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cluster schedules using p u t not found response
func (o *UpdateClusterSchedulesUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateClusterSchedulesUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTNotFound", 404)
}

func (o *UpdateClusterSchedulesUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesUsingPUTNotFound", 404)
}

func (o *UpdateClusterSchedulesUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
