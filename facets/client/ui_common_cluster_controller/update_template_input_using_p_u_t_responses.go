// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateTemplateInputUsingPUTReader is a Reader for the UpdateTemplateInputUsingPUT structure.
type UpdateTemplateInputUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTemplateInputUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTemplateInputUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateTemplateInputUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateTemplateInputUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateTemplateInputUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTemplateInputUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}] updateTemplateInputUsingPUT", response, response.Code())
	}
}

// NewUpdateTemplateInputUsingPUTOK creates a UpdateTemplateInputUsingPUTOK with default headers values
func NewUpdateTemplateInputUsingPUTOK() *UpdateTemplateInputUsingPUTOK {
	return &UpdateTemplateInputUsingPUTOK{}
}

/*
UpdateTemplateInputUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateTemplateInputUsingPUTOK struct {
	Payload *models.StackTemplateInput
}

// IsSuccess returns true when this update template input using p u t o k response has a 2xx status code
func (o *UpdateTemplateInputUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update template input using p u t o k response has a 3xx status code
func (o *UpdateTemplateInputUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update template input using p u t o k response has a 4xx status code
func (o *UpdateTemplateInputUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update template input using p u t o k response has a 5xx status code
func (o *UpdateTemplateInputUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update template input using p u t o k response a status code equal to that given
func (o *UpdateTemplateInputUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update template input using p u t o k response
func (o *UpdateTemplateInputUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateTemplateInputUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTOK %s", 200, payload)
}

func (o *UpdateTemplateInputUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTOK %s", 200, payload)
}

func (o *UpdateTemplateInputUsingPUTOK) GetPayload() *models.StackTemplateInput {
	return o.Payload
}

func (o *UpdateTemplateInputUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StackTemplateInput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTemplateInputUsingPUTCreated creates a UpdateTemplateInputUsingPUTCreated with default headers values
func NewUpdateTemplateInputUsingPUTCreated() *UpdateTemplateInputUsingPUTCreated {
	return &UpdateTemplateInputUsingPUTCreated{}
}

/*
UpdateTemplateInputUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateTemplateInputUsingPUTCreated struct {
}

// IsSuccess returns true when this update template input using p u t created response has a 2xx status code
func (o *UpdateTemplateInputUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update template input using p u t created response has a 3xx status code
func (o *UpdateTemplateInputUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update template input using p u t created response has a 4xx status code
func (o *UpdateTemplateInputUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update template input using p u t created response has a 5xx status code
func (o *UpdateTemplateInputUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update template input using p u t created response a status code equal to that given
func (o *UpdateTemplateInputUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update template input using p u t created response
func (o *UpdateTemplateInputUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateTemplateInputUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTCreated", 201)
}

func (o *UpdateTemplateInputUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTCreated", 201)
}

func (o *UpdateTemplateInputUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateInputUsingPUTUnauthorized creates a UpdateTemplateInputUsingPUTUnauthorized with default headers values
func NewUpdateTemplateInputUsingPUTUnauthorized() *UpdateTemplateInputUsingPUTUnauthorized {
	return &UpdateTemplateInputUsingPUTUnauthorized{}
}

/*
UpdateTemplateInputUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateTemplateInputUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update template input using p u t unauthorized response has a 2xx status code
func (o *UpdateTemplateInputUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update template input using p u t unauthorized response has a 3xx status code
func (o *UpdateTemplateInputUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update template input using p u t unauthorized response has a 4xx status code
func (o *UpdateTemplateInputUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update template input using p u t unauthorized response has a 5xx status code
func (o *UpdateTemplateInputUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update template input using p u t unauthorized response a status code equal to that given
func (o *UpdateTemplateInputUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update template input using p u t unauthorized response
func (o *UpdateTemplateInputUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateTemplateInputUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTUnauthorized", 401)
}

func (o *UpdateTemplateInputUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTUnauthorized", 401)
}

func (o *UpdateTemplateInputUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateInputUsingPUTForbidden creates a UpdateTemplateInputUsingPUTForbidden with default headers values
func NewUpdateTemplateInputUsingPUTForbidden() *UpdateTemplateInputUsingPUTForbidden {
	return &UpdateTemplateInputUsingPUTForbidden{}
}

/*
UpdateTemplateInputUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateTemplateInputUsingPUTForbidden struct {
}

// IsSuccess returns true when this update template input using p u t forbidden response has a 2xx status code
func (o *UpdateTemplateInputUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update template input using p u t forbidden response has a 3xx status code
func (o *UpdateTemplateInputUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update template input using p u t forbidden response has a 4xx status code
func (o *UpdateTemplateInputUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update template input using p u t forbidden response has a 5xx status code
func (o *UpdateTemplateInputUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update template input using p u t forbidden response a status code equal to that given
func (o *UpdateTemplateInputUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update template input using p u t forbidden response
func (o *UpdateTemplateInputUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateTemplateInputUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTForbidden", 403)
}

func (o *UpdateTemplateInputUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTForbidden", 403)
}

func (o *UpdateTemplateInputUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateTemplateInputUsingPUTNotFound creates a UpdateTemplateInputUsingPUTNotFound with default headers values
func NewUpdateTemplateInputUsingPUTNotFound() *UpdateTemplateInputUsingPUTNotFound {
	return &UpdateTemplateInputUsingPUTNotFound{}
}

/*
UpdateTemplateInputUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateTemplateInputUsingPUTNotFound struct {
}

// IsSuccess returns true when this update template input using p u t not found response has a 2xx status code
func (o *UpdateTemplateInputUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update template input using p u t not found response has a 3xx status code
func (o *UpdateTemplateInputUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update template input using p u t not found response has a 4xx status code
func (o *UpdateTemplateInputUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update template input using p u t not found response has a 5xx status code
func (o *UpdateTemplateInputUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update template input using p u t not found response a status code equal to that given
func (o *UpdateTemplateInputUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update template input using p u t not found response
func (o *UpdateTemplateInputUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateTemplateInputUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTNotFound", 404)
}

func (o *UpdateTemplateInputUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] updateTemplateInputUsingPUTNotFound", 404)
}

func (o *UpdateTemplateInputUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
