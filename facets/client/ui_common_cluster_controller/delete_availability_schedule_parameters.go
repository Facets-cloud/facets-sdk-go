// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteAvailabilityScheduleParams creates a new DeleteAvailabilityScheduleParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteAvailabilityScheduleParams() *DeleteAvailabilityScheduleParams {
	return &DeleteAvailabilityScheduleParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAvailabilityScheduleParamsWithTimeout creates a new DeleteAvailabilityScheduleParams object
// with the ability to set a timeout on a request.
func NewDeleteAvailabilityScheduleParamsWithTimeout(timeout time.Duration) *DeleteAvailabilityScheduleParams {
	return &DeleteAvailabilityScheduleParams{
		timeout: timeout,
	}
}

// NewDeleteAvailabilityScheduleParamsWithContext creates a new DeleteAvailabilityScheduleParams object
// with the ability to set a context for a request.
func NewDeleteAvailabilityScheduleParamsWithContext(ctx context.Context) *DeleteAvailabilityScheduleParams {
	return &DeleteAvailabilityScheduleParams{
		Context: ctx,
	}
}

// NewDeleteAvailabilityScheduleParamsWithHTTPClient creates a new DeleteAvailabilityScheduleParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteAvailabilityScheduleParamsWithHTTPClient(client *http.Client) *DeleteAvailabilityScheduleParams {
	return &DeleteAvailabilityScheduleParams{
		HTTPClient: client,
	}
}

/*
DeleteAvailabilityScheduleParams contains all the parameters to send to the API endpoint

	for the delete availability schedule operation.

	Typically these are written to a http.Request.
*/
type DeleteAvailabilityScheduleParams struct {

	// AvailabilityScheduleID.
	AvailabilityScheduleID string

	// ClusterID.
	ClusterID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete availability schedule params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteAvailabilityScheduleParams) WithDefaults() *DeleteAvailabilityScheduleParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete availability schedule params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteAvailabilityScheduleParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) WithTimeout(timeout time.Duration) *DeleteAvailabilityScheduleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) WithContext(ctx context.Context) *DeleteAvailabilityScheduleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) WithHTTPClient(client *http.Client) *DeleteAvailabilityScheduleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAvailabilityScheduleID adds the availabilityScheduleID to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) WithAvailabilityScheduleID(availabilityScheduleID string) *DeleteAvailabilityScheduleParams {
	o.SetAvailabilityScheduleID(availabilityScheduleID)
	return o
}

// SetAvailabilityScheduleID adds the availabilityScheduleId to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) SetAvailabilityScheduleID(availabilityScheduleID string) {
	o.AvailabilityScheduleID = availabilityScheduleID
}

// WithClusterID adds the clusterID to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) WithClusterID(clusterID string) *DeleteAvailabilityScheduleParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the delete availability schedule params
func (o *DeleteAvailabilityScheduleParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAvailabilityScheduleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param availabilityScheduleId
	if err := r.SetPathParam("availabilityScheduleId", o.AvailabilityScheduleID); err != nil {
		return err
	}

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
