// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetNamespacesInUseByDependentClustersUsingGETReader is a Reader for the GetNamespacesInUseByDependentClustersUsingGET structure.
type GetNamespacesInUseByDependentClustersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNamespacesInUseByDependentClustersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNamespacesInUseByDependentClustersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetNamespacesInUseByDependentClustersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetNamespacesInUseByDependentClustersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNamespacesInUseByDependentClustersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces] getNamespacesInUseByDependentClustersUsingGET", response, response.Code())
	}
}

// NewGetNamespacesInUseByDependentClustersUsingGETOK creates a GetNamespacesInUseByDependentClustersUsingGETOK with default headers values
func NewGetNamespacesInUseByDependentClustersUsingGETOK() *GetNamespacesInUseByDependentClustersUsingGETOK {
	return &GetNamespacesInUseByDependentClustersUsingGETOK{}
}

/*
GetNamespacesInUseByDependentClustersUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetNamespacesInUseByDependentClustersUsingGETOK struct {
	Payload map[string]string
}

// IsSuccess returns true when this get namespaces in use by dependent clusters using g e t o k response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get namespaces in use by dependent clusters using g e t o k response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters using g e t o k response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get namespaces in use by dependent clusters using g e t o k response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters using g e t o k response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get namespaces in use by dependent clusters using g e t o k response
func (o *GetNamespacesInUseByDependentClustersUsingGETOK) Code() int {
	return 200
}

func (o *GetNamespacesInUseByDependentClustersUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETOK %s", 200, payload)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETOK %s", 200, payload)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETOK) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetNamespacesInUseByDependentClustersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesInUseByDependentClustersUsingGETUnauthorized creates a GetNamespacesInUseByDependentClustersUsingGETUnauthorized with default headers values
func NewGetNamespacesInUseByDependentClustersUsingGETUnauthorized() *GetNamespacesInUseByDependentClustersUsingGETUnauthorized {
	return &GetNamespacesInUseByDependentClustersUsingGETUnauthorized{}
}

/*
GetNamespacesInUseByDependentClustersUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetNamespacesInUseByDependentClustersUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get namespaces in use by dependent clusters using g e t unauthorized response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get namespaces in use by dependent clusters using g e t unauthorized response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters using g e t unauthorized response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get namespaces in use by dependent clusters using g e t unauthorized response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters using g e t unauthorized response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get namespaces in use by dependent clusters using g e t unauthorized response
func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETUnauthorized", 401)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETUnauthorized", 401)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNamespacesInUseByDependentClustersUsingGETForbidden creates a GetNamespacesInUseByDependentClustersUsingGETForbidden with default headers values
func NewGetNamespacesInUseByDependentClustersUsingGETForbidden() *GetNamespacesInUseByDependentClustersUsingGETForbidden {
	return &GetNamespacesInUseByDependentClustersUsingGETForbidden{}
}

/*
GetNamespacesInUseByDependentClustersUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetNamespacesInUseByDependentClustersUsingGETForbidden struct {
}

// IsSuccess returns true when this get namespaces in use by dependent clusters using g e t forbidden response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get namespaces in use by dependent clusters using g e t forbidden response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters using g e t forbidden response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get namespaces in use by dependent clusters using g e t forbidden response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters using g e t forbidden response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get namespaces in use by dependent clusters using g e t forbidden response
func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) Code() int {
	return 403
}

func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETForbidden", 403)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETForbidden", 403)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetNamespacesInUseByDependentClustersUsingGETNotFound creates a GetNamespacesInUseByDependentClustersUsingGETNotFound with default headers values
func NewGetNamespacesInUseByDependentClustersUsingGETNotFound() *GetNamespacesInUseByDependentClustersUsingGETNotFound {
	return &GetNamespacesInUseByDependentClustersUsingGETNotFound{}
}

/*
GetNamespacesInUseByDependentClustersUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetNamespacesInUseByDependentClustersUsingGETNotFound struct {
}

// IsSuccess returns true when this get namespaces in use by dependent clusters using g e t not found response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get namespaces in use by dependent clusters using g e t not found response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters using g e t not found response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get namespaces in use by dependent clusters using g e t not found response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters using g e t not found response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get namespaces in use by dependent clusters using g e t not found response
func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) Code() int {
	return 404
}

func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETNotFound", 404)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersUsingGETNotFound", 404)
}

func (o *GetNamespacesInUseByDependentClustersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
