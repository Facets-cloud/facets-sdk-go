// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVPNProfileReader is a Reader for the GetVPNProfile structure.
type GetVPNProfileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVPNProfileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVPNProfileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVPNProfileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVPNProfileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetVPNProfileMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVPNProfileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile] getVPNProfile", response, response.Code())
	}
}

// NewGetVPNProfileOK creates a GetVPNProfileOK with default headers values
func NewGetVPNProfileOK() *GetVPNProfileOK {
	return &GetVPNProfileOK{}
}

/*
GetVPNProfileOK describes a response with status code 200, with default header values.

OK
*/
type GetVPNProfileOK struct {
	Payload string
}

// IsSuccess returns true when this get v p n profile o k response has a 2xx status code
func (o *GetVPNProfileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v p n profile o k response has a 3xx status code
func (o *GetVPNProfileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v p n profile o k response has a 4xx status code
func (o *GetVPNProfileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v p n profile o k response has a 5xx status code
func (o *GetVPNProfileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v p n profile o k response a status code equal to that given
func (o *GetVPNProfileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v p n profile o k response
func (o *GetVPNProfileOK) Code() int {
	return 200
}

func (o *GetVPNProfileOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileOK %s", 200, payload)
}

func (o *GetVPNProfileOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileOK %s", 200, payload)
}

func (o *GetVPNProfileOK) GetPayload() string {
	return o.Payload
}

func (o *GetVPNProfileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVPNProfileBadRequest creates a GetVPNProfileBadRequest with default headers values
func NewGetVPNProfileBadRequest() *GetVPNProfileBadRequest {
	return &GetVPNProfileBadRequest{}
}

/*
GetVPNProfileBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVPNProfileBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v p n profile bad request response has a 2xx status code
func (o *GetVPNProfileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v p n profile bad request response has a 3xx status code
func (o *GetVPNProfileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v p n profile bad request response has a 4xx status code
func (o *GetVPNProfileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v p n profile bad request response has a 5xx status code
func (o *GetVPNProfileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v p n profile bad request response a status code equal to that given
func (o *GetVPNProfileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v p n profile bad request response
func (o *GetVPNProfileBadRequest) Code() int {
	return 400
}

func (o *GetVPNProfileBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileBadRequest %s", 400, payload)
}

func (o *GetVPNProfileBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileBadRequest %s", 400, payload)
}

func (o *GetVPNProfileBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVPNProfileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVPNProfileNotFound creates a GetVPNProfileNotFound with default headers values
func NewGetVPNProfileNotFound() *GetVPNProfileNotFound {
	return &GetVPNProfileNotFound{}
}

/*
GetVPNProfileNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVPNProfileNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v p n profile not found response has a 2xx status code
func (o *GetVPNProfileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v p n profile not found response has a 3xx status code
func (o *GetVPNProfileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v p n profile not found response has a 4xx status code
func (o *GetVPNProfileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v p n profile not found response has a 5xx status code
func (o *GetVPNProfileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v p n profile not found response a status code equal to that given
func (o *GetVPNProfileNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v p n profile not found response
func (o *GetVPNProfileNotFound) Code() int {
	return 404
}

func (o *GetVPNProfileNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileNotFound %s", 404, payload)
}

func (o *GetVPNProfileNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileNotFound %s", 404, payload)
}

func (o *GetVPNProfileNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVPNProfileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVPNProfileMethodNotAllowed creates a GetVPNProfileMethodNotAllowed with default headers values
func NewGetVPNProfileMethodNotAllowed() *GetVPNProfileMethodNotAllowed {
	return &GetVPNProfileMethodNotAllowed{}
}

/*
GetVPNProfileMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetVPNProfileMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v p n profile method not allowed response has a 2xx status code
func (o *GetVPNProfileMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v p n profile method not allowed response has a 3xx status code
func (o *GetVPNProfileMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v p n profile method not allowed response has a 4xx status code
func (o *GetVPNProfileMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v p n profile method not allowed response has a 5xx status code
func (o *GetVPNProfileMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get v p n profile method not allowed response a status code equal to that given
func (o *GetVPNProfileMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get v p n profile method not allowed response
func (o *GetVPNProfileMethodNotAllowed) Code() int {
	return 405
}

func (o *GetVPNProfileMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileMethodNotAllowed %s", 405, payload)
}

func (o *GetVPNProfileMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileMethodNotAllowed %s", 405, payload)
}

func (o *GetVPNProfileMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVPNProfileMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVPNProfileInternalServerError creates a GetVPNProfileInternalServerError with default headers values
func NewGetVPNProfileInternalServerError() *GetVPNProfileInternalServerError {
	return &GetVPNProfileInternalServerError{}
}

/*
GetVPNProfileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVPNProfileInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v p n profile internal server error response has a 2xx status code
func (o *GetVPNProfileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v p n profile internal server error response has a 3xx status code
func (o *GetVPNProfileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v p n profile internal server error response has a 4xx status code
func (o *GetVPNProfileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v p n profile internal server error response has a 5xx status code
func (o *GetVPNProfileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v p n profile internal server error response a status code equal to that given
func (o *GetVPNProfileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v p n profile internal server error response
func (o *GetVPNProfileInternalServerError) Code() int {
	return 500
}

func (o *GetVPNProfileInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileInternalServerError %s", 500, payload)
}

func (o *GetVPNProfileInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vpn-profile][%d] getVPNProfileInternalServerError %s", 500, payload)
}

func (o *GetVPNProfileInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVPNProfileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
