// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterInfoReader is a Reader for the GetClusterInfo structure.
type GetClusterInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClusterInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetClusterInfoMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClusterInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/info] getClusterInfo", response, response.Code())
	}
}

// NewGetClusterInfoOK creates a GetClusterInfoOK with default headers values
func NewGetClusterInfoOK() *GetClusterInfoOK {
	return &GetClusterInfoOK{}
}

/*
GetClusterInfoOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterInfoOK struct {
	Payload *models.ClusterResponse
}

// IsSuccess returns true when this get cluster info o k response has a 2xx status code
func (o *GetClusterInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster info o k response has a 3xx status code
func (o *GetClusterInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info o k response has a 4xx status code
func (o *GetClusterInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster info o k response has a 5xx status code
func (o *GetClusterInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info o k response a status code equal to that given
func (o *GetClusterInfoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster info o k response
func (o *GetClusterInfoOK) Code() int {
	return 200
}

func (o *GetClusterInfoOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoOK %s", 200, payload)
}

func (o *GetClusterInfoOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoOK %s", 200, payload)
}

func (o *GetClusterInfoOK) GetPayload() *models.ClusterResponse {
	return o.Payload
}

func (o *GetClusterInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInfoBadRequest creates a GetClusterInfoBadRequest with default headers values
func NewGetClusterInfoBadRequest() *GetClusterInfoBadRequest {
	return &GetClusterInfoBadRequest{}
}

/*
GetClusterInfoBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetClusterInfoBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster info bad request response has a 2xx status code
func (o *GetClusterInfoBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster info bad request response has a 3xx status code
func (o *GetClusterInfoBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info bad request response has a 4xx status code
func (o *GetClusterInfoBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster info bad request response has a 5xx status code
func (o *GetClusterInfoBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info bad request response a status code equal to that given
func (o *GetClusterInfoBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get cluster info bad request response
func (o *GetClusterInfoBadRequest) Code() int {
	return 400
}

func (o *GetClusterInfoBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoBadRequest %s", 400, payload)
}

func (o *GetClusterInfoBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoBadRequest %s", 400, payload)
}

func (o *GetClusterInfoBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInfoNotFound creates a GetClusterInfoNotFound with default headers values
func NewGetClusterInfoNotFound() *GetClusterInfoNotFound {
	return &GetClusterInfoNotFound{}
}

/*
GetClusterInfoNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterInfoNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster info not found response has a 2xx status code
func (o *GetClusterInfoNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster info not found response has a 3xx status code
func (o *GetClusterInfoNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info not found response has a 4xx status code
func (o *GetClusterInfoNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster info not found response has a 5xx status code
func (o *GetClusterInfoNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info not found response a status code equal to that given
func (o *GetClusterInfoNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster info not found response
func (o *GetClusterInfoNotFound) Code() int {
	return 404
}

func (o *GetClusterInfoNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoNotFound %s", 404, payload)
}

func (o *GetClusterInfoNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoNotFound %s", 404, payload)
}

func (o *GetClusterInfoNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInfoMethodNotAllowed creates a GetClusterInfoMethodNotAllowed with default headers values
func NewGetClusterInfoMethodNotAllowed() *GetClusterInfoMethodNotAllowed {
	return &GetClusterInfoMethodNotAllowed{}
}

/*
GetClusterInfoMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetClusterInfoMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster info method not allowed response has a 2xx status code
func (o *GetClusterInfoMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster info method not allowed response has a 3xx status code
func (o *GetClusterInfoMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info method not allowed response has a 4xx status code
func (o *GetClusterInfoMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster info method not allowed response has a 5xx status code
func (o *GetClusterInfoMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info method not allowed response a status code equal to that given
func (o *GetClusterInfoMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get cluster info method not allowed response
func (o *GetClusterInfoMethodNotAllowed) Code() int {
	return 405
}

func (o *GetClusterInfoMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoMethodNotAllowed %s", 405, payload)
}

func (o *GetClusterInfoMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoMethodNotAllowed %s", 405, payload)
}

func (o *GetClusterInfoMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterInfoMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInfoInternalServerError creates a GetClusterInfoInternalServerError with default headers values
func NewGetClusterInfoInternalServerError() *GetClusterInfoInternalServerError {
	return &GetClusterInfoInternalServerError{}
}

/*
GetClusterInfoInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetClusterInfoInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster info internal server error response has a 2xx status code
func (o *GetClusterInfoInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster info internal server error response has a 3xx status code
func (o *GetClusterInfoInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info internal server error response has a 4xx status code
func (o *GetClusterInfoInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster info internal server error response has a 5xx status code
func (o *GetClusterInfoInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get cluster info internal server error response a status code equal to that given
func (o *GetClusterInfoInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get cluster info internal server error response
func (o *GetClusterInfoInternalServerError) Code() int {
	return 500
}

func (o *GetClusterInfoInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoInternalServerError %s", 500, payload)
}

func (o *GetClusterInfoInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoInternalServerError %s", 500, payload)
}

func (o *GetClusterInfoInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
