// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateAvailabilitySchedulesUsingPUTReader is a Reader for the UpdateAvailabilitySchedulesUsingPUT structure.
type UpdateAvailabilitySchedulesUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAvailabilitySchedulesUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAvailabilitySchedulesUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateAvailabilitySchedulesUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateAvailabilitySchedulesUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAvailabilitySchedulesUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAvailabilitySchedulesUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}] updateAvailabilitySchedulesUsingPUT", response, response.Code())
	}
}

// NewUpdateAvailabilitySchedulesUsingPUTOK creates a UpdateAvailabilitySchedulesUsingPUTOK with default headers values
func NewUpdateAvailabilitySchedulesUsingPUTOK() *UpdateAvailabilitySchedulesUsingPUTOK {
	return &UpdateAvailabilitySchedulesUsingPUTOK{}
}

/*
UpdateAvailabilitySchedulesUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAvailabilitySchedulesUsingPUTOK struct {
}

// IsSuccess returns true when this update availability schedules using p u t o k response has a 2xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update availability schedules using p u t o k response has a 3xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules using p u t o k response has a 4xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update availability schedules using p u t o k response has a 5xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules using p u t o k response a status code equal to that given
func (o *UpdateAvailabilitySchedulesUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update availability schedules using p u t o k response
func (o *UpdateAvailabilitySchedulesUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateAvailabilitySchedulesUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTOK", 200)
}

func (o *UpdateAvailabilitySchedulesUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTOK", 200)
}

func (o *UpdateAvailabilitySchedulesUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAvailabilitySchedulesUsingPUTCreated creates a UpdateAvailabilitySchedulesUsingPUTCreated with default headers values
func NewUpdateAvailabilitySchedulesUsingPUTCreated() *UpdateAvailabilitySchedulesUsingPUTCreated {
	return &UpdateAvailabilitySchedulesUsingPUTCreated{}
}

/*
UpdateAvailabilitySchedulesUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateAvailabilitySchedulesUsingPUTCreated struct {
}

// IsSuccess returns true when this update availability schedules using p u t created response has a 2xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update availability schedules using p u t created response has a 3xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules using p u t created response has a 4xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update availability schedules using p u t created response has a 5xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules using p u t created response a status code equal to that given
func (o *UpdateAvailabilitySchedulesUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update availability schedules using p u t created response
func (o *UpdateAvailabilitySchedulesUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateAvailabilitySchedulesUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTCreated", 201)
}

func (o *UpdateAvailabilitySchedulesUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTCreated", 201)
}

func (o *UpdateAvailabilitySchedulesUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAvailabilitySchedulesUsingPUTUnauthorized creates a UpdateAvailabilitySchedulesUsingPUTUnauthorized with default headers values
func NewUpdateAvailabilitySchedulesUsingPUTUnauthorized() *UpdateAvailabilitySchedulesUsingPUTUnauthorized {
	return &UpdateAvailabilitySchedulesUsingPUTUnauthorized{}
}

/*
UpdateAvailabilitySchedulesUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateAvailabilitySchedulesUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update availability schedules using p u t unauthorized response has a 2xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update availability schedules using p u t unauthorized response has a 3xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules using p u t unauthorized response has a 4xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update availability schedules using p u t unauthorized response has a 5xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules using p u t unauthorized response a status code equal to that given
func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update availability schedules using p u t unauthorized response
func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTUnauthorized", 401)
}

func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTUnauthorized", 401)
}

func (o *UpdateAvailabilitySchedulesUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAvailabilitySchedulesUsingPUTForbidden creates a UpdateAvailabilitySchedulesUsingPUTForbidden with default headers values
func NewUpdateAvailabilitySchedulesUsingPUTForbidden() *UpdateAvailabilitySchedulesUsingPUTForbidden {
	return &UpdateAvailabilitySchedulesUsingPUTForbidden{}
}

/*
UpdateAvailabilitySchedulesUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAvailabilitySchedulesUsingPUTForbidden struct {
}

// IsSuccess returns true when this update availability schedules using p u t forbidden response has a 2xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update availability schedules using p u t forbidden response has a 3xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules using p u t forbidden response has a 4xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update availability schedules using p u t forbidden response has a 5xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules using p u t forbidden response a status code equal to that given
func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update availability schedules using p u t forbidden response
func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTForbidden", 403)
}

func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTForbidden", 403)
}

func (o *UpdateAvailabilitySchedulesUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAvailabilitySchedulesUsingPUTNotFound creates a UpdateAvailabilitySchedulesUsingPUTNotFound with default headers values
func NewUpdateAvailabilitySchedulesUsingPUTNotFound() *UpdateAvailabilitySchedulesUsingPUTNotFound {
	return &UpdateAvailabilitySchedulesUsingPUTNotFound{}
}

/*
UpdateAvailabilitySchedulesUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAvailabilitySchedulesUsingPUTNotFound struct {
}

// IsSuccess returns true when this update availability schedules using p u t not found response has a 2xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update availability schedules using p u t not found response has a 3xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules using p u t not found response has a 4xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update availability schedules using p u t not found response has a 5xx status code
func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules using p u t not found response a status code equal to that given
func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update availability schedules using p u t not found response
func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTNotFound", 404)
}

func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesUsingPUTNotFound", 404)
}

func (o *UpdateAvailabilitySchedulesUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
