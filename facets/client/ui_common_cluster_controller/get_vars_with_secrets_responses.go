// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVarsWithSecretsReader is a Reader for the GetVarsWithSecrets structure.
type GetVarsWithSecretsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVarsWithSecretsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVarsWithSecretsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVarsWithSecretsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVarsWithSecretsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetVarsWithSecretsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVarsWithSecretsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets] getVarsWithSecrets", response, response.Code())
	}
}

// NewGetVarsWithSecretsOK creates a GetVarsWithSecretsOK with default headers values
func NewGetVarsWithSecretsOK() *GetVarsWithSecretsOK {
	return &GetVarsWithSecretsOK{}
}

/*
GetVarsWithSecretsOK describes a response with status code 200, with default header values.

OK
*/
type GetVarsWithSecretsOK struct {
	Payload *models.AbstractCluster
}

// IsSuccess returns true when this get vars with secrets o k response has a 2xx status code
func (o *GetVarsWithSecretsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vars with secrets o k response has a 3xx status code
func (o *GetVarsWithSecretsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets o k response has a 4xx status code
func (o *GetVarsWithSecretsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vars with secrets o k response has a 5xx status code
func (o *GetVarsWithSecretsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets o k response a status code equal to that given
func (o *GetVarsWithSecretsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vars with secrets o k response
func (o *GetVarsWithSecretsOK) Code() int {
	return 200
}

func (o *GetVarsWithSecretsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsOK %s", 200, payload)
}

func (o *GetVarsWithSecretsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsOK %s", 200, payload)
}

func (o *GetVarsWithSecretsOK) GetPayload() *models.AbstractCluster {
	return o.Payload
}

func (o *GetVarsWithSecretsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithSecretsBadRequest creates a GetVarsWithSecretsBadRequest with default headers values
func NewGetVarsWithSecretsBadRequest() *GetVarsWithSecretsBadRequest {
	return &GetVarsWithSecretsBadRequest{}
}

/*
GetVarsWithSecretsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVarsWithSecretsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with secrets bad request response has a 2xx status code
func (o *GetVarsWithSecretsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with secrets bad request response has a 3xx status code
func (o *GetVarsWithSecretsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets bad request response has a 4xx status code
func (o *GetVarsWithSecretsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with secrets bad request response has a 5xx status code
func (o *GetVarsWithSecretsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets bad request response a status code equal to that given
func (o *GetVarsWithSecretsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get vars with secrets bad request response
func (o *GetVarsWithSecretsBadRequest) Code() int {
	return 400
}

func (o *GetVarsWithSecretsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsBadRequest %s", 400, payload)
}

func (o *GetVarsWithSecretsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsBadRequest %s", 400, payload)
}

func (o *GetVarsWithSecretsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithSecretsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithSecretsNotFound creates a GetVarsWithSecretsNotFound with default headers values
func NewGetVarsWithSecretsNotFound() *GetVarsWithSecretsNotFound {
	return &GetVarsWithSecretsNotFound{}
}

/*
GetVarsWithSecretsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVarsWithSecretsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with secrets not found response has a 2xx status code
func (o *GetVarsWithSecretsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with secrets not found response has a 3xx status code
func (o *GetVarsWithSecretsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets not found response has a 4xx status code
func (o *GetVarsWithSecretsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with secrets not found response has a 5xx status code
func (o *GetVarsWithSecretsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets not found response a status code equal to that given
func (o *GetVarsWithSecretsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vars with secrets not found response
func (o *GetVarsWithSecretsNotFound) Code() int {
	return 404
}

func (o *GetVarsWithSecretsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsNotFound %s", 404, payload)
}

func (o *GetVarsWithSecretsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsNotFound %s", 404, payload)
}

func (o *GetVarsWithSecretsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithSecretsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithSecretsMethodNotAllowed creates a GetVarsWithSecretsMethodNotAllowed with default headers values
func NewGetVarsWithSecretsMethodNotAllowed() *GetVarsWithSecretsMethodNotAllowed {
	return &GetVarsWithSecretsMethodNotAllowed{}
}

/*
GetVarsWithSecretsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetVarsWithSecretsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with secrets method not allowed response has a 2xx status code
func (o *GetVarsWithSecretsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with secrets method not allowed response has a 3xx status code
func (o *GetVarsWithSecretsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets method not allowed response has a 4xx status code
func (o *GetVarsWithSecretsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with secrets method not allowed response has a 5xx status code
func (o *GetVarsWithSecretsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets method not allowed response a status code equal to that given
func (o *GetVarsWithSecretsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get vars with secrets method not allowed response
func (o *GetVarsWithSecretsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetVarsWithSecretsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsMethodNotAllowed %s", 405, payload)
}

func (o *GetVarsWithSecretsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsMethodNotAllowed %s", 405, payload)
}

func (o *GetVarsWithSecretsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithSecretsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithSecretsInternalServerError creates a GetVarsWithSecretsInternalServerError with default headers values
func NewGetVarsWithSecretsInternalServerError() *GetVarsWithSecretsInternalServerError {
	return &GetVarsWithSecretsInternalServerError{}
}

/*
GetVarsWithSecretsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVarsWithSecretsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get vars with secrets internal server error response has a 2xx status code
func (o *GetVarsWithSecretsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with secrets internal server error response has a 3xx status code
func (o *GetVarsWithSecretsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets internal server error response has a 4xx status code
func (o *GetVarsWithSecretsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vars with secrets internal server error response has a 5xx status code
func (o *GetVarsWithSecretsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get vars with secrets internal server error response a status code equal to that given
func (o *GetVarsWithSecretsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get vars with secrets internal server error response
func (o *GetVarsWithSecretsInternalServerError) Code() int {
	return 500
}

func (o *GetVarsWithSecretsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsInternalServerError %s", 500, payload)
}

func (o *GetVarsWithSecretsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsInternalServerError %s", 500, payload)
}

func (o *GetVarsWithSecretsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVarsWithSecretsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
