// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddClusterSchedulesUsingPOSTReader is a Reader for the AddClusterSchedulesUsingPOST structure.
type AddClusterSchedulesUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddClusterSchedulesUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddClusterSchedulesUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddClusterSchedulesUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddClusterSchedulesUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddClusterSchedulesUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddClusterSchedulesUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/schedule] addClusterSchedulesUsingPOST", response, response.Code())
	}
}

// NewAddClusterSchedulesUsingPOSTOK creates a AddClusterSchedulesUsingPOSTOK with default headers values
func NewAddClusterSchedulesUsingPOSTOK() *AddClusterSchedulesUsingPOSTOK {
	return &AddClusterSchedulesUsingPOSTOK{}
}

/*
AddClusterSchedulesUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type AddClusterSchedulesUsingPOSTOK struct {
	Payload []*models.ClusterSchedule
}

// IsSuccess returns true when this add cluster schedules using p o s t o k response has a 2xx status code
func (o *AddClusterSchedulesUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add cluster schedules using p o s t o k response has a 3xx status code
func (o *AddClusterSchedulesUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster schedules using p o s t o k response has a 4xx status code
func (o *AddClusterSchedulesUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add cluster schedules using p o s t o k response has a 5xx status code
func (o *AddClusterSchedulesUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster schedules using p o s t o k response a status code equal to that given
func (o *AddClusterSchedulesUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add cluster schedules using p o s t o k response
func (o *AddClusterSchedulesUsingPOSTOK) Code() int {
	return 200
}

func (o *AddClusterSchedulesUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTOK %s", 200, payload)
}

func (o *AddClusterSchedulesUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTOK %s", 200, payload)
}

func (o *AddClusterSchedulesUsingPOSTOK) GetPayload() []*models.ClusterSchedule {
	return o.Payload
}

func (o *AddClusterSchedulesUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddClusterSchedulesUsingPOSTCreated creates a AddClusterSchedulesUsingPOSTCreated with default headers values
func NewAddClusterSchedulesUsingPOSTCreated() *AddClusterSchedulesUsingPOSTCreated {
	return &AddClusterSchedulesUsingPOSTCreated{}
}

/*
AddClusterSchedulesUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddClusterSchedulesUsingPOSTCreated struct {
}

// IsSuccess returns true when this add cluster schedules using p o s t created response has a 2xx status code
func (o *AddClusterSchedulesUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add cluster schedules using p o s t created response has a 3xx status code
func (o *AddClusterSchedulesUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster schedules using p o s t created response has a 4xx status code
func (o *AddClusterSchedulesUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add cluster schedules using p o s t created response has a 5xx status code
func (o *AddClusterSchedulesUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster schedules using p o s t created response a status code equal to that given
func (o *AddClusterSchedulesUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add cluster schedules using p o s t created response
func (o *AddClusterSchedulesUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddClusterSchedulesUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTCreated", 201)
}

func (o *AddClusterSchedulesUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTCreated", 201)
}

func (o *AddClusterSchedulesUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddClusterSchedulesUsingPOSTUnauthorized creates a AddClusterSchedulesUsingPOSTUnauthorized with default headers values
func NewAddClusterSchedulesUsingPOSTUnauthorized() *AddClusterSchedulesUsingPOSTUnauthorized {
	return &AddClusterSchedulesUsingPOSTUnauthorized{}
}

/*
AddClusterSchedulesUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddClusterSchedulesUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add cluster schedules using p o s t unauthorized response has a 2xx status code
func (o *AddClusterSchedulesUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add cluster schedules using p o s t unauthorized response has a 3xx status code
func (o *AddClusterSchedulesUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster schedules using p o s t unauthorized response has a 4xx status code
func (o *AddClusterSchedulesUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add cluster schedules using p o s t unauthorized response has a 5xx status code
func (o *AddClusterSchedulesUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster schedules using p o s t unauthorized response a status code equal to that given
func (o *AddClusterSchedulesUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add cluster schedules using p o s t unauthorized response
func (o *AddClusterSchedulesUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddClusterSchedulesUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTUnauthorized", 401)
}

func (o *AddClusterSchedulesUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTUnauthorized", 401)
}

func (o *AddClusterSchedulesUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddClusterSchedulesUsingPOSTForbidden creates a AddClusterSchedulesUsingPOSTForbidden with default headers values
func NewAddClusterSchedulesUsingPOSTForbidden() *AddClusterSchedulesUsingPOSTForbidden {
	return &AddClusterSchedulesUsingPOSTForbidden{}
}

/*
AddClusterSchedulesUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddClusterSchedulesUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add cluster schedules using p o s t forbidden response has a 2xx status code
func (o *AddClusterSchedulesUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add cluster schedules using p o s t forbidden response has a 3xx status code
func (o *AddClusterSchedulesUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster schedules using p o s t forbidden response has a 4xx status code
func (o *AddClusterSchedulesUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add cluster schedules using p o s t forbidden response has a 5xx status code
func (o *AddClusterSchedulesUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster schedules using p o s t forbidden response a status code equal to that given
func (o *AddClusterSchedulesUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add cluster schedules using p o s t forbidden response
func (o *AddClusterSchedulesUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddClusterSchedulesUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTForbidden", 403)
}

func (o *AddClusterSchedulesUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTForbidden", 403)
}

func (o *AddClusterSchedulesUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddClusterSchedulesUsingPOSTNotFound creates a AddClusterSchedulesUsingPOSTNotFound with default headers values
func NewAddClusterSchedulesUsingPOSTNotFound() *AddClusterSchedulesUsingPOSTNotFound {
	return &AddClusterSchedulesUsingPOSTNotFound{}
}

/*
AddClusterSchedulesUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddClusterSchedulesUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add cluster schedules using p o s t not found response has a 2xx status code
func (o *AddClusterSchedulesUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add cluster schedules using p o s t not found response has a 3xx status code
func (o *AddClusterSchedulesUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add cluster schedules using p o s t not found response has a 4xx status code
func (o *AddClusterSchedulesUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add cluster schedules using p o s t not found response has a 5xx status code
func (o *AddClusterSchedulesUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add cluster schedules using p o s t not found response a status code equal to that given
func (o *AddClusterSchedulesUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add cluster schedules using p o s t not found response
func (o *AddClusterSchedulesUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddClusterSchedulesUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTNotFound", 404)
}

func (o *AddClusterSchedulesUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/schedule][%d] addClusterSchedulesUsingPOSTNotFound", 404)
}

func (o *AddClusterSchedulesUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
