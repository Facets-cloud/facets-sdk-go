// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAlertsUsingGETReader is a Reader for the GetAlertsUsingGET structure.
type GetAlertsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAlertsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAlertsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAlertsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAlertsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAlertsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/alerts] getAlertsUsingGET", response, response.Code())
	}
}

// NewGetAlertsUsingGETOK creates a GetAlertsUsingGETOK with default headers values
func NewGetAlertsUsingGETOK() *GetAlertsUsingGETOK {
	return &GetAlertsUsingGETOK{}
}

/*
GetAlertsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAlertsUsingGETOK struct {
	Payload map[string]interface{}
}

// IsSuccess returns true when this get alerts using g e t o k response has a 2xx status code
func (o *GetAlertsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get alerts using g e t o k response has a 3xx status code
func (o *GetAlertsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts using g e t o k response has a 4xx status code
func (o *GetAlertsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get alerts using g e t o k response has a 5xx status code
func (o *GetAlertsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts using g e t o k response a status code equal to that given
func (o *GetAlertsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get alerts using g e t o k response
func (o *GetAlertsUsingGETOK) Code() int {
	return 200
}

func (o *GetAlertsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETOK %s", 200, payload)
}

func (o *GetAlertsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETOK %s", 200, payload)
}

func (o *GetAlertsUsingGETOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *GetAlertsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAlertsUsingGETUnauthorized creates a GetAlertsUsingGETUnauthorized with default headers values
func NewGetAlertsUsingGETUnauthorized() *GetAlertsUsingGETUnauthorized {
	return &GetAlertsUsingGETUnauthorized{}
}

/*
GetAlertsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAlertsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get alerts using g e t unauthorized response has a 2xx status code
func (o *GetAlertsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alerts using g e t unauthorized response has a 3xx status code
func (o *GetAlertsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts using g e t unauthorized response has a 4xx status code
func (o *GetAlertsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alerts using g e t unauthorized response has a 5xx status code
func (o *GetAlertsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts using g e t unauthorized response a status code equal to that given
func (o *GetAlertsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get alerts using g e t unauthorized response
func (o *GetAlertsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAlertsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETUnauthorized", 401)
}

func (o *GetAlertsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETUnauthorized", 401)
}

func (o *GetAlertsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAlertsUsingGETForbidden creates a GetAlertsUsingGETForbidden with default headers values
func NewGetAlertsUsingGETForbidden() *GetAlertsUsingGETForbidden {
	return &GetAlertsUsingGETForbidden{}
}

/*
GetAlertsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAlertsUsingGETForbidden struct {
}

// IsSuccess returns true when this get alerts using g e t forbidden response has a 2xx status code
func (o *GetAlertsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alerts using g e t forbidden response has a 3xx status code
func (o *GetAlertsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts using g e t forbidden response has a 4xx status code
func (o *GetAlertsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alerts using g e t forbidden response has a 5xx status code
func (o *GetAlertsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts using g e t forbidden response a status code equal to that given
func (o *GetAlertsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get alerts using g e t forbidden response
func (o *GetAlertsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAlertsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETForbidden", 403)
}

func (o *GetAlertsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETForbidden", 403)
}

func (o *GetAlertsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAlertsUsingGETNotFound creates a GetAlertsUsingGETNotFound with default headers values
func NewGetAlertsUsingGETNotFound() *GetAlertsUsingGETNotFound {
	return &GetAlertsUsingGETNotFound{}
}

/*
GetAlertsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAlertsUsingGETNotFound struct {
}

// IsSuccess returns true when this get alerts using g e t not found response has a 2xx status code
func (o *GetAlertsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get alerts using g e t not found response has a 3xx status code
func (o *GetAlertsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get alerts using g e t not found response has a 4xx status code
func (o *GetAlertsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get alerts using g e t not found response has a 5xx status code
func (o *GetAlertsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get alerts using g e t not found response a status code equal to that given
func (o *GetAlertsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get alerts using g e t not found response
func (o *GetAlertsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAlertsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETNotFound", 404)
}

func (o *GetAlertsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/alerts][%d] getAlertsUsingGETNotFound", 404)
}

func (o *GetAlertsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
