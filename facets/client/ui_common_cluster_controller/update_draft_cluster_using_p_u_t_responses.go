// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateDraftClusterUsingPUTReader is a Reader for the UpdateDraftClusterUsingPUT structure.
type UpdateDraftClusterUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateDraftClusterUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateDraftClusterUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateDraftClusterUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateDraftClusterUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateDraftClusterUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateDraftClusterUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}] updateDraftClusterUsingPUT", response, response.Code())
	}
}

// NewUpdateDraftClusterUsingPUTOK creates a UpdateDraftClusterUsingPUTOK with default headers values
func NewUpdateDraftClusterUsingPUTOK() *UpdateDraftClusterUsingPUTOK {
	return &UpdateDraftClusterUsingPUTOK{}
}

/*
UpdateDraftClusterUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateDraftClusterUsingPUTOK struct {
	Payload *models.AbstractCluster
}

// IsSuccess returns true when this update draft cluster using p u t o k response has a 2xx status code
func (o *UpdateDraftClusterUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update draft cluster using p u t o k response has a 3xx status code
func (o *UpdateDraftClusterUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update draft cluster using p u t o k response has a 4xx status code
func (o *UpdateDraftClusterUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update draft cluster using p u t o k response has a 5xx status code
func (o *UpdateDraftClusterUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update draft cluster using p u t o k response a status code equal to that given
func (o *UpdateDraftClusterUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update draft cluster using p u t o k response
func (o *UpdateDraftClusterUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateDraftClusterUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTOK %s", 200, payload)
}

func (o *UpdateDraftClusterUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTOK %s", 200, payload)
}

func (o *UpdateDraftClusterUsingPUTOK) GetPayload() *models.AbstractCluster {
	return o.Payload
}

func (o *UpdateDraftClusterUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateDraftClusterUsingPUTCreated creates a UpdateDraftClusterUsingPUTCreated with default headers values
func NewUpdateDraftClusterUsingPUTCreated() *UpdateDraftClusterUsingPUTCreated {
	return &UpdateDraftClusterUsingPUTCreated{}
}

/*
UpdateDraftClusterUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateDraftClusterUsingPUTCreated struct {
}

// IsSuccess returns true when this update draft cluster using p u t created response has a 2xx status code
func (o *UpdateDraftClusterUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update draft cluster using p u t created response has a 3xx status code
func (o *UpdateDraftClusterUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update draft cluster using p u t created response has a 4xx status code
func (o *UpdateDraftClusterUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update draft cluster using p u t created response has a 5xx status code
func (o *UpdateDraftClusterUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update draft cluster using p u t created response a status code equal to that given
func (o *UpdateDraftClusterUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update draft cluster using p u t created response
func (o *UpdateDraftClusterUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateDraftClusterUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTCreated", 201)
}

func (o *UpdateDraftClusterUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTCreated", 201)
}

func (o *UpdateDraftClusterUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDraftClusterUsingPUTUnauthorized creates a UpdateDraftClusterUsingPUTUnauthorized with default headers values
func NewUpdateDraftClusterUsingPUTUnauthorized() *UpdateDraftClusterUsingPUTUnauthorized {
	return &UpdateDraftClusterUsingPUTUnauthorized{}
}

/*
UpdateDraftClusterUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateDraftClusterUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update draft cluster using p u t unauthorized response has a 2xx status code
func (o *UpdateDraftClusterUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update draft cluster using p u t unauthorized response has a 3xx status code
func (o *UpdateDraftClusterUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update draft cluster using p u t unauthorized response has a 4xx status code
func (o *UpdateDraftClusterUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update draft cluster using p u t unauthorized response has a 5xx status code
func (o *UpdateDraftClusterUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update draft cluster using p u t unauthorized response a status code equal to that given
func (o *UpdateDraftClusterUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update draft cluster using p u t unauthorized response
func (o *UpdateDraftClusterUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateDraftClusterUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTUnauthorized", 401)
}

func (o *UpdateDraftClusterUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTUnauthorized", 401)
}

func (o *UpdateDraftClusterUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDraftClusterUsingPUTForbidden creates a UpdateDraftClusterUsingPUTForbidden with default headers values
func NewUpdateDraftClusterUsingPUTForbidden() *UpdateDraftClusterUsingPUTForbidden {
	return &UpdateDraftClusterUsingPUTForbidden{}
}

/*
UpdateDraftClusterUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateDraftClusterUsingPUTForbidden struct {
}

// IsSuccess returns true when this update draft cluster using p u t forbidden response has a 2xx status code
func (o *UpdateDraftClusterUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update draft cluster using p u t forbidden response has a 3xx status code
func (o *UpdateDraftClusterUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update draft cluster using p u t forbidden response has a 4xx status code
func (o *UpdateDraftClusterUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update draft cluster using p u t forbidden response has a 5xx status code
func (o *UpdateDraftClusterUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update draft cluster using p u t forbidden response a status code equal to that given
func (o *UpdateDraftClusterUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update draft cluster using p u t forbidden response
func (o *UpdateDraftClusterUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateDraftClusterUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTForbidden", 403)
}

func (o *UpdateDraftClusterUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTForbidden", 403)
}

func (o *UpdateDraftClusterUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateDraftClusterUsingPUTNotFound creates a UpdateDraftClusterUsingPUTNotFound with default headers values
func NewUpdateDraftClusterUsingPUTNotFound() *UpdateDraftClusterUsingPUTNotFound {
	return &UpdateDraftClusterUsingPUTNotFound{}
}

/*
UpdateDraftClusterUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateDraftClusterUsingPUTNotFound struct {
}

// IsSuccess returns true when this update draft cluster using p u t not found response has a 2xx status code
func (o *UpdateDraftClusterUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update draft cluster using p u t not found response has a 3xx status code
func (o *UpdateDraftClusterUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update draft cluster using p u t not found response has a 4xx status code
func (o *UpdateDraftClusterUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update draft cluster using p u t not found response has a 5xx status code
func (o *UpdateDraftClusterUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update draft cluster using p u t not found response a status code equal to that given
func (o *UpdateDraftClusterUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update draft cluster using p u t not found response
func (o *UpdateDraftClusterUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateDraftClusterUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTNotFound", 404)
}

func (o *UpdateDraftClusterUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/draft-cluster/{clusterId}][%d] updateDraftClusterUsingPUTNotFound", 404)
}

func (o *UpdateDraftClusterUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
