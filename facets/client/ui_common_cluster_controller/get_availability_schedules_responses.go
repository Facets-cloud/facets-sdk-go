// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAvailabilitySchedulesReader is a Reader for the GetAvailabilitySchedules structure.
type GetAvailabilitySchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAvailabilitySchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAvailabilitySchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAvailabilitySchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAvailabilitySchedulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAvailabilitySchedulesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAvailabilitySchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule] getAvailabilitySchedules", response, response.Code())
	}
}

// NewGetAvailabilitySchedulesOK creates a GetAvailabilitySchedulesOK with default headers values
func NewGetAvailabilitySchedulesOK() *GetAvailabilitySchedulesOK {
	return &GetAvailabilitySchedulesOK{}
}

/*
GetAvailabilitySchedulesOK describes a response with status code 200, with default header values.

OK
*/
type GetAvailabilitySchedulesOK struct {
	Payload *models.AvailabilitySchedule
}

// IsSuccess returns true when this get availability schedules o k response has a 2xx status code
func (o *GetAvailabilitySchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get availability schedules o k response has a 3xx status code
func (o *GetAvailabilitySchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get availability schedules o k response has a 4xx status code
func (o *GetAvailabilitySchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get availability schedules o k response has a 5xx status code
func (o *GetAvailabilitySchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get availability schedules o k response a status code equal to that given
func (o *GetAvailabilitySchedulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get availability schedules o k response
func (o *GetAvailabilitySchedulesOK) Code() int {
	return 200
}

func (o *GetAvailabilitySchedulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesOK %s", 200, payload)
}

func (o *GetAvailabilitySchedulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesOK %s", 200, payload)
}

func (o *GetAvailabilitySchedulesOK) GetPayload() *models.AvailabilitySchedule {
	return o.Payload
}

func (o *GetAvailabilitySchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AvailabilitySchedule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailabilitySchedulesBadRequest creates a GetAvailabilitySchedulesBadRequest with default headers values
func NewGetAvailabilitySchedulesBadRequest() *GetAvailabilitySchedulesBadRequest {
	return &GetAvailabilitySchedulesBadRequest{}
}

/*
GetAvailabilitySchedulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAvailabilitySchedulesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get availability schedules bad request response has a 2xx status code
func (o *GetAvailabilitySchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get availability schedules bad request response has a 3xx status code
func (o *GetAvailabilitySchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get availability schedules bad request response has a 4xx status code
func (o *GetAvailabilitySchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get availability schedules bad request response has a 5xx status code
func (o *GetAvailabilitySchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get availability schedules bad request response a status code equal to that given
func (o *GetAvailabilitySchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get availability schedules bad request response
func (o *GetAvailabilitySchedulesBadRequest) Code() int {
	return 400
}

func (o *GetAvailabilitySchedulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesBadRequest %s", 400, payload)
}

func (o *GetAvailabilitySchedulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesBadRequest %s", 400, payload)
}

func (o *GetAvailabilitySchedulesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAvailabilitySchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailabilitySchedulesNotFound creates a GetAvailabilitySchedulesNotFound with default headers values
func NewGetAvailabilitySchedulesNotFound() *GetAvailabilitySchedulesNotFound {
	return &GetAvailabilitySchedulesNotFound{}
}

/*
GetAvailabilitySchedulesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAvailabilitySchedulesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get availability schedules not found response has a 2xx status code
func (o *GetAvailabilitySchedulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get availability schedules not found response has a 3xx status code
func (o *GetAvailabilitySchedulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get availability schedules not found response has a 4xx status code
func (o *GetAvailabilitySchedulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get availability schedules not found response has a 5xx status code
func (o *GetAvailabilitySchedulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get availability schedules not found response a status code equal to that given
func (o *GetAvailabilitySchedulesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get availability schedules not found response
func (o *GetAvailabilitySchedulesNotFound) Code() int {
	return 404
}

func (o *GetAvailabilitySchedulesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesNotFound %s", 404, payload)
}

func (o *GetAvailabilitySchedulesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesNotFound %s", 404, payload)
}

func (o *GetAvailabilitySchedulesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAvailabilitySchedulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailabilitySchedulesMethodNotAllowed creates a GetAvailabilitySchedulesMethodNotAllowed with default headers values
func NewGetAvailabilitySchedulesMethodNotAllowed() *GetAvailabilitySchedulesMethodNotAllowed {
	return &GetAvailabilitySchedulesMethodNotAllowed{}
}

/*
GetAvailabilitySchedulesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAvailabilitySchedulesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get availability schedules method not allowed response has a 2xx status code
func (o *GetAvailabilitySchedulesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get availability schedules method not allowed response has a 3xx status code
func (o *GetAvailabilitySchedulesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get availability schedules method not allowed response has a 4xx status code
func (o *GetAvailabilitySchedulesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get availability schedules method not allowed response has a 5xx status code
func (o *GetAvailabilitySchedulesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get availability schedules method not allowed response a status code equal to that given
func (o *GetAvailabilitySchedulesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get availability schedules method not allowed response
func (o *GetAvailabilitySchedulesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAvailabilitySchedulesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesMethodNotAllowed %s", 405, payload)
}

func (o *GetAvailabilitySchedulesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesMethodNotAllowed %s", 405, payload)
}

func (o *GetAvailabilitySchedulesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAvailabilitySchedulesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAvailabilitySchedulesInternalServerError creates a GetAvailabilitySchedulesInternalServerError with default headers values
func NewGetAvailabilitySchedulesInternalServerError() *GetAvailabilitySchedulesInternalServerError {
	return &GetAvailabilitySchedulesInternalServerError{}
}

/*
GetAvailabilitySchedulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAvailabilitySchedulesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get availability schedules internal server error response has a 2xx status code
func (o *GetAvailabilitySchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get availability schedules internal server error response has a 3xx status code
func (o *GetAvailabilitySchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get availability schedules internal server error response has a 4xx status code
func (o *GetAvailabilitySchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get availability schedules internal server error response has a 5xx status code
func (o *GetAvailabilitySchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get availability schedules internal server error response a status code equal to that given
func (o *GetAvailabilitySchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get availability schedules internal server error response
func (o *GetAvailabilitySchedulesInternalServerError) Code() int {
	return 500
}

func (o *GetAvailabilitySchedulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesInternalServerError %s", 500, payload)
}

func (o *GetAvailabilitySchedulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] getAvailabilitySchedulesInternalServerError %s", 500, payload)
}

func (o *GetAvailabilitySchedulesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAvailabilitySchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
