// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetReleaseImpactsUsingGETReader is a Reader for the GetReleaseImpactsUsingGET structure.
type GetReleaseImpactsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetReleaseImpactsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetReleaseImpactsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetReleaseImpactsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetReleaseImpactsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetReleaseImpactsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts] getReleaseImpactsUsingGET", response, response.Code())
	}
}

// NewGetReleaseImpactsUsingGETOK creates a GetReleaseImpactsUsingGETOK with default headers values
func NewGetReleaseImpactsUsingGETOK() *GetReleaseImpactsUsingGETOK {
	return &GetReleaseImpactsUsingGETOK{}
}

/*
GetReleaseImpactsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetReleaseImpactsUsingGETOK struct {
	Payload *models.PageResourceReleaseImpact
}

// IsSuccess returns true when this get release impacts using g e t o k response has a 2xx status code
func (o *GetReleaseImpactsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get release impacts using g e t o k response has a 3xx status code
func (o *GetReleaseImpactsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get release impacts using g e t o k response has a 4xx status code
func (o *GetReleaseImpactsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get release impacts using g e t o k response has a 5xx status code
func (o *GetReleaseImpactsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get release impacts using g e t o k response a status code equal to that given
func (o *GetReleaseImpactsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get release impacts using g e t o k response
func (o *GetReleaseImpactsUsingGETOK) Code() int {
	return 200
}

func (o *GetReleaseImpactsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETOK %s", 200, payload)
}

func (o *GetReleaseImpactsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETOK %s", 200, payload)
}

func (o *GetReleaseImpactsUsingGETOK) GetPayload() *models.PageResourceReleaseImpact {
	return o.Payload
}

func (o *GetReleaseImpactsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageResourceReleaseImpact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetReleaseImpactsUsingGETUnauthorized creates a GetReleaseImpactsUsingGETUnauthorized with default headers values
func NewGetReleaseImpactsUsingGETUnauthorized() *GetReleaseImpactsUsingGETUnauthorized {
	return &GetReleaseImpactsUsingGETUnauthorized{}
}

/*
GetReleaseImpactsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetReleaseImpactsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get release impacts using g e t unauthorized response has a 2xx status code
func (o *GetReleaseImpactsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get release impacts using g e t unauthorized response has a 3xx status code
func (o *GetReleaseImpactsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get release impacts using g e t unauthorized response has a 4xx status code
func (o *GetReleaseImpactsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get release impacts using g e t unauthorized response has a 5xx status code
func (o *GetReleaseImpactsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get release impacts using g e t unauthorized response a status code equal to that given
func (o *GetReleaseImpactsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get release impacts using g e t unauthorized response
func (o *GetReleaseImpactsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetReleaseImpactsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETUnauthorized", 401)
}

func (o *GetReleaseImpactsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETUnauthorized", 401)
}

func (o *GetReleaseImpactsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReleaseImpactsUsingGETForbidden creates a GetReleaseImpactsUsingGETForbidden with default headers values
func NewGetReleaseImpactsUsingGETForbidden() *GetReleaseImpactsUsingGETForbidden {
	return &GetReleaseImpactsUsingGETForbidden{}
}

/*
GetReleaseImpactsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetReleaseImpactsUsingGETForbidden struct {
}

// IsSuccess returns true when this get release impacts using g e t forbidden response has a 2xx status code
func (o *GetReleaseImpactsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get release impacts using g e t forbidden response has a 3xx status code
func (o *GetReleaseImpactsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get release impacts using g e t forbidden response has a 4xx status code
func (o *GetReleaseImpactsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get release impacts using g e t forbidden response has a 5xx status code
func (o *GetReleaseImpactsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get release impacts using g e t forbidden response a status code equal to that given
func (o *GetReleaseImpactsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get release impacts using g e t forbidden response
func (o *GetReleaseImpactsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetReleaseImpactsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETForbidden", 403)
}

func (o *GetReleaseImpactsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETForbidden", 403)
}

func (o *GetReleaseImpactsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetReleaseImpactsUsingGETNotFound creates a GetReleaseImpactsUsingGETNotFound with default headers values
func NewGetReleaseImpactsUsingGETNotFound() *GetReleaseImpactsUsingGETNotFound {
	return &GetReleaseImpactsUsingGETNotFound{}
}

/*
GetReleaseImpactsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetReleaseImpactsUsingGETNotFound struct {
}

// IsSuccess returns true when this get release impacts using g e t not found response has a 2xx status code
func (o *GetReleaseImpactsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get release impacts using g e t not found response has a 3xx status code
func (o *GetReleaseImpactsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get release impacts using g e t not found response has a 4xx status code
func (o *GetReleaseImpactsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get release impacts using g e t not found response has a 5xx status code
func (o *GetReleaseImpactsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get release impacts using g e t not found response a status code equal to that given
func (o *GetReleaseImpactsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get release impacts using g e t not found response
func (o *GetReleaseImpactsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetReleaseImpactsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETNotFound", 404)
}

func (o *GetReleaseImpactsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/release-impacts][%d] getReleaseImpactsUsingGETNotFound", 404)
}

func (o *GetReleaseImpactsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
