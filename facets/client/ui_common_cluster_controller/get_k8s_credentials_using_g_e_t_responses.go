// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetK8sCredentialsUsingGETReader is a Reader for the GetK8sCredentialsUsingGET structure.
type GetK8sCredentialsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetK8sCredentialsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetK8sCredentialsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetK8sCredentialsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetK8sCredentialsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetK8sCredentialsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials] getK8sCredentialsUsingGET", response, response.Code())
	}
}

// NewGetK8sCredentialsUsingGETOK creates a GetK8sCredentialsUsingGETOK with default headers values
func NewGetK8sCredentialsUsingGETOK() *GetK8sCredentialsUsingGETOK {
	return &GetK8sCredentialsUsingGETOK{}
}

/*
GetK8sCredentialsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetK8sCredentialsUsingGETOK struct {
	Payload *models.KubernetesCredential
}

// IsSuccess returns true when this get k8s credentials using g e t o k response has a 2xx status code
func (o *GetK8sCredentialsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get k8s credentials using g e t o k response has a 3xx status code
func (o *GetK8sCredentialsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s credentials using g e t o k response has a 4xx status code
func (o *GetK8sCredentialsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get k8s credentials using g e t o k response has a 5xx status code
func (o *GetK8sCredentialsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s credentials using g e t o k response a status code equal to that given
func (o *GetK8sCredentialsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get k8s credentials using g e t o k response
func (o *GetK8sCredentialsUsingGETOK) Code() int {
	return 200
}

func (o *GetK8sCredentialsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETOK %s", 200, payload)
}

func (o *GetK8sCredentialsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETOK %s", 200, payload)
}

func (o *GetK8sCredentialsUsingGETOK) GetPayload() *models.KubernetesCredential {
	return o.Payload
}

func (o *GetK8sCredentialsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KubernetesCredential)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetK8sCredentialsUsingGETUnauthorized creates a GetK8sCredentialsUsingGETUnauthorized with default headers values
func NewGetK8sCredentialsUsingGETUnauthorized() *GetK8sCredentialsUsingGETUnauthorized {
	return &GetK8sCredentialsUsingGETUnauthorized{}
}

/*
GetK8sCredentialsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetK8sCredentialsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get k8s credentials using g e t unauthorized response has a 2xx status code
func (o *GetK8sCredentialsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s credentials using g e t unauthorized response has a 3xx status code
func (o *GetK8sCredentialsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s credentials using g e t unauthorized response has a 4xx status code
func (o *GetK8sCredentialsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s credentials using g e t unauthorized response has a 5xx status code
func (o *GetK8sCredentialsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s credentials using g e t unauthorized response a status code equal to that given
func (o *GetK8sCredentialsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get k8s credentials using g e t unauthorized response
func (o *GetK8sCredentialsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetK8sCredentialsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETUnauthorized", 401)
}

func (o *GetK8sCredentialsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETUnauthorized", 401)
}

func (o *GetK8sCredentialsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetK8sCredentialsUsingGETForbidden creates a GetK8sCredentialsUsingGETForbidden with default headers values
func NewGetK8sCredentialsUsingGETForbidden() *GetK8sCredentialsUsingGETForbidden {
	return &GetK8sCredentialsUsingGETForbidden{}
}

/*
GetK8sCredentialsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetK8sCredentialsUsingGETForbidden struct {
}

// IsSuccess returns true when this get k8s credentials using g e t forbidden response has a 2xx status code
func (o *GetK8sCredentialsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s credentials using g e t forbidden response has a 3xx status code
func (o *GetK8sCredentialsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s credentials using g e t forbidden response has a 4xx status code
func (o *GetK8sCredentialsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s credentials using g e t forbidden response has a 5xx status code
func (o *GetK8sCredentialsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s credentials using g e t forbidden response a status code equal to that given
func (o *GetK8sCredentialsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get k8s credentials using g e t forbidden response
func (o *GetK8sCredentialsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetK8sCredentialsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETForbidden", 403)
}

func (o *GetK8sCredentialsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETForbidden", 403)
}

func (o *GetK8sCredentialsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetK8sCredentialsUsingGETNotFound creates a GetK8sCredentialsUsingGETNotFound with default headers values
func NewGetK8sCredentialsUsingGETNotFound() *GetK8sCredentialsUsingGETNotFound {
	return &GetK8sCredentialsUsingGETNotFound{}
}

/*
GetK8sCredentialsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetK8sCredentialsUsingGETNotFound struct {
}

// IsSuccess returns true when this get k8s credentials using g e t not found response has a 2xx status code
func (o *GetK8sCredentialsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s credentials using g e t not found response has a 3xx status code
func (o *GetK8sCredentialsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s credentials using g e t not found response has a 4xx status code
func (o *GetK8sCredentialsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s credentials using g e t not found response has a 5xx status code
func (o *GetK8sCredentialsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s credentials using g e t not found response a status code equal to that given
func (o *GetK8sCredentialsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get k8s credentials using g e t not found response
func (o *GetK8sCredentialsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetK8sCredentialsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETNotFound", 404)
}

func (o *GetK8sCredentialsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8sCredentials][%d] getK8sCredentialsUsingGETNotFound", 404)
}

func (o *GetK8sCredentialsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
