// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVarsUsingGETReader is a Reader for the GetVarsUsingGET structure.
type GetVarsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVarsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVarsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVarsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVarsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVarsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/vars] getVarsUsingGET", response, response.Code())
	}
}

// NewGetVarsUsingGETOK creates a GetVarsUsingGETOK with default headers values
func NewGetVarsUsingGETOK() *GetVarsUsingGETOK {
	return &GetVarsUsingGETOK{}
}

/*
GetVarsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetVarsUsingGETOK struct {
	Payload *models.AbstractCluster
}

// IsSuccess returns true when this get vars using g e t o k response has a 2xx status code
func (o *GetVarsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vars using g e t o k response has a 3xx status code
func (o *GetVarsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars using g e t o k response has a 4xx status code
func (o *GetVarsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vars using g e t o k response has a 5xx status code
func (o *GetVarsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars using g e t o k response a status code equal to that given
func (o *GetVarsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vars using g e t o k response
func (o *GetVarsUsingGETOK) Code() int {
	return 200
}

func (o *GetVarsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETOK %s", 200, payload)
}

func (o *GetVarsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETOK %s", 200, payload)
}

func (o *GetVarsUsingGETOK) GetPayload() *models.AbstractCluster {
	return o.Payload
}

func (o *GetVarsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsUsingGETUnauthorized creates a GetVarsUsingGETUnauthorized with default headers values
func NewGetVarsUsingGETUnauthorized() *GetVarsUsingGETUnauthorized {
	return &GetVarsUsingGETUnauthorized{}
}

/*
GetVarsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetVarsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get vars using g e t unauthorized response has a 2xx status code
func (o *GetVarsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars using g e t unauthorized response has a 3xx status code
func (o *GetVarsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars using g e t unauthorized response has a 4xx status code
func (o *GetVarsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars using g e t unauthorized response has a 5xx status code
func (o *GetVarsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars using g e t unauthorized response a status code equal to that given
func (o *GetVarsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get vars using g e t unauthorized response
func (o *GetVarsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetVarsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETUnauthorized", 401)
}

func (o *GetVarsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETUnauthorized", 401)
}

func (o *GetVarsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVarsUsingGETForbidden creates a GetVarsUsingGETForbidden with default headers values
func NewGetVarsUsingGETForbidden() *GetVarsUsingGETForbidden {
	return &GetVarsUsingGETForbidden{}
}

/*
GetVarsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVarsUsingGETForbidden struct {
}

// IsSuccess returns true when this get vars using g e t forbidden response has a 2xx status code
func (o *GetVarsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars using g e t forbidden response has a 3xx status code
func (o *GetVarsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars using g e t forbidden response has a 4xx status code
func (o *GetVarsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars using g e t forbidden response has a 5xx status code
func (o *GetVarsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars using g e t forbidden response a status code equal to that given
func (o *GetVarsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get vars using g e t forbidden response
func (o *GetVarsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetVarsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETForbidden", 403)
}

func (o *GetVarsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETForbidden", 403)
}

func (o *GetVarsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVarsUsingGETNotFound creates a GetVarsUsingGETNotFound with default headers values
func NewGetVarsUsingGETNotFound() *GetVarsUsingGETNotFound {
	return &GetVarsUsingGETNotFound{}
}

/*
GetVarsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVarsUsingGETNotFound struct {
}

// IsSuccess returns true when this get vars using g e t not found response has a 2xx status code
func (o *GetVarsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars using g e t not found response has a 3xx status code
func (o *GetVarsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars using g e t not found response has a 4xx status code
func (o *GetVarsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars using g e t not found response has a 5xx status code
func (o *GetVarsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars using g e t not found response a status code equal to that given
func (o *GetVarsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vars using g e t not found response
func (o *GetVarsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetVarsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETNotFound", 404)
}

func (o *GetVarsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars][%d] getVarsUsingGETNotFound", 404)
}

func (o *GetVarsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
