// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateAvailabilitySchedulesReader is a Reader for the UpdateAvailabilitySchedules structure.
type UpdateAvailabilitySchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAvailabilitySchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAvailabilitySchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAvailabilitySchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAvailabilitySchedulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateAvailabilitySchedulesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAvailabilitySchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}] updateAvailabilitySchedules", response, response.Code())
	}
}

// NewUpdateAvailabilitySchedulesOK creates a UpdateAvailabilitySchedulesOK with default headers values
func NewUpdateAvailabilitySchedulesOK() *UpdateAvailabilitySchedulesOK {
	return &UpdateAvailabilitySchedulesOK{}
}

/*
UpdateAvailabilitySchedulesOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAvailabilitySchedulesOK struct {
}

// IsSuccess returns true when this update availability schedules o k response has a 2xx status code
func (o *UpdateAvailabilitySchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update availability schedules o k response has a 3xx status code
func (o *UpdateAvailabilitySchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules o k response has a 4xx status code
func (o *UpdateAvailabilitySchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update availability schedules o k response has a 5xx status code
func (o *UpdateAvailabilitySchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules o k response a status code equal to that given
func (o *UpdateAvailabilitySchedulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update availability schedules o k response
func (o *UpdateAvailabilitySchedulesOK) Code() int {
	return 200
}

func (o *UpdateAvailabilitySchedulesOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesOK", 200)
}

func (o *UpdateAvailabilitySchedulesOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesOK", 200)
}

func (o *UpdateAvailabilitySchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAvailabilitySchedulesBadRequest creates a UpdateAvailabilitySchedulesBadRequest with default headers values
func NewUpdateAvailabilitySchedulesBadRequest() *UpdateAvailabilitySchedulesBadRequest {
	return &UpdateAvailabilitySchedulesBadRequest{}
}

/*
UpdateAvailabilitySchedulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAvailabilitySchedulesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update availability schedules bad request response has a 2xx status code
func (o *UpdateAvailabilitySchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update availability schedules bad request response has a 3xx status code
func (o *UpdateAvailabilitySchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules bad request response has a 4xx status code
func (o *UpdateAvailabilitySchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update availability schedules bad request response has a 5xx status code
func (o *UpdateAvailabilitySchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules bad request response a status code equal to that given
func (o *UpdateAvailabilitySchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update availability schedules bad request response
func (o *UpdateAvailabilitySchedulesBadRequest) Code() int {
	return 400
}

func (o *UpdateAvailabilitySchedulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesBadRequest %s", 400, payload)
}

func (o *UpdateAvailabilitySchedulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesBadRequest %s", 400, payload)
}

func (o *UpdateAvailabilitySchedulesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAvailabilitySchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAvailabilitySchedulesNotFound creates a UpdateAvailabilitySchedulesNotFound with default headers values
func NewUpdateAvailabilitySchedulesNotFound() *UpdateAvailabilitySchedulesNotFound {
	return &UpdateAvailabilitySchedulesNotFound{}
}

/*
UpdateAvailabilitySchedulesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAvailabilitySchedulesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update availability schedules not found response has a 2xx status code
func (o *UpdateAvailabilitySchedulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update availability schedules not found response has a 3xx status code
func (o *UpdateAvailabilitySchedulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules not found response has a 4xx status code
func (o *UpdateAvailabilitySchedulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update availability schedules not found response has a 5xx status code
func (o *UpdateAvailabilitySchedulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules not found response a status code equal to that given
func (o *UpdateAvailabilitySchedulesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update availability schedules not found response
func (o *UpdateAvailabilitySchedulesNotFound) Code() int {
	return 404
}

func (o *UpdateAvailabilitySchedulesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesNotFound %s", 404, payload)
}

func (o *UpdateAvailabilitySchedulesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesNotFound %s", 404, payload)
}

func (o *UpdateAvailabilitySchedulesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAvailabilitySchedulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAvailabilitySchedulesMethodNotAllowed creates a UpdateAvailabilitySchedulesMethodNotAllowed with default headers values
func NewUpdateAvailabilitySchedulesMethodNotAllowed() *UpdateAvailabilitySchedulesMethodNotAllowed {
	return &UpdateAvailabilitySchedulesMethodNotAllowed{}
}

/*
UpdateAvailabilitySchedulesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateAvailabilitySchedulesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update availability schedules method not allowed response has a 2xx status code
func (o *UpdateAvailabilitySchedulesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update availability schedules method not allowed response has a 3xx status code
func (o *UpdateAvailabilitySchedulesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules method not allowed response has a 4xx status code
func (o *UpdateAvailabilitySchedulesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update availability schedules method not allowed response has a 5xx status code
func (o *UpdateAvailabilitySchedulesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update availability schedules method not allowed response a status code equal to that given
func (o *UpdateAvailabilitySchedulesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update availability schedules method not allowed response
func (o *UpdateAvailabilitySchedulesMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateAvailabilitySchedulesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAvailabilitySchedulesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAvailabilitySchedulesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAvailabilitySchedulesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAvailabilitySchedulesInternalServerError creates a UpdateAvailabilitySchedulesInternalServerError with default headers values
func NewUpdateAvailabilitySchedulesInternalServerError() *UpdateAvailabilitySchedulesInternalServerError {
	return &UpdateAvailabilitySchedulesInternalServerError{}
}

/*
UpdateAvailabilitySchedulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateAvailabilitySchedulesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update availability schedules internal server error response has a 2xx status code
func (o *UpdateAvailabilitySchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update availability schedules internal server error response has a 3xx status code
func (o *UpdateAvailabilitySchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update availability schedules internal server error response has a 4xx status code
func (o *UpdateAvailabilitySchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update availability schedules internal server error response has a 5xx status code
func (o *UpdateAvailabilitySchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update availability schedules internal server error response a status code equal to that given
func (o *UpdateAvailabilitySchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update availability schedules internal server error response
func (o *UpdateAvailabilitySchedulesInternalServerError) Code() int {
	return 500
}

func (o *UpdateAvailabilitySchedulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesInternalServerError %s", 500, payload)
}

func (o *UpdateAvailabilitySchedulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/availability-schedule/{scheduleId}][%d] updateAvailabilitySchedulesInternalServerError %s", 500, payload)
}

func (o *UpdateAvailabilitySchedulesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAvailabilitySchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
