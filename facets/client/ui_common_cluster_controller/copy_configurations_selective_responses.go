// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CopyConfigurationsSelectiveReader is a Reader for the CopyConfigurationsSelective structure.
type CopyConfigurationsSelectiveReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CopyConfigurationsSelectiveReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCopyConfigurationsSelectiveOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCopyConfigurationsSelectiveBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCopyConfigurationsSelectiveNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCopyConfigurationsSelectiveMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCopyConfigurationsSelectiveInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective] copyConfigurationsSelective", response, response.Code())
	}
}

// NewCopyConfigurationsSelectiveOK creates a CopyConfigurationsSelectiveOK with default headers values
func NewCopyConfigurationsSelectiveOK() *CopyConfigurationsSelectiveOK {
	return &CopyConfigurationsSelectiveOK{}
}

/*
CopyConfigurationsSelectiveOK describes a response with status code 200, with default header values.

OK
*/
type CopyConfigurationsSelectiveOK struct {
	Payload *models.AbstractCluster
}

// IsSuccess returns true when this copy configurations selective o k response has a 2xx status code
func (o *CopyConfigurationsSelectiveOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this copy configurations selective o k response has a 3xx status code
func (o *CopyConfigurationsSelectiveOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this copy configurations selective o k response has a 4xx status code
func (o *CopyConfigurationsSelectiveOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this copy configurations selective o k response has a 5xx status code
func (o *CopyConfigurationsSelectiveOK) IsServerError() bool {
	return false
}

// IsCode returns true when this copy configurations selective o k response a status code equal to that given
func (o *CopyConfigurationsSelectiveOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the copy configurations selective o k response
func (o *CopyConfigurationsSelectiveOK) Code() int {
	return 200
}

func (o *CopyConfigurationsSelectiveOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveOK %s", 200, payload)
}

func (o *CopyConfigurationsSelectiveOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveOK %s", 200, payload)
}

func (o *CopyConfigurationsSelectiveOK) GetPayload() *models.AbstractCluster {
	return o.Payload
}

func (o *CopyConfigurationsSelectiveOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyConfigurationsSelectiveBadRequest creates a CopyConfigurationsSelectiveBadRequest with default headers values
func NewCopyConfigurationsSelectiveBadRequest() *CopyConfigurationsSelectiveBadRequest {
	return &CopyConfigurationsSelectiveBadRequest{}
}

/*
CopyConfigurationsSelectiveBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CopyConfigurationsSelectiveBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this copy configurations selective bad request response has a 2xx status code
func (o *CopyConfigurationsSelectiveBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this copy configurations selective bad request response has a 3xx status code
func (o *CopyConfigurationsSelectiveBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this copy configurations selective bad request response has a 4xx status code
func (o *CopyConfigurationsSelectiveBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this copy configurations selective bad request response has a 5xx status code
func (o *CopyConfigurationsSelectiveBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this copy configurations selective bad request response a status code equal to that given
func (o *CopyConfigurationsSelectiveBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the copy configurations selective bad request response
func (o *CopyConfigurationsSelectiveBadRequest) Code() int {
	return 400
}

func (o *CopyConfigurationsSelectiveBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveBadRequest %s", 400, payload)
}

func (o *CopyConfigurationsSelectiveBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveBadRequest %s", 400, payload)
}

func (o *CopyConfigurationsSelectiveBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CopyConfigurationsSelectiveBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyConfigurationsSelectiveNotFound creates a CopyConfigurationsSelectiveNotFound with default headers values
func NewCopyConfigurationsSelectiveNotFound() *CopyConfigurationsSelectiveNotFound {
	return &CopyConfigurationsSelectiveNotFound{}
}

/*
CopyConfigurationsSelectiveNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CopyConfigurationsSelectiveNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this copy configurations selective not found response has a 2xx status code
func (o *CopyConfigurationsSelectiveNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this copy configurations selective not found response has a 3xx status code
func (o *CopyConfigurationsSelectiveNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this copy configurations selective not found response has a 4xx status code
func (o *CopyConfigurationsSelectiveNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this copy configurations selective not found response has a 5xx status code
func (o *CopyConfigurationsSelectiveNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this copy configurations selective not found response a status code equal to that given
func (o *CopyConfigurationsSelectiveNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the copy configurations selective not found response
func (o *CopyConfigurationsSelectiveNotFound) Code() int {
	return 404
}

func (o *CopyConfigurationsSelectiveNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveNotFound %s", 404, payload)
}

func (o *CopyConfigurationsSelectiveNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveNotFound %s", 404, payload)
}

func (o *CopyConfigurationsSelectiveNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CopyConfigurationsSelectiveNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyConfigurationsSelectiveMethodNotAllowed creates a CopyConfigurationsSelectiveMethodNotAllowed with default headers values
func NewCopyConfigurationsSelectiveMethodNotAllowed() *CopyConfigurationsSelectiveMethodNotAllowed {
	return &CopyConfigurationsSelectiveMethodNotAllowed{}
}

/*
CopyConfigurationsSelectiveMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CopyConfigurationsSelectiveMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this copy configurations selective method not allowed response has a 2xx status code
func (o *CopyConfigurationsSelectiveMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this copy configurations selective method not allowed response has a 3xx status code
func (o *CopyConfigurationsSelectiveMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this copy configurations selective method not allowed response has a 4xx status code
func (o *CopyConfigurationsSelectiveMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this copy configurations selective method not allowed response has a 5xx status code
func (o *CopyConfigurationsSelectiveMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this copy configurations selective method not allowed response a status code equal to that given
func (o *CopyConfigurationsSelectiveMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the copy configurations selective method not allowed response
func (o *CopyConfigurationsSelectiveMethodNotAllowed) Code() int {
	return 405
}

func (o *CopyConfigurationsSelectiveMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveMethodNotAllowed %s", 405, payload)
}

func (o *CopyConfigurationsSelectiveMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveMethodNotAllowed %s", 405, payload)
}

func (o *CopyConfigurationsSelectiveMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CopyConfigurationsSelectiveMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCopyConfigurationsSelectiveInternalServerError creates a CopyConfigurationsSelectiveInternalServerError with default headers values
func NewCopyConfigurationsSelectiveInternalServerError() *CopyConfigurationsSelectiveInternalServerError {
	return &CopyConfigurationsSelectiveInternalServerError{}
}

/*
CopyConfigurationsSelectiveInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CopyConfigurationsSelectiveInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this copy configurations selective internal server error response has a 2xx status code
func (o *CopyConfigurationsSelectiveInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this copy configurations selective internal server error response has a 3xx status code
func (o *CopyConfigurationsSelectiveInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this copy configurations selective internal server error response has a 4xx status code
func (o *CopyConfigurationsSelectiveInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this copy configurations selective internal server error response has a 5xx status code
func (o *CopyConfigurationsSelectiveInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this copy configurations selective internal server error response a status code equal to that given
func (o *CopyConfigurationsSelectiveInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the copy configurations selective internal server error response
func (o *CopyConfigurationsSelectiveInternalServerError) Code() int {
	return 500
}

func (o *CopyConfigurationsSelectiveInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveInternalServerError %s", 500, payload)
}

func (o *CopyConfigurationsSelectiveInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/copy-configurations-selective][%d] copyConfigurationsSelectiveInternalServerError %s", 500, payload)
}

func (o *CopyConfigurationsSelectiveInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CopyConfigurationsSelectiveInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
