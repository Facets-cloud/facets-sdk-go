// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteClusterForceReader is a Reader for the DeleteClusterForce structure.
type DeleteClusterForceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteClusterForceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteClusterForceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteClusterForceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteClusterForceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteClusterForceMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteClusterForceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/clusters/{clusterId}/force] deleteClusterForce", response, response.Code())
	}
}

// NewDeleteClusterForceOK creates a DeleteClusterForceOK with default headers values
func NewDeleteClusterForceOK() *DeleteClusterForceOK {
	return &DeleteClusterForceOK{}
}

/*
DeleteClusterForceOK describes a response with status code 200, with default header values.

OK
*/
type DeleteClusterForceOK struct {
	Payload bool
}

// IsSuccess returns true when this delete cluster force o k response has a 2xx status code
func (o *DeleteClusterForceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete cluster force o k response has a 3xx status code
func (o *DeleteClusterForceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster force o k response has a 4xx status code
func (o *DeleteClusterForceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster force o k response has a 5xx status code
func (o *DeleteClusterForceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster force o k response a status code equal to that given
func (o *DeleteClusterForceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete cluster force o k response
func (o *DeleteClusterForceOK) Code() int {
	return 200
}

func (o *DeleteClusterForceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceOK %s", 200, payload)
}

func (o *DeleteClusterForceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceOK %s", 200, payload)
}

func (o *DeleteClusterForceOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteClusterForceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterForceBadRequest creates a DeleteClusterForceBadRequest with default headers values
func NewDeleteClusterForceBadRequest() *DeleteClusterForceBadRequest {
	return &DeleteClusterForceBadRequest{}
}

/*
DeleteClusterForceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteClusterForceBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete cluster force bad request response has a 2xx status code
func (o *DeleteClusterForceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster force bad request response has a 3xx status code
func (o *DeleteClusterForceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster force bad request response has a 4xx status code
func (o *DeleteClusterForceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster force bad request response has a 5xx status code
func (o *DeleteClusterForceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster force bad request response a status code equal to that given
func (o *DeleteClusterForceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete cluster force bad request response
func (o *DeleteClusterForceBadRequest) Code() int {
	return 400
}

func (o *DeleteClusterForceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceBadRequest %s", 400, payload)
}

func (o *DeleteClusterForceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceBadRequest %s", 400, payload)
}

func (o *DeleteClusterForceBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteClusterForceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterForceNotFound creates a DeleteClusterForceNotFound with default headers values
func NewDeleteClusterForceNotFound() *DeleteClusterForceNotFound {
	return &DeleteClusterForceNotFound{}
}

/*
DeleteClusterForceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteClusterForceNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete cluster force not found response has a 2xx status code
func (o *DeleteClusterForceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster force not found response has a 3xx status code
func (o *DeleteClusterForceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster force not found response has a 4xx status code
func (o *DeleteClusterForceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster force not found response has a 5xx status code
func (o *DeleteClusterForceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster force not found response a status code equal to that given
func (o *DeleteClusterForceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete cluster force not found response
func (o *DeleteClusterForceNotFound) Code() int {
	return 404
}

func (o *DeleteClusterForceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceNotFound %s", 404, payload)
}

func (o *DeleteClusterForceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceNotFound %s", 404, payload)
}

func (o *DeleteClusterForceNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteClusterForceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterForceMethodNotAllowed creates a DeleteClusterForceMethodNotAllowed with default headers values
func NewDeleteClusterForceMethodNotAllowed() *DeleteClusterForceMethodNotAllowed {
	return &DeleteClusterForceMethodNotAllowed{}
}

/*
DeleteClusterForceMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteClusterForceMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete cluster force method not allowed response has a 2xx status code
func (o *DeleteClusterForceMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster force method not allowed response has a 3xx status code
func (o *DeleteClusterForceMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster force method not allowed response has a 4xx status code
func (o *DeleteClusterForceMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete cluster force method not allowed response has a 5xx status code
func (o *DeleteClusterForceMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete cluster force method not allowed response a status code equal to that given
func (o *DeleteClusterForceMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete cluster force method not allowed response
func (o *DeleteClusterForceMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteClusterForceMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceMethodNotAllowed %s", 405, payload)
}

func (o *DeleteClusterForceMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceMethodNotAllowed %s", 405, payload)
}

func (o *DeleteClusterForceMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteClusterForceMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteClusterForceInternalServerError creates a DeleteClusterForceInternalServerError with default headers values
func NewDeleteClusterForceInternalServerError() *DeleteClusterForceInternalServerError {
	return &DeleteClusterForceInternalServerError{}
}

/*
DeleteClusterForceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteClusterForceInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete cluster force internal server error response has a 2xx status code
func (o *DeleteClusterForceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete cluster force internal server error response has a 3xx status code
func (o *DeleteClusterForceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete cluster force internal server error response has a 4xx status code
func (o *DeleteClusterForceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete cluster force internal server error response has a 5xx status code
func (o *DeleteClusterForceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete cluster force internal server error response a status code equal to that given
func (o *DeleteClusterForceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete cluster force internal server error response
func (o *DeleteClusterForceInternalServerError) Code() int {
	return 500
}

func (o *DeleteClusterForceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceInternalServerError %s", 500, payload)
}

func (o *DeleteClusterForceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/force][%d] deleteClusterForceInternalServerError %s", 500, payload)
}

func (o *DeleteClusterForceInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteClusterForceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
