// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateClusterSchedulesReader is a Reader for the UpdateClusterSchedules structure.
type UpdateClusterSchedulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterSchedulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterSchedulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateClusterSchedulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterSchedulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateClusterSchedulesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateClusterSchedulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}] updateClusterSchedules", response, response.Code())
	}
}

// NewUpdateClusterSchedulesOK creates a UpdateClusterSchedulesOK with default headers values
func NewUpdateClusterSchedulesOK() *UpdateClusterSchedulesOK {
	return &UpdateClusterSchedulesOK{}
}

/*
UpdateClusterSchedulesOK describes a response with status code 200, with default header values.

OK
*/
type UpdateClusterSchedulesOK struct {
	Payload []*models.ClusterSchedule
}

// IsSuccess returns true when this update cluster schedules o k response has a 2xx status code
func (o *UpdateClusterSchedulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster schedules o k response has a 3xx status code
func (o *UpdateClusterSchedulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules o k response has a 4xx status code
func (o *UpdateClusterSchedulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster schedules o k response has a 5xx status code
func (o *UpdateClusterSchedulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules o k response a status code equal to that given
func (o *UpdateClusterSchedulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cluster schedules o k response
func (o *UpdateClusterSchedulesOK) Code() int {
	return 200
}

func (o *UpdateClusterSchedulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesOK %s", 200, payload)
}

func (o *UpdateClusterSchedulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesOK %s", 200, payload)
}

func (o *UpdateClusterSchedulesOK) GetPayload() []*models.ClusterSchedule {
	return o.Payload
}

func (o *UpdateClusterSchedulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterSchedulesBadRequest creates a UpdateClusterSchedulesBadRequest with default headers values
func NewUpdateClusterSchedulesBadRequest() *UpdateClusterSchedulesBadRequest {
	return &UpdateClusterSchedulesBadRequest{}
}

/*
UpdateClusterSchedulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateClusterSchedulesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster schedules bad request response has a 2xx status code
func (o *UpdateClusterSchedulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster schedules bad request response has a 3xx status code
func (o *UpdateClusterSchedulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules bad request response has a 4xx status code
func (o *UpdateClusterSchedulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster schedules bad request response has a 5xx status code
func (o *UpdateClusterSchedulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules bad request response a status code equal to that given
func (o *UpdateClusterSchedulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cluster schedules bad request response
func (o *UpdateClusterSchedulesBadRequest) Code() int {
	return 400
}

func (o *UpdateClusterSchedulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesBadRequest %s", 400, payload)
}

func (o *UpdateClusterSchedulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesBadRequest %s", 400, payload)
}

func (o *UpdateClusterSchedulesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterSchedulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterSchedulesNotFound creates a UpdateClusterSchedulesNotFound with default headers values
func NewUpdateClusterSchedulesNotFound() *UpdateClusterSchedulesNotFound {
	return &UpdateClusterSchedulesNotFound{}
}

/*
UpdateClusterSchedulesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateClusterSchedulesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster schedules not found response has a 2xx status code
func (o *UpdateClusterSchedulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster schedules not found response has a 3xx status code
func (o *UpdateClusterSchedulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules not found response has a 4xx status code
func (o *UpdateClusterSchedulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster schedules not found response has a 5xx status code
func (o *UpdateClusterSchedulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules not found response a status code equal to that given
func (o *UpdateClusterSchedulesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cluster schedules not found response
func (o *UpdateClusterSchedulesNotFound) Code() int {
	return 404
}

func (o *UpdateClusterSchedulesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesNotFound %s", 404, payload)
}

func (o *UpdateClusterSchedulesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesNotFound %s", 404, payload)
}

func (o *UpdateClusterSchedulesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterSchedulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterSchedulesMethodNotAllowed creates a UpdateClusterSchedulesMethodNotAllowed with default headers values
func NewUpdateClusterSchedulesMethodNotAllowed() *UpdateClusterSchedulesMethodNotAllowed {
	return &UpdateClusterSchedulesMethodNotAllowed{}
}

/*
UpdateClusterSchedulesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateClusterSchedulesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster schedules method not allowed response has a 2xx status code
func (o *UpdateClusterSchedulesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster schedules method not allowed response has a 3xx status code
func (o *UpdateClusterSchedulesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules method not allowed response has a 4xx status code
func (o *UpdateClusterSchedulesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster schedules method not allowed response has a 5xx status code
func (o *UpdateClusterSchedulesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster schedules method not allowed response a status code equal to that given
func (o *UpdateClusterSchedulesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update cluster schedules method not allowed response
func (o *UpdateClusterSchedulesMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateClusterSchedulesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateClusterSchedulesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateClusterSchedulesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterSchedulesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterSchedulesInternalServerError creates a UpdateClusterSchedulesInternalServerError with default headers values
func NewUpdateClusterSchedulesInternalServerError() *UpdateClusterSchedulesInternalServerError {
	return &UpdateClusterSchedulesInternalServerError{}
}

/*
UpdateClusterSchedulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateClusterSchedulesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster schedules internal server error response has a 2xx status code
func (o *UpdateClusterSchedulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster schedules internal server error response has a 3xx status code
func (o *UpdateClusterSchedulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster schedules internal server error response has a 4xx status code
func (o *UpdateClusterSchedulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster schedules internal server error response has a 5xx status code
func (o *UpdateClusterSchedulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cluster schedules internal server error response a status code equal to that given
func (o *UpdateClusterSchedulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cluster schedules internal server error response
func (o *UpdateClusterSchedulesInternalServerError) Code() int {
	return 500
}

func (o *UpdateClusterSchedulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesInternalServerError %s", 500, payload)
}

func (o *UpdateClusterSchedulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/schedule/{clusterScheduleId}][%d] updateClusterSchedulesInternalServerError %s", 500, payload)
}

func (o *UpdateClusterSchedulesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterSchedulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
