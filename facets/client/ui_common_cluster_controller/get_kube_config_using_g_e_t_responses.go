// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetKubeConfigUsingGETReader is a Reader for the GetKubeConfigUsingGET structure.
type GetKubeConfigUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetKubeConfigUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetKubeConfigUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetKubeConfigUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetKubeConfigUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetKubeConfigUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig] getKubeConfigUsingGET", response, response.Code())
	}
}

// NewGetKubeConfigUsingGETOK creates a GetKubeConfigUsingGETOK with default headers values
func NewGetKubeConfigUsingGETOK() *GetKubeConfigUsingGETOK {
	return &GetKubeConfigUsingGETOK{}
}

/*
GetKubeConfigUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetKubeConfigUsingGETOK struct {
	Payload string
}

// IsSuccess returns true when this get kube config using g e t o k response has a 2xx status code
func (o *GetKubeConfigUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get kube config using g e t o k response has a 3xx status code
func (o *GetKubeConfigUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config using g e t o k response has a 4xx status code
func (o *GetKubeConfigUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get kube config using g e t o k response has a 5xx status code
func (o *GetKubeConfigUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config using g e t o k response a status code equal to that given
func (o *GetKubeConfigUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get kube config using g e t o k response
func (o *GetKubeConfigUsingGETOK) Code() int {
	return 200
}

func (o *GetKubeConfigUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETOK %s", 200, payload)
}

func (o *GetKubeConfigUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETOK %s", 200, payload)
}

func (o *GetKubeConfigUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *GetKubeConfigUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetKubeConfigUsingGETUnauthorized creates a GetKubeConfigUsingGETUnauthorized with default headers values
func NewGetKubeConfigUsingGETUnauthorized() *GetKubeConfigUsingGETUnauthorized {
	return &GetKubeConfigUsingGETUnauthorized{}
}

/*
GetKubeConfigUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetKubeConfigUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get kube config using g e t unauthorized response has a 2xx status code
func (o *GetKubeConfigUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kube config using g e t unauthorized response has a 3xx status code
func (o *GetKubeConfigUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config using g e t unauthorized response has a 4xx status code
func (o *GetKubeConfigUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kube config using g e t unauthorized response has a 5xx status code
func (o *GetKubeConfigUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config using g e t unauthorized response a status code equal to that given
func (o *GetKubeConfigUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get kube config using g e t unauthorized response
func (o *GetKubeConfigUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetKubeConfigUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETUnauthorized", 401)
}

func (o *GetKubeConfigUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETUnauthorized", 401)
}

func (o *GetKubeConfigUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubeConfigUsingGETForbidden creates a GetKubeConfigUsingGETForbidden with default headers values
func NewGetKubeConfigUsingGETForbidden() *GetKubeConfigUsingGETForbidden {
	return &GetKubeConfigUsingGETForbidden{}
}

/*
GetKubeConfigUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetKubeConfigUsingGETForbidden struct {
}

// IsSuccess returns true when this get kube config using g e t forbidden response has a 2xx status code
func (o *GetKubeConfigUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kube config using g e t forbidden response has a 3xx status code
func (o *GetKubeConfigUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config using g e t forbidden response has a 4xx status code
func (o *GetKubeConfigUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kube config using g e t forbidden response has a 5xx status code
func (o *GetKubeConfigUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config using g e t forbidden response a status code equal to that given
func (o *GetKubeConfigUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get kube config using g e t forbidden response
func (o *GetKubeConfigUsingGETForbidden) Code() int {
	return 403
}

func (o *GetKubeConfigUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETForbidden", 403)
}

func (o *GetKubeConfigUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETForbidden", 403)
}

func (o *GetKubeConfigUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetKubeConfigUsingGETNotFound creates a GetKubeConfigUsingGETNotFound with default headers values
func NewGetKubeConfigUsingGETNotFound() *GetKubeConfigUsingGETNotFound {
	return &GetKubeConfigUsingGETNotFound{}
}

/*
GetKubeConfigUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetKubeConfigUsingGETNotFound struct {
}

// IsSuccess returns true when this get kube config using g e t not found response has a 2xx status code
func (o *GetKubeConfigUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get kube config using g e t not found response has a 3xx status code
func (o *GetKubeConfigUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get kube config using g e t not found response has a 4xx status code
func (o *GetKubeConfigUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get kube config using g e t not found response has a 5xx status code
func (o *GetKubeConfigUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get kube config using g e t not found response a status code equal to that given
func (o *GetKubeConfigUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get kube config using g e t not found response
func (o *GetKubeConfigUsingGETNotFound) Code() int {
	return 404
}

func (o *GetKubeConfigUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETNotFound", 404)
}

func (o *GetKubeConfigUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubeconfig][%d] getKubeConfigUsingGETNotFound", 404)
}

func (o *GetKubeConfigUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
