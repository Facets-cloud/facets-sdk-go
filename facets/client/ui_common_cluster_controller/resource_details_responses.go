// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ResourceDetailsReader is a Reader for the ResourceDetails structure.
type ResourceDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResourceDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResourceDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResourceDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResourceDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewResourceDetailsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResourceDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails] resourceDetails", response, response.Code())
	}
}

// NewResourceDetailsOK creates a ResourceDetailsOK with default headers values
func NewResourceDetailsOK() *ResourceDetailsOK {
	return &ResourceDetailsOK{}
}

/*
ResourceDetailsOK describes a response with status code 200, with default header values.

OK
*/
type ResourceDetailsOK struct {
	Payload []*models.ResourceDetails
}

// IsSuccess returns true when this resource details o k response has a 2xx status code
func (o *ResourceDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this resource details o k response has a 3xx status code
func (o *ResourceDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource details o k response has a 4xx status code
func (o *ResourceDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this resource details o k response has a 5xx status code
func (o *ResourceDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this resource details o k response a status code equal to that given
func (o *ResourceDetailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the resource details o k response
func (o *ResourceDetailsOK) Code() int {
	return 200
}

func (o *ResourceDetailsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsOK %s", 200, payload)
}

func (o *ResourceDetailsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsOK %s", 200, payload)
}

func (o *ResourceDetailsOK) GetPayload() []*models.ResourceDetails {
	return o.Payload
}

func (o *ResourceDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceDetailsBadRequest creates a ResourceDetailsBadRequest with default headers values
func NewResourceDetailsBadRequest() *ResourceDetailsBadRequest {
	return &ResourceDetailsBadRequest{}
}

/*
ResourceDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ResourceDetailsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this resource details bad request response has a 2xx status code
func (o *ResourceDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource details bad request response has a 3xx status code
func (o *ResourceDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource details bad request response has a 4xx status code
func (o *ResourceDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource details bad request response has a 5xx status code
func (o *ResourceDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this resource details bad request response a status code equal to that given
func (o *ResourceDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the resource details bad request response
func (o *ResourceDetailsBadRequest) Code() int {
	return 400
}

func (o *ResourceDetailsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsBadRequest %s", 400, payload)
}

func (o *ResourceDetailsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsBadRequest %s", 400, payload)
}

func (o *ResourceDetailsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResourceDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceDetailsNotFound creates a ResourceDetailsNotFound with default headers values
func NewResourceDetailsNotFound() *ResourceDetailsNotFound {
	return &ResourceDetailsNotFound{}
}

/*
ResourceDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ResourceDetailsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this resource details not found response has a 2xx status code
func (o *ResourceDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource details not found response has a 3xx status code
func (o *ResourceDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource details not found response has a 4xx status code
func (o *ResourceDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource details not found response has a 5xx status code
func (o *ResourceDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this resource details not found response a status code equal to that given
func (o *ResourceDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the resource details not found response
func (o *ResourceDetailsNotFound) Code() int {
	return 404
}

func (o *ResourceDetailsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsNotFound %s", 404, payload)
}

func (o *ResourceDetailsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsNotFound %s", 404, payload)
}

func (o *ResourceDetailsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResourceDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceDetailsMethodNotAllowed creates a ResourceDetailsMethodNotAllowed with default headers values
func NewResourceDetailsMethodNotAllowed() *ResourceDetailsMethodNotAllowed {
	return &ResourceDetailsMethodNotAllowed{}
}

/*
ResourceDetailsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ResourceDetailsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this resource details method not allowed response has a 2xx status code
func (o *ResourceDetailsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource details method not allowed response has a 3xx status code
func (o *ResourceDetailsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource details method not allowed response has a 4xx status code
func (o *ResourceDetailsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this resource details method not allowed response has a 5xx status code
func (o *ResourceDetailsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this resource details method not allowed response a status code equal to that given
func (o *ResourceDetailsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the resource details method not allowed response
func (o *ResourceDetailsMethodNotAllowed) Code() int {
	return 405
}

func (o *ResourceDetailsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsMethodNotAllowed %s", 405, payload)
}

func (o *ResourceDetailsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsMethodNotAllowed %s", 405, payload)
}

func (o *ResourceDetailsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResourceDetailsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResourceDetailsInternalServerError creates a ResourceDetailsInternalServerError with default headers values
func NewResourceDetailsInternalServerError() *ResourceDetailsInternalServerError {
	return &ResourceDetailsInternalServerError{}
}

/*
ResourceDetailsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ResourceDetailsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this resource details internal server error response has a 2xx status code
func (o *ResourceDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this resource details internal server error response has a 3xx status code
func (o *ResourceDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this resource details internal server error response has a 4xx status code
func (o *ResourceDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this resource details internal server error response has a 5xx status code
func (o *ResourceDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this resource details internal server error response a status code equal to that given
func (o *ResourceDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the resource details internal server error response
func (o *ResourceDetailsInternalServerError) Code() int {
	return 500
}

func (o *ResourceDetailsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsInternalServerError %s", 500, payload)
}

func (o *ResourceDetailsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceDetails][%d] resourceDetailsInternalServerError %s", 500, payload)
}

func (o *ResourceDetailsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResourceDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
