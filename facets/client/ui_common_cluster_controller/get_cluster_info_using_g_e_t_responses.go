// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterInfoUsingGETReader is a Reader for the GetClusterInfoUsingGET structure.
type GetClusterInfoUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterInfoUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterInfoUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterInfoUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterInfoUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterInfoUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/info] getClusterInfoUsingGET", response, response.Code())
	}
}

// NewGetClusterInfoUsingGETOK creates a GetClusterInfoUsingGETOK with default headers values
func NewGetClusterInfoUsingGETOK() *GetClusterInfoUsingGETOK {
	return &GetClusterInfoUsingGETOK{}
}

/*
GetClusterInfoUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterInfoUsingGETOK struct {
	Payload *models.ClusterResponse
}

// IsSuccess returns true when this get cluster info using g e t o k response has a 2xx status code
func (o *GetClusterInfoUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster info using g e t o k response has a 3xx status code
func (o *GetClusterInfoUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info using g e t o k response has a 4xx status code
func (o *GetClusterInfoUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster info using g e t o k response has a 5xx status code
func (o *GetClusterInfoUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info using g e t o k response a status code equal to that given
func (o *GetClusterInfoUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster info using g e t o k response
func (o *GetClusterInfoUsingGETOK) Code() int {
	return 200
}

func (o *GetClusterInfoUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETOK %s", 200, payload)
}

func (o *GetClusterInfoUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETOK %s", 200, payload)
}

func (o *GetClusterInfoUsingGETOK) GetPayload() *models.ClusterResponse {
	return o.Payload
}

func (o *GetClusterInfoUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterInfoUsingGETUnauthorized creates a GetClusterInfoUsingGETUnauthorized with default headers values
func NewGetClusterInfoUsingGETUnauthorized() *GetClusterInfoUsingGETUnauthorized {
	return &GetClusterInfoUsingGETUnauthorized{}
}

/*
GetClusterInfoUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClusterInfoUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get cluster info using g e t unauthorized response has a 2xx status code
func (o *GetClusterInfoUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster info using g e t unauthorized response has a 3xx status code
func (o *GetClusterInfoUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info using g e t unauthorized response has a 4xx status code
func (o *GetClusterInfoUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster info using g e t unauthorized response has a 5xx status code
func (o *GetClusterInfoUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info using g e t unauthorized response a status code equal to that given
func (o *GetClusterInfoUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cluster info using g e t unauthorized response
func (o *GetClusterInfoUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClusterInfoUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETUnauthorized", 401)
}

func (o *GetClusterInfoUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETUnauthorized", 401)
}

func (o *GetClusterInfoUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterInfoUsingGETForbidden creates a GetClusterInfoUsingGETForbidden with default headers values
func NewGetClusterInfoUsingGETForbidden() *GetClusterInfoUsingGETForbidden {
	return &GetClusterInfoUsingGETForbidden{}
}

/*
GetClusterInfoUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClusterInfoUsingGETForbidden struct {
}

// IsSuccess returns true when this get cluster info using g e t forbidden response has a 2xx status code
func (o *GetClusterInfoUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster info using g e t forbidden response has a 3xx status code
func (o *GetClusterInfoUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info using g e t forbidden response has a 4xx status code
func (o *GetClusterInfoUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster info using g e t forbidden response has a 5xx status code
func (o *GetClusterInfoUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info using g e t forbidden response a status code equal to that given
func (o *GetClusterInfoUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cluster info using g e t forbidden response
func (o *GetClusterInfoUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClusterInfoUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETForbidden", 403)
}

func (o *GetClusterInfoUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETForbidden", 403)
}

func (o *GetClusterInfoUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterInfoUsingGETNotFound creates a GetClusterInfoUsingGETNotFound with default headers values
func NewGetClusterInfoUsingGETNotFound() *GetClusterInfoUsingGETNotFound {
	return &GetClusterInfoUsingGETNotFound{}
}

/*
GetClusterInfoUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterInfoUsingGETNotFound struct {
}

// IsSuccess returns true when this get cluster info using g e t not found response has a 2xx status code
func (o *GetClusterInfoUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster info using g e t not found response has a 3xx status code
func (o *GetClusterInfoUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster info using g e t not found response has a 4xx status code
func (o *GetClusterInfoUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster info using g e t not found response has a 5xx status code
func (o *GetClusterInfoUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster info using g e t not found response a status code equal to that given
func (o *GetClusterInfoUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster info using g e t not found response
func (o *GetClusterInfoUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClusterInfoUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETNotFound", 404)
}

func (o *GetClusterInfoUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/info][%d] getClusterInfoUsingGETNotFound", 404)
}

func (o *GetClusterInfoUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
