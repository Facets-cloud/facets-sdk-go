// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterSchedulesUsingGETReader is a Reader for the GetClusterSchedulesUsingGET structure.
type GetClusterSchedulesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterSchedulesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterSchedulesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterSchedulesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterSchedulesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterSchedulesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/schedule] getClusterSchedulesUsingGET", response, response.Code())
	}
}

// NewGetClusterSchedulesUsingGETOK creates a GetClusterSchedulesUsingGETOK with default headers values
func NewGetClusterSchedulesUsingGETOK() *GetClusterSchedulesUsingGETOK {
	return &GetClusterSchedulesUsingGETOK{}
}

/*
GetClusterSchedulesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterSchedulesUsingGETOK struct {
	Payload []*models.ClusterSchedule
}

// IsSuccess returns true when this get cluster schedules using g e t o k response has a 2xx status code
func (o *GetClusterSchedulesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster schedules using g e t o k response has a 3xx status code
func (o *GetClusterSchedulesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster schedules using g e t o k response has a 4xx status code
func (o *GetClusterSchedulesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster schedules using g e t o k response has a 5xx status code
func (o *GetClusterSchedulesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster schedules using g e t o k response a status code equal to that given
func (o *GetClusterSchedulesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster schedules using g e t o k response
func (o *GetClusterSchedulesUsingGETOK) Code() int {
	return 200
}

func (o *GetClusterSchedulesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETOK %s", 200, payload)
}

func (o *GetClusterSchedulesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETOK %s", 200, payload)
}

func (o *GetClusterSchedulesUsingGETOK) GetPayload() []*models.ClusterSchedule {
	return o.Payload
}

func (o *GetClusterSchedulesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterSchedulesUsingGETUnauthorized creates a GetClusterSchedulesUsingGETUnauthorized with default headers values
func NewGetClusterSchedulesUsingGETUnauthorized() *GetClusterSchedulesUsingGETUnauthorized {
	return &GetClusterSchedulesUsingGETUnauthorized{}
}

/*
GetClusterSchedulesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClusterSchedulesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get cluster schedules using g e t unauthorized response has a 2xx status code
func (o *GetClusterSchedulesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster schedules using g e t unauthorized response has a 3xx status code
func (o *GetClusterSchedulesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster schedules using g e t unauthorized response has a 4xx status code
func (o *GetClusterSchedulesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster schedules using g e t unauthorized response has a 5xx status code
func (o *GetClusterSchedulesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster schedules using g e t unauthorized response a status code equal to that given
func (o *GetClusterSchedulesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cluster schedules using g e t unauthorized response
func (o *GetClusterSchedulesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClusterSchedulesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETUnauthorized", 401)
}

func (o *GetClusterSchedulesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETUnauthorized", 401)
}

func (o *GetClusterSchedulesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterSchedulesUsingGETForbidden creates a GetClusterSchedulesUsingGETForbidden with default headers values
func NewGetClusterSchedulesUsingGETForbidden() *GetClusterSchedulesUsingGETForbidden {
	return &GetClusterSchedulesUsingGETForbidden{}
}

/*
GetClusterSchedulesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClusterSchedulesUsingGETForbidden struct {
}

// IsSuccess returns true when this get cluster schedules using g e t forbidden response has a 2xx status code
func (o *GetClusterSchedulesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster schedules using g e t forbidden response has a 3xx status code
func (o *GetClusterSchedulesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster schedules using g e t forbidden response has a 4xx status code
func (o *GetClusterSchedulesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster schedules using g e t forbidden response has a 5xx status code
func (o *GetClusterSchedulesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster schedules using g e t forbidden response a status code equal to that given
func (o *GetClusterSchedulesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cluster schedules using g e t forbidden response
func (o *GetClusterSchedulesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClusterSchedulesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETForbidden", 403)
}

func (o *GetClusterSchedulesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETForbidden", 403)
}

func (o *GetClusterSchedulesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterSchedulesUsingGETNotFound creates a GetClusterSchedulesUsingGETNotFound with default headers values
func NewGetClusterSchedulesUsingGETNotFound() *GetClusterSchedulesUsingGETNotFound {
	return &GetClusterSchedulesUsingGETNotFound{}
}

/*
GetClusterSchedulesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterSchedulesUsingGETNotFound struct {
}

// IsSuccess returns true when this get cluster schedules using g e t not found response has a 2xx status code
func (o *GetClusterSchedulesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster schedules using g e t not found response has a 3xx status code
func (o *GetClusterSchedulesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster schedules using g e t not found response has a 4xx status code
func (o *GetClusterSchedulesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster schedules using g e t not found response has a 5xx status code
func (o *GetClusterSchedulesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster schedules using g e t not found response a status code equal to that given
func (o *GetClusterSchedulesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster schedules using g e t not found response
func (o *GetClusterSchedulesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClusterSchedulesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETNotFound", 404)
}

func (o *GetClusterSchedulesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/schedule][%d] getClusterSchedulesUsingGETNotFound", 404)
}

func (o *GetClusterSchedulesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
