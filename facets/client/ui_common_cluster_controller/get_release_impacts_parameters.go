// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetReleaseImpactsParams creates a new GetReleaseImpactsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetReleaseImpactsParams() *GetReleaseImpactsParams {
	return &GetReleaseImpactsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetReleaseImpactsParamsWithTimeout creates a new GetReleaseImpactsParams object
// with the ability to set a timeout on a request.
func NewGetReleaseImpactsParamsWithTimeout(timeout time.Duration) *GetReleaseImpactsParams {
	return &GetReleaseImpactsParams{
		timeout: timeout,
	}
}

// NewGetReleaseImpactsParamsWithContext creates a new GetReleaseImpactsParams object
// with the ability to set a context for a request.
func NewGetReleaseImpactsParamsWithContext(ctx context.Context) *GetReleaseImpactsParams {
	return &GetReleaseImpactsParams{
		Context: ctx,
	}
}

// NewGetReleaseImpactsParamsWithHTTPClient creates a new GetReleaseImpactsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetReleaseImpactsParamsWithHTTPClient(client *http.Client) *GetReleaseImpactsParams {
	return &GetReleaseImpactsParams{
		HTTPClient: client,
	}
}

/*
GetReleaseImpactsParams contains all the parameters to send to the API endpoint

	for the get release impacts operation.

	Typically these are written to a http.Request.
*/
type GetReleaseImpactsParams struct {

	// Attribute.
	Attribute *string

	// ChangeType.
	ChangeType *string

	// ClusterID.
	ClusterID string

	// End.
	End *string

	// PageNumber.
	PageNumber *string

	// PageSize.
	PageSize *string

	// ReleaseType.
	ReleaseType *string

	// ResourceName.
	ResourceName string

	// ResourceType.
	ResourceType string

	// Start.
	Start *string

	// TriggeredBy.
	TriggeredBy *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get release impacts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetReleaseImpactsParams) WithDefaults() *GetReleaseImpactsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get release impacts params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetReleaseImpactsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get release impacts params
func (o *GetReleaseImpactsParams) WithTimeout(timeout time.Duration) *GetReleaseImpactsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get release impacts params
func (o *GetReleaseImpactsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get release impacts params
func (o *GetReleaseImpactsParams) WithContext(ctx context.Context) *GetReleaseImpactsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get release impacts params
func (o *GetReleaseImpactsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get release impacts params
func (o *GetReleaseImpactsParams) WithHTTPClient(client *http.Client) *GetReleaseImpactsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get release impacts params
func (o *GetReleaseImpactsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAttribute adds the attribute to the get release impacts params
func (o *GetReleaseImpactsParams) WithAttribute(attribute *string) *GetReleaseImpactsParams {
	o.SetAttribute(attribute)
	return o
}

// SetAttribute adds the attribute to the get release impacts params
func (o *GetReleaseImpactsParams) SetAttribute(attribute *string) {
	o.Attribute = attribute
}

// WithChangeType adds the changeType to the get release impacts params
func (o *GetReleaseImpactsParams) WithChangeType(changeType *string) *GetReleaseImpactsParams {
	o.SetChangeType(changeType)
	return o
}

// SetChangeType adds the changeType to the get release impacts params
func (o *GetReleaseImpactsParams) SetChangeType(changeType *string) {
	o.ChangeType = changeType
}

// WithClusterID adds the clusterID to the get release impacts params
func (o *GetReleaseImpactsParams) WithClusterID(clusterID string) *GetReleaseImpactsParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the get release impacts params
func (o *GetReleaseImpactsParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithEnd adds the end to the get release impacts params
func (o *GetReleaseImpactsParams) WithEnd(end *string) *GetReleaseImpactsParams {
	o.SetEnd(end)
	return o
}

// SetEnd adds the end to the get release impacts params
func (o *GetReleaseImpactsParams) SetEnd(end *string) {
	o.End = end
}

// WithPageNumber adds the pageNumber to the get release impacts params
func (o *GetReleaseImpactsParams) WithPageNumber(pageNumber *string) *GetReleaseImpactsParams {
	o.SetPageNumber(pageNumber)
	return o
}

// SetPageNumber adds the pageNumber to the get release impacts params
func (o *GetReleaseImpactsParams) SetPageNumber(pageNumber *string) {
	o.PageNumber = pageNumber
}

// WithPageSize adds the pageSize to the get release impacts params
func (o *GetReleaseImpactsParams) WithPageSize(pageSize *string) *GetReleaseImpactsParams {
	o.SetPageSize(pageSize)
	return o
}

// SetPageSize adds the pageSize to the get release impacts params
func (o *GetReleaseImpactsParams) SetPageSize(pageSize *string) {
	o.PageSize = pageSize
}

// WithReleaseType adds the releaseType to the get release impacts params
func (o *GetReleaseImpactsParams) WithReleaseType(releaseType *string) *GetReleaseImpactsParams {
	o.SetReleaseType(releaseType)
	return o
}

// SetReleaseType adds the releaseType to the get release impacts params
func (o *GetReleaseImpactsParams) SetReleaseType(releaseType *string) {
	o.ReleaseType = releaseType
}

// WithResourceName adds the resourceName to the get release impacts params
func (o *GetReleaseImpactsParams) WithResourceName(resourceName string) *GetReleaseImpactsParams {
	o.SetResourceName(resourceName)
	return o
}

// SetResourceName adds the resourceName to the get release impacts params
func (o *GetReleaseImpactsParams) SetResourceName(resourceName string) {
	o.ResourceName = resourceName
}

// WithResourceType adds the resourceType to the get release impacts params
func (o *GetReleaseImpactsParams) WithResourceType(resourceType string) *GetReleaseImpactsParams {
	o.SetResourceType(resourceType)
	return o
}

// SetResourceType adds the resourceType to the get release impacts params
func (o *GetReleaseImpactsParams) SetResourceType(resourceType string) {
	o.ResourceType = resourceType
}

// WithStart adds the start to the get release impacts params
func (o *GetReleaseImpactsParams) WithStart(start *string) *GetReleaseImpactsParams {
	o.SetStart(start)
	return o
}

// SetStart adds the start to the get release impacts params
func (o *GetReleaseImpactsParams) SetStart(start *string) {
	o.Start = start
}

// WithTriggeredBy adds the triggeredBy to the get release impacts params
func (o *GetReleaseImpactsParams) WithTriggeredBy(triggeredBy *string) *GetReleaseImpactsParams {
	o.SetTriggeredBy(triggeredBy)
	return o
}

// SetTriggeredBy adds the triggeredBy to the get release impacts params
func (o *GetReleaseImpactsParams) SetTriggeredBy(triggeredBy *string) {
	o.TriggeredBy = triggeredBy
}

// WriteToRequest writes these params to a swagger request
func (o *GetReleaseImpactsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Attribute != nil {

		// query param attribute
		var qrAttribute string

		if o.Attribute != nil {
			qrAttribute = *o.Attribute
		}
		qAttribute := qrAttribute
		if qAttribute != "" {

			if err := r.SetQueryParam("attribute", qAttribute); err != nil {
				return err
			}
		}
	}

	if o.ChangeType != nil {

		// query param changeType
		var qrChangeType string

		if o.ChangeType != nil {
			qrChangeType = *o.ChangeType
		}
		qChangeType := qrChangeType
		if qChangeType != "" {

			if err := r.SetQueryParam("changeType", qChangeType); err != nil {
				return err
			}
		}
	}

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}

	if o.End != nil {

		// query param end
		var qrEnd string

		if o.End != nil {
			qrEnd = *o.End
		}
		qEnd := qrEnd
		if qEnd != "" {

			if err := r.SetQueryParam("end", qEnd); err != nil {
				return err
			}
		}
	}

	if o.PageNumber != nil {

		// query param pageNumber
		var qrPageNumber string

		if o.PageNumber != nil {
			qrPageNumber = *o.PageNumber
		}
		qPageNumber := qrPageNumber
		if qPageNumber != "" {

			if err := r.SetQueryParam("pageNumber", qPageNumber); err != nil {
				return err
			}
		}
	}

	if o.PageSize != nil {

		// query param pageSize
		var qrPageSize string

		if o.PageSize != nil {
			qrPageSize = *o.PageSize
		}
		qPageSize := qrPageSize
		if qPageSize != "" {

			if err := r.SetQueryParam("pageSize", qPageSize); err != nil {
				return err
			}
		}
	}

	if o.ReleaseType != nil {

		// query param releaseType
		var qrReleaseType string

		if o.ReleaseType != nil {
			qrReleaseType = *o.ReleaseType
		}
		qReleaseType := qrReleaseType
		if qReleaseType != "" {

			if err := r.SetQueryParam("releaseType", qReleaseType); err != nil {
				return err
			}
		}
	}

	// path param resourceName
	if err := r.SetPathParam("resourceName", o.ResourceName); err != nil {
		return err
	}

	// path param resourceType
	if err := r.SetPathParam("resourceType", o.ResourceType); err != nil {
		return err
	}

	if o.Start != nil {

		// query param start
		var qrStart string

		if o.Start != nil {
			qrStart = *o.Start
		}
		qStart := qrStart
		if qStart != "" {

			if err := r.SetQueryParam("start", qStart); err != nil {
				return err
			}
		}
	}

	if o.TriggeredBy != nil {

		// query param triggeredBy
		var qrTriggeredBy string

		if o.TriggeredBy != nil {
			qrTriggeredBy = *o.TriggeredBy
		}
		qTriggeredBy := qrTriggeredBy
		if qTriggeredBy != "" {

			if err := r.SetQueryParam("triggeredBy", qTriggeredBy); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
