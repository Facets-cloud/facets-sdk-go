// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// EditToolsConfigUsingPUTReader is a Reader for the EditToolsConfigUsingPUT structure.
type EditToolsConfigUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditToolsConfigUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditToolsConfigUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewEditToolsConfigUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEditToolsConfigUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEditToolsConfigUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditToolsConfigUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}] editToolsConfigUsingPUT", response, response.Code())
	}
}

// NewEditToolsConfigUsingPUTOK creates a EditToolsConfigUsingPUTOK with default headers values
func NewEditToolsConfigUsingPUTOK() *EditToolsConfigUsingPUTOK {
	return &EditToolsConfigUsingPUTOK{}
}

/*
EditToolsConfigUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type EditToolsConfigUsingPUTOK struct {
	Payload *models.ToolsConfig
}

// IsSuccess returns true when this edit tools config using p u t o k response has a 2xx status code
func (o *EditToolsConfigUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit tools config using p u t o k response has a 3xx status code
func (o *EditToolsConfigUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config using p u t o k response has a 4xx status code
func (o *EditToolsConfigUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit tools config using p u t o k response has a 5xx status code
func (o *EditToolsConfigUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config using p u t o k response a status code equal to that given
func (o *EditToolsConfigUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the edit tools config using p u t o k response
func (o *EditToolsConfigUsingPUTOK) Code() int {
	return 200
}

func (o *EditToolsConfigUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTOK %s", 200, payload)
}

func (o *EditToolsConfigUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTOK %s", 200, payload)
}

func (o *EditToolsConfigUsingPUTOK) GetPayload() *models.ToolsConfig {
	return o.Payload
}

func (o *EditToolsConfigUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ToolsConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditToolsConfigUsingPUTCreated creates a EditToolsConfigUsingPUTCreated with default headers values
func NewEditToolsConfigUsingPUTCreated() *EditToolsConfigUsingPUTCreated {
	return &EditToolsConfigUsingPUTCreated{}
}

/*
EditToolsConfigUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type EditToolsConfigUsingPUTCreated struct {
}

// IsSuccess returns true when this edit tools config using p u t created response has a 2xx status code
func (o *EditToolsConfigUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit tools config using p u t created response has a 3xx status code
func (o *EditToolsConfigUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config using p u t created response has a 4xx status code
func (o *EditToolsConfigUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit tools config using p u t created response has a 5xx status code
func (o *EditToolsConfigUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config using p u t created response a status code equal to that given
func (o *EditToolsConfigUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the edit tools config using p u t created response
func (o *EditToolsConfigUsingPUTCreated) Code() int {
	return 201
}

func (o *EditToolsConfigUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTCreated", 201)
}

func (o *EditToolsConfigUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTCreated", 201)
}

func (o *EditToolsConfigUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEditToolsConfigUsingPUTUnauthorized creates a EditToolsConfigUsingPUTUnauthorized with default headers values
func NewEditToolsConfigUsingPUTUnauthorized() *EditToolsConfigUsingPUTUnauthorized {
	return &EditToolsConfigUsingPUTUnauthorized{}
}

/*
EditToolsConfigUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type EditToolsConfigUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this edit tools config using p u t unauthorized response has a 2xx status code
func (o *EditToolsConfigUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit tools config using p u t unauthorized response has a 3xx status code
func (o *EditToolsConfigUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config using p u t unauthorized response has a 4xx status code
func (o *EditToolsConfigUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit tools config using p u t unauthorized response has a 5xx status code
func (o *EditToolsConfigUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config using p u t unauthorized response a status code equal to that given
func (o *EditToolsConfigUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the edit tools config using p u t unauthorized response
func (o *EditToolsConfigUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *EditToolsConfigUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTUnauthorized", 401)
}

func (o *EditToolsConfigUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTUnauthorized", 401)
}

func (o *EditToolsConfigUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEditToolsConfigUsingPUTForbidden creates a EditToolsConfigUsingPUTForbidden with default headers values
func NewEditToolsConfigUsingPUTForbidden() *EditToolsConfigUsingPUTForbidden {
	return &EditToolsConfigUsingPUTForbidden{}
}

/*
EditToolsConfigUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EditToolsConfigUsingPUTForbidden struct {
}

// IsSuccess returns true when this edit tools config using p u t forbidden response has a 2xx status code
func (o *EditToolsConfigUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit tools config using p u t forbidden response has a 3xx status code
func (o *EditToolsConfigUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config using p u t forbidden response has a 4xx status code
func (o *EditToolsConfigUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit tools config using p u t forbidden response has a 5xx status code
func (o *EditToolsConfigUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config using p u t forbidden response a status code equal to that given
func (o *EditToolsConfigUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the edit tools config using p u t forbidden response
func (o *EditToolsConfigUsingPUTForbidden) Code() int {
	return 403
}

func (o *EditToolsConfigUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTForbidden", 403)
}

func (o *EditToolsConfigUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTForbidden", 403)
}

func (o *EditToolsConfigUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEditToolsConfigUsingPUTNotFound creates a EditToolsConfigUsingPUTNotFound with default headers values
func NewEditToolsConfigUsingPUTNotFound() *EditToolsConfigUsingPUTNotFound {
	return &EditToolsConfigUsingPUTNotFound{}
}

/*
EditToolsConfigUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EditToolsConfigUsingPUTNotFound struct {
}

// IsSuccess returns true when this edit tools config using p u t not found response has a 2xx status code
func (o *EditToolsConfigUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit tools config using p u t not found response has a 3xx status code
func (o *EditToolsConfigUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config using p u t not found response has a 4xx status code
func (o *EditToolsConfigUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit tools config using p u t not found response has a 5xx status code
func (o *EditToolsConfigUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config using p u t not found response a status code equal to that given
func (o *EditToolsConfigUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the edit tools config using p u t not found response
func (o *EditToolsConfigUsingPUTNotFound) Code() int {
	return 404
}

func (o *EditToolsConfigUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTNotFound", 404)
}

func (o *EditToolsConfigUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigUsingPUTNotFound", 404)
}

func (o *EditToolsConfigUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
