// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterCommonUsingGETReader is a Reader for the GetClusterCommonUsingGET structure.
type GetClusterCommonUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterCommonUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterCommonUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterCommonUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterCommonUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterCommonUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}] getClusterCommonUsingGET", response, response.Code())
	}
}

// NewGetClusterCommonUsingGETOK creates a GetClusterCommonUsingGETOK with default headers values
func NewGetClusterCommonUsingGETOK() *GetClusterCommonUsingGETOK {
	return &GetClusterCommonUsingGETOK{}
}

/*
GetClusterCommonUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterCommonUsingGETOK struct {
	Payload *models.AbstractCluster
}

// IsSuccess returns true when this get cluster common using g e t o k response has a 2xx status code
func (o *GetClusterCommonUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster common using g e t o k response has a 3xx status code
func (o *GetClusterCommonUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster common using g e t o k response has a 4xx status code
func (o *GetClusterCommonUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster common using g e t o k response has a 5xx status code
func (o *GetClusterCommonUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster common using g e t o k response a status code equal to that given
func (o *GetClusterCommonUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster common using g e t o k response
func (o *GetClusterCommonUsingGETOK) Code() int {
	return 200
}

func (o *GetClusterCommonUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETOK %s", 200, payload)
}

func (o *GetClusterCommonUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETOK %s", 200, payload)
}

func (o *GetClusterCommonUsingGETOK) GetPayload() *models.AbstractCluster {
	return o.Payload
}

func (o *GetClusterCommonUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterCommonUsingGETUnauthorized creates a GetClusterCommonUsingGETUnauthorized with default headers values
func NewGetClusterCommonUsingGETUnauthorized() *GetClusterCommonUsingGETUnauthorized {
	return &GetClusterCommonUsingGETUnauthorized{}
}

/*
GetClusterCommonUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClusterCommonUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get cluster common using g e t unauthorized response has a 2xx status code
func (o *GetClusterCommonUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster common using g e t unauthorized response has a 3xx status code
func (o *GetClusterCommonUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster common using g e t unauthorized response has a 4xx status code
func (o *GetClusterCommonUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster common using g e t unauthorized response has a 5xx status code
func (o *GetClusterCommonUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster common using g e t unauthorized response a status code equal to that given
func (o *GetClusterCommonUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cluster common using g e t unauthorized response
func (o *GetClusterCommonUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClusterCommonUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETUnauthorized", 401)
}

func (o *GetClusterCommonUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETUnauthorized", 401)
}

func (o *GetClusterCommonUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterCommonUsingGETForbidden creates a GetClusterCommonUsingGETForbidden with default headers values
func NewGetClusterCommonUsingGETForbidden() *GetClusterCommonUsingGETForbidden {
	return &GetClusterCommonUsingGETForbidden{}
}

/*
GetClusterCommonUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClusterCommonUsingGETForbidden struct {
}

// IsSuccess returns true when this get cluster common using g e t forbidden response has a 2xx status code
func (o *GetClusterCommonUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster common using g e t forbidden response has a 3xx status code
func (o *GetClusterCommonUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster common using g e t forbidden response has a 4xx status code
func (o *GetClusterCommonUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster common using g e t forbidden response has a 5xx status code
func (o *GetClusterCommonUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster common using g e t forbidden response a status code equal to that given
func (o *GetClusterCommonUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cluster common using g e t forbidden response
func (o *GetClusterCommonUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClusterCommonUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETForbidden", 403)
}

func (o *GetClusterCommonUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETForbidden", 403)
}

func (o *GetClusterCommonUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterCommonUsingGETNotFound creates a GetClusterCommonUsingGETNotFound with default headers values
func NewGetClusterCommonUsingGETNotFound() *GetClusterCommonUsingGETNotFound {
	return &GetClusterCommonUsingGETNotFound{}
}

/*
GetClusterCommonUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterCommonUsingGETNotFound struct {
}

// IsSuccess returns true when this get cluster common using g e t not found response has a 2xx status code
func (o *GetClusterCommonUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster common using g e t not found response has a 3xx status code
func (o *GetClusterCommonUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster common using g e t not found response has a 4xx status code
func (o *GetClusterCommonUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster common using g e t not found response has a 5xx status code
func (o *GetClusterCommonUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster common using g e t not found response a status code equal to that given
func (o *GetClusterCommonUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster common using g e t not found response
func (o *GetClusterCommonUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClusterCommonUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETNotFound", 404)
}

func (o *GetClusterCommonUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}][%d] getClusterCommonUsingGETNotFound", 404)
}

func (o *GetClusterCommonUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
