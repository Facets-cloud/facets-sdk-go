// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterMetadataUsingGETReader is a Reader for the GetClusterMetadataUsingGET structure.
type GetClusterMetadataUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterMetadataUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterMetadataUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterMetadataUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterMetadataUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterMetadataUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata] getClusterMetadataUsingGET", response, response.Code())
	}
}

// NewGetClusterMetadataUsingGETOK creates a GetClusterMetadataUsingGETOK with default headers values
func NewGetClusterMetadataUsingGETOK() *GetClusterMetadataUsingGETOK {
	return &GetClusterMetadataUsingGETOK{}
}

/*
GetClusterMetadataUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterMetadataUsingGETOK struct {
	Payload *models.ClusterMetadata
}

// IsSuccess returns true when this get cluster metadata using g e t o k response has a 2xx status code
func (o *GetClusterMetadataUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster metadata using g e t o k response has a 3xx status code
func (o *GetClusterMetadataUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata using g e t o k response has a 4xx status code
func (o *GetClusterMetadataUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster metadata using g e t o k response has a 5xx status code
func (o *GetClusterMetadataUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata using g e t o k response a status code equal to that given
func (o *GetClusterMetadataUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster metadata using g e t o k response
func (o *GetClusterMetadataUsingGETOK) Code() int {
	return 200
}

func (o *GetClusterMetadataUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETOK %s", 200, payload)
}

func (o *GetClusterMetadataUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETOK %s", 200, payload)
}

func (o *GetClusterMetadataUsingGETOK) GetPayload() *models.ClusterMetadata {
	return o.Payload
}

func (o *GetClusterMetadataUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterMetadata)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetadataUsingGETUnauthorized creates a GetClusterMetadataUsingGETUnauthorized with default headers values
func NewGetClusterMetadataUsingGETUnauthorized() *GetClusterMetadataUsingGETUnauthorized {
	return &GetClusterMetadataUsingGETUnauthorized{}
}

/*
GetClusterMetadataUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClusterMetadataUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get cluster metadata using g e t unauthorized response has a 2xx status code
func (o *GetClusterMetadataUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster metadata using g e t unauthorized response has a 3xx status code
func (o *GetClusterMetadataUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata using g e t unauthorized response has a 4xx status code
func (o *GetClusterMetadataUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster metadata using g e t unauthorized response has a 5xx status code
func (o *GetClusterMetadataUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata using g e t unauthorized response a status code equal to that given
func (o *GetClusterMetadataUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cluster metadata using g e t unauthorized response
func (o *GetClusterMetadataUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClusterMetadataUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETUnauthorized", 401)
}

func (o *GetClusterMetadataUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETUnauthorized", 401)
}

func (o *GetClusterMetadataUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterMetadataUsingGETForbidden creates a GetClusterMetadataUsingGETForbidden with default headers values
func NewGetClusterMetadataUsingGETForbidden() *GetClusterMetadataUsingGETForbidden {
	return &GetClusterMetadataUsingGETForbidden{}
}

/*
GetClusterMetadataUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClusterMetadataUsingGETForbidden struct {
}

// IsSuccess returns true when this get cluster metadata using g e t forbidden response has a 2xx status code
func (o *GetClusterMetadataUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster metadata using g e t forbidden response has a 3xx status code
func (o *GetClusterMetadataUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata using g e t forbidden response has a 4xx status code
func (o *GetClusterMetadataUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster metadata using g e t forbidden response has a 5xx status code
func (o *GetClusterMetadataUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata using g e t forbidden response a status code equal to that given
func (o *GetClusterMetadataUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cluster metadata using g e t forbidden response
func (o *GetClusterMetadataUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClusterMetadataUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETForbidden", 403)
}

func (o *GetClusterMetadataUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETForbidden", 403)
}

func (o *GetClusterMetadataUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterMetadataUsingGETNotFound creates a GetClusterMetadataUsingGETNotFound with default headers values
func NewGetClusterMetadataUsingGETNotFound() *GetClusterMetadataUsingGETNotFound {
	return &GetClusterMetadataUsingGETNotFound{}
}

/*
GetClusterMetadataUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterMetadataUsingGETNotFound struct {
}

// IsSuccess returns true when this get cluster metadata using g e t not found response has a 2xx status code
func (o *GetClusterMetadataUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster metadata using g e t not found response has a 3xx status code
func (o *GetClusterMetadataUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata using g e t not found response has a 4xx status code
func (o *GetClusterMetadataUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster metadata using g e t not found response has a 5xx status code
func (o *GetClusterMetadataUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata using g e t not found response a status code equal to that given
func (o *GetClusterMetadataUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster metadata using g e t not found response
func (o *GetClusterMetadataUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClusterMetadataUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETNotFound", 404)
}

func (o *GetClusterMetadataUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/cluster-metadata][%d] getClusterMetadataUsingGETNotFound", 404)
}

func (o *GetClusterMetadataUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
