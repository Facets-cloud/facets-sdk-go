// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// BulkEnableDisableResourcesReader is a Reader for the BulkEnableDisableResources structure.
type BulkEnableDisableResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BulkEnableDisableResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBulkEnableDisableResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBulkEnableDisableResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBulkEnableDisableResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewBulkEnableDisableResourcesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBulkEnableDisableResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable] bulkEnableDisableResources", response, response.Code())
	}
}

// NewBulkEnableDisableResourcesOK creates a BulkEnableDisableResourcesOK with default headers values
func NewBulkEnableDisableResourcesOK() *BulkEnableDisableResourcesOK {
	return &BulkEnableDisableResourcesOK{}
}

/*
BulkEnableDisableResourcesOK describes a response with status code 200, with default header values.

OK
*/
type BulkEnableDisableResourcesOK struct {
}

// IsSuccess returns true when this bulk enable disable resources o k response has a 2xx status code
func (o *BulkEnableDisableResourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bulk enable disable resources o k response has a 3xx status code
func (o *BulkEnableDisableResourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk enable disable resources o k response has a 4xx status code
func (o *BulkEnableDisableResourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this bulk enable disable resources o k response has a 5xx status code
func (o *BulkEnableDisableResourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk enable disable resources o k response a status code equal to that given
func (o *BulkEnableDisableResourcesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the bulk enable disable resources o k response
func (o *BulkEnableDisableResourcesOK) Code() int {
	return 200
}

func (o *BulkEnableDisableResourcesOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesOK", 200)
}

func (o *BulkEnableDisableResourcesOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesOK", 200)
}

func (o *BulkEnableDisableResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewBulkEnableDisableResourcesBadRequest creates a BulkEnableDisableResourcesBadRequest with default headers values
func NewBulkEnableDisableResourcesBadRequest() *BulkEnableDisableResourcesBadRequest {
	return &BulkEnableDisableResourcesBadRequest{}
}

/*
BulkEnableDisableResourcesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BulkEnableDisableResourcesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bulk enable disable resources bad request response has a 2xx status code
func (o *BulkEnableDisableResourcesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk enable disable resources bad request response has a 3xx status code
func (o *BulkEnableDisableResourcesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk enable disable resources bad request response has a 4xx status code
func (o *BulkEnableDisableResourcesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk enable disable resources bad request response has a 5xx status code
func (o *BulkEnableDisableResourcesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk enable disable resources bad request response a status code equal to that given
func (o *BulkEnableDisableResourcesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the bulk enable disable resources bad request response
func (o *BulkEnableDisableResourcesBadRequest) Code() int {
	return 400
}

func (o *BulkEnableDisableResourcesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesBadRequest %s", 400, payload)
}

func (o *BulkEnableDisableResourcesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesBadRequest %s", 400, payload)
}

func (o *BulkEnableDisableResourcesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BulkEnableDisableResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkEnableDisableResourcesNotFound creates a BulkEnableDisableResourcesNotFound with default headers values
func NewBulkEnableDisableResourcesNotFound() *BulkEnableDisableResourcesNotFound {
	return &BulkEnableDisableResourcesNotFound{}
}

/*
BulkEnableDisableResourcesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type BulkEnableDisableResourcesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bulk enable disable resources not found response has a 2xx status code
func (o *BulkEnableDisableResourcesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk enable disable resources not found response has a 3xx status code
func (o *BulkEnableDisableResourcesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk enable disable resources not found response has a 4xx status code
func (o *BulkEnableDisableResourcesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk enable disable resources not found response has a 5xx status code
func (o *BulkEnableDisableResourcesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk enable disable resources not found response a status code equal to that given
func (o *BulkEnableDisableResourcesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the bulk enable disable resources not found response
func (o *BulkEnableDisableResourcesNotFound) Code() int {
	return 404
}

func (o *BulkEnableDisableResourcesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesNotFound %s", 404, payload)
}

func (o *BulkEnableDisableResourcesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesNotFound %s", 404, payload)
}

func (o *BulkEnableDisableResourcesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BulkEnableDisableResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkEnableDisableResourcesMethodNotAllowed creates a BulkEnableDisableResourcesMethodNotAllowed with default headers values
func NewBulkEnableDisableResourcesMethodNotAllowed() *BulkEnableDisableResourcesMethodNotAllowed {
	return &BulkEnableDisableResourcesMethodNotAllowed{}
}

/*
BulkEnableDisableResourcesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type BulkEnableDisableResourcesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bulk enable disable resources method not allowed response has a 2xx status code
func (o *BulkEnableDisableResourcesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk enable disable resources method not allowed response has a 3xx status code
func (o *BulkEnableDisableResourcesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk enable disable resources method not allowed response has a 4xx status code
func (o *BulkEnableDisableResourcesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this bulk enable disable resources method not allowed response has a 5xx status code
func (o *BulkEnableDisableResourcesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this bulk enable disable resources method not allowed response a status code equal to that given
func (o *BulkEnableDisableResourcesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the bulk enable disable resources method not allowed response
func (o *BulkEnableDisableResourcesMethodNotAllowed) Code() int {
	return 405
}

func (o *BulkEnableDisableResourcesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesMethodNotAllowed %s", 405, payload)
}

func (o *BulkEnableDisableResourcesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesMethodNotAllowed %s", 405, payload)
}

func (o *BulkEnableDisableResourcesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BulkEnableDisableResourcesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBulkEnableDisableResourcesInternalServerError creates a BulkEnableDisableResourcesInternalServerError with default headers values
func NewBulkEnableDisableResourcesInternalServerError() *BulkEnableDisableResourcesInternalServerError {
	return &BulkEnableDisableResourcesInternalServerError{}
}

/*
BulkEnableDisableResourcesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BulkEnableDisableResourcesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bulk enable disable resources internal server error response has a 2xx status code
func (o *BulkEnableDisableResourcesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bulk enable disable resources internal server error response has a 3xx status code
func (o *BulkEnableDisableResourcesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bulk enable disable resources internal server error response has a 4xx status code
func (o *BulkEnableDisableResourcesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this bulk enable disable resources internal server error response has a 5xx status code
func (o *BulkEnableDisableResourcesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this bulk enable disable resources internal server error response a status code equal to that given
func (o *BulkEnableDisableResourcesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the bulk enable disable resources internal server error response
func (o *BulkEnableDisableResourcesInternalServerError) Code() int {
	return 500
}

func (o *BulkEnableDisableResourcesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesInternalServerError %s", 500, payload)
}

func (o *BulkEnableDisableResourcesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/resource-enable-disable][%d] bulkEnableDisableResourcesInternalServerError %s", 500, payload)
}

func (o *BulkEnableDisableResourcesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BulkEnableDisableResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
