// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterTaskUsingGETReader is a Reader for the GetClusterTaskUsingGET structure.
type GetClusterTaskUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterTaskUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterTaskUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterTaskUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterTaskUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterTaskUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask] getClusterTaskUsingGET", response, response.Code())
	}
}

// NewGetClusterTaskUsingGETOK creates a GetClusterTaskUsingGETOK with default headers values
func NewGetClusterTaskUsingGETOK() *GetClusterTaskUsingGETOK {
	return &GetClusterTaskUsingGETOK{}
}

/*
GetClusterTaskUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterTaskUsingGETOK struct {
	Payload *models.ClusterTask
}

// IsSuccess returns true when this get cluster task using g e t o k response has a 2xx status code
func (o *GetClusterTaskUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster task using g e t o k response has a 3xx status code
func (o *GetClusterTaskUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster task using g e t o k response has a 4xx status code
func (o *GetClusterTaskUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster task using g e t o k response has a 5xx status code
func (o *GetClusterTaskUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster task using g e t o k response a status code equal to that given
func (o *GetClusterTaskUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster task using g e t o k response
func (o *GetClusterTaskUsingGETOK) Code() int {
	return 200
}

func (o *GetClusterTaskUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETOK %s", 200, payload)
}

func (o *GetClusterTaskUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETOK %s", 200, payload)
}

func (o *GetClusterTaskUsingGETOK) GetPayload() *models.ClusterTask {
	return o.Payload
}

func (o *GetClusterTaskUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ClusterTask)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterTaskUsingGETUnauthorized creates a GetClusterTaskUsingGETUnauthorized with default headers values
func NewGetClusterTaskUsingGETUnauthorized() *GetClusterTaskUsingGETUnauthorized {
	return &GetClusterTaskUsingGETUnauthorized{}
}

/*
GetClusterTaskUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClusterTaskUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get cluster task using g e t unauthorized response has a 2xx status code
func (o *GetClusterTaskUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster task using g e t unauthorized response has a 3xx status code
func (o *GetClusterTaskUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster task using g e t unauthorized response has a 4xx status code
func (o *GetClusterTaskUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster task using g e t unauthorized response has a 5xx status code
func (o *GetClusterTaskUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster task using g e t unauthorized response a status code equal to that given
func (o *GetClusterTaskUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cluster task using g e t unauthorized response
func (o *GetClusterTaskUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClusterTaskUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETUnauthorized", 401)
}

func (o *GetClusterTaskUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETUnauthorized", 401)
}

func (o *GetClusterTaskUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterTaskUsingGETForbidden creates a GetClusterTaskUsingGETForbidden with default headers values
func NewGetClusterTaskUsingGETForbidden() *GetClusterTaskUsingGETForbidden {
	return &GetClusterTaskUsingGETForbidden{}
}

/*
GetClusterTaskUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClusterTaskUsingGETForbidden struct {
}

// IsSuccess returns true when this get cluster task using g e t forbidden response has a 2xx status code
func (o *GetClusterTaskUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster task using g e t forbidden response has a 3xx status code
func (o *GetClusterTaskUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster task using g e t forbidden response has a 4xx status code
func (o *GetClusterTaskUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster task using g e t forbidden response has a 5xx status code
func (o *GetClusterTaskUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster task using g e t forbidden response a status code equal to that given
func (o *GetClusterTaskUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cluster task using g e t forbidden response
func (o *GetClusterTaskUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClusterTaskUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETForbidden", 403)
}

func (o *GetClusterTaskUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETForbidden", 403)
}

func (o *GetClusterTaskUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterTaskUsingGETNotFound creates a GetClusterTaskUsingGETNotFound with default headers values
func NewGetClusterTaskUsingGETNotFound() *GetClusterTaskUsingGETNotFound {
	return &GetClusterTaskUsingGETNotFound{}
}

/*
GetClusterTaskUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterTaskUsingGETNotFound struct {
}

// IsSuccess returns true when this get cluster task using g e t not found response has a 2xx status code
func (o *GetClusterTaskUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster task using g e t not found response has a 3xx status code
func (o *GetClusterTaskUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster task using g e t not found response has a 4xx status code
func (o *GetClusterTaskUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster task using g e t not found response has a 5xx status code
func (o *GetClusterTaskUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster task using g e t not found response a status code equal to that given
func (o *GetClusterTaskUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster task using g e t not found response
func (o *GetClusterTaskUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClusterTaskUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETNotFound", 404)
}

func (o *GetClusterTaskUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/clusterTask][%d] getClusterTaskUsingGETNotFound", 404)
}

func (o *GetClusterTaskUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
