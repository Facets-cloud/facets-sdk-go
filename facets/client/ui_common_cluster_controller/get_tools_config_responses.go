// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetToolsConfigReader is a Reader for the GetToolsConfig structure.
type GetToolsConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetToolsConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetToolsConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetToolsConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetToolsConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetToolsConfigMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetToolsConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/tools-config] getToolsConfig", response, response.Code())
	}
}

// NewGetToolsConfigOK creates a GetToolsConfigOK with default headers values
func NewGetToolsConfigOK() *GetToolsConfigOK {
	return &GetToolsConfigOK{}
}

/*
GetToolsConfigOK describes a response with status code 200, with default header values.

OK
*/
type GetToolsConfigOK struct {
	Payload *models.ToolsConfig
}

// IsSuccess returns true when this get tools config o k response has a 2xx status code
func (o *GetToolsConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tools config o k response has a 3xx status code
func (o *GetToolsConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tools config o k response has a 4xx status code
func (o *GetToolsConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tools config o k response has a 5xx status code
func (o *GetToolsConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tools config o k response a status code equal to that given
func (o *GetToolsConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tools config o k response
func (o *GetToolsConfigOK) Code() int {
	return 200
}

func (o *GetToolsConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigOK %s", 200, payload)
}

func (o *GetToolsConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigOK %s", 200, payload)
}

func (o *GetToolsConfigOK) GetPayload() *models.ToolsConfig {
	return o.Payload
}

func (o *GetToolsConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ToolsConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetToolsConfigBadRequest creates a GetToolsConfigBadRequest with default headers values
func NewGetToolsConfigBadRequest() *GetToolsConfigBadRequest {
	return &GetToolsConfigBadRequest{}
}

/*
GetToolsConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetToolsConfigBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tools config bad request response has a 2xx status code
func (o *GetToolsConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tools config bad request response has a 3xx status code
func (o *GetToolsConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tools config bad request response has a 4xx status code
func (o *GetToolsConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tools config bad request response has a 5xx status code
func (o *GetToolsConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tools config bad request response a status code equal to that given
func (o *GetToolsConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get tools config bad request response
func (o *GetToolsConfigBadRequest) Code() int {
	return 400
}

func (o *GetToolsConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigBadRequest %s", 400, payload)
}

func (o *GetToolsConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigBadRequest %s", 400, payload)
}

func (o *GetToolsConfigBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetToolsConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetToolsConfigNotFound creates a GetToolsConfigNotFound with default headers values
func NewGetToolsConfigNotFound() *GetToolsConfigNotFound {
	return &GetToolsConfigNotFound{}
}

/*
GetToolsConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetToolsConfigNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tools config not found response has a 2xx status code
func (o *GetToolsConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tools config not found response has a 3xx status code
func (o *GetToolsConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tools config not found response has a 4xx status code
func (o *GetToolsConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tools config not found response has a 5xx status code
func (o *GetToolsConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tools config not found response a status code equal to that given
func (o *GetToolsConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tools config not found response
func (o *GetToolsConfigNotFound) Code() int {
	return 404
}

func (o *GetToolsConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigNotFound %s", 404, payload)
}

func (o *GetToolsConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigNotFound %s", 404, payload)
}

func (o *GetToolsConfigNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetToolsConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetToolsConfigMethodNotAllowed creates a GetToolsConfigMethodNotAllowed with default headers values
func NewGetToolsConfigMethodNotAllowed() *GetToolsConfigMethodNotAllowed {
	return &GetToolsConfigMethodNotAllowed{}
}

/*
GetToolsConfigMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetToolsConfigMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tools config method not allowed response has a 2xx status code
func (o *GetToolsConfigMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tools config method not allowed response has a 3xx status code
func (o *GetToolsConfigMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tools config method not allowed response has a 4xx status code
func (o *GetToolsConfigMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tools config method not allowed response has a 5xx status code
func (o *GetToolsConfigMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get tools config method not allowed response a status code equal to that given
func (o *GetToolsConfigMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get tools config method not allowed response
func (o *GetToolsConfigMethodNotAllowed) Code() int {
	return 405
}

func (o *GetToolsConfigMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigMethodNotAllowed %s", 405, payload)
}

func (o *GetToolsConfigMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigMethodNotAllowed %s", 405, payload)
}

func (o *GetToolsConfigMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetToolsConfigMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetToolsConfigInternalServerError creates a GetToolsConfigInternalServerError with default headers values
func NewGetToolsConfigInternalServerError() *GetToolsConfigInternalServerError {
	return &GetToolsConfigInternalServerError{}
}

/*
GetToolsConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetToolsConfigInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tools config internal server error response has a 2xx status code
func (o *GetToolsConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tools config internal server error response has a 3xx status code
func (o *GetToolsConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tools config internal server error response has a 4xx status code
func (o *GetToolsConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tools config internal server error response has a 5xx status code
func (o *GetToolsConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tools config internal server error response a status code equal to that given
func (o *GetToolsConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get tools config internal server error response
func (o *GetToolsConfigInternalServerError) Code() int {
	return 500
}

func (o *GetToolsConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigInternalServerError %s", 500, payload)
}

func (o *GetToolsConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/tools-config][%d] getToolsConfigInternalServerError %s", 500, payload)
}

func (o *GetToolsConfigInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetToolsConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
