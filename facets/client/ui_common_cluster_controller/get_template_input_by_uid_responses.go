// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTemplateInputByUIDReader is a Reader for the GetTemplateInputByUID structure.
type GetTemplateInputByUIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTemplateInputByUIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTemplateInputByUIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTemplateInputByUIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTemplateInputByUIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetTemplateInputByUIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTemplateInputByUIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}] getTemplateInputByUid", response, response.Code())
	}
}

// NewGetTemplateInputByUIDOK creates a GetTemplateInputByUIDOK with default headers values
func NewGetTemplateInputByUIDOK() *GetTemplateInputByUIDOK {
	return &GetTemplateInputByUIDOK{}
}

/*
GetTemplateInputByUIDOK describes a response with status code 200, with default header values.

OK
*/
type GetTemplateInputByUIDOK struct {
	Payload *models.StackTemplateInput
}

// IsSuccess returns true when this get template input by Uid o k response has a 2xx status code
func (o *GetTemplateInputByUIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get template input by Uid o k response has a 3xx status code
func (o *GetTemplateInputByUIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template input by Uid o k response has a 4xx status code
func (o *GetTemplateInputByUIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get template input by Uid o k response has a 5xx status code
func (o *GetTemplateInputByUIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get template input by Uid o k response a status code equal to that given
func (o *GetTemplateInputByUIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get template input by Uid o k response
func (o *GetTemplateInputByUIDOK) Code() int {
	return 200
}

func (o *GetTemplateInputByUIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidOK %s", 200, payload)
}

func (o *GetTemplateInputByUIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidOK %s", 200, payload)
}

func (o *GetTemplateInputByUIDOK) GetPayload() *models.StackTemplateInput {
	return o.Payload
}

func (o *GetTemplateInputByUIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StackTemplateInput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateInputByUIDBadRequest creates a GetTemplateInputByUIDBadRequest with default headers values
func NewGetTemplateInputByUIDBadRequest() *GetTemplateInputByUIDBadRequest {
	return &GetTemplateInputByUIDBadRequest{}
}

/*
GetTemplateInputByUIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTemplateInputByUIDBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get template input by Uid bad request response has a 2xx status code
func (o *GetTemplateInputByUIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template input by Uid bad request response has a 3xx status code
func (o *GetTemplateInputByUIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template input by Uid bad request response has a 4xx status code
func (o *GetTemplateInputByUIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template input by Uid bad request response has a 5xx status code
func (o *GetTemplateInputByUIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get template input by Uid bad request response a status code equal to that given
func (o *GetTemplateInputByUIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get template input by Uid bad request response
func (o *GetTemplateInputByUIDBadRequest) Code() int {
	return 400
}

func (o *GetTemplateInputByUIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidBadRequest %s", 400, payload)
}

func (o *GetTemplateInputByUIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidBadRequest %s", 400, payload)
}

func (o *GetTemplateInputByUIDBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTemplateInputByUIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateInputByUIDNotFound creates a GetTemplateInputByUIDNotFound with default headers values
func NewGetTemplateInputByUIDNotFound() *GetTemplateInputByUIDNotFound {
	return &GetTemplateInputByUIDNotFound{}
}

/*
GetTemplateInputByUIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTemplateInputByUIDNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get template input by Uid not found response has a 2xx status code
func (o *GetTemplateInputByUIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template input by Uid not found response has a 3xx status code
func (o *GetTemplateInputByUIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template input by Uid not found response has a 4xx status code
func (o *GetTemplateInputByUIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template input by Uid not found response has a 5xx status code
func (o *GetTemplateInputByUIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get template input by Uid not found response a status code equal to that given
func (o *GetTemplateInputByUIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get template input by Uid not found response
func (o *GetTemplateInputByUIDNotFound) Code() int {
	return 404
}

func (o *GetTemplateInputByUIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidNotFound %s", 404, payload)
}

func (o *GetTemplateInputByUIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidNotFound %s", 404, payload)
}

func (o *GetTemplateInputByUIDNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTemplateInputByUIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateInputByUIDMethodNotAllowed creates a GetTemplateInputByUIDMethodNotAllowed with default headers values
func NewGetTemplateInputByUIDMethodNotAllowed() *GetTemplateInputByUIDMethodNotAllowed {
	return &GetTemplateInputByUIDMethodNotAllowed{}
}

/*
GetTemplateInputByUIDMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetTemplateInputByUIDMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get template input by Uid method not allowed response has a 2xx status code
func (o *GetTemplateInputByUIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template input by Uid method not allowed response has a 3xx status code
func (o *GetTemplateInputByUIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template input by Uid method not allowed response has a 4xx status code
func (o *GetTemplateInputByUIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get template input by Uid method not allowed response has a 5xx status code
func (o *GetTemplateInputByUIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get template input by Uid method not allowed response a status code equal to that given
func (o *GetTemplateInputByUIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get template input by Uid method not allowed response
func (o *GetTemplateInputByUIDMethodNotAllowed) Code() int {
	return 405
}

func (o *GetTemplateInputByUIDMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidMethodNotAllowed %s", 405, payload)
}

func (o *GetTemplateInputByUIDMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidMethodNotAllowed %s", 405, payload)
}

func (o *GetTemplateInputByUIDMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTemplateInputByUIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTemplateInputByUIDInternalServerError creates a GetTemplateInputByUIDInternalServerError with default headers values
func NewGetTemplateInputByUIDInternalServerError() *GetTemplateInputByUIDInternalServerError {
	return &GetTemplateInputByUIDInternalServerError{}
}

/*
GetTemplateInputByUIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTemplateInputByUIDInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get template input by Uid internal server error response has a 2xx status code
func (o *GetTemplateInputByUIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get template input by Uid internal server error response has a 3xx status code
func (o *GetTemplateInputByUIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get template input by Uid internal server error response has a 4xx status code
func (o *GetTemplateInputByUIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get template input by Uid internal server error response has a 5xx status code
func (o *GetTemplateInputByUIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get template input by Uid internal server error response a status code equal to that given
func (o *GetTemplateInputByUIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get template input by Uid internal server error response
func (o *GetTemplateInputByUIDInternalServerError) Code() int {
	return 500
}

func (o *GetTemplateInputByUIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidInternalServerError %s", 500, payload)
}

func (o *GetTemplateInputByUIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/templateInputs/{inputType}/items/{uid}][%d] getTemplateInputByUidInternalServerError %s", 500, payload)
}

func (o *GetTemplateInputByUIDInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTemplateInputByUIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
