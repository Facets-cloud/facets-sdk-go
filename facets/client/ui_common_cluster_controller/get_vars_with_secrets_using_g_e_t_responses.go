// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVarsWithSecretsUsingGETReader is a Reader for the GetVarsWithSecretsUsingGET structure.
type GetVarsWithSecretsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVarsWithSecretsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVarsWithSecretsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVarsWithSecretsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVarsWithSecretsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVarsWithSecretsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets] getVarsWithSecretsUsingGET", response, response.Code())
	}
}

// NewGetVarsWithSecretsUsingGETOK creates a GetVarsWithSecretsUsingGETOK with default headers values
func NewGetVarsWithSecretsUsingGETOK() *GetVarsWithSecretsUsingGETOK {
	return &GetVarsWithSecretsUsingGETOK{}
}

/*
GetVarsWithSecretsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetVarsWithSecretsUsingGETOK struct {
	Payload *models.AbstractCluster
}

// IsSuccess returns true when this get vars with secrets using g e t o k response has a 2xx status code
func (o *GetVarsWithSecretsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vars with secrets using g e t o k response has a 3xx status code
func (o *GetVarsWithSecretsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets using g e t o k response has a 4xx status code
func (o *GetVarsWithSecretsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vars with secrets using g e t o k response has a 5xx status code
func (o *GetVarsWithSecretsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets using g e t o k response a status code equal to that given
func (o *GetVarsWithSecretsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vars with secrets using g e t o k response
func (o *GetVarsWithSecretsUsingGETOK) Code() int {
	return 200
}

func (o *GetVarsWithSecretsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETOK %s", 200, payload)
}

func (o *GetVarsWithSecretsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETOK %s", 200, payload)
}

func (o *GetVarsWithSecretsUsingGETOK) GetPayload() *models.AbstractCluster {
	return o.Payload
}

func (o *GetVarsWithSecretsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVarsWithSecretsUsingGETUnauthorized creates a GetVarsWithSecretsUsingGETUnauthorized with default headers values
func NewGetVarsWithSecretsUsingGETUnauthorized() *GetVarsWithSecretsUsingGETUnauthorized {
	return &GetVarsWithSecretsUsingGETUnauthorized{}
}

/*
GetVarsWithSecretsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetVarsWithSecretsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get vars with secrets using g e t unauthorized response has a 2xx status code
func (o *GetVarsWithSecretsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with secrets using g e t unauthorized response has a 3xx status code
func (o *GetVarsWithSecretsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets using g e t unauthorized response has a 4xx status code
func (o *GetVarsWithSecretsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with secrets using g e t unauthorized response has a 5xx status code
func (o *GetVarsWithSecretsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets using g e t unauthorized response a status code equal to that given
func (o *GetVarsWithSecretsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get vars with secrets using g e t unauthorized response
func (o *GetVarsWithSecretsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetVarsWithSecretsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETUnauthorized", 401)
}

func (o *GetVarsWithSecretsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETUnauthorized", 401)
}

func (o *GetVarsWithSecretsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVarsWithSecretsUsingGETForbidden creates a GetVarsWithSecretsUsingGETForbidden with default headers values
func NewGetVarsWithSecretsUsingGETForbidden() *GetVarsWithSecretsUsingGETForbidden {
	return &GetVarsWithSecretsUsingGETForbidden{}
}

/*
GetVarsWithSecretsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVarsWithSecretsUsingGETForbidden struct {
}

// IsSuccess returns true when this get vars with secrets using g e t forbidden response has a 2xx status code
func (o *GetVarsWithSecretsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with secrets using g e t forbidden response has a 3xx status code
func (o *GetVarsWithSecretsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets using g e t forbidden response has a 4xx status code
func (o *GetVarsWithSecretsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with secrets using g e t forbidden response has a 5xx status code
func (o *GetVarsWithSecretsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets using g e t forbidden response a status code equal to that given
func (o *GetVarsWithSecretsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get vars with secrets using g e t forbidden response
func (o *GetVarsWithSecretsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetVarsWithSecretsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETForbidden", 403)
}

func (o *GetVarsWithSecretsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETForbidden", 403)
}

func (o *GetVarsWithSecretsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVarsWithSecretsUsingGETNotFound creates a GetVarsWithSecretsUsingGETNotFound with default headers values
func NewGetVarsWithSecretsUsingGETNotFound() *GetVarsWithSecretsUsingGETNotFound {
	return &GetVarsWithSecretsUsingGETNotFound{}
}

/*
GetVarsWithSecretsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVarsWithSecretsUsingGETNotFound struct {
}

// IsSuccess returns true when this get vars with secrets using g e t not found response has a 2xx status code
func (o *GetVarsWithSecretsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vars with secrets using g e t not found response has a 3xx status code
func (o *GetVarsWithSecretsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vars with secrets using g e t not found response has a 4xx status code
func (o *GetVarsWithSecretsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vars with secrets using g e t not found response has a 5xx status code
func (o *GetVarsWithSecretsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vars with secrets using g e t not found response a status code equal to that given
func (o *GetVarsWithSecretsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vars with secrets using g e t not found response
func (o *GetVarsWithSecretsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetVarsWithSecretsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETNotFound", 404)
}

func (o *GetVarsWithSecretsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/vars-with-secrets][%d] getVarsWithSecretsUsingGETNotFound", 404)
}

func (o *GetVarsWithSecretsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
