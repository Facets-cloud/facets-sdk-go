// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAllTemplateInputsUsingGETParams creates a new GetAllTemplateInputsUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAllTemplateInputsUsingGETParams() *GetAllTemplateInputsUsingGETParams {
	return &GetAllTemplateInputsUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllTemplateInputsUsingGETParamsWithTimeout creates a new GetAllTemplateInputsUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetAllTemplateInputsUsingGETParamsWithTimeout(timeout time.Duration) *GetAllTemplateInputsUsingGETParams {
	return &GetAllTemplateInputsUsingGETParams{
		timeout: timeout,
	}
}

// NewGetAllTemplateInputsUsingGETParamsWithContext creates a new GetAllTemplateInputsUsingGETParams object
// with the ability to set a context for a request.
func NewGetAllTemplateInputsUsingGETParamsWithContext(ctx context.Context) *GetAllTemplateInputsUsingGETParams {
	return &GetAllTemplateInputsUsingGETParams{
		Context: ctx,
	}
}

// NewGetAllTemplateInputsUsingGETParamsWithHTTPClient creates a new GetAllTemplateInputsUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAllTemplateInputsUsingGETParamsWithHTTPClient(client *http.Client) *GetAllTemplateInputsUsingGETParams {
	return &GetAllTemplateInputsUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetAllTemplateInputsUsingGETParams contains all the parameters to send to the API endpoint

	for the get all template inputs using g e t operation.

	Typically these are written to a http.Request.
*/
type GetAllTemplateInputsUsingGETParams struct {

	/* ClusterID.

	   clusterId
	*/
	ClusterID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get all template inputs using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllTemplateInputsUsingGETParams) WithDefaults() *GetAllTemplateInputsUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get all template inputs using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllTemplateInputsUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) WithTimeout(timeout time.Duration) *GetAllTemplateInputsUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) WithContext(ctx context.Context) *GetAllTemplateInputsUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) WithHTTPClient(client *http.Client) *GetAllTemplateInputsUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) WithClusterID(clusterID string) *GetAllTemplateInputsUsingGETParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the get all template inputs using g e t params
func (o *GetAllTemplateInputsUsingGETParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllTemplateInputsUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
