// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateClusterBranchReader is a Reader for the UpdateClusterBranch structure.
type UpdateClusterBranchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterBranchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterBranchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateClusterBranchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterBranchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateClusterBranchMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateClusterBranchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PATCH /cc-ui/v1/clusters/{clusterId}/branch] updateClusterBranch", response, response.Code())
	}
}

// NewUpdateClusterBranchOK creates a UpdateClusterBranchOK with default headers values
func NewUpdateClusterBranchOK() *UpdateClusterBranchOK {
	return &UpdateClusterBranchOK{}
}

/*
UpdateClusterBranchOK describes a response with status code 200, with default header values.

OK
*/
type UpdateClusterBranchOK struct {
	Payload *models.AbstractCluster
}

// IsSuccess returns true when this update cluster branch o k response has a 2xx status code
func (o *UpdateClusterBranchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster branch o k response has a 3xx status code
func (o *UpdateClusterBranchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster branch o k response has a 4xx status code
func (o *UpdateClusterBranchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster branch o k response has a 5xx status code
func (o *UpdateClusterBranchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster branch o k response a status code equal to that given
func (o *UpdateClusterBranchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cluster branch o k response
func (o *UpdateClusterBranchOK) Code() int {
	return 200
}

func (o *UpdateClusterBranchOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchOK %s", 200, payload)
}

func (o *UpdateClusterBranchOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchOK %s", 200, payload)
}

func (o *UpdateClusterBranchOK) GetPayload() *models.AbstractCluster {
	return o.Payload
}

func (o *UpdateClusterBranchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterBranchBadRequest creates a UpdateClusterBranchBadRequest with default headers values
func NewUpdateClusterBranchBadRequest() *UpdateClusterBranchBadRequest {
	return &UpdateClusterBranchBadRequest{}
}

/*
UpdateClusterBranchBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateClusterBranchBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster branch bad request response has a 2xx status code
func (o *UpdateClusterBranchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster branch bad request response has a 3xx status code
func (o *UpdateClusterBranchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster branch bad request response has a 4xx status code
func (o *UpdateClusterBranchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster branch bad request response has a 5xx status code
func (o *UpdateClusterBranchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster branch bad request response a status code equal to that given
func (o *UpdateClusterBranchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update cluster branch bad request response
func (o *UpdateClusterBranchBadRequest) Code() int {
	return 400
}

func (o *UpdateClusterBranchBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchBadRequest %s", 400, payload)
}

func (o *UpdateClusterBranchBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchBadRequest %s", 400, payload)
}

func (o *UpdateClusterBranchBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterBranchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterBranchNotFound creates a UpdateClusterBranchNotFound with default headers values
func NewUpdateClusterBranchNotFound() *UpdateClusterBranchNotFound {
	return &UpdateClusterBranchNotFound{}
}

/*
UpdateClusterBranchNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateClusterBranchNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster branch not found response has a 2xx status code
func (o *UpdateClusterBranchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster branch not found response has a 3xx status code
func (o *UpdateClusterBranchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster branch not found response has a 4xx status code
func (o *UpdateClusterBranchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster branch not found response has a 5xx status code
func (o *UpdateClusterBranchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster branch not found response a status code equal to that given
func (o *UpdateClusterBranchNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cluster branch not found response
func (o *UpdateClusterBranchNotFound) Code() int {
	return 404
}

func (o *UpdateClusterBranchNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchNotFound %s", 404, payload)
}

func (o *UpdateClusterBranchNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchNotFound %s", 404, payload)
}

func (o *UpdateClusterBranchNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterBranchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterBranchMethodNotAllowed creates a UpdateClusterBranchMethodNotAllowed with default headers values
func NewUpdateClusterBranchMethodNotAllowed() *UpdateClusterBranchMethodNotAllowed {
	return &UpdateClusterBranchMethodNotAllowed{}
}

/*
UpdateClusterBranchMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateClusterBranchMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster branch method not allowed response has a 2xx status code
func (o *UpdateClusterBranchMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster branch method not allowed response has a 3xx status code
func (o *UpdateClusterBranchMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster branch method not allowed response has a 4xx status code
func (o *UpdateClusterBranchMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster branch method not allowed response has a 5xx status code
func (o *UpdateClusterBranchMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster branch method not allowed response a status code equal to that given
func (o *UpdateClusterBranchMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update cluster branch method not allowed response
func (o *UpdateClusterBranchMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateClusterBranchMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchMethodNotAllowed %s", 405, payload)
}

func (o *UpdateClusterBranchMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchMethodNotAllowed %s", 405, payload)
}

func (o *UpdateClusterBranchMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterBranchMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterBranchInternalServerError creates a UpdateClusterBranchInternalServerError with default headers values
func NewUpdateClusterBranchInternalServerError() *UpdateClusterBranchInternalServerError {
	return &UpdateClusterBranchInternalServerError{}
}

/*
UpdateClusterBranchInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateClusterBranchInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update cluster branch internal server error response has a 2xx status code
func (o *UpdateClusterBranchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster branch internal server error response has a 3xx status code
func (o *UpdateClusterBranchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster branch internal server error response has a 4xx status code
func (o *UpdateClusterBranchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster branch internal server error response has a 5xx status code
func (o *UpdateClusterBranchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update cluster branch internal server error response a status code equal to that given
func (o *UpdateClusterBranchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update cluster branch internal server error response
func (o *UpdateClusterBranchInternalServerError) Code() int {
	return 500
}

func (o *UpdateClusterBranchInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchInternalServerError %s", 500, payload)
}

func (o *UpdateClusterBranchInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /cc-ui/v1/clusters/{clusterId}/branch][%d] updateClusterBranchInternalServerError %s", 500, payload)
}

func (o *UpdateClusterBranchInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateClusterBranchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
