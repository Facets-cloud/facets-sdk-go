// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AttachImageUsingPOSTReader is a Reader for the AttachImageUsingPOST structure.
type AttachImageUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttachImageUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAttachImageUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAttachImageUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAttachImageUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAttachImageUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAttachImageUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/attach-image] attachImageUsingPOST", response, response.Code())
	}
}

// NewAttachImageUsingPOSTOK creates a AttachImageUsingPOSTOK with default headers values
func NewAttachImageUsingPOSTOK() *AttachImageUsingPOSTOK {
	return &AttachImageUsingPOSTOK{}
}

/*
AttachImageUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type AttachImageUsingPOSTOK struct {
}

// IsSuccess returns true when this attach image using p o s t o k response has a 2xx status code
func (o *AttachImageUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this attach image using p o s t o k response has a 3xx status code
func (o *AttachImageUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image using p o s t o k response has a 4xx status code
func (o *AttachImageUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this attach image using p o s t o k response has a 5xx status code
func (o *AttachImageUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image using p o s t o k response a status code equal to that given
func (o *AttachImageUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the attach image using p o s t o k response
func (o *AttachImageUsingPOSTOK) Code() int {
	return 200
}

func (o *AttachImageUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTOK", 200)
}

func (o *AttachImageUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTOK", 200)
}

func (o *AttachImageUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageUsingPOSTCreated creates a AttachImageUsingPOSTCreated with default headers values
func NewAttachImageUsingPOSTCreated() *AttachImageUsingPOSTCreated {
	return &AttachImageUsingPOSTCreated{}
}

/*
AttachImageUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AttachImageUsingPOSTCreated struct {
}

// IsSuccess returns true when this attach image using p o s t created response has a 2xx status code
func (o *AttachImageUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this attach image using p o s t created response has a 3xx status code
func (o *AttachImageUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image using p o s t created response has a 4xx status code
func (o *AttachImageUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this attach image using p o s t created response has a 5xx status code
func (o *AttachImageUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image using p o s t created response a status code equal to that given
func (o *AttachImageUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the attach image using p o s t created response
func (o *AttachImageUsingPOSTCreated) Code() int {
	return 201
}

func (o *AttachImageUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTCreated", 201)
}

func (o *AttachImageUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTCreated", 201)
}

func (o *AttachImageUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageUsingPOSTUnauthorized creates a AttachImageUsingPOSTUnauthorized with default headers values
func NewAttachImageUsingPOSTUnauthorized() *AttachImageUsingPOSTUnauthorized {
	return &AttachImageUsingPOSTUnauthorized{}
}

/*
AttachImageUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AttachImageUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this attach image using p o s t unauthorized response has a 2xx status code
func (o *AttachImageUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image using p o s t unauthorized response has a 3xx status code
func (o *AttachImageUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image using p o s t unauthorized response has a 4xx status code
func (o *AttachImageUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image using p o s t unauthorized response has a 5xx status code
func (o *AttachImageUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image using p o s t unauthorized response a status code equal to that given
func (o *AttachImageUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the attach image using p o s t unauthorized response
func (o *AttachImageUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AttachImageUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTUnauthorized", 401)
}

func (o *AttachImageUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTUnauthorized", 401)
}

func (o *AttachImageUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageUsingPOSTForbidden creates a AttachImageUsingPOSTForbidden with default headers values
func NewAttachImageUsingPOSTForbidden() *AttachImageUsingPOSTForbidden {
	return &AttachImageUsingPOSTForbidden{}
}

/*
AttachImageUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AttachImageUsingPOSTForbidden struct {
}

// IsSuccess returns true when this attach image using p o s t forbidden response has a 2xx status code
func (o *AttachImageUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image using p o s t forbidden response has a 3xx status code
func (o *AttachImageUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image using p o s t forbidden response has a 4xx status code
func (o *AttachImageUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image using p o s t forbidden response has a 5xx status code
func (o *AttachImageUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image using p o s t forbidden response a status code equal to that given
func (o *AttachImageUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the attach image using p o s t forbidden response
func (o *AttachImageUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AttachImageUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTForbidden", 403)
}

func (o *AttachImageUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTForbidden", 403)
}

func (o *AttachImageUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageUsingPOSTNotFound creates a AttachImageUsingPOSTNotFound with default headers values
func NewAttachImageUsingPOSTNotFound() *AttachImageUsingPOSTNotFound {
	return &AttachImageUsingPOSTNotFound{}
}

/*
AttachImageUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AttachImageUsingPOSTNotFound struct {
}

// IsSuccess returns true when this attach image using p o s t not found response has a 2xx status code
func (o *AttachImageUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image using p o s t not found response has a 3xx status code
func (o *AttachImageUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image using p o s t not found response has a 4xx status code
func (o *AttachImageUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image using p o s t not found response has a 5xx status code
func (o *AttachImageUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image using p o s t not found response a status code equal to that given
func (o *AttachImageUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the attach image using p o s t not found response
func (o *AttachImageUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AttachImageUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTNotFound", 404)
}

func (o *AttachImageUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/attach-image][%d] attachImageUsingPOSTNotFound", 404)
}

func (o *AttachImageUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
