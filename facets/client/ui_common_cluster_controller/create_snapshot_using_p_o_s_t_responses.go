// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateSnapshotUsingPOSTReader is a Reader for the CreateSnapshotUsingPOST structure.
type CreateSnapshotUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSnapshotUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSnapshotUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateSnapshotUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateSnapshotUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSnapshotUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSnapshotUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}] createSnapshotUsingPOST", response, response.Code())
	}
}

// NewCreateSnapshotUsingPOSTOK creates a CreateSnapshotUsingPOSTOK with default headers values
func NewCreateSnapshotUsingPOSTOK() *CreateSnapshotUsingPOSTOK {
	return &CreateSnapshotUsingPOSTOK{}
}

/*
CreateSnapshotUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateSnapshotUsingPOSTOK struct {
	Payload bool
}

// IsSuccess returns true when this create snapshot using p o s t o k response has a 2xx status code
func (o *CreateSnapshotUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create snapshot using p o s t o k response has a 3xx status code
func (o *CreateSnapshotUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create snapshot using p o s t o k response has a 4xx status code
func (o *CreateSnapshotUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create snapshot using p o s t o k response has a 5xx status code
func (o *CreateSnapshotUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create snapshot using p o s t o k response a status code equal to that given
func (o *CreateSnapshotUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create snapshot using p o s t o k response
func (o *CreateSnapshotUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateSnapshotUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTOK %s", 200, payload)
}

func (o *CreateSnapshotUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTOK %s", 200, payload)
}

func (o *CreateSnapshotUsingPOSTOK) GetPayload() bool {
	return o.Payload
}

func (o *CreateSnapshotUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSnapshotUsingPOSTCreated creates a CreateSnapshotUsingPOSTCreated with default headers values
func NewCreateSnapshotUsingPOSTCreated() *CreateSnapshotUsingPOSTCreated {
	return &CreateSnapshotUsingPOSTCreated{}
}

/*
CreateSnapshotUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateSnapshotUsingPOSTCreated struct {
}

// IsSuccess returns true when this create snapshot using p o s t created response has a 2xx status code
func (o *CreateSnapshotUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create snapshot using p o s t created response has a 3xx status code
func (o *CreateSnapshotUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create snapshot using p o s t created response has a 4xx status code
func (o *CreateSnapshotUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create snapshot using p o s t created response has a 5xx status code
func (o *CreateSnapshotUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create snapshot using p o s t created response a status code equal to that given
func (o *CreateSnapshotUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create snapshot using p o s t created response
func (o *CreateSnapshotUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateSnapshotUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTCreated", 201)
}

func (o *CreateSnapshotUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTCreated", 201)
}

func (o *CreateSnapshotUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSnapshotUsingPOSTUnauthorized creates a CreateSnapshotUsingPOSTUnauthorized with default headers values
func NewCreateSnapshotUsingPOSTUnauthorized() *CreateSnapshotUsingPOSTUnauthorized {
	return &CreateSnapshotUsingPOSTUnauthorized{}
}

/*
CreateSnapshotUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateSnapshotUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create snapshot using p o s t unauthorized response has a 2xx status code
func (o *CreateSnapshotUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create snapshot using p o s t unauthorized response has a 3xx status code
func (o *CreateSnapshotUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create snapshot using p o s t unauthorized response has a 4xx status code
func (o *CreateSnapshotUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create snapshot using p o s t unauthorized response has a 5xx status code
func (o *CreateSnapshotUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create snapshot using p o s t unauthorized response a status code equal to that given
func (o *CreateSnapshotUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create snapshot using p o s t unauthorized response
func (o *CreateSnapshotUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateSnapshotUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTUnauthorized", 401)
}

func (o *CreateSnapshotUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTUnauthorized", 401)
}

func (o *CreateSnapshotUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSnapshotUsingPOSTForbidden creates a CreateSnapshotUsingPOSTForbidden with default headers values
func NewCreateSnapshotUsingPOSTForbidden() *CreateSnapshotUsingPOSTForbidden {
	return &CreateSnapshotUsingPOSTForbidden{}
}

/*
CreateSnapshotUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateSnapshotUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create snapshot using p o s t forbidden response has a 2xx status code
func (o *CreateSnapshotUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create snapshot using p o s t forbidden response has a 3xx status code
func (o *CreateSnapshotUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create snapshot using p o s t forbidden response has a 4xx status code
func (o *CreateSnapshotUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create snapshot using p o s t forbidden response has a 5xx status code
func (o *CreateSnapshotUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create snapshot using p o s t forbidden response a status code equal to that given
func (o *CreateSnapshotUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create snapshot using p o s t forbidden response
func (o *CreateSnapshotUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateSnapshotUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTForbidden", 403)
}

func (o *CreateSnapshotUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTForbidden", 403)
}

func (o *CreateSnapshotUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSnapshotUsingPOSTNotFound creates a CreateSnapshotUsingPOSTNotFound with default headers values
func NewCreateSnapshotUsingPOSTNotFound() *CreateSnapshotUsingPOSTNotFound {
	return &CreateSnapshotUsingPOSTNotFound{}
}

/*
CreateSnapshotUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateSnapshotUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create snapshot using p o s t not found response has a 2xx status code
func (o *CreateSnapshotUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create snapshot using p o s t not found response has a 3xx status code
func (o *CreateSnapshotUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create snapshot using p o s t not found response has a 4xx status code
func (o *CreateSnapshotUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create snapshot using p o s t not found response has a 5xx status code
func (o *CreateSnapshotUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create snapshot using p o s t not found response a status code equal to that given
func (o *CreateSnapshotUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create snapshot using p o s t not found response
func (o *CreateSnapshotUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateSnapshotUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTNotFound", 404)
}

func (o *CreateSnapshotUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] createSnapshotUsingPOSTNotFound", 404)
}

func (o *CreateSnapshotUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
