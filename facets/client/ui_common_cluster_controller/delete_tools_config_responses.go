// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteToolsConfigReader is a Reader for the DeleteToolsConfig structure.
type DeleteToolsConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteToolsConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteToolsConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteToolsConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteToolsConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteToolsConfigMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteToolsConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config] deleteToolsConfig", response, response.Code())
	}
}

// NewDeleteToolsConfigOK creates a DeleteToolsConfigOK with default headers values
func NewDeleteToolsConfigOK() *DeleteToolsConfigOK {
	return &DeleteToolsConfigOK{}
}

/*
DeleteToolsConfigOK describes a response with status code 200, with default header values.

OK
*/
type DeleteToolsConfigOK struct {
}

// IsSuccess returns true when this delete tools config o k response has a 2xx status code
func (o *DeleteToolsConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete tools config o k response has a 3xx status code
func (o *DeleteToolsConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tools config o k response has a 4xx status code
func (o *DeleteToolsConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tools config o k response has a 5xx status code
func (o *DeleteToolsConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tools config o k response a status code equal to that given
func (o *DeleteToolsConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete tools config o k response
func (o *DeleteToolsConfigOK) Code() int {
	return 200
}

func (o *DeleteToolsConfigOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigOK", 200)
}

func (o *DeleteToolsConfigOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigOK", 200)
}

func (o *DeleteToolsConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteToolsConfigBadRequest creates a DeleteToolsConfigBadRequest with default headers values
func NewDeleteToolsConfigBadRequest() *DeleteToolsConfigBadRequest {
	return &DeleteToolsConfigBadRequest{}
}

/*
DeleteToolsConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteToolsConfigBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tools config bad request response has a 2xx status code
func (o *DeleteToolsConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tools config bad request response has a 3xx status code
func (o *DeleteToolsConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tools config bad request response has a 4xx status code
func (o *DeleteToolsConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tools config bad request response has a 5xx status code
func (o *DeleteToolsConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tools config bad request response a status code equal to that given
func (o *DeleteToolsConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete tools config bad request response
func (o *DeleteToolsConfigBadRequest) Code() int {
	return 400
}

func (o *DeleteToolsConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigBadRequest %s", 400, payload)
}

func (o *DeleteToolsConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigBadRequest %s", 400, payload)
}

func (o *DeleteToolsConfigBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteToolsConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteToolsConfigNotFound creates a DeleteToolsConfigNotFound with default headers values
func NewDeleteToolsConfigNotFound() *DeleteToolsConfigNotFound {
	return &DeleteToolsConfigNotFound{}
}

/*
DeleteToolsConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteToolsConfigNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tools config not found response has a 2xx status code
func (o *DeleteToolsConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tools config not found response has a 3xx status code
func (o *DeleteToolsConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tools config not found response has a 4xx status code
func (o *DeleteToolsConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tools config not found response has a 5xx status code
func (o *DeleteToolsConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tools config not found response a status code equal to that given
func (o *DeleteToolsConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete tools config not found response
func (o *DeleteToolsConfigNotFound) Code() int {
	return 404
}

func (o *DeleteToolsConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigNotFound %s", 404, payload)
}

func (o *DeleteToolsConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigNotFound %s", 404, payload)
}

func (o *DeleteToolsConfigNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteToolsConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteToolsConfigMethodNotAllowed creates a DeleteToolsConfigMethodNotAllowed with default headers values
func NewDeleteToolsConfigMethodNotAllowed() *DeleteToolsConfigMethodNotAllowed {
	return &DeleteToolsConfigMethodNotAllowed{}
}

/*
DeleteToolsConfigMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteToolsConfigMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tools config method not allowed response has a 2xx status code
func (o *DeleteToolsConfigMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tools config method not allowed response has a 3xx status code
func (o *DeleteToolsConfigMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tools config method not allowed response has a 4xx status code
func (o *DeleteToolsConfigMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tools config method not allowed response has a 5xx status code
func (o *DeleteToolsConfigMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tools config method not allowed response a status code equal to that given
func (o *DeleteToolsConfigMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete tools config method not allowed response
func (o *DeleteToolsConfigMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteToolsConfigMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigMethodNotAllowed %s", 405, payload)
}

func (o *DeleteToolsConfigMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigMethodNotAllowed %s", 405, payload)
}

func (o *DeleteToolsConfigMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteToolsConfigMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteToolsConfigInternalServerError creates a DeleteToolsConfigInternalServerError with default headers values
func NewDeleteToolsConfigInternalServerError() *DeleteToolsConfigInternalServerError {
	return &DeleteToolsConfigInternalServerError{}
}

/*
DeleteToolsConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteToolsConfigInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tools config internal server error response has a 2xx status code
func (o *DeleteToolsConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tools config internal server error response has a 3xx status code
func (o *DeleteToolsConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tools config internal server error response has a 4xx status code
func (o *DeleteToolsConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tools config internal server error response has a 5xx status code
func (o *DeleteToolsConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete tools config internal server error response a status code equal to that given
func (o *DeleteToolsConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete tools config internal server error response
func (o *DeleteToolsConfigInternalServerError) Code() int {
	return 500
}

func (o *DeleteToolsConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigInternalServerError %s", 500, payload)
}

func (o *DeleteToolsConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/tools-config][%d] deleteToolsConfigInternalServerError %s", 500, payload)
}

func (o *DeleteToolsConfigInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteToolsConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
