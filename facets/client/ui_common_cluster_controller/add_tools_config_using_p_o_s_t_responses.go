// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddToolsConfigUsingPOSTReader is a Reader for the AddToolsConfigUsingPOST structure.
type AddToolsConfigUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddToolsConfigUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddToolsConfigUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddToolsConfigUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddToolsConfigUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddToolsConfigUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddToolsConfigUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/tools-config] addToolsConfigUsingPOST", response, response.Code())
	}
}

// NewAddToolsConfigUsingPOSTOK creates a AddToolsConfigUsingPOSTOK with default headers values
func NewAddToolsConfigUsingPOSTOK() *AddToolsConfigUsingPOSTOK {
	return &AddToolsConfigUsingPOSTOK{}
}

/*
AddToolsConfigUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type AddToolsConfigUsingPOSTOK struct {
	Payload *models.ToolsConfig
}

// IsSuccess returns true when this add tools config using p o s t o k response has a 2xx status code
func (o *AddToolsConfigUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add tools config using p o s t o k response has a 3xx status code
func (o *AddToolsConfigUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tools config using p o s t o k response has a 4xx status code
func (o *AddToolsConfigUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add tools config using p o s t o k response has a 5xx status code
func (o *AddToolsConfigUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add tools config using p o s t o k response a status code equal to that given
func (o *AddToolsConfigUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add tools config using p o s t o k response
func (o *AddToolsConfigUsingPOSTOK) Code() int {
	return 200
}

func (o *AddToolsConfigUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTOK %s", 200, payload)
}

func (o *AddToolsConfigUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTOK %s", 200, payload)
}

func (o *AddToolsConfigUsingPOSTOK) GetPayload() *models.ToolsConfig {
	return o.Payload
}

func (o *AddToolsConfigUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ToolsConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddToolsConfigUsingPOSTCreated creates a AddToolsConfigUsingPOSTCreated with default headers values
func NewAddToolsConfigUsingPOSTCreated() *AddToolsConfigUsingPOSTCreated {
	return &AddToolsConfigUsingPOSTCreated{}
}

/*
AddToolsConfigUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddToolsConfigUsingPOSTCreated struct {
}

// IsSuccess returns true when this add tools config using p o s t created response has a 2xx status code
func (o *AddToolsConfigUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add tools config using p o s t created response has a 3xx status code
func (o *AddToolsConfigUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tools config using p o s t created response has a 4xx status code
func (o *AddToolsConfigUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add tools config using p o s t created response has a 5xx status code
func (o *AddToolsConfigUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add tools config using p o s t created response a status code equal to that given
func (o *AddToolsConfigUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add tools config using p o s t created response
func (o *AddToolsConfigUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddToolsConfigUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTCreated", 201)
}

func (o *AddToolsConfigUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTCreated", 201)
}

func (o *AddToolsConfigUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddToolsConfigUsingPOSTUnauthorized creates a AddToolsConfigUsingPOSTUnauthorized with default headers values
func NewAddToolsConfigUsingPOSTUnauthorized() *AddToolsConfigUsingPOSTUnauthorized {
	return &AddToolsConfigUsingPOSTUnauthorized{}
}

/*
AddToolsConfigUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddToolsConfigUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add tools config using p o s t unauthorized response has a 2xx status code
func (o *AddToolsConfigUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tools config using p o s t unauthorized response has a 3xx status code
func (o *AddToolsConfigUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tools config using p o s t unauthorized response has a 4xx status code
func (o *AddToolsConfigUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add tools config using p o s t unauthorized response has a 5xx status code
func (o *AddToolsConfigUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add tools config using p o s t unauthorized response a status code equal to that given
func (o *AddToolsConfigUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add tools config using p o s t unauthorized response
func (o *AddToolsConfigUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddToolsConfigUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTUnauthorized", 401)
}

func (o *AddToolsConfigUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTUnauthorized", 401)
}

func (o *AddToolsConfigUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddToolsConfigUsingPOSTForbidden creates a AddToolsConfigUsingPOSTForbidden with default headers values
func NewAddToolsConfigUsingPOSTForbidden() *AddToolsConfigUsingPOSTForbidden {
	return &AddToolsConfigUsingPOSTForbidden{}
}

/*
AddToolsConfigUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddToolsConfigUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add tools config using p o s t forbidden response has a 2xx status code
func (o *AddToolsConfigUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tools config using p o s t forbidden response has a 3xx status code
func (o *AddToolsConfigUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tools config using p o s t forbidden response has a 4xx status code
func (o *AddToolsConfigUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add tools config using p o s t forbidden response has a 5xx status code
func (o *AddToolsConfigUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add tools config using p o s t forbidden response a status code equal to that given
func (o *AddToolsConfigUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add tools config using p o s t forbidden response
func (o *AddToolsConfigUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddToolsConfigUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTForbidden", 403)
}

func (o *AddToolsConfigUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTForbidden", 403)
}

func (o *AddToolsConfigUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddToolsConfigUsingPOSTNotFound creates a AddToolsConfigUsingPOSTNotFound with default headers values
func NewAddToolsConfigUsingPOSTNotFound() *AddToolsConfigUsingPOSTNotFound {
	return &AddToolsConfigUsingPOSTNotFound{}
}

/*
AddToolsConfigUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddToolsConfigUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add tools config using p o s t not found response has a 2xx status code
func (o *AddToolsConfigUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add tools config using p o s t not found response has a 3xx status code
func (o *AddToolsConfigUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add tools config using p o s t not found response has a 4xx status code
func (o *AddToolsConfigUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add tools config using p o s t not found response has a 5xx status code
func (o *AddToolsConfigUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add tools config using p o s t not found response a status code equal to that given
func (o *AddToolsConfigUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add tools config using p o s t not found response
func (o *AddToolsConfigUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddToolsConfigUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTNotFound", 404)
}

func (o *AddToolsConfigUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/tools-config][%d] addToolsConfigUsingPOSTNotFound", 404)
}

func (o *AddToolsConfigUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
