// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateAvailabilityScheduleUsingPOSTReader is a Reader for the CreateAvailabilityScheduleUsingPOST structure.
type CreateAvailabilityScheduleUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAvailabilityScheduleUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAvailabilityScheduleUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateAvailabilityScheduleUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateAvailabilityScheduleUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateAvailabilityScheduleUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAvailabilityScheduleUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule] createAvailabilityScheduleUsingPOST", response, response.Code())
	}
}

// NewCreateAvailabilityScheduleUsingPOSTOK creates a CreateAvailabilityScheduleUsingPOSTOK with default headers values
func NewCreateAvailabilityScheduleUsingPOSTOK() *CreateAvailabilityScheduleUsingPOSTOK {
	return &CreateAvailabilityScheduleUsingPOSTOK{}
}

/*
CreateAvailabilityScheduleUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateAvailabilityScheduleUsingPOSTOK struct {
}

// IsSuccess returns true when this create availability schedule using p o s t o k response has a 2xx status code
func (o *CreateAvailabilityScheduleUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create availability schedule using p o s t o k response has a 3xx status code
func (o *CreateAvailabilityScheduleUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule using p o s t o k response has a 4xx status code
func (o *CreateAvailabilityScheduleUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create availability schedule using p o s t o k response has a 5xx status code
func (o *CreateAvailabilityScheduleUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule using p o s t o k response a status code equal to that given
func (o *CreateAvailabilityScheduleUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create availability schedule using p o s t o k response
func (o *CreateAvailabilityScheduleUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateAvailabilityScheduleUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTOK", 200)
}

func (o *CreateAvailabilityScheduleUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTOK", 200)
}

func (o *CreateAvailabilityScheduleUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAvailabilityScheduleUsingPOSTCreated creates a CreateAvailabilityScheduleUsingPOSTCreated with default headers values
func NewCreateAvailabilityScheduleUsingPOSTCreated() *CreateAvailabilityScheduleUsingPOSTCreated {
	return &CreateAvailabilityScheduleUsingPOSTCreated{}
}

/*
CreateAvailabilityScheduleUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateAvailabilityScheduleUsingPOSTCreated struct {
}

// IsSuccess returns true when this create availability schedule using p o s t created response has a 2xx status code
func (o *CreateAvailabilityScheduleUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create availability schedule using p o s t created response has a 3xx status code
func (o *CreateAvailabilityScheduleUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule using p o s t created response has a 4xx status code
func (o *CreateAvailabilityScheduleUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create availability schedule using p o s t created response has a 5xx status code
func (o *CreateAvailabilityScheduleUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule using p o s t created response a status code equal to that given
func (o *CreateAvailabilityScheduleUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create availability schedule using p o s t created response
func (o *CreateAvailabilityScheduleUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateAvailabilityScheduleUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTCreated", 201)
}

func (o *CreateAvailabilityScheduleUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTCreated", 201)
}

func (o *CreateAvailabilityScheduleUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAvailabilityScheduleUsingPOSTUnauthorized creates a CreateAvailabilityScheduleUsingPOSTUnauthorized with default headers values
func NewCreateAvailabilityScheduleUsingPOSTUnauthorized() *CreateAvailabilityScheduleUsingPOSTUnauthorized {
	return &CreateAvailabilityScheduleUsingPOSTUnauthorized{}
}

/*
CreateAvailabilityScheduleUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateAvailabilityScheduleUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create availability schedule using p o s t unauthorized response has a 2xx status code
func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create availability schedule using p o s t unauthorized response has a 3xx status code
func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule using p o s t unauthorized response has a 4xx status code
func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create availability schedule using p o s t unauthorized response has a 5xx status code
func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule using p o s t unauthorized response a status code equal to that given
func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create availability schedule using p o s t unauthorized response
func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTUnauthorized", 401)
}

func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTUnauthorized", 401)
}

func (o *CreateAvailabilityScheduleUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAvailabilityScheduleUsingPOSTForbidden creates a CreateAvailabilityScheduleUsingPOSTForbidden with default headers values
func NewCreateAvailabilityScheduleUsingPOSTForbidden() *CreateAvailabilityScheduleUsingPOSTForbidden {
	return &CreateAvailabilityScheduleUsingPOSTForbidden{}
}

/*
CreateAvailabilityScheduleUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateAvailabilityScheduleUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create availability schedule using p o s t forbidden response has a 2xx status code
func (o *CreateAvailabilityScheduleUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create availability schedule using p o s t forbidden response has a 3xx status code
func (o *CreateAvailabilityScheduleUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule using p o s t forbidden response has a 4xx status code
func (o *CreateAvailabilityScheduleUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create availability schedule using p o s t forbidden response has a 5xx status code
func (o *CreateAvailabilityScheduleUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule using p o s t forbidden response a status code equal to that given
func (o *CreateAvailabilityScheduleUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create availability schedule using p o s t forbidden response
func (o *CreateAvailabilityScheduleUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateAvailabilityScheduleUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTForbidden", 403)
}

func (o *CreateAvailabilityScheduleUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTForbidden", 403)
}

func (o *CreateAvailabilityScheduleUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAvailabilityScheduleUsingPOSTNotFound creates a CreateAvailabilityScheduleUsingPOSTNotFound with default headers values
func NewCreateAvailabilityScheduleUsingPOSTNotFound() *CreateAvailabilityScheduleUsingPOSTNotFound {
	return &CreateAvailabilityScheduleUsingPOSTNotFound{}
}

/*
CreateAvailabilityScheduleUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateAvailabilityScheduleUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create availability schedule using p o s t not found response has a 2xx status code
func (o *CreateAvailabilityScheduleUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create availability schedule using p o s t not found response has a 3xx status code
func (o *CreateAvailabilityScheduleUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule using p o s t not found response has a 4xx status code
func (o *CreateAvailabilityScheduleUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create availability schedule using p o s t not found response has a 5xx status code
func (o *CreateAvailabilityScheduleUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule using p o s t not found response a status code equal to that given
func (o *CreateAvailabilityScheduleUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create availability schedule using p o s t not found response
func (o *CreateAvailabilityScheduleUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateAvailabilityScheduleUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTNotFound", 404)
}

func (o *CreateAvailabilityScheduleUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleUsingPOSTNotFound", 404)
}

func (o *CreateAvailabilityScheduleUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
