// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// EditToolsConfigReader is a Reader for the EditToolsConfig structure.
type EditToolsConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditToolsConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditToolsConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditToolsConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditToolsConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewEditToolsConfigMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEditToolsConfigInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}] editToolsConfig", response, response.Code())
	}
}

// NewEditToolsConfigOK creates a EditToolsConfigOK with default headers values
func NewEditToolsConfigOK() *EditToolsConfigOK {
	return &EditToolsConfigOK{}
}

/*
EditToolsConfigOK describes a response with status code 200, with default header values.

OK
*/
type EditToolsConfigOK struct {
	Payload *models.ToolsConfig
}

// IsSuccess returns true when this edit tools config o k response has a 2xx status code
func (o *EditToolsConfigOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit tools config o k response has a 3xx status code
func (o *EditToolsConfigOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config o k response has a 4xx status code
func (o *EditToolsConfigOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit tools config o k response has a 5xx status code
func (o *EditToolsConfigOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config o k response a status code equal to that given
func (o *EditToolsConfigOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the edit tools config o k response
func (o *EditToolsConfigOK) Code() int {
	return 200
}

func (o *EditToolsConfigOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigOK %s", 200, payload)
}

func (o *EditToolsConfigOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigOK %s", 200, payload)
}

func (o *EditToolsConfigOK) GetPayload() *models.ToolsConfig {
	return o.Payload
}

func (o *EditToolsConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ToolsConfig)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditToolsConfigBadRequest creates a EditToolsConfigBadRequest with default headers values
func NewEditToolsConfigBadRequest() *EditToolsConfigBadRequest {
	return &EditToolsConfigBadRequest{}
}

/*
EditToolsConfigBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EditToolsConfigBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit tools config bad request response has a 2xx status code
func (o *EditToolsConfigBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit tools config bad request response has a 3xx status code
func (o *EditToolsConfigBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config bad request response has a 4xx status code
func (o *EditToolsConfigBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit tools config bad request response has a 5xx status code
func (o *EditToolsConfigBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config bad request response a status code equal to that given
func (o *EditToolsConfigBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the edit tools config bad request response
func (o *EditToolsConfigBadRequest) Code() int {
	return 400
}

func (o *EditToolsConfigBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigBadRequest %s", 400, payload)
}

func (o *EditToolsConfigBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigBadRequest %s", 400, payload)
}

func (o *EditToolsConfigBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditToolsConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditToolsConfigNotFound creates a EditToolsConfigNotFound with default headers values
func NewEditToolsConfigNotFound() *EditToolsConfigNotFound {
	return &EditToolsConfigNotFound{}
}

/*
EditToolsConfigNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EditToolsConfigNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit tools config not found response has a 2xx status code
func (o *EditToolsConfigNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit tools config not found response has a 3xx status code
func (o *EditToolsConfigNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config not found response has a 4xx status code
func (o *EditToolsConfigNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit tools config not found response has a 5xx status code
func (o *EditToolsConfigNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config not found response a status code equal to that given
func (o *EditToolsConfigNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the edit tools config not found response
func (o *EditToolsConfigNotFound) Code() int {
	return 404
}

func (o *EditToolsConfigNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigNotFound %s", 404, payload)
}

func (o *EditToolsConfigNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigNotFound %s", 404, payload)
}

func (o *EditToolsConfigNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditToolsConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditToolsConfigMethodNotAllowed creates a EditToolsConfigMethodNotAllowed with default headers values
func NewEditToolsConfigMethodNotAllowed() *EditToolsConfigMethodNotAllowed {
	return &EditToolsConfigMethodNotAllowed{}
}

/*
EditToolsConfigMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type EditToolsConfigMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit tools config method not allowed response has a 2xx status code
func (o *EditToolsConfigMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit tools config method not allowed response has a 3xx status code
func (o *EditToolsConfigMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config method not allowed response has a 4xx status code
func (o *EditToolsConfigMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit tools config method not allowed response has a 5xx status code
func (o *EditToolsConfigMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this edit tools config method not allowed response a status code equal to that given
func (o *EditToolsConfigMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the edit tools config method not allowed response
func (o *EditToolsConfigMethodNotAllowed) Code() int {
	return 405
}

func (o *EditToolsConfigMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigMethodNotAllowed %s", 405, payload)
}

func (o *EditToolsConfigMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigMethodNotAllowed %s", 405, payload)
}

func (o *EditToolsConfigMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditToolsConfigMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditToolsConfigInternalServerError creates a EditToolsConfigInternalServerError with default headers values
func NewEditToolsConfigInternalServerError() *EditToolsConfigInternalServerError {
	return &EditToolsConfigInternalServerError{}
}

/*
EditToolsConfigInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type EditToolsConfigInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit tools config internal server error response has a 2xx status code
func (o *EditToolsConfigInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit tools config internal server error response has a 3xx status code
func (o *EditToolsConfigInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit tools config internal server error response has a 4xx status code
func (o *EditToolsConfigInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit tools config internal server error response has a 5xx status code
func (o *EditToolsConfigInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this edit tools config internal server error response a status code equal to that given
func (o *EditToolsConfigInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the edit tools config internal server error response
func (o *EditToolsConfigInternalServerError) Code() int {
	return 500
}

func (o *EditToolsConfigInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigInternalServerError %s", 500, payload)
}

func (o *EditToolsConfigInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/tools-config/{toolsConfigId}][%d] editToolsConfigInternalServerError %s", 500, payload)
}

func (o *EditToolsConfigInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditToolsConfigInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
