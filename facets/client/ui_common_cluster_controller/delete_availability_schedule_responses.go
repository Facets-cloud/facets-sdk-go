// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteAvailabilityScheduleReader is a Reader for the DeleteAvailabilitySchedule structure.
type DeleteAvailabilityScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteAvailabilityScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteAvailabilityScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteAvailabilityScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteAvailabilityScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteAvailabilityScheduleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteAvailabilityScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}] deleteAvailabilitySchedule", response, response.Code())
	}
}

// NewDeleteAvailabilityScheduleOK creates a DeleteAvailabilityScheduleOK with default headers values
func NewDeleteAvailabilityScheduleOK() *DeleteAvailabilityScheduleOK {
	return &DeleteAvailabilityScheduleOK{}
}

/*
DeleteAvailabilityScheduleOK describes a response with status code 200, with default header values.

OK
*/
type DeleteAvailabilityScheduleOK struct {
}

// IsSuccess returns true when this delete availability schedule o k response has a 2xx status code
func (o *DeleteAvailabilityScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete availability schedule o k response has a 3xx status code
func (o *DeleteAvailabilityScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete availability schedule o k response has a 4xx status code
func (o *DeleteAvailabilityScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete availability schedule o k response has a 5xx status code
func (o *DeleteAvailabilityScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete availability schedule o k response a status code equal to that given
func (o *DeleteAvailabilityScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete availability schedule o k response
func (o *DeleteAvailabilityScheduleOK) Code() int {
	return 200
}

func (o *DeleteAvailabilityScheduleOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleOK", 200)
}

func (o *DeleteAvailabilityScheduleOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleOK", 200)
}

func (o *DeleteAvailabilityScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteAvailabilityScheduleBadRequest creates a DeleteAvailabilityScheduleBadRequest with default headers values
func NewDeleteAvailabilityScheduleBadRequest() *DeleteAvailabilityScheduleBadRequest {
	return &DeleteAvailabilityScheduleBadRequest{}
}

/*
DeleteAvailabilityScheduleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteAvailabilityScheduleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete availability schedule bad request response has a 2xx status code
func (o *DeleteAvailabilityScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete availability schedule bad request response has a 3xx status code
func (o *DeleteAvailabilityScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete availability schedule bad request response has a 4xx status code
func (o *DeleteAvailabilityScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete availability schedule bad request response has a 5xx status code
func (o *DeleteAvailabilityScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete availability schedule bad request response a status code equal to that given
func (o *DeleteAvailabilityScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete availability schedule bad request response
func (o *DeleteAvailabilityScheduleBadRequest) Code() int {
	return 400
}

func (o *DeleteAvailabilityScheduleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleBadRequest %s", 400, payload)
}

func (o *DeleteAvailabilityScheduleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleBadRequest %s", 400, payload)
}

func (o *DeleteAvailabilityScheduleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteAvailabilityScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAvailabilityScheduleNotFound creates a DeleteAvailabilityScheduleNotFound with default headers values
func NewDeleteAvailabilityScheduleNotFound() *DeleteAvailabilityScheduleNotFound {
	return &DeleteAvailabilityScheduleNotFound{}
}

/*
DeleteAvailabilityScheduleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteAvailabilityScheduleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete availability schedule not found response has a 2xx status code
func (o *DeleteAvailabilityScheduleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete availability schedule not found response has a 3xx status code
func (o *DeleteAvailabilityScheduleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete availability schedule not found response has a 4xx status code
func (o *DeleteAvailabilityScheduleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete availability schedule not found response has a 5xx status code
func (o *DeleteAvailabilityScheduleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete availability schedule not found response a status code equal to that given
func (o *DeleteAvailabilityScheduleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete availability schedule not found response
func (o *DeleteAvailabilityScheduleNotFound) Code() int {
	return 404
}

func (o *DeleteAvailabilityScheduleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleNotFound %s", 404, payload)
}

func (o *DeleteAvailabilityScheduleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleNotFound %s", 404, payload)
}

func (o *DeleteAvailabilityScheduleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteAvailabilityScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAvailabilityScheduleMethodNotAllowed creates a DeleteAvailabilityScheduleMethodNotAllowed with default headers values
func NewDeleteAvailabilityScheduleMethodNotAllowed() *DeleteAvailabilityScheduleMethodNotAllowed {
	return &DeleteAvailabilityScheduleMethodNotAllowed{}
}

/*
DeleteAvailabilityScheduleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteAvailabilityScheduleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete availability schedule method not allowed response has a 2xx status code
func (o *DeleteAvailabilityScheduleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete availability schedule method not allowed response has a 3xx status code
func (o *DeleteAvailabilityScheduleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete availability schedule method not allowed response has a 4xx status code
func (o *DeleteAvailabilityScheduleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete availability schedule method not allowed response has a 5xx status code
func (o *DeleteAvailabilityScheduleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete availability schedule method not allowed response a status code equal to that given
func (o *DeleteAvailabilityScheduleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete availability schedule method not allowed response
func (o *DeleteAvailabilityScheduleMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteAvailabilityScheduleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteAvailabilityScheduleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteAvailabilityScheduleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteAvailabilityScheduleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteAvailabilityScheduleInternalServerError creates a DeleteAvailabilityScheduleInternalServerError with default headers values
func NewDeleteAvailabilityScheduleInternalServerError() *DeleteAvailabilityScheduleInternalServerError {
	return &DeleteAvailabilityScheduleInternalServerError{}
}

/*
DeleteAvailabilityScheduleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteAvailabilityScheduleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete availability schedule internal server error response has a 2xx status code
func (o *DeleteAvailabilityScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete availability schedule internal server error response has a 3xx status code
func (o *DeleteAvailabilityScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete availability schedule internal server error response has a 4xx status code
func (o *DeleteAvailabilityScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete availability schedule internal server error response has a 5xx status code
func (o *DeleteAvailabilityScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete availability schedule internal server error response a status code equal to that given
func (o *DeleteAvailabilityScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete availability schedule internal server error response
func (o *DeleteAvailabilityScheduleInternalServerError) Code() int {
	return 500
}

func (o *DeleteAvailabilityScheduleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleInternalServerError %s", 500, payload)
}

func (o *DeleteAvailabilityScheduleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/availability-schedule/{availabilityScheduleId}][%d] deleteAvailabilityScheduleInternalServerError %s", 500, payload)
}

func (o *DeleteAvailabilityScheduleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteAvailabilityScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
