// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateAvailabilityScheduleReader is a Reader for the CreateAvailabilitySchedule structure.
type CreateAvailabilityScheduleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateAvailabilityScheduleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateAvailabilityScheduleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateAvailabilityScheduleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateAvailabilityScheduleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateAvailabilityScheduleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateAvailabilityScheduleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule] createAvailabilitySchedule", response, response.Code())
	}
}

// NewCreateAvailabilityScheduleOK creates a CreateAvailabilityScheduleOK with default headers values
func NewCreateAvailabilityScheduleOK() *CreateAvailabilityScheduleOK {
	return &CreateAvailabilityScheduleOK{}
}

/*
CreateAvailabilityScheduleOK describes a response with status code 200, with default header values.

OK
*/
type CreateAvailabilityScheduleOK struct {
}

// IsSuccess returns true when this create availability schedule o k response has a 2xx status code
func (o *CreateAvailabilityScheduleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create availability schedule o k response has a 3xx status code
func (o *CreateAvailabilityScheduleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule o k response has a 4xx status code
func (o *CreateAvailabilityScheduleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create availability schedule o k response has a 5xx status code
func (o *CreateAvailabilityScheduleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule o k response a status code equal to that given
func (o *CreateAvailabilityScheduleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create availability schedule o k response
func (o *CreateAvailabilityScheduleOK) Code() int {
	return 200
}

func (o *CreateAvailabilityScheduleOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleOK", 200)
}

func (o *CreateAvailabilityScheduleOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleOK", 200)
}

func (o *CreateAvailabilityScheduleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateAvailabilityScheduleBadRequest creates a CreateAvailabilityScheduleBadRequest with default headers values
func NewCreateAvailabilityScheduleBadRequest() *CreateAvailabilityScheduleBadRequest {
	return &CreateAvailabilityScheduleBadRequest{}
}

/*
CreateAvailabilityScheduleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateAvailabilityScheduleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create availability schedule bad request response has a 2xx status code
func (o *CreateAvailabilityScheduleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create availability schedule bad request response has a 3xx status code
func (o *CreateAvailabilityScheduleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule bad request response has a 4xx status code
func (o *CreateAvailabilityScheduleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create availability schedule bad request response has a 5xx status code
func (o *CreateAvailabilityScheduleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule bad request response a status code equal to that given
func (o *CreateAvailabilityScheduleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create availability schedule bad request response
func (o *CreateAvailabilityScheduleBadRequest) Code() int {
	return 400
}

func (o *CreateAvailabilityScheduleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleBadRequest %s", 400, payload)
}

func (o *CreateAvailabilityScheduleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleBadRequest %s", 400, payload)
}

func (o *CreateAvailabilityScheduleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateAvailabilityScheduleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAvailabilityScheduleNotFound creates a CreateAvailabilityScheduleNotFound with default headers values
func NewCreateAvailabilityScheduleNotFound() *CreateAvailabilityScheduleNotFound {
	return &CreateAvailabilityScheduleNotFound{}
}

/*
CreateAvailabilityScheduleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateAvailabilityScheduleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create availability schedule not found response has a 2xx status code
func (o *CreateAvailabilityScheduleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create availability schedule not found response has a 3xx status code
func (o *CreateAvailabilityScheduleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule not found response has a 4xx status code
func (o *CreateAvailabilityScheduleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create availability schedule not found response has a 5xx status code
func (o *CreateAvailabilityScheduleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule not found response a status code equal to that given
func (o *CreateAvailabilityScheduleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create availability schedule not found response
func (o *CreateAvailabilityScheduleNotFound) Code() int {
	return 404
}

func (o *CreateAvailabilityScheduleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleNotFound %s", 404, payload)
}

func (o *CreateAvailabilityScheduleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleNotFound %s", 404, payload)
}

func (o *CreateAvailabilityScheduleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateAvailabilityScheduleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAvailabilityScheduleMethodNotAllowed creates a CreateAvailabilityScheduleMethodNotAllowed with default headers values
func NewCreateAvailabilityScheduleMethodNotAllowed() *CreateAvailabilityScheduleMethodNotAllowed {
	return &CreateAvailabilityScheduleMethodNotAllowed{}
}

/*
CreateAvailabilityScheduleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateAvailabilityScheduleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create availability schedule method not allowed response has a 2xx status code
func (o *CreateAvailabilityScheduleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create availability schedule method not allowed response has a 3xx status code
func (o *CreateAvailabilityScheduleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule method not allowed response has a 4xx status code
func (o *CreateAvailabilityScheduleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create availability schedule method not allowed response has a 5xx status code
func (o *CreateAvailabilityScheduleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create availability schedule method not allowed response a status code equal to that given
func (o *CreateAvailabilityScheduleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create availability schedule method not allowed response
func (o *CreateAvailabilityScheduleMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateAvailabilityScheduleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleMethodNotAllowed %s", 405, payload)
}

func (o *CreateAvailabilityScheduleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleMethodNotAllowed %s", 405, payload)
}

func (o *CreateAvailabilityScheduleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateAvailabilityScheduleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateAvailabilityScheduleInternalServerError creates a CreateAvailabilityScheduleInternalServerError with default headers values
func NewCreateAvailabilityScheduleInternalServerError() *CreateAvailabilityScheduleInternalServerError {
	return &CreateAvailabilityScheduleInternalServerError{}
}

/*
CreateAvailabilityScheduleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateAvailabilityScheduleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create availability schedule internal server error response has a 2xx status code
func (o *CreateAvailabilityScheduleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create availability schedule internal server error response has a 3xx status code
func (o *CreateAvailabilityScheduleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create availability schedule internal server error response has a 4xx status code
func (o *CreateAvailabilityScheduleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create availability schedule internal server error response has a 5xx status code
func (o *CreateAvailabilityScheduleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create availability schedule internal server error response a status code equal to that given
func (o *CreateAvailabilityScheduleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create availability schedule internal server error response
func (o *CreateAvailabilityScheduleInternalServerError) Code() int {
	return 500
}

func (o *CreateAvailabilityScheduleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleInternalServerError %s", 500, payload)
}

func (o *CreateAvailabilityScheduleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/availability-schedule][%d] createAvailabilityScheduleInternalServerError %s", 500, payload)
}

func (o *CreateAvailabilityScheduleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateAvailabilityScheduleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
