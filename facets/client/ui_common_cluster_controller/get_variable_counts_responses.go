// Code generated by go-swagger; DO NOT EDIT.

package ui_common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVariableCountsReader is a Reader for the GetVariableCounts structure.
type GetVariableCountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVariableCountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVariableCountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVariableCountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVariableCountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetVariableCountsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVariableCountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts] getVariableCounts", response, response.Code())
	}
}

// NewGetVariableCountsOK creates a GetVariableCountsOK with default headers values
func NewGetVariableCountsOK() *GetVariableCountsOK {
	return &GetVariableCountsOK{}
}

/*
GetVariableCountsOK describes a response with status code 200, with default header values.

OK
*/
type GetVariableCountsOK struct {
	Payload *models.VariableCountDto
}

// IsSuccess returns true when this get variable counts o k response has a 2xx status code
func (o *GetVariableCountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get variable counts o k response has a 3xx status code
func (o *GetVariableCountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get variable counts o k response has a 4xx status code
func (o *GetVariableCountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get variable counts o k response has a 5xx status code
func (o *GetVariableCountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get variable counts o k response a status code equal to that given
func (o *GetVariableCountsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get variable counts o k response
func (o *GetVariableCountsOK) Code() int {
	return 200
}

func (o *GetVariableCountsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsOK %s", 200, payload)
}

func (o *GetVariableCountsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsOK %s", 200, payload)
}

func (o *GetVariableCountsOK) GetPayload() *models.VariableCountDto {
	return o.Payload
}

func (o *GetVariableCountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VariableCountDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariableCountsBadRequest creates a GetVariableCountsBadRequest with default headers values
func NewGetVariableCountsBadRequest() *GetVariableCountsBadRequest {
	return &GetVariableCountsBadRequest{}
}

/*
GetVariableCountsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVariableCountsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get variable counts bad request response has a 2xx status code
func (o *GetVariableCountsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get variable counts bad request response has a 3xx status code
func (o *GetVariableCountsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get variable counts bad request response has a 4xx status code
func (o *GetVariableCountsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get variable counts bad request response has a 5xx status code
func (o *GetVariableCountsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get variable counts bad request response a status code equal to that given
func (o *GetVariableCountsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get variable counts bad request response
func (o *GetVariableCountsBadRequest) Code() int {
	return 400
}

func (o *GetVariableCountsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsBadRequest %s", 400, payload)
}

func (o *GetVariableCountsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsBadRequest %s", 400, payload)
}

func (o *GetVariableCountsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVariableCountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariableCountsNotFound creates a GetVariableCountsNotFound with default headers values
func NewGetVariableCountsNotFound() *GetVariableCountsNotFound {
	return &GetVariableCountsNotFound{}
}

/*
GetVariableCountsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVariableCountsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get variable counts not found response has a 2xx status code
func (o *GetVariableCountsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get variable counts not found response has a 3xx status code
func (o *GetVariableCountsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get variable counts not found response has a 4xx status code
func (o *GetVariableCountsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get variable counts not found response has a 5xx status code
func (o *GetVariableCountsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get variable counts not found response a status code equal to that given
func (o *GetVariableCountsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get variable counts not found response
func (o *GetVariableCountsNotFound) Code() int {
	return 404
}

func (o *GetVariableCountsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsNotFound %s", 404, payload)
}

func (o *GetVariableCountsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsNotFound %s", 404, payload)
}

func (o *GetVariableCountsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVariableCountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariableCountsMethodNotAllowed creates a GetVariableCountsMethodNotAllowed with default headers values
func NewGetVariableCountsMethodNotAllowed() *GetVariableCountsMethodNotAllowed {
	return &GetVariableCountsMethodNotAllowed{}
}

/*
GetVariableCountsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetVariableCountsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get variable counts method not allowed response has a 2xx status code
func (o *GetVariableCountsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get variable counts method not allowed response has a 3xx status code
func (o *GetVariableCountsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get variable counts method not allowed response has a 4xx status code
func (o *GetVariableCountsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get variable counts method not allowed response has a 5xx status code
func (o *GetVariableCountsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get variable counts method not allowed response a status code equal to that given
func (o *GetVariableCountsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get variable counts method not allowed response
func (o *GetVariableCountsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetVariableCountsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsMethodNotAllowed %s", 405, payload)
}

func (o *GetVariableCountsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsMethodNotAllowed %s", 405, payload)
}

func (o *GetVariableCountsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVariableCountsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVariableCountsInternalServerError creates a GetVariableCountsInternalServerError with default headers values
func NewGetVariableCountsInternalServerError() *GetVariableCountsInternalServerError {
	return &GetVariableCountsInternalServerError{}
}

/*
GetVariableCountsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVariableCountsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get variable counts internal server error response has a 2xx status code
func (o *GetVariableCountsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get variable counts internal server error response has a 3xx status code
func (o *GetVariableCountsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get variable counts internal server error response has a 4xx status code
func (o *GetVariableCountsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get variable counts internal server error response has a 5xx status code
func (o *GetVariableCountsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get variable counts internal server error response a status code equal to that given
func (o *GetVariableCountsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get variable counts internal server error response
func (o *GetVariableCountsInternalServerError) Code() int {
	return 500
}

func (o *GetVariableCountsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsInternalServerError %s", 500, payload)
}

func (o *GetVariableCountsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/variable-counts][%d] getVariableCountsInternalServerError %s", 500, payload)
}

func (o *GetVariableCountsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVariableCountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
