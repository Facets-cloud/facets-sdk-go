// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListReplicasetsByLabelsUsingGETReader is a Reader for the ListReplicasetsByLabelsUsingGET structure.
type ListReplicasetsByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListReplicasetsByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListReplicasetsByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListReplicasetsByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListReplicasetsByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListReplicasetsByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets] listReplicasetsByLabelsUsingGET", response, response.Code())
	}
}

// NewListReplicasetsByLabelsUsingGETOK creates a ListReplicasetsByLabelsUsingGETOK with default headers values
func NewListReplicasetsByLabelsUsingGETOK() *ListReplicasetsByLabelsUsingGETOK {
	return &ListReplicasetsByLabelsUsingGETOK{}
}

/*
ListReplicasetsByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListReplicasetsByLabelsUsingGETOK struct {
	Payload []*models.ReplicasetDTO
}

// IsSuccess returns true when this list replicasets by labels using g e t o k response has a 2xx status code
func (o *ListReplicasetsByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list replicasets by labels using g e t o k response has a 3xx status code
func (o *ListReplicasetsByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels using g e t o k response has a 4xx status code
func (o *ListReplicasetsByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list replicasets by labels using g e t o k response has a 5xx status code
func (o *ListReplicasetsByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels using g e t o k response a status code equal to that given
func (o *ListReplicasetsByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list replicasets by labels using g e t o k response
func (o *ListReplicasetsByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListReplicasetsByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListReplicasetsByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListReplicasetsByLabelsUsingGETOK) GetPayload() []*models.ReplicasetDTO {
	return o.Payload
}

func (o *ListReplicasetsByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReplicasetsByLabelsUsingGETUnauthorized creates a ListReplicasetsByLabelsUsingGETUnauthorized with default headers values
func NewListReplicasetsByLabelsUsingGETUnauthorized() *ListReplicasetsByLabelsUsingGETUnauthorized {
	return &ListReplicasetsByLabelsUsingGETUnauthorized{}
}

/*
ListReplicasetsByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListReplicasetsByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list replicasets by labels using g e t unauthorized response has a 2xx status code
func (o *ListReplicasetsByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list replicasets by labels using g e t unauthorized response has a 3xx status code
func (o *ListReplicasetsByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels using g e t unauthorized response has a 4xx status code
func (o *ListReplicasetsByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list replicasets by labels using g e t unauthorized response has a 5xx status code
func (o *ListReplicasetsByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels using g e t unauthorized response a status code equal to that given
func (o *ListReplicasetsByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list replicasets by labels using g e t unauthorized response
func (o *ListReplicasetsByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListReplicasetsByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListReplicasetsByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListReplicasetsByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListReplicasetsByLabelsUsingGETForbidden creates a ListReplicasetsByLabelsUsingGETForbidden with default headers values
func NewListReplicasetsByLabelsUsingGETForbidden() *ListReplicasetsByLabelsUsingGETForbidden {
	return &ListReplicasetsByLabelsUsingGETForbidden{}
}

/*
ListReplicasetsByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListReplicasetsByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list replicasets by labels using g e t forbidden response has a 2xx status code
func (o *ListReplicasetsByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list replicasets by labels using g e t forbidden response has a 3xx status code
func (o *ListReplicasetsByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels using g e t forbidden response has a 4xx status code
func (o *ListReplicasetsByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list replicasets by labels using g e t forbidden response has a 5xx status code
func (o *ListReplicasetsByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels using g e t forbidden response a status code equal to that given
func (o *ListReplicasetsByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list replicasets by labels using g e t forbidden response
func (o *ListReplicasetsByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListReplicasetsByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETForbidden", 403)
}

func (o *ListReplicasetsByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETForbidden", 403)
}

func (o *ListReplicasetsByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListReplicasetsByLabelsUsingGETNotFound creates a ListReplicasetsByLabelsUsingGETNotFound with default headers values
func NewListReplicasetsByLabelsUsingGETNotFound() *ListReplicasetsByLabelsUsingGETNotFound {
	return &ListReplicasetsByLabelsUsingGETNotFound{}
}

/*
ListReplicasetsByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListReplicasetsByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list replicasets by labels using g e t not found response has a 2xx status code
func (o *ListReplicasetsByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list replicasets by labels using g e t not found response has a 3xx status code
func (o *ListReplicasetsByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels using g e t not found response has a 4xx status code
func (o *ListReplicasetsByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list replicasets by labels using g e t not found response has a 5xx status code
func (o *ListReplicasetsByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels using g e t not found response a status code equal to that given
func (o *ListReplicasetsByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list replicasets by labels using g e t not found response
func (o *ListReplicasetsByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListReplicasetsByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETNotFound", 404)
}

func (o *ListReplicasetsByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsUsingGETNotFound", 404)
}

func (o *ListReplicasetsByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
