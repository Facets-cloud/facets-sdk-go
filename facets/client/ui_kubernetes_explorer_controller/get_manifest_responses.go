// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetManifestReader is a Reader for the GetManifest structure.
type GetManifestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetManifestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetManifestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetManifestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetManifestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetManifestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetManifestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest] getManifest", response, response.Code())
	}
}

// NewGetManifestOK creates a GetManifestOK with default headers values
func NewGetManifestOK() *GetManifestOK {
	return &GetManifestOK{}
}

/*
GetManifestOK describes a response with status code 200, with default header values.

OK
*/
type GetManifestOK struct {
	Payload string
}

// IsSuccess returns true when this get manifest o k response has a 2xx status code
func (o *GetManifestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get manifest o k response has a 3xx status code
func (o *GetManifestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest o k response has a 4xx status code
func (o *GetManifestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get manifest o k response has a 5xx status code
func (o *GetManifestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest o k response a status code equal to that given
func (o *GetManifestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get manifest o k response
func (o *GetManifestOK) Code() int {
	return 200
}

func (o *GetManifestOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestOK %s", 200, payload)
}

func (o *GetManifestOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestOK %s", 200, payload)
}

func (o *GetManifestOK) GetPayload() string {
	return o.Payload
}

func (o *GetManifestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManifestBadRequest creates a GetManifestBadRequest with default headers values
func NewGetManifestBadRequest() *GetManifestBadRequest {
	return &GetManifestBadRequest{}
}

/*
GetManifestBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetManifestBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get manifest bad request response has a 2xx status code
func (o *GetManifestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest bad request response has a 3xx status code
func (o *GetManifestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest bad request response has a 4xx status code
func (o *GetManifestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get manifest bad request response has a 5xx status code
func (o *GetManifestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest bad request response a status code equal to that given
func (o *GetManifestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get manifest bad request response
func (o *GetManifestBadRequest) Code() int {
	return 400
}

func (o *GetManifestBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestBadRequest %s", 400, payload)
}

func (o *GetManifestBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestBadRequest %s", 400, payload)
}

func (o *GetManifestBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetManifestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManifestNotFound creates a GetManifestNotFound with default headers values
func NewGetManifestNotFound() *GetManifestNotFound {
	return &GetManifestNotFound{}
}

/*
GetManifestNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetManifestNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get manifest not found response has a 2xx status code
func (o *GetManifestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest not found response has a 3xx status code
func (o *GetManifestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest not found response has a 4xx status code
func (o *GetManifestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get manifest not found response has a 5xx status code
func (o *GetManifestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest not found response a status code equal to that given
func (o *GetManifestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get manifest not found response
func (o *GetManifestNotFound) Code() int {
	return 404
}

func (o *GetManifestNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestNotFound %s", 404, payload)
}

func (o *GetManifestNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestNotFound %s", 404, payload)
}

func (o *GetManifestNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetManifestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManifestMethodNotAllowed creates a GetManifestMethodNotAllowed with default headers values
func NewGetManifestMethodNotAllowed() *GetManifestMethodNotAllowed {
	return &GetManifestMethodNotAllowed{}
}

/*
GetManifestMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetManifestMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get manifest method not allowed response has a 2xx status code
func (o *GetManifestMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest method not allowed response has a 3xx status code
func (o *GetManifestMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest method not allowed response has a 4xx status code
func (o *GetManifestMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get manifest method not allowed response has a 5xx status code
func (o *GetManifestMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest method not allowed response a status code equal to that given
func (o *GetManifestMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get manifest method not allowed response
func (o *GetManifestMethodNotAllowed) Code() int {
	return 405
}

func (o *GetManifestMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestMethodNotAllowed %s", 405, payload)
}

func (o *GetManifestMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestMethodNotAllowed %s", 405, payload)
}

func (o *GetManifestMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetManifestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManifestInternalServerError creates a GetManifestInternalServerError with default headers values
func NewGetManifestInternalServerError() *GetManifestInternalServerError {
	return &GetManifestInternalServerError{}
}

/*
GetManifestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetManifestInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get manifest internal server error response has a 2xx status code
func (o *GetManifestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest internal server error response has a 3xx status code
func (o *GetManifestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest internal server error response has a 4xx status code
func (o *GetManifestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get manifest internal server error response has a 5xx status code
func (o *GetManifestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get manifest internal server error response a status code equal to that given
func (o *GetManifestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get manifest internal server error response
func (o *GetManifestInternalServerError) Code() int {
	return 500
}

func (o *GetManifestInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestInternalServerError %s", 500, payload)
}

func (o *GetManifestInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestInternalServerError %s", 500, payload)
}

func (o *GetManifestInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetManifestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
