// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListPVByLabelsReader is a Reader for the ListPVByLabels structure.
type ListPVByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPVByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPVByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPVByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPVByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListPVByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListPVByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv] listPVByLabels", response, response.Code())
	}
}

// NewListPVByLabelsOK creates a ListPVByLabelsOK with default headers values
func NewListPVByLabelsOK() *ListPVByLabelsOK {
	return &ListPVByLabelsOK{}
}

/*
ListPVByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListPVByLabelsOK struct {
	Payload []*models.PersistentVolumeDTO
}

// IsSuccess returns true when this list p v by labels o k response has a 2xx status code
func (o *ListPVByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list p v by labels o k response has a 3xx status code
func (o *ListPVByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v by labels o k response has a 4xx status code
func (o *ListPVByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list p v by labels o k response has a 5xx status code
func (o *ListPVByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v by labels o k response a status code equal to that given
func (o *ListPVByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list p v by labels o k response
func (o *ListPVByLabelsOK) Code() int {
	return 200
}

func (o *ListPVByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsOK %s", 200, payload)
}

func (o *ListPVByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsOK %s", 200, payload)
}

func (o *ListPVByLabelsOK) GetPayload() []*models.PersistentVolumeDTO {
	return o.Payload
}

func (o *ListPVByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVByLabelsBadRequest creates a ListPVByLabelsBadRequest with default headers values
func NewListPVByLabelsBadRequest() *ListPVByLabelsBadRequest {
	return &ListPVByLabelsBadRequest{}
}

/*
ListPVByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListPVByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v by labels bad request response has a 2xx status code
func (o *ListPVByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v by labels bad request response has a 3xx status code
func (o *ListPVByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v by labels bad request response has a 4xx status code
func (o *ListPVByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v by labels bad request response has a 5xx status code
func (o *ListPVByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v by labels bad request response a status code equal to that given
func (o *ListPVByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list p v by labels bad request response
func (o *ListPVByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListPVByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsBadRequest %s", 400, payload)
}

func (o *ListPVByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsBadRequest %s", 400, payload)
}

func (o *ListPVByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVByLabelsNotFound creates a ListPVByLabelsNotFound with default headers values
func NewListPVByLabelsNotFound() *ListPVByLabelsNotFound {
	return &ListPVByLabelsNotFound{}
}

/*
ListPVByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListPVByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v by labels not found response has a 2xx status code
func (o *ListPVByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v by labels not found response has a 3xx status code
func (o *ListPVByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v by labels not found response has a 4xx status code
func (o *ListPVByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v by labels not found response has a 5xx status code
func (o *ListPVByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v by labels not found response a status code equal to that given
func (o *ListPVByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list p v by labels not found response
func (o *ListPVByLabelsNotFound) Code() int {
	return 404
}

func (o *ListPVByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsNotFound %s", 404, payload)
}

func (o *ListPVByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsNotFound %s", 404, payload)
}

func (o *ListPVByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVByLabelsMethodNotAllowed creates a ListPVByLabelsMethodNotAllowed with default headers values
func NewListPVByLabelsMethodNotAllowed() *ListPVByLabelsMethodNotAllowed {
	return &ListPVByLabelsMethodNotAllowed{}
}

/*
ListPVByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListPVByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v by labels method not allowed response has a 2xx status code
func (o *ListPVByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v by labels method not allowed response has a 3xx status code
func (o *ListPVByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v by labels method not allowed response has a 4xx status code
func (o *ListPVByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v by labels method not allowed response has a 5xx status code
func (o *ListPVByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v by labels method not allowed response a status code equal to that given
func (o *ListPVByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list p v by labels method not allowed response
func (o *ListPVByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListPVByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListPVByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListPVByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVByLabelsInternalServerError creates a ListPVByLabelsInternalServerError with default headers values
func NewListPVByLabelsInternalServerError() *ListPVByLabelsInternalServerError {
	return &ListPVByLabelsInternalServerError{}
}

/*
ListPVByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListPVByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v by labels internal server error response has a 2xx status code
func (o *ListPVByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v by labels internal server error response has a 3xx status code
func (o *ListPVByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v by labels internal server error response has a 4xx status code
func (o *ListPVByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list p v by labels internal server error response has a 5xx status code
func (o *ListPVByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list p v by labels internal server error response a status code equal to that given
func (o *ListPVByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list p v by labels internal server error response
func (o *ListPVByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListPVByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsInternalServerError %s", 500, payload)
}

func (o *ListPVByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pv][%d] listPVByLabelsInternalServerError %s", 500, payload)
}

func (o *ListPVByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
