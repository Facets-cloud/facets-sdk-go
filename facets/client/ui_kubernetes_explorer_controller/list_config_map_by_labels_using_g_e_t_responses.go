// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListConfigMapByLabelsUsingGETReader is a Reader for the ListConfigMapByLabelsUsingGET structure.
type ListConfigMapByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListConfigMapByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListConfigMapByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListConfigMapByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListConfigMapByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListConfigMapByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps] listConfigMapByLabelsUsingGET", response, response.Code())
	}
}

// NewListConfigMapByLabelsUsingGETOK creates a ListConfigMapByLabelsUsingGETOK with default headers values
func NewListConfigMapByLabelsUsingGETOK() *ListConfigMapByLabelsUsingGETOK {
	return &ListConfigMapByLabelsUsingGETOK{}
}

/*
ListConfigMapByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListConfigMapByLabelsUsingGETOK struct {
	Payload []*models.ConfigMapDTO
}

// IsSuccess returns true when this list config map by labels using g e t o k response has a 2xx status code
func (o *ListConfigMapByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list config map by labels using g e t o k response has a 3xx status code
func (o *ListConfigMapByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels using g e t o k response has a 4xx status code
func (o *ListConfigMapByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list config map by labels using g e t o k response has a 5xx status code
func (o *ListConfigMapByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels using g e t o k response a status code equal to that given
func (o *ListConfigMapByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list config map by labels using g e t o k response
func (o *ListConfigMapByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListConfigMapByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListConfigMapByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListConfigMapByLabelsUsingGETOK) GetPayload() []*models.ConfigMapDTO {
	return o.Payload
}

func (o *ListConfigMapByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigMapByLabelsUsingGETUnauthorized creates a ListConfigMapByLabelsUsingGETUnauthorized with default headers values
func NewListConfigMapByLabelsUsingGETUnauthorized() *ListConfigMapByLabelsUsingGETUnauthorized {
	return &ListConfigMapByLabelsUsingGETUnauthorized{}
}

/*
ListConfigMapByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListConfigMapByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list config map by labels using g e t unauthorized response has a 2xx status code
func (o *ListConfigMapByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config map by labels using g e t unauthorized response has a 3xx status code
func (o *ListConfigMapByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels using g e t unauthorized response has a 4xx status code
func (o *ListConfigMapByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config map by labels using g e t unauthorized response has a 5xx status code
func (o *ListConfigMapByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels using g e t unauthorized response a status code equal to that given
func (o *ListConfigMapByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list config map by labels using g e t unauthorized response
func (o *ListConfigMapByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListConfigMapByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETUnauthorized", 401)
}

func (o *ListConfigMapByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETUnauthorized", 401)
}

func (o *ListConfigMapByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConfigMapByLabelsUsingGETForbidden creates a ListConfigMapByLabelsUsingGETForbidden with default headers values
func NewListConfigMapByLabelsUsingGETForbidden() *ListConfigMapByLabelsUsingGETForbidden {
	return &ListConfigMapByLabelsUsingGETForbidden{}
}

/*
ListConfigMapByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListConfigMapByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list config map by labels using g e t forbidden response has a 2xx status code
func (o *ListConfigMapByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config map by labels using g e t forbidden response has a 3xx status code
func (o *ListConfigMapByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels using g e t forbidden response has a 4xx status code
func (o *ListConfigMapByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config map by labels using g e t forbidden response has a 5xx status code
func (o *ListConfigMapByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels using g e t forbidden response a status code equal to that given
func (o *ListConfigMapByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list config map by labels using g e t forbidden response
func (o *ListConfigMapByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListConfigMapByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETForbidden", 403)
}

func (o *ListConfigMapByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETForbidden", 403)
}

func (o *ListConfigMapByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListConfigMapByLabelsUsingGETNotFound creates a ListConfigMapByLabelsUsingGETNotFound with default headers values
func NewListConfigMapByLabelsUsingGETNotFound() *ListConfigMapByLabelsUsingGETNotFound {
	return &ListConfigMapByLabelsUsingGETNotFound{}
}

/*
ListConfigMapByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListConfigMapByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list config map by labels using g e t not found response has a 2xx status code
func (o *ListConfigMapByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config map by labels using g e t not found response has a 3xx status code
func (o *ListConfigMapByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels using g e t not found response has a 4xx status code
func (o *ListConfigMapByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config map by labels using g e t not found response has a 5xx status code
func (o *ListConfigMapByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels using g e t not found response a status code equal to that given
func (o *ListConfigMapByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list config map by labels using g e t not found response
func (o *ListConfigMapByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListConfigMapByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETNotFound", 404)
}

func (o *ListConfigMapByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsUsingGETNotFound", 404)
}

func (o *ListConfigMapByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
