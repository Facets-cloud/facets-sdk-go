// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListIngressesByLabelsReader is a Reader for the ListIngressesByLabels structure.
type ListIngressesByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIngressesByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIngressesByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIngressesByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListIngressesByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListIngressesByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListIngressesByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses] listIngressesByLabels", response, response.Code())
	}
}

// NewListIngressesByLabelsOK creates a ListIngressesByLabelsOK with default headers values
func NewListIngressesByLabelsOK() *ListIngressesByLabelsOK {
	return &ListIngressesByLabelsOK{}
}

/*
ListIngressesByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListIngressesByLabelsOK struct {
	Payload []*models.IngressDTO
}

// IsSuccess returns true when this list ingresses by labels o k response has a 2xx status code
func (o *ListIngressesByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list ingresses by labels o k response has a 3xx status code
func (o *ListIngressesByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingresses by labels o k response has a 4xx status code
func (o *ListIngressesByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list ingresses by labels o k response has a 5xx status code
func (o *ListIngressesByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list ingresses by labels o k response a status code equal to that given
func (o *ListIngressesByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list ingresses by labels o k response
func (o *ListIngressesByLabelsOK) Code() int {
	return 200
}

func (o *ListIngressesByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsOK %s", 200, payload)
}

func (o *ListIngressesByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsOK %s", 200, payload)
}

func (o *ListIngressesByLabelsOK) GetPayload() []*models.IngressDTO {
	return o.Payload
}

func (o *ListIngressesByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIngressesByLabelsBadRequest creates a ListIngressesByLabelsBadRequest with default headers values
func NewListIngressesByLabelsBadRequest() *ListIngressesByLabelsBadRequest {
	return &ListIngressesByLabelsBadRequest{}
}

/*
ListIngressesByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListIngressesByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list ingresses by labels bad request response has a 2xx status code
func (o *ListIngressesByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list ingresses by labels bad request response has a 3xx status code
func (o *ListIngressesByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingresses by labels bad request response has a 4xx status code
func (o *ListIngressesByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list ingresses by labels bad request response has a 5xx status code
func (o *ListIngressesByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list ingresses by labels bad request response a status code equal to that given
func (o *ListIngressesByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list ingresses by labels bad request response
func (o *ListIngressesByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListIngressesByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsBadRequest %s", 400, payload)
}

func (o *ListIngressesByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsBadRequest %s", 400, payload)
}

func (o *ListIngressesByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListIngressesByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIngressesByLabelsNotFound creates a ListIngressesByLabelsNotFound with default headers values
func NewListIngressesByLabelsNotFound() *ListIngressesByLabelsNotFound {
	return &ListIngressesByLabelsNotFound{}
}

/*
ListIngressesByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListIngressesByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list ingresses by labels not found response has a 2xx status code
func (o *ListIngressesByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list ingresses by labels not found response has a 3xx status code
func (o *ListIngressesByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingresses by labels not found response has a 4xx status code
func (o *ListIngressesByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list ingresses by labels not found response has a 5xx status code
func (o *ListIngressesByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list ingresses by labels not found response a status code equal to that given
func (o *ListIngressesByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list ingresses by labels not found response
func (o *ListIngressesByLabelsNotFound) Code() int {
	return 404
}

func (o *ListIngressesByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsNotFound %s", 404, payload)
}

func (o *ListIngressesByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsNotFound %s", 404, payload)
}

func (o *ListIngressesByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListIngressesByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIngressesByLabelsMethodNotAllowed creates a ListIngressesByLabelsMethodNotAllowed with default headers values
func NewListIngressesByLabelsMethodNotAllowed() *ListIngressesByLabelsMethodNotAllowed {
	return &ListIngressesByLabelsMethodNotAllowed{}
}

/*
ListIngressesByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListIngressesByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list ingresses by labels method not allowed response has a 2xx status code
func (o *ListIngressesByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list ingresses by labels method not allowed response has a 3xx status code
func (o *ListIngressesByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingresses by labels method not allowed response has a 4xx status code
func (o *ListIngressesByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list ingresses by labels method not allowed response has a 5xx status code
func (o *ListIngressesByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list ingresses by labels method not allowed response a status code equal to that given
func (o *ListIngressesByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list ingresses by labels method not allowed response
func (o *ListIngressesByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListIngressesByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListIngressesByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListIngressesByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListIngressesByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIngressesByLabelsInternalServerError creates a ListIngressesByLabelsInternalServerError with default headers values
func NewListIngressesByLabelsInternalServerError() *ListIngressesByLabelsInternalServerError {
	return &ListIngressesByLabelsInternalServerError{}
}

/*
ListIngressesByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListIngressesByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list ingresses by labels internal server error response has a 2xx status code
func (o *ListIngressesByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list ingresses by labels internal server error response has a 3xx status code
func (o *ListIngressesByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list ingresses by labels internal server error response has a 4xx status code
func (o *ListIngressesByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list ingresses by labels internal server error response has a 5xx status code
func (o *ListIngressesByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list ingresses by labels internal server error response a status code equal to that given
func (o *ListIngressesByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list ingresses by labels internal server error response
func (o *ListIngressesByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListIngressesByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsInternalServerError %s", 500, payload)
}

func (o *ListIngressesByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingresses][%d] listIngressesByLabelsInternalServerError %s", 500, payload)
}

func (o *ListIngressesByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListIngressesByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
