// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListPVCByLabelsReader is a Reader for the ListPVCByLabels structure.
type ListPVCByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPVCByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPVCByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPVCByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPVCByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListPVCByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListPVCByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc] listPVCByLabels", response, response.Code())
	}
}

// NewListPVCByLabelsOK creates a ListPVCByLabelsOK with default headers values
func NewListPVCByLabelsOK() *ListPVCByLabelsOK {
	return &ListPVCByLabelsOK{}
}

/*
ListPVCByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListPVCByLabelsOK struct {
	Payload []*models.PersistentVolumeClaimDTO
}

// IsSuccess returns true when this list p v c by labels o k response has a 2xx status code
func (o *ListPVCByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list p v c by labels o k response has a 3xx status code
func (o *ListPVCByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels o k response has a 4xx status code
func (o *ListPVCByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list p v c by labels o k response has a 5xx status code
func (o *ListPVCByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels o k response a status code equal to that given
func (o *ListPVCByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list p v c by labels o k response
func (o *ListPVCByLabelsOK) Code() int {
	return 200
}

func (o *ListPVCByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsOK %s", 200, payload)
}

func (o *ListPVCByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsOK %s", 200, payload)
}

func (o *ListPVCByLabelsOK) GetPayload() []*models.PersistentVolumeClaimDTO {
	return o.Payload
}

func (o *ListPVCByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVCByLabelsBadRequest creates a ListPVCByLabelsBadRequest with default headers values
func NewListPVCByLabelsBadRequest() *ListPVCByLabelsBadRequest {
	return &ListPVCByLabelsBadRequest{}
}

/*
ListPVCByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListPVCByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v c by labels bad request response has a 2xx status code
func (o *ListPVCByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v c by labels bad request response has a 3xx status code
func (o *ListPVCByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels bad request response has a 4xx status code
func (o *ListPVCByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v c by labels bad request response has a 5xx status code
func (o *ListPVCByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels bad request response a status code equal to that given
func (o *ListPVCByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list p v c by labels bad request response
func (o *ListPVCByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListPVCByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsBadRequest %s", 400, payload)
}

func (o *ListPVCByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsBadRequest %s", 400, payload)
}

func (o *ListPVCByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVCByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVCByLabelsNotFound creates a ListPVCByLabelsNotFound with default headers values
func NewListPVCByLabelsNotFound() *ListPVCByLabelsNotFound {
	return &ListPVCByLabelsNotFound{}
}

/*
ListPVCByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListPVCByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v c by labels not found response has a 2xx status code
func (o *ListPVCByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v c by labels not found response has a 3xx status code
func (o *ListPVCByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels not found response has a 4xx status code
func (o *ListPVCByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v c by labels not found response has a 5xx status code
func (o *ListPVCByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels not found response a status code equal to that given
func (o *ListPVCByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list p v c by labels not found response
func (o *ListPVCByLabelsNotFound) Code() int {
	return 404
}

func (o *ListPVCByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsNotFound %s", 404, payload)
}

func (o *ListPVCByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsNotFound %s", 404, payload)
}

func (o *ListPVCByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVCByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVCByLabelsMethodNotAllowed creates a ListPVCByLabelsMethodNotAllowed with default headers values
func NewListPVCByLabelsMethodNotAllowed() *ListPVCByLabelsMethodNotAllowed {
	return &ListPVCByLabelsMethodNotAllowed{}
}

/*
ListPVCByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListPVCByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v c by labels method not allowed response has a 2xx status code
func (o *ListPVCByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v c by labels method not allowed response has a 3xx status code
func (o *ListPVCByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels method not allowed response has a 4xx status code
func (o *ListPVCByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v c by labels method not allowed response has a 5xx status code
func (o *ListPVCByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels method not allowed response a status code equal to that given
func (o *ListPVCByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list p v c by labels method not allowed response
func (o *ListPVCByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListPVCByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListPVCByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListPVCByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVCByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVCByLabelsInternalServerError creates a ListPVCByLabelsInternalServerError with default headers values
func NewListPVCByLabelsInternalServerError() *ListPVCByLabelsInternalServerError {
	return &ListPVCByLabelsInternalServerError{}
}

/*
ListPVCByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListPVCByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list p v c by labels internal server error response has a 2xx status code
func (o *ListPVCByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v c by labels internal server error response has a 3xx status code
func (o *ListPVCByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels internal server error response has a 4xx status code
func (o *ListPVCByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list p v c by labels internal server error response has a 5xx status code
func (o *ListPVCByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list p v c by labels internal server error response a status code equal to that given
func (o *ListPVCByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list p v c by labels internal server error response
func (o *ListPVCByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListPVCByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsInternalServerError %s", 500, payload)
}

func (o *ListPVCByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsInternalServerError %s", 500, payload)
}

func (o *ListPVCByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPVCByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
