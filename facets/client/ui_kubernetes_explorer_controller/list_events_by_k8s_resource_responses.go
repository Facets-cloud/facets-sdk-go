// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListEventsByK8sResourceReader is a Reader for the ListEventsByK8sResource structure.
type ListEventsByK8sResourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEventsByK8sResourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListEventsByK8sResourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListEventsByK8sResourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListEventsByK8sResourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListEventsByK8sResourceMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListEventsByK8sResourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events] listEventsByK8sResource", response, response.Code())
	}
}

// NewListEventsByK8sResourceOK creates a ListEventsByK8sResourceOK with default headers values
func NewListEventsByK8sResourceOK() *ListEventsByK8sResourceOK {
	return &ListEventsByK8sResourceOK{}
}

/*
ListEventsByK8sResourceOK describes a response with status code 200, with default header values.

OK
*/
type ListEventsByK8sResourceOK struct {
	Payload []*models.EventDTO
}

// IsSuccess returns true when this list events by k8s resource o k response has a 2xx status code
func (o *ListEventsByK8sResourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list events by k8s resource o k response has a 3xx status code
func (o *ListEventsByK8sResourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource o k response has a 4xx status code
func (o *ListEventsByK8sResourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list events by k8s resource o k response has a 5xx status code
func (o *ListEventsByK8sResourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource o k response a status code equal to that given
func (o *ListEventsByK8sResourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list events by k8s resource o k response
func (o *ListEventsByK8sResourceOK) Code() int {
	return 200
}

func (o *ListEventsByK8sResourceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceOK %s", 200, payload)
}

func (o *ListEventsByK8sResourceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceOK %s", 200, payload)
}

func (o *ListEventsByK8sResourceOK) GetPayload() []*models.EventDTO {
	return o.Payload
}

func (o *ListEventsByK8sResourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventsByK8sResourceBadRequest creates a ListEventsByK8sResourceBadRequest with default headers values
func NewListEventsByK8sResourceBadRequest() *ListEventsByK8sResourceBadRequest {
	return &ListEventsByK8sResourceBadRequest{}
}

/*
ListEventsByK8sResourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListEventsByK8sResourceBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list events by k8s resource bad request response has a 2xx status code
func (o *ListEventsByK8sResourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list events by k8s resource bad request response has a 3xx status code
func (o *ListEventsByK8sResourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource bad request response has a 4xx status code
func (o *ListEventsByK8sResourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list events by k8s resource bad request response has a 5xx status code
func (o *ListEventsByK8sResourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource bad request response a status code equal to that given
func (o *ListEventsByK8sResourceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list events by k8s resource bad request response
func (o *ListEventsByK8sResourceBadRequest) Code() int {
	return 400
}

func (o *ListEventsByK8sResourceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceBadRequest %s", 400, payload)
}

func (o *ListEventsByK8sResourceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceBadRequest %s", 400, payload)
}

func (o *ListEventsByK8sResourceBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListEventsByK8sResourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventsByK8sResourceNotFound creates a ListEventsByK8sResourceNotFound with default headers values
func NewListEventsByK8sResourceNotFound() *ListEventsByK8sResourceNotFound {
	return &ListEventsByK8sResourceNotFound{}
}

/*
ListEventsByK8sResourceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListEventsByK8sResourceNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list events by k8s resource not found response has a 2xx status code
func (o *ListEventsByK8sResourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list events by k8s resource not found response has a 3xx status code
func (o *ListEventsByK8sResourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource not found response has a 4xx status code
func (o *ListEventsByK8sResourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list events by k8s resource not found response has a 5xx status code
func (o *ListEventsByK8sResourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource not found response a status code equal to that given
func (o *ListEventsByK8sResourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list events by k8s resource not found response
func (o *ListEventsByK8sResourceNotFound) Code() int {
	return 404
}

func (o *ListEventsByK8sResourceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceNotFound %s", 404, payload)
}

func (o *ListEventsByK8sResourceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceNotFound %s", 404, payload)
}

func (o *ListEventsByK8sResourceNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListEventsByK8sResourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventsByK8sResourceMethodNotAllowed creates a ListEventsByK8sResourceMethodNotAllowed with default headers values
func NewListEventsByK8sResourceMethodNotAllowed() *ListEventsByK8sResourceMethodNotAllowed {
	return &ListEventsByK8sResourceMethodNotAllowed{}
}

/*
ListEventsByK8sResourceMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListEventsByK8sResourceMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list events by k8s resource method not allowed response has a 2xx status code
func (o *ListEventsByK8sResourceMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list events by k8s resource method not allowed response has a 3xx status code
func (o *ListEventsByK8sResourceMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource method not allowed response has a 4xx status code
func (o *ListEventsByK8sResourceMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list events by k8s resource method not allowed response has a 5xx status code
func (o *ListEventsByK8sResourceMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource method not allowed response a status code equal to that given
func (o *ListEventsByK8sResourceMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list events by k8s resource method not allowed response
func (o *ListEventsByK8sResourceMethodNotAllowed) Code() int {
	return 405
}

func (o *ListEventsByK8sResourceMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceMethodNotAllowed %s", 405, payload)
}

func (o *ListEventsByK8sResourceMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceMethodNotAllowed %s", 405, payload)
}

func (o *ListEventsByK8sResourceMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListEventsByK8sResourceMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventsByK8sResourceInternalServerError creates a ListEventsByK8sResourceInternalServerError with default headers values
func NewListEventsByK8sResourceInternalServerError() *ListEventsByK8sResourceInternalServerError {
	return &ListEventsByK8sResourceInternalServerError{}
}

/*
ListEventsByK8sResourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListEventsByK8sResourceInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list events by k8s resource internal server error response has a 2xx status code
func (o *ListEventsByK8sResourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list events by k8s resource internal server error response has a 3xx status code
func (o *ListEventsByK8sResourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource internal server error response has a 4xx status code
func (o *ListEventsByK8sResourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list events by k8s resource internal server error response has a 5xx status code
func (o *ListEventsByK8sResourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list events by k8s resource internal server error response a status code equal to that given
func (o *ListEventsByK8sResourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list events by k8s resource internal server error response
func (o *ListEventsByK8sResourceInternalServerError) Code() int {
	return 500
}

func (o *ListEventsByK8sResourceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceInternalServerError %s", 500, payload)
}

func (o *ListEventsByK8sResourceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceInternalServerError %s", 500, payload)
}

func (o *ListEventsByK8sResourceInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListEventsByK8sResourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
