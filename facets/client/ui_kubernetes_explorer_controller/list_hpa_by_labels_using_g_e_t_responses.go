// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListHpaByLabelsUsingGETReader is a Reader for the ListHpaByLabelsUsingGET structure.
type ListHpaByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListHpaByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListHpaByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListHpaByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListHpaByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListHpaByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa] listHpaByLabelsUsingGET", response, response.Code())
	}
}

// NewListHpaByLabelsUsingGETOK creates a ListHpaByLabelsUsingGETOK with default headers values
func NewListHpaByLabelsUsingGETOK() *ListHpaByLabelsUsingGETOK {
	return &ListHpaByLabelsUsingGETOK{}
}

/*
ListHpaByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListHpaByLabelsUsingGETOK struct {
	Payload []*models.HorizontalPodAutoscalerDTO
}

// IsSuccess returns true when this list hpa by labels using g e t o k response has a 2xx status code
func (o *ListHpaByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list hpa by labels using g e t o k response has a 3xx status code
func (o *ListHpaByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list hpa by labels using g e t o k response has a 4xx status code
func (o *ListHpaByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list hpa by labels using g e t o k response has a 5xx status code
func (o *ListHpaByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list hpa by labels using g e t o k response a status code equal to that given
func (o *ListHpaByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list hpa by labels using g e t o k response
func (o *ListHpaByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListHpaByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListHpaByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListHpaByLabelsUsingGETOK) GetPayload() []*models.HorizontalPodAutoscalerDTO {
	return o.Payload
}

func (o *ListHpaByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListHpaByLabelsUsingGETUnauthorized creates a ListHpaByLabelsUsingGETUnauthorized with default headers values
func NewListHpaByLabelsUsingGETUnauthorized() *ListHpaByLabelsUsingGETUnauthorized {
	return &ListHpaByLabelsUsingGETUnauthorized{}
}

/*
ListHpaByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListHpaByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list hpa by labels using g e t unauthorized response has a 2xx status code
func (o *ListHpaByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list hpa by labels using g e t unauthorized response has a 3xx status code
func (o *ListHpaByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list hpa by labels using g e t unauthorized response has a 4xx status code
func (o *ListHpaByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list hpa by labels using g e t unauthorized response has a 5xx status code
func (o *ListHpaByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list hpa by labels using g e t unauthorized response a status code equal to that given
func (o *ListHpaByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list hpa by labels using g e t unauthorized response
func (o *ListHpaByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListHpaByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETUnauthorized", 401)
}

func (o *ListHpaByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETUnauthorized", 401)
}

func (o *ListHpaByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListHpaByLabelsUsingGETForbidden creates a ListHpaByLabelsUsingGETForbidden with default headers values
func NewListHpaByLabelsUsingGETForbidden() *ListHpaByLabelsUsingGETForbidden {
	return &ListHpaByLabelsUsingGETForbidden{}
}

/*
ListHpaByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListHpaByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list hpa by labels using g e t forbidden response has a 2xx status code
func (o *ListHpaByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list hpa by labels using g e t forbidden response has a 3xx status code
func (o *ListHpaByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list hpa by labels using g e t forbidden response has a 4xx status code
func (o *ListHpaByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list hpa by labels using g e t forbidden response has a 5xx status code
func (o *ListHpaByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list hpa by labels using g e t forbidden response a status code equal to that given
func (o *ListHpaByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list hpa by labels using g e t forbidden response
func (o *ListHpaByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListHpaByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETForbidden", 403)
}

func (o *ListHpaByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETForbidden", 403)
}

func (o *ListHpaByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListHpaByLabelsUsingGETNotFound creates a ListHpaByLabelsUsingGETNotFound with default headers values
func NewListHpaByLabelsUsingGETNotFound() *ListHpaByLabelsUsingGETNotFound {
	return &ListHpaByLabelsUsingGETNotFound{}
}

/*
ListHpaByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListHpaByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list hpa by labels using g e t not found response has a 2xx status code
func (o *ListHpaByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list hpa by labels using g e t not found response has a 3xx status code
func (o *ListHpaByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list hpa by labels using g e t not found response has a 4xx status code
func (o *ListHpaByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list hpa by labels using g e t not found response has a 5xx status code
func (o *ListHpaByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list hpa by labels using g e t not found response a status code equal to that given
func (o *ListHpaByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list hpa by labels using g e t not found response
func (o *ListHpaByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListHpaByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETNotFound", 404)
}

func (o *ListHpaByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/hpa][%d] listHpaByLabelsUsingGETNotFound", 404)
}

func (o *ListHpaByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
