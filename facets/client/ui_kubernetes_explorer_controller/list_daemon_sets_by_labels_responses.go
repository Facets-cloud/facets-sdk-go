// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListDaemonSetsByLabelsReader is a Reader for the ListDaemonSetsByLabels structure.
type ListDaemonSetsByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDaemonSetsByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDaemonSetsByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListDaemonSetsByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDaemonSetsByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListDaemonSetsByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListDaemonSetsByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets] listDaemonSetsByLabels", response, response.Code())
	}
}

// NewListDaemonSetsByLabelsOK creates a ListDaemonSetsByLabelsOK with default headers values
func NewListDaemonSetsByLabelsOK() *ListDaemonSetsByLabelsOK {
	return &ListDaemonSetsByLabelsOK{}
}

/*
ListDaemonSetsByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListDaemonSetsByLabelsOK struct {
	Payload []*models.DaemonSetDTO
}

// IsSuccess returns true when this list daemon sets by labels o k response has a 2xx status code
func (o *ListDaemonSetsByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list daemon sets by labels o k response has a 3xx status code
func (o *ListDaemonSetsByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels o k response has a 4xx status code
func (o *ListDaemonSetsByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list daemon sets by labels o k response has a 5xx status code
func (o *ListDaemonSetsByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels o k response a status code equal to that given
func (o *ListDaemonSetsByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list daemon sets by labels o k response
func (o *ListDaemonSetsByLabelsOK) Code() int {
	return 200
}

func (o *ListDaemonSetsByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsOK %s", 200, payload)
}

func (o *ListDaemonSetsByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsOK %s", 200, payload)
}

func (o *ListDaemonSetsByLabelsOK) GetPayload() []*models.DaemonSetDTO {
	return o.Payload
}

func (o *ListDaemonSetsByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDaemonSetsByLabelsBadRequest creates a ListDaemonSetsByLabelsBadRequest with default headers values
func NewListDaemonSetsByLabelsBadRequest() *ListDaemonSetsByLabelsBadRequest {
	return &ListDaemonSetsByLabelsBadRequest{}
}

/*
ListDaemonSetsByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListDaemonSetsByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list daemon sets by labels bad request response has a 2xx status code
func (o *ListDaemonSetsByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list daemon sets by labels bad request response has a 3xx status code
func (o *ListDaemonSetsByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels bad request response has a 4xx status code
func (o *ListDaemonSetsByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list daemon sets by labels bad request response has a 5xx status code
func (o *ListDaemonSetsByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels bad request response a status code equal to that given
func (o *ListDaemonSetsByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list daemon sets by labels bad request response
func (o *ListDaemonSetsByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListDaemonSetsByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsBadRequest %s", 400, payload)
}

func (o *ListDaemonSetsByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsBadRequest %s", 400, payload)
}

func (o *ListDaemonSetsByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListDaemonSetsByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDaemonSetsByLabelsNotFound creates a ListDaemonSetsByLabelsNotFound with default headers values
func NewListDaemonSetsByLabelsNotFound() *ListDaemonSetsByLabelsNotFound {
	return &ListDaemonSetsByLabelsNotFound{}
}

/*
ListDaemonSetsByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListDaemonSetsByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list daemon sets by labels not found response has a 2xx status code
func (o *ListDaemonSetsByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list daemon sets by labels not found response has a 3xx status code
func (o *ListDaemonSetsByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels not found response has a 4xx status code
func (o *ListDaemonSetsByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list daemon sets by labels not found response has a 5xx status code
func (o *ListDaemonSetsByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels not found response a status code equal to that given
func (o *ListDaemonSetsByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list daemon sets by labels not found response
func (o *ListDaemonSetsByLabelsNotFound) Code() int {
	return 404
}

func (o *ListDaemonSetsByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsNotFound %s", 404, payload)
}

func (o *ListDaemonSetsByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsNotFound %s", 404, payload)
}

func (o *ListDaemonSetsByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListDaemonSetsByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDaemonSetsByLabelsMethodNotAllowed creates a ListDaemonSetsByLabelsMethodNotAllowed with default headers values
func NewListDaemonSetsByLabelsMethodNotAllowed() *ListDaemonSetsByLabelsMethodNotAllowed {
	return &ListDaemonSetsByLabelsMethodNotAllowed{}
}

/*
ListDaemonSetsByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListDaemonSetsByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list daemon sets by labels method not allowed response has a 2xx status code
func (o *ListDaemonSetsByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list daemon sets by labels method not allowed response has a 3xx status code
func (o *ListDaemonSetsByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels method not allowed response has a 4xx status code
func (o *ListDaemonSetsByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list daemon sets by labels method not allowed response has a 5xx status code
func (o *ListDaemonSetsByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels method not allowed response a status code equal to that given
func (o *ListDaemonSetsByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list daemon sets by labels method not allowed response
func (o *ListDaemonSetsByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListDaemonSetsByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListDaemonSetsByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListDaemonSetsByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListDaemonSetsByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDaemonSetsByLabelsInternalServerError creates a ListDaemonSetsByLabelsInternalServerError with default headers values
func NewListDaemonSetsByLabelsInternalServerError() *ListDaemonSetsByLabelsInternalServerError {
	return &ListDaemonSetsByLabelsInternalServerError{}
}

/*
ListDaemonSetsByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListDaemonSetsByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list daemon sets by labels internal server error response has a 2xx status code
func (o *ListDaemonSetsByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list daemon sets by labels internal server error response has a 3xx status code
func (o *ListDaemonSetsByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels internal server error response has a 4xx status code
func (o *ListDaemonSetsByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list daemon sets by labels internal server error response has a 5xx status code
func (o *ListDaemonSetsByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list daemon sets by labels internal server error response a status code equal to that given
func (o *ListDaemonSetsByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list daemon sets by labels internal server error response
func (o *ListDaemonSetsByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListDaemonSetsByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListDaemonSetsByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListDaemonSetsByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListDaemonSetsByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
