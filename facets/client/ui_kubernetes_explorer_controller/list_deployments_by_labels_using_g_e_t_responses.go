// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListDeploymentsByLabelsUsingGETReader is a Reader for the ListDeploymentsByLabelsUsingGET structure.
type ListDeploymentsByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDeploymentsByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDeploymentsByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListDeploymentsByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListDeploymentsByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDeploymentsByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments] listDeploymentsByLabelsUsingGET", response, response.Code())
	}
}

// NewListDeploymentsByLabelsUsingGETOK creates a ListDeploymentsByLabelsUsingGETOK with default headers values
func NewListDeploymentsByLabelsUsingGETOK() *ListDeploymentsByLabelsUsingGETOK {
	return &ListDeploymentsByLabelsUsingGETOK{}
}

/*
ListDeploymentsByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListDeploymentsByLabelsUsingGETOK struct {
	Payload []*models.DeploymentDTO
}

// IsSuccess returns true when this list deployments by labels using g e t o k response has a 2xx status code
func (o *ListDeploymentsByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list deployments by labels using g e t o k response has a 3xx status code
func (o *ListDeploymentsByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list deployments by labels using g e t o k response has a 4xx status code
func (o *ListDeploymentsByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list deployments by labels using g e t o k response has a 5xx status code
func (o *ListDeploymentsByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list deployments by labels using g e t o k response a status code equal to that given
func (o *ListDeploymentsByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list deployments by labels using g e t o k response
func (o *ListDeploymentsByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListDeploymentsByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListDeploymentsByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListDeploymentsByLabelsUsingGETOK) GetPayload() []*models.DeploymentDTO {
	return o.Payload
}

func (o *ListDeploymentsByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDeploymentsByLabelsUsingGETUnauthorized creates a ListDeploymentsByLabelsUsingGETUnauthorized with default headers values
func NewListDeploymentsByLabelsUsingGETUnauthorized() *ListDeploymentsByLabelsUsingGETUnauthorized {
	return &ListDeploymentsByLabelsUsingGETUnauthorized{}
}

/*
ListDeploymentsByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListDeploymentsByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list deployments by labels using g e t unauthorized response has a 2xx status code
func (o *ListDeploymentsByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list deployments by labels using g e t unauthorized response has a 3xx status code
func (o *ListDeploymentsByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list deployments by labels using g e t unauthorized response has a 4xx status code
func (o *ListDeploymentsByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list deployments by labels using g e t unauthorized response has a 5xx status code
func (o *ListDeploymentsByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list deployments by labels using g e t unauthorized response a status code equal to that given
func (o *ListDeploymentsByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list deployments by labels using g e t unauthorized response
func (o *ListDeploymentsByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListDeploymentsByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListDeploymentsByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListDeploymentsByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDeploymentsByLabelsUsingGETForbidden creates a ListDeploymentsByLabelsUsingGETForbidden with default headers values
func NewListDeploymentsByLabelsUsingGETForbidden() *ListDeploymentsByLabelsUsingGETForbidden {
	return &ListDeploymentsByLabelsUsingGETForbidden{}
}

/*
ListDeploymentsByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListDeploymentsByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list deployments by labels using g e t forbidden response has a 2xx status code
func (o *ListDeploymentsByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list deployments by labels using g e t forbidden response has a 3xx status code
func (o *ListDeploymentsByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list deployments by labels using g e t forbidden response has a 4xx status code
func (o *ListDeploymentsByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list deployments by labels using g e t forbidden response has a 5xx status code
func (o *ListDeploymentsByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list deployments by labels using g e t forbidden response a status code equal to that given
func (o *ListDeploymentsByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list deployments by labels using g e t forbidden response
func (o *ListDeploymentsByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListDeploymentsByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETForbidden", 403)
}

func (o *ListDeploymentsByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETForbidden", 403)
}

func (o *ListDeploymentsByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDeploymentsByLabelsUsingGETNotFound creates a ListDeploymentsByLabelsUsingGETNotFound with default headers values
func NewListDeploymentsByLabelsUsingGETNotFound() *ListDeploymentsByLabelsUsingGETNotFound {
	return &ListDeploymentsByLabelsUsingGETNotFound{}
}

/*
ListDeploymentsByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListDeploymentsByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list deployments by labels using g e t not found response has a 2xx status code
func (o *ListDeploymentsByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list deployments by labels using g e t not found response has a 3xx status code
func (o *ListDeploymentsByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list deployments by labels using g e t not found response has a 4xx status code
func (o *ListDeploymentsByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list deployments by labels using g e t not found response has a 5xx status code
func (o *ListDeploymentsByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list deployments by labels using g e t not found response a status code equal to that given
func (o *ListDeploymentsByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list deployments by labels using g e t not found response
func (o *ListDeploymentsByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListDeploymentsByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETNotFound", 404)
}

func (o *ListDeploymentsByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/deployments][%d] listDeploymentsByLabelsUsingGETNotFound", 404)
}

func (o *ListDeploymentsByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
