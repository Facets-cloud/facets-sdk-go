// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListServicesByLabelsReader is a Reader for the ListServicesByLabels structure.
type ListServicesByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListServicesByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListServicesByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListServicesByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListServicesByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListServicesByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListServicesByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services] listServicesByLabels", response, response.Code())
	}
}

// NewListServicesByLabelsOK creates a ListServicesByLabelsOK with default headers values
func NewListServicesByLabelsOK() *ListServicesByLabelsOK {
	return &ListServicesByLabelsOK{}
}

/*
ListServicesByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListServicesByLabelsOK struct {
	Payload []*models.ServiceDTO
}

// IsSuccess returns true when this list services by labels o k response has a 2xx status code
func (o *ListServicesByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list services by labels o k response has a 3xx status code
func (o *ListServicesByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services by labels o k response has a 4xx status code
func (o *ListServicesByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list services by labels o k response has a 5xx status code
func (o *ListServicesByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list services by labels o k response a status code equal to that given
func (o *ListServicesByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list services by labels o k response
func (o *ListServicesByLabelsOK) Code() int {
	return 200
}

func (o *ListServicesByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsOK %s", 200, payload)
}

func (o *ListServicesByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsOK %s", 200, payload)
}

func (o *ListServicesByLabelsOK) GetPayload() []*models.ServiceDTO {
	return o.Payload
}

func (o *ListServicesByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicesByLabelsBadRequest creates a ListServicesByLabelsBadRequest with default headers values
func NewListServicesByLabelsBadRequest() *ListServicesByLabelsBadRequest {
	return &ListServicesByLabelsBadRequest{}
}

/*
ListServicesByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListServicesByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list services by labels bad request response has a 2xx status code
func (o *ListServicesByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services by labels bad request response has a 3xx status code
func (o *ListServicesByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services by labels bad request response has a 4xx status code
func (o *ListServicesByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list services by labels bad request response has a 5xx status code
func (o *ListServicesByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list services by labels bad request response a status code equal to that given
func (o *ListServicesByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list services by labels bad request response
func (o *ListServicesByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListServicesByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsBadRequest %s", 400, payload)
}

func (o *ListServicesByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsBadRequest %s", 400, payload)
}

func (o *ListServicesByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListServicesByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicesByLabelsNotFound creates a ListServicesByLabelsNotFound with default headers values
func NewListServicesByLabelsNotFound() *ListServicesByLabelsNotFound {
	return &ListServicesByLabelsNotFound{}
}

/*
ListServicesByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListServicesByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list services by labels not found response has a 2xx status code
func (o *ListServicesByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services by labels not found response has a 3xx status code
func (o *ListServicesByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services by labels not found response has a 4xx status code
func (o *ListServicesByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list services by labels not found response has a 5xx status code
func (o *ListServicesByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list services by labels not found response a status code equal to that given
func (o *ListServicesByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list services by labels not found response
func (o *ListServicesByLabelsNotFound) Code() int {
	return 404
}

func (o *ListServicesByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsNotFound %s", 404, payload)
}

func (o *ListServicesByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsNotFound %s", 404, payload)
}

func (o *ListServicesByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListServicesByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicesByLabelsMethodNotAllowed creates a ListServicesByLabelsMethodNotAllowed with default headers values
func NewListServicesByLabelsMethodNotAllowed() *ListServicesByLabelsMethodNotAllowed {
	return &ListServicesByLabelsMethodNotAllowed{}
}

/*
ListServicesByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListServicesByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list services by labels method not allowed response has a 2xx status code
func (o *ListServicesByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services by labels method not allowed response has a 3xx status code
func (o *ListServicesByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services by labels method not allowed response has a 4xx status code
func (o *ListServicesByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list services by labels method not allowed response has a 5xx status code
func (o *ListServicesByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list services by labels method not allowed response a status code equal to that given
func (o *ListServicesByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list services by labels method not allowed response
func (o *ListServicesByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListServicesByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListServicesByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListServicesByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListServicesByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListServicesByLabelsInternalServerError creates a ListServicesByLabelsInternalServerError with default headers values
func NewListServicesByLabelsInternalServerError() *ListServicesByLabelsInternalServerError {
	return &ListServicesByLabelsInternalServerError{}
}

/*
ListServicesByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListServicesByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list services by labels internal server error response has a 2xx status code
func (o *ListServicesByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list services by labels internal server error response has a 3xx status code
func (o *ListServicesByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list services by labels internal server error response has a 4xx status code
func (o *ListServicesByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list services by labels internal server error response has a 5xx status code
func (o *ListServicesByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list services by labels internal server error response a status code equal to that given
func (o *ListServicesByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list services by labels internal server error response
func (o *ListServicesByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListServicesByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsInternalServerError %s", 500, payload)
}

func (o *ListServicesByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/services][%d] listServicesByLabelsInternalServerError %s", 500, payload)
}

func (o *ListServicesByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListServicesByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
