// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetConfigMapDataUsingGETReader is a Reader for the GetConfigMapDataUsingGET structure.
type GetConfigMapDataUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetConfigMapDataUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetConfigMapDataUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetConfigMapDataUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetConfigMapDataUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetConfigMapDataUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}] getConfigMapDataUsingGET", response, response.Code())
	}
}

// NewGetConfigMapDataUsingGETOK creates a GetConfigMapDataUsingGETOK with default headers values
func NewGetConfigMapDataUsingGETOK() *GetConfigMapDataUsingGETOK {
	return &GetConfigMapDataUsingGETOK{}
}

/*
GetConfigMapDataUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetConfigMapDataUsingGETOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get config map data using g e t o k response has a 2xx status code
func (o *GetConfigMapDataUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get config map data using g e t o k response has a 3xx status code
func (o *GetConfigMapDataUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config map data using g e t o k response has a 4xx status code
func (o *GetConfigMapDataUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get config map data using g e t o k response has a 5xx status code
func (o *GetConfigMapDataUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get config map data using g e t o k response a status code equal to that given
func (o *GetConfigMapDataUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get config map data using g e t o k response
func (o *GetConfigMapDataUsingGETOK) Code() int {
	return 200
}

func (o *GetConfigMapDataUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETOK %s", 200, payload)
}

func (o *GetConfigMapDataUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETOK %s", 200, payload)
}

func (o *GetConfigMapDataUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetConfigMapDataUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetConfigMapDataUsingGETUnauthorized creates a GetConfigMapDataUsingGETUnauthorized with default headers values
func NewGetConfigMapDataUsingGETUnauthorized() *GetConfigMapDataUsingGETUnauthorized {
	return &GetConfigMapDataUsingGETUnauthorized{}
}

/*
GetConfigMapDataUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetConfigMapDataUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get config map data using g e t unauthorized response has a 2xx status code
func (o *GetConfigMapDataUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config map data using g e t unauthorized response has a 3xx status code
func (o *GetConfigMapDataUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config map data using g e t unauthorized response has a 4xx status code
func (o *GetConfigMapDataUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config map data using g e t unauthorized response has a 5xx status code
func (o *GetConfigMapDataUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get config map data using g e t unauthorized response a status code equal to that given
func (o *GetConfigMapDataUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get config map data using g e t unauthorized response
func (o *GetConfigMapDataUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetConfigMapDataUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETUnauthorized", 401)
}

func (o *GetConfigMapDataUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETUnauthorized", 401)
}

func (o *GetConfigMapDataUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConfigMapDataUsingGETForbidden creates a GetConfigMapDataUsingGETForbidden with default headers values
func NewGetConfigMapDataUsingGETForbidden() *GetConfigMapDataUsingGETForbidden {
	return &GetConfigMapDataUsingGETForbidden{}
}

/*
GetConfigMapDataUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetConfigMapDataUsingGETForbidden struct {
}

// IsSuccess returns true when this get config map data using g e t forbidden response has a 2xx status code
func (o *GetConfigMapDataUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config map data using g e t forbidden response has a 3xx status code
func (o *GetConfigMapDataUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config map data using g e t forbidden response has a 4xx status code
func (o *GetConfigMapDataUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config map data using g e t forbidden response has a 5xx status code
func (o *GetConfigMapDataUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get config map data using g e t forbidden response a status code equal to that given
func (o *GetConfigMapDataUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get config map data using g e t forbidden response
func (o *GetConfigMapDataUsingGETForbidden) Code() int {
	return 403
}

func (o *GetConfigMapDataUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETForbidden", 403)
}

func (o *GetConfigMapDataUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETForbidden", 403)
}

func (o *GetConfigMapDataUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetConfigMapDataUsingGETNotFound creates a GetConfigMapDataUsingGETNotFound with default headers values
func NewGetConfigMapDataUsingGETNotFound() *GetConfigMapDataUsingGETNotFound {
	return &GetConfigMapDataUsingGETNotFound{}
}

/*
GetConfigMapDataUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetConfigMapDataUsingGETNotFound struct {
}

// IsSuccess returns true when this get config map data using g e t not found response has a 2xx status code
func (o *GetConfigMapDataUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get config map data using g e t not found response has a 3xx status code
func (o *GetConfigMapDataUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get config map data using g e t not found response has a 4xx status code
func (o *GetConfigMapDataUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get config map data using g e t not found response has a 5xx status code
func (o *GetConfigMapDataUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get config map data using g e t not found response a status code equal to that given
func (o *GetConfigMapDataUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get config map data using g e t not found response
func (o *GetConfigMapDataUsingGETNotFound) Code() int {
	return 404
}

func (o *GetConfigMapDataUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETNotFound", 404)
}

func (o *GetConfigMapDataUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps/{configMapName}][%d] getConfigMapDataUsingGETNotFound", 404)
}

func (o *GetConfigMapDataUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
