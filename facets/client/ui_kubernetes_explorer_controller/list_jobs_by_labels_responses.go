// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListJobsByLabelsReader is a Reader for the ListJobsByLabels structure.
type ListJobsByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListJobsByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListJobsByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListJobsByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListJobsByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListJobsByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListJobsByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs] listJobsByLabels", response, response.Code())
	}
}

// NewListJobsByLabelsOK creates a ListJobsByLabelsOK with default headers values
func NewListJobsByLabelsOK() *ListJobsByLabelsOK {
	return &ListJobsByLabelsOK{}
}

/*
ListJobsByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListJobsByLabelsOK struct {
	Payload []*models.JobDTO
}

// IsSuccess returns true when this list jobs by labels o k response has a 2xx status code
func (o *ListJobsByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list jobs by labels o k response has a 3xx status code
func (o *ListJobsByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels o k response has a 4xx status code
func (o *ListJobsByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list jobs by labels o k response has a 5xx status code
func (o *ListJobsByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels o k response a status code equal to that given
func (o *ListJobsByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list jobs by labels o k response
func (o *ListJobsByLabelsOK) Code() int {
	return 200
}

func (o *ListJobsByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsOK %s", 200, payload)
}

func (o *ListJobsByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsOK %s", 200, payload)
}

func (o *ListJobsByLabelsOK) GetPayload() []*models.JobDTO {
	return o.Payload
}

func (o *ListJobsByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobsByLabelsBadRequest creates a ListJobsByLabelsBadRequest with default headers values
func NewListJobsByLabelsBadRequest() *ListJobsByLabelsBadRequest {
	return &ListJobsByLabelsBadRequest{}
}

/*
ListJobsByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListJobsByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list jobs by labels bad request response has a 2xx status code
func (o *ListJobsByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list jobs by labels bad request response has a 3xx status code
func (o *ListJobsByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels bad request response has a 4xx status code
func (o *ListJobsByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list jobs by labels bad request response has a 5xx status code
func (o *ListJobsByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels bad request response a status code equal to that given
func (o *ListJobsByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list jobs by labels bad request response
func (o *ListJobsByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListJobsByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsBadRequest %s", 400, payload)
}

func (o *ListJobsByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsBadRequest %s", 400, payload)
}

func (o *ListJobsByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListJobsByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobsByLabelsNotFound creates a ListJobsByLabelsNotFound with default headers values
func NewListJobsByLabelsNotFound() *ListJobsByLabelsNotFound {
	return &ListJobsByLabelsNotFound{}
}

/*
ListJobsByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListJobsByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list jobs by labels not found response has a 2xx status code
func (o *ListJobsByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list jobs by labels not found response has a 3xx status code
func (o *ListJobsByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels not found response has a 4xx status code
func (o *ListJobsByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list jobs by labels not found response has a 5xx status code
func (o *ListJobsByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels not found response a status code equal to that given
func (o *ListJobsByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list jobs by labels not found response
func (o *ListJobsByLabelsNotFound) Code() int {
	return 404
}

func (o *ListJobsByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsNotFound %s", 404, payload)
}

func (o *ListJobsByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsNotFound %s", 404, payload)
}

func (o *ListJobsByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListJobsByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobsByLabelsMethodNotAllowed creates a ListJobsByLabelsMethodNotAllowed with default headers values
func NewListJobsByLabelsMethodNotAllowed() *ListJobsByLabelsMethodNotAllowed {
	return &ListJobsByLabelsMethodNotAllowed{}
}

/*
ListJobsByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListJobsByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list jobs by labels method not allowed response has a 2xx status code
func (o *ListJobsByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list jobs by labels method not allowed response has a 3xx status code
func (o *ListJobsByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels method not allowed response has a 4xx status code
func (o *ListJobsByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list jobs by labels method not allowed response has a 5xx status code
func (o *ListJobsByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels method not allowed response a status code equal to that given
func (o *ListJobsByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list jobs by labels method not allowed response
func (o *ListJobsByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListJobsByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListJobsByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListJobsByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListJobsByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobsByLabelsInternalServerError creates a ListJobsByLabelsInternalServerError with default headers values
func NewListJobsByLabelsInternalServerError() *ListJobsByLabelsInternalServerError {
	return &ListJobsByLabelsInternalServerError{}
}

/*
ListJobsByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListJobsByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list jobs by labels internal server error response has a 2xx status code
func (o *ListJobsByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list jobs by labels internal server error response has a 3xx status code
func (o *ListJobsByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels internal server error response has a 4xx status code
func (o *ListJobsByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list jobs by labels internal server error response has a 5xx status code
func (o *ListJobsByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list jobs by labels internal server error response a status code equal to that given
func (o *ListJobsByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list jobs by labels internal server error response
func (o *ListJobsByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListJobsByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListJobsByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListJobsByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListJobsByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
