// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListSecretsByLabelsReader is a Reader for the ListSecretsByLabels structure.
type ListSecretsByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSecretsByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSecretsByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListSecretsByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListSecretsByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListSecretsByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListSecretsByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets] listSecretsByLabels", response, response.Code())
	}
}

// NewListSecretsByLabelsOK creates a ListSecretsByLabelsOK with default headers values
func NewListSecretsByLabelsOK() *ListSecretsByLabelsOK {
	return &ListSecretsByLabelsOK{}
}

/*
ListSecretsByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListSecretsByLabelsOK struct {
	Payload []*models.SecretDTO
}

// IsSuccess returns true when this list secrets by labels o k response has a 2xx status code
func (o *ListSecretsByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list secrets by labels o k response has a 3xx status code
func (o *ListSecretsByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels o k response has a 4xx status code
func (o *ListSecretsByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list secrets by labels o k response has a 5xx status code
func (o *ListSecretsByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels o k response a status code equal to that given
func (o *ListSecretsByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list secrets by labels o k response
func (o *ListSecretsByLabelsOK) Code() int {
	return 200
}

func (o *ListSecretsByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsOK %s", 200, payload)
}

func (o *ListSecretsByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsOK %s", 200, payload)
}

func (o *ListSecretsByLabelsOK) GetPayload() []*models.SecretDTO {
	return o.Payload
}

func (o *ListSecretsByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsByLabelsBadRequest creates a ListSecretsByLabelsBadRequest with default headers values
func NewListSecretsByLabelsBadRequest() *ListSecretsByLabelsBadRequest {
	return &ListSecretsByLabelsBadRequest{}
}

/*
ListSecretsByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListSecretsByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list secrets by labels bad request response has a 2xx status code
func (o *ListSecretsByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list secrets by labels bad request response has a 3xx status code
func (o *ListSecretsByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels bad request response has a 4xx status code
func (o *ListSecretsByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list secrets by labels bad request response has a 5xx status code
func (o *ListSecretsByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels bad request response a status code equal to that given
func (o *ListSecretsByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list secrets by labels bad request response
func (o *ListSecretsByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListSecretsByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsBadRequest %s", 400, payload)
}

func (o *ListSecretsByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsBadRequest %s", 400, payload)
}

func (o *ListSecretsByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListSecretsByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsByLabelsNotFound creates a ListSecretsByLabelsNotFound with default headers values
func NewListSecretsByLabelsNotFound() *ListSecretsByLabelsNotFound {
	return &ListSecretsByLabelsNotFound{}
}

/*
ListSecretsByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListSecretsByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list secrets by labels not found response has a 2xx status code
func (o *ListSecretsByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list secrets by labels not found response has a 3xx status code
func (o *ListSecretsByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels not found response has a 4xx status code
func (o *ListSecretsByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list secrets by labels not found response has a 5xx status code
func (o *ListSecretsByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels not found response a status code equal to that given
func (o *ListSecretsByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list secrets by labels not found response
func (o *ListSecretsByLabelsNotFound) Code() int {
	return 404
}

func (o *ListSecretsByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsNotFound %s", 404, payload)
}

func (o *ListSecretsByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsNotFound %s", 404, payload)
}

func (o *ListSecretsByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListSecretsByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsByLabelsMethodNotAllowed creates a ListSecretsByLabelsMethodNotAllowed with default headers values
func NewListSecretsByLabelsMethodNotAllowed() *ListSecretsByLabelsMethodNotAllowed {
	return &ListSecretsByLabelsMethodNotAllowed{}
}

/*
ListSecretsByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListSecretsByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list secrets by labels method not allowed response has a 2xx status code
func (o *ListSecretsByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list secrets by labels method not allowed response has a 3xx status code
func (o *ListSecretsByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels method not allowed response has a 4xx status code
func (o *ListSecretsByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list secrets by labels method not allowed response has a 5xx status code
func (o *ListSecretsByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels method not allowed response a status code equal to that given
func (o *ListSecretsByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list secrets by labels method not allowed response
func (o *ListSecretsByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListSecretsByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListSecretsByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListSecretsByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListSecretsByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsByLabelsInternalServerError creates a ListSecretsByLabelsInternalServerError with default headers values
func NewListSecretsByLabelsInternalServerError() *ListSecretsByLabelsInternalServerError {
	return &ListSecretsByLabelsInternalServerError{}
}

/*
ListSecretsByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListSecretsByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list secrets by labels internal server error response has a 2xx status code
func (o *ListSecretsByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list secrets by labels internal server error response has a 3xx status code
func (o *ListSecretsByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels internal server error response has a 4xx status code
func (o *ListSecretsByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list secrets by labels internal server error response has a 5xx status code
func (o *ListSecretsByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list secrets by labels internal server error response a status code equal to that given
func (o *ListSecretsByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list secrets by labels internal server error response
func (o *ListSecretsByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListSecretsByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListSecretsByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListSecretsByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListSecretsByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
