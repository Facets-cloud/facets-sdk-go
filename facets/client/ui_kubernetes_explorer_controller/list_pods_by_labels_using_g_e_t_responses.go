// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListPodsByLabelsUsingGETReader is a Reader for the ListPodsByLabelsUsingGET structure.
type ListPodsByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPodsByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPodsByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPodsByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPodsByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPodsByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods] listPodsByLabelsUsingGET", response, response.Code())
	}
}

// NewListPodsByLabelsUsingGETOK creates a ListPodsByLabelsUsingGETOK with default headers values
func NewListPodsByLabelsUsingGETOK() *ListPodsByLabelsUsingGETOK {
	return &ListPodsByLabelsUsingGETOK{}
}

/*
ListPodsByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListPodsByLabelsUsingGETOK struct {
	Payload []*models.PodDTO
}

// IsSuccess returns true when this list pods by labels using g e t o k response has a 2xx status code
func (o *ListPodsByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list pods by labels using g e t o k response has a 3xx status code
func (o *ListPodsByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods by labels using g e t o k response has a 4xx status code
func (o *ListPodsByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list pods by labels using g e t o k response has a 5xx status code
func (o *ListPodsByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods by labels using g e t o k response a status code equal to that given
func (o *ListPodsByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list pods by labels using g e t o k response
func (o *ListPodsByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListPodsByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListPodsByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListPodsByLabelsUsingGETOK) GetPayload() []*models.PodDTO {
	return o.Payload
}

func (o *ListPodsByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPodsByLabelsUsingGETUnauthorized creates a ListPodsByLabelsUsingGETUnauthorized with default headers values
func NewListPodsByLabelsUsingGETUnauthorized() *ListPodsByLabelsUsingGETUnauthorized {
	return &ListPodsByLabelsUsingGETUnauthorized{}
}

/*
ListPodsByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListPodsByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list pods by labels using g e t unauthorized response has a 2xx status code
func (o *ListPodsByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list pods by labels using g e t unauthorized response has a 3xx status code
func (o *ListPodsByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods by labels using g e t unauthorized response has a 4xx status code
func (o *ListPodsByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list pods by labels using g e t unauthorized response has a 5xx status code
func (o *ListPodsByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods by labels using g e t unauthorized response a status code equal to that given
func (o *ListPodsByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list pods by labels using g e t unauthorized response
func (o *ListPodsByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListPodsByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListPodsByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListPodsByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPodsByLabelsUsingGETForbidden creates a ListPodsByLabelsUsingGETForbidden with default headers values
func NewListPodsByLabelsUsingGETForbidden() *ListPodsByLabelsUsingGETForbidden {
	return &ListPodsByLabelsUsingGETForbidden{}
}

/*
ListPodsByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListPodsByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list pods by labels using g e t forbidden response has a 2xx status code
func (o *ListPodsByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list pods by labels using g e t forbidden response has a 3xx status code
func (o *ListPodsByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods by labels using g e t forbidden response has a 4xx status code
func (o *ListPodsByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list pods by labels using g e t forbidden response has a 5xx status code
func (o *ListPodsByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods by labels using g e t forbidden response a status code equal to that given
func (o *ListPodsByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list pods by labels using g e t forbidden response
func (o *ListPodsByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListPodsByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETForbidden", 403)
}

func (o *ListPodsByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETForbidden", 403)
}

func (o *ListPodsByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPodsByLabelsUsingGETNotFound creates a ListPodsByLabelsUsingGETNotFound with default headers values
func NewListPodsByLabelsUsingGETNotFound() *ListPodsByLabelsUsingGETNotFound {
	return &ListPodsByLabelsUsingGETNotFound{}
}

/*
ListPodsByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListPodsByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list pods by labels using g e t not found response has a 2xx status code
func (o *ListPodsByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list pods by labels using g e t not found response has a 3xx status code
func (o *ListPodsByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods by labels using g e t not found response has a 4xx status code
func (o *ListPodsByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list pods by labels using g e t not found response has a 5xx status code
func (o *ListPodsByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods by labels using g e t not found response a status code equal to that given
func (o *ListPodsByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list pods by labels using g e t not found response
func (o *ListPodsByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListPodsByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETNotFound", 404)
}

func (o *ListPodsByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods][%d] listPodsByLabelsUsingGETNotFound", 404)
}

func (o *ListPodsByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
