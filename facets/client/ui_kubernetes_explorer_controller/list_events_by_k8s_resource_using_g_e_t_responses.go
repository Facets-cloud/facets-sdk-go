// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListEventsByK8sResourceUsingGETReader is a Reader for the ListEventsByK8sResourceUsingGET structure.
type ListEventsByK8sResourceUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListEventsByK8sResourceUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListEventsByK8sResourceUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListEventsByK8sResourceUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListEventsByK8sResourceUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListEventsByK8sResourceUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events] listEventsByK8sResourceUsingGET", response, response.Code())
	}
}

// NewListEventsByK8sResourceUsingGETOK creates a ListEventsByK8sResourceUsingGETOK with default headers values
func NewListEventsByK8sResourceUsingGETOK() *ListEventsByK8sResourceUsingGETOK {
	return &ListEventsByK8sResourceUsingGETOK{}
}

/*
ListEventsByK8sResourceUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListEventsByK8sResourceUsingGETOK struct {
	Payload []*models.EventDTO
}

// IsSuccess returns true when this list events by k8s resource using g e t o k response has a 2xx status code
func (o *ListEventsByK8sResourceUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list events by k8s resource using g e t o k response has a 3xx status code
func (o *ListEventsByK8sResourceUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource using g e t o k response has a 4xx status code
func (o *ListEventsByK8sResourceUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list events by k8s resource using g e t o k response has a 5xx status code
func (o *ListEventsByK8sResourceUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource using g e t o k response a status code equal to that given
func (o *ListEventsByK8sResourceUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list events by k8s resource using g e t o k response
func (o *ListEventsByK8sResourceUsingGETOK) Code() int {
	return 200
}

func (o *ListEventsByK8sResourceUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETOK %s", 200, payload)
}

func (o *ListEventsByK8sResourceUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETOK %s", 200, payload)
}

func (o *ListEventsByK8sResourceUsingGETOK) GetPayload() []*models.EventDTO {
	return o.Payload
}

func (o *ListEventsByK8sResourceUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListEventsByK8sResourceUsingGETUnauthorized creates a ListEventsByK8sResourceUsingGETUnauthorized with default headers values
func NewListEventsByK8sResourceUsingGETUnauthorized() *ListEventsByK8sResourceUsingGETUnauthorized {
	return &ListEventsByK8sResourceUsingGETUnauthorized{}
}

/*
ListEventsByK8sResourceUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListEventsByK8sResourceUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list events by k8s resource using g e t unauthorized response has a 2xx status code
func (o *ListEventsByK8sResourceUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list events by k8s resource using g e t unauthorized response has a 3xx status code
func (o *ListEventsByK8sResourceUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource using g e t unauthorized response has a 4xx status code
func (o *ListEventsByK8sResourceUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list events by k8s resource using g e t unauthorized response has a 5xx status code
func (o *ListEventsByK8sResourceUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource using g e t unauthorized response a status code equal to that given
func (o *ListEventsByK8sResourceUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list events by k8s resource using g e t unauthorized response
func (o *ListEventsByK8sResourceUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListEventsByK8sResourceUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETUnauthorized", 401)
}

func (o *ListEventsByK8sResourceUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETUnauthorized", 401)
}

func (o *ListEventsByK8sResourceUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListEventsByK8sResourceUsingGETForbidden creates a ListEventsByK8sResourceUsingGETForbidden with default headers values
func NewListEventsByK8sResourceUsingGETForbidden() *ListEventsByK8sResourceUsingGETForbidden {
	return &ListEventsByK8sResourceUsingGETForbidden{}
}

/*
ListEventsByK8sResourceUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListEventsByK8sResourceUsingGETForbidden struct {
}

// IsSuccess returns true when this list events by k8s resource using g e t forbidden response has a 2xx status code
func (o *ListEventsByK8sResourceUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list events by k8s resource using g e t forbidden response has a 3xx status code
func (o *ListEventsByK8sResourceUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource using g e t forbidden response has a 4xx status code
func (o *ListEventsByK8sResourceUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list events by k8s resource using g e t forbidden response has a 5xx status code
func (o *ListEventsByK8sResourceUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource using g e t forbidden response a status code equal to that given
func (o *ListEventsByK8sResourceUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list events by k8s resource using g e t forbidden response
func (o *ListEventsByK8sResourceUsingGETForbidden) Code() int {
	return 403
}

func (o *ListEventsByK8sResourceUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETForbidden", 403)
}

func (o *ListEventsByK8sResourceUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETForbidden", 403)
}

func (o *ListEventsByK8sResourceUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListEventsByK8sResourceUsingGETNotFound creates a ListEventsByK8sResourceUsingGETNotFound with default headers values
func NewListEventsByK8sResourceUsingGETNotFound() *ListEventsByK8sResourceUsingGETNotFound {
	return &ListEventsByK8sResourceUsingGETNotFound{}
}

/*
ListEventsByK8sResourceUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListEventsByK8sResourceUsingGETNotFound struct {
}

// IsSuccess returns true when this list events by k8s resource using g e t not found response has a 2xx status code
func (o *ListEventsByK8sResourceUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list events by k8s resource using g e t not found response has a 3xx status code
func (o *ListEventsByK8sResourceUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list events by k8s resource using g e t not found response has a 4xx status code
func (o *ListEventsByK8sResourceUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list events by k8s resource using g e t not found response has a 5xx status code
func (o *ListEventsByK8sResourceUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list events by k8s resource using g e t not found response a status code equal to that given
func (o *ListEventsByK8sResourceUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list events by k8s resource using g e t not found response
func (o *ListEventsByK8sResourceUsingGETNotFound) Code() int {
	return 404
}

func (o *ListEventsByK8sResourceUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETNotFound", 404)
}

func (o *ListEventsByK8sResourceUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/events][%d] listEventsByK8sResourceUsingGETNotFound", 404)
}

func (o *ListEventsByK8sResourceUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
