// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListConfigMapByLabelsReader is a Reader for the ListConfigMapByLabels structure.
type ListConfigMapByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListConfigMapByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListConfigMapByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListConfigMapByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListConfigMapByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListConfigMapByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListConfigMapByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps] listConfigMapByLabels", response, response.Code())
	}
}

// NewListConfigMapByLabelsOK creates a ListConfigMapByLabelsOK with default headers values
func NewListConfigMapByLabelsOK() *ListConfigMapByLabelsOK {
	return &ListConfigMapByLabelsOK{}
}

/*
ListConfigMapByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListConfigMapByLabelsOK struct {
	Payload []*models.ConfigMapDTO
}

// IsSuccess returns true when this list config map by labels o k response has a 2xx status code
func (o *ListConfigMapByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list config map by labels o k response has a 3xx status code
func (o *ListConfigMapByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels o k response has a 4xx status code
func (o *ListConfigMapByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list config map by labels o k response has a 5xx status code
func (o *ListConfigMapByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels o k response a status code equal to that given
func (o *ListConfigMapByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list config map by labels o k response
func (o *ListConfigMapByLabelsOK) Code() int {
	return 200
}

func (o *ListConfigMapByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsOK %s", 200, payload)
}

func (o *ListConfigMapByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsOK %s", 200, payload)
}

func (o *ListConfigMapByLabelsOK) GetPayload() []*models.ConfigMapDTO {
	return o.Payload
}

func (o *ListConfigMapByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigMapByLabelsBadRequest creates a ListConfigMapByLabelsBadRequest with default headers values
func NewListConfigMapByLabelsBadRequest() *ListConfigMapByLabelsBadRequest {
	return &ListConfigMapByLabelsBadRequest{}
}

/*
ListConfigMapByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListConfigMapByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list config map by labels bad request response has a 2xx status code
func (o *ListConfigMapByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config map by labels bad request response has a 3xx status code
func (o *ListConfigMapByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels bad request response has a 4xx status code
func (o *ListConfigMapByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config map by labels bad request response has a 5xx status code
func (o *ListConfigMapByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels bad request response a status code equal to that given
func (o *ListConfigMapByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list config map by labels bad request response
func (o *ListConfigMapByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListConfigMapByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsBadRequest %s", 400, payload)
}

func (o *ListConfigMapByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsBadRequest %s", 400, payload)
}

func (o *ListConfigMapByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListConfigMapByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigMapByLabelsNotFound creates a ListConfigMapByLabelsNotFound with default headers values
func NewListConfigMapByLabelsNotFound() *ListConfigMapByLabelsNotFound {
	return &ListConfigMapByLabelsNotFound{}
}

/*
ListConfigMapByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListConfigMapByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list config map by labels not found response has a 2xx status code
func (o *ListConfigMapByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config map by labels not found response has a 3xx status code
func (o *ListConfigMapByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels not found response has a 4xx status code
func (o *ListConfigMapByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config map by labels not found response has a 5xx status code
func (o *ListConfigMapByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels not found response a status code equal to that given
func (o *ListConfigMapByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list config map by labels not found response
func (o *ListConfigMapByLabelsNotFound) Code() int {
	return 404
}

func (o *ListConfigMapByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsNotFound %s", 404, payload)
}

func (o *ListConfigMapByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsNotFound %s", 404, payload)
}

func (o *ListConfigMapByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListConfigMapByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigMapByLabelsMethodNotAllowed creates a ListConfigMapByLabelsMethodNotAllowed with default headers values
func NewListConfigMapByLabelsMethodNotAllowed() *ListConfigMapByLabelsMethodNotAllowed {
	return &ListConfigMapByLabelsMethodNotAllowed{}
}

/*
ListConfigMapByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListConfigMapByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list config map by labels method not allowed response has a 2xx status code
func (o *ListConfigMapByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config map by labels method not allowed response has a 3xx status code
func (o *ListConfigMapByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels method not allowed response has a 4xx status code
func (o *ListConfigMapByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list config map by labels method not allowed response has a 5xx status code
func (o *ListConfigMapByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list config map by labels method not allowed response a status code equal to that given
func (o *ListConfigMapByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list config map by labels method not allowed response
func (o *ListConfigMapByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListConfigMapByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListConfigMapByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListConfigMapByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListConfigMapByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListConfigMapByLabelsInternalServerError creates a ListConfigMapByLabelsInternalServerError with default headers values
func NewListConfigMapByLabelsInternalServerError() *ListConfigMapByLabelsInternalServerError {
	return &ListConfigMapByLabelsInternalServerError{}
}

/*
ListConfigMapByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListConfigMapByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list config map by labels internal server error response has a 2xx status code
func (o *ListConfigMapByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list config map by labels internal server error response has a 3xx status code
func (o *ListConfigMapByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list config map by labels internal server error response has a 4xx status code
func (o *ListConfigMapByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list config map by labels internal server error response has a 5xx status code
func (o *ListConfigMapByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list config map by labels internal server error response a status code equal to that given
func (o *ListConfigMapByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list config map by labels internal server error response
func (o *ListConfigMapByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListConfigMapByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsInternalServerError %s", 500, payload)
}

func (o *ListConfigMapByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/configMaps][%d] listConfigMapByLabelsInternalServerError %s", 500, payload)
}

func (o *ListConfigMapByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListConfigMapByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
