// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSecretsDataUsingGETReader is a Reader for the GetSecretsDataUsingGET structure.
type GetSecretsDataUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecretsDataUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSecretsDataUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSecretsDataUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSecretsDataUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSecretsDataUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}] getSecretsDataUsingGET", response, response.Code())
	}
}

// NewGetSecretsDataUsingGETOK creates a GetSecretsDataUsingGETOK with default headers values
func NewGetSecretsDataUsingGETOK() *GetSecretsDataUsingGETOK {
	return &GetSecretsDataUsingGETOK{}
}

/*
GetSecretsDataUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetSecretsDataUsingGETOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get secrets data using g e t o k response has a 2xx status code
func (o *GetSecretsDataUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get secrets data using g e t o k response has a 3xx status code
func (o *GetSecretsDataUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get secrets data using g e t o k response has a 4xx status code
func (o *GetSecretsDataUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get secrets data using g e t o k response has a 5xx status code
func (o *GetSecretsDataUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get secrets data using g e t o k response a status code equal to that given
func (o *GetSecretsDataUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get secrets data using g e t o k response
func (o *GetSecretsDataUsingGETOK) Code() int {
	return 200
}

func (o *GetSecretsDataUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETOK %s", 200, payload)
}

func (o *GetSecretsDataUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETOK %s", 200, payload)
}

func (o *GetSecretsDataUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSecretsDataUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecretsDataUsingGETUnauthorized creates a GetSecretsDataUsingGETUnauthorized with default headers values
func NewGetSecretsDataUsingGETUnauthorized() *GetSecretsDataUsingGETUnauthorized {
	return &GetSecretsDataUsingGETUnauthorized{}
}

/*
GetSecretsDataUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSecretsDataUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get secrets data using g e t unauthorized response has a 2xx status code
func (o *GetSecretsDataUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get secrets data using g e t unauthorized response has a 3xx status code
func (o *GetSecretsDataUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get secrets data using g e t unauthorized response has a 4xx status code
func (o *GetSecretsDataUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get secrets data using g e t unauthorized response has a 5xx status code
func (o *GetSecretsDataUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get secrets data using g e t unauthorized response a status code equal to that given
func (o *GetSecretsDataUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get secrets data using g e t unauthorized response
func (o *GetSecretsDataUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetSecretsDataUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETUnauthorized", 401)
}

func (o *GetSecretsDataUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETUnauthorized", 401)
}

func (o *GetSecretsDataUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecretsDataUsingGETForbidden creates a GetSecretsDataUsingGETForbidden with default headers values
func NewGetSecretsDataUsingGETForbidden() *GetSecretsDataUsingGETForbidden {
	return &GetSecretsDataUsingGETForbidden{}
}

/*
GetSecretsDataUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSecretsDataUsingGETForbidden struct {
}

// IsSuccess returns true when this get secrets data using g e t forbidden response has a 2xx status code
func (o *GetSecretsDataUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get secrets data using g e t forbidden response has a 3xx status code
func (o *GetSecretsDataUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get secrets data using g e t forbidden response has a 4xx status code
func (o *GetSecretsDataUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get secrets data using g e t forbidden response has a 5xx status code
func (o *GetSecretsDataUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get secrets data using g e t forbidden response a status code equal to that given
func (o *GetSecretsDataUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get secrets data using g e t forbidden response
func (o *GetSecretsDataUsingGETForbidden) Code() int {
	return 403
}

func (o *GetSecretsDataUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETForbidden", 403)
}

func (o *GetSecretsDataUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETForbidden", 403)
}

func (o *GetSecretsDataUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecretsDataUsingGETNotFound creates a GetSecretsDataUsingGETNotFound with default headers values
func NewGetSecretsDataUsingGETNotFound() *GetSecretsDataUsingGETNotFound {
	return &GetSecretsDataUsingGETNotFound{}
}

/*
GetSecretsDataUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSecretsDataUsingGETNotFound struct {
}

// IsSuccess returns true when this get secrets data using g e t not found response has a 2xx status code
func (o *GetSecretsDataUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get secrets data using g e t not found response has a 3xx status code
func (o *GetSecretsDataUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get secrets data using g e t not found response has a 4xx status code
func (o *GetSecretsDataUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get secrets data using g e t not found response has a 5xx status code
func (o *GetSecretsDataUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get secrets data using g e t not found response a status code equal to that given
func (o *GetSecretsDataUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get secrets data using g e t not found response
func (o *GetSecretsDataUsingGETNotFound) Code() int {
	return 404
}

func (o *GetSecretsDataUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETNotFound", 404)
}

func (o *GetSecretsDataUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets/{secretName}][%d] getSecretsDataUsingGETNotFound", 404)
}

func (o *GetSecretsDataUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
