// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListSecretsByLabelsUsingGETReader is a Reader for the ListSecretsByLabelsUsingGET structure.
type ListSecretsByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSecretsByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSecretsByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListSecretsByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSecretsByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListSecretsByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets] listSecretsByLabelsUsingGET", response, response.Code())
	}
}

// NewListSecretsByLabelsUsingGETOK creates a ListSecretsByLabelsUsingGETOK with default headers values
func NewListSecretsByLabelsUsingGETOK() *ListSecretsByLabelsUsingGETOK {
	return &ListSecretsByLabelsUsingGETOK{}
}

/*
ListSecretsByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListSecretsByLabelsUsingGETOK struct {
	Payload []*models.SecretDTO
}

// IsSuccess returns true when this list secrets by labels using g e t o k response has a 2xx status code
func (o *ListSecretsByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list secrets by labels using g e t o k response has a 3xx status code
func (o *ListSecretsByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels using g e t o k response has a 4xx status code
func (o *ListSecretsByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list secrets by labels using g e t o k response has a 5xx status code
func (o *ListSecretsByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels using g e t o k response a status code equal to that given
func (o *ListSecretsByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list secrets by labels using g e t o k response
func (o *ListSecretsByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListSecretsByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListSecretsByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListSecretsByLabelsUsingGETOK) GetPayload() []*models.SecretDTO {
	return o.Payload
}

func (o *ListSecretsByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSecretsByLabelsUsingGETUnauthorized creates a ListSecretsByLabelsUsingGETUnauthorized with default headers values
func NewListSecretsByLabelsUsingGETUnauthorized() *ListSecretsByLabelsUsingGETUnauthorized {
	return &ListSecretsByLabelsUsingGETUnauthorized{}
}

/*
ListSecretsByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListSecretsByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list secrets by labels using g e t unauthorized response has a 2xx status code
func (o *ListSecretsByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list secrets by labels using g e t unauthorized response has a 3xx status code
func (o *ListSecretsByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels using g e t unauthorized response has a 4xx status code
func (o *ListSecretsByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list secrets by labels using g e t unauthorized response has a 5xx status code
func (o *ListSecretsByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels using g e t unauthorized response a status code equal to that given
func (o *ListSecretsByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list secrets by labels using g e t unauthorized response
func (o *ListSecretsByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListSecretsByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListSecretsByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListSecretsByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSecretsByLabelsUsingGETForbidden creates a ListSecretsByLabelsUsingGETForbidden with default headers values
func NewListSecretsByLabelsUsingGETForbidden() *ListSecretsByLabelsUsingGETForbidden {
	return &ListSecretsByLabelsUsingGETForbidden{}
}

/*
ListSecretsByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListSecretsByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list secrets by labels using g e t forbidden response has a 2xx status code
func (o *ListSecretsByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list secrets by labels using g e t forbidden response has a 3xx status code
func (o *ListSecretsByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels using g e t forbidden response has a 4xx status code
func (o *ListSecretsByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list secrets by labels using g e t forbidden response has a 5xx status code
func (o *ListSecretsByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels using g e t forbidden response a status code equal to that given
func (o *ListSecretsByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list secrets by labels using g e t forbidden response
func (o *ListSecretsByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListSecretsByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETForbidden", 403)
}

func (o *ListSecretsByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETForbidden", 403)
}

func (o *ListSecretsByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSecretsByLabelsUsingGETNotFound creates a ListSecretsByLabelsUsingGETNotFound with default headers values
func NewListSecretsByLabelsUsingGETNotFound() *ListSecretsByLabelsUsingGETNotFound {
	return &ListSecretsByLabelsUsingGETNotFound{}
}

/*
ListSecretsByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListSecretsByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list secrets by labels using g e t not found response has a 2xx status code
func (o *ListSecretsByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list secrets by labels using g e t not found response has a 3xx status code
func (o *ListSecretsByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list secrets by labels using g e t not found response has a 4xx status code
func (o *ListSecretsByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list secrets by labels using g e t not found response has a 5xx status code
func (o *ListSecretsByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list secrets by labels using g e t not found response a status code equal to that given
func (o *ListSecretsByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list secrets by labels using g e t not found response
func (o *ListSecretsByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListSecretsByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETNotFound", 404)
}

func (o *ListSecretsByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/secrets][%d] listSecretsByLabelsUsingGETNotFound", 404)
}

func (o *ListSecretsByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
