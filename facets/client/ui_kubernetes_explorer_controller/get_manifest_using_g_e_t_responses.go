// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetManifestUsingGETReader is a Reader for the GetManifestUsingGET structure.
type GetManifestUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetManifestUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetManifestUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetManifestUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetManifestUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetManifestUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest] getManifestUsingGET", response, response.Code())
	}
}

// NewGetManifestUsingGETOK creates a GetManifestUsingGETOK with default headers values
func NewGetManifestUsingGETOK() *GetManifestUsingGETOK {
	return &GetManifestUsingGETOK{}
}

/*
GetManifestUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetManifestUsingGETOK struct {
	Payload string
}

// IsSuccess returns true when this get manifest using g e t o k response has a 2xx status code
func (o *GetManifestUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get manifest using g e t o k response has a 3xx status code
func (o *GetManifestUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest using g e t o k response has a 4xx status code
func (o *GetManifestUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get manifest using g e t o k response has a 5xx status code
func (o *GetManifestUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest using g e t o k response a status code equal to that given
func (o *GetManifestUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get manifest using g e t o k response
func (o *GetManifestUsingGETOK) Code() int {
	return 200
}

func (o *GetManifestUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETOK %s", 200, payload)
}

func (o *GetManifestUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETOK %s", 200, payload)
}

func (o *GetManifestUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *GetManifestUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetManifestUsingGETUnauthorized creates a GetManifestUsingGETUnauthorized with default headers values
func NewGetManifestUsingGETUnauthorized() *GetManifestUsingGETUnauthorized {
	return &GetManifestUsingGETUnauthorized{}
}

/*
GetManifestUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetManifestUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get manifest using g e t unauthorized response has a 2xx status code
func (o *GetManifestUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest using g e t unauthorized response has a 3xx status code
func (o *GetManifestUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest using g e t unauthorized response has a 4xx status code
func (o *GetManifestUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get manifest using g e t unauthorized response has a 5xx status code
func (o *GetManifestUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest using g e t unauthorized response a status code equal to that given
func (o *GetManifestUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get manifest using g e t unauthorized response
func (o *GetManifestUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetManifestUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETUnauthorized", 401)
}

func (o *GetManifestUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETUnauthorized", 401)
}

func (o *GetManifestUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManifestUsingGETForbidden creates a GetManifestUsingGETForbidden with default headers values
func NewGetManifestUsingGETForbidden() *GetManifestUsingGETForbidden {
	return &GetManifestUsingGETForbidden{}
}

/*
GetManifestUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetManifestUsingGETForbidden struct {
}

// IsSuccess returns true when this get manifest using g e t forbidden response has a 2xx status code
func (o *GetManifestUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest using g e t forbidden response has a 3xx status code
func (o *GetManifestUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest using g e t forbidden response has a 4xx status code
func (o *GetManifestUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get manifest using g e t forbidden response has a 5xx status code
func (o *GetManifestUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest using g e t forbidden response a status code equal to that given
func (o *GetManifestUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get manifest using g e t forbidden response
func (o *GetManifestUsingGETForbidden) Code() int {
	return 403
}

func (o *GetManifestUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETForbidden", 403)
}

func (o *GetManifestUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETForbidden", 403)
}

func (o *GetManifestUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetManifestUsingGETNotFound creates a GetManifestUsingGETNotFound with default headers values
func NewGetManifestUsingGETNotFound() *GetManifestUsingGETNotFound {
	return &GetManifestUsingGETNotFound{}
}

/*
GetManifestUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetManifestUsingGETNotFound struct {
}

// IsSuccess returns true when this get manifest using g e t not found response has a 2xx status code
func (o *GetManifestUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get manifest using g e t not found response has a 3xx status code
func (o *GetManifestUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get manifest using g e t not found response has a 4xx status code
func (o *GetManifestUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get manifest using g e t not found response has a 5xx status code
func (o *GetManifestUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get manifest using g e t not found response a status code equal to that given
func (o *GetManifestUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get manifest using g e t not found response
func (o *GetManifestUsingGETNotFound) Code() int {
	return 404
}

func (o *GetManifestUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETNotFound", 404)
}

func (o *GetManifestUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/{k8sResourceType}/{k8sResourceName}/manifest][%d] getManifestUsingGETNotFound", 404)
}

func (o *GetManifestUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
