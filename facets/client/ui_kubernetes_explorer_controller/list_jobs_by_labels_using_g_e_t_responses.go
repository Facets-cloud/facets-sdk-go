// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListJobsByLabelsUsingGETReader is a Reader for the ListJobsByLabelsUsingGET structure.
type ListJobsByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListJobsByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListJobsByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListJobsByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListJobsByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListJobsByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs] listJobsByLabelsUsingGET", response, response.Code())
	}
}

// NewListJobsByLabelsUsingGETOK creates a ListJobsByLabelsUsingGETOK with default headers values
func NewListJobsByLabelsUsingGETOK() *ListJobsByLabelsUsingGETOK {
	return &ListJobsByLabelsUsingGETOK{}
}

/*
ListJobsByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListJobsByLabelsUsingGETOK struct {
	Payload []*models.JobDTO
}

// IsSuccess returns true when this list jobs by labels using g e t o k response has a 2xx status code
func (o *ListJobsByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list jobs by labels using g e t o k response has a 3xx status code
func (o *ListJobsByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels using g e t o k response has a 4xx status code
func (o *ListJobsByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list jobs by labels using g e t o k response has a 5xx status code
func (o *ListJobsByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels using g e t o k response a status code equal to that given
func (o *ListJobsByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list jobs by labels using g e t o k response
func (o *ListJobsByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListJobsByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListJobsByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListJobsByLabelsUsingGETOK) GetPayload() []*models.JobDTO {
	return o.Payload
}

func (o *ListJobsByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListJobsByLabelsUsingGETUnauthorized creates a ListJobsByLabelsUsingGETUnauthorized with default headers values
func NewListJobsByLabelsUsingGETUnauthorized() *ListJobsByLabelsUsingGETUnauthorized {
	return &ListJobsByLabelsUsingGETUnauthorized{}
}

/*
ListJobsByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListJobsByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list jobs by labels using g e t unauthorized response has a 2xx status code
func (o *ListJobsByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list jobs by labels using g e t unauthorized response has a 3xx status code
func (o *ListJobsByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels using g e t unauthorized response has a 4xx status code
func (o *ListJobsByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list jobs by labels using g e t unauthorized response has a 5xx status code
func (o *ListJobsByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels using g e t unauthorized response a status code equal to that given
func (o *ListJobsByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list jobs by labels using g e t unauthorized response
func (o *ListJobsByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListJobsByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListJobsByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListJobsByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListJobsByLabelsUsingGETForbidden creates a ListJobsByLabelsUsingGETForbidden with default headers values
func NewListJobsByLabelsUsingGETForbidden() *ListJobsByLabelsUsingGETForbidden {
	return &ListJobsByLabelsUsingGETForbidden{}
}

/*
ListJobsByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListJobsByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list jobs by labels using g e t forbidden response has a 2xx status code
func (o *ListJobsByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list jobs by labels using g e t forbidden response has a 3xx status code
func (o *ListJobsByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels using g e t forbidden response has a 4xx status code
func (o *ListJobsByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list jobs by labels using g e t forbidden response has a 5xx status code
func (o *ListJobsByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels using g e t forbidden response a status code equal to that given
func (o *ListJobsByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list jobs by labels using g e t forbidden response
func (o *ListJobsByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListJobsByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETForbidden", 403)
}

func (o *ListJobsByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETForbidden", 403)
}

func (o *ListJobsByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListJobsByLabelsUsingGETNotFound creates a ListJobsByLabelsUsingGETNotFound with default headers values
func NewListJobsByLabelsUsingGETNotFound() *ListJobsByLabelsUsingGETNotFound {
	return &ListJobsByLabelsUsingGETNotFound{}
}

/*
ListJobsByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListJobsByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list jobs by labels using g e t not found response has a 2xx status code
func (o *ListJobsByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list jobs by labels using g e t not found response has a 3xx status code
func (o *ListJobsByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list jobs by labels using g e t not found response has a 4xx status code
func (o *ListJobsByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list jobs by labels using g e t not found response has a 5xx status code
func (o *ListJobsByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list jobs by labels using g e t not found response a status code equal to that given
func (o *ListJobsByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list jobs by labels using g e t not found response
func (o *ListJobsByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListJobsByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETNotFound", 404)
}

func (o *ListJobsByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/jobs][%d] listJobsByLabelsUsingGETNotFound", 404)
}

func (o *ListJobsByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
