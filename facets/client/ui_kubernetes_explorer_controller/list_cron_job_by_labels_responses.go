// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListCronJobByLabelsReader is a Reader for the ListCronJobByLabels structure.
type ListCronJobByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCronJobByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListCronJobByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListCronJobByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListCronJobByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListCronJobByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListCronJobByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs] listCronJobByLabels", response, response.Code())
	}
}

// NewListCronJobByLabelsOK creates a ListCronJobByLabelsOK with default headers values
func NewListCronJobByLabelsOK() *ListCronJobByLabelsOK {
	return &ListCronJobByLabelsOK{}
}

/*
ListCronJobByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListCronJobByLabelsOK struct {
	Payload []*models.CronJobDTO
}

// IsSuccess returns true when this list cron job by labels o k response has a 2xx status code
func (o *ListCronJobByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list cron job by labels o k response has a 3xx status code
func (o *ListCronJobByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list cron job by labels o k response has a 4xx status code
func (o *ListCronJobByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list cron job by labels o k response has a 5xx status code
func (o *ListCronJobByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list cron job by labels o k response a status code equal to that given
func (o *ListCronJobByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list cron job by labels o k response
func (o *ListCronJobByLabelsOK) Code() int {
	return 200
}

func (o *ListCronJobByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsOK %s", 200, payload)
}

func (o *ListCronJobByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsOK %s", 200, payload)
}

func (o *ListCronJobByLabelsOK) GetPayload() []*models.CronJobDTO {
	return o.Payload
}

func (o *ListCronJobByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCronJobByLabelsBadRequest creates a ListCronJobByLabelsBadRequest with default headers values
func NewListCronJobByLabelsBadRequest() *ListCronJobByLabelsBadRequest {
	return &ListCronJobByLabelsBadRequest{}
}

/*
ListCronJobByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListCronJobByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list cron job by labels bad request response has a 2xx status code
func (o *ListCronJobByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list cron job by labels bad request response has a 3xx status code
func (o *ListCronJobByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list cron job by labels bad request response has a 4xx status code
func (o *ListCronJobByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list cron job by labels bad request response has a 5xx status code
func (o *ListCronJobByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list cron job by labels bad request response a status code equal to that given
func (o *ListCronJobByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list cron job by labels bad request response
func (o *ListCronJobByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListCronJobByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsBadRequest %s", 400, payload)
}

func (o *ListCronJobByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsBadRequest %s", 400, payload)
}

func (o *ListCronJobByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListCronJobByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCronJobByLabelsNotFound creates a ListCronJobByLabelsNotFound with default headers values
func NewListCronJobByLabelsNotFound() *ListCronJobByLabelsNotFound {
	return &ListCronJobByLabelsNotFound{}
}

/*
ListCronJobByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListCronJobByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list cron job by labels not found response has a 2xx status code
func (o *ListCronJobByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list cron job by labels not found response has a 3xx status code
func (o *ListCronJobByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list cron job by labels not found response has a 4xx status code
func (o *ListCronJobByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list cron job by labels not found response has a 5xx status code
func (o *ListCronJobByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list cron job by labels not found response a status code equal to that given
func (o *ListCronJobByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list cron job by labels not found response
func (o *ListCronJobByLabelsNotFound) Code() int {
	return 404
}

func (o *ListCronJobByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsNotFound %s", 404, payload)
}

func (o *ListCronJobByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsNotFound %s", 404, payload)
}

func (o *ListCronJobByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListCronJobByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCronJobByLabelsMethodNotAllowed creates a ListCronJobByLabelsMethodNotAllowed with default headers values
func NewListCronJobByLabelsMethodNotAllowed() *ListCronJobByLabelsMethodNotAllowed {
	return &ListCronJobByLabelsMethodNotAllowed{}
}

/*
ListCronJobByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListCronJobByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list cron job by labels method not allowed response has a 2xx status code
func (o *ListCronJobByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list cron job by labels method not allowed response has a 3xx status code
func (o *ListCronJobByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list cron job by labels method not allowed response has a 4xx status code
func (o *ListCronJobByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list cron job by labels method not allowed response has a 5xx status code
func (o *ListCronJobByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list cron job by labels method not allowed response a status code equal to that given
func (o *ListCronJobByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list cron job by labels method not allowed response
func (o *ListCronJobByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListCronJobByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListCronJobByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListCronJobByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListCronJobByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCronJobByLabelsInternalServerError creates a ListCronJobByLabelsInternalServerError with default headers values
func NewListCronJobByLabelsInternalServerError() *ListCronJobByLabelsInternalServerError {
	return &ListCronJobByLabelsInternalServerError{}
}

/*
ListCronJobByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListCronJobByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list cron job by labels internal server error response has a 2xx status code
func (o *ListCronJobByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list cron job by labels internal server error response has a 3xx status code
func (o *ListCronJobByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list cron job by labels internal server error response has a 4xx status code
func (o *ListCronJobByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list cron job by labels internal server error response has a 5xx status code
func (o *ListCronJobByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list cron job by labels internal server error response a status code equal to that given
func (o *ListCronJobByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list cron job by labels internal server error response
func (o *ListCronJobByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListCronJobByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsInternalServerError %s", 500, payload)
}

func (o *ListCronJobByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/cronJobs][%d] listCronJobByLabelsInternalServerError %s", 500, payload)
}

func (o *ListCronJobByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListCronJobByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
