// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListReplicasetsByLabelsReader is a Reader for the ListReplicasetsByLabels structure.
type ListReplicasetsByLabelsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListReplicasetsByLabelsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListReplicasetsByLabelsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListReplicasetsByLabelsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListReplicasetsByLabelsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListReplicasetsByLabelsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListReplicasetsByLabelsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets] listReplicasetsByLabels", response, response.Code())
	}
}

// NewListReplicasetsByLabelsOK creates a ListReplicasetsByLabelsOK with default headers values
func NewListReplicasetsByLabelsOK() *ListReplicasetsByLabelsOK {
	return &ListReplicasetsByLabelsOK{}
}

/*
ListReplicasetsByLabelsOK describes a response with status code 200, with default header values.

OK
*/
type ListReplicasetsByLabelsOK struct {
	Payload []*models.ReplicasetDTO
}

// IsSuccess returns true when this list replicasets by labels o k response has a 2xx status code
func (o *ListReplicasetsByLabelsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list replicasets by labels o k response has a 3xx status code
func (o *ListReplicasetsByLabelsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels o k response has a 4xx status code
func (o *ListReplicasetsByLabelsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list replicasets by labels o k response has a 5xx status code
func (o *ListReplicasetsByLabelsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels o k response a status code equal to that given
func (o *ListReplicasetsByLabelsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list replicasets by labels o k response
func (o *ListReplicasetsByLabelsOK) Code() int {
	return 200
}

func (o *ListReplicasetsByLabelsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsOK %s", 200, payload)
}

func (o *ListReplicasetsByLabelsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsOK %s", 200, payload)
}

func (o *ListReplicasetsByLabelsOK) GetPayload() []*models.ReplicasetDTO {
	return o.Payload
}

func (o *ListReplicasetsByLabelsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReplicasetsByLabelsBadRequest creates a ListReplicasetsByLabelsBadRequest with default headers values
func NewListReplicasetsByLabelsBadRequest() *ListReplicasetsByLabelsBadRequest {
	return &ListReplicasetsByLabelsBadRequest{}
}

/*
ListReplicasetsByLabelsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListReplicasetsByLabelsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list replicasets by labels bad request response has a 2xx status code
func (o *ListReplicasetsByLabelsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list replicasets by labels bad request response has a 3xx status code
func (o *ListReplicasetsByLabelsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels bad request response has a 4xx status code
func (o *ListReplicasetsByLabelsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list replicasets by labels bad request response has a 5xx status code
func (o *ListReplicasetsByLabelsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels bad request response a status code equal to that given
func (o *ListReplicasetsByLabelsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list replicasets by labels bad request response
func (o *ListReplicasetsByLabelsBadRequest) Code() int {
	return 400
}

func (o *ListReplicasetsByLabelsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsBadRequest %s", 400, payload)
}

func (o *ListReplicasetsByLabelsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsBadRequest %s", 400, payload)
}

func (o *ListReplicasetsByLabelsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListReplicasetsByLabelsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReplicasetsByLabelsNotFound creates a ListReplicasetsByLabelsNotFound with default headers values
func NewListReplicasetsByLabelsNotFound() *ListReplicasetsByLabelsNotFound {
	return &ListReplicasetsByLabelsNotFound{}
}

/*
ListReplicasetsByLabelsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListReplicasetsByLabelsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list replicasets by labels not found response has a 2xx status code
func (o *ListReplicasetsByLabelsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list replicasets by labels not found response has a 3xx status code
func (o *ListReplicasetsByLabelsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels not found response has a 4xx status code
func (o *ListReplicasetsByLabelsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list replicasets by labels not found response has a 5xx status code
func (o *ListReplicasetsByLabelsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels not found response a status code equal to that given
func (o *ListReplicasetsByLabelsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list replicasets by labels not found response
func (o *ListReplicasetsByLabelsNotFound) Code() int {
	return 404
}

func (o *ListReplicasetsByLabelsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsNotFound %s", 404, payload)
}

func (o *ListReplicasetsByLabelsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsNotFound %s", 404, payload)
}

func (o *ListReplicasetsByLabelsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListReplicasetsByLabelsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReplicasetsByLabelsMethodNotAllowed creates a ListReplicasetsByLabelsMethodNotAllowed with default headers values
func NewListReplicasetsByLabelsMethodNotAllowed() *ListReplicasetsByLabelsMethodNotAllowed {
	return &ListReplicasetsByLabelsMethodNotAllowed{}
}

/*
ListReplicasetsByLabelsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListReplicasetsByLabelsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list replicasets by labels method not allowed response has a 2xx status code
func (o *ListReplicasetsByLabelsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list replicasets by labels method not allowed response has a 3xx status code
func (o *ListReplicasetsByLabelsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels method not allowed response has a 4xx status code
func (o *ListReplicasetsByLabelsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list replicasets by labels method not allowed response has a 5xx status code
func (o *ListReplicasetsByLabelsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list replicasets by labels method not allowed response a status code equal to that given
func (o *ListReplicasetsByLabelsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list replicasets by labels method not allowed response
func (o *ListReplicasetsByLabelsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListReplicasetsByLabelsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListReplicasetsByLabelsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsMethodNotAllowed %s", 405, payload)
}

func (o *ListReplicasetsByLabelsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListReplicasetsByLabelsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListReplicasetsByLabelsInternalServerError creates a ListReplicasetsByLabelsInternalServerError with default headers values
func NewListReplicasetsByLabelsInternalServerError() *ListReplicasetsByLabelsInternalServerError {
	return &ListReplicasetsByLabelsInternalServerError{}
}

/*
ListReplicasetsByLabelsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListReplicasetsByLabelsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list replicasets by labels internal server error response has a 2xx status code
func (o *ListReplicasetsByLabelsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list replicasets by labels internal server error response has a 3xx status code
func (o *ListReplicasetsByLabelsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list replicasets by labels internal server error response has a 4xx status code
func (o *ListReplicasetsByLabelsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list replicasets by labels internal server error response has a 5xx status code
func (o *ListReplicasetsByLabelsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list replicasets by labels internal server error response a status code equal to that given
func (o *ListReplicasetsByLabelsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list replicasets by labels internal server error response
func (o *ListReplicasetsByLabelsInternalServerError) Code() int {
	return 500
}

func (o *ListReplicasetsByLabelsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListReplicasetsByLabelsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/replicasets][%d] listReplicasetsByLabelsInternalServerError %s", 500, payload)
}

func (o *ListReplicasetsByLabelsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListReplicasetsByLabelsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
