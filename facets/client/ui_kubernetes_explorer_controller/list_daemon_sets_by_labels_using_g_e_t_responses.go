// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListDaemonSetsByLabelsUsingGETReader is a Reader for the ListDaemonSetsByLabelsUsingGET structure.
type ListDaemonSetsByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListDaemonSetsByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListDaemonSetsByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListDaemonSetsByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListDaemonSetsByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListDaemonSetsByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets] listDaemonSetsByLabelsUsingGET", response, response.Code())
	}
}

// NewListDaemonSetsByLabelsUsingGETOK creates a ListDaemonSetsByLabelsUsingGETOK with default headers values
func NewListDaemonSetsByLabelsUsingGETOK() *ListDaemonSetsByLabelsUsingGETOK {
	return &ListDaemonSetsByLabelsUsingGETOK{}
}

/*
ListDaemonSetsByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListDaemonSetsByLabelsUsingGETOK struct {
	Payload []*models.DaemonSetDTO
}

// IsSuccess returns true when this list daemon sets by labels using g e t o k response has a 2xx status code
func (o *ListDaemonSetsByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list daemon sets by labels using g e t o k response has a 3xx status code
func (o *ListDaemonSetsByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels using g e t o k response has a 4xx status code
func (o *ListDaemonSetsByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list daemon sets by labels using g e t o k response has a 5xx status code
func (o *ListDaemonSetsByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels using g e t o k response a status code equal to that given
func (o *ListDaemonSetsByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list daemon sets by labels using g e t o k response
func (o *ListDaemonSetsByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListDaemonSetsByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListDaemonSetsByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListDaemonSetsByLabelsUsingGETOK) GetPayload() []*models.DaemonSetDTO {
	return o.Payload
}

func (o *ListDaemonSetsByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListDaemonSetsByLabelsUsingGETUnauthorized creates a ListDaemonSetsByLabelsUsingGETUnauthorized with default headers values
func NewListDaemonSetsByLabelsUsingGETUnauthorized() *ListDaemonSetsByLabelsUsingGETUnauthorized {
	return &ListDaemonSetsByLabelsUsingGETUnauthorized{}
}

/*
ListDaemonSetsByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListDaemonSetsByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list daemon sets by labels using g e t unauthorized response has a 2xx status code
func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list daemon sets by labels using g e t unauthorized response has a 3xx status code
func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels using g e t unauthorized response has a 4xx status code
func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list daemon sets by labels using g e t unauthorized response has a 5xx status code
func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels using g e t unauthorized response a status code equal to that given
func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list daemon sets by labels using g e t unauthorized response
func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETUnauthorized", 401)
}

func (o *ListDaemonSetsByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDaemonSetsByLabelsUsingGETForbidden creates a ListDaemonSetsByLabelsUsingGETForbidden with default headers values
func NewListDaemonSetsByLabelsUsingGETForbidden() *ListDaemonSetsByLabelsUsingGETForbidden {
	return &ListDaemonSetsByLabelsUsingGETForbidden{}
}

/*
ListDaemonSetsByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListDaemonSetsByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list daemon sets by labels using g e t forbidden response has a 2xx status code
func (o *ListDaemonSetsByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list daemon sets by labels using g e t forbidden response has a 3xx status code
func (o *ListDaemonSetsByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels using g e t forbidden response has a 4xx status code
func (o *ListDaemonSetsByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list daemon sets by labels using g e t forbidden response has a 5xx status code
func (o *ListDaemonSetsByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels using g e t forbidden response a status code equal to that given
func (o *ListDaemonSetsByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list daemon sets by labels using g e t forbidden response
func (o *ListDaemonSetsByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListDaemonSetsByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETForbidden", 403)
}

func (o *ListDaemonSetsByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETForbidden", 403)
}

func (o *ListDaemonSetsByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListDaemonSetsByLabelsUsingGETNotFound creates a ListDaemonSetsByLabelsUsingGETNotFound with default headers values
func NewListDaemonSetsByLabelsUsingGETNotFound() *ListDaemonSetsByLabelsUsingGETNotFound {
	return &ListDaemonSetsByLabelsUsingGETNotFound{}
}

/*
ListDaemonSetsByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListDaemonSetsByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list daemon sets by labels using g e t not found response has a 2xx status code
func (o *ListDaemonSetsByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list daemon sets by labels using g e t not found response has a 3xx status code
func (o *ListDaemonSetsByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list daemon sets by labels using g e t not found response has a 4xx status code
func (o *ListDaemonSetsByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list daemon sets by labels using g e t not found response has a 5xx status code
func (o *ListDaemonSetsByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list daemon sets by labels using g e t not found response a status code equal to that given
func (o *ListDaemonSetsByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list daemon sets by labels using g e t not found response
func (o *ListDaemonSetsByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListDaemonSetsByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETNotFound", 404)
}

func (o *ListDaemonSetsByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/daemonSets][%d] listDaemonSetsByLabelsUsingGETNotFound", 404)
}

func (o *ListDaemonSetsByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
