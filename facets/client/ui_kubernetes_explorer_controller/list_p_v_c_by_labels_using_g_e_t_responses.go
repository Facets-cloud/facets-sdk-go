// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListPVCByLabelsUsingGETReader is a Reader for the ListPVCByLabelsUsingGET structure.
type ListPVCByLabelsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPVCByLabelsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPVCByLabelsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListPVCByLabelsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListPVCByLabelsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPVCByLabelsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc] listPVCByLabelsUsingGET", response, response.Code())
	}
}

// NewListPVCByLabelsUsingGETOK creates a ListPVCByLabelsUsingGETOK with default headers values
func NewListPVCByLabelsUsingGETOK() *ListPVCByLabelsUsingGETOK {
	return &ListPVCByLabelsUsingGETOK{}
}

/*
ListPVCByLabelsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListPVCByLabelsUsingGETOK struct {
	Payload []*models.PersistentVolumeClaimDTO
}

// IsSuccess returns true when this list p v c by labels using g e t o k response has a 2xx status code
func (o *ListPVCByLabelsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list p v c by labels using g e t o k response has a 3xx status code
func (o *ListPVCByLabelsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels using g e t o k response has a 4xx status code
func (o *ListPVCByLabelsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list p v c by labels using g e t o k response has a 5xx status code
func (o *ListPVCByLabelsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels using g e t o k response a status code equal to that given
func (o *ListPVCByLabelsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list p v c by labels using g e t o k response
func (o *ListPVCByLabelsUsingGETOK) Code() int {
	return 200
}

func (o *ListPVCByLabelsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListPVCByLabelsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETOK %s", 200, payload)
}

func (o *ListPVCByLabelsUsingGETOK) GetPayload() []*models.PersistentVolumeClaimDTO {
	return o.Payload
}

func (o *ListPVCByLabelsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPVCByLabelsUsingGETUnauthorized creates a ListPVCByLabelsUsingGETUnauthorized with default headers values
func NewListPVCByLabelsUsingGETUnauthorized() *ListPVCByLabelsUsingGETUnauthorized {
	return &ListPVCByLabelsUsingGETUnauthorized{}
}

/*
ListPVCByLabelsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListPVCByLabelsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list p v c by labels using g e t unauthorized response has a 2xx status code
func (o *ListPVCByLabelsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v c by labels using g e t unauthorized response has a 3xx status code
func (o *ListPVCByLabelsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels using g e t unauthorized response has a 4xx status code
func (o *ListPVCByLabelsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v c by labels using g e t unauthorized response has a 5xx status code
func (o *ListPVCByLabelsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels using g e t unauthorized response a status code equal to that given
func (o *ListPVCByLabelsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list p v c by labels using g e t unauthorized response
func (o *ListPVCByLabelsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListPVCByLabelsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETUnauthorized", 401)
}

func (o *ListPVCByLabelsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETUnauthorized", 401)
}

func (o *ListPVCByLabelsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPVCByLabelsUsingGETForbidden creates a ListPVCByLabelsUsingGETForbidden with default headers values
func NewListPVCByLabelsUsingGETForbidden() *ListPVCByLabelsUsingGETForbidden {
	return &ListPVCByLabelsUsingGETForbidden{}
}

/*
ListPVCByLabelsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListPVCByLabelsUsingGETForbidden struct {
}

// IsSuccess returns true when this list p v c by labels using g e t forbidden response has a 2xx status code
func (o *ListPVCByLabelsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v c by labels using g e t forbidden response has a 3xx status code
func (o *ListPVCByLabelsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels using g e t forbidden response has a 4xx status code
func (o *ListPVCByLabelsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v c by labels using g e t forbidden response has a 5xx status code
func (o *ListPVCByLabelsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels using g e t forbidden response a status code equal to that given
func (o *ListPVCByLabelsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list p v c by labels using g e t forbidden response
func (o *ListPVCByLabelsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListPVCByLabelsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETForbidden", 403)
}

func (o *ListPVCByLabelsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETForbidden", 403)
}

func (o *ListPVCByLabelsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListPVCByLabelsUsingGETNotFound creates a ListPVCByLabelsUsingGETNotFound with default headers values
func NewListPVCByLabelsUsingGETNotFound() *ListPVCByLabelsUsingGETNotFound {
	return &ListPVCByLabelsUsingGETNotFound{}
}

/*
ListPVCByLabelsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListPVCByLabelsUsingGETNotFound struct {
}

// IsSuccess returns true when this list p v c by labels using g e t not found response has a 2xx status code
func (o *ListPVCByLabelsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list p v c by labels using g e t not found response has a 3xx status code
func (o *ListPVCByLabelsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list p v c by labels using g e t not found response has a 4xx status code
func (o *ListPVCByLabelsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list p v c by labels using g e t not found response has a 5xx status code
func (o *ListPVCByLabelsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list p v c by labels using g e t not found response a status code equal to that given
func (o *ListPVCByLabelsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list p v c by labels using g e t not found response
func (o *ListPVCByLabelsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListPVCByLabelsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETNotFound", 404)
}

func (o *ListPVCByLabelsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pvc][%d] listPVCByLabelsUsingGETNotFound", 404)
}

func (o *ListPVCByLabelsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
