// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllIngressRulesForClusterUsingGETReader is a Reader for the GetAllIngressRulesForClusterUsingGET structure.
type GetAllIngressRulesForClusterUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllIngressRulesForClusterUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllIngressRulesForClusterUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllIngressRulesForClusterUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllIngressRulesForClusterUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllIngressRulesForClusterUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules] getAllIngressRulesForClusterUsingGET", response, response.Code())
	}
}

// NewGetAllIngressRulesForClusterUsingGETOK creates a GetAllIngressRulesForClusterUsingGETOK with default headers values
func NewGetAllIngressRulesForClusterUsingGETOK() *GetAllIngressRulesForClusterUsingGETOK {
	return &GetAllIngressRulesForClusterUsingGETOK{}
}

/*
GetAllIngressRulesForClusterUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllIngressRulesForClusterUsingGETOK struct {
	Payload []*models.IngressRulesDTO
}

// IsSuccess returns true when this get all ingress rules for cluster using g e t o k response has a 2xx status code
func (o *GetAllIngressRulesForClusterUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all ingress rules for cluster using g e t o k response has a 3xx status code
func (o *GetAllIngressRulesForClusterUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all ingress rules for cluster using g e t o k response has a 4xx status code
func (o *GetAllIngressRulesForClusterUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all ingress rules for cluster using g e t o k response has a 5xx status code
func (o *GetAllIngressRulesForClusterUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all ingress rules for cluster using g e t o k response a status code equal to that given
func (o *GetAllIngressRulesForClusterUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all ingress rules for cluster using g e t o k response
func (o *GetAllIngressRulesForClusterUsingGETOK) Code() int {
	return 200
}

func (o *GetAllIngressRulesForClusterUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETOK %s", 200, payload)
}

func (o *GetAllIngressRulesForClusterUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETOK %s", 200, payload)
}

func (o *GetAllIngressRulesForClusterUsingGETOK) GetPayload() []*models.IngressRulesDTO {
	return o.Payload
}

func (o *GetAllIngressRulesForClusterUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllIngressRulesForClusterUsingGETUnauthorized creates a GetAllIngressRulesForClusterUsingGETUnauthorized with default headers values
func NewGetAllIngressRulesForClusterUsingGETUnauthorized() *GetAllIngressRulesForClusterUsingGETUnauthorized {
	return &GetAllIngressRulesForClusterUsingGETUnauthorized{}
}

/*
GetAllIngressRulesForClusterUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllIngressRulesForClusterUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all ingress rules for cluster using g e t unauthorized response has a 2xx status code
func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all ingress rules for cluster using g e t unauthorized response has a 3xx status code
func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all ingress rules for cluster using g e t unauthorized response has a 4xx status code
func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all ingress rules for cluster using g e t unauthorized response has a 5xx status code
func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all ingress rules for cluster using g e t unauthorized response a status code equal to that given
func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all ingress rules for cluster using g e t unauthorized response
func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETUnauthorized", 401)
}

func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETUnauthorized", 401)
}

func (o *GetAllIngressRulesForClusterUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllIngressRulesForClusterUsingGETForbidden creates a GetAllIngressRulesForClusterUsingGETForbidden with default headers values
func NewGetAllIngressRulesForClusterUsingGETForbidden() *GetAllIngressRulesForClusterUsingGETForbidden {
	return &GetAllIngressRulesForClusterUsingGETForbidden{}
}

/*
GetAllIngressRulesForClusterUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllIngressRulesForClusterUsingGETForbidden struct {
}

// IsSuccess returns true when this get all ingress rules for cluster using g e t forbidden response has a 2xx status code
func (o *GetAllIngressRulesForClusterUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all ingress rules for cluster using g e t forbidden response has a 3xx status code
func (o *GetAllIngressRulesForClusterUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all ingress rules for cluster using g e t forbidden response has a 4xx status code
func (o *GetAllIngressRulesForClusterUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all ingress rules for cluster using g e t forbidden response has a 5xx status code
func (o *GetAllIngressRulesForClusterUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all ingress rules for cluster using g e t forbidden response a status code equal to that given
func (o *GetAllIngressRulesForClusterUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all ingress rules for cluster using g e t forbidden response
func (o *GetAllIngressRulesForClusterUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllIngressRulesForClusterUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETForbidden", 403)
}

func (o *GetAllIngressRulesForClusterUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETForbidden", 403)
}

func (o *GetAllIngressRulesForClusterUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllIngressRulesForClusterUsingGETNotFound creates a GetAllIngressRulesForClusterUsingGETNotFound with default headers values
func NewGetAllIngressRulesForClusterUsingGETNotFound() *GetAllIngressRulesForClusterUsingGETNotFound {
	return &GetAllIngressRulesForClusterUsingGETNotFound{}
}

/*
GetAllIngressRulesForClusterUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllIngressRulesForClusterUsingGETNotFound struct {
}

// IsSuccess returns true when this get all ingress rules for cluster using g e t not found response has a 2xx status code
func (o *GetAllIngressRulesForClusterUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all ingress rules for cluster using g e t not found response has a 3xx status code
func (o *GetAllIngressRulesForClusterUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all ingress rules for cluster using g e t not found response has a 4xx status code
func (o *GetAllIngressRulesForClusterUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all ingress rules for cluster using g e t not found response has a 5xx status code
func (o *GetAllIngressRulesForClusterUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all ingress rules for cluster using g e t not found response a status code equal to that given
func (o *GetAllIngressRulesForClusterUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all ingress rules for cluster using g e t not found response
func (o *GetAllIngressRulesForClusterUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllIngressRulesForClusterUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETNotFound", 404)
}

func (o *GetAllIngressRulesForClusterUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/ingress-rules][%d] getAllIngressRulesForClusterUsingGETNotFound", 404)
}

func (o *GetAllIngressRulesForClusterUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
