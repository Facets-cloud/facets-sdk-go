// Code generated by go-swagger; DO NOT EDIT.

package ui_kubernetes_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ContainerLogsReader is a Reader for the ContainerLogs structure.
type ContainerLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ContainerLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewContainerLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewContainerLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewContainerLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewContainerLogsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewContainerLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs] containerLogs", response, response.Code())
	}
}

// NewContainerLogsOK creates a ContainerLogsOK with default headers values
func NewContainerLogsOK() *ContainerLogsOK {
	return &ContainerLogsOK{}
}

/*
ContainerLogsOK describes a response with status code 200, with default header values.

OK
*/
type ContainerLogsOK struct {
	Payload models.StreamingResponseBody
}

// IsSuccess returns true when this container logs o k response has a 2xx status code
func (o *ContainerLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this container logs o k response has a 3xx status code
func (o *ContainerLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container logs o k response has a 4xx status code
func (o *ContainerLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this container logs o k response has a 5xx status code
func (o *ContainerLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this container logs o k response a status code equal to that given
func (o *ContainerLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the container logs o k response
func (o *ContainerLogsOK) Code() int {
	return 200
}

func (o *ContainerLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsOK %s", 200, payload)
}

func (o *ContainerLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsOK %s", 200, payload)
}

func (o *ContainerLogsOK) GetPayload() models.StreamingResponseBody {
	return o.Payload
}

func (o *ContainerLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerLogsBadRequest creates a ContainerLogsBadRequest with default headers values
func NewContainerLogsBadRequest() *ContainerLogsBadRequest {
	return &ContainerLogsBadRequest{}
}

/*
ContainerLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ContainerLogsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this container logs bad request response has a 2xx status code
func (o *ContainerLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this container logs bad request response has a 3xx status code
func (o *ContainerLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container logs bad request response has a 4xx status code
func (o *ContainerLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this container logs bad request response has a 5xx status code
func (o *ContainerLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this container logs bad request response a status code equal to that given
func (o *ContainerLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the container logs bad request response
func (o *ContainerLogsBadRequest) Code() int {
	return 400
}

func (o *ContainerLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsBadRequest %s", 400, payload)
}

func (o *ContainerLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsBadRequest %s", 400, payload)
}

func (o *ContainerLogsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ContainerLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerLogsNotFound creates a ContainerLogsNotFound with default headers values
func NewContainerLogsNotFound() *ContainerLogsNotFound {
	return &ContainerLogsNotFound{}
}

/*
ContainerLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ContainerLogsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this container logs not found response has a 2xx status code
func (o *ContainerLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this container logs not found response has a 3xx status code
func (o *ContainerLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container logs not found response has a 4xx status code
func (o *ContainerLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this container logs not found response has a 5xx status code
func (o *ContainerLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this container logs not found response a status code equal to that given
func (o *ContainerLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the container logs not found response
func (o *ContainerLogsNotFound) Code() int {
	return 404
}

func (o *ContainerLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsNotFound %s", 404, payload)
}

func (o *ContainerLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsNotFound %s", 404, payload)
}

func (o *ContainerLogsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ContainerLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerLogsMethodNotAllowed creates a ContainerLogsMethodNotAllowed with default headers values
func NewContainerLogsMethodNotAllowed() *ContainerLogsMethodNotAllowed {
	return &ContainerLogsMethodNotAllowed{}
}

/*
ContainerLogsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ContainerLogsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this container logs method not allowed response has a 2xx status code
func (o *ContainerLogsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this container logs method not allowed response has a 3xx status code
func (o *ContainerLogsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container logs method not allowed response has a 4xx status code
func (o *ContainerLogsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this container logs method not allowed response has a 5xx status code
func (o *ContainerLogsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this container logs method not allowed response a status code equal to that given
func (o *ContainerLogsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the container logs method not allowed response
func (o *ContainerLogsMethodNotAllowed) Code() int {
	return 405
}

func (o *ContainerLogsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsMethodNotAllowed %s", 405, payload)
}

func (o *ContainerLogsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsMethodNotAllowed %s", 405, payload)
}

func (o *ContainerLogsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ContainerLogsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewContainerLogsInternalServerError creates a ContainerLogsInternalServerError with default headers values
func NewContainerLogsInternalServerError() *ContainerLogsInternalServerError {
	return &ContainerLogsInternalServerError{}
}

/*
ContainerLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ContainerLogsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this container logs internal server error response has a 2xx status code
func (o *ContainerLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this container logs internal server error response has a 3xx status code
func (o *ContainerLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this container logs internal server error response has a 4xx status code
func (o *ContainerLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this container logs internal server error response has a 5xx status code
func (o *ContainerLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this container logs internal server error response a status code equal to that given
func (o *ContainerLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the container logs internal server error response
func (o *ContainerLogsInternalServerError) Code() int {
	return 500
}

func (o *ContainerLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsInternalServerError %s", 500, payload)
}

func (o *ContainerLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/k8s-explorer/pods/{podName}/{containerName}/logs][%d] containerLogsInternalServerError %s", 500, payload)
}

func (o *ContainerLogsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ContainerLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
