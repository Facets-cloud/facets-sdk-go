// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceByNameReader is a Reader for the GetResourceByName structure.
type GetResourceByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetResourceByNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}] getResourceByName", response, response.Code())
	}
}

// NewGetResourceByNameOK creates a GetResourceByNameOK with default headers values
func NewGetResourceByNameOK() *GetResourceByNameOK {
	return &GetResourceByNameOK{}
}

/*
GetResourceByNameOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceByNameOK struct {
	Payload map[string]interface{}
}

// IsSuccess returns true when this get resource by name o k response has a 2xx status code
func (o *GetResourceByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource by name o k response has a 3xx status code
func (o *GetResourceByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name o k response has a 4xx status code
func (o *GetResourceByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by name o k response has a 5xx status code
func (o *GetResourceByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name o k response a status code equal to that given
func (o *GetResourceByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource by name o k response
func (o *GetResourceByNameOK) Code() int {
	return 200
}

func (o *GetResourceByNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameOK %s", 200, payload)
}

func (o *GetResourceByNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameOK %s", 200, payload)
}

func (o *GetResourceByNameOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *GetResourceByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByNameBadRequest creates a GetResourceByNameBadRequest with default headers values
func NewGetResourceByNameBadRequest() *GetResourceByNameBadRequest {
	return &GetResourceByNameBadRequest{}
}

/*
GetResourceByNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceByNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by name bad request response has a 2xx status code
func (o *GetResourceByNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by name bad request response has a 3xx status code
func (o *GetResourceByNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name bad request response has a 4xx status code
func (o *GetResourceByNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by name bad request response has a 5xx status code
func (o *GetResourceByNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name bad request response a status code equal to that given
func (o *GetResourceByNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get resource by name bad request response
func (o *GetResourceByNameBadRequest) Code() int {
	return 400
}

func (o *GetResourceByNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameBadRequest %s", 400, payload)
}

func (o *GetResourceByNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameBadRequest %s", 400, payload)
}

func (o *GetResourceByNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByNameNotFound creates a GetResourceByNameNotFound with default headers values
func NewGetResourceByNameNotFound() *GetResourceByNameNotFound {
	return &GetResourceByNameNotFound{}
}

/*
GetResourceByNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceByNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by name not found response has a 2xx status code
func (o *GetResourceByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by name not found response has a 3xx status code
func (o *GetResourceByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name not found response has a 4xx status code
func (o *GetResourceByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by name not found response has a 5xx status code
func (o *GetResourceByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name not found response a status code equal to that given
func (o *GetResourceByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource by name not found response
func (o *GetResourceByNameNotFound) Code() int {
	return 404
}

func (o *GetResourceByNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameNotFound %s", 404, payload)
}

func (o *GetResourceByNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameNotFound %s", 404, payload)
}

func (o *GetResourceByNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByNameMethodNotAllowed creates a GetResourceByNameMethodNotAllowed with default headers values
func NewGetResourceByNameMethodNotAllowed() *GetResourceByNameMethodNotAllowed {
	return &GetResourceByNameMethodNotAllowed{}
}

/*
GetResourceByNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetResourceByNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by name method not allowed response has a 2xx status code
func (o *GetResourceByNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by name method not allowed response has a 3xx status code
func (o *GetResourceByNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name method not allowed response has a 4xx status code
func (o *GetResourceByNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by name method not allowed response has a 5xx status code
func (o *GetResourceByNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name method not allowed response a status code equal to that given
func (o *GetResourceByNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get resource by name method not allowed response
func (o *GetResourceByNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetResourceByNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceByNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceByNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByNameInternalServerError creates a GetResourceByNameInternalServerError with default headers values
func NewGetResourceByNameInternalServerError() *GetResourceByNameInternalServerError {
	return &GetResourceByNameInternalServerError{}
}

/*
GetResourceByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceByNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by name internal server error response has a 2xx status code
func (o *GetResourceByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by name internal server error response has a 3xx status code
func (o *GetResourceByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name internal server error response has a 4xx status code
func (o *GetResourceByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by name internal server error response has a 5xx status code
func (o *GetResourceByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource by name internal server error response a status code equal to that given
func (o *GetResourceByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource by name internal server error response
func (o *GetResourceByNameInternalServerError) Code() int {
	return 500
}

func (o *GetResourceByNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameInternalServerError %s", 500, payload)
}

func (o *GetResourceByNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/{resourceType}/{appName}][%d] getResourceByNameInternalServerError %s", 500, payload)
}

func (o *GetResourceByNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
