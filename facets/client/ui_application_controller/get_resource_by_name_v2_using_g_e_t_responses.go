// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetResourceByNameV2UsingGETReader is a Reader for the GetResourceByNameV2UsingGET structure.
type GetResourceByNameV2UsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceByNameV2UsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceByNameV2UsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceByNameV2UsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceByNameV2UsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceByNameV2UsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}] getResourceByNameV2UsingGET", response, response.Code())
	}
}

// NewGetResourceByNameV2UsingGETOK creates a GetResourceByNameV2UsingGETOK with default headers values
func NewGetResourceByNameV2UsingGETOK() *GetResourceByNameV2UsingGETOK {
	return &GetResourceByNameV2UsingGETOK{}
}

/*
GetResourceByNameV2UsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceByNameV2UsingGETOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get resource by name v2 using g e t o k response has a 2xx status code
func (o *GetResourceByNameV2UsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource by name v2 using g e t o k response has a 3xx status code
func (o *GetResourceByNameV2UsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name v2 using g e t o k response has a 4xx status code
func (o *GetResourceByNameV2UsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by name v2 using g e t o k response has a 5xx status code
func (o *GetResourceByNameV2UsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name v2 using g e t o k response a status code equal to that given
func (o *GetResourceByNameV2UsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource by name v2 using g e t o k response
func (o *GetResourceByNameV2UsingGETOK) Code() int {
	return 200
}

func (o *GetResourceByNameV2UsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETOK %s", 200, payload)
}

func (o *GetResourceByNameV2UsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETOK %s", 200, payload)
}

func (o *GetResourceByNameV2UsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetResourceByNameV2UsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByNameV2UsingGETUnauthorized creates a GetResourceByNameV2UsingGETUnauthorized with default headers values
func NewGetResourceByNameV2UsingGETUnauthorized() *GetResourceByNameV2UsingGETUnauthorized {
	return &GetResourceByNameV2UsingGETUnauthorized{}
}

/*
GetResourceByNameV2UsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceByNameV2UsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource by name v2 using g e t unauthorized response has a 2xx status code
func (o *GetResourceByNameV2UsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by name v2 using g e t unauthorized response has a 3xx status code
func (o *GetResourceByNameV2UsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name v2 using g e t unauthorized response has a 4xx status code
func (o *GetResourceByNameV2UsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by name v2 using g e t unauthorized response has a 5xx status code
func (o *GetResourceByNameV2UsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name v2 using g e t unauthorized response a status code equal to that given
func (o *GetResourceByNameV2UsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource by name v2 using g e t unauthorized response
func (o *GetResourceByNameV2UsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceByNameV2UsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETUnauthorized", 401)
}

func (o *GetResourceByNameV2UsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETUnauthorized", 401)
}

func (o *GetResourceByNameV2UsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceByNameV2UsingGETForbidden creates a GetResourceByNameV2UsingGETForbidden with default headers values
func NewGetResourceByNameV2UsingGETForbidden() *GetResourceByNameV2UsingGETForbidden {
	return &GetResourceByNameV2UsingGETForbidden{}
}

/*
GetResourceByNameV2UsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceByNameV2UsingGETForbidden struct {
}

// IsSuccess returns true when this get resource by name v2 using g e t forbidden response has a 2xx status code
func (o *GetResourceByNameV2UsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by name v2 using g e t forbidden response has a 3xx status code
func (o *GetResourceByNameV2UsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name v2 using g e t forbidden response has a 4xx status code
func (o *GetResourceByNameV2UsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by name v2 using g e t forbidden response has a 5xx status code
func (o *GetResourceByNameV2UsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name v2 using g e t forbidden response a status code equal to that given
func (o *GetResourceByNameV2UsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource by name v2 using g e t forbidden response
func (o *GetResourceByNameV2UsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceByNameV2UsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETForbidden", 403)
}

func (o *GetResourceByNameV2UsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETForbidden", 403)
}

func (o *GetResourceByNameV2UsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceByNameV2UsingGETNotFound creates a GetResourceByNameV2UsingGETNotFound with default headers values
func NewGetResourceByNameV2UsingGETNotFound() *GetResourceByNameV2UsingGETNotFound {
	return &GetResourceByNameV2UsingGETNotFound{}
}

/*
GetResourceByNameV2UsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceByNameV2UsingGETNotFound struct {
}

// IsSuccess returns true when this get resource by name v2 using g e t not found response has a 2xx status code
func (o *GetResourceByNameV2UsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by name v2 using g e t not found response has a 3xx status code
func (o *GetResourceByNameV2UsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by name v2 using g e t not found response has a 4xx status code
func (o *GetResourceByNameV2UsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by name v2 using g e t not found response has a 5xx status code
func (o *GetResourceByNameV2UsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by name v2 using g e t not found response a status code equal to that given
func (o *GetResourceByNameV2UsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource by name v2 using g e t not found response
func (o *GetResourceByNameV2UsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceByNameV2UsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETNotFound", 404)
}

func (o *GetResourceByNameV2UsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getResourceByNameV2UsingGETNotFound", 404)
}

func (o *GetResourceByNameV2UsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
