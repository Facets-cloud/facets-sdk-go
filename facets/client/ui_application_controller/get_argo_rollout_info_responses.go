// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArgoRolloutInfoReader is a Reader for the GetArgoRolloutInfo structure.
type GetArgoRolloutInfoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArgoRolloutInfoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArgoRolloutInfoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArgoRolloutInfoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArgoRolloutInfoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetArgoRolloutInfoMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArgoRolloutInfoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/argo-info] getArgoRolloutInfo", response, response.Code())
	}
}

// NewGetArgoRolloutInfoOK creates a GetArgoRolloutInfoOK with default headers values
func NewGetArgoRolloutInfoOK() *GetArgoRolloutInfoOK {
	return &GetArgoRolloutInfoOK{}
}

/*
GetArgoRolloutInfoOK describes a response with status code 200, with default header values.

OK
*/
type GetArgoRolloutInfoOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get argo rollout info o k response has a 2xx status code
func (o *GetArgoRolloutInfoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get argo rollout info o k response has a 3xx status code
func (o *GetArgoRolloutInfoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get argo rollout info o k response has a 4xx status code
func (o *GetArgoRolloutInfoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get argo rollout info o k response has a 5xx status code
func (o *GetArgoRolloutInfoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get argo rollout info o k response a status code equal to that given
func (o *GetArgoRolloutInfoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get argo rollout info o k response
func (o *GetArgoRolloutInfoOK) Code() int {
	return 200
}

func (o *GetArgoRolloutInfoOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoOK %s", 200, payload)
}

func (o *GetArgoRolloutInfoOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoOK %s", 200, payload)
}

func (o *GetArgoRolloutInfoOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetArgoRolloutInfoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArgoRolloutInfoBadRequest creates a GetArgoRolloutInfoBadRequest with default headers values
func NewGetArgoRolloutInfoBadRequest() *GetArgoRolloutInfoBadRequest {
	return &GetArgoRolloutInfoBadRequest{}
}

/*
GetArgoRolloutInfoBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArgoRolloutInfoBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get argo rollout info bad request response has a 2xx status code
func (o *GetArgoRolloutInfoBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get argo rollout info bad request response has a 3xx status code
func (o *GetArgoRolloutInfoBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get argo rollout info bad request response has a 4xx status code
func (o *GetArgoRolloutInfoBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get argo rollout info bad request response has a 5xx status code
func (o *GetArgoRolloutInfoBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get argo rollout info bad request response a status code equal to that given
func (o *GetArgoRolloutInfoBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get argo rollout info bad request response
func (o *GetArgoRolloutInfoBadRequest) Code() int {
	return 400
}

func (o *GetArgoRolloutInfoBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoBadRequest %s", 400, payload)
}

func (o *GetArgoRolloutInfoBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoBadRequest %s", 400, payload)
}

func (o *GetArgoRolloutInfoBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArgoRolloutInfoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArgoRolloutInfoNotFound creates a GetArgoRolloutInfoNotFound with default headers values
func NewGetArgoRolloutInfoNotFound() *GetArgoRolloutInfoNotFound {
	return &GetArgoRolloutInfoNotFound{}
}

/*
GetArgoRolloutInfoNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArgoRolloutInfoNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get argo rollout info not found response has a 2xx status code
func (o *GetArgoRolloutInfoNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get argo rollout info not found response has a 3xx status code
func (o *GetArgoRolloutInfoNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get argo rollout info not found response has a 4xx status code
func (o *GetArgoRolloutInfoNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get argo rollout info not found response has a 5xx status code
func (o *GetArgoRolloutInfoNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get argo rollout info not found response a status code equal to that given
func (o *GetArgoRolloutInfoNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get argo rollout info not found response
func (o *GetArgoRolloutInfoNotFound) Code() int {
	return 404
}

func (o *GetArgoRolloutInfoNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoNotFound %s", 404, payload)
}

func (o *GetArgoRolloutInfoNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoNotFound %s", 404, payload)
}

func (o *GetArgoRolloutInfoNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArgoRolloutInfoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArgoRolloutInfoMethodNotAllowed creates a GetArgoRolloutInfoMethodNotAllowed with default headers values
func NewGetArgoRolloutInfoMethodNotAllowed() *GetArgoRolloutInfoMethodNotAllowed {
	return &GetArgoRolloutInfoMethodNotAllowed{}
}

/*
GetArgoRolloutInfoMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetArgoRolloutInfoMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get argo rollout info method not allowed response has a 2xx status code
func (o *GetArgoRolloutInfoMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get argo rollout info method not allowed response has a 3xx status code
func (o *GetArgoRolloutInfoMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get argo rollout info method not allowed response has a 4xx status code
func (o *GetArgoRolloutInfoMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get argo rollout info method not allowed response has a 5xx status code
func (o *GetArgoRolloutInfoMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get argo rollout info method not allowed response a status code equal to that given
func (o *GetArgoRolloutInfoMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get argo rollout info method not allowed response
func (o *GetArgoRolloutInfoMethodNotAllowed) Code() int {
	return 405
}

func (o *GetArgoRolloutInfoMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoMethodNotAllowed %s", 405, payload)
}

func (o *GetArgoRolloutInfoMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoMethodNotAllowed %s", 405, payload)
}

func (o *GetArgoRolloutInfoMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArgoRolloutInfoMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArgoRolloutInfoInternalServerError creates a GetArgoRolloutInfoInternalServerError with default headers values
func NewGetArgoRolloutInfoInternalServerError() *GetArgoRolloutInfoInternalServerError {
	return &GetArgoRolloutInfoInternalServerError{}
}

/*
GetArgoRolloutInfoInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArgoRolloutInfoInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get argo rollout info internal server error response has a 2xx status code
func (o *GetArgoRolloutInfoInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get argo rollout info internal server error response has a 3xx status code
func (o *GetArgoRolloutInfoInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get argo rollout info internal server error response has a 4xx status code
func (o *GetArgoRolloutInfoInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get argo rollout info internal server error response has a 5xx status code
func (o *GetArgoRolloutInfoInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get argo rollout info internal server error response a status code equal to that given
func (o *GetArgoRolloutInfoInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get argo rollout info internal server error response
func (o *GetArgoRolloutInfoInternalServerError) Code() int {
	return 500
}

func (o *GetArgoRolloutInfoInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoInternalServerError %s", 500, payload)
}

func (o *GetArgoRolloutInfoInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/argo-info][%d] getArgoRolloutInfoInternalServerError %s", 500, payload)
}

func (o *GetArgoRolloutInfoInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArgoRolloutInfoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
