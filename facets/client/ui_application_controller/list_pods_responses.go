// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListPodsReader is a Reader for the ListPods structure.
type ListPodsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListPodsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListPodsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListPodsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListPodsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListPodsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListPodsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods] listPods", response, response.Code())
	}
}

// NewListPodsOK creates a ListPodsOK with default headers values
func NewListPodsOK() *ListPodsOK {
	return &ListPodsOK{}
}

/*
ListPodsOK describes a response with status code 200, with default header values.

OK
*/
type ListPodsOK struct {
	Payload []*models.Pod
}

// IsSuccess returns true when this list pods o k response has a 2xx status code
func (o *ListPodsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list pods o k response has a 3xx status code
func (o *ListPodsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods o k response has a 4xx status code
func (o *ListPodsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list pods o k response has a 5xx status code
func (o *ListPodsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods o k response a status code equal to that given
func (o *ListPodsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list pods o k response
func (o *ListPodsOK) Code() int {
	return 200
}

func (o *ListPodsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsOK %s", 200, payload)
}

func (o *ListPodsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsOK %s", 200, payload)
}

func (o *ListPodsOK) GetPayload() []*models.Pod {
	return o.Payload
}

func (o *ListPodsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPodsBadRequest creates a ListPodsBadRequest with default headers values
func NewListPodsBadRequest() *ListPodsBadRequest {
	return &ListPodsBadRequest{}
}

/*
ListPodsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListPodsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list pods bad request response has a 2xx status code
func (o *ListPodsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list pods bad request response has a 3xx status code
func (o *ListPodsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods bad request response has a 4xx status code
func (o *ListPodsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list pods bad request response has a 5xx status code
func (o *ListPodsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods bad request response a status code equal to that given
func (o *ListPodsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list pods bad request response
func (o *ListPodsBadRequest) Code() int {
	return 400
}

func (o *ListPodsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsBadRequest %s", 400, payload)
}

func (o *ListPodsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsBadRequest %s", 400, payload)
}

func (o *ListPodsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPodsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPodsNotFound creates a ListPodsNotFound with default headers values
func NewListPodsNotFound() *ListPodsNotFound {
	return &ListPodsNotFound{}
}

/*
ListPodsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListPodsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list pods not found response has a 2xx status code
func (o *ListPodsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list pods not found response has a 3xx status code
func (o *ListPodsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods not found response has a 4xx status code
func (o *ListPodsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list pods not found response has a 5xx status code
func (o *ListPodsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods not found response a status code equal to that given
func (o *ListPodsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list pods not found response
func (o *ListPodsNotFound) Code() int {
	return 404
}

func (o *ListPodsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsNotFound %s", 404, payload)
}

func (o *ListPodsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsNotFound %s", 404, payload)
}

func (o *ListPodsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPodsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPodsMethodNotAllowed creates a ListPodsMethodNotAllowed with default headers values
func NewListPodsMethodNotAllowed() *ListPodsMethodNotAllowed {
	return &ListPodsMethodNotAllowed{}
}

/*
ListPodsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListPodsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list pods method not allowed response has a 2xx status code
func (o *ListPodsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list pods method not allowed response has a 3xx status code
func (o *ListPodsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods method not allowed response has a 4xx status code
func (o *ListPodsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list pods method not allowed response has a 5xx status code
func (o *ListPodsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list pods method not allowed response a status code equal to that given
func (o *ListPodsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list pods method not allowed response
func (o *ListPodsMethodNotAllowed) Code() int {
	return 405
}

func (o *ListPodsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsMethodNotAllowed %s", 405, payload)
}

func (o *ListPodsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsMethodNotAllowed %s", 405, payload)
}

func (o *ListPodsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPodsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListPodsInternalServerError creates a ListPodsInternalServerError with default headers values
func NewListPodsInternalServerError() *ListPodsInternalServerError {
	return &ListPodsInternalServerError{}
}

/*
ListPodsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListPodsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list pods internal server error response has a 2xx status code
func (o *ListPodsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list pods internal server error response has a 3xx status code
func (o *ListPodsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list pods internal server error response has a 4xx status code
func (o *ListPodsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list pods internal server error response has a 5xx status code
func (o *ListPodsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list pods internal server error response a status code equal to that given
func (o *ListPodsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list pods internal server error response
func (o *ListPodsInternalServerError) Code() int {
	return 500
}

func (o *ListPodsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsInternalServerError %s", 500, payload)
}

func (o *ListPodsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/pods][%d] listPodsInternalServerError %s", 500, payload)
}

func (o *ListPodsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListPodsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
