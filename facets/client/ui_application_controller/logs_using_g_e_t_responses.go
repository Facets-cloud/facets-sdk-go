// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// LogsUsingGETReader is a Reader for the LogsUsingGET structure.
type LogsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLogsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLogsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLogsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs] logsUsingGET", response, response.Code())
	}
}

// NewLogsUsingGETOK creates a LogsUsingGETOK with default headers values
func NewLogsUsingGETOK() *LogsUsingGETOK {
	return &LogsUsingGETOK{}
}

/*
LogsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type LogsUsingGETOK struct {
	Payload models.StreamingResponseBody
}

// IsSuccess returns true when this logs using g e t o k response has a 2xx status code
func (o *LogsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this logs using g e t o k response has a 3xx status code
func (o *LogsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs using g e t o k response has a 4xx status code
func (o *LogsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this logs using g e t o k response has a 5xx status code
func (o *LogsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this logs using g e t o k response a status code equal to that given
func (o *LogsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the logs using g e t o k response
func (o *LogsUsingGETOK) Code() int {
	return 200
}

func (o *LogsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETOK %s", 200, payload)
}

func (o *LogsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETOK %s", 200, payload)
}

func (o *LogsUsingGETOK) GetPayload() models.StreamingResponseBody {
	return o.Payload
}

func (o *LogsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsUsingGETUnauthorized creates a LogsUsingGETUnauthorized with default headers values
func NewLogsUsingGETUnauthorized() *LogsUsingGETUnauthorized {
	return &LogsUsingGETUnauthorized{}
}

/*
LogsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LogsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this logs using g e t unauthorized response has a 2xx status code
func (o *LogsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs using g e t unauthorized response has a 3xx status code
func (o *LogsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs using g e t unauthorized response has a 4xx status code
func (o *LogsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this logs using g e t unauthorized response has a 5xx status code
func (o *LogsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this logs using g e t unauthorized response a status code equal to that given
func (o *LogsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the logs using g e t unauthorized response
func (o *LogsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *LogsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETUnauthorized", 401)
}

func (o *LogsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETUnauthorized", 401)
}

func (o *LogsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogsUsingGETForbidden creates a LogsUsingGETForbidden with default headers values
func NewLogsUsingGETForbidden() *LogsUsingGETForbidden {
	return &LogsUsingGETForbidden{}
}

/*
LogsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LogsUsingGETForbidden struct {
}

// IsSuccess returns true when this logs using g e t forbidden response has a 2xx status code
func (o *LogsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs using g e t forbidden response has a 3xx status code
func (o *LogsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs using g e t forbidden response has a 4xx status code
func (o *LogsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this logs using g e t forbidden response has a 5xx status code
func (o *LogsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this logs using g e t forbidden response a status code equal to that given
func (o *LogsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the logs using g e t forbidden response
func (o *LogsUsingGETForbidden) Code() int {
	return 403
}

func (o *LogsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETForbidden", 403)
}

func (o *LogsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETForbidden", 403)
}

func (o *LogsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLogsUsingGETNotFound creates a LogsUsingGETNotFound with default headers values
func NewLogsUsingGETNotFound() *LogsUsingGETNotFound {
	return &LogsUsingGETNotFound{}
}

/*
LogsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LogsUsingGETNotFound struct {
}

// IsSuccess returns true when this logs using g e t not found response has a 2xx status code
func (o *LogsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs using g e t not found response has a 3xx status code
func (o *LogsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs using g e t not found response has a 4xx status code
func (o *LogsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this logs using g e t not found response has a 5xx status code
func (o *LogsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this logs using g e t not found response a status code equal to that given
func (o *LogsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the logs using g e t not found response
func (o *LogsUsingGETNotFound) Code() int {
	return 404
}

func (o *LogsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETNotFound", 404)
}

func (o *LogsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsUsingGETNotFound", 404)
}

func (o *LogsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
