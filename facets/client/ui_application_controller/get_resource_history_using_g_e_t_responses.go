// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceHistoryUsingGETReader is a Reader for the GetResourceHistoryUsingGET structure.
type GetResourceHistoryUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceHistoryUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceHistoryUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceHistoryUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceHistoryUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceHistoryUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history] getResourceHistoryUsingGET", response, response.Code())
	}
}

// NewGetResourceHistoryUsingGETOK creates a GetResourceHistoryUsingGETOK with default headers values
func NewGetResourceHistoryUsingGETOK() *GetResourceHistoryUsingGETOK {
	return &GetResourceHistoryUsingGETOK{}
}

/*
GetResourceHistoryUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceHistoryUsingGETOK struct {
	Payload *models.ResourceHistory
}

// IsSuccess returns true when this get resource history using g e t o k response has a 2xx status code
func (o *GetResourceHistoryUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource history using g e t o k response has a 3xx status code
func (o *GetResourceHistoryUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource history using g e t o k response has a 4xx status code
func (o *GetResourceHistoryUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource history using g e t o k response has a 5xx status code
func (o *GetResourceHistoryUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource history using g e t o k response a status code equal to that given
func (o *GetResourceHistoryUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource history using g e t o k response
func (o *GetResourceHistoryUsingGETOK) Code() int {
	return 200
}

func (o *GetResourceHistoryUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETOK %s", 200, payload)
}

func (o *GetResourceHistoryUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETOK %s", 200, payload)
}

func (o *GetResourceHistoryUsingGETOK) GetPayload() *models.ResourceHistory {
	return o.Payload
}

func (o *GetResourceHistoryUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceHistory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceHistoryUsingGETUnauthorized creates a GetResourceHistoryUsingGETUnauthorized with default headers values
func NewGetResourceHistoryUsingGETUnauthorized() *GetResourceHistoryUsingGETUnauthorized {
	return &GetResourceHistoryUsingGETUnauthorized{}
}

/*
GetResourceHistoryUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceHistoryUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource history using g e t unauthorized response has a 2xx status code
func (o *GetResourceHistoryUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource history using g e t unauthorized response has a 3xx status code
func (o *GetResourceHistoryUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource history using g e t unauthorized response has a 4xx status code
func (o *GetResourceHistoryUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource history using g e t unauthorized response has a 5xx status code
func (o *GetResourceHistoryUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource history using g e t unauthorized response a status code equal to that given
func (o *GetResourceHistoryUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource history using g e t unauthorized response
func (o *GetResourceHistoryUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceHistoryUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETUnauthorized", 401)
}

func (o *GetResourceHistoryUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETUnauthorized", 401)
}

func (o *GetResourceHistoryUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceHistoryUsingGETForbidden creates a GetResourceHistoryUsingGETForbidden with default headers values
func NewGetResourceHistoryUsingGETForbidden() *GetResourceHistoryUsingGETForbidden {
	return &GetResourceHistoryUsingGETForbidden{}
}

/*
GetResourceHistoryUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceHistoryUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource history using g e t forbidden response has a 2xx status code
func (o *GetResourceHistoryUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource history using g e t forbidden response has a 3xx status code
func (o *GetResourceHistoryUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource history using g e t forbidden response has a 4xx status code
func (o *GetResourceHistoryUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource history using g e t forbidden response has a 5xx status code
func (o *GetResourceHistoryUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource history using g e t forbidden response a status code equal to that given
func (o *GetResourceHistoryUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource history using g e t forbidden response
func (o *GetResourceHistoryUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceHistoryUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETForbidden", 403)
}

func (o *GetResourceHistoryUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETForbidden", 403)
}

func (o *GetResourceHistoryUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceHistoryUsingGETNotFound creates a GetResourceHistoryUsingGETNotFound with default headers values
func NewGetResourceHistoryUsingGETNotFound() *GetResourceHistoryUsingGETNotFound {
	return &GetResourceHistoryUsingGETNotFound{}
}

/*
GetResourceHistoryUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceHistoryUsingGETNotFound struct {
}

// IsSuccess returns true when this get resource history using g e t not found response has a 2xx status code
func (o *GetResourceHistoryUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource history using g e t not found response has a 3xx status code
func (o *GetResourceHistoryUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource history using g e t not found response has a 4xx status code
func (o *GetResourceHistoryUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource history using g e t not found response has a 5xx status code
func (o *GetResourceHistoryUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource history using g e t not found response a status code equal to that given
func (o *GetResourceHistoryUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource history using g e t not found response
func (o *GetResourceHistoryUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceHistoryUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETNotFound", 404)
}

func (o *GetResourceHistoryUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoryUsingGETNotFound", 404)
}

func (o *GetResourceHistoryUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
