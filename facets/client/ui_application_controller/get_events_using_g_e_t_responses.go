// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetEventsUsingGETReader is a Reader for the GetEventsUsingGET structure.
type GetEventsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEventsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEventsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEventsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEventsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEventsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events] getEventsUsingGET", response, response.Code())
	}
}

// NewGetEventsUsingGETOK creates a GetEventsUsingGETOK with default headers values
func NewGetEventsUsingGETOK() *GetEventsUsingGETOK {
	return &GetEventsUsingGETOK{}
}

/*
GetEventsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetEventsUsingGETOK struct {
	Payload []*models.Event
}

// IsSuccess returns true when this get events using g e t o k response has a 2xx status code
func (o *GetEventsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get events using g e t o k response has a 3xx status code
func (o *GetEventsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events using g e t o k response has a 4xx status code
func (o *GetEventsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get events using g e t o k response has a 5xx status code
func (o *GetEventsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get events using g e t o k response a status code equal to that given
func (o *GetEventsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get events using g e t o k response
func (o *GetEventsUsingGETOK) Code() int {
	return 200
}

func (o *GetEventsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETOK %s", 200, payload)
}

func (o *GetEventsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETOK %s", 200, payload)
}

func (o *GetEventsUsingGETOK) GetPayload() []*models.Event {
	return o.Payload
}

func (o *GetEventsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEventsUsingGETUnauthorized creates a GetEventsUsingGETUnauthorized with default headers values
func NewGetEventsUsingGETUnauthorized() *GetEventsUsingGETUnauthorized {
	return &GetEventsUsingGETUnauthorized{}
}

/*
GetEventsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEventsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get events using g e t unauthorized response has a 2xx status code
func (o *GetEventsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get events using g e t unauthorized response has a 3xx status code
func (o *GetEventsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events using g e t unauthorized response has a 4xx status code
func (o *GetEventsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get events using g e t unauthorized response has a 5xx status code
func (o *GetEventsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get events using g e t unauthorized response a status code equal to that given
func (o *GetEventsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get events using g e t unauthorized response
func (o *GetEventsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEventsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETUnauthorized", 401)
}

func (o *GetEventsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETUnauthorized", 401)
}

func (o *GetEventsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsUsingGETForbidden creates a GetEventsUsingGETForbidden with default headers values
func NewGetEventsUsingGETForbidden() *GetEventsUsingGETForbidden {
	return &GetEventsUsingGETForbidden{}
}

/*
GetEventsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEventsUsingGETForbidden struct {
}

// IsSuccess returns true when this get events using g e t forbidden response has a 2xx status code
func (o *GetEventsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get events using g e t forbidden response has a 3xx status code
func (o *GetEventsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events using g e t forbidden response has a 4xx status code
func (o *GetEventsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get events using g e t forbidden response has a 5xx status code
func (o *GetEventsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get events using g e t forbidden response a status code equal to that given
func (o *GetEventsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get events using g e t forbidden response
func (o *GetEventsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEventsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETForbidden", 403)
}

func (o *GetEventsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETForbidden", 403)
}

func (o *GetEventsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEventsUsingGETNotFound creates a GetEventsUsingGETNotFound with default headers values
func NewGetEventsUsingGETNotFound() *GetEventsUsingGETNotFound {
	return &GetEventsUsingGETNotFound{}
}

/*
GetEventsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEventsUsingGETNotFound struct {
}

// IsSuccess returns true when this get events using g e t not found response has a 2xx status code
func (o *GetEventsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get events using g e t not found response has a 3xx status code
func (o *GetEventsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get events using g e t not found response has a 4xx status code
func (o *GetEventsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get events using g e t not found response has a 5xx status code
func (o *GetEventsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get events using g e t not found response a status code equal to that given
func (o *GetEventsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get events using g e t not found response
func (o *GetEventsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEventsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETNotFound", 404)
}

func (o *GetEventsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/events][%d] getEventsUsingGETNotFound", 404)
}

func (o *GetEventsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
