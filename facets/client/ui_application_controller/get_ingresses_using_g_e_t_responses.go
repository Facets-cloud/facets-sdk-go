// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetIngressesUsingGETReader is a Reader for the GetIngressesUsingGET structure.
type GetIngressesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIngressesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIngressesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetIngressesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetIngressesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetIngressesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses] getIngressesUsingGET", response, response.Code())
	}
}

// NewGetIngressesUsingGETOK creates a GetIngressesUsingGETOK with default headers values
func NewGetIngressesUsingGETOK() *GetIngressesUsingGETOK {
	return &GetIngressesUsingGETOK{}
}

/*
GetIngressesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetIngressesUsingGETOK struct {
	Payload []*models.Ingress
}

// IsSuccess returns true when this get ingresses using g e t o k response has a 2xx status code
func (o *GetIngressesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ingresses using g e t o k response has a 3xx status code
func (o *GetIngressesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ingresses using g e t o k response has a 4xx status code
func (o *GetIngressesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ingresses using g e t o k response has a 5xx status code
func (o *GetIngressesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ingresses using g e t o k response a status code equal to that given
func (o *GetIngressesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ingresses using g e t o k response
func (o *GetIngressesUsingGETOK) Code() int {
	return 200
}

func (o *GetIngressesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETOK %s", 200, payload)
}

func (o *GetIngressesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETOK %s", 200, payload)
}

func (o *GetIngressesUsingGETOK) GetPayload() []*models.Ingress {
	return o.Payload
}

func (o *GetIngressesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIngressesUsingGETUnauthorized creates a GetIngressesUsingGETUnauthorized with default headers values
func NewGetIngressesUsingGETUnauthorized() *GetIngressesUsingGETUnauthorized {
	return &GetIngressesUsingGETUnauthorized{}
}

/*
GetIngressesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetIngressesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get ingresses using g e t unauthorized response has a 2xx status code
func (o *GetIngressesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ingresses using g e t unauthorized response has a 3xx status code
func (o *GetIngressesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ingresses using g e t unauthorized response has a 4xx status code
func (o *GetIngressesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ingresses using g e t unauthorized response has a 5xx status code
func (o *GetIngressesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ingresses using g e t unauthorized response a status code equal to that given
func (o *GetIngressesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ingresses using g e t unauthorized response
func (o *GetIngressesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetIngressesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETUnauthorized", 401)
}

func (o *GetIngressesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETUnauthorized", 401)
}

func (o *GetIngressesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIngressesUsingGETForbidden creates a GetIngressesUsingGETForbidden with default headers values
func NewGetIngressesUsingGETForbidden() *GetIngressesUsingGETForbidden {
	return &GetIngressesUsingGETForbidden{}
}

/*
GetIngressesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetIngressesUsingGETForbidden struct {
}

// IsSuccess returns true when this get ingresses using g e t forbidden response has a 2xx status code
func (o *GetIngressesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ingresses using g e t forbidden response has a 3xx status code
func (o *GetIngressesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ingresses using g e t forbidden response has a 4xx status code
func (o *GetIngressesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ingresses using g e t forbidden response has a 5xx status code
func (o *GetIngressesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get ingresses using g e t forbidden response a status code equal to that given
func (o *GetIngressesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get ingresses using g e t forbidden response
func (o *GetIngressesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetIngressesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETForbidden", 403)
}

func (o *GetIngressesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETForbidden", 403)
}

func (o *GetIngressesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetIngressesUsingGETNotFound creates a GetIngressesUsingGETNotFound with default headers values
func NewGetIngressesUsingGETNotFound() *GetIngressesUsingGETNotFound {
	return &GetIngressesUsingGETNotFound{}
}

/*
GetIngressesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetIngressesUsingGETNotFound struct {
}

// IsSuccess returns true when this get ingresses using g e t not found response has a 2xx status code
func (o *GetIngressesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ingresses using g e t not found response has a 3xx status code
func (o *GetIngressesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ingresses using g e t not found response has a 4xx status code
func (o *GetIngressesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ingresses using g e t not found response has a 5xx status code
func (o *GetIngressesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get ingresses using g e t not found response a status code equal to that given
func (o *GetIngressesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get ingresses using g e t not found response
func (o *GetIngressesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetIngressesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETNotFound", 404)
}

func (o *GetIngressesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/resourceName/{applicationName}/ingresses][%d] getIngressesUsingGETNotFound", 404)
}

func (o *GetIngressesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
