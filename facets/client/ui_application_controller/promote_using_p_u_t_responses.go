// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PromoteUsingPUTReader is a Reader for the PromoteUsingPUT structure.
type PromoteUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PromoteUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPromoteUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPromoteUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPromoteUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPromoteUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPromoteUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/promote] promoteUsingPUT", response, response.Code())
	}
}

// NewPromoteUsingPUTOK creates a PromoteUsingPUTOK with default headers values
func NewPromoteUsingPUTOK() *PromoteUsingPUTOK {
	return &PromoteUsingPUTOK{}
}

/*
PromoteUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type PromoteUsingPUTOK struct {
}

// IsSuccess returns true when this promote using p u t o k response has a 2xx status code
func (o *PromoteUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this promote using p u t o k response has a 3xx status code
func (o *PromoteUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this promote using p u t o k response has a 4xx status code
func (o *PromoteUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this promote using p u t o k response has a 5xx status code
func (o *PromoteUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this promote using p u t o k response a status code equal to that given
func (o *PromoteUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the promote using p u t o k response
func (o *PromoteUsingPUTOK) Code() int {
	return 200
}

func (o *PromoteUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTOK", 200)
}

func (o *PromoteUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTOK", 200)
}

func (o *PromoteUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPromoteUsingPUTCreated creates a PromoteUsingPUTCreated with default headers values
func NewPromoteUsingPUTCreated() *PromoteUsingPUTCreated {
	return &PromoteUsingPUTCreated{}
}

/*
PromoteUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type PromoteUsingPUTCreated struct {
}

// IsSuccess returns true when this promote using p u t created response has a 2xx status code
func (o *PromoteUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this promote using p u t created response has a 3xx status code
func (o *PromoteUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this promote using p u t created response has a 4xx status code
func (o *PromoteUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this promote using p u t created response has a 5xx status code
func (o *PromoteUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this promote using p u t created response a status code equal to that given
func (o *PromoteUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the promote using p u t created response
func (o *PromoteUsingPUTCreated) Code() int {
	return 201
}

func (o *PromoteUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTCreated", 201)
}

func (o *PromoteUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTCreated", 201)
}

func (o *PromoteUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPromoteUsingPUTUnauthorized creates a PromoteUsingPUTUnauthorized with default headers values
func NewPromoteUsingPUTUnauthorized() *PromoteUsingPUTUnauthorized {
	return &PromoteUsingPUTUnauthorized{}
}

/*
PromoteUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PromoteUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this promote using p u t unauthorized response has a 2xx status code
func (o *PromoteUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this promote using p u t unauthorized response has a 3xx status code
func (o *PromoteUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this promote using p u t unauthorized response has a 4xx status code
func (o *PromoteUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this promote using p u t unauthorized response has a 5xx status code
func (o *PromoteUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this promote using p u t unauthorized response a status code equal to that given
func (o *PromoteUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the promote using p u t unauthorized response
func (o *PromoteUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *PromoteUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTUnauthorized", 401)
}

func (o *PromoteUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTUnauthorized", 401)
}

func (o *PromoteUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPromoteUsingPUTForbidden creates a PromoteUsingPUTForbidden with default headers values
func NewPromoteUsingPUTForbidden() *PromoteUsingPUTForbidden {
	return &PromoteUsingPUTForbidden{}
}

/*
PromoteUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PromoteUsingPUTForbidden struct {
}

// IsSuccess returns true when this promote using p u t forbidden response has a 2xx status code
func (o *PromoteUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this promote using p u t forbidden response has a 3xx status code
func (o *PromoteUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this promote using p u t forbidden response has a 4xx status code
func (o *PromoteUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this promote using p u t forbidden response has a 5xx status code
func (o *PromoteUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this promote using p u t forbidden response a status code equal to that given
func (o *PromoteUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the promote using p u t forbidden response
func (o *PromoteUsingPUTForbidden) Code() int {
	return 403
}

func (o *PromoteUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTForbidden", 403)
}

func (o *PromoteUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTForbidden", 403)
}

func (o *PromoteUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPromoteUsingPUTNotFound creates a PromoteUsingPUTNotFound with default headers values
func NewPromoteUsingPUTNotFound() *PromoteUsingPUTNotFound {
	return &PromoteUsingPUTNotFound{}
}

/*
PromoteUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PromoteUsingPUTNotFound struct {
}

// IsSuccess returns true when this promote using p u t not found response has a 2xx status code
func (o *PromoteUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this promote using p u t not found response has a 3xx status code
func (o *PromoteUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this promote using p u t not found response has a 4xx status code
func (o *PromoteUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this promote using p u t not found response has a 5xx status code
func (o *PromoteUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this promote using p u t not found response a status code equal to that given
func (o *PromoteUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the promote using p u t not found response
func (o *PromoteUsingPUTNotFound) Code() int {
	return 404
}

func (o *PromoteUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTNotFound", 404)
}

func (o *PromoteUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/promote][%d] promoteUsingPUTNotFound", 404)
}

func (o *PromoteUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
