// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// LogsReader is a Reader for the Logs structure.
type LogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewLogsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs] logs", response, response.Code())
	}
}

// NewLogsOK creates a LogsOK with default headers values
func NewLogsOK() *LogsOK {
	return &LogsOK{}
}

/*
LogsOK describes a response with status code 200, with default header values.

OK
*/
type LogsOK struct {
	Payload models.StreamingResponseBody
}

// IsSuccess returns true when this logs o k response has a 2xx status code
func (o *LogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this logs o k response has a 3xx status code
func (o *LogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs o k response has a 4xx status code
func (o *LogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this logs o k response has a 5xx status code
func (o *LogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this logs o k response a status code equal to that given
func (o *LogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the logs o k response
func (o *LogsOK) Code() int {
	return 200
}

func (o *LogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsOK %s", 200, payload)
}

func (o *LogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsOK %s", 200, payload)
}

func (o *LogsOK) GetPayload() models.StreamingResponseBody {
	return o.Payload
}

func (o *LogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsBadRequest creates a LogsBadRequest with default headers values
func NewLogsBadRequest() *LogsBadRequest {
	return &LogsBadRequest{}
}

/*
LogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type LogsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this logs bad request response has a 2xx status code
func (o *LogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs bad request response has a 3xx status code
func (o *LogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs bad request response has a 4xx status code
func (o *LogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this logs bad request response has a 5xx status code
func (o *LogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this logs bad request response a status code equal to that given
func (o *LogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the logs bad request response
func (o *LogsBadRequest) Code() int {
	return 400
}

func (o *LogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsBadRequest %s", 400, payload)
}

func (o *LogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsBadRequest %s", 400, payload)
}

func (o *LogsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsNotFound creates a LogsNotFound with default headers values
func NewLogsNotFound() *LogsNotFound {
	return &LogsNotFound{}
}

/*
LogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LogsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this logs not found response has a 2xx status code
func (o *LogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs not found response has a 3xx status code
func (o *LogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs not found response has a 4xx status code
func (o *LogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this logs not found response has a 5xx status code
func (o *LogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this logs not found response a status code equal to that given
func (o *LogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the logs not found response
func (o *LogsNotFound) Code() int {
	return 404
}

func (o *LogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsNotFound %s", 404, payload)
}

func (o *LogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsNotFound %s", 404, payload)
}

func (o *LogsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsMethodNotAllowed creates a LogsMethodNotAllowed with default headers values
func NewLogsMethodNotAllowed() *LogsMethodNotAllowed {
	return &LogsMethodNotAllowed{}
}

/*
LogsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type LogsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this logs method not allowed response has a 2xx status code
func (o *LogsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs method not allowed response has a 3xx status code
func (o *LogsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs method not allowed response has a 4xx status code
func (o *LogsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this logs method not allowed response has a 5xx status code
func (o *LogsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this logs method not allowed response a status code equal to that given
func (o *LogsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the logs method not allowed response
func (o *LogsMethodNotAllowed) Code() int {
	return 405
}

func (o *LogsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsMethodNotAllowed %s", 405, payload)
}

func (o *LogsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsMethodNotAllowed %s", 405, payload)
}

func (o *LogsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LogsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogsInternalServerError creates a LogsInternalServerError with default headers values
func NewLogsInternalServerError() *LogsInternalServerError {
	return &LogsInternalServerError{}
}

/*
LogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type LogsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this logs internal server error response has a 2xx status code
func (o *LogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this logs internal server error response has a 3xx status code
func (o *LogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this logs internal server error response has a 4xx status code
func (o *LogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this logs internal server error response has a 5xx status code
func (o *LogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this logs internal server error response a status code equal to that given
func (o *LogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the logs internal server error response
func (o *LogsInternalServerError) Code() int {
	return 500
}

func (o *LogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsInternalServerError %s", 500, payload)
}

func (o *LogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/pods/{podName}/logs][%d] logsInternalServerError %s", 500, payload)
}

func (o *LogsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
