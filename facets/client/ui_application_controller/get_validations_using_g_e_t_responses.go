// Code generated by go-swagger; DO NOT EDIT.

package ui_application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetValidationsUsingGETReader is a Reader for the GetValidationsUsingGET structure.
type GetValidationsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetValidationsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetValidationsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetValidationsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetValidationsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetValidationsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors] getValidationsUsingGET", response, response.Code())
	}
}

// NewGetValidationsUsingGETOK creates a GetValidationsUsingGETOK with default headers values
func NewGetValidationsUsingGETOK() *GetValidationsUsingGETOK {
	return &GetValidationsUsingGETOK{}
}

/*
GetValidationsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetValidationsUsingGETOK struct {
	Payload []*models.ValidationResponse
}

// IsSuccess returns true when this get validations using g e t o k response has a 2xx status code
func (o *GetValidationsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get validations using g e t o k response has a 3xx status code
func (o *GetValidationsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validations using g e t o k response has a 4xx status code
func (o *GetValidationsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get validations using g e t o k response has a 5xx status code
func (o *GetValidationsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get validations using g e t o k response a status code equal to that given
func (o *GetValidationsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get validations using g e t o k response
func (o *GetValidationsUsingGETOK) Code() int {
	return 200
}

func (o *GetValidationsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETOK %s", 200, payload)
}

func (o *GetValidationsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETOK %s", 200, payload)
}

func (o *GetValidationsUsingGETOK) GetPayload() []*models.ValidationResponse {
	return o.Payload
}

func (o *GetValidationsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetValidationsUsingGETUnauthorized creates a GetValidationsUsingGETUnauthorized with default headers values
func NewGetValidationsUsingGETUnauthorized() *GetValidationsUsingGETUnauthorized {
	return &GetValidationsUsingGETUnauthorized{}
}

/*
GetValidationsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetValidationsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get validations using g e t unauthorized response has a 2xx status code
func (o *GetValidationsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validations using g e t unauthorized response has a 3xx status code
func (o *GetValidationsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validations using g e t unauthorized response has a 4xx status code
func (o *GetValidationsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validations using g e t unauthorized response has a 5xx status code
func (o *GetValidationsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get validations using g e t unauthorized response a status code equal to that given
func (o *GetValidationsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get validations using g e t unauthorized response
func (o *GetValidationsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetValidationsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETUnauthorized", 401)
}

func (o *GetValidationsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETUnauthorized", 401)
}

func (o *GetValidationsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetValidationsUsingGETForbidden creates a GetValidationsUsingGETForbidden with default headers values
func NewGetValidationsUsingGETForbidden() *GetValidationsUsingGETForbidden {
	return &GetValidationsUsingGETForbidden{}
}

/*
GetValidationsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetValidationsUsingGETForbidden struct {
}

// IsSuccess returns true when this get validations using g e t forbidden response has a 2xx status code
func (o *GetValidationsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validations using g e t forbidden response has a 3xx status code
func (o *GetValidationsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validations using g e t forbidden response has a 4xx status code
func (o *GetValidationsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validations using g e t forbidden response has a 5xx status code
func (o *GetValidationsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get validations using g e t forbidden response a status code equal to that given
func (o *GetValidationsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get validations using g e t forbidden response
func (o *GetValidationsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetValidationsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETForbidden", 403)
}

func (o *GetValidationsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETForbidden", 403)
}

func (o *GetValidationsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetValidationsUsingGETNotFound creates a GetValidationsUsingGETNotFound with default headers values
func NewGetValidationsUsingGETNotFound() *GetValidationsUsingGETNotFound {
	return &GetValidationsUsingGETNotFound{}
}

/*
GetValidationsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetValidationsUsingGETNotFound struct {
}

// IsSuccess returns true when this get validations using g e t not found response has a 2xx status code
func (o *GetValidationsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get validations using g e t not found response has a 3xx status code
func (o *GetValidationsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get validations using g e t not found response has a 4xx status code
func (o *GetValidationsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get validations using g e t not found response has a 5xx status code
func (o *GetValidationsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get validations using g e t not found response a status code equal to that given
func (o *GetValidationsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get validations using g e t not found response
func (o *GetValidationsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetValidationsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETNotFound", 404)
}

func (o *GetValidationsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/validation-errors][%d] getValidationsUsingGETNotFound", 404)
}

func (o *GetValidationsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
