// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_hub_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SearchPackagesReader is a Reader for the SearchPackages structure.
type SearchPackagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchPackagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchPackagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchPackagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchPackagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSearchPackagesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchPackagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactHub/search-packages] searchPackages", response, response.Code())
	}
}

// NewSearchPackagesOK creates a SearchPackagesOK with default headers values
func NewSearchPackagesOK() *SearchPackagesOK {
	return &SearchPackagesOK{}
}

/*
SearchPackagesOK describes a response with status code 200, with default header values.

OK
*/
type SearchPackagesOK struct {
	Payload *models.PackageResponse
}

// IsSuccess returns true when this search packages o k response has a 2xx status code
func (o *SearchPackagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search packages o k response has a 3xx status code
func (o *SearchPackagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages o k response has a 4xx status code
func (o *SearchPackagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search packages o k response has a 5xx status code
func (o *SearchPackagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search packages o k response a status code equal to that given
func (o *SearchPackagesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search packages o k response
func (o *SearchPackagesOK) Code() int {
	return 200
}

func (o *SearchPackagesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesOK %s", 200, payload)
}

func (o *SearchPackagesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesOK %s", 200, payload)
}

func (o *SearchPackagesOK) GetPayload() *models.PackageResponse {
	return o.Payload
}

func (o *SearchPackagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PackageResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPackagesBadRequest creates a SearchPackagesBadRequest with default headers values
func NewSearchPackagesBadRequest() *SearchPackagesBadRequest {
	return &SearchPackagesBadRequest{}
}

/*
SearchPackagesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchPackagesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search packages bad request response has a 2xx status code
func (o *SearchPackagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search packages bad request response has a 3xx status code
func (o *SearchPackagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages bad request response has a 4xx status code
func (o *SearchPackagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search packages bad request response has a 5xx status code
func (o *SearchPackagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search packages bad request response a status code equal to that given
func (o *SearchPackagesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search packages bad request response
func (o *SearchPackagesBadRequest) Code() int {
	return 400
}

func (o *SearchPackagesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesBadRequest %s", 400, payload)
}

func (o *SearchPackagesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesBadRequest %s", 400, payload)
}

func (o *SearchPackagesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchPackagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPackagesNotFound creates a SearchPackagesNotFound with default headers values
func NewSearchPackagesNotFound() *SearchPackagesNotFound {
	return &SearchPackagesNotFound{}
}

/*
SearchPackagesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchPackagesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search packages not found response has a 2xx status code
func (o *SearchPackagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search packages not found response has a 3xx status code
func (o *SearchPackagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages not found response has a 4xx status code
func (o *SearchPackagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search packages not found response has a 5xx status code
func (o *SearchPackagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search packages not found response a status code equal to that given
func (o *SearchPackagesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the search packages not found response
func (o *SearchPackagesNotFound) Code() int {
	return 404
}

func (o *SearchPackagesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesNotFound %s", 404, payload)
}

func (o *SearchPackagesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesNotFound %s", 404, payload)
}

func (o *SearchPackagesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchPackagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPackagesMethodNotAllowed creates a SearchPackagesMethodNotAllowed with default headers values
func NewSearchPackagesMethodNotAllowed() *SearchPackagesMethodNotAllowed {
	return &SearchPackagesMethodNotAllowed{}
}

/*
SearchPackagesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SearchPackagesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search packages method not allowed response has a 2xx status code
func (o *SearchPackagesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search packages method not allowed response has a 3xx status code
func (o *SearchPackagesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages method not allowed response has a 4xx status code
func (o *SearchPackagesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this search packages method not allowed response has a 5xx status code
func (o *SearchPackagesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this search packages method not allowed response a status code equal to that given
func (o *SearchPackagesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the search packages method not allowed response
func (o *SearchPackagesMethodNotAllowed) Code() int {
	return 405
}

func (o *SearchPackagesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesMethodNotAllowed %s", 405, payload)
}

func (o *SearchPackagesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesMethodNotAllowed %s", 405, payload)
}

func (o *SearchPackagesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchPackagesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchPackagesInternalServerError creates a SearchPackagesInternalServerError with default headers values
func NewSearchPackagesInternalServerError() *SearchPackagesInternalServerError {
	return &SearchPackagesInternalServerError{}
}

/*
SearchPackagesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SearchPackagesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search packages internal server error response has a 2xx status code
func (o *SearchPackagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search packages internal server error response has a 3xx status code
func (o *SearchPackagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search packages internal server error response has a 4xx status code
func (o *SearchPackagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search packages internal server error response has a 5xx status code
func (o *SearchPackagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search packages internal server error response a status code equal to that given
func (o *SearchPackagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search packages internal server error response
func (o *SearchPackagesInternalServerError) Code() int {
	return 500
}

func (o *SearchPackagesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesInternalServerError %s", 500, payload)
}

func (o *SearchPackagesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactHub/search-packages][%d] searchPackagesInternalServerError %s", 500, payload)
}

func (o *SearchPackagesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchPackagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
