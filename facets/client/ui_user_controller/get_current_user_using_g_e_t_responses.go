// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetCurrentUserUsingGETReader is a Reader for the GetCurrentUserUsingGET structure.
type GetCurrentUserUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCurrentUserUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCurrentUserUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCurrentUserUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCurrentUserUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCurrentUserUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/users/current-user] getCurrentUserUsingGET", response, response.Code())
	}
}

// NewGetCurrentUserUsingGETOK creates a GetCurrentUserUsingGETOK with default headers values
func NewGetCurrentUserUsingGETOK() *GetCurrentUserUsingGETOK {
	return &GetCurrentUserUsingGETOK{}
}

/*
GetCurrentUserUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetCurrentUserUsingGETOK struct {
	Payload *models.User
}

// IsSuccess returns true when this get current user using g e t o k response has a 2xx status code
func (o *GetCurrentUserUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get current user using g e t o k response has a 3xx status code
func (o *GetCurrentUserUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current user using g e t o k response has a 4xx status code
func (o *GetCurrentUserUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get current user using g e t o k response has a 5xx status code
func (o *GetCurrentUserUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get current user using g e t o k response a status code equal to that given
func (o *GetCurrentUserUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get current user using g e t o k response
func (o *GetCurrentUserUsingGETOK) Code() int {
	return 200
}

func (o *GetCurrentUserUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETOK %s", 200, payload)
}

func (o *GetCurrentUserUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETOK %s", 200, payload)
}

func (o *GetCurrentUserUsingGETOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetCurrentUserUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentUserUsingGETUnauthorized creates a GetCurrentUserUsingGETUnauthorized with default headers values
func NewGetCurrentUserUsingGETUnauthorized() *GetCurrentUserUsingGETUnauthorized {
	return &GetCurrentUserUsingGETUnauthorized{}
}

/*
GetCurrentUserUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCurrentUserUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get current user using g e t unauthorized response has a 2xx status code
func (o *GetCurrentUserUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get current user using g e t unauthorized response has a 3xx status code
func (o *GetCurrentUserUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current user using g e t unauthorized response has a 4xx status code
func (o *GetCurrentUserUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get current user using g e t unauthorized response has a 5xx status code
func (o *GetCurrentUserUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get current user using g e t unauthorized response a status code equal to that given
func (o *GetCurrentUserUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get current user using g e t unauthorized response
func (o *GetCurrentUserUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetCurrentUserUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETUnauthorized", 401)
}

func (o *GetCurrentUserUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETUnauthorized", 401)
}

func (o *GetCurrentUserUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCurrentUserUsingGETForbidden creates a GetCurrentUserUsingGETForbidden with default headers values
func NewGetCurrentUserUsingGETForbidden() *GetCurrentUserUsingGETForbidden {
	return &GetCurrentUserUsingGETForbidden{}
}

/*
GetCurrentUserUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCurrentUserUsingGETForbidden struct {
}

// IsSuccess returns true when this get current user using g e t forbidden response has a 2xx status code
func (o *GetCurrentUserUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get current user using g e t forbidden response has a 3xx status code
func (o *GetCurrentUserUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current user using g e t forbidden response has a 4xx status code
func (o *GetCurrentUserUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get current user using g e t forbidden response has a 5xx status code
func (o *GetCurrentUserUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get current user using g e t forbidden response a status code equal to that given
func (o *GetCurrentUserUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get current user using g e t forbidden response
func (o *GetCurrentUserUsingGETForbidden) Code() int {
	return 403
}

func (o *GetCurrentUserUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETForbidden", 403)
}

func (o *GetCurrentUserUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETForbidden", 403)
}

func (o *GetCurrentUserUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCurrentUserUsingGETNotFound creates a GetCurrentUserUsingGETNotFound with default headers values
func NewGetCurrentUserUsingGETNotFound() *GetCurrentUserUsingGETNotFound {
	return &GetCurrentUserUsingGETNotFound{}
}

/*
GetCurrentUserUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCurrentUserUsingGETNotFound struct {
}

// IsSuccess returns true when this get current user using g e t not found response has a 2xx status code
func (o *GetCurrentUserUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get current user using g e t not found response has a 3xx status code
func (o *GetCurrentUserUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current user using g e t not found response has a 4xx status code
func (o *GetCurrentUserUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get current user using g e t not found response has a 5xx status code
func (o *GetCurrentUserUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get current user using g e t not found response a status code equal to that given
func (o *GetCurrentUserUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get current user using g e t not found response
func (o *GetCurrentUserUsingGETNotFound) Code() int {
	return 404
}

func (o *GetCurrentUserUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETNotFound", 404)
}

func (o *GetCurrentUserUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/current-user][%d] getCurrentUserUsingGETNotFound", 404)
}

func (o *GetCurrentUserUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
