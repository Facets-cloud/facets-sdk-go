// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTokenReader is a Reader for the GetToken structure.
type GetTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetTokenMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTokenInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/users/tokens] getToken", response, response.Code())
	}
}

// NewGetTokenOK creates a GetTokenOK with default headers values
func NewGetTokenOK() *GetTokenOK {
	return &GetTokenOK{}
}

/*
GetTokenOK describes a response with status code 200, with default header values.

OK
*/
type GetTokenOK struct {
	Payload []*models.UserAccessToken
}

// IsSuccess returns true when this get token o k response has a 2xx status code
func (o *GetTokenOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get token o k response has a 3xx status code
func (o *GetTokenOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get token o k response has a 4xx status code
func (o *GetTokenOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get token o k response has a 5xx status code
func (o *GetTokenOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get token o k response a status code equal to that given
func (o *GetTokenOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get token o k response
func (o *GetTokenOK) Code() int {
	return 200
}

func (o *GetTokenOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenOK %s", 200, payload)
}

func (o *GetTokenOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenOK %s", 200, payload)
}

func (o *GetTokenOK) GetPayload() []*models.UserAccessToken {
	return o.Payload
}

func (o *GetTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenBadRequest creates a GetTokenBadRequest with default headers values
func NewGetTokenBadRequest() *GetTokenBadRequest {
	return &GetTokenBadRequest{}
}

/*
GetTokenBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTokenBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get token bad request response has a 2xx status code
func (o *GetTokenBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get token bad request response has a 3xx status code
func (o *GetTokenBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get token bad request response has a 4xx status code
func (o *GetTokenBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get token bad request response has a 5xx status code
func (o *GetTokenBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get token bad request response a status code equal to that given
func (o *GetTokenBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get token bad request response
func (o *GetTokenBadRequest) Code() int {
	return 400
}

func (o *GetTokenBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenBadRequest %s", 400, payload)
}

func (o *GetTokenBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenBadRequest %s", 400, payload)
}

func (o *GetTokenBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenNotFound creates a GetTokenNotFound with default headers values
func NewGetTokenNotFound() *GetTokenNotFound {
	return &GetTokenNotFound{}
}

/*
GetTokenNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTokenNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get token not found response has a 2xx status code
func (o *GetTokenNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get token not found response has a 3xx status code
func (o *GetTokenNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get token not found response has a 4xx status code
func (o *GetTokenNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get token not found response has a 5xx status code
func (o *GetTokenNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get token not found response a status code equal to that given
func (o *GetTokenNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get token not found response
func (o *GetTokenNotFound) Code() int {
	return 404
}

func (o *GetTokenNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenNotFound %s", 404, payload)
}

func (o *GetTokenNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenNotFound %s", 404, payload)
}

func (o *GetTokenNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenMethodNotAllowed creates a GetTokenMethodNotAllowed with default headers values
func NewGetTokenMethodNotAllowed() *GetTokenMethodNotAllowed {
	return &GetTokenMethodNotAllowed{}
}

/*
GetTokenMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetTokenMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get token method not allowed response has a 2xx status code
func (o *GetTokenMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get token method not allowed response has a 3xx status code
func (o *GetTokenMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get token method not allowed response has a 4xx status code
func (o *GetTokenMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get token method not allowed response has a 5xx status code
func (o *GetTokenMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get token method not allowed response a status code equal to that given
func (o *GetTokenMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get token method not allowed response
func (o *GetTokenMethodNotAllowed) Code() int {
	return 405
}

func (o *GetTokenMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenMethodNotAllowed %s", 405, payload)
}

func (o *GetTokenMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenMethodNotAllowed %s", 405, payload)
}

func (o *GetTokenMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTokenMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTokenInternalServerError creates a GetTokenInternalServerError with default headers values
func NewGetTokenInternalServerError() *GetTokenInternalServerError {
	return &GetTokenInternalServerError{}
}

/*
GetTokenInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTokenInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get token internal server error response has a 2xx status code
func (o *GetTokenInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get token internal server error response has a 3xx status code
func (o *GetTokenInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get token internal server error response has a 4xx status code
func (o *GetTokenInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get token internal server error response has a 5xx status code
func (o *GetTokenInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get token internal server error response a status code equal to that given
func (o *GetTokenInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get token internal server error response
func (o *GetTokenInternalServerError) Code() int {
	return 500
}

func (o *GetTokenInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenInternalServerError %s", 500, payload)
}

func (o *GetTokenInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/tokens][%d] getTokenInternalServerError %s", 500, payload)
}

func (o *GetTokenInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTokenInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
