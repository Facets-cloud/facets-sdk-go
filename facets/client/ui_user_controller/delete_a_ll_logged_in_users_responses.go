// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteALlLoggedInUsersReader is a Reader for the DeleteALlLoggedInUsers structure.
type DeleteALlLoggedInUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteALlLoggedInUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteALlLoggedInUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteALlLoggedInUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteALlLoggedInUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteALlLoggedInUsersMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteALlLoggedInUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/users/loggedIn/session] deleteALlLoggedInUsers", response, response.Code())
	}
}

// NewDeleteALlLoggedInUsersOK creates a DeleteALlLoggedInUsersOK with default headers values
func NewDeleteALlLoggedInUsersOK() *DeleteALlLoggedInUsersOK {
	return &DeleteALlLoggedInUsersOK{}
}

/*
DeleteALlLoggedInUsersOK describes a response with status code 200, with default header values.

OK
*/
type DeleteALlLoggedInUsersOK struct {
	Payload bool
}

// IsSuccess returns true when this delete a ll logged in users o k response has a 2xx status code
func (o *DeleteALlLoggedInUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete a ll logged in users o k response has a 3xx status code
func (o *DeleteALlLoggedInUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users o k response has a 4xx status code
func (o *DeleteALlLoggedInUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete a ll logged in users o k response has a 5xx status code
func (o *DeleteALlLoggedInUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users o k response a status code equal to that given
func (o *DeleteALlLoggedInUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete a ll logged in users o k response
func (o *DeleteALlLoggedInUsersOK) Code() int {
	return 200
}

func (o *DeleteALlLoggedInUsersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersOK %s", 200, payload)
}

func (o *DeleteALlLoggedInUsersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersOK %s", 200, payload)
}

func (o *DeleteALlLoggedInUsersOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteALlLoggedInUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteALlLoggedInUsersBadRequest creates a DeleteALlLoggedInUsersBadRequest with default headers values
func NewDeleteALlLoggedInUsersBadRequest() *DeleteALlLoggedInUsersBadRequest {
	return &DeleteALlLoggedInUsersBadRequest{}
}

/*
DeleteALlLoggedInUsersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteALlLoggedInUsersBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete a ll logged in users bad request response has a 2xx status code
func (o *DeleteALlLoggedInUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a ll logged in users bad request response has a 3xx status code
func (o *DeleteALlLoggedInUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users bad request response has a 4xx status code
func (o *DeleteALlLoggedInUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a ll logged in users bad request response has a 5xx status code
func (o *DeleteALlLoggedInUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users bad request response a status code equal to that given
func (o *DeleteALlLoggedInUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete a ll logged in users bad request response
func (o *DeleteALlLoggedInUsersBadRequest) Code() int {
	return 400
}

func (o *DeleteALlLoggedInUsersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersBadRequest %s", 400, payload)
}

func (o *DeleteALlLoggedInUsersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersBadRequest %s", 400, payload)
}

func (o *DeleteALlLoggedInUsersBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteALlLoggedInUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteALlLoggedInUsersNotFound creates a DeleteALlLoggedInUsersNotFound with default headers values
func NewDeleteALlLoggedInUsersNotFound() *DeleteALlLoggedInUsersNotFound {
	return &DeleteALlLoggedInUsersNotFound{}
}

/*
DeleteALlLoggedInUsersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteALlLoggedInUsersNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete a ll logged in users not found response has a 2xx status code
func (o *DeleteALlLoggedInUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a ll logged in users not found response has a 3xx status code
func (o *DeleteALlLoggedInUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users not found response has a 4xx status code
func (o *DeleteALlLoggedInUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a ll logged in users not found response has a 5xx status code
func (o *DeleteALlLoggedInUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users not found response a status code equal to that given
func (o *DeleteALlLoggedInUsersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete a ll logged in users not found response
func (o *DeleteALlLoggedInUsersNotFound) Code() int {
	return 404
}

func (o *DeleteALlLoggedInUsersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersNotFound %s", 404, payload)
}

func (o *DeleteALlLoggedInUsersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersNotFound %s", 404, payload)
}

func (o *DeleteALlLoggedInUsersNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteALlLoggedInUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteALlLoggedInUsersMethodNotAllowed creates a DeleteALlLoggedInUsersMethodNotAllowed with default headers values
func NewDeleteALlLoggedInUsersMethodNotAllowed() *DeleteALlLoggedInUsersMethodNotAllowed {
	return &DeleteALlLoggedInUsersMethodNotAllowed{}
}

/*
DeleteALlLoggedInUsersMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteALlLoggedInUsersMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete a ll logged in users method not allowed response has a 2xx status code
func (o *DeleteALlLoggedInUsersMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a ll logged in users method not allowed response has a 3xx status code
func (o *DeleteALlLoggedInUsersMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users method not allowed response has a 4xx status code
func (o *DeleteALlLoggedInUsersMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a ll logged in users method not allowed response has a 5xx status code
func (o *DeleteALlLoggedInUsersMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users method not allowed response a status code equal to that given
func (o *DeleteALlLoggedInUsersMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete a ll logged in users method not allowed response
func (o *DeleteALlLoggedInUsersMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteALlLoggedInUsersMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersMethodNotAllowed %s", 405, payload)
}

func (o *DeleteALlLoggedInUsersMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersMethodNotAllowed %s", 405, payload)
}

func (o *DeleteALlLoggedInUsersMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteALlLoggedInUsersMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteALlLoggedInUsersInternalServerError creates a DeleteALlLoggedInUsersInternalServerError with default headers values
func NewDeleteALlLoggedInUsersInternalServerError() *DeleteALlLoggedInUsersInternalServerError {
	return &DeleteALlLoggedInUsersInternalServerError{}
}

/*
DeleteALlLoggedInUsersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteALlLoggedInUsersInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete a ll logged in users internal server error response has a 2xx status code
func (o *DeleteALlLoggedInUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a ll logged in users internal server error response has a 3xx status code
func (o *DeleteALlLoggedInUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users internal server error response has a 4xx status code
func (o *DeleteALlLoggedInUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete a ll logged in users internal server error response has a 5xx status code
func (o *DeleteALlLoggedInUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete a ll logged in users internal server error response a status code equal to that given
func (o *DeleteALlLoggedInUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete a ll logged in users internal server error response
func (o *DeleteALlLoggedInUsersInternalServerError) Code() int {
	return 500
}

func (o *DeleteALlLoggedInUsersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersInternalServerError %s", 500, payload)
}

func (o *DeleteALlLoggedInUsersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersInternalServerError %s", 500, payload)
}

func (o *DeleteALlLoggedInUsersInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteALlLoggedInUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
