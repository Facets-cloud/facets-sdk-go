// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllUsersExpandedReader is a Reader for the GetAllUsersExpanded structure.
type GetAllUsersExpandedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllUsersExpandedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllUsersExpandedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllUsersExpandedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllUsersExpandedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllUsersExpandedMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllUsersExpandedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/users/list/users-expanded] getAllUsersExpanded", response, response.Code())
	}
}

// NewGetAllUsersExpandedOK creates a GetAllUsersExpandedOK with default headers values
func NewGetAllUsersExpandedOK() *GetAllUsersExpandedOK {
	return &GetAllUsersExpandedOK{}
}

/*
GetAllUsersExpandedOK describes a response with status code 200, with default header values.

OK
*/
type GetAllUsersExpandedOK struct {
	Payload []*models.ExpandedUser
}

// IsSuccess returns true when this get all users expanded o k response has a 2xx status code
func (o *GetAllUsersExpandedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all users expanded o k response has a 3xx status code
func (o *GetAllUsersExpandedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all users expanded o k response has a 4xx status code
func (o *GetAllUsersExpandedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all users expanded o k response has a 5xx status code
func (o *GetAllUsersExpandedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all users expanded o k response a status code equal to that given
func (o *GetAllUsersExpandedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all users expanded o k response
func (o *GetAllUsersExpandedOK) Code() int {
	return 200
}

func (o *GetAllUsersExpandedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedOK %s", 200, payload)
}

func (o *GetAllUsersExpandedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedOK %s", 200, payload)
}

func (o *GetAllUsersExpandedOK) GetPayload() []*models.ExpandedUser {
	return o.Payload
}

func (o *GetAllUsersExpandedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsersExpandedBadRequest creates a GetAllUsersExpandedBadRequest with default headers values
func NewGetAllUsersExpandedBadRequest() *GetAllUsersExpandedBadRequest {
	return &GetAllUsersExpandedBadRequest{}
}

/*
GetAllUsersExpandedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllUsersExpandedBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all users expanded bad request response has a 2xx status code
func (o *GetAllUsersExpandedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all users expanded bad request response has a 3xx status code
func (o *GetAllUsersExpandedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all users expanded bad request response has a 4xx status code
func (o *GetAllUsersExpandedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all users expanded bad request response has a 5xx status code
func (o *GetAllUsersExpandedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all users expanded bad request response a status code equal to that given
func (o *GetAllUsersExpandedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all users expanded bad request response
func (o *GetAllUsersExpandedBadRequest) Code() int {
	return 400
}

func (o *GetAllUsersExpandedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedBadRequest %s", 400, payload)
}

func (o *GetAllUsersExpandedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedBadRequest %s", 400, payload)
}

func (o *GetAllUsersExpandedBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllUsersExpandedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsersExpandedNotFound creates a GetAllUsersExpandedNotFound with default headers values
func NewGetAllUsersExpandedNotFound() *GetAllUsersExpandedNotFound {
	return &GetAllUsersExpandedNotFound{}
}

/*
GetAllUsersExpandedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllUsersExpandedNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all users expanded not found response has a 2xx status code
func (o *GetAllUsersExpandedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all users expanded not found response has a 3xx status code
func (o *GetAllUsersExpandedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all users expanded not found response has a 4xx status code
func (o *GetAllUsersExpandedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all users expanded not found response has a 5xx status code
func (o *GetAllUsersExpandedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all users expanded not found response a status code equal to that given
func (o *GetAllUsersExpandedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all users expanded not found response
func (o *GetAllUsersExpandedNotFound) Code() int {
	return 404
}

func (o *GetAllUsersExpandedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedNotFound %s", 404, payload)
}

func (o *GetAllUsersExpandedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedNotFound %s", 404, payload)
}

func (o *GetAllUsersExpandedNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllUsersExpandedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsersExpandedMethodNotAllowed creates a GetAllUsersExpandedMethodNotAllowed with default headers values
func NewGetAllUsersExpandedMethodNotAllowed() *GetAllUsersExpandedMethodNotAllowed {
	return &GetAllUsersExpandedMethodNotAllowed{}
}

/*
GetAllUsersExpandedMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllUsersExpandedMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all users expanded method not allowed response has a 2xx status code
func (o *GetAllUsersExpandedMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all users expanded method not allowed response has a 3xx status code
func (o *GetAllUsersExpandedMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all users expanded method not allowed response has a 4xx status code
func (o *GetAllUsersExpandedMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all users expanded method not allowed response has a 5xx status code
func (o *GetAllUsersExpandedMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all users expanded method not allowed response a status code equal to that given
func (o *GetAllUsersExpandedMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all users expanded method not allowed response
func (o *GetAllUsersExpandedMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllUsersExpandedMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedMethodNotAllowed %s", 405, payload)
}

func (o *GetAllUsersExpandedMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedMethodNotAllowed %s", 405, payload)
}

func (o *GetAllUsersExpandedMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllUsersExpandedMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUsersExpandedInternalServerError creates a GetAllUsersExpandedInternalServerError with default headers values
func NewGetAllUsersExpandedInternalServerError() *GetAllUsersExpandedInternalServerError {
	return &GetAllUsersExpandedInternalServerError{}
}

/*
GetAllUsersExpandedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllUsersExpandedInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all users expanded internal server error response has a 2xx status code
func (o *GetAllUsersExpandedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all users expanded internal server error response has a 3xx status code
func (o *GetAllUsersExpandedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all users expanded internal server error response has a 4xx status code
func (o *GetAllUsersExpandedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all users expanded internal server error response has a 5xx status code
func (o *GetAllUsersExpandedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all users expanded internal server error response a status code equal to that given
func (o *GetAllUsersExpandedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all users expanded internal server error response
func (o *GetAllUsersExpandedInternalServerError) Code() int {
	return 500
}

func (o *GetAllUsersExpandedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedInternalServerError %s", 500, payload)
}

func (o *GetAllUsersExpandedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/list/users-expanded][%d] getAllUsersExpandedInternalServerError %s", 500, payload)
}

func (o *GetAllUsersExpandedInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllUsersExpandedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
