// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllSystemRolesUsingGETReader is a Reader for the GetAllSystemRolesUsingGET structure.
type GetAllSystemRolesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSystemRolesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSystemRolesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllSystemRolesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllSystemRolesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllSystemRolesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/users/roles] getAllSystemRolesUsingGET", response, response.Code())
	}
}

// NewGetAllSystemRolesUsingGETOK creates a GetAllSystemRolesUsingGETOK with default headers values
func NewGetAllSystemRolesUsingGETOK() *GetAllSystemRolesUsingGETOK {
	return &GetAllSystemRolesUsingGETOK{}
}

/*
GetAllSystemRolesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllSystemRolesUsingGETOK struct {
	Payload []*models.Role
}

// IsSuccess returns true when this get all system roles using g e t o k response has a 2xx status code
func (o *GetAllSystemRolesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all system roles using g e t o k response has a 3xx status code
func (o *GetAllSystemRolesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all system roles using g e t o k response has a 4xx status code
func (o *GetAllSystemRolesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all system roles using g e t o k response has a 5xx status code
func (o *GetAllSystemRolesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all system roles using g e t o k response a status code equal to that given
func (o *GetAllSystemRolesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all system roles using g e t o k response
func (o *GetAllSystemRolesUsingGETOK) Code() int {
	return 200
}

func (o *GetAllSystemRolesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETOK %s", 200, payload)
}

func (o *GetAllSystemRolesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETOK %s", 200, payload)
}

func (o *GetAllSystemRolesUsingGETOK) GetPayload() []*models.Role {
	return o.Payload
}

func (o *GetAllSystemRolesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSystemRolesUsingGETUnauthorized creates a GetAllSystemRolesUsingGETUnauthorized with default headers values
func NewGetAllSystemRolesUsingGETUnauthorized() *GetAllSystemRolesUsingGETUnauthorized {
	return &GetAllSystemRolesUsingGETUnauthorized{}
}

/*
GetAllSystemRolesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllSystemRolesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all system roles using g e t unauthorized response has a 2xx status code
func (o *GetAllSystemRolesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all system roles using g e t unauthorized response has a 3xx status code
func (o *GetAllSystemRolesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all system roles using g e t unauthorized response has a 4xx status code
func (o *GetAllSystemRolesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all system roles using g e t unauthorized response has a 5xx status code
func (o *GetAllSystemRolesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all system roles using g e t unauthorized response a status code equal to that given
func (o *GetAllSystemRolesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all system roles using g e t unauthorized response
func (o *GetAllSystemRolesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllSystemRolesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETUnauthorized", 401)
}

func (o *GetAllSystemRolesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETUnauthorized", 401)
}

func (o *GetAllSystemRolesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSystemRolesUsingGETForbidden creates a GetAllSystemRolesUsingGETForbidden with default headers values
func NewGetAllSystemRolesUsingGETForbidden() *GetAllSystemRolesUsingGETForbidden {
	return &GetAllSystemRolesUsingGETForbidden{}
}

/*
GetAllSystemRolesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllSystemRolesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all system roles using g e t forbidden response has a 2xx status code
func (o *GetAllSystemRolesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all system roles using g e t forbidden response has a 3xx status code
func (o *GetAllSystemRolesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all system roles using g e t forbidden response has a 4xx status code
func (o *GetAllSystemRolesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all system roles using g e t forbidden response has a 5xx status code
func (o *GetAllSystemRolesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all system roles using g e t forbidden response a status code equal to that given
func (o *GetAllSystemRolesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all system roles using g e t forbidden response
func (o *GetAllSystemRolesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllSystemRolesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETForbidden", 403)
}

func (o *GetAllSystemRolesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETForbidden", 403)
}

func (o *GetAllSystemRolesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSystemRolesUsingGETNotFound creates a GetAllSystemRolesUsingGETNotFound with default headers values
func NewGetAllSystemRolesUsingGETNotFound() *GetAllSystemRolesUsingGETNotFound {
	return &GetAllSystemRolesUsingGETNotFound{}
}

/*
GetAllSystemRolesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllSystemRolesUsingGETNotFound struct {
}

// IsSuccess returns true when this get all system roles using g e t not found response has a 2xx status code
func (o *GetAllSystemRolesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all system roles using g e t not found response has a 3xx status code
func (o *GetAllSystemRolesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all system roles using g e t not found response has a 4xx status code
func (o *GetAllSystemRolesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all system roles using g e t not found response has a 5xx status code
func (o *GetAllSystemRolesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all system roles using g e t not found response a status code equal to that given
func (o *GetAllSystemRolesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all system roles using g e t not found response
func (o *GetAllSystemRolesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllSystemRolesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETNotFound", 404)
}

func (o *GetAllSystemRolesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/users/roles][%d] getAllSystemRolesUsingGETNotFound", 404)
}

func (o *GetAllSystemRolesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
