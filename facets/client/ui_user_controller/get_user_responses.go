// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetUserReader is a Reader for the GetUser structure.
type GetUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetUserMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/users/{userId}] getUser", response, response.Code())
	}
}

// NewGetUserOK creates a GetUserOK with default headers values
func NewGetUserOK() *GetUserOK {
	return &GetUserOK{}
}

/*
GetUserOK describes a response with status code 200, with default header values.

OK
*/
type GetUserOK struct {
	Payload *models.User
}

// IsSuccess returns true when this get user o k response has a 2xx status code
func (o *GetUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user o k response has a 3xx status code
func (o *GetUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user o k response has a 4xx status code
func (o *GetUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user o k response has a 5xx status code
func (o *GetUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user o k response a status code equal to that given
func (o *GetUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user o k response
func (o *GetUserOK) Code() int {
	return 200
}

func (o *GetUserOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserOK %s", 200, payload)
}

func (o *GetUserOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserOK %s", 200, payload)
}

func (o *GetUserOK) GetPayload() *models.User {
	return o.Payload
}

func (o *GetUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserBadRequest creates a GetUserBadRequest with default headers values
func NewGetUserBadRequest() *GetUserBadRequest {
	return &GetUserBadRequest{}
}

/*
GetUserBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUserBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user bad request response has a 2xx status code
func (o *GetUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user bad request response has a 3xx status code
func (o *GetUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user bad request response has a 4xx status code
func (o *GetUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user bad request response has a 5xx status code
func (o *GetUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user bad request response a status code equal to that given
func (o *GetUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user bad request response
func (o *GetUserBadRequest) Code() int {
	return 400
}

func (o *GetUserBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserBadRequest %s", 400, payload)
}

func (o *GetUserBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserBadRequest %s", 400, payload)
}

func (o *GetUserBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserNotFound creates a GetUserNotFound with default headers values
func NewGetUserNotFound() *GetUserNotFound {
	return &GetUserNotFound{}
}

/*
GetUserNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUserNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user not found response has a 2xx status code
func (o *GetUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user not found response has a 3xx status code
func (o *GetUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user not found response has a 4xx status code
func (o *GetUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user not found response has a 5xx status code
func (o *GetUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user not found response a status code equal to that given
func (o *GetUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user not found response
func (o *GetUserNotFound) Code() int {
	return 404
}

func (o *GetUserNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserNotFound %s", 404, payload)
}

func (o *GetUserNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserNotFound %s", 404, payload)
}

func (o *GetUserNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserMethodNotAllowed creates a GetUserMethodNotAllowed with default headers values
func NewGetUserMethodNotAllowed() *GetUserMethodNotAllowed {
	return &GetUserMethodNotAllowed{}
}

/*
GetUserMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetUserMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user method not allowed response has a 2xx status code
func (o *GetUserMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user method not allowed response has a 3xx status code
func (o *GetUserMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user method not allowed response has a 4xx status code
func (o *GetUserMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user method not allowed response has a 5xx status code
func (o *GetUserMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get user method not allowed response a status code equal to that given
func (o *GetUserMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get user method not allowed response
func (o *GetUserMethodNotAllowed) Code() int {
	return 405
}

func (o *GetUserMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserMethodNotAllowed %s", 405, payload)
}

func (o *GetUserMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserMethodNotAllowed %s", 405, payload)
}

func (o *GetUserMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserInternalServerError creates a GetUserInternalServerError with default headers values
func NewGetUserInternalServerError() *GetUserInternalServerError {
	return &GetUserInternalServerError{}
}

/*
GetUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUserInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user internal server error response has a 2xx status code
func (o *GetUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user internal server error response has a 3xx status code
func (o *GetUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user internal server error response has a 4xx status code
func (o *GetUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user internal server error response has a 5xx status code
func (o *GetUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user internal server error response a status code equal to that given
func (o *GetUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user internal server error response
func (o *GetUserInternalServerError) Code() int {
	return 500
}

func (o *GetUserInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserInternalServerError %s", 500, payload)
}

func (o *GetUserInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}][%d] getUserInternalServerError %s", 500, payload)
}

func (o *GetUserInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
