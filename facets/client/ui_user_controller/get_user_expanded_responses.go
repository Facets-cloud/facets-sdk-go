// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetUserExpandedReader is a Reader for the GetUserExpanded structure.
type GetUserExpandedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserExpandedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserExpandedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserExpandedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserExpandedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetUserExpandedMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserExpandedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/users/{userId}/user-expanded] getUserExpanded", response, response.Code())
	}
}

// NewGetUserExpandedOK creates a GetUserExpandedOK with default headers values
func NewGetUserExpandedOK() *GetUserExpandedOK {
	return &GetUserExpandedOK{}
}

/*
GetUserExpandedOK describes a response with status code 200, with default header values.

OK
*/
type GetUserExpandedOK struct {
	Payload *models.ExpandedUser
}

// IsSuccess returns true when this get user expanded o k response has a 2xx status code
func (o *GetUserExpandedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user expanded o k response has a 3xx status code
func (o *GetUserExpandedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user expanded o k response has a 4xx status code
func (o *GetUserExpandedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user expanded o k response has a 5xx status code
func (o *GetUserExpandedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user expanded o k response a status code equal to that given
func (o *GetUserExpandedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user expanded o k response
func (o *GetUserExpandedOK) Code() int {
	return 200
}

func (o *GetUserExpandedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedOK %s", 200, payload)
}

func (o *GetUserExpandedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedOK %s", 200, payload)
}

func (o *GetUserExpandedOK) GetPayload() *models.ExpandedUser {
	return o.Payload
}

func (o *GetUserExpandedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExpandedUser)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserExpandedBadRequest creates a GetUserExpandedBadRequest with default headers values
func NewGetUserExpandedBadRequest() *GetUserExpandedBadRequest {
	return &GetUserExpandedBadRequest{}
}

/*
GetUserExpandedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUserExpandedBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user expanded bad request response has a 2xx status code
func (o *GetUserExpandedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user expanded bad request response has a 3xx status code
func (o *GetUserExpandedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user expanded bad request response has a 4xx status code
func (o *GetUserExpandedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user expanded bad request response has a 5xx status code
func (o *GetUserExpandedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user expanded bad request response a status code equal to that given
func (o *GetUserExpandedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user expanded bad request response
func (o *GetUserExpandedBadRequest) Code() int {
	return 400
}

func (o *GetUserExpandedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedBadRequest %s", 400, payload)
}

func (o *GetUserExpandedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedBadRequest %s", 400, payload)
}

func (o *GetUserExpandedBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserExpandedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserExpandedNotFound creates a GetUserExpandedNotFound with default headers values
func NewGetUserExpandedNotFound() *GetUserExpandedNotFound {
	return &GetUserExpandedNotFound{}
}

/*
GetUserExpandedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUserExpandedNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user expanded not found response has a 2xx status code
func (o *GetUserExpandedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user expanded not found response has a 3xx status code
func (o *GetUserExpandedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user expanded not found response has a 4xx status code
func (o *GetUserExpandedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user expanded not found response has a 5xx status code
func (o *GetUserExpandedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user expanded not found response a status code equal to that given
func (o *GetUserExpandedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user expanded not found response
func (o *GetUserExpandedNotFound) Code() int {
	return 404
}

func (o *GetUserExpandedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedNotFound %s", 404, payload)
}

func (o *GetUserExpandedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedNotFound %s", 404, payload)
}

func (o *GetUserExpandedNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserExpandedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserExpandedMethodNotAllowed creates a GetUserExpandedMethodNotAllowed with default headers values
func NewGetUserExpandedMethodNotAllowed() *GetUserExpandedMethodNotAllowed {
	return &GetUserExpandedMethodNotAllowed{}
}

/*
GetUserExpandedMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetUserExpandedMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user expanded method not allowed response has a 2xx status code
func (o *GetUserExpandedMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user expanded method not allowed response has a 3xx status code
func (o *GetUserExpandedMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user expanded method not allowed response has a 4xx status code
func (o *GetUserExpandedMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user expanded method not allowed response has a 5xx status code
func (o *GetUserExpandedMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get user expanded method not allowed response a status code equal to that given
func (o *GetUserExpandedMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get user expanded method not allowed response
func (o *GetUserExpandedMethodNotAllowed) Code() int {
	return 405
}

func (o *GetUserExpandedMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedMethodNotAllowed %s", 405, payload)
}

func (o *GetUserExpandedMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedMethodNotAllowed %s", 405, payload)
}

func (o *GetUserExpandedMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserExpandedMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserExpandedInternalServerError creates a GetUserExpandedInternalServerError with default headers values
func NewGetUserExpandedInternalServerError() *GetUserExpandedInternalServerError {
	return &GetUserExpandedInternalServerError{}
}

/*
GetUserExpandedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUserExpandedInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user expanded internal server error response has a 2xx status code
func (o *GetUserExpandedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user expanded internal server error response has a 3xx status code
func (o *GetUserExpandedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user expanded internal server error response has a 4xx status code
func (o *GetUserExpandedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user expanded internal server error response has a 5xx status code
func (o *GetUserExpandedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user expanded internal server error response a status code equal to that given
func (o *GetUserExpandedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user expanded internal server error response
func (o *GetUserExpandedInternalServerError) Code() int {
	return 500
}

func (o *GetUserExpandedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedInternalServerError %s", 500, payload)
}

func (o *GetUserExpandedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/users/{userId}/user-expanded][%d] getUserExpandedInternalServerError %s", 500, payload)
}

func (o *GetUserExpandedInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserExpandedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
