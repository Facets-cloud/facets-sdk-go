// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// InviteUsersReader is a Reader for the InviteUsers structure.
type InviteUsersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteUsersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInviteUsersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInviteUsersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInviteUsersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewInviteUsersMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInviteUsersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/users/invite-users] inviteUsers", response, response.Code())
	}
}

// NewInviteUsersOK creates a InviteUsersOK with default headers values
func NewInviteUsersOK() *InviteUsersOK {
	return &InviteUsersOK{}
}

/*
InviteUsersOK describes a response with status code 200, with default header values.

OK
*/
type InviteUsersOK struct {
}

// IsSuccess returns true when this invite users o k response has a 2xx status code
func (o *InviteUsersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invite users o k response has a 3xx status code
func (o *InviteUsersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users o k response has a 4xx status code
func (o *InviteUsersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invite users o k response has a 5xx status code
func (o *InviteUsersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users o k response a status code equal to that given
func (o *InviteUsersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the invite users o k response
func (o *InviteUsersOK) Code() int {
	return 200
}

func (o *InviteUsersOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersOK", 200)
}

func (o *InviteUsersOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersOK", 200)
}

func (o *InviteUsersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersBadRequest creates a InviteUsersBadRequest with default headers values
func NewInviteUsersBadRequest() *InviteUsersBadRequest {
	return &InviteUsersBadRequest{}
}

/*
InviteUsersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InviteUsersBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this invite users bad request response has a 2xx status code
func (o *InviteUsersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invite users bad request response has a 3xx status code
func (o *InviteUsersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users bad request response has a 4xx status code
func (o *InviteUsersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this invite users bad request response has a 5xx status code
func (o *InviteUsersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users bad request response a status code equal to that given
func (o *InviteUsersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the invite users bad request response
func (o *InviteUsersBadRequest) Code() int {
	return 400
}

func (o *InviteUsersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersBadRequest %s", 400, payload)
}

func (o *InviteUsersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersBadRequest %s", 400, payload)
}

func (o *InviteUsersBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *InviteUsersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersNotFound creates a InviteUsersNotFound with default headers values
func NewInviteUsersNotFound() *InviteUsersNotFound {
	return &InviteUsersNotFound{}
}

/*
InviteUsersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InviteUsersNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this invite users not found response has a 2xx status code
func (o *InviteUsersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invite users not found response has a 3xx status code
func (o *InviteUsersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users not found response has a 4xx status code
func (o *InviteUsersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invite users not found response has a 5xx status code
func (o *InviteUsersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users not found response a status code equal to that given
func (o *InviteUsersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the invite users not found response
func (o *InviteUsersNotFound) Code() int {
	return 404
}

func (o *InviteUsersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersNotFound %s", 404, payload)
}

func (o *InviteUsersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersNotFound %s", 404, payload)
}

func (o *InviteUsersNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *InviteUsersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersMethodNotAllowed creates a InviteUsersMethodNotAllowed with default headers values
func NewInviteUsersMethodNotAllowed() *InviteUsersMethodNotAllowed {
	return &InviteUsersMethodNotAllowed{}
}

/*
InviteUsersMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type InviteUsersMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this invite users method not allowed response has a 2xx status code
func (o *InviteUsersMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invite users method not allowed response has a 3xx status code
func (o *InviteUsersMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users method not allowed response has a 4xx status code
func (o *InviteUsersMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this invite users method not allowed response has a 5xx status code
func (o *InviteUsersMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users method not allowed response a status code equal to that given
func (o *InviteUsersMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the invite users method not allowed response
func (o *InviteUsersMethodNotAllowed) Code() int {
	return 405
}

func (o *InviteUsersMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersMethodNotAllowed %s", 405, payload)
}

func (o *InviteUsersMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersMethodNotAllowed %s", 405, payload)
}

func (o *InviteUsersMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *InviteUsersMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteUsersInternalServerError creates a InviteUsersInternalServerError with default headers values
func NewInviteUsersInternalServerError() *InviteUsersInternalServerError {
	return &InviteUsersInternalServerError{}
}

/*
InviteUsersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type InviteUsersInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this invite users internal server error response has a 2xx status code
func (o *InviteUsersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invite users internal server error response has a 3xx status code
func (o *InviteUsersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users internal server error response has a 4xx status code
func (o *InviteUsersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this invite users internal server error response has a 5xx status code
func (o *InviteUsersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this invite users internal server error response a status code equal to that given
func (o *InviteUsersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the invite users internal server error response
func (o *InviteUsersInternalServerError) Code() int {
	return 500
}

func (o *InviteUsersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersInternalServerError %s", 500, payload)
}

func (o *InviteUsersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersInternalServerError %s", 500, payload)
}

func (o *InviteUsersInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *InviteUsersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
