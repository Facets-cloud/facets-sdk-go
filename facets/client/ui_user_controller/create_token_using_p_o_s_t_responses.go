// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateTokenUsingPOSTReader is a Reader for the CreateTokenUsingPOST structure.
type CreateTokenUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateTokenUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateTokenUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateTokenUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateTokenUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateTokenUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateTokenUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/users/createAccessToken] createTokenUsingPOST", response, response.Code())
	}
}

// NewCreateTokenUsingPOSTOK creates a CreateTokenUsingPOSTOK with default headers values
func NewCreateTokenUsingPOSTOK() *CreateTokenUsingPOSTOK {
	return &CreateTokenUsingPOSTOK{}
}

/*
CreateTokenUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateTokenUsingPOSTOK struct {
	Payload []*models.UserAccessToken
}

// IsSuccess returns true when this create token using p o s t o k response has a 2xx status code
func (o *CreateTokenUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create token using p o s t o k response has a 3xx status code
func (o *CreateTokenUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token using p o s t o k response has a 4xx status code
func (o *CreateTokenUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create token using p o s t o k response has a 5xx status code
func (o *CreateTokenUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create token using p o s t o k response a status code equal to that given
func (o *CreateTokenUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create token using p o s t o k response
func (o *CreateTokenUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateTokenUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTOK %s", 200, payload)
}

func (o *CreateTokenUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTOK %s", 200, payload)
}

func (o *CreateTokenUsingPOSTOK) GetPayload() []*models.UserAccessToken {
	return o.Payload
}

func (o *CreateTokenUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateTokenUsingPOSTCreated creates a CreateTokenUsingPOSTCreated with default headers values
func NewCreateTokenUsingPOSTCreated() *CreateTokenUsingPOSTCreated {
	return &CreateTokenUsingPOSTCreated{}
}

/*
CreateTokenUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateTokenUsingPOSTCreated struct {
}

// IsSuccess returns true when this create token using p o s t created response has a 2xx status code
func (o *CreateTokenUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create token using p o s t created response has a 3xx status code
func (o *CreateTokenUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token using p o s t created response has a 4xx status code
func (o *CreateTokenUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create token using p o s t created response has a 5xx status code
func (o *CreateTokenUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create token using p o s t created response a status code equal to that given
func (o *CreateTokenUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create token using p o s t created response
func (o *CreateTokenUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateTokenUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTCreated", 201)
}

func (o *CreateTokenUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTCreated", 201)
}

func (o *CreateTokenUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateTokenUsingPOSTUnauthorized creates a CreateTokenUsingPOSTUnauthorized with default headers values
func NewCreateTokenUsingPOSTUnauthorized() *CreateTokenUsingPOSTUnauthorized {
	return &CreateTokenUsingPOSTUnauthorized{}
}

/*
CreateTokenUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateTokenUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create token using p o s t unauthorized response has a 2xx status code
func (o *CreateTokenUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create token using p o s t unauthorized response has a 3xx status code
func (o *CreateTokenUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token using p o s t unauthorized response has a 4xx status code
func (o *CreateTokenUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create token using p o s t unauthorized response has a 5xx status code
func (o *CreateTokenUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create token using p o s t unauthorized response a status code equal to that given
func (o *CreateTokenUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create token using p o s t unauthorized response
func (o *CreateTokenUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateTokenUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTUnauthorized", 401)
}

func (o *CreateTokenUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTUnauthorized", 401)
}

func (o *CreateTokenUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateTokenUsingPOSTForbidden creates a CreateTokenUsingPOSTForbidden with default headers values
func NewCreateTokenUsingPOSTForbidden() *CreateTokenUsingPOSTForbidden {
	return &CreateTokenUsingPOSTForbidden{}
}

/*
CreateTokenUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateTokenUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create token using p o s t forbidden response has a 2xx status code
func (o *CreateTokenUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create token using p o s t forbidden response has a 3xx status code
func (o *CreateTokenUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token using p o s t forbidden response has a 4xx status code
func (o *CreateTokenUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create token using p o s t forbidden response has a 5xx status code
func (o *CreateTokenUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create token using p o s t forbidden response a status code equal to that given
func (o *CreateTokenUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create token using p o s t forbidden response
func (o *CreateTokenUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateTokenUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTForbidden", 403)
}

func (o *CreateTokenUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTForbidden", 403)
}

func (o *CreateTokenUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateTokenUsingPOSTNotFound creates a CreateTokenUsingPOSTNotFound with default headers values
func NewCreateTokenUsingPOSTNotFound() *CreateTokenUsingPOSTNotFound {
	return &CreateTokenUsingPOSTNotFound{}
}

/*
CreateTokenUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateTokenUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create token using p o s t not found response has a 2xx status code
func (o *CreateTokenUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create token using p o s t not found response has a 3xx status code
func (o *CreateTokenUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create token using p o s t not found response has a 4xx status code
func (o *CreateTokenUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create token using p o s t not found response has a 5xx status code
func (o *CreateTokenUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create token using p o s t not found response a status code equal to that given
func (o *CreateTokenUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create token using p o s t not found response
func (o *CreateTokenUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateTokenUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTNotFound", 404)
}

func (o *CreateTokenUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/createAccessToken][%d] createTokenUsingPOSTNotFound", 404)
}

func (o *CreateTokenUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
