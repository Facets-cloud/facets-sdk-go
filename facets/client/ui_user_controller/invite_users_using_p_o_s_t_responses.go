// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// InviteUsersUsingPOSTReader is a Reader for the InviteUsersUsingPOST structure.
type InviteUsersUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteUsersUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInviteUsersUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewInviteUsersUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewInviteUsersUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInviteUsersUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInviteUsersUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/users/invite-users] inviteUsersUsingPOST", response, response.Code())
	}
}

// NewInviteUsersUsingPOSTOK creates a InviteUsersUsingPOSTOK with default headers values
func NewInviteUsersUsingPOSTOK() *InviteUsersUsingPOSTOK {
	return &InviteUsersUsingPOSTOK{}
}

/*
InviteUsersUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type InviteUsersUsingPOSTOK struct {
}

// IsSuccess returns true when this invite users using p o s t o k response has a 2xx status code
func (o *InviteUsersUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invite users using p o s t o k response has a 3xx status code
func (o *InviteUsersUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users using p o s t o k response has a 4xx status code
func (o *InviteUsersUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this invite users using p o s t o k response has a 5xx status code
func (o *InviteUsersUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users using p o s t o k response a status code equal to that given
func (o *InviteUsersUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the invite users using p o s t o k response
func (o *InviteUsersUsingPOSTOK) Code() int {
	return 200
}

func (o *InviteUsersUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTOK", 200)
}

func (o *InviteUsersUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTOK", 200)
}

func (o *InviteUsersUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersUsingPOSTCreated creates a InviteUsersUsingPOSTCreated with default headers values
func NewInviteUsersUsingPOSTCreated() *InviteUsersUsingPOSTCreated {
	return &InviteUsersUsingPOSTCreated{}
}

/*
InviteUsersUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type InviteUsersUsingPOSTCreated struct {
}

// IsSuccess returns true when this invite users using p o s t created response has a 2xx status code
func (o *InviteUsersUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this invite users using p o s t created response has a 3xx status code
func (o *InviteUsersUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users using p o s t created response has a 4xx status code
func (o *InviteUsersUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this invite users using p o s t created response has a 5xx status code
func (o *InviteUsersUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users using p o s t created response a status code equal to that given
func (o *InviteUsersUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the invite users using p o s t created response
func (o *InviteUsersUsingPOSTCreated) Code() int {
	return 201
}

func (o *InviteUsersUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTCreated", 201)
}

func (o *InviteUsersUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTCreated", 201)
}

func (o *InviteUsersUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersUsingPOSTUnauthorized creates a InviteUsersUsingPOSTUnauthorized with default headers values
func NewInviteUsersUsingPOSTUnauthorized() *InviteUsersUsingPOSTUnauthorized {
	return &InviteUsersUsingPOSTUnauthorized{}
}

/*
InviteUsersUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type InviteUsersUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this invite users using p o s t unauthorized response has a 2xx status code
func (o *InviteUsersUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invite users using p o s t unauthorized response has a 3xx status code
func (o *InviteUsersUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users using p o s t unauthorized response has a 4xx status code
func (o *InviteUsersUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this invite users using p o s t unauthorized response has a 5xx status code
func (o *InviteUsersUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users using p o s t unauthorized response a status code equal to that given
func (o *InviteUsersUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the invite users using p o s t unauthorized response
func (o *InviteUsersUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *InviteUsersUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTUnauthorized", 401)
}

func (o *InviteUsersUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTUnauthorized", 401)
}

func (o *InviteUsersUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersUsingPOSTForbidden creates a InviteUsersUsingPOSTForbidden with default headers values
func NewInviteUsersUsingPOSTForbidden() *InviteUsersUsingPOSTForbidden {
	return &InviteUsersUsingPOSTForbidden{}
}

/*
InviteUsersUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InviteUsersUsingPOSTForbidden struct {
}

// IsSuccess returns true when this invite users using p o s t forbidden response has a 2xx status code
func (o *InviteUsersUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invite users using p o s t forbidden response has a 3xx status code
func (o *InviteUsersUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users using p o s t forbidden response has a 4xx status code
func (o *InviteUsersUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this invite users using p o s t forbidden response has a 5xx status code
func (o *InviteUsersUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users using p o s t forbidden response a status code equal to that given
func (o *InviteUsersUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the invite users using p o s t forbidden response
func (o *InviteUsersUsingPOSTForbidden) Code() int {
	return 403
}

func (o *InviteUsersUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTForbidden", 403)
}

func (o *InviteUsersUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTForbidden", 403)
}

func (o *InviteUsersUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewInviteUsersUsingPOSTNotFound creates a InviteUsersUsingPOSTNotFound with default headers values
func NewInviteUsersUsingPOSTNotFound() *InviteUsersUsingPOSTNotFound {
	return &InviteUsersUsingPOSTNotFound{}
}

/*
InviteUsersUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InviteUsersUsingPOSTNotFound struct {
}

// IsSuccess returns true when this invite users using p o s t not found response has a 2xx status code
func (o *InviteUsersUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this invite users using p o s t not found response has a 3xx status code
func (o *InviteUsersUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this invite users using p o s t not found response has a 4xx status code
func (o *InviteUsersUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this invite users using p o s t not found response has a 5xx status code
func (o *InviteUsersUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this invite users using p o s t not found response a status code equal to that given
func (o *InviteUsersUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the invite users using p o s t not found response
func (o *InviteUsersUsingPOSTNotFound) Code() int {
	return 404
}

func (o *InviteUsersUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTNotFound", 404)
}

func (o *InviteUsersUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/users/invite-users][%d] inviteUsersUsingPOSTNotFound", 404)
}

func (o *InviteUsersUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
