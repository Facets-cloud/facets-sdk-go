// Code generated by go-swagger; DO NOT EDIT.

package ui_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteALlLoggedInUsersUsingDELETEReader is a Reader for the DeleteALlLoggedInUsersUsingDELETE structure.
type DeleteALlLoggedInUsersUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteALlLoggedInUsersUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteALlLoggedInUsersUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteALlLoggedInUsersUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteALlLoggedInUsersUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteALlLoggedInUsersUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/users/loggedIn/session] deleteALlLoggedInUsersUsingDELETE", response, response.Code())
	}
}

// NewDeleteALlLoggedInUsersUsingDELETEOK creates a DeleteALlLoggedInUsersUsingDELETEOK with default headers values
func NewDeleteALlLoggedInUsersUsingDELETEOK() *DeleteALlLoggedInUsersUsingDELETEOK {
	return &DeleteALlLoggedInUsersUsingDELETEOK{}
}

/*
DeleteALlLoggedInUsersUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type DeleteALlLoggedInUsersUsingDELETEOK struct {
	Payload bool
}

// IsSuccess returns true when this delete a ll logged in users using d e l e t e o k response has a 2xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete a ll logged in users using d e l e t e o k response has a 3xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users using d e l e t e o k response has a 4xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete a ll logged in users using d e l e t e o k response has a 5xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users using d e l e t e o k response a status code equal to that given
func (o *DeleteALlLoggedInUsersUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete a ll logged in users using d e l e t e o k response
func (o *DeleteALlLoggedInUsersUsingDELETEOK) Code() int {
	return 200
}

func (o *DeleteALlLoggedInUsersUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETEOK %s", 200, payload)
}

func (o *DeleteALlLoggedInUsersUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETEOK %s", 200, payload)
}

func (o *DeleteALlLoggedInUsersUsingDELETEOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteALlLoggedInUsersUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteALlLoggedInUsersUsingDELETENoContent creates a DeleteALlLoggedInUsersUsingDELETENoContent with default headers values
func NewDeleteALlLoggedInUsersUsingDELETENoContent() *DeleteALlLoggedInUsersUsingDELETENoContent {
	return &DeleteALlLoggedInUsersUsingDELETENoContent{}
}

/*
DeleteALlLoggedInUsersUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteALlLoggedInUsersUsingDELETENoContent struct {
}

// IsSuccess returns true when this delete a ll logged in users using d e l e t e no content response has a 2xx status code
func (o *DeleteALlLoggedInUsersUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete a ll logged in users using d e l e t e no content response has a 3xx status code
func (o *DeleteALlLoggedInUsersUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users using d e l e t e no content response has a 4xx status code
func (o *DeleteALlLoggedInUsersUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete a ll logged in users using d e l e t e no content response has a 5xx status code
func (o *DeleteALlLoggedInUsersUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users using d e l e t e no content response a status code equal to that given
func (o *DeleteALlLoggedInUsersUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete a ll logged in users using d e l e t e no content response
func (o *DeleteALlLoggedInUsersUsingDELETENoContent) Code() int {
	return 204
}

func (o *DeleteALlLoggedInUsersUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETENoContent", 204)
}

func (o *DeleteALlLoggedInUsersUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETENoContent", 204)
}

func (o *DeleteALlLoggedInUsersUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteALlLoggedInUsersUsingDELETEUnauthorized creates a DeleteALlLoggedInUsersUsingDELETEUnauthorized with default headers values
func NewDeleteALlLoggedInUsersUsingDELETEUnauthorized() *DeleteALlLoggedInUsersUsingDELETEUnauthorized {
	return &DeleteALlLoggedInUsersUsingDELETEUnauthorized{}
}

/*
DeleteALlLoggedInUsersUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteALlLoggedInUsersUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete a ll logged in users using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a ll logged in users using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a ll logged in users using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete a ll logged in users using d e l e t e unauthorized response
func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETEUnauthorized", 401)
}

func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETEUnauthorized", 401)
}

func (o *DeleteALlLoggedInUsersUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteALlLoggedInUsersUsingDELETEForbidden creates a DeleteALlLoggedInUsersUsingDELETEForbidden with default headers values
func NewDeleteALlLoggedInUsersUsingDELETEForbidden() *DeleteALlLoggedInUsersUsingDELETEForbidden {
	return &DeleteALlLoggedInUsersUsingDELETEForbidden{}
}

/*
DeleteALlLoggedInUsersUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteALlLoggedInUsersUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete a ll logged in users using d e l e t e forbidden response has a 2xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete a ll logged in users using d e l e t e forbidden response has a 3xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete a ll logged in users using d e l e t e forbidden response has a 4xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete a ll logged in users using d e l e t e forbidden response has a 5xx status code
func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete a ll logged in users using d e l e t e forbidden response a status code equal to that given
func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete a ll logged in users using d e l e t e forbidden response
func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) Code() int {
	return 403
}

func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETEForbidden", 403)
}

func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/users/loggedIn/session][%d] deleteALlLoggedInUsersUsingDELETEForbidden", 403)
}

func (o *DeleteALlLoggedInUsersUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
