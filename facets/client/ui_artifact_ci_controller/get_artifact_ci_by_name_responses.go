// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactCiByNameReader is a Reader for the GetArtifactCiByName structure.
type GetArtifactCiByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactCiByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactCiByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactCiByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactCiByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetArtifactCiByNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactCiByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts-ci/name/{ciName}] getArtifactCiByName", response, response.Code())
	}
}

// NewGetArtifactCiByNameOK creates a GetArtifactCiByNameOK with default headers values
func NewGetArtifactCiByNameOK() *GetArtifactCiByNameOK {
	return &GetArtifactCiByNameOK{}
}

/*
GetArtifactCiByNameOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactCiByNameOK struct {
	Payload *models.ArtifactCI
}

// IsSuccess returns true when this get artifact ci by name o k response has a 2xx status code
func (o *GetArtifactCiByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact ci by name o k response has a 3xx status code
func (o *GetArtifactCiByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name o k response has a 4xx status code
func (o *GetArtifactCiByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact ci by name o k response has a 5xx status code
func (o *GetArtifactCiByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name o k response a status code equal to that given
func (o *GetArtifactCiByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifact ci by name o k response
func (o *GetArtifactCiByNameOK) Code() int {
	return 200
}

func (o *GetArtifactCiByNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameOK %s", 200, payload)
}

func (o *GetArtifactCiByNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameOK %s", 200, payload)
}

func (o *GetArtifactCiByNameOK) GetPayload() *models.ArtifactCI {
	return o.Payload
}

func (o *GetArtifactCiByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactCI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCiByNameBadRequest creates a GetArtifactCiByNameBadRequest with default headers values
func NewGetArtifactCiByNameBadRequest() *GetArtifactCiByNameBadRequest {
	return &GetArtifactCiByNameBadRequest{}
}

/*
GetArtifactCiByNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactCiByNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact ci by name bad request response has a 2xx status code
func (o *GetArtifactCiByNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact ci by name bad request response has a 3xx status code
func (o *GetArtifactCiByNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name bad request response has a 4xx status code
func (o *GetArtifactCiByNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact ci by name bad request response has a 5xx status code
func (o *GetArtifactCiByNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name bad request response a status code equal to that given
func (o *GetArtifactCiByNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get artifact ci by name bad request response
func (o *GetArtifactCiByNameBadRequest) Code() int {
	return 400
}

func (o *GetArtifactCiByNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameBadRequest %s", 400, payload)
}

func (o *GetArtifactCiByNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameBadRequest %s", 400, payload)
}

func (o *GetArtifactCiByNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCiByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCiByNameNotFound creates a GetArtifactCiByNameNotFound with default headers values
func NewGetArtifactCiByNameNotFound() *GetArtifactCiByNameNotFound {
	return &GetArtifactCiByNameNotFound{}
}

/*
GetArtifactCiByNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactCiByNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact ci by name not found response has a 2xx status code
func (o *GetArtifactCiByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact ci by name not found response has a 3xx status code
func (o *GetArtifactCiByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name not found response has a 4xx status code
func (o *GetArtifactCiByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact ci by name not found response has a 5xx status code
func (o *GetArtifactCiByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name not found response a status code equal to that given
func (o *GetArtifactCiByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifact ci by name not found response
func (o *GetArtifactCiByNameNotFound) Code() int {
	return 404
}

func (o *GetArtifactCiByNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameNotFound %s", 404, payload)
}

func (o *GetArtifactCiByNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameNotFound %s", 404, payload)
}

func (o *GetArtifactCiByNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCiByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCiByNameMethodNotAllowed creates a GetArtifactCiByNameMethodNotAllowed with default headers values
func NewGetArtifactCiByNameMethodNotAllowed() *GetArtifactCiByNameMethodNotAllowed {
	return &GetArtifactCiByNameMethodNotAllowed{}
}

/*
GetArtifactCiByNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetArtifactCiByNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact ci by name method not allowed response has a 2xx status code
func (o *GetArtifactCiByNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact ci by name method not allowed response has a 3xx status code
func (o *GetArtifactCiByNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name method not allowed response has a 4xx status code
func (o *GetArtifactCiByNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact ci by name method not allowed response has a 5xx status code
func (o *GetArtifactCiByNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name method not allowed response a status code equal to that given
func (o *GetArtifactCiByNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get artifact ci by name method not allowed response
func (o *GetArtifactCiByNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetArtifactCiByNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactCiByNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactCiByNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCiByNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCiByNameInternalServerError creates a GetArtifactCiByNameInternalServerError with default headers values
func NewGetArtifactCiByNameInternalServerError() *GetArtifactCiByNameInternalServerError {
	return &GetArtifactCiByNameInternalServerError{}
}

/*
GetArtifactCiByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArtifactCiByNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact ci by name internal server error response has a 2xx status code
func (o *GetArtifactCiByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact ci by name internal server error response has a 3xx status code
func (o *GetArtifactCiByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name internal server error response has a 4xx status code
func (o *GetArtifactCiByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact ci by name internal server error response has a 5xx status code
func (o *GetArtifactCiByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifact ci by name internal server error response a status code equal to that given
func (o *GetArtifactCiByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get artifact ci by name internal server error response
func (o *GetArtifactCiByNameInternalServerError) Code() int {
	return 500
}

func (o *GetArtifactCiByNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameInternalServerError %s", 500, payload)
}

func (o *GetArtifactCiByNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameInternalServerError %s", 500, payload)
}

func (o *GetArtifactCiByNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCiByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
