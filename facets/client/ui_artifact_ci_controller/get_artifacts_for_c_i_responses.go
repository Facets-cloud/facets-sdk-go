// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactsForCIReader is a Reader for the GetArtifactsForCI structure.
type GetArtifactsForCIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactsForCIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactsForCIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactsForCIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactsForCINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetArtifactsForCIMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactsForCIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts] getArtifactsForCI", response, response.Code())
	}
}

// NewGetArtifactsForCIOK creates a GetArtifactsForCIOK with default headers values
func NewGetArtifactsForCIOK() *GetArtifactsForCIOK {
	return &GetArtifactsForCIOK{}
}

/*
GetArtifactsForCIOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactsForCIOK struct {
	Payload []*models.CiArtifactResponse
}

// IsSuccess returns true when this get artifacts for c i o k response has a 2xx status code
func (o *GetArtifactsForCIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifacts for c i o k response has a 3xx status code
func (o *GetArtifactsForCIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i o k response has a 4xx status code
func (o *GetArtifactsForCIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts for c i o k response has a 5xx status code
func (o *GetArtifactsForCIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i o k response a status code equal to that given
func (o *GetArtifactsForCIOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifacts for c i o k response
func (o *GetArtifactsForCIOK) Code() int {
	return 200
}

func (o *GetArtifactsForCIOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIOK %s", 200, payload)
}

func (o *GetArtifactsForCIOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIOK %s", 200, payload)
}

func (o *GetArtifactsForCIOK) GetPayload() []*models.CiArtifactResponse {
	return o.Payload
}

func (o *GetArtifactsForCIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsForCIBadRequest creates a GetArtifactsForCIBadRequest with default headers values
func NewGetArtifactsForCIBadRequest() *GetArtifactsForCIBadRequest {
	return &GetArtifactsForCIBadRequest{}
}

/*
GetArtifactsForCIBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactsForCIBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts for c i bad request response has a 2xx status code
func (o *GetArtifactsForCIBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts for c i bad request response has a 3xx status code
func (o *GetArtifactsForCIBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i bad request response has a 4xx status code
func (o *GetArtifactsForCIBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts for c i bad request response has a 5xx status code
func (o *GetArtifactsForCIBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i bad request response a status code equal to that given
func (o *GetArtifactsForCIBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get artifacts for c i bad request response
func (o *GetArtifactsForCIBadRequest) Code() int {
	return 400
}

func (o *GetArtifactsForCIBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIBadRequest %s", 400, payload)
}

func (o *GetArtifactsForCIBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIBadRequest %s", 400, payload)
}

func (o *GetArtifactsForCIBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsForCIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsForCINotFound creates a GetArtifactsForCINotFound with default headers values
func NewGetArtifactsForCINotFound() *GetArtifactsForCINotFound {
	return &GetArtifactsForCINotFound{}
}

/*
GetArtifactsForCINotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactsForCINotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts for c i not found response has a 2xx status code
func (o *GetArtifactsForCINotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts for c i not found response has a 3xx status code
func (o *GetArtifactsForCINotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i not found response has a 4xx status code
func (o *GetArtifactsForCINotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts for c i not found response has a 5xx status code
func (o *GetArtifactsForCINotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i not found response a status code equal to that given
func (o *GetArtifactsForCINotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifacts for c i not found response
func (o *GetArtifactsForCINotFound) Code() int {
	return 404
}

func (o *GetArtifactsForCINotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCINotFound %s", 404, payload)
}

func (o *GetArtifactsForCINotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCINotFound %s", 404, payload)
}

func (o *GetArtifactsForCINotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsForCINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsForCIMethodNotAllowed creates a GetArtifactsForCIMethodNotAllowed with default headers values
func NewGetArtifactsForCIMethodNotAllowed() *GetArtifactsForCIMethodNotAllowed {
	return &GetArtifactsForCIMethodNotAllowed{}
}

/*
GetArtifactsForCIMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetArtifactsForCIMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts for c i method not allowed response has a 2xx status code
func (o *GetArtifactsForCIMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts for c i method not allowed response has a 3xx status code
func (o *GetArtifactsForCIMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i method not allowed response has a 4xx status code
func (o *GetArtifactsForCIMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts for c i method not allowed response has a 5xx status code
func (o *GetArtifactsForCIMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i method not allowed response a status code equal to that given
func (o *GetArtifactsForCIMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get artifacts for c i method not allowed response
func (o *GetArtifactsForCIMethodNotAllowed) Code() int {
	return 405
}

func (o *GetArtifactsForCIMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactsForCIMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactsForCIMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsForCIMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsForCIInternalServerError creates a GetArtifactsForCIInternalServerError with default headers values
func NewGetArtifactsForCIInternalServerError() *GetArtifactsForCIInternalServerError {
	return &GetArtifactsForCIInternalServerError{}
}

/*
GetArtifactsForCIInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArtifactsForCIInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts for c i internal server error response has a 2xx status code
func (o *GetArtifactsForCIInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts for c i internal server error response has a 3xx status code
func (o *GetArtifactsForCIInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i internal server error response has a 4xx status code
func (o *GetArtifactsForCIInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts for c i internal server error response has a 5xx status code
func (o *GetArtifactsForCIInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifacts for c i internal server error response a status code equal to that given
func (o *GetArtifactsForCIInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get artifacts for c i internal server error response
func (o *GetArtifactsForCIInternalServerError) Code() int {
	return 500
}

func (o *GetArtifactsForCIInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIInternalServerError %s", 500, payload)
}

func (o *GetArtifactsForCIInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIInternalServerError %s", 500, payload)
}

func (o *GetArtifactsForCIInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsForCIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
