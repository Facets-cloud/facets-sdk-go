// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactCiByNameUsingGETReader is a Reader for the GetArtifactCiByNameUsingGET structure.
type GetArtifactCiByNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactCiByNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactCiByNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetArtifactCiByNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactCiByNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactCiByNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts-ci/name/{ciName}] getArtifactCiByNameUsingGET", response, response.Code())
	}
}

// NewGetArtifactCiByNameUsingGETOK creates a GetArtifactCiByNameUsingGETOK with default headers values
func NewGetArtifactCiByNameUsingGETOK() *GetArtifactCiByNameUsingGETOK {
	return &GetArtifactCiByNameUsingGETOK{}
}

/*
GetArtifactCiByNameUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactCiByNameUsingGETOK struct {
	Payload *models.ArtifactCI
}

// IsSuccess returns true when this get artifact ci by name using g e t o k response has a 2xx status code
func (o *GetArtifactCiByNameUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact ci by name using g e t o k response has a 3xx status code
func (o *GetArtifactCiByNameUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name using g e t o k response has a 4xx status code
func (o *GetArtifactCiByNameUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact ci by name using g e t o k response has a 5xx status code
func (o *GetArtifactCiByNameUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name using g e t o k response a status code equal to that given
func (o *GetArtifactCiByNameUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifact ci by name using g e t o k response
func (o *GetArtifactCiByNameUsingGETOK) Code() int {
	return 200
}

func (o *GetArtifactCiByNameUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETOK %s", 200, payload)
}

func (o *GetArtifactCiByNameUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETOK %s", 200, payload)
}

func (o *GetArtifactCiByNameUsingGETOK) GetPayload() *models.ArtifactCI {
	return o.Payload
}

func (o *GetArtifactCiByNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactCI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCiByNameUsingGETUnauthorized creates a GetArtifactCiByNameUsingGETUnauthorized with default headers values
func NewGetArtifactCiByNameUsingGETUnauthorized() *GetArtifactCiByNameUsingGETUnauthorized {
	return &GetArtifactCiByNameUsingGETUnauthorized{}
}

/*
GetArtifactCiByNameUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArtifactCiByNameUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get artifact ci by name using g e t unauthorized response has a 2xx status code
func (o *GetArtifactCiByNameUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact ci by name using g e t unauthorized response has a 3xx status code
func (o *GetArtifactCiByNameUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name using g e t unauthorized response has a 4xx status code
func (o *GetArtifactCiByNameUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact ci by name using g e t unauthorized response has a 5xx status code
func (o *GetArtifactCiByNameUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name using g e t unauthorized response a status code equal to that given
func (o *GetArtifactCiByNameUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get artifact ci by name using g e t unauthorized response
func (o *GetArtifactCiByNameUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetArtifactCiByNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETUnauthorized", 401)
}

func (o *GetArtifactCiByNameUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETUnauthorized", 401)
}

func (o *GetArtifactCiByNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactCiByNameUsingGETForbidden creates a GetArtifactCiByNameUsingGETForbidden with default headers values
func NewGetArtifactCiByNameUsingGETForbidden() *GetArtifactCiByNameUsingGETForbidden {
	return &GetArtifactCiByNameUsingGETForbidden{}
}

/*
GetArtifactCiByNameUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetArtifactCiByNameUsingGETForbidden struct {
}

// IsSuccess returns true when this get artifact ci by name using g e t forbidden response has a 2xx status code
func (o *GetArtifactCiByNameUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact ci by name using g e t forbidden response has a 3xx status code
func (o *GetArtifactCiByNameUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name using g e t forbidden response has a 4xx status code
func (o *GetArtifactCiByNameUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact ci by name using g e t forbidden response has a 5xx status code
func (o *GetArtifactCiByNameUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name using g e t forbidden response a status code equal to that given
func (o *GetArtifactCiByNameUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get artifact ci by name using g e t forbidden response
func (o *GetArtifactCiByNameUsingGETForbidden) Code() int {
	return 403
}

func (o *GetArtifactCiByNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETForbidden", 403)
}

func (o *GetArtifactCiByNameUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETForbidden", 403)
}

func (o *GetArtifactCiByNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactCiByNameUsingGETNotFound creates a GetArtifactCiByNameUsingGETNotFound with default headers values
func NewGetArtifactCiByNameUsingGETNotFound() *GetArtifactCiByNameUsingGETNotFound {
	return &GetArtifactCiByNameUsingGETNotFound{}
}

/*
GetArtifactCiByNameUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactCiByNameUsingGETNotFound struct {
}

// IsSuccess returns true when this get artifact ci by name using g e t not found response has a 2xx status code
func (o *GetArtifactCiByNameUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact ci by name using g e t not found response has a 3xx status code
func (o *GetArtifactCiByNameUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact ci by name using g e t not found response has a 4xx status code
func (o *GetArtifactCiByNameUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact ci by name using g e t not found response has a 5xx status code
func (o *GetArtifactCiByNameUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact ci by name using g e t not found response a status code equal to that given
func (o *GetArtifactCiByNameUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifact ci by name using g e t not found response
func (o *GetArtifactCiByNameUsingGETNotFound) Code() int {
	return 404
}

func (o *GetArtifactCiByNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETNotFound", 404)
}

func (o *GetArtifactCiByNameUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/name/{ciName}][%d] getArtifactCiByNameUsingGETNotFound", 404)
}

func (o *GetArtifactCiByNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
