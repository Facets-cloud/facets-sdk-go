// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateArtifactCIReader is a Reader for the CreateArtifactCI structure.
type CreateArtifactCIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateArtifactCIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateArtifactCIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateArtifactCIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateArtifactCINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateArtifactCIMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateArtifactCIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts-ci] createArtifactCI", response, response.Code())
	}
}

// NewCreateArtifactCIOK creates a CreateArtifactCIOK with default headers values
func NewCreateArtifactCIOK() *CreateArtifactCIOK {
	return &CreateArtifactCIOK{}
}

/*
CreateArtifactCIOK describes a response with status code 200, with default header values.

OK
*/
type CreateArtifactCIOK struct {
	Payload *models.ArtifactCI
}

// IsSuccess returns true when this create artifact c i o k response has a 2xx status code
func (o *CreateArtifactCIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create artifact c i o k response has a 3xx status code
func (o *CreateArtifactCIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create artifact c i o k response has a 4xx status code
func (o *CreateArtifactCIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create artifact c i o k response has a 5xx status code
func (o *CreateArtifactCIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create artifact c i o k response a status code equal to that given
func (o *CreateArtifactCIOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create artifact c i o k response
func (o *CreateArtifactCIOK) Code() int {
	return 200
}

func (o *CreateArtifactCIOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIOK %s", 200, payload)
}

func (o *CreateArtifactCIOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIOK %s", 200, payload)
}

func (o *CreateArtifactCIOK) GetPayload() *models.ArtifactCI {
	return o.Payload
}

func (o *CreateArtifactCIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactCI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateArtifactCIBadRequest creates a CreateArtifactCIBadRequest with default headers values
func NewCreateArtifactCIBadRequest() *CreateArtifactCIBadRequest {
	return &CreateArtifactCIBadRequest{}
}

/*
CreateArtifactCIBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateArtifactCIBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create artifact c i bad request response has a 2xx status code
func (o *CreateArtifactCIBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create artifact c i bad request response has a 3xx status code
func (o *CreateArtifactCIBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create artifact c i bad request response has a 4xx status code
func (o *CreateArtifactCIBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create artifact c i bad request response has a 5xx status code
func (o *CreateArtifactCIBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create artifact c i bad request response a status code equal to that given
func (o *CreateArtifactCIBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create artifact c i bad request response
func (o *CreateArtifactCIBadRequest) Code() int {
	return 400
}

func (o *CreateArtifactCIBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIBadRequest %s", 400, payload)
}

func (o *CreateArtifactCIBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIBadRequest %s", 400, payload)
}

func (o *CreateArtifactCIBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateArtifactCIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateArtifactCINotFound creates a CreateArtifactCINotFound with default headers values
func NewCreateArtifactCINotFound() *CreateArtifactCINotFound {
	return &CreateArtifactCINotFound{}
}

/*
CreateArtifactCINotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateArtifactCINotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create artifact c i not found response has a 2xx status code
func (o *CreateArtifactCINotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create artifact c i not found response has a 3xx status code
func (o *CreateArtifactCINotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create artifact c i not found response has a 4xx status code
func (o *CreateArtifactCINotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create artifact c i not found response has a 5xx status code
func (o *CreateArtifactCINotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create artifact c i not found response a status code equal to that given
func (o *CreateArtifactCINotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create artifact c i not found response
func (o *CreateArtifactCINotFound) Code() int {
	return 404
}

func (o *CreateArtifactCINotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCINotFound %s", 404, payload)
}

func (o *CreateArtifactCINotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCINotFound %s", 404, payload)
}

func (o *CreateArtifactCINotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateArtifactCINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateArtifactCIMethodNotAllowed creates a CreateArtifactCIMethodNotAllowed with default headers values
func NewCreateArtifactCIMethodNotAllowed() *CreateArtifactCIMethodNotAllowed {
	return &CreateArtifactCIMethodNotAllowed{}
}

/*
CreateArtifactCIMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateArtifactCIMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create artifact c i method not allowed response has a 2xx status code
func (o *CreateArtifactCIMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create artifact c i method not allowed response has a 3xx status code
func (o *CreateArtifactCIMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create artifact c i method not allowed response has a 4xx status code
func (o *CreateArtifactCIMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create artifact c i method not allowed response has a 5xx status code
func (o *CreateArtifactCIMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create artifact c i method not allowed response a status code equal to that given
func (o *CreateArtifactCIMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create artifact c i method not allowed response
func (o *CreateArtifactCIMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateArtifactCIMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *CreateArtifactCIMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *CreateArtifactCIMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateArtifactCIMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateArtifactCIInternalServerError creates a CreateArtifactCIInternalServerError with default headers values
func NewCreateArtifactCIInternalServerError() *CreateArtifactCIInternalServerError {
	return &CreateArtifactCIInternalServerError{}
}

/*
CreateArtifactCIInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateArtifactCIInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create artifact c i internal server error response has a 2xx status code
func (o *CreateArtifactCIInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create artifact c i internal server error response has a 3xx status code
func (o *CreateArtifactCIInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create artifact c i internal server error response has a 4xx status code
func (o *CreateArtifactCIInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create artifact c i internal server error response has a 5xx status code
func (o *CreateArtifactCIInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create artifact c i internal server error response a status code equal to that given
func (o *CreateArtifactCIInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create artifact c i internal server error response
func (o *CreateArtifactCIInternalServerError) Code() int {
	return 500
}

func (o *CreateArtifactCIInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIInternalServerError %s", 500, payload)
}

func (o *CreateArtifactCIInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts-ci][%d] createArtifactCIInternalServerError %s", 500, payload)
}

func (o *CreateArtifactCIInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateArtifactCIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
