// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewUpdateArtifactCIUsingPUTParams creates a new UpdateArtifactCIUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateArtifactCIUsingPUTParams() *UpdateArtifactCIUsingPUTParams {
	return &UpdateArtifactCIUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateArtifactCIUsingPUTParamsWithTimeout creates a new UpdateArtifactCIUsingPUTParams object
// with the ability to set a timeout on a request.
func NewUpdateArtifactCIUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateArtifactCIUsingPUTParams {
	return &UpdateArtifactCIUsingPUTParams{
		timeout: timeout,
	}
}

// NewUpdateArtifactCIUsingPUTParamsWithContext creates a new UpdateArtifactCIUsingPUTParams object
// with the ability to set a context for a request.
func NewUpdateArtifactCIUsingPUTParamsWithContext(ctx context.Context) *UpdateArtifactCIUsingPUTParams {
	return &UpdateArtifactCIUsingPUTParams{
		Context: ctx,
	}
}

// NewUpdateArtifactCIUsingPUTParamsWithHTTPClient creates a new UpdateArtifactCIUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateArtifactCIUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateArtifactCIUsingPUTParams {
	return &UpdateArtifactCIUsingPUTParams{
		HTTPClient: client,
	}
}

/*
UpdateArtifactCIUsingPUTParams contains all the parameters to send to the API endpoint

	for the update artifact c i using p u t operation.

	Typically these are written to a http.Request.
*/
type UpdateArtifactCIUsingPUTParams struct {

	/* ArtifactCI.

	   artifactCI
	*/
	ArtifactCI *models.ArtifactCI

	/* CiID.

	   ciId
	*/
	CiID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update artifact c i using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateArtifactCIUsingPUTParams) WithDefaults() *UpdateArtifactCIUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update artifact c i using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateArtifactCIUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateArtifactCIUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) WithContext(ctx context.Context) *UpdateArtifactCIUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateArtifactCIUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArtifactCI adds the artifactCI to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) WithArtifactCI(artifactCI *models.ArtifactCI) *UpdateArtifactCIUsingPUTParams {
	o.SetArtifactCI(artifactCI)
	return o
}

// SetArtifactCI adds the artifactCI to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) SetArtifactCI(artifactCI *models.ArtifactCI) {
	o.ArtifactCI = artifactCI
}

// WithCiID adds the ciID to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) WithCiID(ciID string) *UpdateArtifactCIUsingPUTParams {
	o.SetCiID(ciID)
	return o
}

// SetCiID adds the ciId to the update artifact c i using p u t params
func (o *UpdateArtifactCIUsingPUTParams) SetCiID(ciID string) {
	o.CiID = ciID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateArtifactCIUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.ArtifactCI != nil {
		if err := r.SetBodyParam(o.ArtifactCI); err != nil {
			return err
		}
	}

	// path param ciId
	if err := r.SetPathParam("ciId", o.CiID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
