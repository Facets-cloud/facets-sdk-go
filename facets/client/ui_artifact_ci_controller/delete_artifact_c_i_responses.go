// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteArtifactCIReader is a Reader for the DeleteArtifactCI structure.
type DeleteArtifactCIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteArtifactCIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteArtifactCIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteArtifactCIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteArtifactCINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteArtifactCIMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteArtifactCIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/artifacts-ci/{ciId}] deleteArtifactCI", response, response.Code())
	}
}

// NewDeleteArtifactCIOK creates a DeleteArtifactCIOK with default headers values
func NewDeleteArtifactCIOK() *DeleteArtifactCIOK {
	return &DeleteArtifactCIOK{}
}

/*
DeleteArtifactCIOK describes a response with status code 200, with default header values.

OK
*/
type DeleteArtifactCIOK struct {
	Payload *models.ArtifactCI
}

// IsSuccess returns true when this delete artifact c i o k response has a 2xx status code
func (o *DeleteArtifactCIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete artifact c i o k response has a 3xx status code
func (o *DeleteArtifactCIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact c i o k response has a 4xx status code
func (o *DeleteArtifactCIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifact c i o k response has a 5xx status code
func (o *DeleteArtifactCIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact c i o k response a status code equal to that given
func (o *DeleteArtifactCIOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete artifact c i o k response
func (o *DeleteArtifactCIOK) Code() int {
	return 200
}

func (o *DeleteArtifactCIOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIOK %s", 200, payload)
}

func (o *DeleteArtifactCIOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIOK %s", 200, payload)
}

func (o *DeleteArtifactCIOK) GetPayload() *models.ArtifactCI {
	return o.Payload
}

func (o *DeleteArtifactCIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactCI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactCIBadRequest creates a DeleteArtifactCIBadRequest with default headers values
func NewDeleteArtifactCIBadRequest() *DeleteArtifactCIBadRequest {
	return &DeleteArtifactCIBadRequest{}
}

/*
DeleteArtifactCIBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteArtifactCIBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact c i bad request response has a 2xx status code
func (o *DeleteArtifactCIBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact c i bad request response has a 3xx status code
func (o *DeleteArtifactCIBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact c i bad request response has a 4xx status code
func (o *DeleteArtifactCIBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact c i bad request response has a 5xx status code
func (o *DeleteArtifactCIBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact c i bad request response a status code equal to that given
func (o *DeleteArtifactCIBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete artifact c i bad request response
func (o *DeleteArtifactCIBadRequest) Code() int {
	return 400
}

func (o *DeleteArtifactCIBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIBadRequest %s", 400, payload)
}

func (o *DeleteArtifactCIBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIBadRequest %s", 400, payload)
}

func (o *DeleteArtifactCIBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactCIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactCINotFound creates a DeleteArtifactCINotFound with default headers values
func NewDeleteArtifactCINotFound() *DeleteArtifactCINotFound {
	return &DeleteArtifactCINotFound{}
}

/*
DeleteArtifactCINotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteArtifactCINotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact c i not found response has a 2xx status code
func (o *DeleteArtifactCINotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact c i not found response has a 3xx status code
func (o *DeleteArtifactCINotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact c i not found response has a 4xx status code
func (o *DeleteArtifactCINotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact c i not found response has a 5xx status code
func (o *DeleteArtifactCINotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact c i not found response a status code equal to that given
func (o *DeleteArtifactCINotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete artifact c i not found response
func (o *DeleteArtifactCINotFound) Code() int {
	return 404
}

func (o *DeleteArtifactCINotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCINotFound %s", 404, payload)
}

func (o *DeleteArtifactCINotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCINotFound %s", 404, payload)
}

func (o *DeleteArtifactCINotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactCINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactCIMethodNotAllowed creates a DeleteArtifactCIMethodNotAllowed with default headers values
func NewDeleteArtifactCIMethodNotAllowed() *DeleteArtifactCIMethodNotAllowed {
	return &DeleteArtifactCIMethodNotAllowed{}
}

/*
DeleteArtifactCIMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteArtifactCIMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact c i method not allowed response has a 2xx status code
func (o *DeleteArtifactCIMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact c i method not allowed response has a 3xx status code
func (o *DeleteArtifactCIMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact c i method not allowed response has a 4xx status code
func (o *DeleteArtifactCIMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact c i method not allowed response has a 5xx status code
func (o *DeleteArtifactCIMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact c i method not allowed response a status code equal to that given
func (o *DeleteArtifactCIMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete artifact c i method not allowed response
func (o *DeleteArtifactCIMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteArtifactCIMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *DeleteArtifactCIMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *DeleteArtifactCIMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactCIMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactCIInternalServerError creates a DeleteArtifactCIInternalServerError with default headers values
func NewDeleteArtifactCIInternalServerError() *DeleteArtifactCIInternalServerError {
	return &DeleteArtifactCIInternalServerError{}
}

/*
DeleteArtifactCIInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteArtifactCIInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact c i internal server error response has a 2xx status code
func (o *DeleteArtifactCIInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact c i internal server error response has a 3xx status code
func (o *DeleteArtifactCIInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact c i internal server error response has a 4xx status code
func (o *DeleteArtifactCIInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifact c i internal server error response has a 5xx status code
func (o *DeleteArtifactCIInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete artifact c i internal server error response a status code equal to that given
func (o *DeleteArtifactCIInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete artifact c i internal server error response
func (o *DeleteArtifactCIInternalServerError) Code() int {
	return 500
}

func (o *DeleteArtifactCIInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIInternalServerError %s", 500, payload)
}

func (o *DeleteArtifactCIInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifacts-ci/{ciId}][%d] deleteArtifactCIInternalServerError %s", 500, payload)
}

func (o *DeleteArtifactCIInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactCIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
