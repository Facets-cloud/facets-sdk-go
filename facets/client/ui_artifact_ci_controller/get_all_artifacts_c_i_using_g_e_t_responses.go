// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllArtifactsCIUsingGETReader is a Reader for the GetAllArtifactsCIUsingGET structure.
type GetAllArtifactsCIUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllArtifactsCIUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllArtifactsCIUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllArtifactsCIUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllArtifactsCIUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllArtifactsCIUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts-ci] getAllArtifactsCIUsingGET", response, response.Code())
	}
}

// NewGetAllArtifactsCIUsingGETOK creates a GetAllArtifactsCIUsingGETOK with default headers values
func NewGetAllArtifactsCIUsingGETOK() *GetAllArtifactsCIUsingGETOK {
	return &GetAllArtifactsCIUsingGETOK{}
}

/*
GetAllArtifactsCIUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllArtifactsCIUsingGETOK struct {
	Payload []*models.ArtifactCI
}

// IsSuccess returns true when this get all artifacts c i using g e t o k response has a 2xx status code
func (o *GetAllArtifactsCIUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all artifacts c i using g e t o k response has a 3xx status code
func (o *GetAllArtifactsCIUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifacts c i using g e t o k response has a 4xx status code
func (o *GetAllArtifactsCIUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all artifacts c i using g e t o k response has a 5xx status code
func (o *GetAllArtifactsCIUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifacts c i using g e t o k response a status code equal to that given
func (o *GetAllArtifactsCIUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all artifacts c i using g e t o k response
func (o *GetAllArtifactsCIUsingGETOK) Code() int {
	return 200
}

func (o *GetAllArtifactsCIUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETOK %s", 200, payload)
}

func (o *GetAllArtifactsCIUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETOK %s", 200, payload)
}

func (o *GetAllArtifactsCIUsingGETOK) GetPayload() []*models.ArtifactCI {
	return o.Payload
}

func (o *GetAllArtifactsCIUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllArtifactsCIUsingGETUnauthorized creates a GetAllArtifactsCIUsingGETUnauthorized with default headers values
func NewGetAllArtifactsCIUsingGETUnauthorized() *GetAllArtifactsCIUsingGETUnauthorized {
	return &GetAllArtifactsCIUsingGETUnauthorized{}
}

/*
GetAllArtifactsCIUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllArtifactsCIUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all artifacts c i using g e t unauthorized response has a 2xx status code
func (o *GetAllArtifactsCIUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifacts c i using g e t unauthorized response has a 3xx status code
func (o *GetAllArtifactsCIUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifacts c i using g e t unauthorized response has a 4xx status code
func (o *GetAllArtifactsCIUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifacts c i using g e t unauthorized response has a 5xx status code
func (o *GetAllArtifactsCIUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifacts c i using g e t unauthorized response a status code equal to that given
func (o *GetAllArtifactsCIUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all artifacts c i using g e t unauthorized response
func (o *GetAllArtifactsCIUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllArtifactsCIUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETUnauthorized", 401)
}

func (o *GetAllArtifactsCIUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETUnauthorized", 401)
}

func (o *GetAllArtifactsCIUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllArtifactsCIUsingGETForbidden creates a GetAllArtifactsCIUsingGETForbidden with default headers values
func NewGetAllArtifactsCIUsingGETForbidden() *GetAllArtifactsCIUsingGETForbidden {
	return &GetAllArtifactsCIUsingGETForbidden{}
}

/*
GetAllArtifactsCIUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllArtifactsCIUsingGETForbidden struct {
}

// IsSuccess returns true when this get all artifacts c i using g e t forbidden response has a 2xx status code
func (o *GetAllArtifactsCIUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifacts c i using g e t forbidden response has a 3xx status code
func (o *GetAllArtifactsCIUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifacts c i using g e t forbidden response has a 4xx status code
func (o *GetAllArtifactsCIUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifacts c i using g e t forbidden response has a 5xx status code
func (o *GetAllArtifactsCIUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifacts c i using g e t forbidden response a status code equal to that given
func (o *GetAllArtifactsCIUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all artifacts c i using g e t forbidden response
func (o *GetAllArtifactsCIUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllArtifactsCIUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETForbidden", 403)
}

func (o *GetAllArtifactsCIUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETForbidden", 403)
}

func (o *GetAllArtifactsCIUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllArtifactsCIUsingGETNotFound creates a GetAllArtifactsCIUsingGETNotFound with default headers values
func NewGetAllArtifactsCIUsingGETNotFound() *GetAllArtifactsCIUsingGETNotFound {
	return &GetAllArtifactsCIUsingGETNotFound{}
}

/*
GetAllArtifactsCIUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllArtifactsCIUsingGETNotFound struct {
}

// IsSuccess returns true when this get all artifacts c i using g e t not found response has a 2xx status code
func (o *GetAllArtifactsCIUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifacts c i using g e t not found response has a 3xx status code
func (o *GetAllArtifactsCIUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifacts c i using g e t not found response has a 4xx status code
func (o *GetAllArtifactsCIUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifacts c i using g e t not found response has a 5xx status code
func (o *GetAllArtifactsCIUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifacts c i using g e t not found response a status code equal to that given
func (o *GetAllArtifactsCIUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all artifacts c i using g e t not found response
func (o *GetAllArtifactsCIUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllArtifactsCIUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETNotFound", 404)
}

func (o *GetAllArtifactsCIUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci][%d] getAllArtifactsCIUsingGETNotFound", 404)
}

func (o *GetAllArtifactsCIUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
