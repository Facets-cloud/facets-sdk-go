// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateArtifactCIReader is a Reader for the UpdateArtifactCI structure.
type UpdateArtifactCIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateArtifactCIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateArtifactCIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateArtifactCIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateArtifactCINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateArtifactCIMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateArtifactCIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/artifacts-ci/{ciId}] updateArtifactCI", response, response.Code())
	}
}

// NewUpdateArtifactCIOK creates a UpdateArtifactCIOK with default headers values
func NewUpdateArtifactCIOK() *UpdateArtifactCIOK {
	return &UpdateArtifactCIOK{}
}

/*
UpdateArtifactCIOK describes a response with status code 200, with default header values.

OK
*/
type UpdateArtifactCIOK struct {
	Payload *models.ArtifactCI
}

// IsSuccess returns true when this update artifact c i o k response has a 2xx status code
func (o *UpdateArtifactCIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update artifact c i o k response has a 3xx status code
func (o *UpdateArtifactCIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact c i o k response has a 4xx status code
func (o *UpdateArtifactCIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update artifact c i o k response has a 5xx status code
func (o *UpdateArtifactCIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact c i o k response a status code equal to that given
func (o *UpdateArtifactCIOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update artifact c i o k response
func (o *UpdateArtifactCIOK) Code() int {
	return 200
}

func (o *UpdateArtifactCIOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIOK %s", 200, payload)
}

func (o *UpdateArtifactCIOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIOK %s", 200, payload)
}

func (o *UpdateArtifactCIOK) GetPayload() *models.ArtifactCI {
	return o.Payload
}

func (o *UpdateArtifactCIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactCI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateArtifactCIBadRequest creates a UpdateArtifactCIBadRequest with default headers values
func NewUpdateArtifactCIBadRequest() *UpdateArtifactCIBadRequest {
	return &UpdateArtifactCIBadRequest{}
}

/*
UpdateArtifactCIBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateArtifactCIBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update artifact c i bad request response has a 2xx status code
func (o *UpdateArtifactCIBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update artifact c i bad request response has a 3xx status code
func (o *UpdateArtifactCIBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact c i bad request response has a 4xx status code
func (o *UpdateArtifactCIBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update artifact c i bad request response has a 5xx status code
func (o *UpdateArtifactCIBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact c i bad request response a status code equal to that given
func (o *UpdateArtifactCIBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update artifact c i bad request response
func (o *UpdateArtifactCIBadRequest) Code() int {
	return 400
}

func (o *UpdateArtifactCIBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIBadRequest %s", 400, payload)
}

func (o *UpdateArtifactCIBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIBadRequest %s", 400, payload)
}

func (o *UpdateArtifactCIBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateArtifactCIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateArtifactCINotFound creates a UpdateArtifactCINotFound with default headers values
func NewUpdateArtifactCINotFound() *UpdateArtifactCINotFound {
	return &UpdateArtifactCINotFound{}
}

/*
UpdateArtifactCINotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateArtifactCINotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update artifact c i not found response has a 2xx status code
func (o *UpdateArtifactCINotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update artifact c i not found response has a 3xx status code
func (o *UpdateArtifactCINotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact c i not found response has a 4xx status code
func (o *UpdateArtifactCINotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update artifact c i not found response has a 5xx status code
func (o *UpdateArtifactCINotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact c i not found response a status code equal to that given
func (o *UpdateArtifactCINotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update artifact c i not found response
func (o *UpdateArtifactCINotFound) Code() int {
	return 404
}

func (o *UpdateArtifactCINotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCINotFound %s", 404, payload)
}

func (o *UpdateArtifactCINotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCINotFound %s", 404, payload)
}

func (o *UpdateArtifactCINotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateArtifactCINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateArtifactCIMethodNotAllowed creates a UpdateArtifactCIMethodNotAllowed with default headers values
func NewUpdateArtifactCIMethodNotAllowed() *UpdateArtifactCIMethodNotAllowed {
	return &UpdateArtifactCIMethodNotAllowed{}
}

/*
UpdateArtifactCIMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateArtifactCIMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update artifact c i method not allowed response has a 2xx status code
func (o *UpdateArtifactCIMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update artifact c i method not allowed response has a 3xx status code
func (o *UpdateArtifactCIMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact c i method not allowed response has a 4xx status code
func (o *UpdateArtifactCIMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update artifact c i method not allowed response has a 5xx status code
func (o *UpdateArtifactCIMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact c i method not allowed response a status code equal to that given
func (o *UpdateArtifactCIMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update artifact c i method not allowed response
func (o *UpdateArtifactCIMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateArtifactCIMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *UpdateArtifactCIMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *UpdateArtifactCIMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateArtifactCIMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateArtifactCIInternalServerError creates a UpdateArtifactCIInternalServerError with default headers values
func NewUpdateArtifactCIInternalServerError() *UpdateArtifactCIInternalServerError {
	return &UpdateArtifactCIInternalServerError{}
}

/*
UpdateArtifactCIInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateArtifactCIInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update artifact c i internal server error response has a 2xx status code
func (o *UpdateArtifactCIInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update artifact c i internal server error response has a 3xx status code
func (o *UpdateArtifactCIInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact c i internal server error response has a 4xx status code
func (o *UpdateArtifactCIInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update artifact c i internal server error response has a 5xx status code
func (o *UpdateArtifactCIInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update artifact c i internal server error response a status code equal to that given
func (o *UpdateArtifactCIInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update artifact c i internal server error response
func (o *UpdateArtifactCIInternalServerError) Code() int {
	return 500
}

func (o *UpdateArtifactCIInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIInternalServerError %s", 500, payload)
}

func (o *UpdateArtifactCIInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts-ci/{ciId}][%d] updateArtifactCIInternalServerError %s", 500, payload)
}

func (o *UpdateArtifactCIInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateArtifactCIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
