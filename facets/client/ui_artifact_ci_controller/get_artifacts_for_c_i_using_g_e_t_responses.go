// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactsForCIUsingGETReader is a Reader for the GetArtifactsForCIUsingGET structure.
type GetArtifactsForCIUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactsForCIUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactsForCIUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetArtifactsForCIUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactsForCIUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactsForCIUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts] getArtifactsForCIUsingGET", response, response.Code())
	}
}

// NewGetArtifactsForCIUsingGETOK creates a GetArtifactsForCIUsingGETOK with default headers values
func NewGetArtifactsForCIUsingGETOK() *GetArtifactsForCIUsingGETOK {
	return &GetArtifactsForCIUsingGETOK{}
}

/*
GetArtifactsForCIUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactsForCIUsingGETOK struct {
	Payload []*models.CiArtifactResponse
}

// IsSuccess returns true when this get artifacts for c i using g e t o k response has a 2xx status code
func (o *GetArtifactsForCIUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifacts for c i using g e t o k response has a 3xx status code
func (o *GetArtifactsForCIUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i using g e t o k response has a 4xx status code
func (o *GetArtifactsForCIUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts for c i using g e t o k response has a 5xx status code
func (o *GetArtifactsForCIUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i using g e t o k response a status code equal to that given
func (o *GetArtifactsForCIUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifacts for c i using g e t o k response
func (o *GetArtifactsForCIUsingGETOK) Code() int {
	return 200
}

func (o *GetArtifactsForCIUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETOK %s", 200, payload)
}

func (o *GetArtifactsForCIUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETOK %s", 200, payload)
}

func (o *GetArtifactsForCIUsingGETOK) GetPayload() []*models.CiArtifactResponse {
	return o.Payload
}

func (o *GetArtifactsForCIUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsForCIUsingGETUnauthorized creates a GetArtifactsForCIUsingGETUnauthorized with default headers values
func NewGetArtifactsForCIUsingGETUnauthorized() *GetArtifactsForCIUsingGETUnauthorized {
	return &GetArtifactsForCIUsingGETUnauthorized{}
}

/*
GetArtifactsForCIUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArtifactsForCIUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get artifacts for c i using g e t unauthorized response has a 2xx status code
func (o *GetArtifactsForCIUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts for c i using g e t unauthorized response has a 3xx status code
func (o *GetArtifactsForCIUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i using g e t unauthorized response has a 4xx status code
func (o *GetArtifactsForCIUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts for c i using g e t unauthorized response has a 5xx status code
func (o *GetArtifactsForCIUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i using g e t unauthorized response a status code equal to that given
func (o *GetArtifactsForCIUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get artifacts for c i using g e t unauthorized response
func (o *GetArtifactsForCIUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetArtifactsForCIUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETUnauthorized", 401)
}

func (o *GetArtifactsForCIUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETUnauthorized", 401)
}

func (o *GetArtifactsForCIUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactsForCIUsingGETForbidden creates a GetArtifactsForCIUsingGETForbidden with default headers values
func NewGetArtifactsForCIUsingGETForbidden() *GetArtifactsForCIUsingGETForbidden {
	return &GetArtifactsForCIUsingGETForbidden{}
}

/*
GetArtifactsForCIUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetArtifactsForCIUsingGETForbidden struct {
}

// IsSuccess returns true when this get artifacts for c i using g e t forbidden response has a 2xx status code
func (o *GetArtifactsForCIUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts for c i using g e t forbidden response has a 3xx status code
func (o *GetArtifactsForCIUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i using g e t forbidden response has a 4xx status code
func (o *GetArtifactsForCIUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts for c i using g e t forbidden response has a 5xx status code
func (o *GetArtifactsForCIUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i using g e t forbidden response a status code equal to that given
func (o *GetArtifactsForCIUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get artifacts for c i using g e t forbidden response
func (o *GetArtifactsForCIUsingGETForbidden) Code() int {
	return 403
}

func (o *GetArtifactsForCIUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETForbidden", 403)
}

func (o *GetArtifactsForCIUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETForbidden", 403)
}

func (o *GetArtifactsForCIUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactsForCIUsingGETNotFound creates a GetArtifactsForCIUsingGETNotFound with default headers values
func NewGetArtifactsForCIUsingGETNotFound() *GetArtifactsForCIUsingGETNotFound {
	return &GetArtifactsForCIUsingGETNotFound{}
}

/*
GetArtifactsForCIUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactsForCIUsingGETNotFound struct {
}

// IsSuccess returns true when this get artifacts for c i using g e t not found response has a 2xx status code
func (o *GetArtifactsForCIUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts for c i using g e t not found response has a 3xx status code
func (o *GetArtifactsForCIUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts for c i using g e t not found response has a 4xx status code
func (o *GetArtifactsForCIUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts for c i using g e t not found response has a 5xx status code
func (o *GetArtifactsForCIUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts for c i using g e t not found response a status code equal to that given
func (o *GetArtifactsForCIUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifacts for c i using g e t not found response
func (o *GetArtifactsForCIUsingGETNotFound) Code() int {
	return 404
}

func (o *GetArtifactsForCIUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETNotFound", 404)
}

func (o *GetArtifactsForCIUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciName}/artifacts][%d] getArtifactsForCIUsingGETNotFound", 404)
}

func (o *GetArtifactsForCIUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
