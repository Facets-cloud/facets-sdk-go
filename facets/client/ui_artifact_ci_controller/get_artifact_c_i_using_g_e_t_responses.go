// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactCIUsingGETReader is a Reader for the GetArtifactCIUsingGET structure.
type GetArtifactCIUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactCIUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactCIUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetArtifactCIUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactCIUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactCIUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts-ci/{ciId}] getArtifactCIUsingGET", response, response.Code())
	}
}

// NewGetArtifactCIUsingGETOK creates a GetArtifactCIUsingGETOK with default headers values
func NewGetArtifactCIUsingGETOK() *GetArtifactCIUsingGETOK {
	return &GetArtifactCIUsingGETOK{}
}

/*
GetArtifactCIUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactCIUsingGETOK struct {
	Payload *models.ArtifactCI
}

// IsSuccess returns true when this get artifact c i using g e t o k response has a 2xx status code
func (o *GetArtifactCIUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact c i using g e t o k response has a 3xx status code
func (o *GetArtifactCIUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i using g e t o k response has a 4xx status code
func (o *GetArtifactCIUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact c i using g e t o k response has a 5xx status code
func (o *GetArtifactCIUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i using g e t o k response a status code equal to that given
func (o *GetArtifactCIUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifact c i using g e t o k response
func (o *GetArtifactCIUsingGETOK) Code() int {
	return 200
}

func (o *GetArtifactCIUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETOK %s", 200, payload)
}

func (o *GetArtifactCIUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETOK %s", 200, payload)
}

func (o *GetArtifactCIUsingGETOK) GetPayload() *models.ArtifactCI {
	return o.Payload
}

func (o *GetArtifactCIUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactCI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCIUsingGETUnauthorized creates a GetArtifactCIUsingGETUnauthorized with default headers values
func NewGetArtifactCIUsingGETUnauthorized() *GetArtifactCIUsingGETUnauthorized {
	return &GetArtifactCIUsingGETUnauthorized{}
}

/*
GetArtifactCIUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArtifactCIUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get artifact c i using g e t unauthorized response has a 2xx status code
func (o *GetArtifactCIUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact c i using g e t unauthorized response has a 3xx status code
func (o *GetArtifactCIUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i using g e t unauthorized response has a 4xx status code
func (o *GetArtifactCIUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact c i using g e t unauthorized response has a 5xx status code
func (o *GetArtifactCIUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i using g e t unauthorized response a status code equal to that given
func (o *GetArtifactCIUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get artifact c i using g e t unauthorized response
func (o *GetArtifactCIUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetArtifactCIUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETUnauthorized", 401)
}

func (o *GetArtifactCIUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETUnauthorized", 401)
}

func (o *GetArtifactCIUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactCIUsingGETForbidden creates a GetArtifactCIUsingGETForbidden with default headers values
func NewGetArtifactCIUsingGETForbidden() *GetArtifactCIUsingGETForbidden {
	return &GetArtifactCIUsingGETForbidden{}
}

/*
GetArtifactCIUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetArtifactCIUsingGETForbidden struct {
}

// IsSuccess returns true when this get artifact c i using g e t forbidden response has a 2xx status code
func (o *GetArtifactCIUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact c i using g e t forbidden response has a 3xx status code
func (o *GetArtifactCIUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i using g e t forbidden response has a 4xx status code
func (o *GetArtifactCIUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact c i using g e t forbidden response has a 5xx status code
func (o *GetArtifactCIUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i using g e t forbidden response a status code equal to that given
func (o *GetArtifactCIUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get artifact c i using g e t forbidden response
func (o *GetArtifactCIUsingGETForbidden) Code() int {
	return 403
}

func (o *GetArtifactCIUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETForbidden", 403)
}

func (o *GetArtifactCIUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETForbidden", 403)
}

func (o *GetArtifactCIUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactCIUsingGETNotFound creates a GetArtifactCIUsingGETNotFound with default headers values
func NewGetArtifactCIUsingGETNotFound() *GetArtifactCIUsingGETNotFound {
	return &GetArtifactCIUsingGETNotFound{}
}

/*
GetArtifactCIUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactCIUsingGETNotFound struct {
}

// IsSuccess returns true when this get artifact c i using g e t not found response has a 2xx status code
func (o *GetArtifactCIUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact c i using g e t not found response has a 3xx status code
func (o *GetArtifactCIUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i using g e t not found response has a 4xx status code
func (o *GetArtifactCIUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact c i using g e t not found response has a 5xx status code
func (o *GetArtifactCIUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i using g e t not found response a status code equal to that given
func (o *GetArtifactCIUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifact c i using g e t not found response
func (o *GetArtifactCIUsingGETNotFound) Code() int {
	return 404
}

func (o *GetArtifactCIUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETNotFound", 404)
}

func (o *GetArtifactCIUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIUsingGETNotFound", 404)
}

func (o *GetArtifactCIUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
