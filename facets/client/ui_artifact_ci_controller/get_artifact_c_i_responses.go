// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_ci_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactCIReader is a Reader for the GetArtifactCI structure.
type GetArtifactCIReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactCIReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactCIOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactCIBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactCINotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetArtifactCIMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactCIInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts-ci/{ciId}] getArtifactCI", response, response.Code())
	}
}

// NewGetArtifactCIOK creates a GetArtifactCIOK with default headers values
func NewGetArtifactCIOK() *GetArtifactCIOK {
	return &GetArtifactCIOK{}
}

/*
GetArtifactCIOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactCIOK struct {
	Payload *models.ArtifactCI
}

// IsSuccess returns true when this get artifact c i o k response has a 2xx status code
func (o *GetArtifactCIOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact c i o k response has a 3xx status code
func (o *GetArtifactCIOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i o k response has a 4xx status code
func (o *GetArtifactCIOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact c i o k response has a 5xx status code
func (o *GetArtifactCIOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i o k response a status code equal to that given
func (o *GetArtifactCIOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifact c i o k response
func (o *GetArtifactCIOK) Code() int {
	return 200
}

func (o *GetArtifactCIOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIOK %s", 200, payload)
}

func (o *GetArtifactCIOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIOK %s", 200, payload)
}

func (o *GetArtifactCIOK) GetPayload() *models.ArtifactCI {
	return o.Payload
}

func (o *GetArtifactCIOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactCI)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCIBadRequest creates a GetArtifactCIBadRequest with default headers values
func NewGetArtifactCIBadRequest() *GetArtifactCIBadRequest {
	return &GetArtifactCIBadRequest{}
}

/*
GetArtifactCIBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactCIBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact c i bad request response has a 2xx status code
func (o *GetArtifactCIBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact c i bad request response has a 3xx status code
func (o *GetArtifactCIBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i bad request response has a 4xx status code
func (o *GetArtifactCIBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact c i bad request response has a 5xx status code
func (o *GetArtifactCIBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i bad request response a status code equal to that given
func (o *GetArtifactCIBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get artifact c i bad request response
func (o *GetArtifactCIBadRequest) Code() int {
	return 400
}

func (o *GetArtifactCIBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIBadRequest %s", 400, payload)
}

func (o *GetArtifactCIBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIBadRequest %s", 400, payload)
}

func (o *GetArtifactCIBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCIBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCINotFound creates a GetArtifactCINotFound with default headers values
func NewGetArtifactCINotFound() *GetArtifactCINotFound {
	return &GetArtifactCINotFound{}
}

/*
GetArtifactCINotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactCINotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact c i not found response has a 2xx status code
func (o *GetArtifactCINotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact c i not found response has a 3xx status code
func (o *GetArtifactCINotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i not found response has a 4xx status code
func (o *GetArtifactCINotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact c i not found response has a 5xx status code
func (o *GetArtifactCINotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i not found response a status code equal to that given
func (o *GetArtifactCINotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifact c i not found response
func (o *GetArtifactCINotFound) Code() int {
	return 404
}

func (o *GetArtifactCINotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCINotFound %s", 404, payload)
}

func (o *GetArtifactCINotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCINotFound %s", 404, payload)
}

func (o *GetArtifactCINotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCINotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCIMethodNotAllowed creates a GetArtifactCIMethodNotAllowed with default headers values
func NewGetArtifactCIMethodNotAllowed() *GetArtifactCIMethodNotAllowed {
	return &GetArtifactCIMethodNotAllowed{}
}

/*
GetArtifactCIMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetArtifactCIMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact c i method not allowed response has a 2xx status code
func (o *GetArtifactCIMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact c i method not allowed response has a 3xx status code
func (o *GetArtifactCIMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i method not allowed response has a 4xx status code
func (o *GetArtifactCIMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact c i method not allowed response has a 5xx status code
func (o *GetArtifactCIMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact c i method not allowed response a status code equal to that given
func (o *GetArtifactCIMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get artifact c i method not allowed response
func (o *GetArtifactCIMethodNotAllowed) Code() int {
	return 405
}

func (o *GetArtifactCIMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactCIMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactCIMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCIMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactCIInternalServerError creates a GetArtifactCIInternalServerError with default headers values
func NewGetArtifactCIInternalServerError() *GetArtifactCIInternalServerError {
	return &GetArtifactCIInternalServerError{}
}

/*
GetArtifactCIInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArtifactCIInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact c i internal server error response has a 2xx status code
func (o *GetArtifactCIInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact c i internal server error response has a 3xx status code
func (o *GetArtifactCIInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact c i internal server error response has a 4xx status code
func (o *GetArtifactCIInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact c i internal server error response has a 5xx status code
func (o *GetArtifactCIInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifact c i internal server error response a status code equal to that given
func (o *GetArtifactCIInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get artifact c i internal server error response
func (o *GetArtifactCIInternalServerError) Code() int {
	return 500
}

func (o *GetArtifactCIInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIInternalServerError %s", 500, payload)
}

func (o *GetArtifactCIInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts-ci/{ciId}][%d] getArtifactCIInternalServerError %s", 500, payload)
}

func (o *GetArtifactCIInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactCIInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
