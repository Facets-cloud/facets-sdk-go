// Code generated by go-swagger; DO NOT EDIT.

package artifact_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RegisterArtifactUsingPOSTReader is a Reader for the RegisterArtifactUsingPOST structure.
type RegisterArtifactUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterArtifactUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterArtifactUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRegisterArtifactUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRegisterArtifactUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRegisterArtifactUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterArtifactUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc/v1/artifacts/register] registerArtifactUsingPOST", response, response.Code())
	}
}

// NewRegisterArtifactUsingPOSTOK creates a RegisterArtifactUsingPOSTOK with default headers values
func NewRegisterArtifactUsingPOSTOK() *RegisterArtifactUsingPOSTOK {
	return &RegisterArtifactUsingPOSTOK{}
}

/*
RegisterArtifactUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RegisterArtifactUsingPOSTOK struct {
}

// IsSuccess returns true when this register artifact using p o s t o k response has a 2xx status code
func (o *RegisterArtifactUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact using p o s t o k response has a 3xx status code
func (o *RegisterArtifactUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact using p o s t o k response has a 4xx status code
func (o *RegisterArtifactUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact using p o s t o k response has a 5xx status code
func (o *RegisterArtifactUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact using p o s t o k response a status code equal to that given
func (o *RegisterArtifactUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register artifact using p o s t o k response
func (o *RegisterArtifactUsingPOSTOK) Code() int {
	return 200
}

func (o *RegisterArtifactUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTOK", 200)
}

func (o *RegisterArtifactUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTOK", 200)
}

func (o *RegisterArtifactUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactUsingPOSTCreated creates a RegisterArtifactUsingPOSTCreated with default headers values
func NewRegisterArtifactUsingPOSTCreated() *RegisterArtifactUsingPOSTCreated {
	return &RegisterArtifactUsingPOSTCreated{}
}

/*
RegisterArtifactUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RegisterArtifactUsingPOSTCreated struct {
}

// IsSuccess returns true when this register artifact using p o s t created response has a 2xx status code
func (o *RegisterArtifactUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact using p o s t created response has a 3xx status code
func (o *RegisterArtifactUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact using p o s t created response has a 4xx status code
func (o *RegisterArtifactUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact using p o s t created response has a 5xx status code
func (o *RegisterArtifactUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact using p o s t created response a status code equal to that given
func (o *RegisterArtifactUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the register artifact using p o s t created response
func (o *RegisterArtifactUsingPOSTCreated) Code() int {
	return 201
}

func (o *RegisterArtifactUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTCreated", 201)
}

func (o *RegisterArtifactUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTCreated", 201)
}

func (o *RegisterArtifactUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactUsingPOSTUnauthorized creates a RegisterArtifactUsingPOSTUnauthorized with default headers values
func NewRegisterArtifactUsingPOSTUnauthorized() *RegisterArtifactUsingPOSTUnauthorized {
	return &RegisterArtifactUsingPOSTUnauthorized{}
}

/*
RegisterArtifactUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RegisterArtifactUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this register artifact using p o s t unauthorized response has a 2xx status code
func (o *RegisterArtifactUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact using p o s t unauthorized response has a 3xx status code
func (o *RegisterArtifactUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact using p o s t unauthorized response has a 4xx status code
func (o *RegisterArtifactUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact using p o s t unauthorized response has a 5xx status code
func (o *RegisterArtifactUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact using p o s t unauthorized response a status code equal to that given
func (o *RegisterArtifactUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the register artifact using p o s t unauthorized response
func (o *RegisterArtifactUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RegisterArtifactUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTUnauthorized", 401)
}

func (o *RegisterArtifactUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTUnauthorized", 401)
}

func (o *RegisterArtifactUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactUsingPOSTForbidden creates a RegisterArtifactUsingPOSTForbidden with default headers values
func NewRegisterArtifactUsingPOSTForbidden() *RegisterArtifactUsingPOSTForbidden {
	return &RegisterArtifactUsingPOSTForbidden{}
}

/*
RegisterArtifactUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RegisterArtifactUsingPOSTForbidden struct {
}

// IsSuccess returns true when this register artifact using p o s t forbidden response has a 2xx status code
func (o *RegisterArtifactUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact using p o s t forbidden response has a 3xx status code
func (o *RegisterArtifactUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact using p o s t forbidden response has a 4xx status code
func (o *RegisterArtifactUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact using p o s t forbidden response has a 5xx status code
func (o *RegisterArtifactUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact using p o s t forbidden response a status code equal to that given
func (o *RegisterArtifactUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the register artifact using p o s t forbidden response
func (o *RegisterArtifactUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RegisterArtifactUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTForbidden", 403)
}

func (o *RegisterArtifactUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTForbidden", 403)
}

func (o *RegisterArtifactUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactUsingPOSTNotFound creates a RegisterArtifactUsingPOSTNotFound with default headers values
func NewRegisterArtifactUsingPOSTNotFound() *RegisterArtifactUsingPOSTNotFound {
	return &RegisterArtifactUsingPOSTNotFound{}
}

/*
RegisterArtifactUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RegisterArtifactUsingPOSTNotFound struct {
}

// IsSuccess returns true when this register artifact using p o s t not found response has a 2xx status code
func (o *RegisterArtifactUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact using p o s t not found response has a 3xx status code
func (o *RegisterArtifactUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact using p o s t not found response has a 4xx status code
func (o *RegisterArtifactUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact using p o s t not found response has a 5xx status code
func (o *RegisterArtifactUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact using p o s t not found response a status code equal to that given
func (o *RegisterArtifactUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the register artifact using p o s t not found response
func (o *RegisterArtifactUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RegisterArtifactUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTNotFound", 404)
}

func (o *RegisterArtifactUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc/v1/artifacts/register][%d] registerArtifactUsingPOSTNotFound", 404)
}

func (o *RegisterArtifactUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
