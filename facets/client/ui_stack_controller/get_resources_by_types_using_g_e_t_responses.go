// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetResourcesByTypesUsingGETReader is a Reader for the GetResourcesByTypesUsingGET structure.
type GetResourcesByTypesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourcesByTypesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourcesByTypesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourcesByTypesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourcesByTypesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourcesByTypesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}] getResourcesByTypesUsingGET", response, response.Code())
	}
}

// NewGetResourcesByTypesUsingGETOK creates a GetResourcesByTypesUsingGETOK with default headers values
func NewGetResourcesByTypesUsingGETOK() *GetResourcesByTypesUsingGETOK {
	return &GetResourcesByTypesUsingGETOK{}
}

/*
GetResourcesByTypesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourcesByTypesUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get resources by types using g e t o k response has a 2xx status code
func (o *GetResourcesByTypesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resources by types using g e t o k response has a 3xx status code
func (o *GetResourcesByTypesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resources by types using g e t o k response has a 4xx status code
func (o *GetResourcesByTypesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resources by types using g e t o k response has a 5xx status code
func (o *GetResourcesByTypesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resources by types using g e t o k response a status code equal to that given
func (o *GetResourcesByTypesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resources by types using g e t o k response
func (o *GetResourcesByTypesUsingGETOK) Code() int {
	return 200
}

func (o *GetResourcesByTypesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETOK %s", 200, payload)
}

func (o *GetResourcesByTypesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETOK %s", 200, payload)
}

func (o *GetResourcesByTypesUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetResourcesByTypesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourcesByTypesUsingGETUnauthorized creates a GetResourcesByTypesUsingGETUnauthorized with default headers values
func NewGetResourcesByTypesUsingGETUnauthorized() *GetResourcesByTypesUsingGETUnauthorized {
	return &GetResourcesByTypesUsingGETUnauthorized{}
}

/*
GetResourcesByTypesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourcesByTypesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resources by types using g e t unauthorized response has a 2xx status code
func (o *GetResourcesByTypesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resources by types using g e t unauthorized response has a 3xx status code
func (o *GetResourcesByTypesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resources by types using g e t unauthorized response has a 4xx status code
func (o *GetResourcesByTypesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resources by types using g e t unauthorized response has a 5xx status code
func (o *GetResourcesByTypesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resources by types using g e t unauthorized response a status code equal to that given
func (o *GetResourcesByTypesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resources by types using g e t unauthorized response
func (o *GetResourcesByTypesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourcesByTypesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETUnauthorized", 401)
}

func (o *GetResourcesByTypesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETUnauthorized", 401)
}

func (o *GetResourcesByTypesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourcesByTypesUsingGETForbidden creates a GetResourcesByTypesUsingGETForbidden with default headers values
func NewGetResourcesByTypesUsingGETForbidden() *GetResourcesByTypesUsingGETForbidden {
	return &GetResourcesByTypesUsingGETForbidden{}
}

/*
GetResourcesByTypesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourcesByTypesUsingGETForbidden struct {
}

// IsSuccess returns true when this get resources by types using g e t forbidden response has a 2xx status code
func (o *GetResourcesByTypesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resources by types using g e t forbidden response has a 3xx status code
func (o *GetResourcesByTypesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resources by types using g e t forbidden response has a 4xx status code
func (o *GetResourcesByTypesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resources by types using g e t forbidden response has a 5xx status code
func (o *GetResourcesByTypesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resources by types using g e t forbidden response a status code equal to that given
func (o *GetResourcesByTypesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resources by types using g e t forbidden response
func (o *GetResourcesByTypesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourcesByTypesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETForbidden", 403)
}

func (o *GetResourcesByTypesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETForbidden", 403)
}

func (o *GetResourcesByTypesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourcesByTypesUsingGETNotFound creates a GetResourcesByTypesUsingGETNotFound with default headers values
func NewGetResourcesByTypesUsingGETNotFound() *GetResourcesByTypesUsingGETNotFound {
	return &GetResourcesByTypesUsingGETNotFound{}
}

/*
GetResourcesByTypesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourcesByTypesUsingGETNotFound struct {
}

// IsSuccess returns true when this get resources by types using g e t not found response has a 2xx status code
func (o *GetResourcesByTypesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resources by types using g e t not found response has a 3xx status code
func (o *GetResourcesByTypesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resources by types using g e t not found response has a 4xx status code
func (o *GetResourcesByTypesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resources by types using g e t not found response has a 5xx status code
func (o *GetResourcesByTypesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resources by types using g e t not found response a status code equal to that given
func (o *GetResourcesByTypesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resources by types using g e t not found response
func (o *GetResourcesByTypesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourcesByTypesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETNotFound", 404)
}

func (o *GetResourcesByTypesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType/{resourceType}][%d] getResourcesByTypesUsingGETNotFound", 404)
}

func (o *GetResourcesByTypesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
