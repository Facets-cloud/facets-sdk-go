// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SaveAsTemplateReader is a Reader for the SaveAsTemplate structure.
type SaveAsTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveAsTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSaveAsTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSaveAsTemplateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSaveAsTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSaveAsTemplateMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSaveAsTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/{stackName}/template] saveAsTemplate", response, response.Code())
	}
}

// NewSaveAsTemplateOK creates a SaveAsTemplateOK with default headers values
func NewSaveAsTemplateOK() *SaveAsTemplateOK {
	return &SaveAsTemplateOK{}
}

/*
SaveAsTemplateOK describes a response with status code 200, with default header values.

OK
*/
type SaveAsTemplateOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this save as template o k response has a 2xx status code
func (o *SaveAsTemplateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save as template o k response has a 3xx status code
func (o *SaveAsTemplateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template o k response has a 4xx status code
func (o *SaveAsTemplateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this save as template o k response has a 5xx status code
func (o *SaveAsTemplateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template o k response a status code equal to that given
func (o *SaveAsTemplateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the save as template o k response
func (o *SaveAsTemplateOK) Code() int {
	return 200
}

func (o *SaveAsTemplateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateOK %s", 200, payload)
}

func (o *SaveAsTemplateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateOK %s", 200, payload)
}

func (o *SaveAsTemplateOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *SaveAsTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveAsTemplateBadRequest creates a SaveAsTemplateBadRequest with default headers values
func NewSaveAsTemplateBadRequest() *SaveAsTemplateBadRequest {
	return &SaveAsTemplateBadRequest{}
}

/*
SaveAsTemplateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SaveAsTemplateBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save as template bad request response has a 2xx status code
func (o *SaveAsTemplateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save as template bad request response has a 3xx status code
func (o *SaveAsTemplateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template bad request response has a 4xx status code
func (o *SaveAsTemplateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this save as template bad request response has a 5xx status code
func (o *SaveAsTemplateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template bad request response a status code equal to that given
func (o *SaveAsTemplateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the save as template bad request response
func (o *SaveAsTemplateBadRequest) Code() int {
	return 400
}

func (o *SaveAsTemplateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateBadRequest %s", 400, payload)
}

func (o *SaveAsTemplateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateBadRequest %s", 400, payload)
}

func (o *SaveAsTemplateBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SaveAsTemplateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveAsTemplateNotFound creates a SaveAsTemplateNotFound with default headers values
func NewSaveAsTemplateNotFound() *SaveAsTemplateNotFound {
	return &SaveAsTemplateNotFound{}
}

/*
SaveAsTemplateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SaveAsTemplateNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save as template not found response has a 2xx status code
func (o *SaveAsTemplateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save as template not found response has a 3xx status code
func (o *SaveAsTemplateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template not found response has a 4xx status code
func (o *SaveAsTemplateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this save as template not found response has a 5xx status code
func (o *SaveAsTemplateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template not found response a status code equal to that given
func (o *SaveAsTemplateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the save as template not found response
func (o *SaveAsTemplateNotFound) Code() int {
	return 404
}

func (o *SaveAsTemplateNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateNotFound %s", 404, payload)
}

func (o *SaveAsTemplateNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateNotFound %s", 404, payload)
}

func (o *SaveAsTemplateNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SaveAsTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveAsTemplateMethodNotAllowed creates a SaveAsTemplateMethodNotAllowed with default headers values
func NewSaveAsTemplateMethodNotAllowed() *SaveAsTemplateMethodNotAllowed {
	return &SaveAsTemplateMethodNotAllowed{}
}

/*
SaveAsTemplateMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SaveAsTemplateMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save as template method not allowed response has a 2xx status code
func (o *SaveAsTemplateMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save as template method not allowed response has a 3xx status code
func (o *SaveAsTemplateMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template method not allowed response has a 4xx status code
func (o *SaveAsTemplateMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this save as template method not allowed response has a 5xx status code
func (o *SaveAsTemplateMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template method not allowed response a status code equal to that given
func (o *SaveAsTemplateMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the save as template method not allowed response
func (o *SaveAsTemplateMethodNotAllowed) Code() int {
	return 405
}

func (o *SaveAsTemplateMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateMethodNotAllowed %s", 405, payload)
}

func (o *SaveAsTemplateMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateMethodNotAllowed %s", 405, payload)
}

func (o *SaveAsTemplateMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SaveAsTemplateMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveAsTemplateInternalServerError creates a SaveAsTemplateInternalServerError with default headers values
func NewSaveAsTemplateInternalServerError() *SaveAsTemplateInternalServerError {
	return &SaveAsTemplateInternalServerError{}
}

/*
SaveAsTemplateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SaveAsTemplateInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save as template internal server error response has a 2xx status code
func (o *SaveAsTemplateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save as template internal server error response has a 3xx status code
func (o *SaveAsTemplateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template internal server error response has a 4xx status code
func (o *SaveAsTemplateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this save as template internal server error response has a 5xx status code
func (o *SaveAsTemplateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this save as template internal server error response a status code equal to that given
func (o *SaveAsTemplateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the save as template internal server error response
func (o *SaveAsTemplateInternalServerError) Code() int {
	return 500
}

func (o *SaveAsTemplateInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateInternalServerError %s", 500, payload)
}

func (o *SaveAsTemplateInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateInternalServerError %s", 500, payload)
}

func (o *SaveAsTemplateInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SaveAsTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
