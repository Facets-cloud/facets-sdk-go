// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateStackV2Reader is a Reader for the CreateStackV2 structure.
type CreateStackV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStackV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateStackV2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateStackV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateStackV2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateStackV2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateStackV2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/v2] createStackV2", response, response.Code())
	}
}

// NewCreateStackV2OK creates a CreateStackV2OK with default headers values
func NewCreateStackV2OK() *CreateStackV2OK {
	return &CreateStackV2OK{}
}

/*
CreateStackV2OK describes a response with status code 200, with default header values.

OK
*/
type CreateStackV2OK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this create stack v2 o k response has a 2xx status code
func (o *CreateStackV2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create stack v2 o k response has a 3xx status code
func (o *CreateStackV2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 o k response has a 4xx status code
func (o *CreateStackV2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create stack v2 o k response has a 5xx status code
func (o *CreateStackV2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 o k response a status code equal to that given
func (o *CreateStackV2OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create stack v2 o k response
func (o *CreateStackV2OK) Code() int {
	return 200
}

func (o *CreateStackV2OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2OK %s", 200, payload)
}

func (o *CreateStackV2OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2OK %s", 200, payload)
}

func (o *CreateStackV2OK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *CreateStackV2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStackV2BadRequest creates a CreateStackV2BadRequest with default headers values
func NewCreateStackV2BadRequest() *CreateStackV2BadRequest {
	return &CreateStackV2BadRequest{}
}

/*
CreateStackV2BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateStackV2BadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create stack v2 bad request response has a 2xx status code
func (o *CreateStackV2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack v2 bad request response has a 3xx status code
func (o *CreateStackV2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 bad request response has a 4xx status code
func (o *CreateStackV2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack v2 bad request response has a 5xx status code
func (o *CreateStackV2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 bad request response a status code equal to that given
func (o *CreateStackV2BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create stack v2 bad request response
func (o *CreateStackV2BadRequest) Code() int {
	return 400
}

func (o *CreateStackV2BadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2BadRequest %s", 400, payload)
}

func (o *CreateStackV2BadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2BadRequest %s", 400, payload)
}

func (o *CreateStackV2BadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStackV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStackV2NotFound creates a CreateStackV2NotFound with default headers values
func NewCreateStackV2NotFound() *CreateStackV2NotFound {
	return &CreateStackV2NotFound{}
}

/*
CreateStackV2NotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateStackV2NotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create stack v2 not found response has a 2xx status code
func (o *CreateStackV2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack v2 not found response has a 3xx status code
func (o *CreateStackV2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 not found response has a 4xx status code
func (o *CreateStackV2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack v2 not found response has a 5xx status code
func (o *CreateStackV2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 not found response a status code equal to that given
func (o *CreateStackV2NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create stack v2 not found response
func (o *CreateStackV2NotFound) Code() int {
	return 404
}

func (o *CreateStackV2NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2NotFound %s", 404, payload)
}

func (o *CreateStackV2NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2NotFound %s", 404, payload)
}

func (o *CreateStackV2NotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStackV2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStackV2MethodNotAllowed creates a CreateStackV2MethodNotAllowed with default headers values
func NewCreateStackV2MethodNotAllowed() *CreateStackV2MethodNotAllowed {
	return &CreateStackV2MethodNotAllowed{}
}

/*
CreateStackV2MethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateStackV2MethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create stack v2 method not allowed response has a 2xx status code
func (o *CreateStackV2MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack v2 method not allowed response has a 3xx status code
func (o *CreateStackV2MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 method not allowed response has a 4xx status code
func (o *CreateStackV2MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack v2 method not allowed response has a 5xx status code
func (o *CreateStackV2MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 method not allowed response a status code equal to that given
func (o *CreateStackV2MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create stack v2 method not allowed response
func (o *CreateStackV2MethodNotAllowed) Code() int {
	return 405
}

func (o *CreateStackV2MethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2MethodNotAllowed %s", 405, payload)
}

func (o *CreateStackV2MethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2MethodNotAllowed %s", 405, payload)
}

func (o *CreateStackV2MethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStackV2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStackV2InternalServerError creates a CreateStackV2InternalServerError with default headers values
func NewCreateStackV2InternalServerError() *CreateStackV2InternalServerError {
	return &CreateStackV2InternalServerError{}
}

/*
CreateStackV2InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateStackV2InternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create stack v2 internal server error response has a 2xx status code
func (o *CreateStackV2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack v2 internal server error response has a 3xx status code
func (o *CreateStackV2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 internal server error response has a 4xx status code
func (o *CreateStackV2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create stack v2 internal server error response has a 5xx status code
func (o *CreateStackV2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create stack v2 internal server error response a status code equal to that given
func (o *CreateStackV2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create stack v2 internal server error response
func (o *CreateStackV2InternalServerError) Code() int {
	return 500
}

func (o *CreateStackV2InternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2InternalServerError %s", 500, payload)
}

func (o *CreateStackV2InternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2InternalServerError %s", 500, payload)
}

func (o *CreateStackV2InternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStackV2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
