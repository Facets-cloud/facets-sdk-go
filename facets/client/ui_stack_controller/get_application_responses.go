// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetApplicationReader is a Reader for the GetApplication structure.
type GetApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetApplicationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}] getApplication", response, response.Code())
	}
}

// NewGetApplicationOK creates a GetApplicationOK with default headers values
func NewGetApplicationOK() *GetApplicationOK {
	return &GetApplicationOK{}
}

/*
GetApplicationOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationOK struct {
	Payload map[string]interface{}
}

// IsSuccess returns true when this get application o k response has a 2xx status code
func (o *GetApplicationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application o k response has a 3xx status code
func (o *GetApplicationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application o k response has a 4xx status code
func (o *GetApplicationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application o k response has a 5xx status code
func (o *GetApplicationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application o k response a status code equal to that given
func (o *GetApplicationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application o k response
func (o *GetApplicationOK) Code() int {
	return 200
}

func (o *GetApplicationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationOK %s", 200, payload)
}

func (o *GetApplicationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationOK %s", 200, payload)
}

func (o *GetApplicationOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *GetApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationBadRequest creates a GetApplicationBadRequest with default headers values
func NewGetApplicationBadRequest() *GetApplicationBadRequest {
	return &GetApplicationBadRequest{}
}

/*
GetApplicationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetApplicationBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application bad request response has a 2xx status code
func (o *GetApplicationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application bad request response has a 3xx status code
func (o *GetApplicationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application bad request response has a 4xx status code
func (o *GetApplicationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application bad request response has a 5xx status code
func (o *GetApplicationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get application bad request response a status code equal to that given
func (o *GetApplicationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get application bad request response
func (o *GetApplicationBadRequest) Code() int {
	return 400
}

func (o *GetApplicationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationBadRequest %s", 400, payload)
}

func (o *GetApplicationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationBadRequest %s", 400, payload)
}

func (o *GetApplicationBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationNotFound creates a GetApplicationNotFound with default headers values
func NewGetApplicationNotFound() *GetApplicationNotFound {
	return &GetApplicationNotFound{}
}

/*
GetApplicationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application not found response has a 2xx status code
func (o *GetApplicationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application not found response has a 3xx status code
func (o *GetApplicationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application not found response has a 4xx status code
func (o *GetApplicationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application not found response has a 5xx status code
func (o *GetApplicationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application not found response a status code equal to that given
func (o *GetApplicationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application not found response
func (o *GetApplicationNotFound) Code() int {
	return 404
}

func (o *GetApplicationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationNotFound %s", 404, payload)
}

func (o *GetApplicationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationNotFound %s", 404, payload)
}

func (o *GetApplicationNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationMethodNotAllowed creates a GetApplicationMethodNotAllowed with default headers values
func NewGetApplicationMethodNotAllowed() *GetApplicationMethodNotAllowed {
	return &GetApplicationMethodNotAllowed{}
}

/*
GetApplicationMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetApplicationMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application method not allowed response has a 2xx status code
func (o *GetApplicationMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application method not allowed response has a 3xx status code
func (o *GetApplicationMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application method not allowed response has a 4xx status code
func (o *GetApplicationMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application method not allowed response has a 5xx status code
func (o *GetApplicationMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get application method not allowed response a status code equal to that given
func (o *GetApplicationMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get application method not allowed response
func (o *GetApplicationMethodNotAllowed) Code() int {
	return 405
}

func (o *GetApplicationMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationMethodNotAllowed %s", 405, payload)
}

func (o *GetApplicationMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationMethodNotAllowed %s", 405, payload)
}

func (o *GetApplicationMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationInternalServerError creates a GetApplicationInternalServerError with default headers values
func NewGetApplicationInternalServerError() *GetApplicationInternalServerError {
	return &GetApplicationInternalServerError{}
}

/*
GetApplicationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetApplicationInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application internal server error response has a 2xx status code
func (o *GetApplicationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application internal server error response has a 3xx status code
func (o *GetApplicationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application internal server error response has a 4xx status code
func (o *GetApplicationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application internal server error response has a 5xx status code
func (o *GetApplicationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get application internal server error response a status code equal to that given
func (o *GetApplicationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get application internal server error response
func (o *GetApplicationInternalServerError) Code() int {
	return 500
}

func (o *GetApplicationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationInternalServerError %s", 500, payload)
}

func (o *GetApplicationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/{appName}][%d] getApplicationInternalServerError %s", 500, payload)
}

func (o *GetApplicationInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
