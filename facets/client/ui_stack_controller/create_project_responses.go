// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateProjectReader is a Reader for the CreateProject structure.
type CreateProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateProjectMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/project] createProject", response, response.Code())
	}
}

// NewCreateProjectOK creates a CreateProjectOK with default headers values
func NewCreateProjectOK() *CreateProjectOK {
	return &CreateProjectOK{}
}

/*
CreateProjectOK describes a response with status code 200, with default header values.

OK
*/
type CreateProjectOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this create project o k response has a 2xx status code
func (o *CreateProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project o k response has a 3xx status code
func (o *CreateProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project o k response has a 4xx status code
func (o *CreateProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project o k response has a 5xx status code
func (o *CreateProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create project o k response a status code equal to that given
func (o *CreateProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create project o k response
func (o *CreateProjectOK) Code() int {
	return 200
}

func (o *CreateProjectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectOK %s", 200, payload)
}

func (o *CreateProjectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectOK %s", 200, payload)
}

func (o *CreateProjectOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *CreateProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectBadRequest creates a CreateProjectBadRequest with default headers values
func NewCreateProjectBadRequest() *CreateProjectBadRequest {
	return &CreateProjectBadRequest{}
}

/*
CreateProjectBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateProjectBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create project bad request response has a 2xx status code
func (o *CreateProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project bad request response has a 3xx status code
func (o *CreateProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project bad request response has a 4xx status code
func (o *CreateProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project bad request response has a 5xx status code
func (o *CreateProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create project bad request response a status code equal to that given
func (o *CreateProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create project bad request response
func (o *CreateProjectBadRequest) Code() int {
	return 400
}

func (o *CreateProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectBadRequest %s", 400, payload)
}

func (o *CreateProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectBadRequest %s", 400, payload)
}

func (o *CreateProjectBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectNotFound creates a CreateProjectNotFound with default headers values
func NewCreateProjectNotFound() *CreateProjectNotFound {
	return &CreateProjectNotFound{}
}

/*
CreateProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateProjectNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create project not found response has a 2xx status code
func (o *CreateProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project not found response has a 3xx status code
func (o *CreateProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project not found response has a 4xx status code
func (o *CreateProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project not found response has a 5xx status code
func (o *CreateProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create project not found response a status code equal to that given
func (o *CreateProjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create project not found response
func (o *CreateProjectNotFound) Code() int {
	return 404
}

func (o *CreateProjectNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectNotFound %s", 404, payload)
}

func (o *CreateProjectNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectNotFound %s", 404, payload)
}

func (o *CreateProjectNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectMethodNotAllowed creates a CreateProjectMethodNotAllowed with default headers values
func NewCreateProjectMethodNotAllowed() *CreateProjectMethodNotAllowed {
	return &CreateProjectMethodNotAllowed{}
}

/*
CreateProjectMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateProjectMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create project method not allowed response has a 2xx status code
func (o *CreateProjectMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project method not allowed response has a 3xx status code
func (o *CreateProjectMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project method not allowed response has a 4xx status code
func (o *CreateProjectMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project method not allowed response has a 5xx status code
func (o *CreateProjectMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create project method not allowed response a status code equal to that given
func (o *CreateProjectMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create project method not allowed response
func (o *CreateProjectMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateProjectMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectMethodNotAllowed %s", 405, payload)
}

func (o *CreateProjectMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectMethodNotAllowed %s", 405, payload)
}

func (o *CreateProjectMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateProjectMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectInternalServerError creates a CreateProjectInternalServerError with default headers values
func NewCreateProjectInternalServerError() *CreateProjectInternalServerError {
	return &CreateProjectInternalServerError{}
}

/*
CreateProjectInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateProjectInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create project internal server error response has a 2xx status code
func (o *CreateProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project internal server error response has a 3xx status code
func (o *CreateProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project internal server error response has a 4xx status code
func (o *CreateProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project internal server error response has a 5xx status code
func (o *CreateProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create project internal server error response a status code equal to that given
func (o *CreateProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create project internal server error response
func (o *CreateProjectInternalServerError) Code() int {
	return 500
}

func (o *CreateProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectInternalServerError %s", 500, payload)
}

func (o *CreateProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectInternalServerError %s", 500, payload)
}

func (o *CreateProjectInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
