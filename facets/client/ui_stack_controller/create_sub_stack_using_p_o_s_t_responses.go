// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateSubStackUsingPOSTReader is a Reader for the CreateSubStackUsingPOST structure.
type CreateSubStackUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSubStackUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateSubStackUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateSubStackUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateSubStackUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateSubStackUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateSubStackUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/substack/{substackName}] createSubStackUsingPOST", response, response.Code())
	}
}

// NewCreateSubStackUsingPOSTOK creates a CreateSubStackUsingPOSTOK with default headers values
func NewCreateSubStackUsingPOSTOK() *CreateSubStackUsingPOSTOK {
	return &CreateSubStackUsingPOSTOK{}
}

/*
CreateSubStackUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateSubStackUsingPOSTOK struct {
	Payload *models.Substack
}

// IsSuccess returns true when this create sub stack using p o s t o k response has a 2xx status code
func (o *CreateSubStackUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create sub stack using p o s t o k response has a 3xx status code
func (o *CreateSubStackUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sub stack using p o s t o k response has a 4xx status code
func (o *CreateSubStackUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create sub stack using p o s t o k response has a 5xx status code
func (o *CreateSubStackUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create sub stack using p o s t o k response a status code equal to that given
func (o *CreateSubStackUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create sub stack using p o s t o k response
func (o *CreateSubStackUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateSubStackUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTOK %s", 200, payload)
}

func (o *CreateSubStackUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTOK %s", 200, payload)
}

func (o *CreateSubStackUsingPOSTOK) GetPayload() *models.Substack {
	return o.Payload
}

func (o *CreateSubStackUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Substack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSubStackUsingPOSTCreated creates a CreateSubStackUsingPOSTCreated with default headers values
func NewCreateSubStackUsingPOSTCreated() *CreateSubStackUsingPOSTCreated {
	return &CreateSubStackUsingPOSTCreated{}
}

/*
CreateSubStackUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateSubStackUsingPOSTCreated struct {
}

// IsSuccess returns true when this create sub stack using p o s t created response has a 2xx status code
func (o *CreateSubStackUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create sub stack using p o s t created response has a 3xx status code
func (o *CreateSubStackUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sub stack using p o s t created response has a 4xx status code
func (o *CreateSubStackUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create sub stack using p o s t created response has a 5xx status code
func (o *CreateSubStackUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create sub stack using p o s t created response a status code equal to that given
func (o *CreateSubStackUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create sub stack using p o s t created response
func (o *CreateSubStackUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateSubStackUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTCreated", 201)
}

func (o *CreateSubStackUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTCreated", 201)
}

func (o *CreateSubStackUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSubStackUsingPOSTUnauthorized creates a CreateSubStackUsingPOSTUnauthorized with default headers values
func NewCreateSubStackUsingPOSTUnauthorized() *CreateSubStackUsingPOSTUnauthorized {
	return &CreateSubStackUsingPOSTUnauthorized{}
}

/*
CreateSubStackUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateSubStackUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create sub stack using p o s t unauthorized response has a 2xx status code
func (o *CreateSubStackUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create sub stack using p o s t unauthorized response has a 3xx status code
func (o *CreateSubStackUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sub stack using p o s t unauthorized response has a 4xx status code
func (o *CreateSubStackUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create sub stack using p o s t unauthorized response has a 5xx status code
func (o *CreateSubStackUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create sub stack using p o s t unauthorized response a status code equal to that given
func (o *CreateSubStackUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create sub stack using p o s t unauthorized response
func (o *CreateSubStackUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateSubStackUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTUnauthorized", 401)
}

func (o *CreateSubStackUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTUnauthorized", 401)
}

func (o *CreateSubStackUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSubStackUsingPOSTForbidden creates a CreateSubStackUsingPOSTForbidden with default headers values
func NewCreateSubStackUsingPOSTForbidden() *CreateSubStackUsingPOSTForbidden {
	return &CreateSubStackUsingPOSTForbidden{}
}

/*
CreateSubStackUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateSubStackUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create sub stack using p o s t forbidden response has a 2xx status code
func (o *CreateSubStackUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create sub stack using p o s t forbidden response has a 3xx status code
func (o *CreateSubStackUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sub stack using p o s t forbidden response has a 4xx status code
func (o *CreateSubStackUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create sub stack using p o s t forbidden response has a 5xx status code
func (o *CreateSubStackUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create sub stack using p o s t forbidden response a status code equal to that given
func (o *CreateSubStackUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create sub stack using p o s t forbidden response
func (o *CreateSubStackUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateSubStackUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTForbidden", 403)
}

func (o *CreateSubStackUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTForbidden", 403)
}

func (o *CreateSubStackUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSubStackUsingPOSTNotFound creates a CreateSubStackUsingPOSTNotFound with default headers values
func NewCreateSubStackUsingPOSTNotFound() *CreateSubStackUsingPOSTNotFound {
	return &CreateSubStackUsingPOSTNotFound{}
}

/*
CreateSubStackUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateSubStackUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create sub stack using p o s t not found response has a 2xx status code
func (o *CreateSubStackUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create sub stack using p o s t not found response has a 3xx status code
func (o *CreateSubStackUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create sub stack using p o s t not found response has a 4xx status code
func (o *CreateSubStackUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create sub stack using p o s t not found response has a 5xx status code
func (o *CreateSubStackUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create sub stack using p o s t not found response a status code equal to that given
func (o *CreateSubStackUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create sub stack using p o s t not found response
func (o *CreateSubStackUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateSubStackUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTNotFound", 404)
}

func (o *CreateSubStackUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/substack/{substackName}][%d] createSubStackUsingPOSTNotFound", 404)
}

func (o *CreateSubStackUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
