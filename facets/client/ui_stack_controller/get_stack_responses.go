// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetStackReader is a Reader for the GetStack structure.
type GetStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetStackMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}] getStack", response, response.Code())
	}
}

// NewGetStackOK creates a GetStackOK with default headers values
func NewGetStackOK() *GetStackOK {
	return &GetStackOK{}
}

/*
GetStackOK describes a response with status code 200, with default header values.

OK
*/
type GetStackOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this get stack o k response has a 2xx status code
func (o *GetStackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get stack o k response has a 3xx status code
func (o *GetStackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack o k response has a 4xx status code
func (o *GetStackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stack o k response has a 5xx status code
func (o *GetStackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack o k response a status code equal to that given
func (o *GetStackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get stack o k response
func (o *GetStackOK) Code() int {
	return 200
}

func (o *GetStackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackOK %s", 200, payload)
}

func (o *GetStackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackOK %s", 200, payload)
}

func (o *GetStackOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *GetStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackBadRequest creates a GetStackBadRequest with default headers values
func NewGetStackBadRequest() *GetStackBadRequest {
	return &GetStackBadRequest{}
}

/*
GetStackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetStackBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack bad request response has a 2xx status code
func (o *GetStackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack bad request response has a 3xx status code
func (o *GetStackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack bad request response has a 4xx status code
func (o *GetStackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stack bad request response has a 5xx status code
func (o *GetStackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack bad request response a status code equal to that given
func (o *GetStackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get stack bad request response
func (o *GetStackBadRequest) Code() int {
	return 400
}

func (o *GetStackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackBadRequest %s", 400, payload)
}

func (o *GetStackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackBadRequest %s", 400, payload)
}

func (o *GetStackBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackNotFound creates a GetStackNotFound with default headers values
func NewGetStackNotFound() *GetStackNotFound {
	return &GetStackNotFound{}
}

/*
GetStackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetStackNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack not found response has a 2xx status code
func (o *GetStackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack not found response has a 3xx status code
func (o *GetStackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack not found response has a 4xx status code
func (o *GetStackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stack not found response has a 5xx status code
func (o *GetStackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack not found response a status code equal to that given
func (o *GetStackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get stack not found response
func (o *GetStackNotFound) Code() int {
	return 404
}

func (o *GetStackNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackNotFound %s", 404, payload)
}

func (o *GetStackNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackNotFound %s", 404, payload)
}

func (o *GetStackNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackMethodNotAllowed creates a GetStackMethodNotAllowed with default headers values
func NewGetStackMethodNotAllowed() *GetStackMethodNotAllowed {
	return &GetStackMethodNotAllowed{}
}

/*
GetStackMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetStackMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack method not allowed response has a 2xx status code
func (o *GetStackMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack method not allowed response has a 3xx status code
func (o *GetStackMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack method not allowed response has a 4xx status code
func (o *GetStackMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stack method not allowed response has a 5xx status code
func (o *GetStackMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack method not allowed response a status code equal to that given
func (o *GetStackMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get stack method not allowed response
func (o *GetStackMethodNotAllowed) Code() int {
	return 405
}

func (o *GetStackMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackMethodNotAllowed %s", 405, payload)
}

func (o *GetStackMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackMethodNotAllowed %s", 405, payload)
}

func (o *GetStackMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackInternalServerError creates a GetStackInternalServerError with default headers values
func NewGetStackInternalServerError() *GetStackInternalServerError {
	return &GetStackInternalServerError{}
}

/*
GetStackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetStackInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack internal server error response has a 2xx status code
func (o *GetStackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack internal server error response has a 3xx status code
func (o *GetStackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack internal server error response has a 4xx status code
func (o *GetStackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stack internal server error response has a 5xx status code
func (o *GetStackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get stack internal server error response a status code equal to that given
func (o *GetStackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get stack internal server error response
func (o *GetStackInternalServerError) Code() int {
	return 500
}

func (o *GetStackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackInternalServerError %s", 500, payload)
}

func (o *GetStackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}][%d] getStackInternalServerError %s", 500, payload)
}

func (o *GetStackInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
