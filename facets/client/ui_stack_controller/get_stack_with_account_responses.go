// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetStackWithAccountReader is a Reader for the GetStackWithAccount structure.
type GetStackWithAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStackWithAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStackWithAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStackWithAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStackWithAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetStackWithAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStackWithAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/withAccount] getStackWithAccount", response, response.Code())
	}
}

// NewGetStackWithAccountOK creates a GetStackWithAccountOK with default headers values
func NewGetStackWithAccountOK() *GetStackWithAccountOK {
	return &GetStackWithAccountOK{}
}

/*
GetStackWithAccountOK describes a response with status code 200, with default header values.

OK
*/
type GetStackWithAccountOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this get stack with account o k response has a 2xx status code
func (o *GetStackWithAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get stack with account o k response has a 3xx status code
func (o *GetStackWithAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack with account o k response has a 4xx status code
func (o *GetStackWithAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stack with account o k response has a 5xx status code
func (o *GetStackWithAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack with account o k response a status code equal to that given
func (o *GetStackWithAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get stack with account o k response
func (o *GetStackWithAccountOK) Code() int {
	return 200
}

func (o *GetStackWithAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountOK %s", 200, payload)
}

func (o *GetStackWithAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountOK %s", 200, payload)
}

func (o *GetStackWithAccountOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *GetStackWithAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackWithAccountBadRequest creates a GetStackWithAccountBadRequest with default headers values
func NewGetStackWithAccountBadRequest() *GetStackWithAccountBadRequest {
	return &GetStackWithAccountBadRequest{}
}

/*
GetStackWithAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetStackWithAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack with account bad request response has a 2xx status code
func (o *GetStackWithAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack with account bad request response has a 3xx status code
func (o *GetStackWithAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack with account bad request response has a 4xx status code
func (o *GetStackWithAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stack with account bad request response has a 5xx status code
func (o *GetStackWithAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack with account bad request response a status code equal to that given
func (o *GetStackWithAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get stack with account bad request response
func (o *GetStackWithAccountBadRequest) Code() int {
	return 400
}

func (o *GetStackWithAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountBadRequest %s", 400, payload)
}

func (o *GetStackWithAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountBadRequest %s", 400, payload)
}

func (o *GetStackWithAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackWithAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackWithAccountNotFound creates a GetStackWithAccountNotFound with default headers values
func NewGetStackWithAccountNotFound() *GetStackWithAccountNotFound {
	return &GetStackWithAccountNotFound{}
}

/*
GetStackWithAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetStackWithAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack with account not found response has a 2xx status code
func (o *GetStackWithAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack with account not found response has a 3xx status code
func (o *GetStackWithAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack with account not found response has a 4xx status code
func (o *GetStackWithAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stack with account not found response has a 5xx status code
func (o *GetStackWithAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack with account not found response a status code equal to that given
func (o *GetStackWithAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get stack with account not found response
func (o *GetStackWithAccountNotFound) Code() int {
	return 404
}

func (o *GetStackWithAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountNotFound %s", 404, payload)
}

func (o *GetStackWithAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountNotFound %s", 404, payload)
}

func (o *GetStackWithAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackWithAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackWithAccountMethodNotAllowed creates a GetStackWithAccountMethodNotAllowed with default headers values
func NewGetStackWithAccountMethodNotAllowed() *GetStackWithAccountMethodNotAllowed {
	return &GetStackWithAccountMethodNotAllowed{}
}

/*
GetStackWithAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetStackWithAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack with account method not allowed response has a 2xx status code
func (o *GetStackWithAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack with account method not allowed response has a 3xx status code
func (o *GetStackWithAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack with account method not allowed response has a 4xx status code
func (o *GetStackWithAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stack with account method not allowed response has a 5xx status code
func (o *GetStackWithAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get stack with account method not allowed response a status code equal to that given
func (o *GetStackWithAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get stack with account method not allowed response
func (o *GetStackWithAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *GetStackWithAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountMethodNotAllowed %s", 405, payload)
}

func (o *GetStackWithAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountMethodNotAllowed %s", 405, payload)
}

func (o *GetStackWithAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackWithAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStackWithAccountInternalServerError creates a GetStackWithAccountInternalServerError with default headers values
func NewGetStackWithAccountInternalServerError() *GetStackWithAccountInternalServerError {
	return &GetStackWithAccountInternalServerError{}
}

/*
GetStackWithAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetStackWithAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stack with account internal server error response has a 2xx status code
func (o *GetStackWithAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stack with account internal server error response has a 3xx status code
func (o *GetStackWithAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stack with account internal server error response has a 4xx status code
func (o *GetStackWithAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stack with account internal server error response has a 5xx status code
func (o *GetStackWithAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get stack with account internal server error response a status code equal to that given
func (o *GetStackWithAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get stack with account internal server error response
func (o *GetStackWithAccountInternalServerError) Code() int {
	return 500
}

func (o *GetStackWithAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountInternalServerError %s", 500, payload)
}

func (o *GetStackWithAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/withAccount][%d] getStackWithAccountInternalServerError %s", 500, payload)
}

func (o *GetStackWithAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStackWithAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
