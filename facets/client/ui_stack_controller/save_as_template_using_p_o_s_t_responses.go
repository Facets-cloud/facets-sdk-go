// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SaveAsTemplateUsingPOSTReader is a Reader for the SaveAsTemplateUsingPOST structure.
type SaveAsTemplateUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveAsTemplateUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSaveAsTemplateUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewSaveAsTemplateUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSaveAsTemplateUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSaveAsTemplateUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSaveAsTemplateUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/{stackName}/template] saveAsTemplateUsingPOST", response, response.Code())
	}
}

// NewSaveAsTemplateUsingPOSTOK creates a SaveAsTemplateUsingPOSTOK with default headers values
func NewSaveAsTemplateUsingPOSTOK() *SaveAsTemplateUsingPOSTOK {
	return &SaveAsTemplateUsingPOSTOK{}
}

/*
SaveAsTemplateUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type SaveAsTemplateUsingPOSTOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this save as template using p o s t o k response has a 2xx status code
func (o *SaveAsTemplateUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save as template using p o s t o k response has a 3xx status code
func (o *SaveAsTemplateUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template using p o s t o k response has a 4xx status code
func (o *SaveAsTemplateUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this save as template using p o s t o k response has a 5xx status code
func (o *SaveAsTemplateUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template using p o s t o k response a status code equal to that given
func (o *SaveAsTemplateUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the save as template using p o s t o k response
func (o *SaveAsTemplateUsingPOSTOK) Code() int {
	return 200
}

func (o *SaveAsTemplateUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTOK %s", 200, payload)
}

func (o *SaveAsTemplateUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTOK %s", 200, payload)
}

func (o *SaveAsTemplateUsingPOSTOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *SaveAsTemplateUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveAsTemplateUsingPOSTCreated creates a SaveAsTemplateUsingPOSTCreated with default headers values
func NewSaveAsTemplateUsingPOSTCreated() *SaveAsTemplateUsingPOSTCreated {
	return &SaveAsTemplateUsingPOSTCreated{}
}

/*
SaveAsTemplateUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type SaveAsTemplateUsingPOSTCreated struct {
}

// IsSuccess returns true when this save as template using p o s t created response has a 2xx status code
func (o *SaveAsTemplateUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save as template using p o s t created response has a 3xx status code
func (o *SaveAsTemplateUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template using p o s t created response has a 4xx status code
func (o *SaveAsTemplateUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this save as template using p o s t created response has a 5xx status code
func (o *SaveAsTemplateUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template using p o s t created response a status code equal to that given
func (o *SaveAsTemplateUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the save as template using p o s t created response
func (o *SaveAsTemplateUsingPOSTCreated) Code() int {
	return 201
}

func (o *SaveAsTemplateUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTCreated", 201)
}

func (o *SaveAsTemplateUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTCreated", 201)
}

func (o *SaveAsTemplateUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveAsTemplateUsingPOSTUnauthorized creates a SaveAsTemplateUsingPOSTUnauthorized with default headers values
func NewSaveAsTemplateUsingPOSTUnauthorized() *SaveAsTemplateUsingPOSTUnauthorized {
	return &SaveAsTemplateUsingPOSTUnauthorized{}
}

/*
SaveAsTemplateUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SaveAsTemplateUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this save as template using p o s t unauthorized response has a 2xx status code
func (o *SaveAsTemplateUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save as template using p o s t unauthorized response has a 3xx status code
func (o *SaveAsTemplateUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template using p o s t unauthorized response has a 4xx status code
func (o *SaveAsTemplateUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this save as template using p o s t unauthorized response has a 5xx status code
func (o *SaveAsTemplateUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template using p o s t unauthorized response a status code equal to that given
func (o *SaveAsTemplateUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the save as template using p o s t unauthorized response
func (o *SaveAsTemplateUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *SaveAsTemplateUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTUnauthorized", 401)
}

func (o *SaveAsTemplateUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTUnauthorized", 401)
}

func (o *SaveAsTemplateUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveAsTemplateUsingPOSTForbidden creates a SaveAsTemplateUsingPOSTForbidden with default headers values
func NewSaveAsTemplateUsingPOSTForbidden() *SaveAsTemplateUsingPOSTForbidden {
	return &SaveAsTemplateUsingPOSTForbidden{}
}

/*
SaveAsTemplateUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SaveAsTemplateUsingPOSTForbidden struct {
}

// IsSuccess returns true when this save as template using p o s t forbidden response has a 2xx status code
func (o *SaveAsTemplateUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save as template using p o s t forbidden response has a 3xx status code
func (o *SaveAsTemplateUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template using p o s t forbidden response has a 4xx status code
func (o *SaveAsTemplateUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this save as template using p o s t forbidden response has a 5xx status code
func (o *SaveAsTemplateUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template using p o s t forbidden response a status code equal to that given
func (o *SaveAsTemplateUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the save as template using p o s t forbidden response
func (o *SaveAsTemplateUsingPOSTForbidden) Code() int {
	return 403
}

func (o *SaveAsTemplateUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTForbidden", 403)
}

func (o *SaveAsTemplateUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTForbidden", 403)
}

func (o *SaveAsTemplateUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveAsTemplateUsingPOSTNotFound creates a SaveAsTemplateUsingPOSTNotFound with default headers values
func NewSaveAsTemplateUsingPOSTNotFound() *SaveAsTemplateUsingPOSTNotFound {
	return &SaveAsTemplateUsingPOSTNotFound{}
}

/*
SaveAsTemplateUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SaveAsTemplateUsingPOSTNotFound struct {
}

// IsSuccess returns true when this save as template using p o s t not found response has a 2xx status code
func (o *SaveAsTemplateUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save as template using p o s t not found response has a 3xx status code
func (o *SaveAsTemplateUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save as template using p o s t not found response has a 4xx status code
func (o *SaveAsTemplateUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this save as template using p o s t not found response has a 5xx status code
func (o *SaveAsTemplateUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this save as template using p o s t not found response a status code equal to that given
func (o *SaveAsTemplateUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the save as template using p o s t not found response
func (o *SaveAsTemplateUsingPOSTNotFound) Code() int {
	return 404
}

func (o *SaveAsTemplateUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTNotFound", 404)
}

func (o *SaveAsTemplateUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/template][%d] saveAsTemplateUsingPOSTNotFound", 404)
}

func (o *SaveAsTemplateUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
