// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetResourceTypesUsingGETReader is a Reader for the GetResourceTypesUsingGET structure.
type GetResourceTypesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceTypesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceTypesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceTypesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceTypesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceTypesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType] getResourceTypesUsingGET", response, response.Code())
	}
}

// NewGetResourceTypesUsingGETOK creates a GetResourceTypesUsingGETOK with default headers values
func NewGetResourceTypesUsingGETOK() *GetResourceTypesUsingGETOK {
	return &GetResourceTypesUsingGETOK{}
}

/*
GetResourceTypesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceTypesUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get resource types using g e t o k response has a 2xx status code
func (o *GetResourceTypesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource types using g e t o k response has a 3xx status code
func (o *GetResourceTypesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource types using g e t o k response has a 4xx status code
func (o *GetResourceTypesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource types using g e t o k response has a 5xx status code
func (o *GetResourceTypesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource types using g e t o k response a status code equal to that given
func (o *GetResourceTypesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource types using g e t o k response
func (o *GetResourceTypesUsingGETOK) Code() int {
	return 200
}

func (o *GetResourceTypesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETOK %s", 200, payload)
}

func (o *GetResourceTypesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETOK %s", 200, payload)
}

func (o *GetResourceTypesUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetResourceTypesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceTypesUsingGETUnauthorized creates a GetResourceTypesUsingGETUnauthorized with default headers values
func NewGetResourceTypesUsingGETUnauthorized() *GetResourceTypesUsingGETUnauthorized {
	return &GetResourceTypesUsingGETUnauthorized{}
}

/*
GetResourceTypesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceTypesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource types using g e t unauthorized response has a 2xx status code
func (o *GetResourceTypesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource types using g e t unauthorized response has a 3xx status code
func (o *GetResourceTypesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource types using g e t unauthorized response has a 4xx status code
func (o *GetResourceTypesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource types using g e t unauthorized response has a 5xx status code
func (o *GetResourceTypesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource types using g e t unauthorized response a status code equal to that given
func (o *GetResourceTypesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource types using g e t unauthorized response
func (o *GetResourceTypesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceTypesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETUnauthorized", 401)
}

func (o *GetResourceTypesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETUnauthorized", 401)
}

func (o *GetResourceTypesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceTypesUsingGETForbidden creates a GetResourceTypesUsingGETForbidden with default headers values
func NewGetResourceTypesUsingGETForbidden() *GetResourceTypesUsingGETForbidden {
	return &GetResourceTypesUsingGETForbidden{}
}

/*
GetResourceTypesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceTypesUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource types using g e t forbidden response has a 2xx status code
func (o *GetResourceTypesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource types using g e t forbidden response has a 3xx status code
func (o *GetResourceTypesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource types using g e t forbidden response has a 4xx status code
func (o *GetResourceTypesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource types using g e t forbidden response has a 5xx status code
func (o *GetResourceTypesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource types using g e t forbidden response a status code equal to that given
func (o *GetResourceTypesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource types using g e t forbidden response
func (o *GetResourceTypesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceTypesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETForbidden", 403)
}

func (o *GetResourceTypesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETForbidden", 403)
}

func (o *GetResourceTypesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceTypesUsingGETNotFound creates a GetResourceTypesUsingGETNotFound with default headers values
func NewGetResourceTypesUsingGETNotFound() *GetResourceTypesUsingGETNotFound {
	return &GetResourceTypesUsingGETNotFound{}
}

/*
GetResourceTypesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceTypesUsingGETNotFound struct {
}

// IsSuccess returns true when this get resource types using g e t not found response has a 2xx status code
func (o *GetResourceTypesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource types using g e t not found response has a 3xx status code
func (o *GetResourceTypesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource types using g e t not found response has a 4xx status code
func (o *GetResourceTypesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource types using g e t not found response has a 5xx status code
func (o *GetResourceTypesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource types using g e t not found response a status code equal to that given
func (o *GetResourceTypesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource types using g e t not found response
func (o *GetResourceTypesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceTypesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETNotFound", 404)
}

func (o *GetResourceTypesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/suggestions/resourceType][%d] getResourceTypesUsingGETNotFound", 404)
}

func (o *GetResourceTypesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
