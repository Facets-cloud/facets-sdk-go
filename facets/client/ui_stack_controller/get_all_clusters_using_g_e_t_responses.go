// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllClustersUsingGETReader is a Reader for the GetAllClustersUsingGET structure.
type GetAllClustersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllClustersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllClustersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllClustersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllClustersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllClustersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/clusters] getAllClustersUsingGET", response, response.Code())
	}
}

// NewGetAllClustersUsingGETOK creates a GetAllClustersUsingGETOK with default headers values
func NewGetAllClustersUsingGETOK() *GetAllClustersUsingGETOK {
	return &GetAllClustersUsingGETOK{}
}

/*
GetAllClustersUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllClustersUsingGETOK struct {
	Payload *models.PageAbstractCluster
}

// IsSuccess returns true when this get all clusters using g e t o k response has a 2xx status code
func (o *GetAllClustersUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all clusters using g e t o k response has a 3xx status code
func (o *GetAllClustersUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters using g e t o k response has a 4xx status code
func (o *GetAllClustersUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all clusters using g e t o k response has a 5xx status code
func (o *GetAllClustersUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters using g e t o k response a status code equal to that given
func (o *GetAllClustersUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all clusters using g e t o k response
func (o *GetAllClustersUsingGETOK) Code() int {
	return 200
}

func (o *GetAllClustersUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETOK %s", 200, payload)
}

func (o *GetAllClustersUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETOK %s", 200, payload)
}

func (o *GetAllClustersUsingGETOK) GetPayload() *models.PageAbstractCluster {
	return o.Payload
}

func (o *GetAllClustersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageAbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllClustersUsingGETUnauthorized creates a GetAllClustersUsingGETUnauthorized with default headers values
func NewGetAllClustersUsingGETUnauthorized() *GetAllClustersUsingGETUnauthorized {
	return &GetAllClustersUsingGETUnauthorized{}
}

/*
GetAllClustersUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllClustersUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all clusters using g e t unauthorized response has a 2xx status code
func (o *GetAllClustersUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all clusters using g e t unauthorized response has a 3xx status code
func (o *GetAllClustersUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters using g e t unauthorized response has a 4xx status code
func (o *GetAllClustersUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all clusters using g e t unauthorized response has a 5xx status code
func (o *GetAllClustersUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters using g e t unauthorized response a status code equal to that given
func (o *GetAllClustersUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all clusters using g e t unauthorized response
func (o *GetAllClustersUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllClustersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETUnauthorized", 401)
}

func (o *GetAllClustersUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETUnauthorized", 401)
}

func (o *GetAllClustersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllClustersUsingGETForbidden creates a GetAllClustersUsingGETForbidden with default headers values
func NewGetAllClustersUsingGETForbidden() *GetAllClustersUsingGETForbidden {
	return &GetAllClustersUsingGETForbidden{}
}

/*
GetAllClustersUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllClustersUsingGETForbidden struct {
}

// IsSuccess returns true when this get all clusters using g e t forbidden response has a 2xx status code
func (o *GetAllClustersUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all clusters using g e t forbidden response has a 3xx status code
func (o *GetAllClustersUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters using g e t forbidden response has a 4xx status code
func (o *GetAllClustersUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all clusters using g e t forbidden response has a 5xx status code
func (o *GetAllClustersUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters using g e t forbidden response a status code equal to that given
func (o *GetAllClustersUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all clusters using g e t forbidden response
func (o *GetAllClustersUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllClustersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETForbidden", 403)
}

func (o *GetAllClustersUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETForbidden", 403)
}

func (o *GetAllClustersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllClustersUsingGETNotFound creates a GetAllClustersUsingGETNotFound with default headers values
func NewGetAllClustersUsingGETNotFound() *GetAllClustersUsingGETNotFound {
	return &GetAllClustersUsingGETNotFound{}
}

/*
GetAllClustersUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllClustersUsingGETNotFound struct {
}

// IsSuccess returns true when this get all clusters using g e t not found response has a 2xx status code
func (o *GetAllClustersUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all clusters using g e t not found response has a 3xx status code
func (o *GetAllClustersUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters using g e t not found response has a 4xx status code
func (o *GetAllClustersUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all clusters using g e t not found response has a 5xx status code
func (o *GetAllClustersUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters using g e t not found response a status code equal to that given
func (o *GetAllClustersUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all clusters using g e t not found response
func (o *GetAllClustersUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllClustersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETNotFound", 404)
}

func (o *GetAllClustersUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersUsingGETNotFound", 404)
}

func (o *GetAllClustersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
