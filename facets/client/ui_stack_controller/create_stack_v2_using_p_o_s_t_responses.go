// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateStackV2UsingPOSTReader is a Reader for the CreateStackV2UsingPOST structure.
type CreateStackV2UsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStackV2UsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateStackV2UsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateStackV2UsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateStackV2UsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateStackV2UsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateStackV2UsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/v2] createStackV2UsingPOST", response, response.Code())
	}
}

// NewCreateStackV2UsingPOSTOK creates a CreateStackV2UsingPOSTOK with default headers values
func NewCreateStackV2UsingPOSTOK() *CreateStackV2UsingPOSTOK {
	return &CreateStackV2UsingPOSTOK{}
}

/*
CreateStackV2UsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateStackV2UsingPOSTOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this create stack v2 using p o s t o k response has a 2xx status code
func (o *CreateStackV2UsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create stack v2 using p o s t o k response has a 3xx status code
func (o *CreateStackV2UsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 using p o s t o k response has a 4xx status code
func (o *CreateStackV2UsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create stack v2 using p o s t o k response has a 5xx status code
func (o *CreateStackV2UsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 using p o s t o k response a status code equal to that given
func (o *CreateStackV2UsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create stack v2 using p o s t o k response
func (o *CreateStackV2UsingPOSTOK) Code() int {
	return 200
}

func (o *CreateStackV2UsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTOK %s", 200, payload)
}

func (o *CreateStackV2UsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTOK %s", 200, payload)
}

func (o *CreateStackV2UsingPOSTOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *CreateStackV2UsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStackV2UsingPOSTCreated creates a CreateStackV2UsingPOSTCreated with default headers values
func NewCreateStackV2UsingPOSTCreated() *CreateStackV2UsingPOSTCreated {
	return &CreateStackV2UsingPOSTCreated{}
}

/*
CreateStackV2UsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateStackV2UsingPOSTCreated struct {
}

// IsSuccess returns true when this create stack v2 using p o s t created response has a 2xx status code
func (o *CreateStackV2UsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create stack v2 using p o s t created response has a 3xx status code
func (o *CreateStackV2UsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 using p o s t created response has a 4xx status code
func (o *CreateStackV2UsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create stack v2 using p o s t created response has a 5xx status code
func (o *CreateStackV2UsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 using p o s t created response a status code equal to that given
func (o *CreateStackV2UsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create stack v2 using p o s t created response
func (o *CreateStackV2UsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateStackV2UsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTCreated", 201)
}

func (o *CreateStackV2UsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTCreated", 201)
}

func (o *CreateStackV2UsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateStackV2UsingPOSTUnauthorized creates a CreateStackV2UsingPOSTUnauthorized with default headers values
func NewCreateStackV2UsingPOSTUnauthorized() *CreateStackV2UsingPOSTUnauthorized {
	return &CreateStackV2UsingPOSTUnauthorized{}
}

/*
CreateStackV2UsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateStackV2UsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create stack v2 using p o s t unauthorized response has a 2xx status code
func (o *CreateStackV2UsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack v2 using p o s t unauthorized response has a 3xx status code
func (o *CreateStackV2UsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 using p o s t unauthorized response has a 4xx status code
func (o *CreateStackV2UsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack v2 using p o s t unauthorized response has a 5xx status code
func (o *CreateStackV2UsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 using p o s t unauthorized response a status code equal to that given
func (o *CreateStackV2UsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create stack v2 using p o s t unauthorized response
func (o *CreateStackV2UsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateStackV2UsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTUnauthorized", 401)
}

func (o *CreateStackV2UsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTUnauthorized", 401)
}

func (o *CreateStackV2UsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateStackV2UsingPOSTForbidden creates a CreateStackV2UsingPOSTForbidden with default headers values
func NewCreateStackV2UsingPOSTForbidden() *CreateStackV2UsingPOSTForbidden {
	return &CreateStackV2UsingPOSTForbidden{}
}

/*
CreateStackV2UsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateStackV2UsingPOSTForbidden struct {
}

// IsSuccess returns true when this create stack v2 using p o s t forbidden response has a 2xx status code
func (o *CreateStackV2UsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack v2 using p o s t forbidden response has a 3xx status code
func (o *CreateStackV2UsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 using p o s t forbidden response has a 4xx status code
func (o *CreateStackV2UsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack v2 using p o s t forbidden response has a 5xx status code
func (o *CreateStackV2UsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 using p o s t forbidden response a status code equal to that given
func (o *CreateStackV2UsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create stack v2 using p o s t forbidden response
func (o *CreateStackV2UsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateStackV2UsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTForbidden", 403)
}

func (o *CreateStackV2UsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTForbidden", 403)
}

func (o *CreateStackV2UsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateStackV2UsingPOSTNotFound creates a CreateStackV2UsingPOSTNotFound with default headers values
func NewCreateStackV2UsingPOSTNotFound() *CreateStackV2UsingPOSTNotFound {
	return &CreateStackV2UsingPOSTNotFound{}
}

/*
CreateStackV2UsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateStackV2UsingPOSTNotFound struct {
}

// IsSuccess returns true when this create stack v2 using p o s t not found response has a 2xx status code
func (o *CreateStackV2UsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack v2 using p o s t not found response has a 3xx status code
func (o *CreateStackV2UsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack v2 using p o s t not found response has a 4xx status code
func (o *CreateStackV2UsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack v2 using p o s t not found response has a 5xx status code
func (o *CreateStackV2UsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack v2 using p o s t not found response a status code equal to that given
func (o *CreateStackV2UsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create stack v2 using p o s t not found response
func (o *CreateStackV2UsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateStackV2UsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTNotFound", 404)
}

func (o *CreateStackV2UsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/v2][%d] createStackV2UsingPOSTNotFound", 404)
}

func (o *CreateStackV2UsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
