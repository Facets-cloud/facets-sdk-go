// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SyncResourcesUsingGETReader is a Reader for the SyncResourcesUsingGET structure.
type SyncResourcesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncResourcesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncResourcesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSyncResourcesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSyncResourcesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSyncResourcesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/sync-resources] syncResourcesUsingGET", response, response.Code())
	}
}

// NewSyncResourcesUsingGETOK creates a SyncResourcesUsingGETOK with default headers values
func NewSyncResourcesUsingGETOK() *SyncResourcesUsingGETOK {
	return &SyncResourcesUsingGETOK{}
}

/*
SyncResourcesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type SyncResourcesUsingGETOK struct {
}

// IsSuccess returns true when this sync resources using g e t o k response has a 2xx status code
func (o *SyncResourcesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync resources using g e t o k response has a 3xx status code
func (o *SyncResourcesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources using g e t o k response has a 4xx status code
func (o *SyncResourcesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync resources using g e t o k response has a 5xx status code
func (o *SyncResourcesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources using g e t o k response a status code equal to that given
func (o *SyncResourcesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sync resources using g e t o k response
func (o *SyncResourcesUsingGETOK) Code() int {
	return 200
}

func (o *SyncResourcesUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETOK", 200)
}

func (o *SyncResourcesUsingGETOK) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETOK", 200)
}

func (o *SyncResourcesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncResourcesUsingGETUnauthorized creates a SyncResourcesUsingGETUnauthorized with default headers values
func NewSyncResourcesUsingGETUnauthorized() *SyncResourcesUsingGETUnauthorized {
	return &SyncResourcesUsingGETUnauthorized{}
}

/*
SyncResourcesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SyncResourcesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this sync resources using g e t unauthorized response has a 2xx status code
func (o *SyncResourcesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync resources using g e t unauthorized response has a 3xx status code
func (o *SyncResourcesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources using g e t unauthorized response has a 4xx status code
func (o *SyncResourcesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync resources using g e t unauthorized response has a 5xx status code
func (o *SyncResourcesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources using g e t unauthorized response a status code equal to that given
func (o *SyncResourcesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the sync resources using g e t unauthorized response
func (o *SyncResourcesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SyncResourcesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETUnauthorized", 401)
}

func (o *SyncResourcesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETUnauthorized", 401)
}

func (o *SyncResourcesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncResourcesUsingGETForbidden creates a SyncResourcesUsingGETForbidden with default headers values
func NewSyncResourcesUsingGETForbidden() *SyncResourcesUsingGETForbidden {
	return &SyncResourcesUsingGETForbidden{}
}

/*
SyncResourcesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SyncResourcesUsingGETForbidden struct {
}

// IsSuccess returns true when this sync resources using g e t forbidden response has a 2xx status code
func (o *SyncResourcesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync resources using g e t forbidden response has a 3xx status code
func (o *SyncResourcesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources using g e t forbidden response has a 4xx status code
func (o *SyncResourcesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync resources using g e t forbidden response has a 5xx status code
func (o *SyncResourcesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources using g e t forbidden response a status code equal to that given
func (o *SyncResourcesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the sync resources using g e t forbidden response
func (o *SyncResourcesUsingGETForbidden) Code() int {
	return 403
}

func (o *SyncResourcesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETForbidden", 403)
}

func (o *SyncResourcesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETForbidden", 403)
}

func (o *SyncResourcesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncResourcesUsingGETNotFound creates a SyncResourcesUsingGETNotFound with default headers values
func NewSyncResourcesUsingGETNotFound() *SyncResourcesUsingGETNotFound {
	return &SyncResourcesUsingGETNotFound{}
}

/*
SyncResourcesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SyncResourcesUsingGETNotFound struct {
}

// IsSuccess returns true when this sync resources using g e t not found response has a 2xx status code
func (o *SyncResourcesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync resources using g e t not found response has a 3xx status code
func (o *SyncResourcesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources using g e t not found response has a 4xx status code
func (o *SyncResourcesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync resources using g e t not found response has a 5xx status code
func (o *SyncResourcesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources using g e t not found response a status code equal to that given
func (o *SyncResourcesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the sync resources using g e t not found response
func (o *SyncResourcesUsingGETNotFound) Code() int {
	return 404
}

func (o *SyncResourcesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETNotFound", 404)
}

func (o *SyncResourcesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesUsingGETNotFound", 404)
}

func (o *SyncResourcesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
