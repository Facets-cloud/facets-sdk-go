// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClustersWithStatusUsingGETReader is a Reader for the GetClustersWithStatusUsingGET structure.
type GetClustersWithStatusUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClustersWithStatusUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClustersWithStatusUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClustersWithStatusUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClustersWithStatusUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClustersWithStatusUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus] getClustersWithStatusUsingGET", response, response.Code())
	}
}

// NewGetClustersWithStatusUsingGETOK creates a GetClustersWithStatusUsingGETOK with default headers values
func NewGetClustersWithStatusUsingGETOK() *GetClustersWithStatusUsingGETOK {
	return &GetClustersWithStatusUsingGETOK{}
}

/*
GetClustersWithStatusUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClustersWithStatusUsingGETOK struct {
	Payload []*models.AbstractCluster
}

// IsSuccess returns true when this get clusters with status using g e t o k response has a 2xx status code
func (o *GetClustersWithStatusUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get clusters with status using g e t o k response has a 3xx status code
func (o *GetClustersWithStatusUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status using g e t o k response has a 4xx status code
func (o *GetClustersWithStatusUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get clusters with status using g e t o k response has a 5xx status code
func (o *GetClustersWithStatusUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status using g e t o k response a status code equal to that given
func (o *GetClustersWithStatusUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get clusters with status using g e t o k response
func (o *GetClustersWithStatusUsingGETOK) Code() int {
	return 200
}

func (o *GetClustersWithStatusUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETOK %s", 200, payload)
}

func (o *GetClustersWithStatusUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETOK %s", 200, payload)
}

func (o *GetClustersWithStatusUsingGETOK) GetPayload() []*models.AbstractCluster {
	return o.Payload
}

func (o *GetClustersWithStatusUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersWithStatusUsingGETUnauthorized creates a GetClustersWithStatusUsingGETUnauthorized with default headers values
func NewGetClustersWithStatusUsingGETUnauthorized() *GetClustersWithStatusUsingGETUnauthorized {
	return &GetClustersWithStatusUsingGETUnauthorized{}
}

/*
GetClustersWithStatusUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClustersWithStatusUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get clusters with status using g e t unauthorized response has a 2xx status code
func (o *GetClustersWithStatusUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters with status using g e t unauthorized response has a 3xx status code
func (o *GetClustersWithStatusUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status using g e t unauthorized response has a 4xx status code
func (o *GetClustersWithStatusUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters with status using g e t unauthorized response has a 5xx status code
func (o *GetClustersWithStatusUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status using g e t unauthorized response a status code equal to that given
func (o *GetClustersWithStatusUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get clusters with status using g e t unauthorized response
func (o *GetClustersWithStatusUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClustersWithStatusUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETUnauthorized", 401)
}

func (o *GetClustersWithStatusUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETUnauthorized", 401)
}

func (o *GetClustersWithStatusUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClustersWithStatusUsingGETForbidden creates a GetClustersWithStatusUsingGETForbidden with default headers values
func NewGetClustersWithStatusUsingGETForbidden() *GetClustersWithStatusUsingGETForbidden {
	return &GetClustersWithStatusUsingGETForbidden{}
}

/*
GetClustersWithStatusUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClustersWithStatusUsingGETForbidden struct {
}

// IsSuccess returns true when this get clusters with status using g e t forbidden response has a 2xx status code
func (o *GetClustersWithStatusUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters with status using g e t forbidden response has a 3xx status code
func (o *GetClustersWithStatusUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status using g e t forbidden response has a 4xx status code
func (o *GetClustersWithStatusUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters with status using g e t forbidden response has a 5xx status code
func (o *GetClustersWithStatusUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status using g e t forbidden response a status code equal to that given
func (o *GetClustersWithStatusUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get clusters with status using g e t forbidden response
func (o *GetClustersWithStatusUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClustersWithStatusUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETForbidden", 403)
}

func (o *GetClustersWithStatusUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETForbidden", 403)
}

func (o *GetClustersWithStatusUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClustersWithStatusUsingGETNotFound creates a GetClustersWithStatusUsingGETNotFound with default headers values
func NewGetClustersWithStatusUsingGETNotFound() *GetClustersWithStatusUsingGETNotFound {
	return &GetClustersWithStatusUsingGETNotFound{}
}

/*
GetClustersWithStatusUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClustersWithStatusUsingGETNotFound struct {
}

// IsSuccess returns true when this get clusters with status using g e t not found response has a 2xx status code
func (o *GetClustersWithStatusUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters with status using g e t not found response has a 3xx status code
func (o *GetClustersWithStatusUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status using g e t not found response has a 4xx status code
func (o *GetClustersWithStatusUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters with status using g e t not found response has a 5xx status code
func (o *GetClustersWithStatusUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status using g e t not found response a status code equal to that given
func (o *GetClustersWithStatusUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get clusters with status using g e t not found response
func (o *GetClustersWithStatusUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClustersWithStatusUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETNotFound", 404)
}

func (o *GetClustersWithStatusUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusUsingGETNotFound", 404)
}

func (o *GetClustersWithStatusUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
