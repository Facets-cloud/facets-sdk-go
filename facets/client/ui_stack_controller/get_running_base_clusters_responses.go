// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetRunningBaseClustersReader is a Reader for the GetRunningBaseClusters structure.
type GetRunningBaseClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRunningBaseClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRunningBaseClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRunningBaseClustersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRunningBaseClustersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetRunningBaseClustersMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRunningBaseClustersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/running-base-clusters] getRunningBaseClusters", response, response.Code())
	}
}

// NewGetRunningBaseClustersOK creates a GetRunningBaseClustersOK with default headers values
func NewGetRunningBaseClustersOK() *GetRunningBaseClustersOK {
	return &GetRunningBaseClustersOK{}
}

/*
GetRunningBaseClustersOK describes a response with status code 200, with default header values.

OK
*/
type GetRunningBaseClustersOK struct {
	Payload []*models.AbstractCluster
}

// IsSuccess returns true when this get running base clusters o k response has a 2xx status code
func (o *GetRunningBaseClustersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get running base clusters o k response has a 3xx status code
func (o *GetRunningBaseClustersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running base clusters o k response has a 4xx status code
func (o *GetRunningBaseClustersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get running base clusters o k response has a 5xx status code
func (o *GetRunningBaseClustersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get running base clusters o k response a status code equal to that given
func (o *GetRunningBaseClustersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get running base clusters o k response
func (o *GetRunningBaseClustersOK) Code() int {
	return 200
}

func (o *GetRunningBaseClustersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersOK %s", 200, payload)
}

func (o *GetRunningBaseClustersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersOK %s", 200, payload)
}

func (o *GetRunningBaseClustersOK) GetPayload() []*models.AbstractCluster {
	return o.Payload
}

func (o *GetRunningBaseClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningBaseClustersBadRequest creates a GetRunningBaseClustersBadRequest with default headers values
func NewGetRunningBaseClustersBadRequest() *GetRunningBaseClustersBadRequest {
	return &GetRunningBaseClustersBadRequest{}
}

/*
GetRunningBaseClustersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRunningBaseClustersBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get running base clusters bad request response has a 2xx status code
func (o *GetRunningBaseClustersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get running base clusters bad request response has a 3xx status code
func (o *GetRunningBaseClustersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running base clusters bad request response has a 4xx status code
func (o *GetRunningBaseClustersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get running base clusters bad request response has a 5xx status code
func (o *GetRunningBaseClustersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get running base clusters bad request response a status code equal to that given
func (o *GetRunningBaseClustersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get running base clusters bad request response
func (o *GetRunningBaseClustersBadRequest) Code() int {
	return 400
}

func (o *GetRunningBaseClustersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersBadRequest %s", 400, payload)
}

func (o *GetRunningBaseClustersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersBadRequest %s", 400, payload)
}

func (o *GetRunningBaseClustersBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRunningBaseClustersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningBaseClustersNotFound creates a GetRunningBaseClustersNotFound with default headers values
func NewGetRunningBaseClustersNotFound() *GetRunningBaseClustersNotFound {
	return &GetRunningBaseClustersNotFound{}
}

/*
GetRunningBaseClustersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRunningBaseClustersNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get running base clusters not found response has a 2xx status code
func (o *GetRunningBaseClustersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get running base clusters not found response has a 3xx status code
func (o *GetRunningBaseClustersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running base clusters not found response has a 4xx status code
func (o *GetRunningBaseClustersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get running base clusters not found response has a 5xx status code
func (o *GetRunningBaseClustersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get running base clusters not found response a status code equal to that given
func (o *GetRunningBaseClustersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get running base clusters not found response
func (o *GetRunningBaseClustersNotFound) Code() int {
	return 404
}

func (o *GetRunningBaseClustersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersNotFound %s", 404, payload)
}

func (o *GetRunningBaseClustersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersNotFound %s", 404, payload)
}

func (o *GetRunningBaseClustersNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRunningBaseClustersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningBaseClustersMethodNotAllowed creates a GetRunningBaseClustersMethodNotAllowed with default headers values
func NewGetRunningBaseClustersMethodNotAllowed() *GetRunningBaseClustersMethodNotAllowed {
	return &GetRunningBaseClustersMethodNotAllowed{}
}

/*
GetRunningBaseClustersMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetRunningBaseClustersMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get running base clusters method not allowed response has a 2xx status code
func (o *GetRunningBaseClustersMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get running base clusters method not allowed response has a 3xx status code
func (o *GetRunningBaseClustersMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running base clusters method not allowed response has a 4xx status code
func (o *GetRunningBaseClustersMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get running base clusters method not allowed response has a 5xx status code
func (o *GetRunningBaseClustersMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get running base clusters method not allowed response a status code equal to that given
func (o *GetRunningBaseClustersMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get running base clusters method not allowed response
func (o *GetRunningBaseClustersMethodNotAllowed) Code() int {
	return 405
}

func (o *GetRunningBaseClustersMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetRunningBaseClustersMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetRunningBaseClustersMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRunningBaseClustersMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRunningBaseClustersInternalServerError creates a GetRunningBaseClustersInternalServerError with default headers values
func NewGetRunningBaseClustersInternalServerError() *GetRunningBaseClustersInternalServerError {
	return &GetRunningBaseClustersInternalServerError{}
}

/*
GetRunningBaseClustersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRunningBaseClustersInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get running base clusters internal server error response has a 2xx status code
func (o *GetRunningBaseClustersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get running base clusters internal server error response has a 3xx status code
func (o *GetRunningBaseClustersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get running base clusters internal server error response has a 4xx status code
func (o *GetRunningBaseClustersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get running base clusters internal server error response has a 5xx status code
func (o *GetRunningBaseClustersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get running base clusters internal server error response a status code equal to that given
func (o *GetRunningBaseClustersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get running base clusters internal server error response
func (o *GetRunningBaseClustersInternalServerError) Code() int {
	return 500
}

func (o *GetRunningBaseClustersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersInternalServerError %s", 500, payload)
}

func (o *GetRunningBaseClustersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/running-base-clusters][%d] getRunningBaseClustersInternalServerError %s", 500, payload)
}

func (o *GetRunningBaseClustersInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRunningBaseClustersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
