// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// MigrateOverridesToGitUsingGETReader is a Reader for the MigrateOverridesToGitUsingGET structure.
type MigrateOverridesToGitUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MigrateOverridesToGitUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMigrateOverridesToGitUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewMigrateOverridesToGitUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMigrateOverridesToGitUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMigrateOverridesToGitUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/migrate-overrides] migrateOverridesToGitUsingGET", response, response.Code())
	}
}

// NewMigrateOverridesToGitUsingGETOK creates a MigrateOverridesToGitUsingGETOK with default headers values
func NewMigrateOverridesToGitUsingGETOK() *MigrateOverridesToGitUsingGETOK {
	return &MigrateOverridesToGitUsingGETOK{}
}

/*
MigrateOverridesToGitUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type MigrateOverridesToGitUsingGETOK struct {
}

// IsSuccess returns true when this migrate overrides to git using g e t o k response has a 2xx status code
func (o *MigrateOverridesToGitUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this migrate overrides to git using g e t o k response has a 3xx status code
func (o *MigrateOverridesToGitUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git using g e t o k response has a 4xx status code
func (o *MigrateOverridesToGitUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this migrate overrides to git using g e t o k response has a 5xx status code
func (o *MigrateOverridesToGitUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git using g e t o k response a status code equal to that given
func (o *MigrateOverridesToGitUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the migrate overrides to git using g e t o k response
func (o *MigrateOverridesToGitUsingGETOK) Code() int {
	return 200
}

func (o *MigrateOverridesToGitUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETOK", 200)
}

func (o *MigrateOverridesToGitUsingGETOK) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETOK", 200)
}

func (o *MigrateOverridesToGitUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMigrateOverridesToGitUsingGETUnauthorized creates a MigrateOverridesToGitUsingGETUnauthorized with default headers values
func NewMigrateOverridesToGitUsingGETUnauthorized() *MigrateOverridesToGitUsingGETUnauthorized {
	return &MigrateOverridesToGitUsingGETUnauthorized{}
}

/*
MigrateOverridesToGitUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type MigrateOverridesToGitUsingGETUnauthorized struct {
}

// IsSuccess returns true when this migrate overrides to git using g e t unauthorized response has a 2xx status code
func (o *MigrateOverridesToGitUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this migrate overrides to git using g e t unauthorized response has a 3xx status code
func (o *MigrateOverridesToGitUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git using g e t unauthorized response has a 4xx status code
func (o *MigrateOverridesToGitUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this migrate overrides to git using g e t unauthorized response has a 5xx status code
func (o *MigrateOverridesToGitUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git using g e t unauthorized response a status code equal to that given
func (o *MigrateOverridesToGitUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the migrate overrides to git using g e t unauthorized response
func (o *MigrateOverridesToGitUsingGETUnauthorized) Code() int {
	return 401
}

func (o *MigrateOverridesToGitUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETUnauthorized", 401)
}

func (o *MigrateOverridesToGitUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETUnauthorized", 401)
}

func (o *MigrateOverridesToGitUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMigrateOverridesToGitUsingGETForbidden creates a MigrateOverridesToGitUsingGETForbidden with default headers values
func NewMigrateOverridesToGitUsingGETForbidden() *MigrateOverridesToGitUsingGETForbidden {
	return &MigrateOverridesToGitUsingGETForbidden{}
}

/*
MigrateOverridesToGitUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type MigrateOverridesToGitUsingGETForbidden struct {
}

// IsSuccess returns true when this migrate overrides to git using g e t forbidden response has a 2xx status code
func (o *MigrateOverridesToGitUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this migrate overrides to git using g e t forbidden response has a 3xx status code
func (o *MigrateOverridesToGitUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git using g e t forbidden response has a 4xx status code
func (o *MigrateOverridesToGitUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this migrate overrides to git using g e t forbidden response has a 5xx status code
func (o *MigrateOverridesToGitUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git using g e t forbidden response a status code equal to that given
func (o *MigrateOverridesToGitUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the migrate overrides to git using g e t forbidden response
func (o *MigrateOverridesToGitUsingGETForbidden) Code() int {
	return 403
}

func (o *MigrateOverridesToGitUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETForbidden", 403)
}

func (o *MigrateOverridesToGitUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETForbidden", 403)
}

func (o *MigrateOverridesToGitUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMigrateOverridesToGitUsingGETNotFound creates a MigrateOverridesToGitUsingGETNotFound with default headers values
func NewMigrateOverridesToGitUsingGETNotFound() *MigrateOverridesToGitUsingGETNotFound {
	return &MigrateOverridesToGitUsingGETNotFound{}
}

/*
MigrateOverridesToGitUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type MigrateOverridesToGitUsingGETNotFound struct {
}

// IsSuccess returns true when this migrate overrides to git using g e t not found response has a 2xx status code
func (o *MigrateOverridesToGitUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this migrate overrides to git using g e t not found response has a 3xx status code
func (o *MigrateOverridesToGitUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git using g e t not found response has a 4xx status code
func (o *MigrateOverridesToGitUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this migrate overrides to git using g e t not found response has a 5xx status code
func (o *MigrateOverridesToGitUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git using g e t not found response a status code equal to that given
func (o *MigrateOverridesToGitUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the migrate overrides to git using g e t not found response
func (o *MigrateOverridesToGitUsingGETNotFound) Code() int {
	return 404
}

func (o *MigrateOverridesToGitUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETNotFound", 404)
}

func (o *MigrateOverridesToGitUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/migrate-overrides][%d] migrateOverridesToGitUsingGETNotFound", 404)
}

func (o *MigrateOverridesToGitUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
