// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetStacksReader is a Reader for the GetStacks structure.
type GetStacksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStacksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStacksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetStacksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetStacksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetStacksMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetStacksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/] getStacks", response, response.Code())
	}
}

// NewGetStacksOK creates a GetStacksOK with default headers values
func NewGetStacksOK() *GetStacksOK {
	return &GetStacksOK{}
}

/*
GetStacksOK describes a response with status code 200, with default header values.

OK
*/
type GetStacksOK struct {
	Payload []*models.Stack
}

// IsSuccess returns true when this get stacks o k response has a 2xx status code
func (o *GetStacksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get stacks o k response has a 3xx status code
func (o *GetStacksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stacks o k response has a 4xx status code
func (o *GetStacksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stacks o k response has a 5xx status code
func (o *GetStacksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get stacks o k response a status code equal to that given
func (o *GetStacksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get stacks o k response
func (o *GetStacksOK) Code() int {
	return 200
}

func (o *GetStacksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksOK %s", 200, payload)
}

func (o *GetStacksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksOK %s", 200, payload)
}

func (o *GetStacksOK) GetPayload() []*models.Stack {
	return o.Payload
}

func (o *GetStacksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStacksBadRequest creates a GetStacksBadRequest with default headers values
func NewGetStacksBadRequest() *GetStacksBadRequest {
	return &GetStacksBadRequest{}
}

/*
GetStacksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetStacksBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stacks bad request response has a 2xx status code
func (o *GetStacksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stacks bad request response has a 3xx status code
func (o *GetStacksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stacks bad request response has a 4xx status code
func (o *GetStacksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stacks bad request response has a 5xx status code
func (o *GetStacksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get stacks bad request response a status code equal to that given
func (o *GetStacksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get stacks bad request response
func (o *GetStacksBadRequest) Code() int {
	return 400
}

func (o *GetStacksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksBadRequest %s", 400, payload)
}

func (o *GetStacksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksBadRequest %s", 400, payload)
}

func (o *GetStacksBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStacksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStacksNotFound creates a GetStacksNotFound with default headers values
func NewGetStacksNotFound() *GetStacksNotFound {
	return &GetStacksNotFound{}
}

/*
GetStacksNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetStacksNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stacks not found response has a 2xx status code
func (o *GetStacksNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stacks not found response has a 3xx status code
func (o *GetStacksNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stacks not found response has a 4xx status code
func (o *GetStacksNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stacks not found response has a 5xx status code
func (o *GetStacksNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get stacks not found response a status code equal to that given
func (o *GetStacksNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get stacks not found response
func (o *GetStacksNotFound) Code() int {
	return 404
}

func (o *GetStacksNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksNotFound %s", 404, payload)
}

func (o *GetStacksNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksNotFound %s", 404, payload)
}

func (o *GetStacksNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStacksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStacksMethodNotAllowed creates a GetStacksMethodNotAllowed with default headers values
func NewGetStacksMethodNotAllowed() *GetStacksMethodNotAllowed {
	return &GetStacksMethodNotAllowed{}
}

/*
GetStacksMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetStacksMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stacks method not allowed response has a 2xx status code
func (o *GetStacksMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stacks method not allowed response has a 3xx status code
func (o *GetStacksMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stacks method not allowed response has a 4xx status code
func (o *GetStacksMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get stacks method not allowed response has a 5xx status code
func (o *GetStacksMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get stacks method not allowed response a status code equal to that given
func (o *GetStacksMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get stacks method not allowed response
func (o *GetStacksMethodNotAllowed) Code() int {
	return 405
}

func (o *GetStacksMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksMethodNotAllowed %s", 405, payload)
}

func (o *GetStacksMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksMethodNotAllowed %s", 405, payload)
}

func (o *GetStacksMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStacksMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStacksInternalServerError creates a GetStacksInternalServerError with default headers values
func NewGetStacksInternalServerError() *GetStacksInternalServerError {
	return &GetStacksInternalServerError{}
}

/*
GetStacksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetStacksInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get stacks internal server error response has a 2xx status code
func (o *GetStacksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get stacks internal server error response has a 3xx status code
func (o *GetStacksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get stacks internal server error response has a 4xx status code
func (o *GetStacksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get stacks internal server error response has a 5xx status code
func (o *GetStacksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get stacks internal server error response a status code equal to that given
func (o *GetStacksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get stacks internal server error response
func (o *GetStacksInternalServerError) Code() int {
	return 500
}

func (o *GetStacksInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksInternalServerError %s", 500, payload)
}

func (o *GetStacksInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/][%d] getStacksInternalServerError %s", 500, payload)
}

func (o *GetStacksInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetStacksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
