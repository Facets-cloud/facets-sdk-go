// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClustersReader is a Reader for the GetClusters structure.
type GetClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClustersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClustersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetClustersMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClustersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/clusters] getClusters", response, response.Code())
	}
}

// NewGetClustersOK creates a GetClustersOK with default headers values
func NewGetClustersOK() *GetClustersOK {
	return &GetClustersOK{}
}

/*
GetClustersOK describes a response with status code 200, with default header values.

OK
*/
type GetClustersOK struct {
	Payload []*models.AbstractCluster
}

// IsSuccess returns true when this get clusters o k response has a 2xx status code
func (o *GetClustersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get clusters o k response has a 3xx status code
func (o *GetClustersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters o k response has a 4xx status code
func (o *GetClustersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get clusters o k response has a 5xx status code
func (o *GetClustersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters o k response a status code equal to that given
func (o *GetClustersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get clusters o k response
func (o *GetClustersOK) Code() int {
	return 200
}

func (o *GetClustersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersOK %s", 200, payload)
}

func (o *GetClustersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersOK %s", 200, payload)
}

func (o *GetClustersOK) GetPayload() []*models.AbstractCluster {
	return o.Payload
}

func (o *GetClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersBadRequest creates a GetClustersBadRequest with default headers values
func NewGetClustersBadRequest() *GetClustersBadRequest {
	return &GetClustersBadRequest{}
}

/*
GetClustersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetClustersBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters bad request response has a 2xx status code
func (o *GetClustersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters bad request response has a 3xx status code
func (o *GetClustersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters bad request response has a 4xx status code
func (o *GetClustersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters bad request response has a 5xx status code
func (o *GetClustersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters bad request response a status code equal to that given
func (o *GetClustersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get clusters bad request response
func (o *GetClustersBadRequest) Code() int {
	return 400
}

func (o *GetClustersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersBadRequest %s", 400, payload)
}

func (o *GetClustersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersBadRequest %s", 400, payload)
}

func (o *GetClustersBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersNotFound creates a GetClustersNotFound with default headers values
func NewGetClustersNotFound() *GetClustersNotFound {
	return &GetClustersNotFound{}
}

/*
GetClustersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClustersNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters not found response has a 2xx status code
func (o *GetClustersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters not found response has a 3xx status code
func (o *GetClustersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters not found response has a 4xx status code
func (o *GetClustersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters not found response has a 5xx status code
func (o *GetClustersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters not found response a status code equal to that given
func (o *GetClustersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get clusters not found response
func (o *GetClustersNotFound) Code() int {
	return 404
}

func (o *GetClustersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersNotFound %s", 404, payload)
}

func (o *GetClustersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersNotFound %s", 404, payload)
}

func (o *GetClustersNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersMethodNotAllowed creates a GetClustersMethodNotAllowed with default headers values
func NewGetClustersMethodNotAllowed() *GetClustersMethodNotAllowed {
	return &GetClustersMethodNotAllowed{}
}

/*
GetClustersMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetClustersMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters method not allowed response has a 2xx status code
func (o *GetClustersMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters method not allowed response has a 3xx status code
func (o *GetClustersMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters method not allowed response has a 4xx status code
func (o *GetClustersMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters method not allowed response has a 5xx status code
func (o *GetClustersMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters method not allowed response a status code equal to that given
func (o *GetClustersMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get clusters method not allowed response
func (o *GetClustersMethodNotAllowed) Code() int {
	return 405
}

func (o *GetClustersMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetClustersMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetClustersMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersInternalServerError creates a GetClustersInternalServerError with default headers values
func NewGetClustersInternalServerError() *GetClustersInternalServerError {
	return &GetClustersInternalServerError{}
}

/*
GetClustersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetClustersInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters internal server error response has a 2xx status code
func (o *GetClustersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters internal server error response has a 3xx status code
func (o *GetClustersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters internal server error response has a 4xx status code
func (o *GetClustersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get clusters internal server error response has a 5xx status code
func (o *GetClustersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get clusters internal server error response a status code equal to that given
func (o *GetClustersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get clusters internal server error response
func (o *GetClustersInternalServerError) Code() int {
	return 500
}

func (o *GetClustersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersInternalServerError %s", 500, payload)
}

func (o *GetClustersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters][%d] getClustersInternalServerError %s", 500, payload)
}

func (o *GetClustersInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
