// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// MigrateOverridesToGitV2UsingPOSTReader is a Reader for the MigrateOverridesToGitV2UsingPOST structure.
type MigrateOverridesToGitV2UsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MigrateOverridesToGitV2UsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewMigrateOverridesToGitV2UsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewMigrateOverridesToGitV2UsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewMigrateOverridesToGitV2UsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewMigrateOverridesToGitV2UsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewMigrateOverridesToGitV2UsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/migrate-overrides-v2] migrateOverridesToGitV2UsingPOST", response, response.Code())
	}
}

// NewMigrateOverridesToGitV2UsingPOSTOK creates a MigrateOverridesToGitV2UsingPOSTOK with default headers values
func NewMigrateOverridesToGitV2UsingPOSTOK() *MigrateOverridesToGitV2UsingPOSTOK {
	return &MigrateOverridesToGitV2UsingPOSTOK{}
}

/*
MigrateOverridesToGitV2UsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type MigrateOverridesToGitV2UsingPOSTOK struct {
}

// IsSuccess returns true when this migrate overrides to git v2 using p o s t o k response has a 2xx status code
func (o *MigrateOverridesToGitV2UsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this migrate overrides to git v2 using p o s t o k response has a 3xx status code
func (o *MigrateOverridesToGitV2UsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git v2 using p o s t o k response has a 4xx status code
func (o *MigrateOverridesToGitV2UsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this migrate overrides to git v2 using p o s t o k response has a 5xx status code
func (o *MigrateOverridesToGitV2UsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git v2 using p o s t o k response a status code equal to that given
func (o *MigrateOverridesToGitV2UsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the migrate overrides to git v2 using p o s t o k response
func (o *MigrateOverridesToGitV2UsingPOSTOK) Code() int {
	return 200
}

func (o *MigrateOverridesToGitV2UsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTOK", 200)
}

func (o *MigrateOverridesToGitV2UsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTOK", 200)
}

func (o *MigrateOverridesToGitV2UsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMigrateOverridesToGitV2UsingPOSTCreated creates a MigrateOverridesToGitV2UsingPOSTCreated with default headers values
func NewMigrateOverridesToGitV2UsingPOSTCreated() *MigrateOverridesToGitV2UsingPOSTCreated {
	return &MigrateOverridesToGitV2UsingPOSTCreated{}
}

/*
MigrateOverridesToGitV2UsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type MigrateOverridesToGitV2UsingPOSTCreated struct {
}

// IsSuccess returns true when this migrate overrides to git v2 using p o s t created response has a 2xx status code
func (o *MigrateOverridesToGitV2UsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this migrate overrides to git v2 using p o s t created response has a 3xx status code
func (o *MigrateOverridesToGitV2UsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git v2 using p o s t created response has a 4xx status code
func (o *MigrateOverridesToGitV2UsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this migrate overrides to git v2 using p o s t created response has a 5xx status code
func (o *MigrateOverridesToGitV2UsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git v2 using p o s t created response a status code equal to that given
func (o *MigrateOverridesToGitV2UsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the migrate overrides to git v2 using p o s t created response
func (o *MigrateOverridesToGitV2UsingPOSTCreated) Code() int {
	return 201
}

func (o *MigrateOverridesToGitV2UsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTCreated", 201)
}

func (o *MigrateOverridesToGitV2UsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTCreated", 201)
}

func (o *MigrateOverridesToGitV2UsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMigrateOverridesToGitV2UsingPOSTUnauthorized creates a MigrateOverridesToGitV2UsingPOSTUnauthorized with default headers values
func NewMigrateOverridesToGitV2UsingPOSTUnauthorized() *MigrateOverridesToGitV2UsingPOSTUnauthorized {
	return &MigrateOverridesToGitV2UsingPOSTUnauthorized{}
}

/*
MigrateOverridesToGitV2UsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type MigrateOverridesToGitV2UsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this migrate overrides to git v2 using p o s t unauthorized response has a 2xx status code
func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this migrate overrides to git v2 using p o s t unauthorized response has a 3xx status code
func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git v2 using p o s t unauthorized response has a 4xx status code
func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this migrate overrides to git v2 using p o s t unauthorized response has a 5xx status code
func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git v2 using p o s t unauthorized response a status code equal to that given
func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the migrate overrides to git v2 using p o s t unauthorized response
func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTUnauthorized", 401)
}

func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTUnauthorized", 401)
}

func (o *MigrateOverridesToGitV2UsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMigrateOverridesToGitV2UsingPOSTForbidden creates a MigrateOverridesToGitV2UsingPOSTForbidden with default headers values
func NewMigrateOverridesToGitV2UsingPOSTForbidden() *MigrateOverridesToGitV2UsingPOSTForbidden {
	return &MigrateOverridesToGitV2UsingPOSTForbidden{}
}

/*
MigrateOverridesToGitV2UsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type MigrateOverridesToGitV2UsingPOSTForbidden struct {
}

// IsSuccess returns true when this migrate overrides to git v2 using p o s t forbidden response has a 2xx status code
func (o *MigrateOverridesToGitV2UsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this migrate overrides to git v2 using p o s t forbidden response has a 3xx status code
func (o *MigrateOverridesToGitV2UsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git v2 using p o s t forbidden response has a 4xx status code
func (o *MigrateOverridesToGitV2UsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this migrate overrides to git v2 using p o s t forbidden response has a 5xx status code
func (o *MigrateOverridesToGitV2UsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git v2 using p o s t forbidden response a status code equal to that given
func (o *MigrateOverridesToGitV2UsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the migrate overrides to git v2 using p o s t forbidden response
func (o *MigrateOverridesToGitV2UsingPOSTForbidden) Code() int {
	return 403
}

func (o *MigrateOverridesToGitV2UsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTForbidden", 403)
}

func (o *MigrateOverridesToGitV2UsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTForbidden", 403)
}

func (o *MigrateOverridesToGitV2UsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewMigrateOverridesToGitV2UsingPOSTNotFound creates a MigrateOverridesToGitV2UsingPOSTNotFound with default headers values
func NewMigrateOverridesToGitV2UsingPOSTNotFound() *MigrateOverridesToGitV2UsingPOSTNotFound {
	return &MigrateOverridesToGitV2UsingPOSTNotFound{}
}

/*
MigrateOverridesToGitV2UsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type MigrateOverridesToGitV2UsingPOSTNotFound struct {
}

// IsSuccess returns true when this migrate overrides to git v2 using p o s t not found response has a 2xx status code
func (o *MigrateOverridesToGitV2UsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this migrate overrides to git v2 using p o s t not found response has a 3xx status code
func (o *MigrateOverridesToGitV2UsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this migrate overrides to git v2 using p o s t not found response has a 4xx status code
func (o *MigrateOverridesToGitV2UsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this migrate overrides to git v2 using p o s t not found response has a 5xx status code
func (o *MigrateOverridesToGitV2UsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this migrate overrides to git v2 using p o s t not found response a status code equal to that given
func (o *MigrateOverridesToGitV2UsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the migrate overrides to git v2 using p o s t not found response
func (o *MigrateOverridesToGitV2UsingPOSTNotFound) Code() int {
	return 404
}

func (o *MigrateOverridesToGitV2UsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTNotFound", 404)
}

func (o *MigrateOverridesToGitV2UsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/migrate-overrides-v2][%d] migrateOverridesToGitV2UsingPOSTNotFound", 404)
}

func (o *MigrateOverridesToGitV2UsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
