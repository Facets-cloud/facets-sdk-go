// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllClustersReader is a Reader for the GetAllClusters structure.
type GetAllClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllClustersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllClustersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllClustersMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllClustersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/clusters] getAllClusters", response, response.Code())
	}
}

// NewGetAllClustersOK creates a GetAllClustersOK with default headers values
func NewGetAllClustersOK() *GetAllClustersOK {
	return &GetAllClustersOK{}
}

/*
GetAllClustersOK describes a response with status code 200, with default header values.

OK
*/
type GetAllClustersOK struct {
	Payload *models.PageAbstractCluster
}

// IsSuccess returns true when this get all clusters o k response has a 2xx status code
func (o *GetAllClustersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all clusters o k response has a 3xx status code
func (o *GetAllClustersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters o k response has a 4xx status code
func (o *GetAllClustersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all clusters o k response has a 5xx status code
func (o *GetAllClustersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters o k response a status code equal to that given
func (o *GetAllClustersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all clusters o k response
func (o *GetAllClustersOK) Code() int {
	return 200
}

func (o *GetAllClustersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersOK %s", 200, payload)
}

func (o *GetAllClustersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersOK %s", 200, payload)
}

func (o *GetAllClustersOK) GetPayload() *models.PageAbstractCluster {
	return o.Payload
}

func (o *GetAllClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageAbstractCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllClustersBadRequest creates a GetAllClustersBadRequest with default headers values
func NewGetAllClustersBadRequest() *GetAllClustersBadRequest {
	return &GetAllClustersBadRequest{}
}

/*
GetAllClustersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllClustersBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all clusters bad request response has a 2xx status code
func (o *GetAllClustersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all clusters bad request response has a 3xx status code
func (o *GetAllClustersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters bad request response has a 4xx status code
func (o *GetAllClustersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all clusters bad request response has a 5xx status code
func (o *GetAllClustersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters bad request response a status code equal to that given
func (o *GetAllClustersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all clusters bad request response
func (o *GetAllClustersBadRequest) Code() int {
	return 400
}

func (o *GetAllClustersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersBadRequest %s", 400, payload)
}

func (o *GetAllClustersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersBadRequest %s", 400, payload)
}

func (o *GetAllClustersBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllClustersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllClustersNotFound creates a GetAllClustersNotFound with default headers values
func NewGetAllClustersNotFound() *GetAllClustersNotFound {
	return &GetAllClustersNotFound{}
}

/*
GetAllClustersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllClustersNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all clusters not found response has a 2xx status code
func (o *GetAllClustersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all clusters not found response has a 3xx status code
func (o *GetAllClustersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters not found response has a 4xx status code
func (o *GetAllClustersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all clusters not found response has a 5xx status code
func (o *GetAllClustersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters not found response a status code equal to that given
func (o *GetAllClustersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all clusters not found response
func (o *GetAllClustersNotFound) Code() int {
	return 404
}

func (o *GetAllClustersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersNotFound %s", 404, payload)
}

func (o *GetAllClustersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersNotFound %s", 404, payload)
}

func (o *GetAllClustersNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllClustersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllClustersMethodNotAllowed creates a GetAllClustersMethodNotAllowed with default headers values
func NewGetAllClustersMethodNotAllowed() *GetAllClustersMethodNotAllowed {
	return &GetAllClustersMethodNotAllowed{}
}

/*
GetAllClustersMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllClustersMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all clusters method not allowed response has a 2xx status code
func (o *GetAllClustersMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all clusters method not allowed response has a 3xx status code
func (o *GetAllClustersMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters method not allowed response has a 4xx status code
func (o *GetAllClustersMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all clusters method not allowed response has a 5xx status code
func (o *GetAllClustersMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all clusters method not allowed response a status code equal to that given
func (o *GetAllClustersMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all clusters method not allowed response
func (o *GetAllClustersMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllClustersMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetAllClustersMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetAllClustersMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllClustersMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllClustersInternalServerError creates a GetAllClustersInternalServerError with default headers values
func NewGetAllClustersInternalServerError() *GetAllClustersInternalServerError {
	return &GetAllClustersInternalServerError{}
}

/*
GetAllClustersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllClustersInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all clusters internal server error response has a 2xx status code
func (o *GetAllClustersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all clusters internal server error response has a 3xx status code
func (o *GetAllClustersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all clusters internal server error response has a 4xx status code
func (o *GetAllClustersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all clusters internal server error response has a 5xx status code
func (o *GetAllClustersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all clusters internal server error response a status code equal to that given
func (o *GetAllClustersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all clusters internal server error response
func (o *GetAllClustersInternalServerError) Code() int {
	return 500
}

func (o *GetAllClustersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersInternalServerError %s", 500, payload)
}

func (o *GetAllClustersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/clusters][%d] getAllClustersInternalServerError %s", 500, payload)
}

func (o *GetAllClustersInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllClustersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
