// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClustersWithStatusReader is a Reader for the GetClustersWithStatus structure.
type GetClustersWithStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClustersWithStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClustersWithStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClustersWithStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClustersWithStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetClustersWithStatusMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClustersWithStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus] getClustersWithStatus", response, response.Code())
	}
}

// NewGetClustersWithStatusOK creates a GetClustersWithStatusOK with default headers values
func NewGetClustersWithStatusOK() *GetClustersWithStatusOK {
	return &GetClustersWithStatusOK{}
}

/*
GetClustersWithStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetClustersWithStatusOK struct {
	Payload []*models.AbstractCluster
}

// IsSuccess returns true when this get clusters with status o k response has a 2xx status code
func (o *GetClustersWithStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get clusters with status o k response has a 3xx status code
func (o *GetClustersWithStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status o k response has a 4xx status code
func (o *GetClustersWithStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get clusters with status o k response has a 5xx status code
func (o *GetClustersWithStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status o k response a status code equal to that given
func (o *GetClustersWithStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get clusters with status o k response
func (o *GetClustersWithStatusOK) Code() int {
	return 200
}

func (o *GetClustersWithStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusOK %s", 200, payload)
}

func (o *GetClustersWithStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusOK %s", 200, payload)
}

func (o *GetClustersWithStatusOK) GetPayload() []*models.AbstractCluster {
	return o.Payload
}

func (o *GetClustersWithStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersWithStatusBadRequest creates a GetClustersWithStatusBadRequest with default headers values
func NewGetClustersWithStatusBadRequest() *GetClustersWithStatusBadRequest {
	return &GetClustersWithStatusBadRequest{}
}

/*
GetClustersWithStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetClustersWithStatusBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters with status bad request response has a 2xx status code
func (o *GetClustersWithStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters with status bad request response has a 3xx status code
func (o *GetClustersWithStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status bad request response has a 4xx status code
func (o *GetClustersWithStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters with status bad request response has a 5xx status code
func (o *GetClustersWithStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status bad request response a status code equal to that given
func (o *GetClustersWithStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get clusters with status bad request response
func (o *GetClustersWithStatusBadRequest) Code() int {
	return 400
}

func (o *GetClustersWithStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusBadRequest %s", 400, payload)
}

func (o *GetClustersWithStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusBadRequest %s", 400, payload)
}

func (o *GetClustersWithStatusBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersWithStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersWithStatusNotFound creates a GetClustersWithStatusNotFound with default headers values
func NewGetClustersWithStatusNotFound() *GetClustersWithStatusNotFound {
	return &GetClustersWithStatusNotFound{}
}

/*
GetClustersWithStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClustersWithStatusNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters with status not found response has a 2xx status code
func (o *GetClustersWithStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters with status not found response has a 3xx status code
func (o *GetClustersWithStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status not found response has a 4xx status code
func (o *GetClustersWithStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters with status not found response has a 5xx status code
func (o *GetClustersWithStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status not found response a status code equal to that given
func (o *GetClustersWithStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get clusters with status not found response
func (o *GetClustersWithStatusNotFound) Code() int {
	return 404
}

func (o *GetClustersWithStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusNotFound %s", 404, payload)
}

func (o *GetClustersWithStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusNotFound %s", 404, payload)
}

func (o *GetClustersWithStatusNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersWithStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersWithStatusMethodNotAllowed creates a GetClustersWithStatusMethodNotAllowed with default headers values
func NewGetClustersWithStatusMethodNotAllowed() *GetClustersWithStatusMethodNotAllowed {
	return &GetClustersWithStatusMethodNotAllowed{}
}

/*
GetClustersWithStatusMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetClustersWithStatusMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters with status method not allowed response has a 2xx status code
func (o *GetClustersWithStatusMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters with status method not allowed response has a 3xx status code
func (o *GetClustersWithStatusMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status method not allowed response has a 4xx status code
func (o *GetClustersWithStatusMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters with status method not allowed response has a 5xx status code
func (o *GetClustersWithStatusMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters with status method not allowed response a status code equal to that given
func (o *GetClustersWithStatusMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get clusters with status method not allowed response
func (o *GetClustersWithStatusMethodNotAllowed) Code() int {
	return 405
}

func (o *GetClustersWithStatusMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusMethodNotAllowed %s", 405, payload)
}

func (o *GetClustersWithStatusMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusMethodNotAllowed %s", 405, payload)
}

func (o *GetClustersWithStatusMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersWithStatusMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersWithStatusInternalServerError creates a GetClustersWithStatusInternalServerError with default headers values
func NewGetClustersWithStatusInternalServerError() *GetClustersWithStatusInternalServerError {
	return &GetClustersWithStatusInternalServerError{}
}

/*
GetClustersWithStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetClustersWithStatusInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get clusters with status internal server error response has a 2xx status code
func (o *GetClustersWithStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters with status internal server error response has a 3xx status code
func (o *GetClustersWithStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters with status internal server error response has a 4xx status code
func (o *GetClustersWithStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get clusters with status internal server error response has a 5xx status code
func (o *GetClustersWithStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get clusters with status internal server error response a status code equal to that given
func (o *GetClustersWithStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get clusters with status internal server error response
func (o *GetClustersWithStatusInternalServerError) Code() int {
	return 500
}

func (o *GetClustersWithStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusInternalServerError %s", 500, payload)
}

func (o *GetClustersWithStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clustersWithStatus][%d] getClustersWithStatusInternalServerError %s", 500, payload)
}

func (o *GetClustersWithStatusInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClustersWithStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
