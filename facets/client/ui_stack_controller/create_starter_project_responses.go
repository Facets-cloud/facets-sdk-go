// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateStarterProjectReader is a Reader for the CreateStarterProject structure.
type CreateStarterProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStarterProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateStarterProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateStarterProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateStarterProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateStarterProjectMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateStarterProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/starter-project] createStarterProject", response, response.Code())
	}
}

// NewCreateStarterProjectOK creates a CreateStarterProjectOK with default headers values
func NewCreateStarterProjectOK() *CreateStarterProjectOK {
	return &CreateStarterProjectOK{}
}

/*
CreateStarterProjectOK describes a response with status code 200, with default header values.

OK
*/
type CreateStarterProjectOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this create starter project o k response has a 2xx status code
func (o *CreateStarterProjectOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create starter project o k response has a 3xx status code
func (o *CreateStarterProjectOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create starter project o k response has a 4xx status code
func (o *CreateStarterProjectOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create starter project o k response has a 5xx status code
func (o *CreateStarterProjectOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create starter project o k response a status code equal to that given
func (o *CreateStarterProjectOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create starter project o k response
func (o *CreateStarterProjectOK) Code() int {
	return 200
}

func (o *CreateStarterProjectOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectOK %s", 200, payload)
}

func (o *CreateStarterProjectOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectOK %s", 200, payload)
}

func (o *CreateStarterProjectOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *CreateStarterProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStarterProjectBadRequest creates a CreateStarterProjectBadRequest with default headers values
func NewCreateStarterProjectBadRequest() *CreateStarterProjectBadRequest {
	return &CreateStarterProjectBadRequest{}
}

/*
CreateStarterProjectBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateStarterProjectBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create starter project bad request response has a 2xx status code
func (o *CreateStarterProjectBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create starter project bad request response has a 3xx status code
func (o *CreateStarterProjectBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create starter project bad request response has a 4xx status code
func (o *CreateStarterProjectBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create starter project bad request response has a 5xx status code
func (o *CreateStarterProjectBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create starter project bad request response a status code equal to that given
func (o *CreateStarterProjectBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create starter project bad request response
func (o *CreateStarterProjectBadRequest) Code() int {
	return 400
}

func (o *CreateStarterProjectBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectBadRequest %s", 400, payload)
}

func (o *CreateStarterProjectBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectBadRequest %s", 400, payload)
}

func (o *CreateStarterProjectBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStarterProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStarterProjectNotFound creates a CreateStarterProjectNotFound with default headers values
func NewCreateStarterProjectNotFound() *CreateStarterProjectNotFound {
	return &CreateStarterProjectNotFound{}
}

/*
CreateStarterProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateStarterProjectNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create starter project not found response has a 2xx status code
func (o *CreateStarterProjectNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create starter project not found response has a 3xx status code
func (o *CreateStarterProjectNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create starter project not found response has a 4xx status code
func (o *CreateStarterProjectNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create starter project not found response has a 5xx status code
func (o *CreateStarterProjectNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create starter project not found response a status code equal to that given
func (o *CreateStarterProjectNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create starter project not found response
func (o *CreateStarterProjectNotFound) Code() int {
	return 404
}

func (o *CreateStarterProjectNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectNotFound %s", 404, payload)
}

func (o *CreateStarterProjectNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectNotFound %s", 404, payload)
}

func (o *CreateStarterProjectNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStarterProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStarterProjectMethodNotAllowed creates a CreateStarterProjectMethodNotAllowed with default headers values
func NewCreateStarterProjectMethodNotAllowed() *CreateStarterProjectMethodNotAllowed {
	return &CreateStarterProjectMethodNotAllowed{}
}

/*
CreateStarterProjectMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateStarterProjectMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create starter project method not allowed response has a 2xx status code
func (o *CreateStarterProjectMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create starter project method not allowed response has a 3xx status code
func (o *CreateStarterProjectMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create starter project method not allowed response has a 4xx status code
func (o *CreateStarterProjectMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create starter project method not allowed response has a 5xx status code
func (o *CreateStarterProjectMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create starter project method not allowed response a status code equal to that given
func (o *CreateStarterProjectMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create starter project method not allowed response
func (o *CreateStarterProjectMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateStarterProjectMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectMethodNotAllowed %s", 405, payload)
}

func (o *CreateStarterProjectMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectMethodNotAllowed %s", 405, payload)
}

func (o *CreateStarterProjectMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStarterProjectMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStarterProjectInternalServerError creates a CreateStarterProjectInternalServerError with default headers values
func NewCreateStarterProjectInternalServerError() *CreateStarterProjectInternalServerError {
	return &CreateStarterProjectInternalServerError{}
}

/*
CreateStarterProjectInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateStarterProjectInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create starter project internal server error response has a 2xx status code
func (o *CreateStarterProjectInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create starter project internal server error response has a 3xx status code
func (o *CreateStarterProjectInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create starter project internal server error response has a 4xx status code
func (o *CreateStarterProjectInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create starter project internal server error response has a 5xx status code
func (o *CreateStarterProjectInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create starter project internal server error response a status code equal to that given
func (o *CreateStarterProjectInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create starter project internal server error response
func (o *CreateStarterProjectInternalServerError) Code() int {
	return 500
}

func (o *CreateStarterProjectInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectInternalServerError %s", 500, payload)
}

func (o *CreateStarterProjectInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/starter-project][%d] createStarterProjectInternalServerError %s", 500, payload)
}

func (o *CreateStarterProjectInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateStarterProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
