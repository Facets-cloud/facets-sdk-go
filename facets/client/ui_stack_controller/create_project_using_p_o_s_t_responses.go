// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateProjectUsingPOSTReader is a Reader for the CreateProjectUsingPOST structure.
type CreateProjectUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateProjectUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateProjectUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateProjectUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateProjectUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateProjectUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateProjectUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/project] createProjectUsingPOST", response, response.Code())
	}
}

// NewCreateProjectUsingPOSTOK creates a CreateProjectUsingPOSTOK with default headers values
func NewCreateProjectUsingPOSTOK() *CreateProjectUsingPOSTOK {
	return &CreateProjectUsingPOSTOK{}
}

/*
CreateProjectUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateProjectUsingPOSTOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this create project using p o s t o k response has a 2xx status code
func (o *CreateProjectUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project using p o s t o k response has a 3xx status code
func (o *CreateProjectUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project using p o s t o k response has a 4xx status code
func (o *CreateProjectUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project using p o s t o k response has a 5xx status code
func (o *CreateProjectUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create project using p o s t o k response a status code equal to that given
func (o *CreateProjectUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create project using p o s t o k response
func (o *CreateProjectUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateProjectUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTOK %s", 200, payload)
}

func (o *CreateProjectUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTOK %s", 200, payload)
}

func (o *CreateProjectUsingPOSTOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *CreateProjectUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateProjectUsingPOSTCreated creates a CreateProjectUsingPOSTCreated with default headers values
func NewCreateProjectUsingPOSTCreated() *CreateProjectUsingPOSTCreated {
	return &CreateProjectUsingPOSTCreated{}
}

/*
CreateProjectUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateProjectUsingPOSTCreated struct {
}

// IsSuccess returns true when this create project using p o s t created response has a 2xx status code
func (o *CreateProjectUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create project using p o s t created response has a 3xx status code
func (o *CreateProjectUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project using p o s t created response has a 4xx status code
func (o *CreateProjectUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create project using p o s t created response has a 5xx status code
func (o *CreateProjectUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create project using p o s t created response a status code equal to that given
func (o *CreateProjectUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create project using p o s t created response
func (o *CreateProjectUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateProjectUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTCreated", 201)
}

func (o *CreateProjectUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTCreated", 201)
}

func (o *CreateProjectUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectUsingPOSTUnauthorized creates a CreateProjectUsingPOSTUnauthorized with default headers values
func NewCreateProjectUsingPOSTUnauthorized() *CreateProjectUsingPOSTUnauthorized {
	return &CreateProjectUsingPOSTUnauthorized{}
}

/*
CreateProjectUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateProjectUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create project using p o s t unauthorized response has a 2xx status code
func (o *CreateProjectUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project using p o s t unauthorized response has a 3xx status code
func (o *CreateProjectUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project using p o s t unauthorized response has a 4xx status code
func (o *CreateProjectUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project using p o s t unauthorized response has a 5xx status code
func (o *CreateProjectUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create project using p o s t unauthorized response a status code equal to that given
func (o *CreateProjectUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create project using p o s t unauthorized response
func (o *CreateProjectUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateProjectUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTUnauthorized", 401)
}

func (o *CreateProjectUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTUnauthorized", 401)
}

func (o *CreateProjectUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectUsingPOSTForbidden creates a CreateProjectUsingPOSTForbidden with default headers values
func NewCreateProjectUsingPOSTForbidden() *CreateProjectUsingPOSTForbidden {
	return &CreateProjectUsingPOSTForbidden{}
}

/*
CreateProjectUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateProjectUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create project using p o s t forbidden response has a 2xx status code
func (o *CreateProjectUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project using p o s t forbidden response has a 3xx status code
func (o *CreateProjectUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project using p o s t forbidden response has a 4xx status code
func (o *CreateProjectUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project using p o s t forbidden response has a 5xx status code
func (o *CreateProjectUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create project using p o s t forbidden response a status code equal to that given
func (o *CreateProjectUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create project using p o s t forbidden response
func (o *CreateProjectUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateProjectUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTForbidden", 403)
}

func (o *CreateProjectUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTForbidden", 403)
}

func (o *CreateProjectUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateProjectUsingPOSTNotFound creates a CreateProjectUsingPOSTNotFound with default headers values
func NewCreateProjectUsingPOSTNotFound() *CreateProjectUsingPOSTNotFound {
	return &CreateProjectUsingPOSTNotFound{}
}

/*
CreateProjectUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateProjectUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create project using p o s t not found response has a 2xx status code
func (o *CreateProjectUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create project using p o s t not found response has a 3xx status code
func (o *CreateProjectUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create project using p o s t not found response has a 4xx status code
func (o *CreateProjectUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create project using p o s t not found response has a 5xx status code
func (o *CreateProjectUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create project using p o s t not found response a status code equal to that given
func (o *CreateProjectUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create project using p o s t not found response
func (o *CreateProjectUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateProjectUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTNotFound", 404)
}

func (o *CreateProjectUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/project][%d] createProjectUsingPOSTNotFound", 404)
}

func (o *CreateProjectUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
