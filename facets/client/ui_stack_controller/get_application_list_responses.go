// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetApplicationListReader is a Reader for the GetApplicationList structure.
type GetApplicationListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetApplicationListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetApplicationListMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApplicationListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/] getApplicationList", response, response.Code())
	}
}

// NewGetApplicationListOK creates a GetApplicationListOK with default headers values
func NewGetApplicationListOK() *GetApplicationListOK {
	return &GetApplicationListOK{}
}

/*
GetApplicationListOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationListOK struct {
	Payload []string
}

// IsSuccess returns true when this get application list o k response has a 2xx status code
func (o *GetApplicationListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application list o k response has a 3xx status code
func (o *GetApplicationListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list o k response has a 4xx status code
func (o *GetApplicationListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application list o k response has a 5xx status code
func (o *GetApplicationListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list o k response a status code equal to that given
func (o *GetApplicationListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application list o k response
func (o *GetApplicationListOK) Code() int {
	return 200
}

func (o *GetApplicationListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListOK %s", 200, payload)
}

func (o *GetApplicationListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListOK %s", 200, payload)
}

func (o *GetApplicationListOK) GetPayload() []string {
	return o.Payload
}

func (o *GetApplicationListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListBadRequest creates a GetApplicationListBadRequest with default headers values
func NewGetApplicationListBadRequest() *GetApplicationListBadRequest {
	return &GetApplicationListBadRequest{}
}

/*
GetApplicationListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetApplicationListBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list bad request response has a 2xx status code
func (o *GetApplicationListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list bad request response has a 3xx status code
func (o *GetApplicationListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list bad request response has a 4xx status code
func (o *GetApplicationListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list bad request response has a 5xx status code
func (o *GetApplicationListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list bad request response a status code equal to that given
func (o *GetApplicationListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get application list bad request response
func (o *GetApplicationListBadRequest) Code() int {
	return 400
}

func (o *GetApplicationListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListBadRequest %s", 400, payload)
}

func (o *GetApplicationListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListBadRequest %s", 400, payload)
}

func (o *GetApplicationListBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListNotFound creates a GetApplicationListNotFound with default headers values
func NewGetApplicationListNotFound() *GetApplicationListNotFound {
	return &GetApplicationListNotFound{}
}

/*
GetApplicationListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationListNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list not found response has a 2xx status code
func (o *GetApplicationListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list not found response has a 3xx status code
func (o *GetApplicationListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list not found response has a 4xx status code
func (o *GetApplicationListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list not found response has a 5xx status code
func (o *GetApplicationListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list not found response a status code equal to that given
func (o *GetApplicationListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application list not found response
func (o *GetApplicationListNotFound) Code() int {
	return 404
}

func (o *GetApplicationListNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListNotFound %s", 404, payload)
}

func (o *GetApplicationListNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListNotFound %s", 404, payload)
}

func (o *GetApplicationListNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListMethodNotAllowed creates a GetApplicationListMethodNotAllowed with default headers values
func NewGetApplicationListMethodNotAllowed() *GetApplicationListMethodNotAllowed {
	return &GetApplicationListMethodNotAllowed{}
}

/*
GetApplicationListMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetApplicationListMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list method not allowed response has a 2xx status code
func (o *GetApplicationListMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list method not allowed response has a 3xx status code
func (o *GetApplicationListMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list method not allowed response has a 4xx status code
func (o *GetApplicationListMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list method not allowed response has a 5xx status code
func (o *GetApplicationListMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list method not allowed response a status code equal to that given
func (o *GetApplicationListMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get application list method not allowed response
func (o *GetApplicationListMethodNotAllowed) Code() int {
	return 405
}

func (o *GetApplicationListMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListMethodNotAllowed %s", 405, payload)
}

func (o *GetApplicationListMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListMethodNotAllowed %s", 405, payload)
}

func (o *GetApplicationListMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListInternalServerError creates a GetApplicationListInternalServerError with default headers values
func NewGetApplicationListInternalServerError() *GetApplicationListInternalServerError {
	return &GetApplicationListInternalServerError{}
}

/*
GetApplicationListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetApplicationListInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list internal server error response has a 2xx status code
func (o *GetApplicationListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list internal server error response has a 3xx status code
func (o *GetApplicationListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list internal server error response has a 4xx status code
func (o *GetApplicationListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application list internal server error response has a 5xx status code
func (o *GetApplicationListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get application list internal server error response a status code equal to that given
func (o *GetApplicationListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get application list internal server error response
func (o *GetApplicationListInternalServerError) Code() int {
	return 500
}

func (o *GetApplicationListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListInternalServerError %s", 500, payload)
}

func (o *GetApplicationListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/{resourceType}/][%d] getApplicationListInternalServerError %s", 500, payload)
}

func (o *GetApplicationListInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
