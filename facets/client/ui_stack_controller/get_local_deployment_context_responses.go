// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetLocalDeploymentContextReader is a Reader for the GetLocalDeploymentContext structure.
type GetLocalDeploymentContextReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLocalDeploymentContextReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLocalDeploymentContextOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLocalDeploymentContextBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLocalDeploymentContextNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetLocalDeploymentContextMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLocalDeploymentContextInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext] getLocalDeploymentContext", response, response.Code())
	}
}

// NewGetLocalDeploymentContextOK creates a GetLocalDeploymentContextOK with default headers values
func NewGetLocalDeploymentContextOK() *GetLocalDeploymentContextOK {
	return &GetLocalDeploymentContextOK{}
}

/*
GetLocalDeploymentContextOK describes a response with status code 200, with default header values.

OK
*/
type GetLocalDeploymentContextOK struct {
	Payload *models.DeploymentContext
}

// IsSuccess returns true when this get local deployment context o k response has a 2xx status code
func (o *GetLocalDeploymentContextOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get local deployment context o k response has a 3xx status code
func (o *GetLocalDeploymentContextOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local deployment context o k response has a 4xx status code
func (o *GetLocalDeploymentContextOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get local deployment context o k response has a 5xx status code
func (o *GetLocalDeploymentContextOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get local deployment context o k response a status code equal to that given
func (o *GetLocalDeploymentContextOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get local deployment context o k response
func (o *GetLocalDeploymentContextOK) Code() int {
	return 200
}

func (o *GetLocalDeploymentContextOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextOK %s", 200, payload)
}

func (o *GetLocalDeploymentContextOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextOK %s", 200, payload)
}

func (o *GetLocalDeploymentContextOK) GetPayload() *models.DeploymentContext {
	return o.Payload
}

func (o *GetLocalDeploymentContextOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentContext)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalDeploymentContextBadRequest creates a GetLocalDeploymentContextBadRequest with default headers values
func NewGetLocalDeploymentContextBadRequest() *GetLocalDeploymentContextBadRequest {
	return &GetLocalDeploymentContextBadRequest{}
}

/*
GetLocalDeploymentContextBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLocalDeploymentContextBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get local deployment context bad request response has a 2xx status code
func (o *GetLocalDeploymentContextBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local deployment context bad request response has a 3xx status code
func (o *GetLocalDeploymentContextBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local deployment context bad request response has a 4xx status code
func (o *GetLocalDeploymentContextBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get local deployment context bad request response has a 5xx status code
func (o *GetLocalDeploymentContextBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get local deployment context bad request response a status code equal to that given
func (o *GetLocalDeploymentContextBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get local deployment context bad request response
func (o *GetLocalDeploymentContextBadRequest) Code() int {
	return 400
}

func (o *GetLocalDeploymentContextBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextBadRequest %s", 400, payload)
}

func (o *GetLocalDeploymentContextBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextBadRequest %s", 400, payload)
}

func (o *GetLocalDeploymentContextBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLocalDeploymentContextBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalDeploymentContextNotFound creates a GetLocalDeploymentContextNotFound with default headers values
func NewGetLocalDeploymentContextNotFound() *GetLocalDeploymentContextNotFound {
	return &GetLocalDeploymentContextNotFound{}
}

/*
GetLocalDeploymentContextNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLocalDeploymentContextNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get local deployment context not found response has a 2xx status code
func (o *GetLocalDeploymentContextNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local deployment context not found response has a 3xx status code
func (o *GetLocalDeploymentContextNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local deployment context not found response has a 4xx status code
func (o *GetLocalDeploymentContextNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get local deployment context not found response has a 5xx status code
func (o *GetLocalDeploymentContextNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get local deployment context not found response a status code equal to that given
func (o *GetLocalDeploymentContextNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get local deployment context not found response
func (o *GetLocalDeploymentContextNotFound) Code() int {
	return 404
}

func (o *GetLocalDeploymentContextNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextNotFound %s", 404, payload)
}

func (o *GetLocalDeploymentContextNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextNotFound %s", 404, payload)
}

func (o *GetLocalDeploymentContextNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLocalDeploymentContextNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalDeploymentContextMethodNotAllowed creates a GetLocalDeploymentContextMethodNotAllowed with default headers values
func NewGetLocalDeploymentContextMethodNotAllowed() *GetLocalDeploymentContextMethodNotAllowed {
	return &GetLocalDeploymentContextMethodNotAllowed{}
}

/*
GetLocalDeploymentContextMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetLocalDeploymentContextMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get local deployment context method not allowed response has a 2xx status code
func (o *GetLocalDeploymentContextMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local deployment context method not allowed response has a 3xx status code
func (o *GetLocalDeploymentContextMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local deployment context method not allowed response has a 4xx status code
func (o *GetLocalDeploymentContextMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get local deployment context method not allowed response has a 5xx status code
func (o *GetLocalDeploymentContextMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get local deployment context method not allowed response a status code equal to that given
func (o *GetLocalDeploymentContextMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get local deployment context method not allowed response
func (o *GetLocalDeploymentContextMethodNotAllowed) Code() int {
	return 405
}

func (o *GetLocalDeploymentContextMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextMethodNotAllowed %s", 405, payload)
}

func (o *GetLocalDeploymentContextMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextMethodNotAllowed %s", 405, payload)
}

func (o *GetLocalDeploymentContextMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLocalDeploymentContextMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLocalDeploymentContextInternalServerError creates a GetLocalDeploymentContextInternalServerError with default headers values
func NewGetLocalDeploymentContextInternalServerError() *GetLocalDeploymentContextInternalServerError {
	return &GetLocalDeploymentContextInternalServerError{}
}

/*
GetLocalDeploymentContextInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLocalDeploymentContextInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get local deployment context internal server error response has a 2xx status code
func (o *GetLocalDeploymentContextInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get local deployment context internal server error response has a 3xx status code
func (o *GetLocalDeploymentContextInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get local deployment context internal server error response has a 4xx status code
func (o *GetLocalDeploymentContextInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get local deployment context internal server error response has a 5xx status code
func (o *GetLocalDeploymentContextInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get local deployment context internal server error response a status code equal to that given
func (o *GetLocalDeploymentContextInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get local deployment context internal server error response
func (o *GetLocalDeploymentContextInternalServerError) Code() int {
	return 500
}

func (o *GetLocalDeploymentContextInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextInternalServerError %s", 500, payload)
}

func (o *GetLocalDeploymentContextInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/localDeploymentContext][%d] getLocalDeploymentContextInternalServerError %s", 500, payload)
}

func (o *GetLocalDeploymentContextInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLocalDeploymentContextInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
