// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClusterMetadataByStackReader is a Reader for the GetClusterMetadataByStack structure.
type GetClusterMetadataByStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterMetadataByStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterMetadataByStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetClusterMetadataByStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterMetadataByStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetClusterMetadataByStackMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetClusterMetadataByStackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata] getClusterMetadataByStack", response, response.Code())
	}
}

// NewGetClusterMetadataByStackOK creates a GetClusterMetadataByStackOK with default headers values
func NewGetClusterMetadataByStackOK() *GetClusterMetadataByStackOK {
	return &GetClusterMetadataByStackOK{}
}

/*
GetClusterMetadataByStackOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterMetadataByStackOK struct {
	Payload []*models.ClusterMetadata
}

// IsSuccess returns true when this get cluster metadata by stack o k response has a 2xx status code
func (o *GetClusterMetadataByStackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster metadata by stack o k response has a 3xx status code
func (o *GetClusterMetadataByStackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata by stack o k response has a 4xx status code
func (o *GetClusterMetadataByStackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster metadata by stack o k response has a 5xx status code
func (o *GetClusterMetadataByStackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata by stack o k response a status code equal to that given
func (o *GetClusterMetadataByStackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster metadata by stack o k response
func (o *GetClusterMetadataByStackOK) Code() int {
	return 200
}

func (o *GetClusterMetadataByStackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackOK %s", 200, payload)
}

func (o *GetClusterMetadataByStackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackOK %s", 200, payload)
}

func (o *GetClusterMetadataByStackOK) GetPayload() []*models.ClusterMetadata {
	return o.Payload
}

func (o *GetClusterMetadataByStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetadataByStackBadRequest creates a GetClusterMetadataByStackBadRequest with default headers values
func NewGetClusterMetadataByStackBadRequest() *GetClusterMetadataByStackBadRequest {
	return &GetClusterMetadataByStackBadRequest{}
}

/*
GetClusterMetadataByStackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetClusterMetadataByStackBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster metadata by stack bad request response has a 2xx status code
func (o *GetClusterMetadataByStackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster metadata by stack bad request response has a 3xx status code
func (o *GetClusterMetadataByStackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata by stack bad request response has a 4xx status code
func (o *GetClusterMetadataByStackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster metadata by stack bad request response has a 5xx status code
func (o *GetClusterMetadataByStackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata by stack bad request response a status code equal to that given
func (o *GetClusterMetadataByStackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get cluster metadata by stack bad request response
func (o *GetClusterMetadataByStackBadRequest) Code() int {
	return 400
}

func (o *GetClusterMetadataByStackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackBadRequest %s", 400, payload)
}

func (o *GetClusterMetadataByStackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackBadRequest %s", 400, payload)
}

func (o *GetClusterMetadataByStackBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterMetadataByStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetadataByStackNotFound creates a GetClusterMetadataByStackNotFound with default headers values
func NewGetClusterMetadataByStackNotFound() *GetClusterMetadataByStackNotFound {
	return &GetClusterMetadataByStackNotFound{}
}

/*
GetClusterMetadataByStackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterMetadataByStackNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster metadata by stack not found response has a 2xx status code
func (o *GetClusterMetadataByStackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster metadata by stack not found response has a 3xx status code
func (o *GetClusterMetadataByStackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata by stack not found response has a 4xx status code
func (o *GetClusterMetadataByStackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster metadata by stack not found response has a 5xx status code
func (o *GetClusterMetadataByStackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata by stack not found response a status code equal to that given
func (o *GetClusterMetadataByStackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster metadata by stack not found response
func (o *GetClusterMetadataByStackNotFound) Code() int {
	return 404
}

func (o *GetClusterMetadataByStackNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackNotFound %s", 404, payload)
}

func (o *GetClusterMetadataByStackNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackNotFound %s", 404, payload)
}

func (o *GetClusterMetadataByStackNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterMetadataByStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetadataByStackMethodNotAllowed creates a GetClusterMetadataByStackMethodNotAllowed with default headers values
func NewGetClusterMetadataByStackMethodNotAllowed() *GetClusterMetadataByStackMethodNotAllowed {
	return &GetClusterMetadataByStackMethodNotAllowed{}
}

/*
GetClusterMetadataByStackMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetClusterMetadataByStackMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster metadata by stack method not allowed response has a 2xx status code
func (o *GetClusterMetadataByStackMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster metadata by stack method not allowed response has a 3xx status code
func (o *GetClusterMetadataByStackMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata by stack method not allowed response has a 4xx status code
func (o *GetClusterMetadataByStackMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster metadata by stack method not allowed response has a 5xx status code
func (o *GetClusterMetadataByStackMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster metadata by stack method not allowed response a status code equal to that given
func (o *GetClusterMetadataByStackMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get cluster metadata by stack method not allowed response
func (o *GetClusterMetadataByStackMethodNotAllowed) Code() int {
	return 405
}

func (o *GetClusterMetadataByStackMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetClusterMetadataByStackMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetClusterMetadataByStackMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterMetadataByStackMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterMetadataByStackInternalServerError creates a GetClusterMetadataByStackInternalServerError with default headers values
func NewGetClusterMetadataByStackInternalServerError() *GetClusterMetadataByStackInternalServerError {
	return &GetClusterMetadataByStackInternalServerError{}
}

/*
GetClusterMetadataByStackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetClusterMetadataByStackInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get cluster metadata by stack internal server error response has a 2xx status code
func (o *GetClusterMetadataByStackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster metadata by stack internal server error response has a 3xx status code
func (o *GetClusterMetadataByStackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster metadata by stack internal server error response has a 4xx status code
func (o *GetClusterMetadataByStackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster metadata by stack internal server error response has a 5xx status code
func (o *GetClusterMetadataByStackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get cluster metadata by stack internal server error response a status code equal to that given
func (o *GetClusterMetadataByStackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get cluster metadata by stack internal server error response
func (o *GetClusterMetadataByStackInternalServerError) Code() int {
	return 500
}

func (o *GetClusterMetadataByStackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackInternalServerError %s", 500, payload)
}

func (o *GetClusterMetadataByStackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/clusters-metadata][%d] getClusterMetadataByStackInternalServerError %s", 500, payload)
}

func (o *GetClusterMetadataByStackInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetClusterMetadataByStackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
