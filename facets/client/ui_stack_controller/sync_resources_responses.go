// Code generated by go-swagger; DO NOT EDIT.

package ui_stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SyncResourcesReader is a Reader for the SyncResources structure.
type SyncResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSyncResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSyncResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSyncResourcesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSyncResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/stacks/{stackName}/sync-resources] syncResources", response, response.Code())
	}
}

// NewSyncResourcesOK creates a SyncResourcesOK with default headers values
func NewSyncResourcesOK() *SyncResourcesOK {
	return &SyncResourcesOK{}
}

/*
SyncResourcesOK describes a response with status code 200, with default header values.

OK
*/
type SyncResourcesOK struct {
}

// IsSuccess returns true when this sync resources o k response has a 2xx status code
func (o *SyncResourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync resources o k response has a 3xx status code
func (o *SyncResourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources o k response has a 4xx status code
func (o *SyncResourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync resources o k response has a 5xx status code
func (o *SyncResourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources o k response a status code equal to that given
func (o *SyncResourcesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sync resources o k response
func (o *SyncResourcesOK) Code() int {
	return 200
}

func (o *SyncResourcesOK) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesOK", 200)
}

func (o *SyncResourcesOK) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesOK", 200)
}

func (o *SyncResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncResourcesBadRequest creates a SyncResourcesBadRequest with default headers values
func NewSyncResourcesBadRequest() *SyncResourcesBadRequest {
	return &SyncResourcesBadRequest{}
}

/*
SyncResourcesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SyncResourcesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync resources bad request response has a 2xx status code
func (o *SyncResourcesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync resources bad request response has a 3xx status code
func (o *SyncResourcesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources bad request response has a 4xx status code
func (o *SyncResourcesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync resources bad request response has a 5xx status code
func (o *SyncResourcesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources bad request response a status code equal to that given
func (o *SyncResourcesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the sync resources bad request response
func (o *SyncResourcesBadRequest) Code() int {
	return 400
}

func (o *SyncResourcesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesBadRequest %s", 400, payload)
}

func (o *SyncResourcesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesBadRequest %s", 400, payload)
}

func (o *SyncResourcesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncResourcesNotFound creates a SyncResourcesNotFound with default headers values
func NewSyncResourcesNotFound() *SyncResourcesNotFound {
	return &SyncResourcesNotFound{}
}

/*
SyncResourcesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SyncResourcesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync resources not found response has a 2xx status code
func (o *SyncResourcesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync resources not found response has a 3xx status code
func (o *SyncResourcesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources not found response has a 4xx status code
func (o *SyncResourcesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync resources not found response has a 5xx status code
func (o *SyncResourcesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources not found response a status code equal to that given
func (o *SyncResourcesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the sync resources not found response
func (o *SyncResourcesNotFound) Code() int {
	return 404
}

func (o *SyncResourcesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesNotFound %s", 404, payload)
}

func (o *SyncResourcesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesNotFound %s", 404, payload)
}

func (o *SyncResourcesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncResourcesMethodNotAllowed creates a SyncResourcesMethodNotAllowed with default headers values
func NewSyncResourcesMethodNotAllowed() *SyncResourcesMethodNotAllowed {
	return &SyncResourcesMethodNotAllowed{}
}

/*
SyncResourcesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SyncResourcesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync resources method not allowed response has a 2xx status code
func (o *SyncResourcesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync resources method not allowed response has a 3xx status code
func (o *SyncResourcesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources method not allowed response has a 4xx status code
func (o *SyncResourcesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync resources method not allowed response has a 5xx status code
func (o *SyncResourcesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this sync resources method not allowed response a status code equal to that given
func (o *SyncResourcesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the sync resources method not allowed response
func (o *SyncResourcesMethodNotAllowed) Code() int {
	return 405
}

func (o *SyncResourcesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesMethodNotAllowed %s", 405, payload)
}

func (o *SyncResourcesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesMethodNotAllowed %s", 405, payload)
}

func (o *SyncResourcesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncResourcesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncResourcesInternalServerError creates a SyncResourcesInternalServerError with default headers values
func NewSyncResourcesInternalServerError() *SyncResourcesInternalServerError {
	return &SyncResourcesInternalServerError{}
}

/*
SyncResourcesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SyncResourcesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync resources internal server error response has a 2xx status code
func (o *SyncResourcesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync resources internal server error response has a 3xx status code
func (o *SyncResourcesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync resources internal server error response has a 4xx status code
func (o *SyncResourcesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync resources internal server error response has a 5xx status code
func (o *SyncResourcesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this sync resources internal server error response a status code equal to that given
func (o *SyncResourcesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the sync resources internal server error response
func (o *SyncResourcesInternalServerError) Code() int {
	return 500
}

func (o *SyncResourcesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesInternalServerError %s", 500, payload)
}

func (o *SyncResourcesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/stacks/{stackName}/sync-resources][%d] syncResourcesInternalServerError %s", 500, payload)
}

func (o *SyncResourcesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
