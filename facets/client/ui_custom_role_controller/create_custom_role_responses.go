// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateCustomRoleReader is a Reader for the CreateCustomRole structure.
type CreateCustomRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCustomRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCustomRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCustomRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateCustomRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateCustomRoleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCustomRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/custom-role] createCustomRole", response, response.Code())
	}
}

// NewCreateCustomRoleOK creates a CreateCustomRoleOK with default headers values
func NewCreateCustomRoleOK() *CreateCustomRoleOK {
	return &CreateCustomRoleOK{}
}

/*
CreateCustomRoleOK describes a response with status code 200, with default header values.

OK
*/
type CreateCustomRoleOK struct {
	Payload *models.RoleMapping
}

// IsSuccess returns true when this create custom role o k response has a 2xx status code
func (o *CreateCustomRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create custom role o k response has a 3xx status code
func (o *CreateCustomRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role o k response has a 4xx status code
func (o *CreateCustomRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create custom role o k response has a 5xx status code
func (o *CreateCustomRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role o k response a status code equal to that given
func (o *CreateCustomRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create custom role o k response
func (o *CreateCustomRoleOK) Code() int {
	return 200
}

func (o *CreateCustomRoleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleOK %s", 200, payload)
}

func (o *CreateCustomRoleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleOK %s", 200, payload)
}

func (o *CreateCustomRoleOK) GetPayload() *models.RoleMapping {
	return o.Payload
}

func (o *CreateCustomRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRoleBadRequest creates a CreateCustomRoleBadRequest with default headers values
func NewCreateCustomRoleBadRequest() *CreateCustomRoleBadRequest {
	return &CreateCustomRoleBadRequest{}
}

/*
CreateCustomRoleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateCustomRoleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create custom role bad request response has a 2xx status code
func (o *CreateCustomRoleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create custom role bad request response has a 3xx status code
func (o *CreateCustomRoleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role bad request response has a 4xx status code
func (o *CreateCustomRoleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create custom role bad request response has a 5xx status code
func (o *CreateCustomRoleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role bad request response a status code equal to that given
func (o *CreateCustomRoleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create custom role bad request response
func (o *CreateCustomRoleBadRequest) Code() int {
	return 400
}

func (o *CreateCustomRoleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleBadRequest %s", 400, payload)
}

func (o *CreateCustomRoleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleBadRequest %s", 400, payload)
}

func (o *CreateCustomRoleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCustomRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRoleNotFound creates a CreateCustomRoleNotFound with default headers values
func NewCreateCustomRoleNotFound() *CreateCustomRoleNotFound {
	return &CreateCustomRoleNotFound{}
}

/*
CreateCustomRoleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateCustomRoleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create custom role not found response has a 2xx status code
func (o *CreateCustomRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create custom role not found response has a 3xx status code
func (o *CreateCustomRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role not found response has a 4xx status code
func (o *CreateCustomRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create custom role not found response has a 5xx status code
func (o *CreateCustomRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role not found response a status code equal to that given
func (o *CreateCustomRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create custom role not found response
func (o *CreateCustomRoleNotFound) Code() int {
	return 404
}

func (o *CreateCustomRoleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleNotFound %s", 404, payload)
}

func (o *CreateCustomRoleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleNotFound %s", 404, payload)
}

func (o *CreateCustomRoleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCustomRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRoleMethodNotAllowed creates a CreateCustomRoleMethodNotAllowed with default headers values
func NewCreateCustomRoleMethodNotAllowed() *CreateCustomRoleMethodNotAllowed {
	return &CreateCustomRoleMethodNotAllowed{}
}

/*
CreateCustomRoleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateCustomRoleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create custom role method not allowed response has a 2xx status code
func (o *CreateCustomRoleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create custom role method not allowed response has a 3xx status code
func (o *CreateCustomRoleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role method not allowed response has a 4xx status code
func (o *CreateCustomRoleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create custom role method not allowed response has a 5xx status code
func (o *CreateCustomRoleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role method not allowed response a status code equal to that given
func (o *CreateCustomRoleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create custom role method not allowed response
func (o *CreateCustomRoleMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateCustomRoleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleMethodNotAllowed %s", 405, payload)
}

func (o *CreateCustomRoleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleMethodNotAllowed %s", 405, payload)
}

func (o *CreateCustomRoleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCustomRoleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRoleInternalServerError creates a CreateCustomRoleInternalServerError with default headers values
func NewCreateCustomRoleInternalServerError() *CreateCustomRoleInternalServerError {
	return &CreateCustomRoleInternalServerError{}
}

/*
CreateCustomRoleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateCustomRoleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create custom role internal server error response has a 2xx status code
func (o *CreateCustomRoleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create custom role internal server error response has a 3xx status code
func (o *CreateCustomRoleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role internal server error response has a 4xx status code
func (o *CreateCustomRoleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create custom role internal server error response has a 5xx status code
func (o *CreateCustomRoleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create custom role internal server error response a status code equal to that given
func (o *CreateCustomRoleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create custom role internal server error response
func (o *CreateCustomRoleInternalServerError) Code() int {
	return 500
}

func (o *CreateCustomRoleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleInternalServerError %s", 500, payload)
}

func (o *CreateCustomRoleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleInternalServerError %s", 500, payload)
}

func (o *CreateCustomRoleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCustomRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
