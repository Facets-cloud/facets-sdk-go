// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetCustomRoleReader is a Reader for the GetCustomRole structure.
type GetCustomRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCustomRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCustomRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCustomRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCustomRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetCustomRoleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCustomRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/custom-role/{roleName}] getCustomRole", response, response.Code())
	}
}

// NewGetCustomRoleOK creates a GetCustomRoleOK with default headers values
func NewGetCustomRoleOK() *GetCustomRoleOK {
	return &GetCustomRoleOK{}
}

/*
GetCustomRoleOK describes a response with status code 200, with default header values.

OK
*/
type GetCustomRoleOK struct {
	Payload *models.RoleMapping
}

// IsSuccess returns true when this get custom role o k response has a 2xx status code
func (o *GetCustomRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get custom role o k response has a 3xx status code
func (o *GetCustomRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom role o k response has a 4xx status code
func (o *GetCustomRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get custom role o k response has a 5xx status code
func (o *GetCustomRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom role o k response a status code equal to that given
func (o *GetCustomRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get custom role o k response
func (o *GetCustomRoleOK) Code() int {
	return 200
}

func (o *GetCustomRoleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleOK %s", 200, payload)
}

func (o *GetCustomRoleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleOK %s", 200, payload)
}

func (o *GetCustomRoleOK) GetPayload() *models.RoleMapping {
	return o.Payload
}

func (o *GetCustomRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRoleBadRequest creates a GetCustomRoleBadRequest with default headers values
func NewGetCustomRoleBadRequest() *GetCustomRoleBadRequest {
	return &GetCustomRoleBadRequest{}
}

/*
GetCustomRoleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCustomRoleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get custom role bad request response has a 2xx status code
func (o *GetCustomRoleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom role bad request response has a 3xx status code
func (o *GetCustomRoleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom role bad request response has a 4xx status code
func (o *GetCustomRoleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom role bad request response has a 5xx status code
func (o *GetCustomRoleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom role bad request response a status code equal to that given
func (o *GetCustomRoleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get custom role bad request response
func (o *GetCustomRoleBadRequest) Code() int {
	return 400
}

func (o *GetCustomRoleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleBadRequest %s", 400, payload)
}

func (o *GetCustomRoleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleBadRequest %s", 400, payload)
}

func (o *GetCustomRoleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCustomRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRoleNotFound creates a GetCustomRoleNotFound with default headers values
func NewGetCustomRoleNotFound() *GetCustomRoleNotFound {
	return &GetCustomRoleNotFound{}
}

/*
GetCustomRoleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCustomRoleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get custom role not found response has a 2xx status code
func (o *GetCustomRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom role not found response has a 3xx status code
func (o *GetCustomRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom role not found response has a 4xx status code
func (o *GetCustomRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom role not found response has a 5xx status code
func (o *GetCustomRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom role not found response a status code equal to that given
func (o *GetCustomRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get custom role not found response
func (o *GetCustomRoleNotFound) Code() int {
	return 404
}

func (o *GetCustomRoleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleNotFound %s", 404, payload)
}

func (o *GetCustomRoleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleNotFound %s", 404, payload)
}

func (o *GetCustomRoleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCustomRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRoleMethodNotAllowed creates a GetCustomRoleMethodNotAllowed with default headers values
func NewGetCustomRoleMethodNotAllowed() *GetCustomRoleMethodNotAllowed {
	return &GetCustomRoleMethodNotAllowed{}
}

/*
GetCustomRoleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetCustomRoleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get custom role method not allowed response has a 2xx status code
func (o *GetCustomRoleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom role method not allowed response has a 3xx status code
func (o *GetCustomRoleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom role method not allowed response has a 4xx status code
func (o *GetCustomRoleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get custom role method not allowed response has a 5xx status code
func (o *GetCustomRoleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get custom role method not allowed response a status code equal to that given
func (o *GetCustomRoleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get custom role method not allowed response
func (o *GetCustomRoleMethodNotAllowed) Code() int {
	return 405
}

func (o *GetCustomRoleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleMethodNotAllowed %s", 405, payload)
}

func (o *GetCustomRoleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleMethodNotAllowed %s", 405, payload)
}

func (o *GetCustomRoleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCustomRoleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCustomRoleInternalServerError creates a GetCustomRoleInternalServerError with default headers values
func NewGetCustomRoleInternalServerError() *GetCustomRoleInternalServerError {
	return &GetCustomRoleInternalServerError{}
}

/*
GetCustomRoleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCustomRoleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get custom role internal server error response has a 2xx status code
func (o *GetCustomRoleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get custom role internal server error response has a 3xx status code
func (o *GetCustomRoleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get custom role internal server error response has a 4xx status code
func (o *GetCustomRoleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get custom role internal server error response has a 5xx status code
func (o *GetCustomRoleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get custom role internal server error response a status code equal to that given
func (o *GetCustomRoleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get custom role internal server error response
func (o *GetCustomRoleInternalServerError) Code() int {
	return 500
}

func (o *GetCustomRoleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleInternalServerError %s", 500, payload)
}

func (o *GetCustomRoleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/{roleName}][%d] getCustomRoleInternalServerError %s", 500, payload)
}

func (o *GetCustomRoleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCustomRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
