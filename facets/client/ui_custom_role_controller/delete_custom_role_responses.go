// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteCustomRoleReader is a Reader for the DeleteCustomRole structure.
type DeleteCustomRoleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCustomRoleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCustomRoleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteCustomRoleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteCustomRoleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteCustomRoleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteCustomRoleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/custom-role/{roleName}] deleteCustomRole", response, response.Code())
	}
}

// NewDeleteCustomRoleOK creates a DeleteCustomRoleOK with default headers values
func NewDeleteCustomRoleOK() *DeleteCustomRoleOK {
	return &DeleteCustomRoleOK{}
}

/*
DeleteCustomRoleOK describes a response with status code 200, with default header values.

OK
*/
type DeleteCustomRoleOK struct {
}

// IsSuccess returns true when this delete custom role o k response has a 2xx status code
func (o *DeleteCustomRoleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete custom role o k response has a 3xx status code
func (o *DeleteCustomRoleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom role o k response has a 4xx status code
func (o *DeleteCustomRoleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete custom role o k response has a 5xx status code
func (o *DeleteCustomRoleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete custom role o k response a status code equal to that given
func (o *DeleteCustomRoleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete custom role o k response
func (o *DeleteCustomRoleOK) Code() int {
	return 200
}

func (o *DeleteCustomRoleOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleOK", 200)
}

func (o *DeleteCustomRoleOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleOK", 200)
}

func (o *DeleteCustomRoleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteCustomRoleBadRequest creates a DeleteCustomRoleBadRequest with default headers values
func NewDeleteCustomRoleBadRequest() *DeleteCustomRoleBadRequest {
	return &DeleteCustomRoleBadRequest{}
}

/*
DeleteCustomRoleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteCustomRoleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete custom role bad request response has a 2xx status code
func (o *DeleteCustomRoleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete custom role bad request response has a 3xx status code
func (o *DeleteCustomRoleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom role bad request response has a 4xx status code
func (o *DeleteCustomRoleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete custom role bad request response has a 5xx status code
func (o *DeleteCustomRoleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete custom role bad request response a status code equal to that given
func (o *DeleteCustomRoleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete custom role bad request response
func (o *DeleteCustomRoleBadRequest) Code() int {
	return 400
}

func (o *DeleteCustomRoleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleBadRequest %s", 400, payload)
}

func (o *DeleteCustomRoleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleBadRequest %s", 400, payload)
}

func (o *DeleteCustomRoleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteCustomRoleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomRoleNotFound creates a DeleteCustomRoleNotFound with default headers values
func NewDeleteCustomRoleNotFound() *DeleteCustomRoleNotFound {
	return &DeleteCustomRoleNotFound{}
}

/*
DeleteCustomRoleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteCustomRoleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete custom role not found response has a 2xx status code
func (o *DeleteCustomRoleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete custom role not found response has a 3xx status code
func (o *DeleteCustomRoleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom role not found response has a 4xx status code
func (o *DeleteCustomRoleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete custom role not found response has a 5xx status code
func (o *DeleteCustomRoleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete custom role not found response a status code equal to that given
func (o *DeleteCustomRoleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete custom role not found response
func (o *DeleteCustomRoleNotFound) Code() int {
	return 404
}

func (o *DeleteCustomRoleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleNotFound %s", 404, payload)
}

func (o *DeleteCustomRoleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleNotFound %s", 404, payload)
}

func (o *DeleteCustomRoleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteCustomRoleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomRoleMethodNotAllowed creates a DeleteCustomRoleMethodNotAllowed with default headers values
func NewDeleteCustomRoleMethodNotAllowed() *DeleteCustomRoleMethodNotAllowed {
	return &DeleteCustomRoleMethodNotAllowed{}
}

/*
DeleteCustomRoleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteCustomRoleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete custom role method not allowed response has a 2xx status code
func (o *DeleteCustomRoleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete custom role method not allowed response has a 3xx status code
func (o *DeleteCustomRoleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom role method not allowed response has a 4xx status code
func (o *DeleteCustomRoleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete custom role method not allowed response has a 5xx status code
func (o *DeleteCustomRoleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete custom role method not allowed response a status code equal to that given
func (o *DeleteCustomRoleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete custom role method not allowed response
func (o *DeleteCustomRoleMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteCustomRoleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteCustomRoleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteCustomRoleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteCustomRoleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCustomRoleInternalServerError creates a DeleteCustomRoleInternalServerError with default headers values
func NewDeleteCustomRoleInternalServerError() *DeleteCustomRoleInternalServerError {
	return &DeleteCustomRoleInternalServerError{}
}

/*
DeleteCustomRoleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteCustomRoleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete custom role internal server error response has a 2xx status code
func (o *DeleteCustomRoleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete custom role internal server error response has a 3xx status code
func (o *DeleteCustomRoleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete custom role internal server error response has a 4xx status code
func (o *DeleteCustomRoleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete custom role internal server error response has a 5xx status code
func (o *DeleteCustomRoleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete custom role internal server error response a status code equal to that given
func (o *DeleteCustomRoleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete custom role internal server error response
func (o *DeleteCustomRoleInternalServerError) Code() int {
	return 500
}

func (o *DeleteCustomRoleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleInternalServerError %s", 500, payload)
}

func (o *DeleteCustomRoleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/custom-role/{roleName}][%d] deleteCustomRoleInternalServerError %s", 500, payload)
}

func (o *DeleteCustomRoleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteCustomRoleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
