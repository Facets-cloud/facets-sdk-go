// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllRolesUsingGETReader is a Reader for the GetAllRolesUsingGET structure.
type GetAllRolesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllRolesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllRolesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllRolesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllRolesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllRolesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/custom-role/roles] getAllRolesUsingGET", response, response.Code())
	}
}

// NewGetAllRolesUsingGETOK creates a GetAllRolesUsingGETOK with default headers values
func NewGetAllRolesUsingGETOK() *GetAllRolesUsingGETOK {
	return &GetAllRolesUsingGETOK{}
}

/*
GetAllRolesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllRolesUsingGETOK struct {
	Payload []*models.RoleMapping
}

// IsSuccess returns true when this get all roles using g e t o k response has a 2xx status code
func (o *GetAllRolesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all roles using g e t o k response has a 3xx status code
func (o *GetAllRolesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all roles using g e t o k response has a 4xx status code
func (o *GetAllRolesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all roles using g e t o k response has a 5xx status code
func (o *GetAllRolesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all roles using g e t o k response a status code equal to that given
func (o *GetAllRolesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all roles using g e t o k response
func (o *GetAllRolesUsingGETOK) Code() int {
	return 200
}

func (o *GetAllRolesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETOK %s", 200, payload)
}

func (o *GetAllRolesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETOK %s", 200, payload)
}

func (o *GetAllRolesUsingGETOK) GetPayload() []*models.RoleMapping {
	return o.Payload
}

func (o *GetAllRolesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRolesUsingGETUnauthorized creates a GetAllRolesUsingGETUnauthorized with default headers values
func NewGetAllRolesUsingGETUnauthorized() *GetAllRolesUsingGETUnauthorized {
	return &GetAllRolesUsingGETUnauthorized{}
}

/*
GetAllRolesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllRolesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all roles using g e t unauthorized response has a 2xx status code
func (o *GetAllRolesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all roles using g e t unauthorized response has a 3xx status code
func (o *GetAllRolesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all roles using g e t unauthorized response has a 4xx status code
func (o *GetAllRolesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all roles using g e t unauthorized response has a 5xx status code
func (o *GetAllRolesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all roles using g e t unauthorized response a status code equal to that given
func (o *GetAllRolesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all roles using g e t unauthorized response
func (o *GetAllRolesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllRolesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETUnauthorized", 401)
}

func (o *GetAllRolesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETUnauthorized", 401)
}

func (o *GetAllRolesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllRolesUsingGETForbidden creates a GetAllRolesUsingGETForbidden with default headers values
func NewGetAllRolesUsingGETForbidden() *GetAllRolesUsingGETForbidden {
	return &GetAllRolesUsingGETForbidden{}
}

/*
GetAllRolesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllRolesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all roles using g e t forbidden response has a 2xx status code
func (o *GetAllRolesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all roles using g e t forbidden response has a 3xx status code
func (o *GetAllRolesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all roles using g e t forbidden response has a 4xx status code
func (o *GetAllRolesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all roles using g e t forbidden response has a 5xx status code
func (o *GetAllRolesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all roles using g e t forbidden response a status code equal to that given
func (o *GetAllRolesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all roles using g e t forbidden response
func (o *GetAllRolesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllRolesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETForbidden", 403)
}

func (o *GetAllRolesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETForbidden", 403)
}

func (o *GetAllRolesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllRolesUsingGETNotFound creates a GetAllRolesUsingGETNotFound with default headers values
func NewGetAllRolesUsingGETNotFound() *GetAllRolesUsingGETNotFound {
	return &GetAllRolesUsingGETNotFound{}
}

/*
GetAllRolesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllRolesUsingGETNotFound struct {
}

// IsSuccess returns true when this get all roles using g e t not found response has a 2xx status code
func (o *GetAllRolesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all roles using g e t not found response has a 3xx status code
func (o *GetAllRolesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all roles using g e t not found response has a 4xx status code
func (o *GetAllRolesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all roles using g e t not found response has a 5xx status code
func (o *GetAllRolesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all roles using g e t not found response a status code equal to that given
func (o *GetAllRolesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all roles using g e t not found response
func (o *GetAllRolesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllRolesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETNotFound", 404)
}

func (o *GetAllRolesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/custom-role/roles][%d] getAllRolesUsingGETNotFound", 404)
}

func (o *GetAllRolesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
