// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_role_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateCustomRoleUsingPOSTReader is a Reader for the CreateCustomRoleUsingPOST structure.
type CreateCustomRoleUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCustomRoleUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCustomRoleUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateCustomRoleUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateCustomRoleUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateCustomRoleUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateCustomRoleUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/custom-role] createCustomRoleUsingPOST", response, response.Code())
	}
}

// NewCreateCustomRoleUsingPOSTOK creates a CreateCustomRoleUsingPOSTOK with default headers values
func NewCreateCustomRoleUsingPOSTOK() *CreateCustomRoleUsingPOSTOK {
	return &CreateCustomRoleUsingPOSTOK{}
}

/*
CreateCustomRoleUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateCustomRoleUsingPOSTOK struct {
	Payload *models.RoleMapping
}

// IsSuccess returns true when this create custom role using p o s t o k response has a 2xx status code
func (o *CreateCustomRoleUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create custom role using p o s t o k response has a 3xx status code
func (o *CreateCustomRoleUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role using p o s t o k response has a 4xx status code
func (o *CreateCustomRoleUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create custom role using p o s t o k response has a 5xx status code
func (o *CreateCustomRoleUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role using p o s t o k response a status code equal to that given
func (o *CreateCustomRoleUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create custom role using p o s t o k response
func (o *CreateCustomRoleUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateCustomRoleUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTOK %s", 200, payload)
}

func (o *CreateCustomRoleUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTOK %s", 200, payload)
}

func (o *CreateCustomRoleUsingPOSTOK) GetPayload() *models.RoleMapping {
	return o.Payload
}

func (o *CreateCustomRoleUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RoleMapping)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCustomRoleUsingPOSTCreated creates a CreateCustomRoleUsingPOSTCreated with default headers values
func NewCreateCustomRoleUsingPOSTCreated() *CreateCustomRoleUsingPOSTCreated {
	return &CreateCustomRoleUsingPOSTCreated{}
}

/*
CreateCustomRoleUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateCustomRoleUsingPOSTCreated struct {
}

// IsSuccess returns true when this create custom role using p o s t created response has a 2xx status code
func (o *CreateCustomRoleUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create custom role using p o s t created response has a 3xx status code
func (o *CreateCustomRoleUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role using p o s t created response has a 4xx status code
func (o *CreateCustomRoleUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create custom role using p o s t created response has a 5xx status code
func (o *CreateCustomRoleUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role using p o s t created response a status code equal to that given
func (o *CreateCustomRoleUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create custom role using p o s t created response
func (o *CreateCustomRoleUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateCustomRoleUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTCreated", 201)
}

func (o *CreateCustomRoleUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTCreated", 201)
}

func (o *CreateCustomRoleUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCustomRoleUsingPOSTUnauthorized creates a CreateCustomRoleUsingPOSTUnauthorized with default headers values
func NewCreateCustomRoleUsingPOSTUnauthorized() *CreateCustomRoleUsingPOSTUnauthorized {
	return &CreateCustomRoleUsingPOSTUnauthorized{}
}

/*
CreateCustomRoleUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateCustomRoleUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create custom role using p o s t unauthorized response has a 2xx status code
func (o *CreateCustomRoleUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create custom role using p o s t unauthorized response has a 3xx status code
func (o *CreateCustomRoleUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role using p o s t unauthorized response has a 4xx status code
func (o *CreateCustomRoleUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create custom role using p o s t unauthorized response has a 5xx status code
func (o *CreateCustomRoleUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role using p o s t unauthorized response a status code equal to that given
func (o *CreateCustomRoleUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create custom role using p o s t unauthorized response
func (o *CreateCustomRoleUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateCustomRoleUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTUnauthorized", 401)
}

func (o *CreateCustomRoleUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTUnauthorized", 401)
}

func (o *CreateCustomRoleUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCustomRoleUsingPOSTForbidden creates a CreateCustomRoleUsingPOSTForbidden with default headers values
func NewCreateCustomRoleUsingPOSTForbidden() *CreateCustomRoleUsingPOSTForbidden {
	return &CreateCustomRoleUsingPOSTForbidden{}
}

/*
CreateCustomRoleUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateCustomRoleUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create custom role using p o s t forbidden response has a 2xx status code
func (o *CreateCustomRoleUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create custom role using p o s t forbidden response has a 3xx status code
func (o *CreateCustomRoleUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role using p o s t forbidden response has a 4xx status code
func (o *CreateCustomRoleUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create custom role using p o s t forbidden response has a 5xx status code
func (o *CreateCustomRoleUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role using p o s t forbidden response a status code equal to that given
func (o *CreateCustomRoleUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create custom role using p o s t forbidden response
func (o *CreateCustomRoleUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateCustomRoleUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTForbidden", 403)
}

func (o *CreateCustomRoleUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTForbidden", 403)
}

func (o *CreateCustomRoleUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateCustomRoleUsingPOSTNotFound creates a CreateCustomRoleUsingPOSTNotFound with default headers values
func NewCreateCustomRoleUsingPOSTNotFound() *CreateCustomRoleUsingPOSTNotFound {
	return &CreateCustomRoleUsingPOSTNotFound{}
}

/*
CreateCustomRoleUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateCustomRoleUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create custom role using p o s t not found response has a 2xx status code
func (o *CreateCustomRoleUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create custom role using p o s t not found response has a 3xx status code
func (o *CreateCustomRoleUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create custom role using p o s t not found response has a 4xx status code
func (o *CreateCustomRoleUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create custom role using p o s t not found response has a 5xx status code
func (o *CreateCustomRoleUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create custom role using p o s t not found response a status code equal to that given
func (o *CreateCustomRoleUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create custom role using p o s t not found response
func (o *CreateCustomRoleUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateCustomRoleUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTNotFound", 404)
}

func (o *CreateCustomRoleUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/custom-role][%d] createCustomRoleUsingPOSTNotFound", 404)
}

func (o *CreateCustomRoleUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
