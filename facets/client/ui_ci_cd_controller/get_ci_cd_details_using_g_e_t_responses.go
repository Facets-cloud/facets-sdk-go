// Code generated by go-swagger; DO NOT EDIT.

package ui_ci_cd_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetCiCdDetailsUsingGETReader is a Reader for the GetCiCdDetailsUsingGET structure.
type GetCiCdDetailsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCiCdDetailsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCiCdDetailsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCiCdDetailsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCiCdDetailsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCiCdDetailsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCiCdDetailsUsingGETInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/ci-cd/{stackName}] getCiCdDetailsUsingGET", response, response.Code())
	}
}

// NewGetCiCdDetailsUsingGETOK creates a GetCiCdDetailsUsingGETOK with default headers values
func NewGetCiCdDetailsUsingGETOK() *GetCiCdDetailsUsingGETOK {
	return &GetCiCdDetailsUsingGETOK{}
}

/*
GetCiCdDetailsUsingGETOK describes a response with status code 200, with default header values.

Successfully retrieved CI/CD details.
*/
type GetCiCdDetailsUsingGETOK struct {
	Payload *models.CiCdDto
}

// IsSuccess returns true when this get ci cd details using g e t o k response has a 2xx status code
func (o *GetCiCdDetailsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ci cd details using g e t o k response has a 3xx status code
func (o *GetCiCdDetailsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details using g e t o k response has a 4xx status code
func (o *GetCiCdDetailsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ci cd details using g e t o k response has a 5xx status code
func (o *GetCiCdDetailsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details using g e t o k response a status code equal to that given
func (o *GetCiCdDetailsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ci cd details using g e t o k response
func (o *GetCiCdDetailsUsingGETOK) Code() int {
	return 200
}

func (o *GetCiCdDetailsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETOK %s", 200, payload)
}

func (o *GetCiCdDetailsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETOK %s", 200, payload)
}

func (o *GetCiCdDetailsUsingGETOK) GetPayload() *models.CiCdDto {
	return o.Payload
}

func (o *GetCiCdDetailsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CiCdDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCiCdDetailsUsingGETUnauthorized creates a GetCiCdDetailsUsingGETUnauthorized with default headers values
func NewGetCiCdDetailsUsingGETUnauthorized() *GetCiCdDetailsUsingGETUnauthorized {
	return &GetCiCdDetailsUsingGETUnauthorized{}
}

/*
GetCiCdDetailsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCiCdDetailsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get ci cd details using g e t unauthorized response has a 2xx status code
func (o *GetCiCdDetailsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details using g e t unauthorized response has a 3xx status code
func (o *GetCiCdDetailsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details using g e t unauthorized response has a 4xx status code
func (o *GetCiCdDetailsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ci cd details using g e t unauthorized response has a 5xx status code
func (o *GetCiCdDetailsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details using g e t unauthorized response a status code equal to that given
func (o *GetCiCdDetailsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get ci cd details using g e t unauthorized response
func (o *GetCiCdDetailsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetCiCdDetailsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETUnauthorized", 401)
}

func (o *GetCiCdDetailsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETUnauthorized", 401)
}

func (o *GetCiCdDetailsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCiCdDetailsUsingGETForbidden creates a GetCiCdDetailsUsingGETForbidden with default headers values
func NewGetCiCdDetailsUsingGETForbidden() *GetCiCdDetailsUsingGETForbidden {
	return &GetCiCdDetailsUsingGETForbidden{}
}

/*
GetCiCdDetailsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCiCdDetailsUsingGETForbidden struct {
}

// IsSuccess returns true when this get ci cd details using g e t forbidden response has a 2xx status code
func (o *GetCiCdDetailsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details using g e t forbidden response has a 3xx status code
func (o *GetCiCdDetailsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details using g e t forbidden response has a 4xx status code
func (o *GetCiCdDetailsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ci cd details using g e t forbidden response has a 5xx status code
func (o *GetCiCdDetailsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details using g e t forbidden response a status code equal to that given
func (o *GetCiCdDetailsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get ci cd details using g e t forbidden response
func (o *GetCiCdDetailsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetCiCdDetailsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETForbidden", 403)
}

func (o *GetCiCdDetailsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETForbidden", 403)
}

func (o *GetCiCdDetailsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCiCdDetailsUsingGETNotFound creates a GetCiCdDetailsUsingGETNotFound with default headers values
func NewGetCiCdDetailsUsingGETNotFound() *GetCiCdDetailsUsingGETNotFound {
	return &GetCiCdDetailsUsingGETNotFound{}
}

/*
GetCiCdDetailsUsingGETNotFound describes a response with status code 404, with default header values.

Project not found.
*/
type GetCiCdDetailsUsingGETNotFound struct {
}

// IsSuccess returns true when this get ci cd details using g e t not found response has a 2xx status code
func (o *GetCiCdDetailsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details using g e t not found response has a 3xx status code
func (o *GetCiCdDetailsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details using g e t not found response has a 4xx status code
func (o *GetCiCdDetailsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ci cd details using g e t not found response has a 5xx status code
func (o *GetCiCdDetailsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details using g e t not found response a status code equal to that given
func (o *GetCiCdDetailsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get ci cd details using g e t not found response
func (o *GetCiCdDetailsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetCiCdDetailsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETNotFound", 404)
}

func (o *GetCiCdDetailsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETNotFound", 404)
}

func (o *GetCiCdDetailsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCiCdDetailsUsingGETInternalServerError creates a GetCiCdDetailsUsingGETInternalServerError with default headers values
func NewGetCiCdDetailsUsingGETInternalServerError() *GetCiCdDetailsUsingGETInternalServerError {
	return &GetCiCdDetailsUsingGETInternalServerError{}
}

/*
GetCiCdDetailsUsingGETInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type GetCiCdDetailsUsingGETInternalServerError struct {
}

// IsSuccess returns true when this get ci cd details using g e t internal server error response has a 2xx status code
func (o *GetCiCdDetailsUsingGETInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details using g e t internal server error response has a 3xx status code
func (o *GetCiCdDetailsUsingGETInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details using g e t internal server error response has a 4xx status code
func (o *GetCiCdDetailsUsingGETInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ci cd details using g e t internal server error response has a 5xx status code
func (o *GetCiCdDetailsUsingGETInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get ci cd details using g e t internal server error response a status code equal to that given
func (o *GetCiCdDetailsUsingGETInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get ci cd details using g e t internal server error response
func (o *GetCiCdDetailsUsingGETInternalServerError) Code() int {
	return 500
}

func (o *GetCiCdDetailsUsingGETInternalServerError) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETInternalServerError", 500)
}

func (o *GetCiCdDetailsUsingGETInternalServerError) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsUsingGETInternalServerError", 500)
}

func (o *GetCiCdDetailsUsingGETInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
