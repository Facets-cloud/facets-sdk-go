// Code generated by go-swagger; DO NOT EDIT.

package ui_ci_cd_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SaveCiCdDetailsUsingPOSTReader is a Reader for the SaveCiCdDetailsUsingPOST structure.
type SaveCiCdDetailsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveCiCdDetailsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSaveCiCdDetailsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewSaveCiCdDetailsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSaveCiCdDetailsUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSaveCiCdDetailsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSaveCiCdDetailsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSaveCiCdDetailsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSaveCiCdDetailsUsingPOSTInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/ci-cd] saveCiCdDetailsUsingPOST", response, response.Code())
	}
}

// NewSaveCiCdDetailsUsingPOSTOK creates a SaveCiCdDetailsUsingPOSTOK with default headers values
func NewSaveCiCdDetailsUsingPOSTOK() *SaveCiCdDetailsUsingPOSTOK {
	return &SaveCiCdDetailsUsingPOSTOK{}
}

/*
SaveCiCdDetailsUsingPOSTOK describes a response with status code 200, with default header values.

Successfully saved CI/CD details.
*/
type SaveCiCdDetailsUsingPOSTOK struct {
}

// IsSuccess returns true when this save ci cd details using p o s t o k response has a 2xx status code
func (o *SaveCiCdDetailsUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save ci cd details using p o s t o k response has a 3xx status code
func (o *SaveCiCdDetailsUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save ci cd details using p o s t o k response has a 4xx status code
func (o *SaveCiCdDetailsUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this save ci cd details using p o s t o k response has a 5xx status code
func (o *SaveCiCdDetailsUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this save ci cd details using p o s t o k response a status code equal to that given
func (o *SaveCiCdDetailsUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the save ci cd details using p o s t o k response
func (o *SaveCiCdDetailsUsingPOSTOK) Code() int {
	return 200
}

func (o *SaveCiCdDetailsUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTOK", 200)
}

func (o *SaveCiCdDetailsUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTOK", 200)
}

func (o *SaveCiCdDetailsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCiCdDetailsUsingPOSTCreated creates a SaveCiCdDetailsUsingPOSTCreated with default headers values
func NewSaveCiCdDetailsUsingPOSTCreated() *SaveCiCdDetailsUsingPOSTCreated {
	return &SaveCiCdDetailsUsingPOSTCreated{}
}

/*
SaveCiCdDetailsUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type SaveCiCdDetailsUsingPOSTCreated struct {
}

// IsSuccess returns true when this save ci cd details using p o s t created response has a 2xx status code
func (o *SaveCiCdDetailsUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save ci cd details using p o s t created response has a 3xx status code
func (o *SaveCiCdDetailsUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save ci cd details using p o s t created response has a 4xx status code
func (o *SaveCiCdDetailsUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this save ci cd details using p o s t created response has a 5xx status code
func (o *SaveCiCdDetailsUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this save ci cd details using p o s t created response a status code equal to that given
func (o *SaveCiCdDetailsUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the save ci cd details using p o s t created response
func (o *SaveCiCdDetailsUsingPOSTCreated) Code() int {
	return 201
}

func (o *SaveCiCdDetailsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTCreated", 201)
}

func (o *SaveCiCdDetailsUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTCreated", 201)
}

func (o *SaveCiCdDetailsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCiCdDetailsUsingPOSTBadRequest creates a SaveCiCdDetailsUsingPOSTBadRequest with default headers values
func NewSaveCiCdDetailsUsingPOSTBadRequest() *SaveCiCdDetailsUsingPOSTBadRequest {
	return &SaveCiCdDetailsUsingPOSTBadRequest{}
}

/*
SaveCiCdDetailsUsingPOSTBadRequest describes a response with status code 400, with default header values.

Invalid input provided.
*/
type SaveCiCdDetailsUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this save ci cd details using p o s t bad request response has a 2xx status code
func (o *SaveCiCdDetailsUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save ci cd details using p o s t bad request response has a 3xx status code
func (o *SaveCiCdDetailsUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save ci cd details using p o s t bad request response has a 4xx status code
func (o *SaveCiCdDetailsUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this save ci cd details using p o s t bad request response has a 5xx status code
func (o *SaveCiCdDetailsUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this save ci cd details using p o s t bad request response a status code equal to that given
func (o *SaveCiCdDetailsUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the save ci cd details using p o s t bad request response
func (o *SaveCiCdDetailsUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *SaveCiCdDetailsUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTBadRequest", 400)
}

func (o *SaveCiCdDetailsUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTBadRequest", 400)
}

func (o *SaveCiCdDetailsUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCiCdDetailsUsingPOSTUnauthorized creates a SaveCiCdDetailsUsingPOSTUnauthorized with default headers values
func NewSaveCiCdDetailsUsingPOSTUnauthorized() *SaveCiCdDetailsUsingPOSTUnauthorized {
	return &SaveCiCdDetailsUsingPOSTUnauthorized{}
}

/*
SaveCiCdDetailsUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SaveCiCdDetailsUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this save ci cd details using p o s t unauthorized response has a 2xx status code
func (o *SaveCiCdDetailsUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save ci cd details using p o s t unauthorized response has a 3xx status code
func (o *SaveCiCdDetailsUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save ci cd details using p o s t unauthorized response has a 4xx status code
func (o *SaveCiCdDetailsUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this save ci cd details using p o s t unauthorized response has a 5xx status code
func (o *SaveCiCdDetailsUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this save ci cd details using p o s t unauthorized response a status code equal to that given
func (o *SaveCiCdDetailsUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the save ci cd details using p o s t unauthorized response
func (o *SaveCiCdDetailsUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *SaveCiCdDetailsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTUnauthorized", 401)
}

func (o *SaveCiCdDetailsUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTUnauthorized", 401)
}

func (o *SaveCiCdDetailsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCiCdDetailsUsingPOSTForbidden creates a SaveCiCdDetailsUsingPOSTForbidden with default headers values
func NewSaveCiCdDetailsUsingPOSTForbidden() *SaveCiCdDetailsUsingPOSTForbidden {
	return &SaveCiCdDetailsUsingPOSTForbidden{}
}

/*
SaveCiCdDetailsUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SaveCiCdDetailsUsingPOSTForbidden struct {
}

// IsSuccess returns true when this save ci cd details using p o s t forbidden response has a 2xx status code
func (o *SaveCiCdDetailsUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save ci cd details using p o s t forbidden response has a 3xx status code
func (o *SaveCiCdDetailsUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save ci cd details using p o s t forbidden response has a 4xx status code
func (o *SaveCiCdDetailsUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this save ci cd details using p o s t forbidden response has a 5xx status code
func (o *SaveCiCdDetailsUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this save ci cd details using p o s t forbidden response a status code equal to that given
func (o *SaveCiCdDetailsUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the save ci cd details using p o s t forbidden response
func (o *SaveCiCdDetailsUsingPOSTForbidden) Code() int {
	return 403
}

func (o *SaveCiCdDetailsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTForbidden", 403)
}

func (o *SaveCiCdDetailsUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTForbidden", 403)
}

func (o *SaveCiCdDetailsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCiCdDetailsUsingPOSTNotFound creates a SaveCiCdDetailsUsingPOSTNotFound with default headers values
func NewSaveCiCdDetailsUsingPOSTNotFound() *SaveCiCdDetailsUsingPOSTNotFound {
	return &SaveCiCdDetailsUsingPOSTNotFound{}
}

/*
SaveCiCdDetailsUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SaveCiCdDetailsUsingPOSTNotFound struct {
}

// IsSuccess returns true when this save ci cd details using p o s t not found response has a 2xx status code
func (o *SaveCiCdDetailsUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save ci cd details using p o s t not found response has a 3xx status code
func (o *SaveCiCdDetailsUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save ci cd details using p o s t not found response has a 4xx status code
func (o *SaveCiCdDetailsUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this save ci cd details using p o s t not found response has a 5xx status code
func (o *SaveCiCdDetailsUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this save ci cd details using p o s t not found response a status code equal to that given
func (o *SaveCiCdDetailsUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the save ci cd details using p o s t not found response
func (o *SaveCiCdDetailsUsingPOSTNotFound) Code() int {
	return 404
}

func (o *SaveCiCdDetailsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTNotFound", 404)
}

func (o *SaveCiCdDetailsUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTNotFound", 404)
}

func (o *SaveCiCdDetailsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveCiCdDetailsUsingPOSTInternalServerError creates a SaveCiCdDetailsUsingPOSTInternalServerError with default headers values
func NewSaveCiCdDetailsUsingPOSTInternalServerError() *SaveCiCdDetailsUsingPOSTInternalServerError {
	return &SaveCiCdDetailsUsingPOSTInternalServerError{}
}

/*
SaveCiCdDetailsUsingPOSTInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type SaveCiCdDetailsUsingPOSTInternalServerError struct {
}

// IsSuccess returns true when this save ci cd details using p o s t internal server error response has a 2xx status code
func (o *SaveCiCdDetailsUsingPOSTInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save ci cd details using p o s t internal server error response has a 3xx status code
func (o *SaveCiCdDetailsUsingPOSTInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save ci cd details using p o s t internal server error response has a 4xx status code
func (o *SaveCiCdDetailsUsingPOSTInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this save ci cd details using p o s t internal server error response has a 5xx status code
func (o *SaveCiCdDetailsUsingPOSTInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this save ci cd details using p o s t internal server error response a status code equal to that given
func (o *SaveCiCdDetailsUsingPOSTInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the save ci cd details using p o s t internal server error response
func (o *SaveCiCdDetailsUsingPOSTInternalServerError) Code() int {
	return 500
}

func (o *SaveCiCdDetailsUsingPOSTInternalServerError) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTInternalServerError", 500)
}

func (o *SaveCiCdDetailsUsingPOSTInternalServerError) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/ci-cd][%d] saveCiCdDetailsUsingPOSTInternalServerError", 500)
}

func (o *SaveCiCdDetailsUsingPOSTInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
