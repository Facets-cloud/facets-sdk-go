// Code generated by go-swagger; DO NOT EDIT.

package ui_ci_cd_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetCiCdDetailsReader is a Reader for the GetCiCdDetails structure.
type GetCiCdDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCiCdDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCiCdDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCiCdDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCiCdDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetCiCdDetailsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCiCdDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/ci-cd/{stackName}] getCiCdDetails", response, response.Code())
	}
}

// NewGetCiCdDetailsOK creates a GetCiCdDetailsOK with default headers values
func NewGetCiCdDetailsOK() *GetCiCdDetailsOK {
	return &GetCiCdDetailsOK{}
}

/*
GetCiCdDetailsOK describes a response with status code 200, with default header values.

Successfully retrieved CI/CD details.
*/
type GetCiCdDetailsOK struct {
	Payload *models.CiCdDto
}

// IsSuccess returns true when this get ci cd details o k response has a 2xx status code
func (o *GetCiCdDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get ci cd details o k response has a 3xx status code
func (o *GetCiCdDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details o k response has a 4xx status code
func (o *GetCiCdDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ci cd details o k response has a 5xx status code
func (o *GetCiCdDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details o k response a status code equal to that given
func (o *GetCiCdDetailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get ci cd details o k response
func (o *GetCiCdDetailsOK) Code() int {
	return 200
}

func (o *GetCiCdDetailsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsOK %s", 200, payload)
}

func (o *GetCiCdDetailsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsOK %s", 200, payload)
}

func (o *GetCiCdDetailsOK) GetPayload() *models.CiCdDto {
	return o.Payload
}

func (o *GetCiCdDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CiCdDto)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCiCdDetailsBadRequest creates a GetCiCdDetailsBadRequest with default headers values
func NewGetCiCdDetailsBadRequest() *GetCiCdDetailsBadRequest {
	return &GetCiCdDetailsBadRequest{}
}

/*
GetCiCdDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCiCdDetailsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get ci cd details bad request response has a 2xx status code
func (o *GetCiCdDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details bad request response has a 3xx status code
func (o *GetCiCdDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details bad request response has a 4xx status code
func (o *GetCiCdDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ci cd details bad request response has a 5xx status code
func (o *GetCiCdDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details bad request response a status code equal to that given
func (o *GetCiCdDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get ci cd details bad request response
func (o *GetCiCdDetailsBadRequest) Code() int {
	return 400
}

func (o *GetCiCdDetailsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsBadRequest %s", 400, payload)
}

func (o *GetCiCdDetailsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsBadRequest %s", 400, payload)
}

func (o *GetCiCdDetailsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCiCdDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCiCdDetailsNotFound creates a GetCiCdDetailsNotFound with default headers values
func NewGetCiCdDetailsNotFound() *GetCiCdDetailsNotFound {
	return &GetCiCdDetailsNotFound{}
}

/*
GetCiCdDetailsNotFound describes a response with status code 404, with default header values.

Project not found.
*/
type GetCiCdDetailsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get ci cd details not found response has a 2xx status code
func (o *GetCiCdDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details not found response has a 3xx status code
func (o *GetCiCdDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details not found response has a 4xx status code
func (o *GetCiCdDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ci cd details not found response has a 5xx status code
func (o *GetCiCdDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details not found response a status code equal to that given
func (o *GetCiCdDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get ci cd details not found response
func (o *GetCiCdDetailsNotFound) Code() int {
	return 404
}

func (o *GetCiCdDetailsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsNotFound %s", 404, payload)
}

func (o *GetCiCdDetailsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsNotFound %s", 404, payload)
}

func (o *GetCiCdDetailsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCiCdDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCiCdDetailsMethodNotAllowed creates a GetCiCdDetailsMethodNotAllowed with default headers values
func NewGetCiCdDetailsMethodNotAllowed() *GetCiCdDetailsMethodNotAllowed {
	return &GetCiCdDetailsMethodNotAllowed{}
}

/*
GetCiCdDetailsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetCiCdDetailsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get ci cd details method not allowed response has a 2xx status code
func (o *GetCiCdDetailsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details method not allowed response has a 3xx status code
func (o *GetCiCdDetailsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details method not allowed response has a 4xx status code
func (o *GetCiCdDetailsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get ci cd details method not allowed response has a 5xx status code
func (o *GetCiCdDetailsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get ci cd details method not allowed response a status code equal to that given
func (o *GetCiCdDetailsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get ci cd details method not allowed response
func (o *GetCiCdDetailsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetCiCdDetailsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsMethodNotAllowed %s", 405, payload)
}

func (o *GetCiCdDetailsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsMethodNotAllowed %s", 405, payload)
}

func (o *GetCiCdDetailsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCiCdDetailsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCiCdDetailsInternalServerError creates a GetCiCdDetailsInternalServerError with default headers values
func NewGetCiCdDetailsInternalServerError() *GetCiCdDetailsInternalServerError {
	return &GetCiCdDetailsInternalServerError{}
}

/*
GetCiCdDetailsInternalServerError describes a response with status code 500, with default header values.

Internal server error.
*/
type GetCiCdDetailsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get ci cd details internal server error response has a 2xx status code
func (o *GetCiCdDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get ci cd details internal server error response has a 3xx status code
func (o *GetCiCdDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get ci cd details internal server error response has a 4xx status code
func (o *GetCiCdDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get ci cd details internal server error response has a 5xx status code
func (o *GetCiCdDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get ci cd details internal server error response a status code equal to that given
func (o *GetCiCdDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get ci cd details internal server error response
func (o *GetCiCdDetailsInternalServerError) Code() int {
	return 500
}

func (o *GetCiCdDetailsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsInternalServerError %s", 500, payload)
}

func (o *GetCiCdDetailsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/ci-cd/{stackName}][%d] getCiCdDetailsInternalServerError %s", 500, payload)
}

func (o *GetCiCdDetailsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCiCdDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
