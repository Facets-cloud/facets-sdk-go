// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewUpdateVariablesUsingPUTParams creates a new UpdateVariablesUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateVariablesUsingPUTParams() *UpdateVariablesUsingPUTParams {
	return &UpdateVariablesUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateVariablesUsingPUTParamsWithTimeout creates a new UpdateVariablesUsingPUTParams object
// with the ability to set a timeout on a request.
func NewUpdateVariablesUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateVariablesUsingPUTParams {
	return &UpdateVariablesUsingPUTParams{
		timeout: timeout,
	}
}

// NewUpdateVariablesUsingPUTParamsWithContext creates a new UpdateVariablesUsingPUTParams object
// with the ability to set a context for a request.
func NewUpdateVariablesUsingPUTParamsWithContext(ctx context.Context) *UpdateVariablesUsingPUTParams {
	return &UpdateVariablesUsingPUTParams{
		Context: ctx,
	}
}

// NewUpdateVariablesUsingPUTParamsWithHTTPClient creates a new UpdateVariablesUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateVariablesUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateVariablesUsingPUTParams {
	return &UpdateVariablesUsingPUTParams{
		HTTPClient: client,
	}
}

/*
UpdateVariablesUsingPUTParams contains all the parameters to send to the API endpoint

	for the update variables using p u t operation.

	Typically these are written to a http.Request.
*/
type UpdateVariablesUsingPUTParams struct {

	/* StackName.

	   stackName
	*/
	StackName string

	/* Variables.

	   variables
	*/
	Variables map[string]models.VariableDetails

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update variables using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVariablesUsingPUTParams) WithDefaults() *UpdateVariablesUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update variables using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateVariablesUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateVariablesUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) WithContext(ctx context.Context) *UpdateVariablesUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateVariablesUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStackName adds the stackName to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) WithStackName(stackName string) *UpdateVariablesUsingPUTParams {
	o.SetStackName(stackName)
	return o
}

// SetStackName adds the stackName to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) SetStackName(stackName string) {
	o.StackName = stackName
}

// WithVariables adds the variables to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) WithVariables(variables map[string]models.VariableDetails) *UpdateVariablesUsingPUTParams {
	o.SetVariables(variables)
	return o
}

// SetVariables adds the variables to the update variables using p u t params
func (o *UpdateVariablesUsingPUTParams) SetVariables(variables map[string]models.VariableDetails) {
	o.Variables = variables
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateVariablesUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param stackName
	if err := r.SetPathParam("stackName", o.StackName); err != nil {
		return err
	}
	if o.Variables != nil {
		if err := r.SetBodyParam(o.Variables); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
