// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListProvidersExposedByModuleReader is a Reader for the ListProvidersExposedByModule structure.
type ListProvidersExposedByModuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListProvidersExposedByModuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListProvidersExposedByModuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListProvidersExposedByModuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListProvidersExposedByModuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListProvidersExposedByModuleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListProvidersExposedByModuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers] listProvidersExposedByModule", response, response.Code())
	}
}

// NewListProvidersExposedByModuleOK creates a ListProvidersExposedByModuleOK with default headers values
func NewListProvidersExposedByModuleOK() *ListProvidersExposedByModuleOK {
	return &ListProvidersExposedByModuleOK{}
}

/*
ListProvidersExposedByModuleOK describes a response with status code 200, with default header values.

OK
*/
type ListProvidersExposedByModuleOK struct {
	Payload []*models.TFProvider
}

// IsSuccess returns true when this list providers exposed by module o k response has a 2xx status code
func (o *ListProvidersExposedByModuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list providers exposed by module o k response has a 3xx status code
func (o *ListProvidersExposedByModuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list providers exposed by module o k response has a 4xx status code
func (o *ListProvidersExposedByModuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list providers exposed by module o k response has a 5xx status code
func (o *ListProvidersExposedByModuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list providers exposed by module o k response a status code equal to that given
func (o *ListProvidersExposedByModuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list providers exposed by module o k response
func (o *ListProvidersExposedByModuleOK) Code() int {
	return 200
}

func (o *ListProvidersExposedByModuleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleOK %s", 200, payload)
}

func (o *ListProvidersExposedByModuleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleOK %s", 200, payload)
}

func (o *ListProvidersExposedByModuleOK) GetPayload() []*models.TFProvider {
	return o.Payload
}

func (o *ListProvidersExposedByModuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProvidersExposedByModuleBadRequest creates a ListProvidersExposedByModuleBadRequest with default headers values
func NewListProvidersExposedByModuleBadRequest() *ListProvidersExposedByModuleBadRequest {
	return &ListProvidersExposedByModuleBadRequest{}
}

/*
ListProvidersExposedByModuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListProvidersExposedByModuleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list providers exposed by module bad request response has a 2xx status code
func (o *ListProvidersExposedByModuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list providers exposed by module bad request response has a 3xx status code
func (o *ListProvidersExposedByModuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list providers exposed by module bad request response has a 4xx status code
func (o *ListProvidersExposedByModuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list providers exposed by module bad request response has a 5xx status code
func (o *ListProvidersExposedByModuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list providers exposed by module bad request response a status code equal to that given
func (o *ListProvidersExposedByModuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list providers exposed by module bad request response
func (o *ListProvidersExposedByModuleBadRequest) Code() int {
	return 400
}

func (o *ListProvidersExposedByModuleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleBadRequest %s", 400, payload)
}

func (o *ListProvidersExposedByModuleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleBadRequest %s", 400, payload)
}

func (o *ListProvidersExposedByModuleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListProvidersExposedByModuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProvidersExposedByModuleNotFound creates a ListProvidersExposedByModuleNotFound with default headers values
func NewListProvidersExposedByModuleNotFound() *ListProvidersExposedByModuleNotFound {
	return &ListProvidersExposedByModuleNotFound{}
}

/*
ListProvidersExposedByModuleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListProvidersExposedByModuleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list providers exposed by module not found response has a 2xx status code
func (o *ListProvidersExposedByModuleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list providers exposed by module not found response has a 3xx status code
func (o *ListProvidersExposedByModuleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list providers exposed by module not found response has a 4xx status code
func (o *ListProvidersExposedByModuleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list providers exposed by module not found response has a 5xx status code
func (o *ListProvidersExposedByModuleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list providers exposed by module not found response a status code equal to that given
func (o *ListProvidersExposedByModuleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list providers exposed by module not found response
func (o *ListProvidersExposedByModuleNotFound) Code() int {
	return 404
}

func (o *ListProvidersExposedByModuleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleNotFound %s", 404, payload)
}

func (o *ListProvidersExposedByModuleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleNotFound %s", 404, payload)
}

func (o *ListProvidersExposedByModuleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListProvidersExposedByModuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProvidersExposedByModuleMethodNotAllowed creates a ListProvidersExposedByModuleMethodNotAllowed with default headers values
func NewListProvidersExposedByModuleMethodNotAllowed() *ListProvidersExposedByModuleMethodNotAllowed {
	return &ListProvidersExposedByModuleMethodNotAllowed{}
}

/*
ListProvidersExposedByModuleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListProvidersExposedByModuleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list providers exposed by module method not allowed response has a 2xx status code
func (o *ListProvidersExposedByModuleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list providers exposed by module method not allowed response has a 3xx status code
func (o *ListProvidersExposedByModuleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list providers exposed by module method not allowed response has a 4xx status code
func (o *ListProvidersExposedByModuleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list providers exposed by module method not allowed response has a 5xx status code
func (o *ListProvidersExposedByModuleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list providers exposed by module method not allowed response a status code equal to that given
func (o *ListProvidersExposedByModuleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list providers exposed by module method not allowed response
func (o *ListProvidersExposedByModuleMethodNotAllowed) Code() int {
	return 405
}

func (o *ListProvidersExposedByModuleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleMethodNotAllowed %s", 405, payload)
}

func (o *ListProvidersExposedByModuleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleMethodNotAllowed %s", 405, payload)
}

func (o *ListProvidersExposedByModuleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListProvidersExposedByModuleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListProvidersExposedByModuleInternalServerError creates a ListProvidersExposedByModuleInternalServerError with default headers values
func NewListProvidersExposedByModuleInternalServerError() *ListProvidersExposedByModuleInternalServerError {
	return &ListProvidersExposedByModuleInternalServerError{}
}

/*
ListProvidersExposedByModuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListProvidersExposedByModuleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list providers exposed by module internal server error response has a 2xx status code
func (o *ListProvidersExposedByModuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list providers exposed by module internal server error response has a 3xx status code
func (o *ListProvidersExposedByModuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list providers exposed by module internal server error response has a 4xx status code
func (o *ListProvidersExposedByModuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list providers exposed by module internal server error response has a 5xx status code
func (o *ListProvidersExposedByModuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list providers exposed by module internal server error response a status code equal to that given
func (o *ListProvidersExposedByModuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list providers exposed by module internal server error response
func (o *ListProvidersExposedByModuleInternalServerError) Code() int {
	return 500
}

func (o *ListProvidersExposedByModuleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleInternalServerError %s", 500, payload)
}

func (o *ListProvidersExposedByModuleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/output-providers][%d] listProvidersExposedByModuleInternalServerError %s", 500, payload)
}

func (o *ListProvidersExposedByModuleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListProvidersExposedByModuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
