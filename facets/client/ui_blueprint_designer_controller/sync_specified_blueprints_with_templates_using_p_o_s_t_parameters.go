// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams creates a new SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams() *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	return &SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParamsWithTimeout creates a new SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParamsWithTimeout(timeout time.Duration) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	return &SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams{
		timeout: timeout,
	}
}

// NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParamsWithContext creates a new SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams object
// with the ability to set a context for a request.
func NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParamsWithContext(ctx context.Context) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	return &SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams{
		Context: ctx,
	}
}

// NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParamsWithHTTPClient creates a new SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewSyncSpecifiedBlueprintsWithTemplatesUsingPOSTParamsWithHTTPClient(client *http.Client) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	return &SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams contains all the parameters to send to the API endpoint

	for the sync specified blueprints with templates using p o s t operation.

	Typically these are written to a http.Request.
*/
type SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams struct {

	/* BlueprintNames.

	   blueprintNames
	*/
	BlueprintNames []string

	/* TemplateName.

	   templateName
	*/
	TemplateName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the sync specified blueprints with templates using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) WithDefaults() *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the sync specified blueprints with templates using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) WithTimeout(timeout time.Duration) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) WithContext(ctx context.Context) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) WithHTTPClient(client *http.Client) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBlueprintNames adds the blueprintNames to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) WithBlueprintNames(blueprintNames []string) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	o.SetBlueprintNames(blueprintNames)
	return o
}

// SetBlueprintNames adds the blueprintNames to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) SetBlueprintNames(blueprintNames []string) {
	o.BlueprintNames = blueprintNames
}

// WithTemplateName adds the templateName to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) WithTemplateName(templateName string) *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams {
	o.SetTemplateName(templateName)
	return o
}

// SetTemplateName adds the templateName to the sync specified blueprints with templates using p o s t params
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) SetTemplateName(templateName string) {
	o.TemplateName = templateName
}

// WriteToRequest writes these params to a swagger request
func (o *SyncSpecifiedBlueprintsWithTemplatesUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.BlueprintNames != nil {
		if err := r.SetBodyParam(o.BlueprintNames); err != nil {
			return err
		}
	}

	// path param templateName
	if err := r.SetPathParam("templateName", o.TemplateName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
