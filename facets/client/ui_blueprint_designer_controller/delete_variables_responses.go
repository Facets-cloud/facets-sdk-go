// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteVariablesReader is a Reader for the DeleteVariables structure.
type DeleteVariablesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteVariablesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteVariablesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteVariablesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteVariablesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteVariablesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteVariablesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/designer/{stackName}/variables] deleteVariables", response, response.Code())
	}
}

// NewDeleteVariablesOK creates a DeleteVariablesOK with default headers values
func NewDeleteVariablesOK() *DeleteVariablesOK {
	return &DeleteVariablesOK{}
}

/*
DeleteVariablesOK describes a response with status code 200, with default header values.

OK
*/
type DeleteVariablesOK struct {
}

// IsSuccess returns true when this delete variables o k response has a 2xx status code
func (o *DeleteVariablesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete variables o k response has a 3xx status code
func (o *DeleteVariablesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete variables o k response has a 4xx status code
func (o *DeleteVariablesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete variables o k response has a 5xx status code
func (o *DeleteVariablesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete variables o k response a status code equal to that given
func (o *DeleteVariablesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete variables o k response
func (o *DeleteVariablesOK) Code() int {
	return 200
}

func (o *DeleteVariablesOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesOK", 200)
}

func (o *DeleteVariablesOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesOK", 200)
}

func (o *DeleteVariablesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteVariablesBadRequest creates a DeleteVariablesBadRequest with default headers values
func NewDeleteVariablesBadRequest() *DeleteVariablesBadRequest {
	return &DeleteVariablesBadRequest{}
}

/*
DeleteVariablesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteVariablesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete variables bad request response has a 2xx status code
func (o *DeleteVariablesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete variables bad request response has a 3xx status code
func (o *DeleteVariablesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete variables bad request response has a 4xx status code
func (o *DeleteVariablesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete variables bad request response has a 5xx status code
func (o *DeleteVariablesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete variables bad request response a status code equal to that given
func (o *DeleteVariablesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete variables bad request response
func (o *DeleteVariablesBadRequest) Code() int {
	return 400
}

func (o *DeleteVariablesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesBadRequest %s", 400, payload)
}

func (o *DeleteVariablesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesBadRequest %s", 400, payload)
}

func (o *DeleteVariablesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteVariablesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariablesNotFound creates a DeleteVariablesNotFound with default headers values
func NewDeleteVariablesNotFound() *DeleteVariablesNotFound {
	return &DeleteVariablesNotFound{}
}

/*
DeleteVariablesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteVariablesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete variables not found response has a 2xx status code
func (o *DeleteVariablesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete variables not found response has a 3xx status code
func (o *DeleteVariablesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete variables not found response has a 4xx status code
func (o *DeleteVariablesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete variables not found response has a 5xx status code
func (o *DeleteVariablesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete variables not found response a status code equal to that given
func (o *DeleteVariablesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete variables not found response
func (o *DeleteVariablesNotFound) Code() int {
	return 404
}

func (o *DeleteVariablesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesNotFound %s", 404, payload)
}

func (o *DeleteVariablesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesNotFound %s", 404, payload)
}

func (o *DeleteVariablesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteVariablesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariablesMethodNotAllowed creates a DeleteVariablesMethodNotAllowed with default headers values
func NewDeleteVariablesMethodNotAllowed() *DeleteVariablesMethodNotAllowed {
	return &DeleteVariablesMethodNotAllowed{}
}

/*
DeleteVariablesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteVariablesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete variables method not allowed response has a 2xx status code
func (o *DeleteVariablesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete variables method not allowed response has a 3xx status code
func (o *DeleteVariablesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete variables method not allowed response has a 4xx status code
func (o *DeleteVariablesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete variables method not allowed response has a 5xx status code
func (o *DeleteVariablesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete variables method not allowed response a status code equal to that given
func (o *DeleteVariablesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete variables method not allowed response
func (o *DeleteVariablesMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteVariablesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesMethodNotAllowed %s", 405, payload)
}

func (o *DeleteVariablesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesMethodNotAllowed %s", 405, payload)
}

func (o *DeleteVariablesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteVariablesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteVariablesInternalServerError creates a DeleteVariablesInternalServerError with default headers values
func NewDeleteVariablesInternalServerError() *DeleteVariablesInternalServerError {
	return &DeleteVariablesInternalServerError{}
}

/*
DeleteVariablesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteVariablesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete variables internal server error response has a 2xx status code
func (o *DeleteVariablesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete variables internal server error response has a 3xx status code
func (o *DeleteVariablesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete variables internal server error response has a 4xx status code
func (o *DeleteVariablesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete variables internal server error response has a 5xx status code
func (o *DeleteVariablesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete variables internal server error response a status code equal to that given
func (o *DeleteVariablesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete variables internal server error response
func (o *DeleteVariablesInternalServerError) Code() int {
	return 500
}

func (o *DeleteVariablesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesInternalServerError %s", 500, payload)
}

func (o *DeleteVariablesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/variables][%d] deleteVariablesInternalServerError %s", 500, payload)
}

func (o *DeleteVariablesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteVariablesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
