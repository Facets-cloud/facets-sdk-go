// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAddOnModulesUsingGETReader is a Reader for the GetAddOnModulesUsingGET structure.
type GetAddOnModulesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAddOnModulesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAddOnModulesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAddOnModulesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAddOnModulesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAddOnModulesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons] getAddOnModulesUsingGET", response, response.Code())
	}
}

// NewGetAddOnModulesUsingGETOK creates a GetAddOnModulesUsingGETOK with default headers values
func NewGetAddOnModulesUsingGETOK() *GetAddOnModulesUsingGETOK {
	return &GetAddOnModulesUsingGETOK{}
}

/*
GetAddOnModulesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAddOnModulesUsingGETOK struct {
	Payload []*models.AddOnDTO
}

// IsSuccess returns true when this get add on modules using g e t o k response has a 2xx status code
func (o *GetAddOnModulesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get add on modules using g e t o k response has a 3xx status code
func (o *GetAddOnModulesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules using g e t o k response has a 4xx status code
func (o *GetAddOnModulesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get add on modules using g e t o k response has a 5xx status code
func (o *GetAddOnModulesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules using g e t o k response a status code equal to that given
func (o *GetAddOnModulesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get add on modules using g e t o k response
func (o *GetAddOnModulesUsingGETOK) Code() int {
	return 200
}

func (o *GetAddOnModulesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETOK %s", 200, payload)
}

func (o *GetAddOnModulesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETOK %s", 200, payload)
}

func (o *GetAddOnModulesUsingGETOK) GetPayload() []*models.AddOnDTO {
	return o.Payload
}

func (o *GetAddOnModulesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddOnModulesUsingGETUnauthorized creates a GetAddOnModulesUsingGETUnauthorized with default headers values
func NewGetAddOnModulesUsingGETUnauthorized() *GetAddOnModulesUsingGETUnauthorized {
	return &GetAddOnModulesUsingGETUnauthorized{}
}

/*
GetAddOnModulesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAddOnModulesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get add on modules using g e t unauthorized response has a 2xx status code
func (o *GetAddOnModulesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get add on modules using g e t unauthorized response has a 3xx status code
func (o *GetAddOnModulesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules using g e t unauthorized response has a 4xx status code
func (o *GetAddOnModulesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get add on modules using g e t unauthorized response has a 5xx status code
func (o *GetAddOnModulesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules using g e t unauthorized response a status code equal to that given
func (o *GetAddOnModulesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get add on modules using g e t unauthorized response
func (o *GetAddOnModulesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAddOnModulesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETUnauthorized", 401)
}

func (o *GetAddOnModulesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETUnauthorized", 401)
}

func (o *GetAddOnModulesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddOnModulesUsingGETForbidden creates a GetAddOnModulesUsingGETForbidden with default headers values
func NewGetAddOnModulesUsingGETForbidden() *GetAddOnModulesUsingGETForbidden {
	return &GetAddOnModulesUsingGETForbidden{}
}

/*
GetAddOnModulesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAddOnModulesUsingGETForbidden struct {
}

// IsSuccess returns true when this get add on modules using g e t forbidden response has a 2xx status code
func (o *GetAddOnModulesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get add on modules using g e t forbidden response has a 3xx status code
func (o *GetAddOnModulesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules using g e t forbidden response has a 4xx status code
func (o *GetAddOnModulesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get add on modules using g e t forbidden response has a 5xx status code
func (o *GetAddOnModulesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules using g e t forbidden response a status code equal to that given
func (o *GetAddOnModulesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get add on modules using g e t forbidden response
func (o *GetAddOnModulesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAddOnModulesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETForbidden", 403)
}

func (o *GetAddOnModulesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETForbidden", 403)
}

func (o *GetAddOnModulesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAddOnModulesUsingGETNotFound creates a GetAddOnModulesUsingGETNotFound with default headers values
func NewGetAddOnModulesUsingGETNotFound() *GetAddOnModulesUsingGETNotFound {
	return &GetAddOnModulesUsingGETNotFound{}
}

/*
GetAddOnModulesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAddOnModulesUsingGETNotFound struct {
}

// IsSuccess returns true when this get add on modules using g e t not found response has a 2xx status code
func (o *GetAddOnModulesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get add on modules using g e t not found response has a 3xx status code
func (o *GetAddOnModulesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules using g e t not found response has a 4xx status code
func (o *GetAddOnModulesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get add on modules using g e t not found response has a 5xx status code
func (o *GetAddOnModulesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules using g e t not found response a status code equal to that given
func (o *GetAddOnModulesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get add on modules using g e t not found response
func (o *GetAddOnModulesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAddOnModulesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETNotFound", 404)
}

func (o *GetAddOnModulesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesUsingGETNotFound", 404)
}

func (o *GetAddOnModulesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
