// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetSchemaMetadataUsingGETReader is a Reader for the GetSchemaMetadataUsingGET structure.
type GetSchemaMetadataUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchemaMetadataUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchemaMetadataUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSchemaMetadataUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSchemaMetadataUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSchemaMetadataUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/facets-components] getSchemaMetadataUsingGET", response, response.Code())
	}
}

// NewGetSchemaMetadataUsingGETOK creates a GetSchemaMetadataUsingGETOK with default headers values
func NewGetSchemaMetadataUsingGETOK() *GetSchemaMetadataUsingGETOK {
	return &GetSchemaMetadataUsingGETOK{}
}

/*
GetSchemaMetadataUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetSchemaMetadataUsingGETOK struct {
	Payload models.JSONNode
}

// IsSuccess returns true when this get schema metadata using g e t o k response has a 2xx status code
func (o *GetSchemaMetadataUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get schema metadata using g e t o k response has a 3xx status code
func (o *GetSchemaMetadataUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata using g e t o k response has a 4xx status code
func (o *GetSchemaMetadataUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schema metadata using g e t o k response has a 5xx status code
func (o *GetSchemaMetadataUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata using g e t o k response a status code equal to that given
func (o *GetSchemaMetadataUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get schema metadata using g e t o k response
func (o *GetSchemaMetadataUsingGETOK) Code() int {
	return 200
}

func (o *GetSchemaMetadataUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETOK %s", 200, payload)
}

func (o *GetSchemaMetadataUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETOK %s", 200, payload)
}

func (o *GetSchemaMetadataUsingGETOK) GetPayload() models.JSONNode {
	return o.Payload
}

func (o *GetSchemaMetadataUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaMetadataUsingGETUnauthorized creates a GetSchemaMetadataUsingGETUnauthorized with default headers values
func NewGetSchemaMetadataUsingGETUnauthorized() *GetSchemaMetadataUsingGETUnauthorized {
	return &GetSchemaMetadataUsingGETUnauthorized{}
}

/*
GetSchemaMetadataUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSchemaMetadataUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get schema metadata using g e t unauthorized response has a 2xx status code
func (o *GetSchemaMetadataUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema metadata using g e t unauthorized response has a 3xx status code
func (o *GetSchemaMetadataUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata using g e t unauthorized response has a 4xx status code
func (o *GetSchemaMetadataUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schema metadata using g e t unauthorized response has a 5xx status code
func (o *GetSchemaMetadataUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata using g e t unauthorized response a status code equal to that given
func (o *GetSchemaMetadataUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get schema metadata using g e t unauthorized response
func (o *GetSchemaMetadataUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetSchemaMetadataUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETUnauthorized", 401)
}

func (o *GetSchemaMetadataUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETUnauthorized", 401)
}

func (o *GetSchemaMetadataUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSchemaMetadataUsingGETForbidden creates a GetSchemaMetadataUsingGETForbidden with default headers values
func NewGetSchemaMetadataUsingGETForbidden() *GetSchemaMetadataUsingGETForbidden {
	return &GetSchemaMetadataUsingGETForbidden{}
}

/*
GetSchemaMetadataUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSchemaMetadataUsingGETForbidden struct {
}

// IsSuccess returns true when this get schema metadata using g e t forbidden response has a 2xx status code
func (o *GetSchemaMetadataUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema metadata using g e t forbidden response has a 3xx status code
func (o *GetSchemaMetadataUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata using g e t forbidden response has a 4xx status code
func (o *GetSchemaMetadataUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schema metadata using g e t forbidden response has a 5xx status code
func (o *GetSchemaMetadataUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata using g e t forbidden response a status code equal to that given
func (o *GetSchemaMetadataUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get schema metadata using g e t forbidden response
func (o *GetSchemaMetadataUsingGETForbidden) Code() int {
	return 403
}

func (o *GetSchemaMetadataUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETForbidden", 403)
}

func (o *GetSchemaMetadataUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETForbidden", 403)
}

func (o *GetSchemaMetadataUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSchemaMetadataUsingGETNotFound creates a GetSchemaMetadataUsingGETNotFound with default headers values
func NewGetSchemaMetadataUsingGETNotFound() *GetSchemaMetadataUsingGETNotFound {
	return &GetSchemaMetadataUsingGETNotFound{}
}

/*
GetSchemaMetadataUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSchemaMetadataUsingGETNotFound struct {
}

// IsSuccess returns true when this get schema metadata using g e t not found response has a 2xx status code
func (o *GetSchemaMetadataUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema metadata using g e t not found response has a 3xx status code
func (o *GetSchemaMetadataUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata using g e t not found response has a 4xx status code
func (o *GetSchemaMetadataUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schema metadata using g e t not found response has a 5xx status code
func (o *GetSchemaMetadataUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata using g e t not found response a status code equal to that given
func (o *GetSchemaMetadataUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get schema metadata using g e t not found response
func (o *GetSchemaMetadataUsingGETNotFound) Code() int {
	return 404
}

func (o *GetSchemaMetadataUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETNotFound", 404)
}

func (o *GetSchemaMetadataUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataUsingGETNotFound", 404)
}

func (o *GetSchemaMetadataUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
