// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateVariablesUsingPUTReader is a Reader for the UpdateVariablesUsingPUT structure.
type UpdateVariablesUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateVariablesUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateVariablesUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateVariablesUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateVariablesUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateVariablesUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateVariablesUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/designer/{stackName}/variables] updateVariablesUsingPUT", response, response.Code())
	}
}

// NewUpdateVariablesUsingPUTOK creates a UpdateVariablesUsingPUTOK with default headers values
func NewUpdateVariablesUsingPUTOK() *UpdateVariablesUsingPUTOK {
	return &UpdateVariablesUsingPUTOK{}
}

/*
UpdateVariablesUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateVariablesUsingPUTOK struct {
}

// IsSuccess returns true when this update variables using p u t o k response has a 2xx status code
func (o *UpdateVariablesUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update variables using p u t o k response has a 3xx status code
func (o *UpdateVariablesUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update variables using p u t o k response has a 4xx status code
func (o *UpdateVariablesUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update variables using p u t o k response has a 5xx status code
func (o *UpdateVariablesUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update variables using p u t o k response a status code equal to that given
func (o *UpdateVariablesUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update variables using p u t o k response
func (o *UpdateVariablesUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateVariablesUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTOK", 200)
}

func (o *UpdateVariablesUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTOK", 200)
}

func (o *UpdateVariablesUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVariablesUsingPUTCreated creates a UpdateVariablesUsingPUTCreated with default headers values
func NewUpdateVariablesUsingPUTCreated() *UpdateVariablesUsingPUTCreated {
	return &UpdateVariablesUsingPUTCreated{}
}

/*
UpdateVariablesUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateVariablesUsingPUTCreated struct {
}

// IsSuccess returns true when this update variables using p u t created response has a 2xx status code
func (o *UpdateVariablesUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update variables using p u t created response has a 3xx status code
func (o *UpdateVariablesUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update variables using p u t created response has a 4xx status code
func (o *UpdateVariablesUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update variables using p u t created response has a 5xx status code
func (o *UpdateVariablesUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update variables using p u t created response a status code equal to that given
func (o *UpdateVariablesUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update variables using p u t created response
func (o *UpdateVariablesUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateVariablesUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTCreated", 201)
}

func (o *UpdateVariablesUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTCreated", 201)
}

func (o *UpdateVariablesUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVariablesUsingPUTUnauthorized creates a UpdateVariablesUsingPUTUnauthorized with default headers values
func NewUpdateVariablesUsingPUTUnauthorized() *UpdateVariablesUsingPUTUnauthorized {
	return &UpdateVariablesUsingPUTUnauthorized{}
}

/*
UpdateVariablesUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateVariablesUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update variables using p u t unauthorized response has a 2xx status code
func (o *UpdateVariablesUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update variables using p u t unauthorized response has a 3xx status code
func (o *UpdateVariablesUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update variables using p u t unauthorized response has a 4xx status code
func (o *UpdateVariablesUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update variables using p u t unauthorized response has a 5xx status code
func (o *UpdateVariablesUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update variables using p u t unauthorized response a status code equal to that given
func (o *UpdateVariablesUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update variables using p u t unauthorized response
func (o *UpdateVariablesUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateVariablesUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTUnauthorized", 401)
}

func (o *UpdateVariablesUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTUnauthorized", 401)
}

func (o *UpdateVariablesUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVariablesUsingPUTForbidden creates a UpdateVariablesUsingPUTForbidden with default headers values
func NewUpdateVariablesUsingPUTForbidden() *UpdateVariablesUsingPUTForbidden {
	return &UpdateVariablesUsingPUTForbidden{}
}

/*
UpdateVariablesUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateVariablesUsingPUTForbidden struct {
}

// IsSuccess returns true when this update variables using p u t forbidden response has a 2xx status code
func (o *UpdateVariablesUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update variables using p u t forbidden response has a 3xx status code
func (o *UpdateVariablesUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update variables using p u t forbidden response has a 4xx status code
func (o *UpdateVariablesUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update variables using p u t forbidden response has a 5xx status code
func (o *UpdateVariablesUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update variables using p u t forbidden response a status code equal to that given
func (o *UpdateVariablesUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update variables using p u t forbidden response
func (o *UpdateVariablesUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateVariablesUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTForbidden", 403)
}

func (o *UpdateVariablesUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTForbidden", 403)
}

func (o *UpdateVariablesUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateVariablesUsingPUTNotFound creates a UpdateVariablesUsingPUTNotFound with default headers values
func NewUpdateVariablesUsingPUTNotFound() *UpdateVariablesUsingPUTNotFound {
	return &UpdateVariablesUsingPUTNotFound{}
}

/*
UpdateVariablesUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateVariablesUsingPUTNotFound struct {
}

// IsSuccess returns true when this update variables using p u t not found response has a 2xx status code
func (o *UpdateVariablesUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update variables using p u t not found response has a 3xx status code
func (o *UpdateVariablesUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update variables using p u t not found response has a 4xx status code
func (o *UpdateVariablesUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update variables using p u t not found response has a 5xx status code
func (o *UpdateVariablesUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update variables using p u t not found response a status code equal to that given
func (o *UpdateVariablesUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update variables using p u t not found response
func (o *UpdateVariablesUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateVariablesUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTNotFound", 404)
}

func (o *UpdateVariablesUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/variables][%d] updateVariablesUsingPUTNotFound", 404)
}

func (o *UpdateVariablesUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
