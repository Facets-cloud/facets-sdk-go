// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateBranchReader is a Reader for the CreateBranch structure.
type CreateBranchReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBranchReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBranchOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBranchBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateBranchNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateBranchMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateBranchInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch] createBranch", response, response.Code())
	}
}

// NewCreateBranchOK creates a CreateBranchOK with default headers values
func NewCreateBranchOK() *CreateBranchOK {
	return &CreateBranchOK{}
}

/*
CreateBranchOK describes a response with status code 200, with default header values.

OK
*/
type CreateBranchOK struct {
}

// IsSuccess returns true when this create branch o k response has a 2xx status code
func (o *CreateBranchOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create branch o k response has a 3xx status code
func (o *CreateBranchOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch o k response has a 4xx status code
func (o *CreateBranchOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create branch o k response has a 5xx status code
func (o *CreateBranchOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch o k response a status code equal to that given
func (o *CreateBranchOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create branch o k response
func (o *CreateBranchOK) Code() int {
	return 200
}

func (o *CreateBranchOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchOK", 200)
}

func (o *CreateBranchOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchOK", 200)
}

func (o *CreateBranchOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBranchBadRequest creates a CreateBranchBadRequest with default headers values
func NewCreateBranchBadRequest() *CreateBranchBadRequest {
	return &CreateBranchBadRequest{}
}

/*
CreateBranchBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateBranchBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create branch bad request response has a 2xx status code
func (o *CreateBranchBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create branch bad request response has a 3xx status code
func (o *CreateBranchBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch bad request response has a 4xx status code
func (o *CreateBranchBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create branch bad request response has a 5xx status code
func (o *CreateBranchBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch bad request response a status code equal to that given
func (o *CreateBranchBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create branch bad request response
func (o *CreateBranchBadRequest) Code() int {
	return 400
}

func (o *CreateBranchBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchBadRequest %s", 400, payload)
}

func (o *CreateBranchBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchBadRequest %s", 400, payload)
}

func (o *CreateBranchBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateBranchBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBranchNotFound creates a CreateBranchNotFound with default headers values
func NewCreateBranchNotFound() *CreateBranchNotFound {
	return &CreateBranchNotFound{}
}

/*
CreateBranchNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateBranchNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create branch not found response has a 2xx status code
func (o *CreateBranchNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create branch not found response has a 3xx status code
func (o *CreateBranchNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch not found response has a 4xx status code
func (o *CreateBranchNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create branch not found response has a 5xx status code
func (o *CreateBranchNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch not found response a status code equal to that given
func (o *CreateBranchNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create branch not found response
func (o *CreateBranchNotFound) Code() int {
	return 404
}

func (o *CreateBranchNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchNotFound %s", 404, payload)
}

func (o *CreateBranchNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchNotFound %s", 404, payload)
}

func (o *CreateBranchNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateBranchNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBranchMethodNotAllowed creates a CreateBranchMethodNotAllowed with default headers values
func NewCreateBranchMethodNotAllowed() *CreateBranchMethodNotAllowed {
	return &CreateBranchMethodNotAllowed{}
}

/*
CreateBranchMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateBranchMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create branch method not allowed response has a 2xx status code
func (o *CreateBranchMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create branch method not allowed response has a 3xx status code
func (o *CreateBranchMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch method not allowed response has a 4xx status code
func (o *CreateBranchMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create branch method not allowed response has a 5xx status code
func (o *CreateBranchMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch method not allowed response a status code equal to that given
func (o *CreateBranchMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create branch method not allowed response
func (o *CreateBranchMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateBranchMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchMethodNotAllowed %s", 405, payload)
}

func (o *CreateBranchMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchMethodNotAllowed %s", 405, payload)
}

func (o *CreateBranchMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateBranchMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBranchInternalServerError creates a CreateBranchInternalServerError with default headers values
func NewCreateBranchInternalServerError() *CreateBranchInternalServerError {
	return &CreateBranchInternalServerError{}
}

/*
CreateBranchInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateBranchInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create branch internal server error response has a 2xx status code
func (o *CreateBranchInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create branch internal server error response has a 3xx status code
func (o *CreateBranchInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch internal server error response has a 4xx status code
func (o *CreateBranchInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create branch internal server error response has a 5xx status code
func (o *CreateBranchInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create branch internal server error response a status code equal to that given
func (o *CreateBranchInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create branch internal server error response
func (o *CreateBranchInternalServerError) Code() int {
	return 500
}

func (o *CreateBranchInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchInternalServerError %s", 500, payload)
}

func (o *CreateBranchInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchInternalServerError %s", 500, payload)
}

func (o *CreateBranchInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateBranchInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
