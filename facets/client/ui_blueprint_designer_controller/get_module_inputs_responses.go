// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetModuleInputsReader is a Reader for the GetModuleInputs structure.
type GetModuleInputsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetModuleInputsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetModuleInputsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetModuleInputsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetModuleInputsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetModuleInputsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetModuleInputsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input] getModuleInputs", response, response.Code())
	}
}

// NewGetModuleInputsOK creates a GetModuleInputsOK with default headers values
func NewGetModuleInputsOK() *GetModuleInputsOK {
	return &GetModuleInputsOK{}
}

/*
GetModuleInputsOK describes a response with status code 200, with default header values.

OK
*/
type GetModuleInputsOK struct {
	Payload map[string]models.ModuleInputDTO
}

// IsSuccess returns true when this get module inputs o k response has a 2xx status code
func (o *GetModuleInputsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get module inputs o k response has a 3xx status code
func (o *GetModuleInputsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module inputs o k response has a 4xx status code
func (o *GetModuleInputsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get module inputs o k response has a 5xx status code
func (o *GetModuleInputsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get module inputs o k response a status code equal to that given
func (o *GetModuleInputsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get module inputs o k response
func (o *GetModuleInputsOK) Code() int {
	return 200
}

func (o *GetModuleInputsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsOK %s", 200, payload)
}

func (o *GetModuleInputsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsOK %s", 200, payload)
}

func (o *GetModuleInputsOK) GetPayload() map[string]models.ModuleInputDTO {
	return o.Payload
}

func (o *GetModuleInputsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleInputsBadRequest creates a GetModuleInputsBadRequest with default headers values
func NewGetModuleInputsBadRequest() *GetModuleInputsBadRequest {
	return &GetModuleInputsBadRequest{}
}

/*
GetModuleInputsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetModuleInputsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module inputs bad request response has a 2xx status code
func (o *GetModuleInputsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module inputs bad request response has a 3xx status code
func (o *GetModuleInputsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module inputs bad request response has a 4xx status code
func (o *GetModuleInputsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get module inputs bad request response has a 5xx status code
func (o *GetModuleInputsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get module inputs bad request response a status code equal to that given
func (o *GetModuleInputsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get module inputs bad request response
func (o *GetModuleInputsBadRequest) Code() int {
	return 400
}

func (o *GetModuleInputsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsBadRequest %s", 400, payload)
}

func (o *GetModuleInputsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsBadRequest %s", 400, payload)
}

func (o *GetModuleInputsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleInputsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleInputsNotFound creates a GetModuleInputsNotFound with default headers values
func NewGetModuleInputsNotFound() *GetModuleInputsNotFound {
	return &GetModuleInputsNotFound{}
}

/*
GetModuleInputsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetModuleInputsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module inputs not found response has a 2xx status code
func (o *GetModuleInputsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module inputs not found response has a 3xx status code
func (o *GetModuleInputsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module inputs not found response has a 4xx status code
func (o *GetModuleInputsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get module inputs not found response has a 5xx status code
func (o *GetModuleInputsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get module inputs not found response a status code equal to that given
func (o *GetModuleInputsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get module inputs not found response
func (o *GetModuleInputsNotFound) Code() int {
	return 404
}

func (o *GetModuleInputsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsNotFound %s", 404, payload)
}

func (o *GetModuleInputsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsNotFound %s", 404, payload)
}

func (o *GetModuleInputsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleInputsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleInputsMethodNotAllowed creates a GetModuleInputsMethodNotAllowed with default headers values
func NewGetModuleInputsMethodNotAllowed() *GetModuleInputsMethodNotAllowed {
	return &GetModuleInputsMethodNotAllowed{}
}

/*
GetModuleInputsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetModuleInputsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module inputs method not allowed response has a 2xx status code
func (o *GetModuleInputsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module inputs method not allowed response has a 3xx status code
func (o *GetModuleInputsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module inputs method not allowed response has a 4xx status code
func (o *GetModuleInputsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get module inputs method not allowed response has a 5xx status code
func (o *GetModuleInputsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get module inputs method not allowed response a status code equal to that given
func (o *GetModuleInputsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get module inputs method not allowed response
func (o *GetModuleInputsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetModuleInputsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsMethodNotAllowed %s", 405, payload)
}

func (o *GetModuleInputsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsMethodNotAllowed %s", 405, payload)
}

func (o *GetModuleInputsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleInputsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleInputsInternalServerError creates a GetModuleInputsInternalServerError with default headers values
func NewGetModuleInputsInternalServerError() *GetModuleInputsInternalServerError {
	return &GetModuleInputsInternalServerError{}
}

/*
GetModuleInputsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetModuleInputsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module inputs internal server error response has a 2xx status code
func (o *GetModuleInputsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module inputs internal server error response has a 3xx status code
func (o *GetModuleInputsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module inputs internal server error response has a 4xx status code
func (o *GetModuleInputsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get module inputs internal server error response has a 5xx status code
func (o *GetModuleInputsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get module inputs internal server error response a status code equal to that given
func (o *GetModuleInputsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get module inputs internal server error response
func (o *GetModuleInputsInternalServerError) Code() int {
	return 500
}

func (o *GetModuleInputsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsInternalServerError %s", 500, payload)
}

func (o *GetModuleInputsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/intent/{intent}/flavor/{flavor}/input][%d] getModuleInputsInternalServerError %s", 500, payload)
}

func (o *GetModuleInputsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleInputsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
