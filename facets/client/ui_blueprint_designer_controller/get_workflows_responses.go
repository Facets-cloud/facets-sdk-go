// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetWorkflowsReader is a Reader for the GetWorkflows structure.
type GetWorkflowsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkflowsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetWorkflowsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/workflows] getWorkflows", response, response.Code())
	}
}

// NewGetWorkflowsOK creates a GetWorkflowsOK with default headers values
func NewGetWorkflowsOK() *GetWorkflowsOK {
	return &GetWorkflowsOK{}
}

/*
GetWorkflowsOK describes a response with status code 200, with default header values.

OK
*/
type GetWorkflowsOK struct {
	Payload []*models.Workflow
}

// IsSuccess returns true when this get workflows o k response has a 2xx status code
func (o *GetWorkflowsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflows o k response has a 3xx status code
func (o *GetWorkflowsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows o k response has a 4xx status code
func (o *GetWorkflowsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflows o k response has a 5xx status code
func (o *GetWorkflowsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows o k response a status code equal to that given
func (o *GetWorkflowsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflows o k response
func (o *GetWorkflowsOK) Code() int {
	return 200
}

func (o *GetWorkflowsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsOK %s", 200, payload)
}

func (o *GetWorkflowsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsOK %s", 200, payload)
}

func (o *GetWorkflowsOK) GetPayload() []*models.Workflow {
	return o.Payload
}

func (o *GetWorkflowsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowsBadRequest creates a GetWorkflowsBadRequest with default headers values
func NewGetWorkflowsBadRequest() *GetWorkflowsBadRequest {
	return &GetWorkflowsBadRequest{}
}

/*
GetWorkflowsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetWorkflowsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflows bad request response has a 2xx status code
func (o *GetWorkflowsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflows bad request response has a 3xx status code
func (o *GetWorkflowsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows bad request response has a 4xx status code
func (o *GetWorkflowsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflows bad request response has a 5xx status code
func (o *GetWorkflowsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows bad request response a status code equal to that given
func (o *GetWorkflowsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get workflows bad request response
func (o *GetWorkflowsBadRequest) Code() int {
	return 400
}

func (o *GetWorkflowsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsBadRequest %s", 400, payload)
}

func (o *GetWorkflowsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsBadRequest %s", 400, payload)
}

func (o *GetWorkflowsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowsNotFound creates a GetWorkflowsNotFound with default headers values
func NewGetWorkflowsNotFound() *GetWorkflowsNotFound {
	return &GetWorkflowsNotFound{}
}

/*
GetWorkflowsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetWorkflowsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflows not found response has a 2xx status code
func (o *GetWorkflowsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflows not found response has a 3xx status code
func (o *GetWorkflowsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows not found response has a 4xx status code
func (o *GetWorkflowsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflows not found response has a 5xx status code
func (o *GetWorkflowsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows not found response a status code equal to that given
func (o *GetWorkflowsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflows not found response
func (o *GetWorkflowsNotFound) Code() int {
	return 404
}

func (o *GetWorkflowsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsNotFound %s", 404, payload)
}

func (o *GetWorkflowsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsNotFound %s", 404, payload)
}

func (o *GetWorkflowsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowsMethodNotAllowed creates a GetWorkflowsMethodNotAllowed with default headers values
func NewGetWorkflowsMethodNotAllowed() *GetWorkflowsMethodNotAllowed {
	return &GetWorkflowsMethodNotAllowed{}
}

/*
GetWorkflowsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetWorkflowsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflows method not allowed response has a 2xx status code
func (o *GetWorkflowsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflows method not allowed response has a 3xx status code
func (o *GetWorkflowsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows method not allowed response has a 4xx status code
func (o *GetWorkflowsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflows method not allowed response has a 5xx status code
func (o *GetWorkflowsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflows method not allowed response a status code equal to that given
func (o *GetWorkflowsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get workflows method not allowed response
func (o *GetWorkflowsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetWorkflowsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsMethodNotAllowed %s", 405, payload)
}

func (o *GetWorkflowsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsMethodNotAllowed %s", 405, payload)
}

func (o *GetWorkflowsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowsInternalServerError creates a GetWorkflowsInternalServerError with default headers values
func NewGetWorkflowsInternalServerError() *GetWorkflowsInternalServerError {
	return &GetWorkflowsInternalServerError{}
}

/*
GetWorkflowsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetWorkflowsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflows internal server error response has a 2xx status code
func (o *GetWorkflowsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflows internal server error response has a 3xx status code
func (o *GetWorkflowsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflows internal server error response has a 4xx status code
func (o *GetWorkflowsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflows internal server error response has a 5xx status code
func (o *GetWorkflowsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get workflows internal server error response a status code equal to that given
func (o *GetWorkflowsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get workflows internal server error response
func (o *GetWorkflowsInternalServerError) Code() int {
	return 500
}

func (o *GetWorkflowsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsInternalServerError %s", 500, payload)
}

func (o *GetWorkflowsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflows][%d] getWorkflowsInternalServerError %s", 500, payload)
}

func (o *GetWorkflowsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
