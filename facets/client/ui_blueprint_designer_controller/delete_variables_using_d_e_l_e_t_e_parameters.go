// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteVariablesUsingDELETEParams creates a new DeleteVariablesUsingDELETEParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewDeleteVariablesUsingDELETEParams() *DeleteVariablesUsingDELETEParams {
	return &DeleteVariablesUsingDELETEParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteVariablesUsingDELETEParamsWithTimeout creates a new DeleteVariablesUsingDELETEParams object
// with the ability to set a timeout on a request.
func NewDeleteVariablesUsingDELETEParamsWithTimeout(timeout time.Duration) *DeleteVariablesUsingDELETEParams {
	return &DeleteVariablesUsingDELETEParams{
		timeout: timeout,
	}
}

// NewDeleteVariablesUsingDELETEParamsWithContext creates a new DeleteVariablesUsingDELETEParams object
// with the ability to set a context for a request.
func NewDeleteVariablesUsingDELETEParamsWithContext(ctx context.Context) *DeleteVariablesUsingDELETEParams {
	return &DeleteVariablesUsingDELETEParams{
		Context: ctx,
	}
}

// NewDeleteVariablesUsingDELETEParamsWithHTTPClient creates a new DeleteVariablesUsingDELETEParams object
// with the ability to set a custom HTTPClient for a request.
func NewDeleteVariablesUsingDELETEParamsWithHTTPClient(client *http.Client) *DeleteVariablesUsingDELETEParams {
	return &DeleteVariablesUsingDELETEParams{
		HTTPClient: client,
	}
}

/*
DeleteVariablesUsingDELETEParams contains all the parameters to send to the API endpoint

	for the delete variables using d e l e t e operation.

	Typically these are written to a http.Request.
*/
type DeleteVariablesUsingDELETEParams struct {

	/* StackName.

	   stackName
	*/
	StackName string

	/* Variables.

	   variables
	*/
	Variables []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the delete variables using d e l e t e params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteVariablesUsingDELETEParams) WithDefaults() *DeleteVariablesUsingDELETEParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the delete variables using d e l e t e params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *DeleteVariablesUsingDELETEParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) WithTimeout(timeout time.Duration) *DeleteVariablesUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) WithContext(ctx context.Context) *DeleteVariablesUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) WithHTTPClient(client *http.Client) *DeleteVariablesUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithStackName adds the stackName to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) WithStackName(stackName string) *DeleteVariablesUsingDELETEParams {
	o.SetStackName(stackName)
	return o
}

// SetStackName adds the stackName to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) SetStackName(stackName string) {
	o.StackName = stackName
}

// WithVariables adds the variables to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) WithVariables(variables []string) *DeleteVariablesUsingDELETEParams {
	o.SetVariables(variables)
	return o
}

// SetVariables adds the variables to the delete variables using d e l e t e params
func (o *DeleteVariablesUsingDELETEParams) SetVariables(variables []string) {
	o.Variables = variables
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteVariablesUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param stackName
	if err := r.SetPathParam("stackName", o.StackName); err != nil {
		return err
	}
	if o.Variables != nil {
		if err := r.SetBodyParam(o.Variables); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
