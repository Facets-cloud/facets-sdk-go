// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAddOnModulesReader is a Reader for the GetAddOnModules structure.
type GetAddOnModulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAddOnModulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAddOnModulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAddOnModulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAddOnModulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAddOnModulesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAddOnModulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons] getAddOnModules", response, response.Code())
	}
}

// NewGetAddOnModulesOK creates a GetAddOnModulesOK with default headers values
func NewGetAddOnModulesOK() *GetAddOnModulesOK {
	return &GetAddOnModulesOK{}
}

/*
GetAddOnModulesOK describes a response with status code 200, with default header values.

OK
*/
type GetAddOnModulesOK struct {
	Payload []*models.AddOnDTO
}

// IsSuccess returns true when this get add on modules o k response has a 2xx status code
func (o *GetAddOnModulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get add on modules o k response has a 3xx status code
func (o *GetAddOnModulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules o k response has a 4xx status code
func (o *GetAddOnModulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get add on modules o k response has a 5xx status code
func (o *GetAddOnModulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules o k response a status code equal to that given
func (o *GetAddOnModulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get add on modules o k response
func (o *GetAddOnModulesOK) Code() int {
	return 200
}

func (o *GetAddOnModulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesOK %s", 200, payload)
}

func (o *GetAddOnModulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesOK %s", 200, payload)
}

func (o *GetAddOnModulesOK) GetPayload() []*models.AddOnDTO {
	return o.Payload
}

func (o *GetAddOnModulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddOnModulesBadRequest creates a GetAddOnModulesBadRequest with default headers values
func NewGetAddOnModulesBadRequest() *GetAddOnModulesBadRequest {
	return &GetAddOnModulesBadRequest{}
}

/*
GetAddOnModulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAddOnModulesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get add on modules bad request response has a 2xx status code
func (o *GetAddOnModulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get add on modules bad request response has a 3xx status code
func (o *GetAddOnModulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules bad request response has a 4xx status code
func (o *GetAddOnModulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get add on modules bad request response has a 5xx status code
func (o *GetAddOnModulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules bad request response a status code equal to that given
func (o *GetAddOnModulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get add on modules bad request response
func (o *GetAddOnModulesBadRequest) Code() int {
	return 400
}

func (o *GetAddOnModulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesBadRequest %s", 400, payload)
}

func (o *GetAddOnModulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesBadRequest %s", 400, payload)
}

func (o *GetAddOnModulesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAddOnModulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddOnModulesNotFound creates a GetAddOnModulesNotFound with default headers values
func NewGetAddOnModulesNotFound() *GetAddOnModulesNotFound {
	return &GetAddOnModulesNotFound{}
}

/*
GetAddOnModulesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAddOnModulesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get add on modules not found response has a 2xx status code
func (o *GetAddOnModulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get add on modules not found response has a 3xx status code
func (o *GetAddOnModulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules not found response has a 4xx status code
func (o *GetAddOnModulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get add on modules not found response has a 5xx status code
func (o *GetAddOnModulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules not found response a status code equal to that given
func (o *GetAddOnModulesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get add on modules not found response
func (o *GetAddOnModulesNotFound) Code() int {
	return 404
}

func (o *GetAddOnModulesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesNotFound %s", 404, payload)
}

func (o *GetAddOnModulesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesNotFound %s", 404, payload)
}

func (o *GetAddOnModulesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAddOnModulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddOnModulesMethodNotAllowed creates a GetAddOnModulesMethodNotAllowed with default headers values
func NewGetAddOnModulesMethodNotAllowed() *GetAddOnModulesMethodNotAllowed {
	return &GetAddOnModulesMethodNotAllowed{}
}

/*
GetAddOnModulesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAddOnModulesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get add on modules method not allowed response has a 2xx status code
func (o *GetAddOnModulesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get add on modules method not allowed response has a 3xx status code
func (o *GetAddOnModulesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules method not allowed response has a 4xx status code
func (o *GetAddOnModulesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get add on modules method not allowed response has a 5xx status code
func (o *GetAddOnModulesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get add on modules method not allowed response a status code equal to that given
func (o *GetAddOnModulesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get add on modules method not allowed response
func (o *GetAddOnModulesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAddOnModulesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesMethodNotAllowed %s", 405, payload)
}

func (o *GetAddOnModulesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesMethodNotAllowed %s", 405, payload)
}

func (o *GetAddOnModulesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAddOnModulesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAddOnModulesInternalServerError creates a GetAddOnModulesInternalServerError with default headers values
func NewGetAddOnModulesInternalServerError() *GetAddOnModulesInternalServerError {
	return &GetAddOnModulesInternalServerError{}
}

/*
GetAddOnModulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAddOnModulesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get add on modules internal server error response has a 2xx status code
func (o *GetAddOnModulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get add on modules internal server error response has a 3xx status code
func (o *GetAddOnModulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get add on modules internal server error response has a 4xx status code
func (o *GetAddOnModulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get add on modules internal server error response has a 5xx status code
func (o *GetAddOnModulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get add on modules internal server error response a status code equal to that given
func (o *GetAddOnModulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get add on modules internal server error response
func (o *GetAddOnModulesInternalServerError) Code() int {
	return 500
}

func (o *GetAddOnModulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesInternalServerError %s", 500, payload)
}

func (o *GetAddOnModulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/add-ons][%d] getAddOnModulesInternalServerError %s", 500, payload)
}

func (o *GetAddOnModulesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAddOnModulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
