// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetPullRequestsReader is a Reader for the GetPullRequests structure.
type GetPullRequestsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPullRequestsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPullRequestsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPullRequestsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPullRequestsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetPullRequestsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPullRequestsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls] getPullRequests", response, response.Code())
	}
}

// NewGetPullRequestsOK creates a GetPullRequestsOK with default headers values
func NewGetPullRequestsOK() *GetPullRequestsOK {
	return &GetPullRequestsOK{}
}

/*
GetPullRequestsOK describes a response with status code 200, with default header values.

OK
*/
type GetPullRequestsOK struct {
	Payload *models.ListPullRequestResponse
}

// IsSuccess returns true when this get pull requests o k response has a 2xx status code
func (o *GetPullRequestsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get pull requests o k response has a 3xx status code
func (o *GetPullRequestsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pull requests o k response has a 4xx status code
func (o *GetPullRequestsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pull requests o k response has a 5xx status code
func (o *GetPullRequestsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get pull requests o k response a status code equal to that given
func (o *GetPullRequestsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get pull requests o k response
func (o *GetPullRequestsOK) Code() int {
	return 200
}

func (o *GetPullRequestsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsOK %s", 200, payload)
}

func (o *GetPullRequestsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsOK %s", 200, payload)
}

func (o *GetPullRequestsOK) GetPayload() *models.ListPullRequestResponse {
	return o.Payload
}

func (o *GetPullRequestsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListPullRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPullRequestsBadRequest creates a GetPullRequestsBadRequest with default headers values
func NewGetPullRequestsBadRequest() *GetPullRequestsBadRequest {
	return &GetPullRequestsBadRequest{}
}

/*
GetPullRequestsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetPullRequestsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get pull requests bad request response has a 2xx status code
func (o *GetPullRequestsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pull requests bad request response has a 3xx status code
func (o *GetPullRequestsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pull requests bad request response has a 4xx status code
func (o *GetPullRequestsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pull requests bad request response has a 5xx status code
func (o *GetPullRequestsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get pull requests bad request response a status code equal to that given
func (o *GetPullRequestsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get pull requests bad request response
func (o *GetPullRequestsBadRequest) Code() int {
	return 400
}

func (o *GetPullRequestsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsBadRequest %s", 400, payload)
}

func (o *GetPullRequestsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsBadRequest %s", 400, payload)
}

func (o *GetPullRequestsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetPullRequestsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPullRequestsNotFound creates a GetPullRequestsNotFound with default headers values
func NewGetPullRequestsNotFound() *GetPullRequestsNotFound {
	return &GetPullRequestsNotFound{}
}

/*
GetPullRequestsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPullRequestsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get pull requests not found response has a 2xx status code
func (o *GetPullRequestsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pull requests not found response has a 3xx status code
func (o *GetPullRequestsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pull requests not found response has a 4xx status code
func (o *GetPullRequestsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pull requests not found response has a 5xx status code
func (o *GetPullRequestsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get pull requests not found response a status code equal to that given
func (o *GetPullRequestsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get pull requests not found response
func (o *GetPullRequestsNotFound) Code() int {
	return 404
}

func (o *GetPullRequestsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsNotFound %s", 404, payload)
}

func (o *GetPullRequestsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsNotFound %s", 404, payload)
}

func (o *GetPullRequestsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetPullRequestsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPullRequestsMethodNotAllowed creates a GetPullRequestsMethodNotAllowed with default headers values
func NewGetPullRequestsMethodNotAllowed() *GetPullRequestsMethodNotAllowed {
	return &GetPullRequestsMethodNotAllowed{}
}

/*
GetPullRequestsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetPullRequestsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get pull requests method not allowed response has a 2xx status code
func (o *GetPullRequestsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pull requests method not allowed response has a 3xx status code
func (o *GetPullRequestsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pull requests method not allowed response has a 4xx status code
func (o *GetPullRequestsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pull requests method not allowed response has a 5xx status code
func (o *GetPullRequestsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get pull requests method not allowed response a status code equal to that given
func (o *GetPullRequestsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get pull requests method not allowed response
func (o *GetPullRequestsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetPullRequestsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsMethodNotAllowed %s", 405, payload)
}

func (o *GetPullRequestsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsMethodNotAllowed %s", 405, payload)
}

func (o *GetPullRequestsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetPullRequestsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPullRequestsInternalServerError creates a GetPullRequestsInternalServerError with default headers values
func NewGetPullRequestsInternalServerError() *GetPullRequestsInternalServerError {
	return &GetPullRequestsInternalServerError{}
}

/*
GetPullRequestsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetPullRequestsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get pull requests internal server error response has a 2xx status code
func (o *GetPullRequestsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pull requests internal server error response has a 3xx status code
func (o *GetPullRequestsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pull requests internal server error response has a 4xx status code
func (o *GetPullRequestsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pull requests internal server error response has a 5xx status code
func (o *GetPullRequestsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get pull requests internal server error response a status code equal to that given
func (o *GetPullRequestsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get pull requests internal server error response
func (o *GetPullRequestsInternalServerError) Code() int {
	return 500
}

func (o *GetPullRequestsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsInternalServerError %s", 500, payload)
}

func (o *GetPullRequestsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/pulls][%d] getPullRequestsInternalServerError %s", 500, payload)
}

func (o *GetPullRequestsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetPullRequestsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
