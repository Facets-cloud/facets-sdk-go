// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetWorkflowRunsUsingGETReader is a Reader for the GetWorkflowRunsUsingGET structure.
type GetWorkflowRunsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowRunsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowRunsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetWorkflowRunsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetWorkflowRunsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowRunsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs] getWorkflowRunsUsingGET", response, response.Code())
	}
}

// NewGetWorkflowRunsUsingGETOK creates a GetWorkflowRunsUsingGETOK with default headers values
func NewGetWorkflowRunsUsingGETOK() *GetWorkflowRunsUsingGETOK {
	return &GetWorkflowRunsUsingGETOK{}
}

/*
GetWorkflowRunsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetWorkflowRunsUsingGETOK struct {
	Payload *models.ListWorkflowRunsResponse
}

// IsSuccess returns true when this get workflow runs using g e t o k response has a 2xx status code
func (o *GetWorkflowRunsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflow runs using g e t o k response has a 3xx status code
func (o *GetWorkflowRunsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs using g e t o k response has a 4xx status code
func (o *GetWorkflowRunsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow runs using g e t o k response has a 5xx status code
func (o *GetWorkflowRunsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs using g e t o k response a status code equal to that given
func (o *GetWorkflowRunsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflow runs using g e t o k response
func (o *GetWorkflowRunsUsingGETOK) Code() int {
	return 200
}

func (o *GetWorkflowRunsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETOK %s", 200, payload)
}

func (o *GetWorkflowRunsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETOK %s", 200, payload)
}

func (o *GetWorkflowRunsUsingGETOK) GetPayload() *models.ListWorkflowRunsResponse {
	return o.Payload
}

func (o *GetWorkflowRunsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListWorkflowRunsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowRunsUsingGETUnauthorized creates a GetWorkflowRunsUsingGETUnauthorized with default headers values
func NewGetWorkflowRunsUsingGETUnauthorized() *GetWorkflowRunsUsingGETUnauthorized {
	return &GetWorkflowRunsUsingGETUnauthorized{}
}

/*
GetWorkflowRunsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetWorkflowRunsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get workflow runs using g e t unauthorized response has a 2xx status code
func (o *GetWorkflowRunsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow runs using g e t unauthorized response has a 3xx status code
func (o *GetWorkflowRunsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs using g e t unauthorized response has a 4xx status code
func (o *GetWorkflowRunsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow runs using g e t unauthorized response has a 5xx status code
func (o *GetWorkflowRunsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs using g e t unauthorized response a status code equal to that given
func (o *GetWorkflowRunsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get workflow runs using g e t unauthorized response
func (o *GetWorkflowRunsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetWorkflowRunsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETUnauthorized", 401)
}

func (o *GetWorkflowRunsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETUnauthorized", 401)
}

func (o *GetWorkflowRunsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowRunsUsingGETForbidden creates a GetWorkflowRunsUsingGETForbidden with default headers values
func NewGetWorkflowRunsUsingGETForbidden() *GetWorkflowRunsUsingGETForbidden {
	return &GetWorkflowRunsUsingGETForbidden{}
}

/*
GetWorkflowRunsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetWorkflowRunsUsingGETForbidden struct {
}

// IsSuccess returns true when this get workflow runs using g e t forbidden response has a 2xx status code
func (o *GetWorkflowRunsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow runs using g e t forbidden response has a 3xx status code
func (o *GetWorkflowRunsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs using g e t forbidden response has a 4xx status code
func (o *GetWorkflowRunsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow runs using g e t forbidden response has a 5xx status code
func (o *GetWorkflowRunsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs using g e t forbidden response a status code equal to that given
func (o *GetWorkflowRunsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get workflow runs using g e t forbidden response
func (o *GetWorkflowRunsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetWorkflowRunsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETForbidden", 403)
}

func (o *GetWorkflowRunsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETForbidden", 403)
}

func (o *GetWorkflowRunsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetWorkflowRunsUsingGETNotFound creates a GetWorkflowRunsUsingGETNotFound with default headers values
func NewGetWorkflowRunsUsingGETNotFound() *GetWorkflowRunsUsingGETNotFound {
	return &GetWorkflowRunsUsingGETNotFound{}
}

/*
GetWorkflowRunsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetWorkflowRunsUsingGETNotFound struct {
}

// IsSuccess returns true when this get workflow runs using g e t not found response has a 2xx status code
func (o *GetWorkflowRunsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow runs using g e t not found response has a 3xx status code
func (o *GetWorkflowRunsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs using g e t not found response has a 4xx status code
func (o *GetWorkflowRunsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow runs using g e t not found response has a 5xx status code
func (o *GetWorkflowRunsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs using g e t not found response a status code equal to that given
func (o *GetWorkflowRunsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflow runs using g e t not found response
func (o *GetWorkflowRunsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetWorkflowRunsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETNotFound", 404)
}

func (o *GetWorkflowRunsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/workflow-runs][%d] getWorkflowRunsUsingGETNotFound", 404)
}

func (o *GetWorkflowRunsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
