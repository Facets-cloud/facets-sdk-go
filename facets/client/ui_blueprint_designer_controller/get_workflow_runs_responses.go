// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetWorkflowRunsReader is a Reader for the GetWorkflowRuns structure.
type GetWorkflowRunsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetWorkflowRunsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetWorkflowRunsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetWorkflowRunsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetWorkflowRunsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetWorkflowRunsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetWorkflowRunsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/workflow-runs] getWorkflowRuns", response, response.Code())
	}
}

// NewGetWorkflowRunsOK creates a GetWorkflowRunsOK with default headers values
func NewGetWorkflowRunsOK() *GetWorkflowRunsOK {
	return &GetWorkflowRunsOK{}
}

/*
GetWorkflowRunsOK describes a response with status code 200, with default header values.

OK
*/
type GetWorkflowRunsOK struct {
	Payload *models.ListWorkflowRunsResponse
}

// IsSuccess returns true when this get workflow runs o k response has a 2xx status code
func (o *GetWorkflowRunsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get workflow runs o k response has a 3xx status code
func (o *GetWorkflowRunsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs o k response has a 4xx status code
func (o *GetWorkflowRunsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow runs o k response has a 5xx status code
func (o *GetWorkflowRunsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs o k response a status code equal to that given
func (o *GetWorkflowRunsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get workflow runs o k response
func (o *GetWorkflowRunsOK) Code() int {
	return 200
}

func (o *GetWorkflowRunsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsOK %s", 200, payload)
}

func (o *GetWorkflowRunsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsOK %s", 200, payload)
}

func (o *GetWorkflowRunsOK) GetPayload() *models.ListWorkflowRunsResponse {
	return o.Payload
}

func (o *GetWorkflowRunsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListWorkflowRunsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowRunsBadRequest creates a GetWorkflowRunsBadRequest with default headers values
func NewGetWorkflowRunsBadRequest() *GetWorkflowRunsBadRequest {
	return &GetWorkflowRunsBadRequest{}
}

/*
GetWorkflowRunsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetWorkflowRunsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflow runs bad request response has a 2xx status code
func (o *GetWorkflowRunsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow runs bad request response has a 3xx status code
func (o *GetWorkflowRunsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs bad request response has a 4xx status code
func (o *GetWorkflowRunsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow runs bad request response has a 5xx status code
func (o *GetWorkflowRunsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs bad request response a status code equal to that given
func (o *GetWorkflowRunsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get workflow runs bad request response
func (o *GetWorkflowRunsBadRequest) Code() int {
	return 400
}

func (o *GetWorkflowRunsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsBadRequest %s", 400, payload)
}

func (o *GetWorkflowRunsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsBadRequest %s", 400, payload)
}

func (o *GetWorkflowRunsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowRunsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowRunsNotFound creates a GetWorkflowRunsNotFound with default headers values
func NewGetWorkflowRunsNotFound() *GetWorkflowRunsNotFound {
	return &GetWorkflowRunsNotFound{}
}

/*
GetWorkflowRunsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetWorkflowRunsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflow runs not found response has a 2xx status code
func (o *GetWorkflowRunsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow runs not found response has a 3xx status code
func (o *GetWorkflowRunsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs not found response has a 4xx status code
func (o *GetWorkflowRunsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow runs not found response has a 5xx status code
func (o *GetWorkflowRunsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs not found response a status code equal to that given
func (o *GetWorkflowRunsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get workflow runs not found response
func (o *GetWorkflowRunsNotFound) Code() int {
	return 404
}

func (o *GetWorkflowRunsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsNotFound %s", 404, payload)
}

func (o *GetWorkflowRunsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsNotFound %s", 404, payload)
}

func (o *GetWorkflowRunsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowRunsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowRunsMethodNotAllowed creates a GetWorkflowRunsMethodNotAllowed with default headers values
func NewGetWorkflowRunsMethodNotAllowed() *GetWorkflowRunsMethodNotAllowed {
	return &GetWorkflowRunsMethodNotAllowed{}
}

/*
GetWorkflowRunsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetWorkflowRunsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflow runs method not allowed response has a 2xx status code
func (o *GetWorkflowRunsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow runs method not allowed response has a 3xx status code
func (o *GetWorkflowRunsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs method not allowed response has a 4xx status code
func (o *GetWorkflowRunsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get workflow runs method not allowed response has a 5xx status code
func (o *GetWorkflowRunsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get workflow runs method not allowed response a status code equal to that given
func (o *GetWorkflowRunsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get workflow runs method not allowed response
func (o *GetWorkflowRunsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetWorkflowRunsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsMethodNotAllowed %s", 405, payload)
}

func (o *GetWorkflowRunsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsMethodNotAllowed %s", 405, payload)
}

func (o *GetWorkflowRunsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowRunsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetWorkflowRunsInternalServerError creates a GetWorkflowRunsInternalServerError with default headers values
func NewGetWorkflowRunsInternalServerError() *GetWorkflowRunsInternalServerError {
	return &GetWorkflowRunsInternalServerError{}
}

/*
GetWorkflowRunsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetWorkflowRunsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get workflow runs internal server error response has a 2xx status code
func (o *GetWorkflowRunsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get workflow runs internal server error response has a 3xx status code
func (o *GetWorkflowRunsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get workflow runs internal server error response has a 4xx status code
func (o *GetWorkflowRunsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get workflow runs internal server error response has a 5xx status code
func (o *GetWorkflowRunsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get workflow runs internal server error response a status code equal to that given
func (o *GetWorkflowRunsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get workflow runs internal server error response
func (o *GetWorkflowRunsInternalServerError) Code() int {
	return 500
}

func (o *GetWorkflowRunsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsInternalServerError %s", 500, payload)
}

func (o *GetWorkflowRunsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/workflow-runs][%d] getWorkflowRunsInternalServerError %s", 500, payload)
}

func (o *GetWorkflowRunsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetWorkflowRunsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
