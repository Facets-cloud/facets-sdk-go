// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetSchemaMetadataReader is a Reader for the GetSchemaMetadata structure.
type GetSchemaMetadataReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSchemaMetadataReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSchemaMetadataOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSchemaMetadataBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSchemaMetadataNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetSchemaMetadataMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSchemaMetadataInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/facets-components] getSchemaMetadata", response, response.Code())
	}
}

// NewGetSchemaMetadataOK creates a GetSchemaMetadataOK with default headers values
func NewGetSchemaMetadataOK() *GetSchemaMetadataOK {
	return &GetSchemaMetadataOK{}
}

/*
GetSchemaMetadataOK describes a response with status code 200, with default header values.

OK
*/
type GetSchemaMetadataOK struct {
	Payload models.JSONNode
}

// IsSuccess returns true when this get schema metadata o k response has a 2xx status code
func (o *GetSchemaMetadataOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get schema metadata o k response has a 3xx status code
func (o *GetSchemaMetadataOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata o k response has a 4xx status code
func (o *GetSchemaMetadataOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schema metadata o k response has a 5xx status code
func (o *GetSchemaMetadataOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata o k response a status code equal to that given
func (o *GetSchemaMetadataOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get schema metadata o k response
func (o *GetSchemaMetadataOK) Code() int {
	return 200
}

func (o *GetSchemaMetadataOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataOK %s", 200, payload)
}

func (o *GetSchemaMetadataOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataOK %s", 200, payload)
}

func (o *GetSchemaMetadataOK) GetPayload() models.JSONNode {
	return o.Payload
}

func (o *GetSchemaMetadataOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaMetadataBadRequest creates a GetSchemaMetadataBadRequest with default headers values
func NewGetSchemaMetadataBadRequest() *GetSchemaMetadataBadRequest {
	return &GetSchemaMetadataBadRequest{}
}

/*
GetSchemaMetadataBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSchemaMetadataBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get schema metadata bad request response has a 2xx status code
func (o *GetSchemaMetadataBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema metadata bad request response has a 3xx status code
func (o *GetSchemaMetadataBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata bad request response has a 4xx status code
func (o *GetSchemaMetadataBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schema metadata bad request response has a 5xx status code
func (o *GetSchemaMetadataBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata bad request response a status code equal to that given
func (o *GetSchemaMetadataBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get schema metadata bad request response
func (o *GetSchemaMetadataBadRequest) Code() int {
	return 400
}

func (o *GetSchemaMetadataBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataBadRequest %s", 400, payload)
}

func (o *GetSchemaMetadataBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataBadRequest %s", 400, payload)
}

func (o *GetSchemaMetadataBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSchemaMetadataBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaMetadataNotFound creates a GetSchemaMetadataNotFound with default headers values
func NewGetSchemaMetadataNotFound() *GetSchemaMetadataNotFound {
	return &GetSchemaMetadataNotFound{}
}

/*
GetSchemaMetadataNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSchemaMetadataNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get schema metadata not found response has a 2xx status code
func (o *GetSchemaMetadataNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema metadata not found response has a 3xx status code
func (o *GetSchemaMetadataNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata not found response has a 4xx status code
func (o *GetSchemaMetadataNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schema metadata not found response has a 5xx status code
func (o *GetSchemaMetadataNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata not found response a status code equal to that given
func (o *GetSchemaMetadataNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get schema metadata not found response
func (o *GetSchemaMetadataNotFound) Code() int {
	return 404
}

func (o *GetSchemaMetadataNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataNotFound %s", 404, payload)
}

func (o *GetSchemaMetadataNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataNotFound %s", 404, payload)
}

func (o *GetSchemaMetadataNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSchemaMetadataNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaMetadataMethodNotAllowed creates a GetSchemaMetadataMethodNotAllowed with default headers values
func NewGetSchemaMetadataMethodNotAllowed() *GetSchemaMetadataMethodNotAllowed {
	return &GetSchemaMetadataMethodNotAllowed{}
}

/*
GetSchemaMetadataMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetSchemaMetadataMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get schema metadata method not allowed response has a 2xx status code
func (o *GetSchemaMetadataMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema metadata method not allowed response has a 3xx status code
func (o *GetSchemaMetadataMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata method not allowed response has a 4xx status code
func (o *GetSchemaMetadataMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get schema metadata method not allowed response has a 5xx status code
func (o *GetSchemaMetadataMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get schema metadata method not allowed response a status code equal to that given
func (o *GetSchemaMetadataMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get schema metadata method not allowed response
func (o *GetSchemaMetadataMethodNotAllowed) Code() int {
	return 405
}

func (o *GetSchemaMetadataMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataMethodNotAllowed %s", 405, payload)
}

func (o *GetSchemaMetadataMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataMethodNotAllowed %s", 405, payload)
}

func (o *GetSchemaMetadataMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSchemaMetadataMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSchemaMetadataInternalServerError creates a GetSchemaMetadataInternalServerError with default headers values
func NewGetSchemaMetadataInternalServerError() *GetSchemaMetadataInternalServerError {
	return &GetSchemaMetadataInternalServerError{}
}

/*
GetSchemaMetadataInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSchemaMetadataInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get schema metadata internal server error response has a 2xx status code
func (o *GetSchemaMetadataInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get schema metadata internal server error response has a 3xx status code
func (o *GetSchemaMetadataInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get schema metadata internal server error response has a 4xx status code
func (o *GetSchemaMetadataInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get schema metadata internal server error response has a 5xx status code
func (o *GetSchemaMetadataInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get schema metadata internal server error response a status code equal to that given
func (o *GetSchemaMetadataInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get schema metadata internal server error response
func (o *GetSchemaMetadataInternalServerError) Code() int {
	return 500
}

func (o *GetSchemaMetadataInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataInternalServerError %s", 500, payload)
}

func (o *GetSchemaMetadataInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/facets-components][%d] getSchemaMetadataInternalServerError %s", 500, payload)
}

func (o *GetSchemaMetadataInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSchemaMetadataInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
