// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteResourcesReader is a Reader for the DeleteResources structure.
type DeleteResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteResourcesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}] deleteResources", response, response.Code())
	}
}

// NewDeleteResourcesOK creates a DeleteResourcesOK with default headers values
func NewDeleteResourcesOK() *DeleteResourcesOK {
	return &DeleteResourcesOK{}
}

/*
DeleteResourcesOK describes a response with status code 200, with default header values.

OK
*/
type DeleteResourcesOK struct {
}

// IsSuccess returns true when this delete resources o k response has a 2xx status code
func (o *DeleteResourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resources o k response has a 3xx status code
func (o *DeleteResourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources o k response has a 4xx status code
func (o *DeleteResourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resources o k response has a 5xx status code
func (o *DeleteResourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources o k response a status code equal to that given
func (o *DeleteResourcesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete resources o k response
func (o *DeleteResourcesOK) Code() int {
	return 200
}

func (o *DeleteResourcesOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesOK", 200)
}

func (o *DeleteResourcesOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesOK", 200)
}

func (o *DeleteResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourcesBadRequest creates a DeleteResourcesBadRequest with default headers values
func NewDeleteResourcesBadRequest() *DeleteResourcesBadRequest {
	return &DeleteResourcesBadRequest{}
}

/*
DeleteResourcesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteResourcesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete resources bad request response has a 2xx status code
func (o *DeleteResourcesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resources bad request response has a 3xx status code
func (o *DeleteResourcesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources bad request response has a 4xx status code
func (o *DeleteResourcesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resources bad request response has a 5xx status code
func (o *DeleteResourcesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources bad request response a status code equal to that given
func (o *DeleteResourcesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete resources bad request response
func (o *DeleteResourcesBadRequest) Code() int {
	return 400
}

func (o *DeleteResourcesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesBadRequest %s", 400, payload)
}

func (o *DeleteResourcesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesBadRequest %s", 400, payload)
}

func (o *DeleteResourcesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcesNotFound creates a DeleteResourcesNotFound with default headers values
func NewDeleteResourcesNotFound() *DeleteResourcesNotFound {
	return &DeleteResourcesNotFound{}
}

/*
DeleteResourcesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteResourcesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete resources not found response has a 2xx status code
func (o *DeleteResourcesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resources not found response has a 3xx status code
func (o *DeleteResourcesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources not found response has a 4xx status code
func (o *DeleteResourcesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resources not found response has a 5xx status code
func (o *DeleteResourcesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources not found response a status code equal to that given
func (o *DeleteResourcesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete resources not found response
func (o *DeleteResourcesNotFound) Code() int {
	return 404
}

func (o *DeleteResourcesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesNotFound %s", 404, payload)
}

func (o *DeleteResourcesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesNotFound %s", 404, payload)
}

func (o *DeleteResourcesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcesMethodNotAllowed creates a DeleteResourcesMethodNotAllowed with default headers values
func NewDeleteResourcesMethodNotAllowed() *DeleteResourcesMethodNotAllowed {
	return &DeleteResourcesMethodNotAllowed{}
}

/*
DeleteResourcesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteResourcesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete resources method not allowed response has a 2xx status code
func (o *DeleteResourcesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resources method not allowed response has a 3xx status code
func (o *DeleteResourcesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources method not allowed response has a 4xx status code
func (o *DeleteResourcesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resources method not allowed response has a 5xx status code
func (o *DeleteResourcesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources method not allowed response a status code equal to that given
func (o *DeleteResourcesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete resources method not allowed response
func (o *DeleteResourcesMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteResourcesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesMethodNotAllowed %s", 405, payload)
}

func (o *DeleteResourcesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesMethodNotAllowed %s", 405, payload)
}

func (o *DeleteResourcesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteResourcesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteResourcesInternalServerError creates a DeleteResourcesInternalServerError with default headers values
func NewDeleteResourcesInternalServerError() *DeleteResourcesInternalServerError {
	return &DeleteResourcesInternalServerError{}
}

/*
DeleteResourcesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteResourcesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete resources internal server error response has a 2xx status code
func (o *DeleteResourcesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resources internal server error response has a 3xx status code
func (o *DeleteResourcesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources internal server error response has a 4xx status code
func (o *DeleteResourcesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resources internal server error response has a 5xx status code
func (o *DeleteResourcesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete resources internal server error response a status code equal to that given
func (o *DeleteResourcesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete resources internal server error response
func (o *DeleteResourcesInternalServerError) Code() int {
	return 500
}

func (o *DeleteResourcesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesInternalServerError %s", 500, payload)
}

func (o *DeleteResourcesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] deleteResourcesInternalServerError %s", 500, payload)
}

func (o *DeleteResourcesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
