// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateResourcesUsingPUT1Reader is a Reader for the UpdateResourcesUsingPUT1 structure.
type UpdateResourcesUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateResourcesUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateResourcesUsingPUT1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateResourcesUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateResourcesUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateResourcesUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateResourcesUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/designer/{stackName}] updateResourcesUsingPUT_1", response, response.Code())
	}
}

// NewUpdateResourcesUsingPUT1OK creates a UpdateResourcesUsingPUT1OK with default headers values
func NewUpdateResourcesUsingPUT1OK() *UpdateResourcesUsingPUT1OK {
	return &UpdateResourcesUsingPUT1OK{}
}

/*
UpdateResourcesUsingPUT1OK describes a response with status code 200, with default header values.

OK
*/
type UpdateResourcesUsingPUT1OK struct {
}

// IsSuccess returns true when this update resources using p u t1 o k response has a 2xx status code
func (o *UpdateResourcesUsingPUT1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update resources using p u t1 o k response has a 3xx status code
func (o *UpdateResourcesUsingPUT1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources using p u t1 o k response has a 4xx status code
func (o *UpdateResourcesUsingPUT1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resources using p u t1 o k response has a 5xx status code
func (o *UpdateResourcesUsingPUT1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources using p u t1 o k response a status code equal to that given
func (o *UpdateResourcesUsingPUT1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update resources using p u t1 o k response
func (o *UpdateResourcesUsingPUT1OK) Code() int {
	return 200
}

func (o *UpdateResourcesUsingPUT1OK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1OK", 200)
}

func (o *UpdateResourcesUsingPUT1OK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1OK", 200)
}

func (o *UpdateResourcesUsingPUT1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateResourcesUsingPUT1Created creates a UpdateResourcesUsingPUT1Created with default headers values
func NewUpdateResourcesUsingPUT1Created() *UpdateResourcesUsingPUT1Created {
	return &UpdateResourcesUsingPUT1Created{}
}

/*
UpdateResourcesUsingPUT1Created describes a response with status code 201, with default header values.

Created
*/
type UpdateResourcesUsingPUT1Created struct {
}

// IsSuccess returns true when this update resources using p u t1 created response has a 2xx status code
func (o *UpdateResourcesUsingPUT1Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update resources using p u t1 created response has a 3xx status code
func (o *UpdateResourcesUsingPUT1Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources using p u t1 created response has a 4xx status code
func (o *UpdateResourcesUsingPUT1Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resources using p u t1 created response has a 5xx status code
func (o *UpdateResourcesUsingPUT1Created) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources using p u t1 created response a status code equal to that given
func (o *UpdateResourcesUsingPUT1Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update resources using p u t1 created response
func (o *UpdateResourcesUsingPUT1Created) Code() int {
	return 201
}

func (o *UpdateResourcesUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1Created", 201)
}

func (o *UpdateResourcesUsingPUT1Created) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1Created", 201)
}

func (o *UpdateResourcesUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateResourcesUsingPUT1Unauthorized creates a UpdateResourcesUsingPUT1Unauthorized with default headers values
func NewUpdateResourcesUsingPUT1Unauthorized() *UpdateResourcesUsingPUT1Unauthorized {
	return &UpdateResourcesUsingPUT1Unauthorized{}
}

/*
UpdateResourcesUsingPUT1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateResourcesUsingPUT1Unauthorized struct {
}

// IsSuccess returns true when this update resources using p u t1 unauthorized response has a 2xx status code
func (o *UpdateResourcesUsingPUT1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resources using p u t1 unauthorized response has a 3xx status code
func (o *UpdateResourcesUsingPUT1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources using p u t1 unauthorized response has a 4xx status code
func (o *UpdateResourcesUsingPUT1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resources using p u t1 unauthorized response has a 5xx status code
func (o *UpdateResourcesUsingPUT1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources using p u t1 unauthorized response a status code equal to that given
func (o *UpdateResourcesUsingPUT1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update resources using p u t1 unauthorized response
func (o *UpdateResourcesUsingPUT1Unauthorized) Code() int {
	return 401
}

func (o *UpdateResourcesUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1Unauthorized", 401)
}

func (o *UpdateResourcesUsingPUT1Unauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1Unauthorized", 401)
}

func (o *UpdateResourcesUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateResourcesUsingPUT1Forbidden creates a UpdateResourcesUsingPUT1Forbidden with default headers values
func NewUpdateResourcesUsingPUT1Forbidden() *UpdateResourcesUsingPUT1Forbidden {
	return &UpdateResourcesUsingPUT1Forbidden{}
}

/*
UpdateResourcesUsingPUT1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateResourcesUsingPUT1Forbidden struct {
}

// IsSuccess returns true when this update resources using p u t1 forbidden response has a 2xx status code
func (o *UpdateResourcesUsingPUT1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resources using p u t1 forbidden response has a 3xx status code
func (o *UpdateResourcesUsingPUT1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources using p u t1 forbidden response has a 4xx status code
func (o *UpdateResourcesUsingPUT1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resources using p u t1 forbidden response has a 5xx status code
func (o *UpdateResourcesUsingPUT1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources using p u t1 forbidden response a status code equal to that given
func (o *UpdateResourcesUsingPUT1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update resources using p u t1 forbidden response
func (o *UpdateResourcesUsingPUT1Forbidden) Code() int {
	return 403
}

func (o *UpdateResourcesUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1Forbidden", 403)
}

func (o *UpdateResourcesUsingPUT1Forbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1Forbidden", 403)
}

func (o *UpdateResourcesUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateResourcesUsingPUT1NotFound creates a UpdateResourcesUsingPUT1NotFound with default headers values
func NewUpdateResourcesUsingPUT1NotFound() *UpdateResourcesUsingPUT1NotFound {
	return &UpdateResourcesUsingPUT1NotFound{}
}

/*
UpdateResourcesUsingPUT1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateResourcesUsingPUT1NotFound struct {
}

// IsSuccess returns true when this update resources using p u t1 not found response has a 2xx status code
func (o *UpdateResourcesUsingPUT1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resources using p u t1 not found response has a 3xx status code
func (o *UpdateResourcesUsingPUT1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources using p u t1 not found response has a 4xx status code
func (o *UpdateResourcesUsingPUT1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resources using p u t1 not found response has a 5xx status code
func (o *UpdateResourcesUsingPUT1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources using p u t1 not found response a status code equal to that given
func (o *UpdateResourcesUsingPUT1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update resources using p u t1 not found response
func (o *UpdateResourcesUsingPUT1NotFound) Code() int {
	return 404
}

func (o *UpdateResourcesUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1NotFound", 404)
}

func (o *UpdateResourcesUsingPUT1NotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}][%d] updateResourcesUsingPUT1NotFound", 404)
}

func (o *UpdateResourcesUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
