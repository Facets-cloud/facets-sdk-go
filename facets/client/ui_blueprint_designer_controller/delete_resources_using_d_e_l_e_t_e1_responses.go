// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteResourcesUsingDELETE1Reader is a Reader for the DeleteResourcesUsingDELETE1 structure.
type DeleteResourcesUsingDELETE1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteResourcesUsingDELETE1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteResourcesUsingDELETE1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteResourcesUsingDELETE1NoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteResourcesUsingDELETE1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteResourcesUsingDELETE1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/designer/{stackName}] deleteResourcesUsingDELETE_1", response, response.Code())
	}
}

// NewDeleteResourcesUsingDELETE1OK creates a DeleteResourcesUsingDELETE1OK with default headers values
func NewDeleteResourcesUsingDELETE1OK() *DeleteResourcesUsingDELETE1OK {
	return &DeleteResourcesUsingDELETE1OK{}
}

/*
DeleteResourcesUsingDELETE1OK describes a response with status code 200, with default header values.

OK
*/
type DeleteResourcesUsingDELETE1OK struct {
}

// IsSuccess returns true when this delete resources using d e l e t e1 o k response has a 2xx status code
func (o *DeleteResourcesUsingDELETE1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resources using d e l e t e1 o k response has a 3xx status code
func (o *DeleteResourcesUsingDELETE1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources using d e l e t e1 o k response has a 4xx status code
func (o *DeleteResourcesUsingDELETE1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resources using d e l e t e1 o k response has a 5xx status code
func (o *DeleteResourcesUsingDELETE1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources using d e l e t e1 o k response a status code equal to that given
func (o *DeleteResourcesUsingDELETE1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete resources using d e l e t e1 o k response
func (o *DeleteResourcesUsingDELETE1OK) Code() int {
	return 200
}

func (o *DeleteResourcesUsingDELETE1OK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1OK", 200)
}

func (o *DeleteResourcesUsingDELETE1OK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1OK", 200)
}

func (o *DeleteResourcesUsingDELETE1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourcesUsingDELETE1NoContent creates a DeleteResourcesUsingDELETE1NoContent with default headers values
func NewDeleteResourcesUsingDELETE1NoContent() *DeleteResourcesUsingDELETE1NoContent {
	return &DeleteResourcesUsingDELETE1NoContent{}
}

/*
DeleteResourcesUsingDELETE1NoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteResourcesUsingDELETE1NoContent struct {
}

// IsSuccess returns true when this delete resources using d e l e t e1 no content response has a 2xx status code
func (o *DeleteResourcesUsingDELETE1NoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete resources using d e l e t e1 no content response has a 3xx status code
func (o *DeleteResourcesUsingDELETE1NoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources using d e l e t e1 no content response has a 4xx status code
func (o *DeleteResourcesUsingDELETE1NoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete resources using d e l e t e1 no content response has a 5xx status code
func (o *DeleteResourcesUsingDELETE1NoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources using d e l e t e1 no content response a status code equal to that given
func (o *DeleteResourcesUsingDELETE1NoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete resources using d e l e t e1 no content response
func (o *DeleteResourcesUsingDELETE1NoContent) Code() int {
	return 204
}

func (o *DeleteResourcesUsingDELETE1NoContent) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1NoContent", 204)
}

func (o *DeleteResourcesUsingDELETE1NoContent) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1NoContent", 204)
}

func (o *DeleteResourcesUsingDELETE1NoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourcesUsingDELETE1Unauthorized creates a DeleteResourcesUsingDELETE1Unauthorized with default headers values
func NewDeleteResourcesUsingDELETE1Unauthorized() *DeleteResourcesUsingDELETE1Unauthorized {
	return &DeleteResourcesUsingDELETE1Unauthorized{}
}

/*
DeleteResourcesUsingDELETE1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteResourcesUsingDELETE1Unauthorized struct {
}

// IsSuccess returns true when this delete resources using d e l e t e1 unauthorized response has a 2xx status code
func (o *DeleteResourcesUsingDELETE1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resources using d e l e t e1 unauthorized response has a 3xx status code
func (o *DeleteResourcesUsingDELETE1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources using d e l e t e1 unauthorized response has a 4xx status code
func (o *DeleteResourcesUsingDELETE1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resources using d e l e t e1 unauthorized response has a 5xx status code
func (o *DeleteResourcesUsingDELETE1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources using d e l e t e1 unauthorized response a status code equal to that given
func (o *DeleteResourcesUsingDELETE1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete resources using d e l e t e1 unauthorized response
func (o *DeleteResourcesUsingDELETE1Unauthorized) Code() int {
	return 401
}

func (o *DeleteResourcesUsingDELETE1Unauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1Unauthorized", 401)
}

func (o *DeleteResourcesUsingDELETE1Unauthorized) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1Unauthorized", 401)
}

func (o *DeleteResourcesUsingDELETE1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteResourcesUsingDELETE1Forbidden creates a DeleteResourcesUsingDELETE1Forbidden with default headers values
func NewDeleteResourcesUsingDELETE1Forbidden() *DeleteResourcesUsingDELETE1Forbidden {
	return &DeleteResourcesUsingDELETE1Forbidden{}
}

/*
DeleteResourcesUsingDELETE1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteResourcesUsingDELETE1Forbidden struct {
}

// IsSuccess returns true when this delete resources using d e l e t e1 forbidden response has a 2xx status code
func (o *DeleteResourcesUsingDELETE1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete resources using d e l e t e1 forbidden response has a 3xx status code
func (o *DeleteResourcesUsingDELETE1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete resources using d e l e t e1 forbidden response has a 4xx status code
func (o *DeleteResourcesUsingDELETE1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete resources using d e l e t e1 forbidden response has a 5xx status code
func (o *DeleteResourcesUsingDELETE1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete resources using d e l e t e1 forbidden response a status code equal to that given
func (o *DeleteResourcesUsingDELETE1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete resources using d e l e t e1 forbidden response
func (o *DeleteResourcesUsingDELETE1Forbidden) Code() int {
	return 403
}

func (o *DeleteResourcesUsingDELETE1Forbidden) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1Forbidden", 403)
}

func (o *DeleteResourcesUsingDELETE1Forbidden) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/designer/{stackName}][%d] deleteResourcesUsingDELETE1Forbidden", 403)
}

func (o *DeleteResourcesUsingDELETE1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
