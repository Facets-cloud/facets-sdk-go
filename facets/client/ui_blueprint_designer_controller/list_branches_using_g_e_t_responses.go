// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListBranchesUsingGETReader is a Reader for the ListBranchesUsingGET structure.
type ListBranchesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBranchesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListBranchesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListBranchesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListBranchesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListBranchesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/branch-list] listBranchesUsingGET", response, response.Code())
	}
}

// NewListBranchesUsingGETOK creates a ListBranchesUsingGETOK with default headers values
func NewListBranchesUsingGETOK() *ListBranchesUsingGETOK {
	return &ListBranchesUsingGETOK{}
}

/*
ListBranchesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListBranchesUsingGETOK struct {
	Payload *models.BranchDTO
}

// IsSuccess returns true when this list branches using g e t o k response has a 2xx status code
func (o *ListBranchesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list branches using g e t o k response has a 3xx status code
func (o *ListBranchesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches using g e t o k response has a 4xx status code
func (o *ListBranchesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list branches using g e t o k response has a 5xx status code
func (o *ListBranchesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches using g e t o k response a status code equal to that given
func (o *ListBranchesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list branches using g e t o k response
func (o *ListBranchesUsingGETOK) Code() int {
	return 200
}

func (o *ListBranchesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETOK %s", 200, payload)
}

func (o *ListBranchesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETOK %s", 200, payload)
}

func (o *ListBranchesUsingGETOK) GetPayload() *models.BranchDTO {
	return o.Payload
}

func (o *ListBranchesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BranchDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBranchesUsingGETUnauthorized creates a ListBranchesUsingGETUnauthorized with default headers values
func NewListBranchesUsingGETUnauthorized() *ListBranchesUsingGETUnauthorized {
	return &ListBranchesUsingGETUnauthorized{}
}

/*
ListBranchesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListBranchesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list branches using g e t unauthorized response has a 2xx status code
func (o *ListBranchesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list branches using g e t unauthorized response has a 3xx status code
func (o *ListBranchesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches using g e t unauthorized response has a 4xx status code
func (o *ListBranchesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list branches using g e t unauthorized response has a 5xx status code
func (o *ListBranchesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches using g e t unauthorized response a status code equal to that given
func (o *ListBranchesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list branches using g e t unauthorized response
func (o *ListBranchesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListBranchesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETUnauthorized", 401)
}

func (o *ListBranchesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETUnauthorized", 401)
}

func (o *ListBranchesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBranchesUsingGETForbidden creates a ListBranchesUsingGETForbidden with default headers values
func NewListBranchesUsingGETForbidden() *ListBranchesUsingGETForbidden {
	return &ListBranchesUsingGETForbidden{}
}

/*
ListBranchesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListBranchesUsingGETForbidden struct {
}

// IsSuccess returns true when this list branches using g e t forbidden response has a 2xx status code
func (o *ListBranchesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list branches using g e t forbidden response has a 3xx status code
func (o *ListBranchesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches using g e t forbidden response has a 4xx status code
func (o *ListBranchesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list branches using g e t forbidden response has a 5xx status code
func (o *ListBranchesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches using g e t forbidden response a status code equal to that given
func (o *ListBranchesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list branches using g e t forbidden response
func (o *ListBranchesUsingGETForbidden) Code() int {
	return 403
}

func (o *ListBranchesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETForbidden", 403)
}

func (o *ListBranchesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETForbidden", 403)
}

func (o *ListBranchesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBranchesUsingGETNotFound creates a ListBranchesUsingGETNotFound with default headers values
func NewListBranchesUsingGETNotFound() *ListBranchesUsingGETNotFound {
	return &ListBranchesUsingGETNotFound{}
}

/*
ListBranchesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListBranchesUsingGETNotFound struct {
}

// IsSuccess returns true when this list branches using g e t not found response has a 2xx status code
func (o *ListBranchesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list branches using g e t not found response has a 3xx status code
func (o *ListBranchesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches using g e t not found response has a 4xx status code
func (o *ListBranchesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list branches using g e t not found response has a 5xx status code
func (o *ListBranchesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches using g e t not found response a status code equal to that given
func (o *ListBranchesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list branches using g e t not found response
func (o *ListBranchesUsingGETNotFound) Code() int {
	return 404
}

func (o *ListBranchesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETNotFound", 404)
}

func (o *ListBranchesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/branch-list][%d] listBranchesUsingGETNotFound", 404)
}

func (o *ListBranchesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
