// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CreateBranchUsingPOSTReader is a Reader for the CreateBranchUsingPOST structure.
type CreateBranchUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBranchUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBranchUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateBranchUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateBranchUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateBranchUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateBranchUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch] createBranchUsingPOST", response, response.Code())
	}
}

// NewCreateBranchUsingPOSTOK creates a CreateBranchUsingPOSTOK with default headers values
func NewCreateBranchUsingPOSTOK() *CreateBranchUsingPOSTOK {
	return &CreateBranchUsingPOSTOK{}
}

/*
CreateBranchUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateBranchUsingPOSTOK struct {
}

// IsSuccess returns true when this create branch using p o s t o k response has a 2xx status code
func (o *CreateBranchUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create branch using p o s t o k response has a 3xx status code
func (o *CreateBranchUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch using p o s t o k response has a 4xx status code
func (o *CreateBranchUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create branch using p o s t o k response has a 5xx status code
func (o *CreateBranchUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch using p o s t o k response a status code equal to that given
func (o *CreateBranchUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create branch using p o s t o k response
func (o *CreateBranchUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateBranchUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTOK", 200)
}

func (o *CreateBranchUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTOK", 200)
}

func (o *CreateBranchUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBranchUsingPOSTCreated creates a CreateBranchUsingPOSTCreated with default headers values
func NewCreateBranchUsingPOSTCreated() *CreateBranchUsingPOSTCreated {
	return &CreateBranchUsingPOSTCreated{}
}

/*
CreateBranchUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateBranchUsingPOSTCreated struct {
}

// IsSuccess returns true when this create branch using p o s t created response has a 2xx status code
func (o *CreateBranchUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create branch using p o s t created response has a 3xx status code
func (o *CreateBranchUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch using p o s t created response has a 4xx status code
func (o *CreateBranchUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create branch using p o s t created response has a 5xx status code
func (o *CreateBranchUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch using p o s t created response a status code equal to that given
func (o *CreateBranchUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create branch using p o s t created response
func (o *CreateBranchUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateBranchUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTCreated", 201)
}

func (o *CreateBranchUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTCreated", 201)
}

func (o *CreateBranchUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBranchUsingPOSTUnauthorized creates a CreateBranchUsingPOSTUnauthorized with default headers values
func NewCreateBranchUsingPOSTUnauthorized() *CreateBranchUsingPOSTUnauthorized {
	return &CreateBranchUsingPOSTUnauthorized{}
}

/*
CreateBranchUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateBranchUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create branch using p o s t unauthorized response has a 2xx status code
func (o *CreateBranchUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create branch using p o s t unauthorized response has a 3xx status code
func (o *CreateBranchUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch using p o s t unauthorized response has a 4xx status code
func (o *CreateBranchUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create branch using p o s t unauthorized response has a 5xx status code
func (o *CreateBranchUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch using p o s t unauthorized response a status code equal to that given
func (o *CreateBranchUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create branch using p o s t unauthorized response
func (o *CreateBranchUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateBranchUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTUnauthorized", 401)
}

func (o *CreateBranchUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTUnauthorized", 401)
}

func (o *CreateBranchUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBranchUsingPOSTForbidden creates a CreateBranchUsingPOSTForbidden with default headers values
func NewCreateBranchUsingPOSTForbidden() *CreateBranchUsingPOSTForbidden {
	return &CreateBranchUsingPOSTForbidden{}
}

/*
CreateBranchUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateBranchUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create branch using p o s t forbidden response has a 2xx status code
func (o *CreateBranchUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create branch using p o s t forbidden response has a 3xx status code
func (o *CreateBranchUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch using p o s t forbidden response has a 4xx status code
func (o *CreateBranchUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create branch using p o s t forbidden response has a 5xx status code
func (o *CreateBranchUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch using p o s t forbidden response a status code equal to that given
func (o *CreateBranchUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create branch using p o s t forbidden response
func (o *CreateBranchUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateBranchUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTForbidden", 403)
}

func (o *CreateBranchUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTForbidden", 403)
}

func (o *CreateBranchUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBranchUsingPOSTNotFound creates a CreateBranchUsingPOSTNotFound with default headers values
func NewCreateBranchUsingPOSTNotFound() *CreateBranchUsingPOSTNotFound {
	return &CreateBranchUsingPOSTNotFound{}
}

/*
CreateBranchUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateBranchUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create branch using p o s t not found response has a 2xx status code
func (o *CreateBranchUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create branch using p o s t not found response has a 3xx status code
func (o *CreateBranchUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create branch using p o s t not found response has a 4xx status code
func (o *CreateBranchUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create branch using p o s t not found response has a 5xx status code
func (o *CreateBranchUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create branch using p o s t not found response a status code equal to that given
func (o *CreateBranchUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create branch using p o s t not found response
func (o *CreateBranchUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateBranchUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTNotFound", 404)
}

func (o *CreateBranchUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/designer/{stackName}/{branch}/create-branch][%d] createBranchUsingPOSTNotFound", 404)
}

func (o *CreateBranchUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
