// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateResourcesReader is a Reader for the UpdateResources structure.
type UpdateResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateResourcesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}] updateResources", response, response.Code())
	}
}

// NewUpdateResourcesOK creates a UpdateResourcesOK with default headers values
func NewUpdateResourcesOK() *UpdateResourcesOK {
	return &UpdateResourcesOK{}
}

/*
UpdateResourcesOK describes a response with status code 200, with default header values.

OK
*/
type UpdateResourcesOK struct {
}

// IsSuccess returns true when this update resources o k response has a 2xx status code
func (o *UpdateResourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update resources o k response has a 3xx status code
func (o *UpdateResourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources o k response has a 4xx status code
func (o *UpdateResourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resources o k response has a 5xx status code
func (o *UpdateResourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources o k response a status code equal to that given
func (o *UpdateResourcesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update resources o k response
func (o *UpdateResourcesOK) Code() int {
	return 200
}

func (o *UpdateResourcesOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesOK", 200)
}

func (o *UpdateResourcesOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesOK", 200)
}

func (o *UpdateResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateResourcesBadRequest creates a UpdateResourcesBadRequest with default headers values
func NewUpdateResourcesBadRequest() *UpdateResourcesBadRequest {
	return &UpdateResourcesBadRequest{}
}

/*
UpdateResourcesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateResourcesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update resources bad request response has a 2xx status code
func (o *UpdateResourcesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resources bad request response has a 3xx status code
func (o *UpdateResourcesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources bad request response has a 4xx status code
func (o *UpdateResourcesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resources bad request response has a 5xx status code
func (o *UpdateResourcesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources bad request response a status code equal to that given
func (o *UpdateResourcesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update resources bad request response
func (o *UpdateResourcesBadRequest) Code() int {
	return 400
}

func (o *UpdateResourcesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesBadRequest %s", 400, payload)
}

func (o *UpdateResourcesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesBadRequest %s", 400, payload)
}

func (o *UpdateResourcesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourcesNotFound creates a UpdateResourcesNotFound with default headers values
func NewUpdateResourcesNotFound() *UpdateResourcesNotFound {
	return &UpdateResourcesNotFound{}
}

/*
UpdateResourcesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateResourcesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update resources not found response has a 2xx status code
func (o *UpdateResourcesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resources not found response has a 3xx status code
func (o *UpdateResourcesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources not found response has a 4xx status code
func (o *UpdateResourcesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resources not found response has a 5xx status code
func (o *UpdateResourcesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources not found response a status code equal to that given
func (o *UpdateResourcesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update resources not found response
func (o *UpdateResourcesNotFound) Code() int {
	return 404
}

func (o *UpdateResourcesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesNotFound %s", 404, payload)
}

func (o *UpdateResourcesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesNotFound %s", 404, payload)
}

func (o *UpdateResourcesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourcesMethodNotAllowed creates a UpdateResourcesMethodNotAllowed with default headers values
func NewUpdateResourcesMethodNotAllowed() *UpdateResourcesMethodNotAllowed {
	return &UpdateResourcesMethodNotAllowed{}
}

/*
UpdateResourcesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateResourcesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update resources method not allowed response has a 2xx status code
func (o *UpdateResourcesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resources method not allowed response has a 3xx status code
func (o *UpdateResourcesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources method not allowed response has a 4xx status code
func (o *UpdateResourcesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update resources method not allowed response has a 5xx status code
func (o *UpdateResourcesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update resources method not allowed response a status code equal to that given
func (o *UpdateResourcesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update resources method not allowed response
func (o *UpdateResourcesMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateResourcesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateResourcesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesMethodNotAllowed %s", 405, payload)
}

func (o *UpdateResourcesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateResourcesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateResourcesInternalServerError creates a UpdateResourcesInternalServerError with default headers values
func NewUpdateResourcesInternalServerError() *UpdateResourcesInternalServerError {
	return &UpdateResourcesInternalServerError{}
}

/*
UpdateResourcesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateResourcesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update resources internal server error response has a 2xx status code
func (o *UpdateResourcesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update resources internal server error response has a 3xx status code
func (o *UpdateResourcesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update resources internal server error response has a 4xx status code
func (o *UpdateResourcesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update resources internal server error response has a 5xx status code
func (o *UpdateResourcesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update resources internal server error response a status code equal to that given
func (o *UpdateResourcesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update resources internal server error response
func (o *UpdateResourcesInternalServerError) Code() int {
	return 500
}

func (o *UpdateResourcesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesInternalServerError %s", 500, payload)
}

func (o *UpdateResourcesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/designer/{stackName}/branch/{branch}][%d] updateResourcesInternalServerError %s", 500, payload)
}

func (o *UpdateResourcesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
