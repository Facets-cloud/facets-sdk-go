// Code generated by go-swagger; DO NOT EDIT.

package ui_blueprint_designer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListBranchesReader is a Reader for the ListBranches structure.
type ListBranchesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBranchesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListBranchesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListBranchesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListBranchesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewListBranchesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListBranchesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list] listBranches", response, response.Code())
	}
}

// NewListBranchesOK creates a ListBranchesOK with default headers values
func NewListBranchesOK() *ListBranchesOK {
	return &ListBranchesOK{}
}

/*
ListBranchesOK describes a response with status code 200, with default header values.

OK
*/
type ListBranchesOK struct {
	Payload []string
}

// IsSuccess returns true when this list branches o k response has a 2xx status code
func (o *ListBranchesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list branches o k response has a 3xx status code
func (o *ListBranchesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches o k response has a 4xx status code
func (o *ListBranchesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list branches o k response has a 5xx status code
func (o *ListBranchesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches o k response a status code equal to that given
func (o *ListBranchesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list branches o k response
func (o *ListBranchesOK) Code() int {
	return 200
}

func (o *ListBranchesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesOK %s", 200, payload)
}

func (o *ListBranchesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesOK %s", 200, payload)
}

func (o *ListBranchesOK) GetPayload() []string {
	return o.Payload
}

func (o *ListBranchesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBranchesBadRequest creates a ListBranchesBadRequest with default headers values
func NewListBranchesBadRequest() *ListBranchesBadRequest {
	return &ListBranchesBadRequest{}
}

/*
ListBranchesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ListBranchesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list branches bad request response has a 2xx status code
func (o *ListBranchesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list branches bad request response has a 3xx status code
func (o *ListBranchesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches bad request response has a 4xx status code
func (o *ListBranchesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this list branches bad request response has a 5xx status code
func (o *ListBranchesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches bad request response a status code equal to that given
func (o *ListBranchesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the list branches bad request response
func (o *ListBranchesBadRequest) Code() int {
	return 400
}

func (o *ListBranchesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesBadRequest %s", 400, payload)
}

func (o *ListBranchesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesBadRequest %s", 400, payload)
}

func (o *ListBranchesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListBranchesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBranchesNotFound creates a ListBranchesNotFound with default headers values
func NewListBranchesNotFound() *ListBranchesNotFound {
	return &ListBranchesNotFound{}
}

/*
ListBranchesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListBranchesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list branches not found response has a 2xx status code
func (o *ListBranchesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list branches not found response has a 3xx status code
func (o *ListBranchesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches not found response has a 4xx status code
func (o *ListBranchesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list branches not found response has a 5xx status code
func (o *ListBranchesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches not found response a status code equal to that given
func (o *ListBranchesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list branches not found response
func (o *ListBranchesNotFound) Code() int {
	return 404
}

func (o *ListBranchesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesNotFound %s", 404, payload)
}

func (o *ListBranchesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesNotFound %s", 404, payload)
}

func (o *ListBranchesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListBranchesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBranchesMethodNotAllowed creates a ListBranchesMethodNotAllowed with default headers values
func NewListBranchesMethodNotAllowed() *ListBranchesMethodNotAllowed {
	return &ListBranchesMethodNotAllowed{}
}

/*
ListBranchesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ListBranchesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list branches method not allowed response has a 2xx status code
func (o *ListBranchesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list branches method not allowed response has a 3xx status code
func (o *ListBranchesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches method not allowed response has a 4xx status code
func (o *ListBranchesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this list branches method not allowed response has a 5xx status code
func (o *ListBranchesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this list branches method not allowed response a status code equal to that given
func (o *ListBranchesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the list branches method not allowed response
func (o *ListBranchesMethodNotAllowed) Code() int {
	return 405
}

func (o *ListBranchesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesMethodNotAllowed %s", 405, payload)
}

func (o *ListBranchesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesMethodNotAllowed %s", 405, payload)
}

func (o *ListBranchesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListBranchesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBranchesInternalServerError creates a ListBranchesInternalServerError with default headers values
func NewListBranchesInternalServerError() *ListBranchesInternalServerError {
	return &ListBranchesInternalServerError{}
}

/*
ListBranchesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ListBranchesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this list branches internal server error response has a 2xx status code
func (o *ListBranchesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list branches internal server error response has a 3xx status code
func (o *ListBranchesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list branches internal server error response has a 4xx status code
func (o *ListBranchesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this list branches internal server error response has a 5xx status code
func (o *ListBranchesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this list branches internal server error response a status code equal to that given
func (o *ListBranchesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the list branches internal server error response
func (o *ListBranchesInternalServerError) Code() int {
	return 500
}

func (o *ListBranchesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesInternalServerError %s", 500, payload)
}

func (o *ListBranchesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/designer/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/branch-list][%d] listBranchesInternalServerError %s", 500, payload)
}

func (o *ListBranchesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ListBranchesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
