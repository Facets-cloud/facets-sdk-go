// Code generated by go-swagger; DO NOT EDIT.

package ui_no_auth_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ResetPasswordRequestUsingPOSTReader is a Reader for the ResetPasswordRequestUsingPOST structure.
type ResetPasswordRequestUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetPasswordRequestUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResetPasswordRequestUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewResetPasswordRequestUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewResetPasswordRequestUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewResetPasswordRequestUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResetPasswordRequestUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public-ui/v1/user/resetPassword] resetPasswordRequestUsingPOST", response, response.Code())
	}
}

// NewResetPasswordRequestUsingPOSTOK creates a ResetPasswordRequestUsingPOSTOK with default headers values
func NewResetPasswordRequestUsingPOSTOK() *ResetPasswordRequestUsingPOSTOK {
	return &ResetPasswordRequestUsingPOSTOK{}
}

/*
ResetPasswordRequestUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type ResetPasswordRequestUsingPOSTOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this reset password request using p o s t o k response has a 2xx status code
func (o *ResetPasswordRequestUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reset password request using p o s t o k response has a 3xx status code
func (o *ResetPasswordRequestUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request using p o s t o k response has a 4xx status code
func (o *ResetPasswordRequestUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset password request using p o s t o k response has a 5xx status code
func (o *ResetPasswordRequestUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request using p o s t o k response a status code equal to that given
func (o *ResetPasswordRequestUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reset password request using p o s t o k response
func (o *ResetPasswordRequestUsingPOSTOK) Code() int {
	return 200
}

func (o *ResetPasswordRequestUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTOK %s", 200, payload)
}

func (o *ResetPasswordRequestUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTOK %s", 200, payload)
}

func (o *ResetPasswordRequestUsingPOSTOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ResetPasswordRequestUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetPasswordRequestUsingPOSTCreated creates a ResetPasswordRequestUsingPOSTCreated with default headers values
func NewResetPasswordRequestUsingPOSTCreated() *ResetPasswordRequestUsingPOSTCreated {
	return &ResetPasswordRequestUsingPOSTCreated{}
}

/*
ResetPasswordRequestUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type ResetPasswordRequestUsingPOSTCreated struct {
}

// IsSuccess returns true when this reset password request using p o s t created response has a 2xx status code
func (o *ResetPasswordRequestUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reset password request using p o s t created response has a 3xx status code
func (o *ResetPasswordRequestUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request using p o s t created response has a 4xx status code
func (o *ResetPasswordRequestUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset password request using p o s t created response has a 5xx status code
func (o *ResetPasswordRequestUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request using p o s t created response a status code equal to that given
func (o *ResetPasswordRequestUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the reset password request using p o s t created response
func (o *ResetPasswordRequestUsingPOSTCreated) Code() int {
	return 201
}

func (o *ResetPasswordRequestUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTCreated", 201)
}

func (o *ResetPasswordRequestUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTCreated", 201)
}

func (o *ResetPasswordRequestUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetPasswordRequestUsingPOSTUnauthorized creates a ResetPasswordRequestUsingPOSTUnauthorized with default headers values
func NewResetPasswordRequestUsingPOSTUnauthorized() *ResetPasswordRequestUsingPOSTUnauthorized {
	return &ResetPasswordRequestUsingPOSTUnauthorized{}
}

/*
ResetPasswordRequestUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ResetPasswordRequestUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this reset password request using p o s t unauthorized response has a 2xx status code
func (o *ResetPasswordRequestUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password request using p o s t unauthorized response has a 3xx status code
func (o *ResetPasswordRequestUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request using p o s t unauthorized response has a 4xx status code
func (o *ResetPasswordRequestUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password request using p o s t unauthorized response has a 5xx status code
func (o *ResetPasswordRequestUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request using p o s t unauthorized response a status code equal to that given
func (o *ResetPasswordRequestUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the reset password request using p o s t unauthorized response
func (o *ResetPasswordRequestUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *ResetPasswordRequestUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTUnauthorized", 401)
}

func (o *ResetPasswordRequestUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTUnauthorized", 401)
}

func (o *ResetPasswordRequestUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetPasswordRequestUsingPOSTForbidden creates a ResetPasswordRequestUsingPOSTForbidden with default headers values
func NewResetPasswordRequestUsingPOSTForbidden() *ResetPasswordRequestUsingPOSTForbidden {
	return &ResetPasswordRequestUsingPOSTForbidden{}
}

/*
ResetPasswordRequestUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ResetPasswordRequestUsingPOSTForbidden struct {
}

// IsSuccess returns true when this reset password request using p o s t forbidden response has a 2xx status code
func (o *ResetPasswordRequestUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password request using p o s t forbidden response has a 3xx status code
func (o *ResetPasswordRequestUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request using p o s t forbidden response has a 4xx status code
func (o *ResetPasswordRequestUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password request using p o s t forbidden response has a 5xx status code
func (o *ResetPasswordRequestUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request using p o s t forbidden response a status code equal to that given
func (o *ResetPasswordRequestUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the reset password request using p o s t forbidden response
func (o *ResetPasswordRequestUsingPOSTForbidden) Code() int {
	return 403
}

func (o *ResetPasswordRequestUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTForbidden", 403)
}

func (o *ResetPasswordRequestUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTForbidden", 403)
}

func (o *ResetPasswordRequestUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewResetPasswordRequestUsingPOSTNotFound creates a ResetPasswordRequestUsingPOSTNotFound with default headers values
func NewResetPasswordRequestUsingPOSTNotFound() *ResetPasswordRequestUsingPOSTNotFound {
	return &ResetPasswordRequestUsingPOSTNotFound{}
}

/*
ResetPasswordRequestUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ResetPasswordRequestUsingPOSTNotFound struct {
}

// IsSuccess returns true when this reset password request using p o s t not found response has a 2xx status code
func (o *ResetPasswordRequestUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password request using p o s t not found response has a 3xx status code
func (o *ResetPasswordRequestUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request using p o s t not found response has a 4xx status code
func (o *ResetPasswordRequestUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password request using p o s t not found response has a 5xx status code
func (o *ResetPasswordRequestUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request using p o s t not found response a status code equal to that given
func (o *ResetPasswordRequestUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reset password request using p o s t not found response
func (o *ResetPasswordRequestUsingPOSTNotFound) Code() int {
	return 404
}

func (o *ResetPasswordRequestUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTNotFound", 404)
}

func (o *ResetPasswordRequestUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestUsingPOSTNotFound", 404)
}

func (o *ResetPasswordRequestUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
