// Code generated by go-swagger; DO NOT EDIT.

package ui_no_auth_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SavePasswordReader is a Reader for the SavePassword structure.
type SavePasswordReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SavePasswordReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSavePasswordOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSavePasswordBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSavePasswordNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSavePasswordMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSavePasswordInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public-ui/v1/user/savePassword] savePassword", response, response.Code())
	}
}

// NewSavePasswordOK creates a SavePasswordOK with default headers values
func NewSavePasswordOK() *SavePasswordOK {
	return &SavePasswordOK{}
}

/*
SavePasswordOK describes a response with status code 200, with default header values.

OK
*/
type SavePasswordOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this save password o k response has a 2xx status code
func (o *SavePasswordOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save password o k response has a 3xx status code
func (o *SavePasswordOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save password o k response has a 4xx status code
func (o *SavePasswordOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this save password o k response has a 5xx status code
func (o *SavePasswordOK) IsServerError() bool {
	return false
}

// IsCode returns true when this save password o k response a status code equal to that given
func (o *SavePasswordOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the save password o k response
func (o *SavePasswordOK) Code() int {
	return 200
}

func (o *SavePasswordOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordOK %s", 200, payload)
}

func (o *SavePasswordOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordOK %s", 200, payload)
}

func (o *SavePasswordOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *SavePasswordOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSavePasswordBadRequest creates a SavePasswordBadRequest with default headers values
func NewSavePasswordBadRequest() *SavePasswordBadRequest {
	return &SavePasswordBadRequest{}
}

/*
SavePasswordBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SavePasswordBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save password bad request response has a 2xx status code
func (o *SavePasswordBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save password bad request response has a 3xx status code
func (o *SavePasswordBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save password bad request response has a 4xx status code
func (o *SavePasswordBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this save password bad request response has a 5xx status code
func (o *SavePasswordBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this save password bad request response a status code equal to that given
func (o *SavePasswordBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the save password bad request response
func (o *SavePasswordBadRequest) Code() int {
	return 400
}

func (o *SavePasswordBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordBadRequest %s", 400, payload)
}

func (o *SavePasswordBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordBadRequest %s", 400, payload)
}

func (o *SavePasswordBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SavePasswordBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSavePasswordNotFound creates a SavePasswordNotFound with default headers values
func NewSavePasswordNotFound() *SavePasswordNotFound {
	return &SavePasswordNotFound{}
}

/*
SavePasswordNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SavePasswordNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save password not found response has a 2xx status code
func (o *SavePasswordNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save password not found response has a 3xx status code
func (o *SavePasswordNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save password not found response has a 4xx status code
func (o *SavePasswordNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this save password not found response has a 5xx status code
func (o *SavePasswordNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this save password not found response a status code equal to that given
func (o *SavePasswordNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the save password not found response
func (o *SavePasswordNotFound) Code() int {
	return 404
}

func (o *SavePasswordNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordNotFound %s", 404, payload)
}

func (o *SavePasswordNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordNotFound %s", 404, payload)
}

func (o *SavePasswordNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SavePasswordNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSavePasswordMethodNotAllowed creates a SavePasswordMethodNotAllowed with default headers values
func NewSavePasswordMethodNotAllowed() *SavePasswordMethodNotAllowed {
	return &SavePasswordMethodNotAllowed{}
}

/*
SavePasswordMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SavePasswordMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save password method not allowed response has a 2xx status code
func (o *SavePasswordMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save password method not allowed response has a 3xx status code
func (o *SavePasswordMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save password method not allowed response has a 4xx status code
func (o *SavePasswordMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this save password method not allowed response has a 5xx status code
func (o *SavePasswordMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this save password method not allowed response a status code equal to that given
func (o *SavePasswordMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the save password method not allowed response
func (o *SavePasswordMethodNotAllowed) Code() int {
	return 405
}

func (o *SavePasswordMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordMethodNotAllowed %s", 405, payload)
}

func (o *SavePasswordMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordMethodNotAllowed %s", 405, payload)
}

func (o *SavePasswordMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SavePasswordMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSavePasswordInternalServerError creates a SavePasswordInternalServerError with default headers values
func NewSavePasswordInternalServerError() *SavePasswordInternalServerError {
	return &SavePasswordInternalServerError{}
}

/*
SavePasswordInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SavePasswordInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this save password internal server error response has a 2xx status code
func (o *SavePasswordInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save password internal server error response has a 3xx status code
func (o *SavePasswordInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save password internal server error response has a 4xx status code
func (o *SavePasswordInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this save password internal server error response has a 5xx status code
func (o *SavePasswordInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this save password internal server error response a status code equal to that given
func (o *SavePasswordInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the save password internal server error response
func (o *SavePasswordInternalServerError) Code() int {
	return 500
}

func (o *SavePasswordInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordInternalServerError %s", 500, payload)
}

func (o *SavePasswordInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/savePassword][%d] savePasswordInternalServerError %s", 500, payload)
}

func (o *SavePasswordInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SavePasswordInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
