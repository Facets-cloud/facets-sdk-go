// Code generated by go-swagger; DO NOT EDIT.

package ui_no_auth_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewSavePasswordUsingPOSTParams creates a new SavePasswordUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSavePasswordUsingPOSTParams() *SavePasswordUsingPOSTParams {
	return &SavePasswordUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSavePasswordUsingPOSTParamsWithTimeout creates a new SavePasswordUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewSavePasswordUsingPOSTParamsWithTimeout(timeout time.Duration) *SavePasswordUsingPOSTParams {
	return &SavePasswordUsingPOSTParams{
		timeout: timeout,
	}
}

// NewSavePasswordUsingPOSTParamsWithContext creates a new SavePasswordUsingPOSTParams object
// with the ability to set a context for a request.
func NewSavePasswordUsingPOSTParamsWithContext(ctx context.Context) *SavePasswordUsingPOSTParams {
	return &SavePasswordUsingPOSTParams{
		Context: ctx,
	}
}

// NewSavePasswordUsingPOSTParamsWithHTTPClient creates a new SavePasswordUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewSavePasswordUsingPOSTParamsWithHTTPClient(client *http.Client) *SavePasswordUsingPOSTParams {
	return &SavePasswordUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
SavePasswordUsingPOSTParams contains all the parameters to send to the API endpoint

	for the save password using p o s t operation.

	Typically these are written to a http.Request.
*/
type SavePasswordUsingPOSTParams struct {

	/* SavePasswordResetPasswordRequest.

	   savePasswordResetPasswordRequest
	*/
	SavePasswordResetPasswordRequest *models.SavePasswordResetPasswordRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the save password using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SavePasswordUsingPOSTParams) WithDefaults() *SavePasswordUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the save password using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SavePasswordUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) WithTimeout(timeout time.Duration) *SavePasswordUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) WithContext(ctx context.Context) *SavePasswordUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) WithHTTPClient(client *http.Client) *SavePasswordUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSavePasswordResetPasswordRequest adds the savePasswordResetPasswordRequest to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) WithSavePasswordResetPasswordRequest(savePasswordResetPasswordRequest *models.SavePasswordResetPasswordRequest) *SavePasswordUsingPOSTParams {
	o.SetSavePasswordResetPasswordRequest(savePasswordResetPasswordRequest)
	return o
}

// SetSavePasswordResetPasswordRequest adds the savePasswordResetPasswordRequest to the save password using p o s t params
func (o *SavePasswordUsingPOSTParams) SetSavePasswordResetPasswordRequest(savePasswordResetPasswordRequest *models.SavePasswordResetPasswordRequest) {
	o.SavePasswordResetPasswordRequest = savePasswordResetPasswordRequest
}

// WriteToRequest writes these params to a swagger request
func (o *SavePasswordUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.SavePasswordResetPasswordRequest != nil {
		if err := r.SetBodyParam(o.SavePasswordResetPasswordRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
