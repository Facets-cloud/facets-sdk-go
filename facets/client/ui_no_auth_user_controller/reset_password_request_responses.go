// Code generated by go-swagger; DO NOT EDIT.

package ui_no_auth_user_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ResetPasswordRequestReader is a Reader for the ResetPasswordRequest structure.
type ResetPasswordRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ResetPasswordRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewResetPasswordRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewResetPasswordRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewResetPasswordRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewResetPasswordRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewResetPasswordRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public-ui/v1/user/resetPassword] resetPasswordRequest", response, response.Code())
	}
}

// NewResetPasswordRequestOK creates a ResetPasswordRequestOK with default headers values
func NewResetPasswordRequestOK() *ResetPasswordRequestOK {
	return &ResetPasswordRequestOK{}
}

/*
ResetPasswordRequestOK describes a response with status code 200, with default header values.

OK
*/
type ResetPasswordRequestOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this reset password request o k response has a 2xx status code
func (o *ResetPasswordRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reset password request o k response has a 3xx status code
func (o *ResetPasswordRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request o k response has a 4xx status code
func (o *ResetPasswordRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset password request o k response has a 5xx status code
func (o *ResetPasswordRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request o k response a status code equal to that given
func (o *ResetPasswordRequestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reset password request o k response
func (o *ResetPasswordRequestOK) Code() int {
	return 200
}

func (o *ResetPasswordRequestOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestOK %s", 200, payload)
}

func (o *ResetPasswordRequestOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestOK %s", 200, payload)
}

func (o *ResetPasswordRequestOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ResetPasswordRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetPasswordRequestBadRequest creates a ResetPasswordRequestBadRequest with default headers values
func NewResetPasswordRequestBadRequest() *ResetPasswordRequestBadRequest {
	return &ResetPasswordRequestBadRequest{}
}

/*
ResetPasswordRequestBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ResetPasswordRequestBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reset password request bad request response has a 2xx status code
func (o *ResetPasswordRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password request bad request response has a 3xx status code
func (o *ResetPasswordRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request bad request response has a 4xx status code
func (o *ResetPasswordRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password request bad request response has a 5xx status code
func (o *ResetPasswordRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request bad request response a status code equal to that given
func (o *ResetPasswordRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the reset password request bad request response
func (o *ResetPasswordRequestBadRequest) Code() int {
	return 400
}

func (o *ResetPasswordRequestBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestBadRequest %s", 400, payload)
}

func (o *ResetPasswordRequestBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestBadRequest %s", 400, payload)
}

func (o *ResetPasswordRequestBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResetPasswordRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetPasswordRequestNotFound creates a ResetPasswordRequestNotFound with default headers values
func NewResetPasswordRequestNotFound() *ResetPasswordRequestNotFound {
	return &ResetPasswordRequestNotFound{}
}

/*
ResetPasswordRequestNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ResetPasswordRequestNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reset password request not found response has a 2xx status code
func (o *ResetPasswordRequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password request not found response has a 3xx status code
func (o *ResetPasswordRequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request not found response has a 4xx status code
func (o *ResetPasswordRequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password request not found response has a 5xx status code
func (o *ResetPasswordRequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request not found response a status code equal to that given
func (o *ResetPasswordRequestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reset password request not found response
func (o *ResetPasswordRequestNotFound) Code() int {
	return 404
}

func (o *ResetPasswordRequestNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestNotFound %s", 404, payload)
}

func (o *ResetPasswordRequestNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestNotFound %s", 404, payload)
}

func (o *ResetPasswordRequestNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResetPasswordRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetPasswordRequestMethodNotAllowed creates a ResetPasswordRequestMethodNotAllowed with default headers values
func NewResetPasswordRequestMethodNotAllowed() *ResetPasswordRequestMethodNotAllowed {
	return &ResetPasswordRequestMethodNotAllowed{}
}

/*
ResetPasswordRequestMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ResetPasswordRequestMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reset password request method not allowed response has a 2xx status code
func (o *ResetPasswordRequestMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password request method not allowed response has a 3xx status code
func (o *ResetPasswordRequestMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request method not allowed response has a 4xx status code
func (o *ResetPasswordRequestMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this reset password request method not allowed response has a 5xx status code
func (o *ResetPasswordRequestMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this reset password request method not allowed response a status code equal to that given
func (o *ResetPasswordRequestMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the reset password request method not allowed response
func (o *ResetPasswordRequestMethodNotAllowed) Code() int {
	return 405
}

func (o *ResetPasswordRequestMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestMethodNotAllowed %s", 405, payload)
}

func (o *ResetPasswordRequestMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestMethodNotAllowed %s", 405, payload)
}

func (o *ResetPasswordRequestMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResetPasswordRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewResetPasswordRequestInternalServerError creates a ResetPasswordRequestInternalServerError with default headers values
func NewResetPasswordRequestInternalServerError() *ResetPasswordRequestInternalServerError {
	return &ResetPasswordRequestInternalServerError{}
}

/*
ResetPasswordRequestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ResetPasswordRequestInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reset password request internal server error response has a 2xx status code
func (o *ResetPasswordRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reset password request internal server error response has a 3xx status code
func (o *ResetPasswordRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reset password request internal server error response has a 4xx status code
func (o *ResetPasswordRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this reset password request internal server error response has a 5xx status code
func (o *ResetPasswordRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this reset password request internal server error response a status code equal to that given
func (o *ResetPasswordRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the reset password request internal server error response
func (o *ResetPasswordRequestInternalServerError) Code() int {
	return 500
}

func (o *ResetPasswordRequestInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestInternalServerError %s", 500, payload)
}

func (o *ResetPasswordRequestInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public-ui/v1/user/resetPassword][%d] resetPasswordRequestInternalServerError %s", 500, payload)
}

func (o *ResetPasswordRequestInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ResetPasswordRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
