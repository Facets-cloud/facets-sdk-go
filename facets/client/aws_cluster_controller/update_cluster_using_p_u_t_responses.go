// Code generated by go-swagger; DO NOT EDIT.

package aws_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateClusterUsingPUTReader is a Reader for the UpdateClusterUsingPUT structure.
type UpdateClusterUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateClusterUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateClusterUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateClusterUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc/v1/aws/clusters/{clusterId}] updateClusterUsingPUT", response, response.Code())
	}
}

// NewUpdateClusterUsingPUTOK creates a UpdateClusterUsingPUTOK with default headers values
func NewUpdateClusterUsingPUTOK() *UpdateClusterUsingPUTOK {
	return &UpdateClusterUsingPUTOK{}
}

/*
UpdateClusterUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateClusterUsingPUTOK struct {
	Payload *models.AwsCluster
}

// IsSuccess returns true when this update cluster using p u t o k response has a 2xx status code
func (o *UpdateClusterUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster using p u t o k response has a 3xx status code
func (o *UpdateClusterUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t o k response has a 4xx status code
func (o *UpdateClusterUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster using p u t o k response has a 5xx status code
func (o *UpdateClusterUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t o k response a status code equal to that given
func (o *UpdateClusterUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cluster using p u t o k response
func (o *UpdateClusterUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateClusterUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTOK %s", 200, payload)
}

func (o *UpdateClusterUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTOK %s", 200, payload)
}

func (o *UpdateClusterUsingPUTOK) GetPayload() *models.AwsCluster {
	return o.Payload
}

func (o *UpdateClusterUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AwsCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterUsingPUTCreated creates a UpdateClusterUsingPUTCreated with default headers values
func NewUpdateClusterUsingPUTCreated() *UpdateClusterUsingPUTCreated {
	return &UpdateClusterUsingPUTCreated{}
}

/*
UpdateClusterUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateClusterUsingPUTCreated struct {
}

// IsSuccess returns true when this update cluster using p u t created response has a 2xx status code
func (o *UpdateClusterUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster using p u t created response has a 3xx status code
func (o *UpdateClusterUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t created response has a 4xx status code
func (o *UpdateClusterUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster using p u t created response has a 5xx status code
func (o *UpdateClusterUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t created response a status code equal to that given
func (o *UpdateClusterUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update cluster using p u t created response
func (o *UpdateClusterUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateClusterUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTCreated", 201)
}

func (o *UpdateClusterUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTCreated", 201)
}

func (o *UpdateClusterUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterUsingPUTUnauthorized creates a UpdateClusterUsingPUTUnauthorized with default headers values
func NewUpdateClusterUsingPUTUnauthorized() *UpdateClusterUsingPUTUnauthorized {
	return &UpdateClusterUsingPUTUnauthorized{}
}

/*
UpdateClusterUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateClusterUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update cluster using p u t unauthorized response has a 2xx status code
func (o *UpdateClusterUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster using p u t unauthorized response has a 3xx status code
func (o *UpdateClusterUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t unauthorized response has a 4xx status code
func (o *UpdateClusterUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster using p u t unauthorized response has a 5xx status code
func (o *UpdateClusterUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t unauthorized response a status code equal to that given
func (o *UpdateClusterUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update cluster using p u t unauthorized response
func (o *UpdateClusterUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateClusterUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTUnauthorized", 401)
}

func (o *UpdateClusterUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTUnauthorized", 401)
}

func (o *UpdateClusterUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterUsingPUTForbidden creates a UpdateClusterUsingPUTForbidden with default headers values
func NewUpdateClusterUsingPUTForbidden() *UpdateClusterUsingPUTForbidden {
	return &UpdateClusterUsingPUTForbidden{}
}

/*
UpdateClusterUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateClusterUsingPUTForbidden struct {
}

// IsSuccess returns true when this update cluster using p u t forbidden response has a 2xx status code
func (o *UpdateClusterUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster using p u t forbidden response has a 3xx status code
func (o *UpdateClusterUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t forbidden response has a 4xx status code
func (o *UpdateClusterUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster using p u t forbidden response has a 5xx status code
func (o *UpdateClusterUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t forbidden response a status code equal to that given
func (o *UpdateClusterUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cluster using p u t forbidden response
func (o *UpdateClusterUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateClusterUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTForbidden", 403)
}

func (o *UpdateClusterUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTForbidden", 403)
}

func (o *UpdateClusterUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterUsingPUTNotFound creates a UpdateClusterUsingPUTNotFound with default headers values
func NewUpdateClusterUsingPUTNotFound() *UpdateClusterUsingPUTNotFound {
	return &UpdateClusterUsingPUTNotFound{}
}

/*
UpdateClusterUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateClusterUsingPUTNotFound struct {
}

// IsSuccess returns true when this update cluster using p u t not found response has a 2xx status code
func (o *UpdateClusterUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster using p u t not found response has a 3xx status code
func (o *UpdateClusterUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t not found response has a 4xx status code
func (o *UpdateClusterUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster using p u t not found response has a 5xx status code
func (o *UpdateClusterUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t not found response a status code equal to that given
func (o *UpdateClusterUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cluster using p u t not found response
func (o *UpdateClusterUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateClusterUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTNotFound", 404)
}

func (o *UpdateClusterUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc/v1/aws/clusters/{clusterId}][%d] updateClusterUsingPUTNotFound", 404)
}

func (o *UpdateClusterUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
