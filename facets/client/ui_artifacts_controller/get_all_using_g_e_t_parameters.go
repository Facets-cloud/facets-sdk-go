// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetAllUsingGETParams creates a new GetAllUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAllUsingGETParams() *GetAllUsingGETParams {
	return &GetAllUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllUsingGETParamsWithTimeout creates a new GetAllUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetAllUsingGETParamsWithTimeout(timeout time.Duration) *GetAllUsingGETParams {
	return &GetAllUsingGETParams{
		timeout: timeout,
	}
}

// NewGetAllUsingGETParamsWithContext creates a new GetAllUsingGETParams object
// with the ability to set a context for a request.
func NewGetAllUsingGETParamsWithContext(ctx context.Context) *GetAllUsingGETParams {
	return &GetAllUsingGETParams{
		Context: ctx,
	}
}

// NewGetAllUsingGETParamsWithHTTPClient creates a new GetAllUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAllUsingGETParamsWithHTTPClient(client *http.Client) *GetAllUsingGETParams {
	return &GetAllUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetAllUsingGETParams contains all the parameters to send to the API endpoint

	for the get all using g e t operation.

	Typically these are written to a http.Request.
*/
type GetAllUsingGETParams struct {

	/* Artifactory.

	   artifactory
	*/
	Artifactory *string

	/* Classified.

	   classified
	*/
	Classified *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get all using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllUsingGETParams) WithDefaults() *GetAllUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get all using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get all using g e t params
func (o *GetAllUsingGETParams) WithTimeout(timeout time.Duration) *GetAllUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all using g e t params
func (o *GetAllUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all using g e t params
func (o *GetAllUsingGETParams) WithContext(ctx context.Context) *GetAllUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all using g e t params
func (o *GetAllUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all using g e t params
func (o *GetAllUsingGETParams) WithHTTPClient(client *http.Client) *GetAllUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all using g e t params
func (o *GetAllUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithArtifactory adds the artifactory to the get all using g e t params
func (o *GetAllUsingGETParams) WithArtifactory(artifactory *string) *GetAllUsingGETParams {
	o.SetArtifactory(artifactory)
	return o
}

// SetArtifactory adds the artifactory to the get all using g e t params
func (o *GetAllUsingGETParams) SetArtifactory(artifactory *string) {
	o.Artifactory = artifactory
}

// WithClassified adds the classified to the get all using g e t params
func (o *GetAllUsingGETParams) WithClassified(classified *bool) *GetAllUsingGETParams {
	o.SetClassified(classified)
	return o
}

// SetClassified adds the classified to the get all using g e t params
func (o *GetAllUsingGETParams) SetClassified(classified *bool) {
	o.Classified = classified
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Artifactory != nil {

		// query param artifactory
		var qrArtifactory string

		if o.Artifactory != nil {
			qrArtifactory = *o.Artifactory
		}
		qArtifactory := qrArtifactory
		if qArtifactory != "" {

			if err := r.SetQueryParam("artifactory", qArtifactory); err != nil {
				return err
			}
		}
	}

	if o.Classified != nil {

		// query param classified
		var qrClassified bool

		if o.Classified != nil {
			qrClassified = *o.Classified
		}
		qClassified := swag.FormatBool(qrClassified)
		if qClassified != "" {

			if err := r.SetQueryParam("classified", qClassified); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
