// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UpdateReleaseStreamUsingPOSTReader is a Reader for the UpdateReleaseStreamUsingPOST structure.
type UpdateReleaseStreamUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateReleaseStreamUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateReleaseStreamUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateReleaseStreamUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateReleaseStreamUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateReleaseStreamUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateReleaseStreamUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream] updateReleaseStreamUsingPOST", response, response.Code())
	}
}

// NewUpdateReleaseStreamUsingPOSTOK creates a UpdateReleaseStreamUsingPOSTOK with default headers values
func NewUpdateReleaseStreamUsingPOSTOK() *UpdateReleaseStreamUsingPOSTOK {
	return &UpdateReleaseStreamUsingPOSTOK{}
}

/*
UpdateReleaseStreamUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateReleaseStreamUsingPOSTOK struct {
	Payload interface{}
}

// IsSuccess returns true when this update release stream using p o s t o k response has a 2xx status code
func (o *UpdateReleaseStreamUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update release stream using p o s t o k response has a 3xx status code
func (o *UpdateReleaseStreamUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update release stream using p o s t o k response has a 4xx status code
func (o *UpdateReleaseStreamUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update release stream using p o s t o k response has a 5xx status code
func (o *UpdateReleaseStreamUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update release stream using p o s t o k response a status code equal to that given
func (o *UpdateReleaseStreamUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update release stream using p o s t o k response
func (o *UpdateReleaseStreamUsingPOSTOK) Code() int {
	return 200
}

func (o *UpdateReleaseStreamUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTOK %s", 200, payload)
}

func (o *UpdateReleaseStreamUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTOK %s", 200, payload)
}

func (o *UpdateReleaseStreamUsingPOSTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *UpdateReleaseStreamUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateReleaseStreamUsingPOSTCreated creates a UpdateReleaseStreamUsingPOSTCreated with default headers values
func NewUpdateReleaseStreamUsingPOSTCreated() *UpdateReleaseStreamUsingPOSTCreated {
	return &UpdateReleaseStreamUsingPOSTCreated{}
}

/*
UpdateReleaseStreamUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateReleaseStreamUsingPOSTCreated struct {
}

// IsSuccess returns true when this update release stream using p o s t created response has a 2xx status code
func (o *UpdateReleaseStreamUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update release stream using p o s t created response has a 3xx status code
func (o *UpdateReleaseStreamUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update release stream using p o s t created response has a 4xx status code
func (o *UpdateReleaseStreamUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update release stream using p o s t created response has a 5xx status code
func (o *UpdateReleaseStreamUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update release stream using p o s t created response a status code equal to that given
func (o *UpdateReleaseStreamUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update release stream using p o s t created response
func (o *UpdateReleaseStreamUsingPOSTCreated) Code() int {
	return 201
}

func (o *UpdateReleaseStreamUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTCreated", 201)
}

func (o *UpdateReleaseStreamUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTCreated", 201)
}

func (o *UpdateReleaseStreamUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateReleaseStreamUsingPOSTUnauthorized creates a UpdateReleaseStreamUsingPOSTUnauthorized with default headers values
func NewUpdateReleaseStreamUsingPOSTUnauthorized() *UpdateReleaseStreamUsingPOSTUnauthorized {
	return &UpdateReleaseStreamUsingPOSTUnauthorized{}
}

/*
UpdateReleaseStreamUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateReleaseStreamUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this update release stream using p o s t unauthorized response has a 2xx status code
func (o *UpdateReleaseStreamUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update release stream using p o s t unauthorized response has a 3xx status code
func (o *UpdateReleaseStreamUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update release stream using p o s t unauthorized response has a 4xx status code
func (o *UpdateReleaseStreamUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update release stream using p o s t unauthorized response has a 5xx status code
func (o *UpdateReleaseStreamUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update release stream using p o s t unauthorized response a status code equal to that given
func (o *UpdateReleaseStreamUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update release stream using p o s t unauthorized response
func (o *UpdateReleaseStreamUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *UpdateReleaseStreamUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTUnauthorized", 401)
}

func (o *UpdateReleaseStreamUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTUnauthorized", 401)
}

func (o *UpdateReleaseStreamUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateReleaseStreamUsingPOSTForbidden creates a UpdateReleaseStreamUsingPOSTForbidden with default headers values
func NewUpdateReleaseStreamUsingPOSTForbidden() *UpdateReleaseStreamUsingPOSTForbidden {
	return &UpdateReleaseStreamUsingPOSTForbidden{}
}

/*
UpdateReleaseStreamUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateReleaseStreamUsingPOSTForbidden struct {
}

// IsSuccess returns true when this update release stream using p o s t forbidden response has a 2xx status code
func (o *UpdateReleaseStreamUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update release stream using p o s t forbidden response has a 3xx status code
func (o *UpdateReleaseStreamUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update release stream using p o s t forbidden response has a 4xx status code
func (o *UpdateReleaseStreamUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update release stream using p o s t forbidden response has a 5xx status code
func (o *UpdateReleaseStreamUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update release stream using p o s t forbidden response a status code equal to that given
func (o *UpdateReleaseStreamUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update release stream using p o s t forbidden response
func (o *UpdateReleaseStreamUsingPOSTForbidden) Code() int {
	return 403
}

func (o *UpdateReleaseStreamUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTForbidden", 403)
}

func (o *UpdateReleaseStreamUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTForbidden", 403)
}

func (o *UpdateReleaseStreamUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateReleaseStreamUsingPOSTNotFound creates a UpdateReleaseStreamUsingPOSTNotFound with default headers values
func NewUpdateReleaseStreamUsingPOSTNotFound() *UpdateReleaseStreamUsingPOSTNotFound {
	return &UpdateReleaseStreamUsingPOSTNotFound{}
}

/*
UpdateReleaseStreamUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateReleaseStreamUsingPOSTNotFound struct {
}

// IsSuccess returns true when this update release stream using p o s t not found response has a 2xx status code
func (o *UpdateReleaseStreamUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update release stream using p o s t not found response has a 3xx status code
func (o *UpdateReleaseStreamUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update release stream using p o s t not found response has a 4xx status code
func (o *UpdateReleaseStreamUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update release stream using p o s t not found response has a 5xx status code
func (o *UpdateReleaseStreamUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update release stream using p o s t not found response a status code equal to that given
func (o *UpdateReleaseStreamUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update release stream using p o s t not found response
func (o *UpdateReleaseStreamUsingPOSTNotFound) Code() int {
	return 404
}

func (o *UpdateReleaseStreamUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTNotFound", 404)
}

func (o *UpdateReleaseStreamUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/clusterId/{clusterId}/currentReleaseStream/{currentReleaseStream}/updatedReleaseStream/{updatedReleaseStream}/updateStream][%d] updateReleaseStreamUsingPOSTNotFound", 404)
}

func (o *UpdateReleaseStreamUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
