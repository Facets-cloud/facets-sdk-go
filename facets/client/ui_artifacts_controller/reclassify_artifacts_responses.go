// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ReclassifyArtifactsReader is a Reader for the ReclassifyArtifacts structure.
type ReclassifyArtifactsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReclassifyArtifactsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReclassifyArtifactsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewReclassifyArtifactsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReclassifyArtifactsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewReclassifyArtifactsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewReclassifyArtifactsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/artifacts/reclassify] reclassifyArtifacts", response, response.Code())
	}
}

// NewReclassifyArtifactsOK creates a ReclassifyArtifactsOK with default headers values
func NewReclassifyArtifactsOK() *ReclassifyArtifactsOK {
	return &ReclassifyArtifactsOK{}
}

/*
ReclassifyArtifactsOK describes a response with status code 200, with default header values.

OK
*/
type ReclassifyArtifactsOK struct {
}

// IsSuccess returns true when this reclassify artifacts o k response has a 2xx status code
func (o *ReclassifyArtifactsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reclassify artifacts o k response has a 3xx status code
func (o *ReclassifyArtifactsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts o k response has a 4xx status code
func (o *ReclassifyArtifactsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reclassify artifacts o k response has a 5xx status code
func (o *ReclassifyArtifactsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts o k response a status code equal to that given
func (o *ReclassifyArtifactsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reclassify artifacts o k response
func (o *ReclassifyArtifactsOK) Code() int {
	return 200
}

func (o *ReclassifyArtifactsOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsOK", 200)
}

func (o *ReclassifyArtifactsOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsOK", 200)
}

func (o *ReclassifyArtifactsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReclassifyArtifactsBadRequest creates a ReclassifyArtifactsBadRequest with default headers values
func NewReclassifyArtifactsBadRequest() *ReclassifyArtifactsBadRequest {
	return &ReclassifyArtifactsBadRequest{}
}

/*
ReclassifyArtifactsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ReclassifyArtifactsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reclassify artifacts bad request response has a 2xx status code
func (o *ReclassifyArtifactsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reclassify artifacts bad request response has a 3xx status code
func (o *ReclassifyArtifactsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts bad request response has a 4xx status code
func (o *ReclassifyArtifactsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this reclassify artifacts bad request response has a 5xx status code
func (o *ReclassifyArtifactsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts bad request response a status code equal to that given
func (o *ReclassifyArtifactsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the reclassify artifacts bad request response
func (o *ReclassifyArtifactsBadRequest) Code() int {
	return 400
}

func (o *ReclassifyArtifactsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsBadRequest %s", 400, payload)
}

func (o *ReclassifyArtifactsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsBadRequest %s", 400, payload)
}

func (o *ReclassifyArtifactsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ReclassifyArtifactsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReclassifyArtifactsNotFound creates a ReclassifyArtifactsNotFound with default headers values
func NewReclassifyArtifactsNotFound() *ReclassifyArtifactsNotFound {
	return &ReclassifyArtifactsNotFound{}
}

/*
ReclassifyArtifactsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ReclassifyArtifactsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reclassify artifacts not found response has a 2xx status code
func (o *ReclassifyArtifactsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reclassify artifacts not found response has a 3xx status code
func (o *ReclassifyArtifactsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts not found response has a 4xx status code
func (o *ReclassifyArtifactsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reclassify artifacts not found response has a 5xx status code
func (o *ReclassifyArtifactsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts not found response a status code equal to that given
func (o *ReclassifyArtifactsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reclassify artifacts not found response
func (o *ReclassifyArtifactsNotFound) Code() int {
	return 404
}

func (o *ReclassifyArtifactsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsNotFound %s", 404, payload)
}

func (o *ReclassifyArtifactsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsNotFound %s", 404, payload)
}

func (o *ReclassifyArtifactsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ReclassifyArtifactsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReclassifyArtifactsMethodNotAllowed creates a ReclassifyArtifactsMethodNotAllowed with default headers values
func NewReclassifyArtifactsMethodNotAllowed() *ReclassifyArtifactsMethodNotAllowed {
	return &ReclassifyArtifactsMethodNotAllowed{}
}

/*
ReclassifyArtifactsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ReclassifyArtifactsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reclassify artifacts method not allowed response has a 2xx status code
func (o *ReclassifyArtifactsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reclassify artifacts method not allowed response has a 3xx status code
func (o *ReclassifyArtifactsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts method not allowed response has a 4xx status code
func (o *ReclassifyArtifactsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this reclassify artifacts method not allowed response has a 5xx status code
func (o *ReclassifyArtifactsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts method not allowed response a status code equal to that given
func (o *ReclassifyArtifactsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the reclassify artifacts method not allowed response
func (o *ReclassifyArtifactsMethodNotAllowed) Code() int {
	return 405
}

func (o *ReclassifyArtifactsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsMethodNotAllowed %s", 405, payload)
}

func (o *ReclassifyArtifactsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsMethodNotAllowed %s", 405, payload)
}

func (o *ReclassifyArtifactsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ReclassifyArtifactsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewReclassifyArtifactsInternalServerError creates a ReclassifyArtifactsInternalServerError with default headers values
func NewReclassifyArtifactsInternalServerError() *ReclassifyArtifactsInternalServerError {
	return &ReclassifyArtifactsInternalServerError{}
}

/*
ReclassifyArtifactsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ReclassifyArtifactsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this reclassify artifacts internal server error response has a 2xx status code
func (o *ReclassifyArtifactsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reclassify artifacts internal server error response has a 3xx status code
func (o *ReclassifyArtifactsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts internal server error response has a 4xx status code
func (o *ReclassifyArtifactsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this reclassify artifacts internal server error response has a 5xx status code
func (o *ReclassifyArtifactsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this reclassify artifacts internal server error response a status code equal to that given
func (o *ReclassifyArtifactsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the reclassify artifacts internal server error response
func (o *ReclassifyArtifactsInternalServerError) Code() int {
	return 500
}

func (o *ReclassifyArtifactsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsInternalServerError %s", 500, payload)
}

func (o *ReclassifyArtifactsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsInternalServerError %s", 500, payload)
}

func (o *ReclassifyArtifactsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ReclassifyArtifactsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
