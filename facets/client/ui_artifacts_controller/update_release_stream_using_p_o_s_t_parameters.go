// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewUpdateReleaseStreamUsingPOSTParams creates a new UpdateReleaseStreamUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateReleaseStreamUsingPOSTParams() *UpdateReleaseStreamUsingPOSTParams {
	return &UpdateReleaseStreamUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateReleaseStreamUsingPOSTParamsWithTimeout creates a new UpdateReleaseStreamUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewUpdateReleaseStreamUsingPOSTParamsWithTimeout(timeout time.Duration) *UpdateReleaseStreamUsingPOSTParams {
	return &UpdateReleaseStreamUsingPOSTParams{
		timeout: timeout,
	}
}

// NewUpdateReleaseStreamUsingPOSTParamsWithContext creates a new UpdateReleaseStreamUsingPOSTParams object
// with the ability to set a context for a request.
func NewUpdateReleaseStreamUsingPOSTParamsWithContext(ctx context.Context) *UpdateReleaseStreamUsingPOSTParams {
	return &UpdateReleaseStreamUsingPOSTParams{
		Context: ctx,
	}
}

// NewUpdateReleaseStreamUsingPOSTParamsWithHTTPClient creates a new UpdateReleaseStreamUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateReleaseStreamUsingPOSTParamsWithHTTPClient(client *http.Client) *UpdateReleaseStreamUsingPOSTParams {
	return &UpdateReleaseStreamUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
UpdateReleaseStreamUsingPOSTParams contains all the parameters to send to the API endpoint

	for the update release stream using p o s t operation.

	Typically these are written to a http.Request.
*/
type UpdateReleaseStreamUsingPOSTParams struct {

	/* ClusterID.

	   clusterId
	*/
	ClusterID string

	/* CurrentReleaseStream.

	   currentReleaseStream
	*/
	CurrentReleaseStream string

	/* ExcludeApps.

	   excludeApps
	*/
	ExcludeApps []string

	/* IncludeApps.

	   includeApps
	*/
	IncludeApps []string

	/* UpdatedReleaseStream.

	   updatedReleaseStream
	*/
	UpdatedReleaseStream string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update release stream using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateReleaseStreamUsingPOSTParams) WithDefaults() *UpdateReleaseStreamUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update release stream using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateReleaseStreamUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithTimeout(timeout time.Duration) *UpdateReleaseStreamUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithContext(ctx context.Context) *UpdateReleaseStreamUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithHTTPClient(client *http.Client) *UpdateReleaseStreamUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithClusterID(clusterID string) *UpdateReleaseStreamUsingPOSTParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithCurrentReleaseStream adds the currentReleaseStream to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithCurrentReleaseStream(currentReleaseStream string) *UpdateReleaseStreamUsingPOSTParams {
	o.SetCurrentReleaseStream(currentReleaseStream)
	return o
}

// SetCurrentReleaseStream adds the currentReleaseStream to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetCurrentReleaseStream(currentReleaseStream string) {
	o.CurrentReleaseStream = currentReleaseStream
}

// WithExcludeApps adds the excludeApps to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithExcludeApps(excludeApps []string) *UpdateReleaseStreamUsingPOSTParams {
	o.SetExcludeApps(excludeApps)
	return o
}

// SetExcludeApps adds the excludeApps to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetExcludeApps(excludeApps []string) {
	o.ExcludeApps = excludeApps
}

// WithIncludeApps adds the includeApps to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithIncludeApps(includeApps []string) *UpdateReleaseStreamUsingPOSTParams {
	o.SetIncludeApps(includeApps)
	return o
}

// SetIncludeApps adds the includeApps to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetIncludeApps(includeApps []string) {
	o.IncludeApps = includeApps
}

// WithUpdatedReleaseStream adds the updatedReleaseStream to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) WithUpdatedReleaseStream(updatedReleaseStream string) *UpdateReleaseStreamUsingPOSTParams {
	o.SetUpdatedReleaseStream(updatedReleaseStream)
	return o
}

// SetUpdatedReleaseStream adds the updatedReleaseStream to the update release stream using p o s t params
func (o *UpdateReleaseStreamUsingPOSTParams) SetUpdatedReleaseStream(updatedReleaseStream string) {
	o.UpdatedReleaseStream = updatedReleaseStream
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateReleaseStreamUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}

	// path param currentReleaseStream
	if err := r.SetPathParam("currentReleaseStream", o.CurrentReleaseStream); err != nil {
		return err
	}

	if o.ExcludeApps != nil {

		// binding items for excludeApps
		joinedExcludeApps := o.bindParamExcludeApps(reg)

		// query array param excludeApps
		if err := r.SetQueryParam("excludeApps", joinedExcludeApps...); err != nil {
			return err
		}
	}

	if o.IncludeApps != nil {

		// binding items for includeApps
		joinedIncludeApps := o.bindParamIncludeApps(reg)

		// query array param includeApps
		if err := r.SetQueryParam("includeApps", joinedIncludeApps...); err != nil {
			return err
		}
	}

	// path param updatedReleaseStream
	if err := r.SetPathParam("updatedReleaseStream", o.UpdatedReleaseStream); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamUpdateReleaseStreamUsingPOST binds the parameter excludeApps
func (o *UpdateReleaseStreamUsingPOSTParams) bindParamExcludeApps(formats strfmt.Registry) []string {
	excludeAppsIR := o.ExcludeApps

	var excludeAppsIC []string
	for _, excludeAppsIIR := range excludeAppsIR { // explode []string

		excludeAppsIIV := excludeAppsIIR // string as string
		excludeAppsIC = append(excludeAppsIC, excludeAppsIIV)
	}

	// items.CollectionFormat: "multi"
	excludeAppsIS := swag.JoinByFormat(excludeAppsIC, "multi")

	return excludeAppsIS
}

// bindParamUpdateReleaseStreamUsingPOST binds the parameter includeApps
func (o *UpdateReleaseStreamUsingPOSTParams) bindParamIncludeApps(formats strfmt.Registry) []string {
	includeAppsIR := o.IncludeApps

	var includeAppsIC []string
	for _, includeAppsIIR := range includeAppsIR { // explode []string

		includeAppsIIV := includeAppsIIR // string as string
		includeAppsIC = append(includeAppsIC, includeAppsIIV)
	}

	// items.CollectionFormat: "multi"
	includeAppsIS := swag.JoinByFormat(includeAppsIC, "multi")

	return includeAppsIS
}
