// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// PushArtifactUsingPOSTReader is a Reader for the PushArtifactUsingPOST structure.
type PushArtifactUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PushArtifactUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPushArtifactUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewPushArtifactUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewPushArtifactUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPushArtifactUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPushArtifactUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/push] pushArtifactUsingPOST", response, response.Code())
	}
}

// NewPushArtifactUsingPOSTOK creates a PushArtifactUsingPOSTOK with default headers values
func NewPushArtifactUsingPOSTOK() *PushArtifactUsingPOSTOK {
	return &PushArtifactUsingPOSTOK{}
}

/*
PushArtifactUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type PushArtifactUsingPOSTOK struct {
}

// IsSuccess returns true when this push artifact using p o s t o k response has a 2xx status code
func (o *PushArtifactUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this push artifact using p o s t o k response has a 3xx status code
func (o *PushArtifactUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact using p o s t o k response has a 4xx status code
func (o *PushArtifactUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this push artifact using p o s t o k response has a 5xx status code
func (o *PushArtifactUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact using p o s t o k response a status code equal to that given
func (o *PushArtifactUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the push artifact using p o s t o k response
func (o *PushArtifactUsingPOSTOK) Code() int {
	return 200
}

func (o *PushArtifactUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTOK", 200)
}

func (o *PushArtifactUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTOK", 200)
}

func (o *PushArtifactUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPushArtifactUsingPOSTCreated creates a PushArtifactUsingPOSTCreated with default headers values
func NewPushArtifactUsingPOSTCreated() *PushArtifactUsingPOSTCreated {
	return &PushArtifactUsingPOSTCreated{}
}

/*
PushArtifactUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type PushArtifactUsingPOSTCreated struct {
}

// IsSuccess returns true when this push artifact using p o s t created response has a 2xx status code
func (o *PushArtifactUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this push artifact using p o s t created response has a 3xx status code
func (o *PushArtifactUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact using p o s t created response has a 4xx status code
func (o *PushArtifactUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this push artifact using p o s t created response has a 5xx status code
func (o *PushArtifactUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact using p o s t created response a status code equal to that given
func (o *PushArtifactUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the push artifact using p o s t created response
func (o *PushArtifactUsingPOSTCreated) Code() int {
	return 201
}

func (o *PushArtifactUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTCreated", 201)
}

func (o *PushArtifactUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTCreated", 201)
}

func (o *PushArtifactUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPushArtifactUsingPOSTUnauthorized creates a PushArtifactUsingPOSTUnauthorized with default headers values
func NewPushArtifactUsingPOSTUnauthorized() *PushArtifactUsingPOSTUnauthorized {
	return &PushArtifactUsingPOSTUnauthorized{}
}

/*
PushArtifactUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type PushArtifactUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this push artifact using p o s t unauthorized response has a 2xx status code
func (o *PushArtifactUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this push artifact using p o s t unauthorized response has a 3xx status code
func (o *PushArtifactUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact using p o s t unauthorized response has a 4xx status code
func (o *PushArtifactUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this push artifact using p o s t unauthorized response has a 5xx status code
func (o *PushArtifactUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact using p o s t unauthorized response a status code equal to that given
func (o *PushArtifactUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the push artifact using p o s t unauthorized response
func (o *PushArtifactUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *PushArtifactUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTUnauthorized", 401)
}

func (o *PushArtifactUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTUnauthorized", 401)
}

func (o *PushArtifactUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPushArtifactUsingPOSTForbidden creates a PushArtifactUsingPOSTForbidden with default headers values
func NewPushArtifactUsingPOSTForbidden() *PushArtifactUsingPOSTForbidden {
	return &PushArtifactUsingPOSTForbidden{}
}

/*
PushArtifactUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PushArtifactUsingPOSTForbidden struct {
}

// IsSuccess returns true when this push artifact using p o s t forbidden response has a 2xx status code
func (o *PushArtifactUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this push artifact using p o s t forbidden response has a 3xx status code
func (o *PushArtifactUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact using p o s t forbidden response has a 4xx status code
func (o *PushArtifactUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this push artifact using p o s t forbidden response has a 5xx status code
func (o *PushArtifactUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact using p o s t forbidden response a status code equal to that given
func (o *PushArtifactUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the push artifact using p o s t forbidden response
func (o *PushArtifactUsingPOSTForbidden) Code() int {
	return 403
}

func (o *PushArtifactUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTForbidden", 403)
}

func (o *PushArtifactUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTForbidden", 403)
}

func (o *PushArtifactUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPushArtifactUsingPOSTNotFound creates a PushArtifactUsingPOSTNotFound with default headers values
func NewPushArtifactUsingPOSTNotFound() *PushArtifactUsingPOSTNotFound {
	return &PushArtifactUsingPOSTNotFound{}
}

/*
PushArtifactUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PushArtifactUsingPOSTNotFound struct {
}

// IsSuccess returns true when this push artifact using p o s t not found response has a 2xx status code
func (o *PushArtifactUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this push artifact using p o s t not found response has a 3xx status code
func (o *PushArtifactUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact using p o s t not found response has a 4xx status code
func (o *PushArtifactUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this push artifact using p o s t not found response has a 5xx status code
func (o *PushArtifactUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact using p o s t not found response a status code equal to that given
func (o *PushArtifactUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the push artifact using p o s t not found response
func (o *PushArtifactUsingPOSTNotFound) Code() int {
	return 404
}

func (o *PushArtifactUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTNotFound", 404)
}

func (o *PushArtifactUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactUsingPOSTNotFound", 404)
}

func (o *PushArtifactUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
