// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// UploadArtifactsZipUsingPOSTReader is a Reader for the UploadArtifactsZipUsingPOST structure.
type UploadArtifactsZipUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UploadArtifactsZipUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUploadArtifactsZipUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUploadArtifactsZipUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUploadArtifactsZipUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUploadArtifactsZipUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUploadArtifactsZipUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/upload] uploadArtifactsZipUsingPOST", response, response.Code())
	}
}

// NewUploadArtifactsZipUsingPOSTOK creates a UploadArtifactsZipUsingPOSTOK with default headers values
func NewUploadArtifactsZipUsingPOSTOK() *UploadArtifactsZipUsingPOSTOK {
	return &UploadArtifactsZipUsingPOSTOK{}
}

/*
UploadArtifactsZipUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type UploadArtifactsZipUsingPOSTOK struct {
}

// IsSuccess returns true when this upload artifacts zip using p o s t o k response has a 2xx status code
func (o *UploadArtifactsZipUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload artifacts zip using p o s t o k response has a 3xx status code
func (o *UploadArtifactsZipUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload artifacts zip using p o s t o k response has a 4xx status code
func (o *UploadArtifactsZipUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload artifacts zip using p o s t o k response has a 5xx status code
func (o *UploadArtifactsZipUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this upload artifacts zip using p o s t o k response a status code equal to that given
func (o *UploadArtifactsZipUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the upload artifacts zip using p o s t o k response
func (o *UploadArtifactsZipUsingPOSTOK) Code() int {
	return 200
}

func (o *UploadArtifactsZipUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTOK", 200)
}

func (o *UploadArtifactsZipUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTOK", 200)
}

func (o *UploadArtifactsZipUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadArtifactsZipUsingPOSTCreated creates a UploadArtifactsZipUsingPOSTCreated with default headers values
func NewUploadArtifactsZipUsingPOSTCreated() *UploadArtifactsZipUsingPOSTCreated {
	return &UploadArtifactsZipUsingPOSTCreated{}
}

/*
UploadArtifactsZipUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type UploadArtifactsZipUsingPOSTCreated struct {
}

// IsSuccess returns true when this upload artifacts zip using p o s t created response has a 2xx status code
func (o *UploadArtifactsZipUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this upload artifacts zip using p o s t created response has a 3xx status code
func (o *UploadArtifactsZipUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload artifacts zip using p o s t created response has a 4xx status code
func (o *UploadArtifactsZipUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this upload artifacts zip using p o s t created response has a 5xx status code
func (o *UploadArtifactsZipUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this upload artifacts zip using p o s t created response a status code equal to that given
func (o *UploadArtifactsZipUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the upload artifacts zip using p o s t created response
func (o *UploadArtifactsZipUsingPOSTCreated) Code() int {
	return 201
}

func (o *UploadArtifactsZipUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTCreated", 201)
}

func (o *UploadArtifactsZipUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTCreated", 201)
}

func (o *UploadArtifactsZipUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadArtifactsZipUsingPOSTUnauthorized creates a UploadArtifactsZipUsingPOSTUnauthorized with default headers values
func NewUploadArtifactsZipUsingPOSTUnauthorized() *UploadArtifactsZipUsingPOSTUnauthorized {
	return &UploadArtifactsZipUsingPOSTUnauthorized{}
}

/*
UploadArtifactsZipUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UploadArtifactsZipUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this upload artifacts zip using p o s t unauthorized response has a 2xx status code
func (o *UploadArtifactsZipUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload artifacts zip using p o s t unauthorized response has a 3xx status code
func (o *UploadArtifactsZipUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload artifacts zip using p o s t unauthorized response has a 4xx status code
func (o *UploadArtifactsZipUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload artifacts zip using p o s t unauthorized response has a 5xx status code
func (o *UploadArtifactsZipUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this upload artifacts zip using p o s t unauthorized response a status code equal to that given
func (o *UploadArtifactsZipUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the upload artifacts zip using p o s t unauthorized response
func (o *UploadArtifactsZipUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *UploadArtifactsZipUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTUnauthorized", 401)
}

func (o *UploadArtifactsZipUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTUnauthorized", 401)
}

func (o *UploadArtifactsZipUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadArtifactsZipUsingPOSTForbidden creates a UploadArtifactsZipUsingPOSTForbidden with default headers values
func NewUploadArtifactsZipUsingPOSTForbidden() *UploadArtifactsZipUsingPOSTForbidden {
	return &UploadArtifactsZipUsingPOSTForbidden{}
}

/*
UploadArtifactsZipUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UploadArtifactsZipUsingPOSTForbidden struct {
}

// IsSuccess returns true when this upload artifacts zip using p o s t forbidden response has a 2xx status code
func (o *UploadArtifactsZipUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload artifacts zip using p o s t forbidden response has a 3xx status code
func (o *UploadArtifactsZipUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload artifacts zip using p o s t forbidden response has a 4xx status code
func (o *UploadArtifactsZipUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload artifacts zip using p o s t forbidden response has a 5xx status code
func (o *UploadArtifactsZipUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this upload artifacts zip using p o s t forbidden response a status code equal to that given
func (o *UploadArtifactsZipUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the upload artifacts zip using p o s t forbidden response
func (o *UploadArtifactsZipUsingPOSTForbidden) Code() int {
	return 403
}

func (o *UploadArtifactsZipUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTForbidden", 403)
}

func (o *UploadArtifactsZipUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTForbidden", 403)
}

func (o *UploadArtifactsZipUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadArtifactsZipUsingPOSTNotFound creates a UploadArtifactsZipUsingPOSTNotFound with default headers values
func NewUploadArtifactsZipUsingPOSTNotFound() *UploadArtifactsZipUsingPOSTNotFound {
	return &UploadArtifactsZipUsingPOSTNotFound{}
}

/*
UploadArtifactsZipUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UploadArtifactsZipUsingPOSTNotFound struct {
}

// IsSuccess returns true when this upload artifacts zip using p o s t not found response has a 2xx status code
func (o *UploadArtifactsZipUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this upload artifacts zip using p o s t not found response has a 3xx status code
func (o *UploadArtifactsZipUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this upload artifacts zip using p o s t not found response has a 4xx status code
func (o *UploadArtifactsZipUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this upload artifacts zip using p o s t not found response has a 5xx status code
func (o *UploadArtifactsZipUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this upload artifacts zip using p o s t not found response a status code equal to that given
func (o *UploadArtifactsZipUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the upload artifacts zip using p o s t not found response
func (o *UploadArtifactsZipUsingPOSTNotFound) Code() int {
	return 404
}

func (o *UploadArtifactsZipUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTNotFound", 404)
}

func (o *UploadArtifactsZipUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/upload][%d] uploadArtifactsZipUsingPOSTNotFound", 404)
}

func (o *UploadArtifactsZipUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
