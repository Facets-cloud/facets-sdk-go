// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactsByResourceNameAndResourceTypeUsingGETReader is a Reader for the GetArtifactsByResourceNameAndResourceTypeUsingGET structure.
type GetArtifactsByResourceNameAndResourceTypeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactsByResourceNameAndResourceTypeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactsByResourceNameAndResourceTypeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactsByResourceNameAndResourceTypeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}] getArtifactsByResourceNameAndResourceTypeUsingGET", response, response.Code())
	}
}

// NewGetArtifactsByResourceNameAndResourceTypeUsingGETOK creates a GetArtifactsByResourceNameAndResourceTypeUsingGETOK with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeUsingGETOK() *GetArtifactsByResourceNameAndResourceTypeUsingGETOK {
	return &GetArtifactsByResourceNameAndResourceTypeUsingGETOK{}
}

/*
GetArtifactsByResourceNameAndResourceTypeUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactsByResourceNameAndResourceTypeUsingGETOK struct {
	Payload *models.Artifact
}

// IsSuccess returns true when this get artifacts by resource name and resource type using g e t o k response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifacts by resource name and resource type using g e t o k response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type using g e t o k response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts by resource name and resource type using g e t o k response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type using g e t o k response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifacts by resource name and resource type using g e t o k response
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) Code() int {
	return 200
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETOK %s", 200, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETOK %s", 200, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) GetPayload() *models.Artifact {
	return o.Payload
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Artifact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized creates a GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized() *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized {
	return &GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized{}
}

/*
GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get artifacts by resource name and resource type using g e t unauthorized response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts by resource name and resource type using g e t unauthorized response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type using g e t unauthorized response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts by resource name and resource type using g e t unauthorized response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type using g e t unauthorized response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get artifacts by resource name and resource type using g e t unauthorized response
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized", 401)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized", 401)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactsByResourceNameAndResourceTypeUsingGETForbidden creates a GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeUsingGETForbidden() *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden {
	return &GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden{}
}

/*
GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden struct {
}

// IsSuccess returns true when this get artifacts by resource name and resource type using g e t forbidden response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts by resource name and resource type using g e t forbidden response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type using g e t forbidden response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts by resource name and resource type using g e t forbidden response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type using g e t forbidden response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get artifacts by resource name and resource type using g e t forbidden response
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) Code() int {
	return 403
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETForbidden", 403)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETForbidden", 403)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactsByResourceNameAndResourceTypeUsingGETNotFound creates a GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeUsingGETNotFound() *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound {
	return &GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound{}
}

/*
GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound struct {
}

// IsSuccess returns true when this get artifacts by resource name and resource type using g e t not found response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts by resource name and resource type using g e t not found response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type using g e t not found response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts by resource name and resource type using g e t not found response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type using g e t not found response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifacts by resource name and resource type using g e t not found response
func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) Code() int {
	return 404
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETNotFound", 404)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeUsingGETNotFound", 404)
}

func (o *GetArtifactsByResourceNameAndResourceTypeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
