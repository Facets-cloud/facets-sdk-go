// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactByApplicationNameReader is a Reader for the GetArtifactByApplicationName structure.
type GetArtifactByApplicationNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactByApplicationNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactByApplicationNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactByApplicationNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactByApplicationNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetArtifactByApplicationNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactByApplicationNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}] getArtifactByApplicationName", response, response.Code())
	}
}

// NewGetArtifactByApplicationNameOK creates a GetArtifactByApplicationNameOK with default headers values
func NewGetArtifactByApplicationNameOK() *GetArtifactByApplicationNameOK {
	return &GetArtifactByApplicationNameOK{}
}

/*
GetArtifactByApplicationNameOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactByApplicationNameOK struct {
	Payload *models.Artifact
}

// IsSuccess returns true when this get artifact by application name o k response has a 2xx status code
func (o *GetArtifactByApplicationNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact by application name o k response has a 3xx status code
func (o *GetArtifactByApplicationNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name o k response has a 4xx status code
func (o *GetArtifactByApplicationNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact by application name o k response has a 5xx status code
func (o *GetArtifactByApplicationNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name o k response a status code equal to that given
func (o *GetArtifactByApplicationNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifact by application name o k response
func (o *GetArtifactByApplicationNameOK) Code() int {
	return 200
}

func (o *GetArtifactByApplicationNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameOK %s", 200, payload)
}

func (o *GetArtifactByApplicationNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameOK %s", 200, payload)
}

func (o *GetArtifactByApplicationNameOK) GetPayload() *models.Artifact {
	return o.Payload
}

func (o *GetArtifactByApplicationNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Artifact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactByApplicationNameBadRequest creates a GetArtifactByApplicationNameBadRequest with default headers values
func NewGetArtifactByApplicationNameBadRequest() *GetArtifactByApplicationNameBadRequest {
	return &GetArtifactByApplicationNameBadRequest{}
}

/*
GetArtifactByApplicationNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactByApplicationNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact by application name bad request response has a 2xx status code
func (o *GetArtifactByApplicationNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact by application name bad request response has a 3xx status code
func (o *GetArtifactByApplicationNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name bad request response has a 4xx status code
func (o *GetArtifactByApplicationNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact by application name bad request response has a 5xx status code
func (o *GetArtifactByApplicationNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name bad request response a status code equal to that given
func (o *GetArtifactByApplicationNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get artifact by application name bad request response
func (o *GetArtifactByApplicationNameBadRequest) Code() int {
	return 400
}

func (o *GetArtifactByApplicationNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameBadRequest %s", 400, payload)
}

func (o *GetArtifactByApplicationNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameBadRequest %s", 400, payload)
}

func (o *GetArtifactByApplicationNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactByApplicationNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactByApplicationNameNotFound creates a GetArtifactByApplicationNameNotFound with default headers values
func NewGetArtifactByApplicationNameNotFound() *GetArtifactByApplicationNameNotFound {
	return &GetArtifactByApplicationNameNotFound{}
}

/*
GetArtifactByApplicationNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactByApplicationNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact by application name not found response has a 2xx status code
func (o *GetArtifactByApplicationNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact by application name not found response has a 3xx status code
func (o *GetArtifactByApplicationNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name not found response has a 4xx status code
func (o *GetArtifactByApplicationNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact by application name not found response has a 5xx status code
func (o *GetArtifactByApplicationNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name not found response a status code equal to that given
func (o *GetArtifactByApplicationNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifact by application name not found response
func (o *GetArtifactByApplicationNameNotFound) Code() int {
	return 404
}

func (o *GetArtifactByApplicationNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameNotFound %s", 404, payload)
}

func (o *GetArtifactByApplicationNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameNotFound %s", 404, payload)
}

func (o *GetArtifactByApplicationNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactByApplicationNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactByApplicationNameMethodNotAllowed creates a GetArtifactByApplicationNameMethodNotAllowed with default headers values
func NewGetArtifactByApplicationNameMethodNotAllowed() *GetArtifactByApplicationNameMethodNotAllowed {
	return &GetArtifactByApplicationNameMethodNotAllowed{}
}

/*
GetArtifactByApplicationNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetArtifactByApplicationNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact by application name method not allowed response has a 2xx status code
func (o *GetArtifactByApplicationNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact by application name method not allowed response has a 3xx status code
func (o *GetArtifactByApplicationNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name method not allowed response has a 4xx status code
func (o *GetArtifactByApplicationNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact by application name method not allowed response has a 5xx status code
func (o *GetArtifactByApplicationNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name method not allowed response a status code equal to that given
func (o *GetArtifactByApplicationNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get artifact by application name method not allowed response
func (o *GetArtifactByApplicationNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetArtifactByApplicationNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactByApplicationNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactByApplicationNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactByApplicationNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactByApplicationNameInternalServerError creates a GetArtifactByApplicationNameInternalServerError with default headers values
func NewGetArtifactByApplicationNameInternalServerError() *GetArtifactByApplicationNameInternalServerError {
	return &GetArtifactByApplicationNameInternalServerError{}
}

/*
GetArtifactByApplicationNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArtifactByApplicationNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact by application name internal server error response has a 2xx status code
func (o *GetArtifactByApplicationNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact by application name internal server error response has a 3xx status code
func (o *GetArtifactByApplicationNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name internal server error response has a 4xx status code
func (o *GetArtifactByApplicationNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact by application name internal server error response has a 5xx status code
func (o *GetArtifactByApplicationNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifact by application name internal server error response a status code equal to that given
func (o *GetArtifactByApplicationNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get artifact by application name internal server error response
func (o *GetArtifactByApplicationNameInternalServerError) Code() int {
	return 500
}

func (o *GetArtifactByApplicationNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameInternalServerError %s", 500, payload)
}

func (o *GetArtifactByApplicationNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameInternalServerError %s", 500, payload)
}

func (o *GetArtifactByApplicationNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactByApplicationNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
