// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetMetadataKeysUsingGETReader is a Reader for the GetMetadataKeysUsingGET structure.
type GetMetadataKeysUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetadataKeysUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetadataKeysUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMetadataKeysUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMetadataKeysUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMetadataKeysUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts/metadata/keys] getMetadataKeysUsingGET", response, response.Code())
	}
}

// NewGetMetadataKeysUsingGETOK creates a GetMetadataKeysUsingGETOK with default headers values
func NewGetMetadataKeysUsingGETOK() *GetMetadataKeysUsingGETOK {
	return &GetMetadataKeysUsingGETOK{}
}

/*
GetMetadataKeysUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetMetadataKeysUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get metadata keys using g e t o k response has a 2xx status code
func (o *GetMetadataKeysUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get metadata keys using g e t o k response has a 3xx status code
func (o *GetMetadataKeysUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys using g e t o k response has a 4xx status code
func (o *GetMetadataKeysUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get metadata keys using g e t o k response has a 5xx status code
func (o *GetMetadataKeysUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys using g e t o k response a status code equal to that given
func (o *GetMetadataKeysUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get metadata keys using g e t o k response
func (o *GetMetadataKeysUsingGETOK) Code() int {
	return 200
}

func (o *GetMetadataKeysUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETOK %s", 200, payload)
}

func (o *GetMetadataKeysUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETOK %s", 200, payload)
}

func (o *GetMetadataKeysUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetMetadataKeysUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataKeysUsingGETUnauthorized creates a GetMetadataKeysUsingGETUnauthorized with default headers values
func NewGetMetadataKeysUsingGETUnauthorized() *GetMetadataKeysUsingGETUnauthorized {
	return &GetMetadataKeysUsingGETUnauthorized{}
}

/*
GetMetadataKeysUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMetadataKeysUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get metadata keys using g e t unauthorized response has a 2xx status code
func (o *GetMetadataKeysUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get metadata keys using g e t unauthorized response has a 3xx status code
func (o *GetMetadataKeysUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys using g e t unauthorized response has a 4xx status code
func (o *GetMetadataKeysUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get metadata keys using g e t unauthorized response has a 5xx status code
func (o *GetMetadataKeysUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys using g e t unauthorized response a status code equal to that given
func (o *GetMetadataKeysUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get metadata keys using g e t unauthorized response
func (o *GetMetadataKeysUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMetadataKeysUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETUnauthorized", 401)
}

func (o *GetMetadataKeysUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETUnauthorized", 401)
}

func (o *GetMetadataKeysUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataKeysUsingGETForbidden creates a GetMetadataKeysUsingGETForbidden with default headers values
func NewGetMetadataKeysUsingGETForbidden() *GetMetadataKeysUsingGETForbidden {
	return &GetMetadataKeysUsingGETForbidden{}
}

/*
GetMetadataKeysUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMetadataKeysUsingGETForbidden struct {
}

// IsSuccess returns true when this get metadata keys using g e t forbidden response has a 2xx status code
func (o *GetMetadataKeysUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get metadata keys using g e t forbidden response has a 3xx status code
func (o *GetMetadataKeysUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys using g e t forbidden response has a 4xx status code
func (o *GetMetadataKeysUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get metadata keys using g e t forbidden response has a 5xx status code
func (o *GetMetadataKeysUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys using g e t forbidden response a status code equal to that given
func (o *GetMetadataKeysUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get metadata keys using g e t forbidden response
func (o *GetMetadataKeysUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMetadataKeysUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETForbidden", 403)
}

func (o *GetMetadataKeysUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETForbidden", 403)
}

func (o *GetMetadataKeysUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMetadataKeysUsingGETNotFound creates a GetMetadataKeysUsingGETNotFound with default headers values
func NewGetMetadataKeysUsingGETNotFound() *GetMetadataKeysUsingGETNotFound {
	return &GetMetadataKeysUsingGETNotFound{}
}

/*
GetMetadataKeysUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMetadataKeysUsingGETNotFound struct {
}

// IsSuccess returns true when this get metadata keys using g e t not found response has a 2xx status code
func (o *GetMetadataKeysUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get metadata keys using g e t not found response has a 3xx status code
func (o *GetMetadataKeysUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys using g e t not found response has a 4xx status code
func (o *GetMetadataKeysUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get metadata keys using g e t not found response has a 5xx status code
func (o *GetMetadataKeysUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys using g e t not found response a status code equal to that given
func (o *GetMetadataKeysUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get metadata keys using g e t not found response
func (o *GetMetadataKeysUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMetadataKeysUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETNotFound", 404)
}

func (o *GetMetadataKeysUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysUsingGETNotFound", 404)
}

func (o *GetMetadataKeysUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
