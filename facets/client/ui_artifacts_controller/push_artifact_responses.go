// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// PushArtifactReader is a Reader for the PushArtifact structure.
type PushArtifactReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PushArtifactReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPushArtifactOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPushArtifactBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPushArtifactNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewPushArtifactMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPushArtifactInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/push] pushArtifact", response, response.Code())
	}
}

// NewPushArtifactOK creates a PushArtifactOK with default headers values
func NewPushArtifactOK() *PushArtifactOK {
	return &PushArtifactOK{}
}

/*
PushArtifactOK describes a response with status code 200, with default header values.

OK
*/
type PushArtifactOK struct {
}

// IsSuccess returns true when this push artifact o k response has a 2xx status code
func (o *PushArtifactOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this push artifact o k response has a 3xx status code
func (o *PushArtifactOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact o k response has a 4xx status code
func (o *PushArtifactOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this push artifact o k response has a 5xx status code
func (o *PushArtifactOK) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact o k response a status code equal to that given
func (o *PushArtifactOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the push artifact o k response
func (o *PushArtifactOK) Code() int {
	return 200
}

func (o *PushArtifactOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactOK", 200)
}

func (o *PushArtifactOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactOK", 200)
}

func (o *PushArtifactOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPushArtifactBadRequest creates a PushArtifactBadRequest with default headers values
func NewPushArtifactBadRequest() *PushArtifactBadRequest {
	return &PushArtifactBadRequest{}
}

/*
PushArtifactBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PushArtifactBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this push artifact bad request response has a 2xx status code
func (o *PushArtifactBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this push artifact bad request response has a 3xx status code
func (o *PushArtifactBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact bad request response has a 4xx status code
func (o *PushArtifactBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this push artifact bad request response has a 5xx status code
func (o *PushArtifactBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact bad request response a status code equal to that given
func (o *PushArtifactBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the push artifact bad request response
func (o *PushArtifactBadRequest) Code() int {
	return 400
}

func (o *PushArtifactBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactBadRequest %s", 400, payload)
}

func (o *PushArtifactBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactBadRequest %s", 400, payload)
}

func (o *PushArtifactBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *PushArtifactBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPushArtifactNotFound creates a PushArtifactNotFound with default headers values
func NewPushArtifactNotFound() *PushArtifactNotFound {
	return &PushArtifactNotFound{}
}

/*
PushArtifactNotFound describes a response with status code 404, with default header values.

Not Found
*/
type PushArtifactNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this push artifact not found response has a 2xx status code
func (o *PushArtifactNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this push artifact not found response has a 3xx status code
func (o *PushArtifactNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact not found response has a 4xx status code
func (o *PushArtifactNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this push artifact not found response has a 5xx status code
func (o *PushArtifactNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact not found response a status code equal to that given
func (o *PushArtifactNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the push artifact not found response
func (o *PushArtifactNotFound) Code() int {
	return 404
}

func (o *PushArtifactNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactNotFound %s", 404, payload)
}

func (o *PushArtifactNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactNotFound %s", 404, payload)
}

func (o *PushArtifactNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *PushArtifactNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPushArtifactMethodNotAllowed creates a PushArtifactMethodNotAllowed with default headers values
func NewPushArtifactMethodNotAllowed() *PushArtifactMethodNotAllowed {
	return &PushArtifactMethodNotAllowed{}
}

/*
PushArtifactMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type PushArtifactMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this push artifact method not allowed response has a 2xx status code
func (o *PushArtifactMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this push artifact method not allowed response has a 3xx status code
func (o *PushArtifactMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact method not allowed response has a 4xx status code
func (o *PushArtifactMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this push artifact method not allowed response has a 5xx status code
func (o *PushArtifactMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this push artifact method not allowed response a status code equal to that given
func (o *PushArtifactMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the push artifact method not allowed response
func (o *PushArtifactMethodNotAllowed) Code() int {
	return 405
}

func (o *PushArtifactMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactMethodNotAllowed %s", 405, payload)
}

func (o *PushArtifactMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactMethodNotAllowed %s", 405, payload)
}

func (o *PushArtifactMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *PushArtifactMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPushArtifactInternalServerError creates a PushArtifactInternalServerError with default headers values
func NewPushArtifactInternalServerError() *PushArtifactInternalServerError {
	return &PushArtifactInternalServerError{}
}

/*
PushArtifactInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PushArtifactInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this push artifact internal server error response has a 2xx status code
func (o *PushArtifactInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this push artifact internal server error response has a 3xx status code
func (o *PushArtifactInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this push artifact internal server error response has a 4xx status code
func (o *PushArtifactInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this push artifact internal server error response has a 5xx status code
func (o *PushArtifactInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this push artifact internal server error response a status code equal to that given
func (o *PushArtifactInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the push artifact internal server error response
func (o *PushArtifactInternalServerError) Code() int {
	return 500
}

func (o *PushArtifactInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactInternalServerError %s", 500, payload)
}

func (o *PushArtifactInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/push][%d] pushArtifactInternalServerError %s", 500, payload)
}

func (o *PushArtifactInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *PushArtifactInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
