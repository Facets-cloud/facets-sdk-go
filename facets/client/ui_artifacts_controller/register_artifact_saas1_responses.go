// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RegisterArtifactSaas1Reader is a Reader for the RegisterArtifactSaas1 structure.
type RegisterArtifactSaas1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterArtifactSaas1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterArtifactSaas1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterArtifactSaas1BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterArtifactSaas1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewRegisterArtifactSaas1MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterArtifactSaas1InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/register-saas] registerArtifactSaas_1", response, response.Code())
	}
}

// NewRegisterArtifactSaas1OK creates a RegisterArtifactSaas1OK with default headers values
func NewRegisterArtifactSaas1OK() *RegisterArtifactSaas1OK {
	return &RegisterArtifactSaas1OK{}
}

/*
RegisterArtifactSaas1OK describes a response with status code 200, with default header values.

OK
*/
type RegisterArtifactSaas1OK struct {
}

// IsSuccess returns true when this register artifact saas1 o k response has a 2xx status code
func (o *RegisterArtifactSaas1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact saas1 o k response has a 3xx status code
func (o *RegisterArtifactSaas1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas1 o k response has a 4xx status code
func (o *RegisterArtifactSaas1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact saas1 o k response has a 5xx status code
func (o *RegisterArtifactSaas1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas1 o k response a status code equal to that given
func (o *RegisterArtifactSaas1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register artifact saas1 o k response
func (o *RegisterArtifactSaas1OK) Code() int {
	return 200
}

func (o *RegisterArtifactSaas1OK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1OK", 200)
}

func (o *RegisterArtifactSaas1OK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1OK", 200)
}

func (o *RegisterArtifactSaas1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactSaas1BadRequest creates a RegisterArtifactSaas1BadRequest with default headers values
func NewRegisterArtifactSaas1BadRequest() *RegisterArtifactSaas1BadRequest {
	return &RegisterArtifactSaas1BadRequest{}
}

/*
RegisterArtifactSaas1BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RegisterArtifactSaas1BadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact saas1 bad request response has a 2xx status code
func (o *RegisterArtifactSaas1BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact saas1 bad request response has a 3xx status code
func (o *RegisterArtifactSaas1BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas1 bad request response has a 4xx status code
func (o *RegisterArtifactSaas1BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact saas1 bad request response has a 5xx status code
func (o *RegisterArtifactSaas1BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas1 bad request response a status code equal to that given
func (o *RegisterArtifactSaas1BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the register artifact saas1 bad request response
func (o *RegisterArtifactSaas1BadRequest) Code() int {
	return 400
}

func (o *RegisterArtifactSaas1BadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1BadRequest %s", 400, payload)
}

func (o *RegisterArtifactSaas1BadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1BadRequest %s", 400, payload)
}

func (o *RegisterArtifactSaas1BadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactSaas1BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterArtifactSaas1NotFound creates a RegisterArtifactSaas1NotFound with default headers values
func NewRegisterArtifactSaas1NotFound() *RegisterArtifactSaas1NotFound {
	return &RegisterArtifactSaas1NotFound{}
}

/*
RegisterArtifactSaas1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type RegisterArtifactSaas1NotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact saas1 not found response has a 2xx status code
func (o *RegisterArtifactSaas1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact saas1 not found response has a 3xx status code
func (o *RegisterArtifactSaas1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas1 not found response has a 4xx status code
func (o *RegisterArtifactSaas1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact saas1 not found response has a 5xx status code
func (o *RegisterArtifactSaas1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas1 not found response a status code equal to that given
func (o *RegisterArtifactSaas1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the register artifact saas1 not found response
func (o *RegisterArtifactSaas1NotFound) Code() int {
	return 404
}

func (o *RegisterArtifactSaas1NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1NotFound %s", 404, payload)
}

func (o *RegisterArtifactSaas1NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1NotFound %s", 404, payload)
}

func (o *RegisterArtifactSaas1NotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactSaas1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterArtifactSaas1MethodNotAllowed creates a RegisterArtifactSaas1MethodNotAllowed with default headers values
func NewRegisterArtifactSaas1MethodNotAllowed() *RegisterArtifactSaas1MethodNotAllowed {
	return &RegisterArtifactSaas1MethodNotAllowed{}
}

/*
RegisterArtifactSaas1MethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type RegisterArtifactSaas1MethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact saas1 method not allowed response has a 2xx status code
func (o *RegisterArtifactSaas1MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact saas1 method not allowed response has a 3xx status code
func (o *RegisterArtifactSaas1MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas1 method not allowed response has a 4xx status code
func (o *RegisterArtifactSaas1MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact saas1 method not allowed response has a 5xx status code
func (o *RegisterArtifactSaas1MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas1 method not allowed response a status code equal to that given
func (o *RegisterArtifactSaas1MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the register artifact saas1 method not allowed response
func (o *RegisterArtifactSaas1MethodNotAllowed) Code() int {
	return 405
}

func (o *RegisterArtifactSaas1MethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1MethodNotAllowed %s", 405, payload)
}

func (o *RegisterArtifactSaas1MethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1MethodNotAllowed %s", 405, payload)
}

func (o *RegisterArtifactSaas1MethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactSaas1MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterArtifactSaas1InternalServerError creates a RegisterArtifactSaas1InternalServerError with default headers values
func NewRegisterArtifactSaas1InternalServerError() *RegisterArtifactSaas1InternalServerError {
	return &RegisterArtifactSaas1InternalServerError{}
}

/*
RegisterArtifactSaas1InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RegisterArtifactSaas1InternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact saas1 internal server error response has a 2xx status code
func (o *RegisterArtifactSaas1InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact saas1 internal server error response has a 3xx status code
func (o *RegisterArtifactSaas1InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas1 internal server error response has a 4xx status code
func (o *RegisterArtifactSaas1InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact saas1 internal server error response has a 5xx status code
func (o *RegisterArtifactSaas1InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this register artifact saas1 internal server error response a status code equal to that given
func (o *RegisterArtifactSaas1InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the register artifact saas1 internal server error response
func (o *RegisterArtifactSaas1InternalServerError) Code() int {
	return 500
}

func (o *RegisterArtifactSaas1InternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1InternalServerError %s", 500, payload)
}

func (o *RegisterArtifactSaas1InternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaas1InternalServerError %s", 500, payload)
}

func (o *RegisterArtifactSaas1InternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactSaas1InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
