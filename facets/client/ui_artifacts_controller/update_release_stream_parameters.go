// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewUpdateReleaseStreamParams creates a new UpdateReleaseStreamParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateReleaseStreamParams() *UpdateReleaseStreamParams {
	return &UpdateReleaseStreamParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateReleaseStreamParamsWithTimeout creates a new UpdateReleaseStreamParams object
// with the ability to set a timeout on a request.
func NewUpdateReleaseStreamParamsWithTimeout(timeout time.Duration) *UpdateReleaseStreamParams {
	return &UpdateReleaseStreamParams{
		timeout: timeout,
	}
}

// NewUpdateReleaseStreamParamsWithContext creates a new UpdateReleaseStreamParams object
// with the ability to set a context for a request.
func NewUpdateReleaseStreamParamsWithContext(ctx context.Context) *UpdateReleaseStreamParams {
	return &UpdateReleaseStreamParams{
		Context: ctx,
	}
}

// NewUpdateReleaseStreamParamsWithHTTPClient creates a new UpdateReleaseStreamParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateReleaseStreamParamsWithHTTPClient(client *http.Client) *UpdateReleaseStreamParams {
	return &UpdateReleaseStreamParams{
		HTTPClient: client,
	}
}

/*
UpdateReleaseStreamParams contains all the parameters to send to the API endpoint

	for the update release stream operation.

	Typically these are written to a http.Request.
*/
type UpdateReleaseStreamParams struct {

	// ClusterID.
	ClusterID string

	// CurrentReleaseStream.
	CurrentReleaseStream string

	// ExcludeApps.
	ExcludeApps string

	// IncludeApps.
	IncludeApps string

	// UpdatedReleaseStream.
	UpdatedReleaseStream string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update release stream params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateReleaseStreamParams) WithDefaults() *UpdateReleaseStreamParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update release stream params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateReleaseStreamParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update release stream params
func (o *UpdateReleaseStreamParams) WithTimeout(timeout time.Duration) *UpdateReleaseStreamParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update release stream params
func (o *UpdateReleaseStreamParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update release stream params
func (o *UpdateReleaseStreamParams) WithContext(ctx context.Context) *UpdateReleaseStreamParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update release stream params
func (o *UpdateReleaseStreamParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update release stream params
func (o *UpdateReleaseStreamParams) WithHTTPClient(client *http.Client) *UpdateReleaseStreamParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update release stream params
func (o *UpdateReleaseStreamParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the update release stream params
func (o *UpdateReleaseStreamParams) WithClusterID(clusterID string) *UpdateReleaseStreamParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the update release stream params
func (o *UpdateReleaseStreamParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithCurrentReleaseStream adds the currentReleaseStream to the update release stream params
func (o *UpdateReleaseStreamParams) WithCurrentReleaseStream(currentReleaseStream string) *UpdateReleaseStreamParams {
	o.SetCurrentReleaseStream(currentReleaseStream)
	return o
}

// SetCurrentReleaseStream adds the currentReleaseStream to the update release stream params
func (o *UpdateReleaseStreamParams) SetCurrentReleaseStream(currentReleaseStream string) {
	o.CurrentReleaseStream = currentReleaseStream
}

// WithExcludeApps adds the excludeApps to the update release stream params
func (o *UpdateReleaseStreamParams) WithExcludeApps(excludeApps string) *UpdateReleaseStreamParams {
	o.SetExcludeApps(excludeApps)
	return o
}

// SetExcludeApps adds the excludeApps to the update release stream params
func (o *UpdateReleaseStreamParams) SetExcludeApps(excludeApps string) {
	o.ExcludeApps = excludeApps
}

// WithIncludeApps adds the includeApps to the update release stream params
func (o *UpdateReleaseStreamParams) WithIncludeApps(includeApps string) *UpdateReleaseStreamParams {
	o.SetIncludeApps(includeApps)
	return o
}

// SetIncludeApps adds the includeApps to the update release stream params
func (o *UpdateReleaseStreamParams) SetIncludeApps(includeApps string) {
	o.IncludeApps = includeApps
}

// WithUpdatedReleaseStream adds the updatedReleaseStream to the update release stream params
func (o *UpdateReleaseStreamParams) WithUpdatedReleaseStream(updatedReleaseStream string) *UpdateReleaseStreamParams {
	o.SetUpdatedReleaseStream(updatedReleaseStream)
	return o
}

// SetUpdatedReleaseStream adds the updatedReleaseStream to the update release stream params
func (o *UpdateReleaseStreamParams) SetUpdatedReleaseStream(updatedReleaseStream string) {
	o.UpdatedReleaseStream = updatedReleaseStream
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateReleaseStreamParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}

	// path param currentReleaseStream
	if err := r.SetPathParam("currentReleaseStream", o.CurrentReleaseStream); err != nil {
		return err
	}

	// query param excludeApps
	qrExcludeApps := o.ExcludeApps
	qExcludeApps := qrExcludeApps
	if qExcludeApps != "" {

		if err := r.SetQueryParam("excludeApps", qExcludeApps); err != nil {
			return err
		}
	}

	// query param includeApps
	qrIncludeApps := o.IncludeApps
	qIncludeApps := qrIncludeApps
	if qIncludeApps != "" {

		if err := r.SetQueryParam("includeApps", qIncludeApps); err != nil {
			return err
		}
	}

	// path param updatedReleaseStream
	if err := r.SetPathParam("updatedReleaseStream", o.UpdatedReleaseStream); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
