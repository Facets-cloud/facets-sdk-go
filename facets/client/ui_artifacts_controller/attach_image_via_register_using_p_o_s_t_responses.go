// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AttachImageViaRegisterUsingPOSTReader is a Reader for the AttachImageViaRegisterUsingPOST structure.
type AttachImageViaRegisterUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AttachImageViaRegisterUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAttachImageViaRegisterUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAttachImageViaRegisterUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAttachImageViaRegisterUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAttachImageViaRegisterUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAttachImageViaRegisterUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/attach-image-via-register] attachImageViaRegisterUsingPOST", response, response.Code())
	}
}

// NewAttachImageViaRegisterUsingPOSTOK creates a AttachImageViaRegisterUsingPOSTOK with default headers values
func NewAttachImageViaRegisterUsingPOSTOK() *AttachImageViaRegisterUsingPOSTOK {
	return &AttachImageViaRegisterUsingPOSTOK{}
}

/*
AttachImageViaRegisterUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type AttachImageViaRegisterUsingPOSTOK struct {
}

// IsSuccess returns true when this attach image via register using p o s t o k response has a 2xx status code
func (o *AttachImageViaRegisterUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this attach image via register using p o s t o k response has a 3xx status code
func (o *AttachImageViaRegisterUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image via register using p o s t o k response has a 4xx status code
func (o *AttachImageViaRegisterUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this attach image via register using p o s t o k response has a 5xx status code
func (o *AttachImageViaRegisterUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image via register using p o s t o k response a status code equal to that given
func (o *AttachImageViaRegisterUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the attach image via register using p o s t o k response
func (o *AttachImageViaRegisterUsingPOSTOK) Code() int {
	return 200
}

func (o *AttachImageViaRegisterUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTOK", 200)
}

func (o *AttachImageViaRegisterUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTOK", 200)
}

func (o *AttachImageViaRegisterUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageViaRegisterUsingPOSTCreated creates a AttachImageViaRegisterUsingPOSTCreated with default headers values
func NewAttachImageViaRegisterUsingPOSTCreated() *AttachImageViaRegisterUsingPOSTCreated {
	return &AttachImageViaRegisterUsingPOSTCreated{}
}

/*
AttachImageViaRegisterUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AttachImageViaRegisterUsingPOSTCreated struct {
}

// IsSuccess returns true when this attach image via register using p o s t created response has a 2xx status code
func (o *AttachImageViaRegisterUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this attach image via register using p o s t created response has a 3xx status code
func (o *AttachImageViaRegisterUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image via register using p o s t created response has a 4xx status code
func (o *AttachImageViaRegisterUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this attach image via register using p o s t created response has a 5xx status code
func (o *AttachImageViaRegisterUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image via register using p o s t created response a status code equal to that given
func (o *AttachImageViaRegisterUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the attach image via register using p o s t created response
func (o *AttachImageViaRegisterUsingPOSTCreated) Code() int {
	return 201
}

func (o *AttachImageViaRegisterUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTCreated", 201)
}

func (o *AttachImageViaRegisterUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTCreated", 201)
}

func (o *AttachImageViaRegisterUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageViaRegisterUsingPOSTUnauthorized creates a AttachImageViaRegisterUsingPOSTUnauthorized with default headers values
func NewAttachImageViaRegisterUsingPOSTUnauthorized() *AttachImageViaRegisterUsingPOSTUnauthorized {
	return &AttachImageViaRegisterUsingPOSTUnauthorized{}
}

/*
AttachImageViaRegisterUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AttachImageViaRegisterUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this attach image via register using p o s t unauthorized response has a 2xx status code
func (o *AttachImageViaRegisterUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image via register using p o s t unauthorized response has a 3xx status code
func (o *AttachImageViaRegisterUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image via register using p o s t unauthorized response has a 4xx status code
func (o *AttachImageViaRegisterUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image via register using p o s t unauthorized response has a 5xx status code
func (o *AttachImageViaRegisterUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image via register using p o s t unauthorized response a status code equal to that given
func (o *AttachImageViaRegisterUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the attach image via register using p o s t unauthorized response
func (o *AttachImageViaRegisterUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AttachImageViaRegisterUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTUnauthorized", 401)
}

func (o *AttachImageViaRegisterUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTUnauthorized", 401)
}

func (o *AttachImageViaRegisterUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageViaRegisterUsingPOSTForbidden creates a AttachImageViaRegisterUsingPOSTForbidden with default headers values
func NewAttachImageViaRegisterUsingPOSTForbidden() *AttachImageViaRegisterUsingPOSTForbidden {
	return &AttachImageViaRegisterUsingPOSTForbidden{}
}

/*
AttachImageViaRegisterUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AttachImageViaRegisterUsingPOSTForbidden struct {
}

// IsSuccess returns true when this attach image via register using p o s t forbidden response has a 2xx status code
func (o *AttachImageViaRegisterUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image via register using p o s t forbidden response has a 3xx status code
func (o *AttachImageViaRegisterUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image via register using p o s t forbidden response has a 4xx status code
func (o *AttachImageViaRegisterUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image via register using p o s t forbidden response has a 5xx status code
func (o *AttachImageViaRegisterUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image via register using p o s t forbidden response a status code equal to that given
func (o *AttachImageViaRegisterUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the attach image via register using p o s t forbidden response
func (o *AttachImageViaRegisterUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AttachImageViaRegisterUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTForbidden", 403)
}

func (o *AttachImageViaRegisterUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTForbidden", 403)
}

func (o *AttachImageViaRegisterUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAttachImageViaRegisterUsingPOSTNotFound creates a AttachImageViaRegisterUsingPOSTNotFound with default headers values
func NewAttachImageViaRegisterUsingPOSTNotFound() *AttachImageViaRegisterUsingPOSTNotFound {
	return &AttachImageViaRegisterUsingPOSTNotFound{}
}

/*
AttachImageViaRegisterUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AttachImageViaRegisterUsingPOSTNotFound struct {
}

// IsSuccess returns true when this attach image via register using p o s t not found response has a 2xx status code
func (o *AttachImageViaRegisterUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this attach image via register using p o s t not found response has a 3xx status code
func (o *AttachImageViaRegisterUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this attach image via register using p o s t not found response has a 4xx status code
func (o *AttachImageViaRegisterUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this attach image via register using p o s t not found response has a 5xx status code
func (o *AttachImageViaRegisterUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this attach image via register using p o s t not found response a status code equal to that given
func (o *AttachImageViaRegisterUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the attach image via register using p o s t not found response
func (o *AttachImageViaRegisterUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AttachImageViaRegisterUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTNotFound", 404)
}

func (o *AttachImageViaRegisterUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/attach-image-via-register][%d] attachImageViaRegisterUsingPOSTNotFound", 404)
}

func (o *AttachImageViaRegisterUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
