// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetMetadataKeysReader is a Reader for the GetMetadataKeys structure.
type GetMetadataKeysReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMetadataKeysReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMetadataKeysOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetMetadataKeysBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMetadataKeysNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetMetadataKeysMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetMetadataKeysInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts/metadata/keys] getMetadataKeys", response, response.Code())
	}
}

// NewGetMetadataKeysOK creates a GetMetadataKeysOK with default headers values
func NewGetMetadataKeysOK() *GetMetadataKeysOK {
	return &GetMetadataKeysOK{}
}

/*
GetMetadataKeysOK describes a response with status code 200, with default header values.

OK
*/
type GetMetadataKeysOK struct {
	Payload []string
}

// IsSuccess returns true when this get metadata keys o k response has a 2xx status code
func (o *GetMetadataKeysOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get metadata keys o k response has a 3xx status code
func (o *GetMetadataKeysOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys o k response has a 4xx status code
func (o *GetMetadataKeysOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get metadata keys o k response has a 5xx status code
func (o *GetMetadataKeysOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys o k response a status code equal to that given
func (o *GetMetadataKeysOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get metadata keys o k response
func (o *GetMetadataKeysOK) Code() int {
	return 200
}

func (o *GetMetadataKeysOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysOK %s", 200, payload)
}

func (o *GetMetadataKeysOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysOK %s", 200, payload)
}

func (o *GetMetadataKeysOK) GetPayload() []string {
	return o.Payload
}

func (o *GetMetadataKeysOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataKeysBadRequest creates a GetMetadataKeysBadRequest with default headers values
func NewGetMetadataKeysBadRequest() *GetMetadataKeysBadRequest {
	return &GetMetadataKeysBadRequest{}
}

/*
GetMetadataKeysBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetMetadataKeysBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get metadata keys bad request response has a 2xx status code
func (o *GetMetadataKeysBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get metadata keys bad request response has a 3xx status code
func (o *GetMetadataKeysBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys bad request response has a 4xx status code
func (o *GetMetadataKeysBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get metadata keys bad request response has a 5xx status code
func (o *GetMetadataKeysBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys bad request response a status code equal to that given
func (o *GetMetadataKeysBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get metadata keys bad request response
func (o *GetMetadataKeysBadRequest) Code() int {
	return 400
}

func (o *GetMetadataKeysBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysBadRequest %s", 400, payload)
}

func (o *GetMetadataKeysBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysBadRequest %s", 400, payload)
}

func (o *GetMetadataKeysBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetMetadataKeysBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataKeysNotFound creates a GetMetadataKeysNotFound with default headers values
func NewGetMetadataKeysNotFound() *GetMetadataKeysNotFound {
	return &GetMetadataKeysNotFound{}
}

/*
GetMetadataKeysNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMetadataKeysNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get metadata keys not found response has a 2xx status code
func (o *GetMetadataKeysNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get metadata keys not found response has a 3xx status code
func (o *GetMetadataKeysNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys not found response has a 4xx status code
func (o *GetMetadataKeysNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get metadata keys not found response has a 5xx status code
func (o *GetMetadataKeysNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys not found response a status code equal to that given
func (o *GetMetadataKeysNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get metadata keys not found response
func (o *GetMetadataKeysNotFound) Code() int {
	return 404
}

func (o *GetMetadataKeysNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysNotFound %s", 404, payload)
}

func (o *GetMetadataKeysNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysNotFound %s", 404, payload)
}

func (o *GetMetadataKeysNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetMetadataKeysNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataKeysMethodNotAllowed creates a GetMetadataKeysMethodNotAllowed with default headers values
func NewGetMetadataKeysMethodNotAllowed() *GetMetadataKeysMethodNotAllowed {
	return &GetMetadataKeysMethodNotAllowed{}
}

/*
GetMetadataKeysMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetMetadataKeysMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get metadata keys method not allowed response has a 2xx status code
func (o *GetMetadataKeysMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get metadata keys method not allowed response has a 3xx status code
func (o *GetMetadataKeysMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys method not allowed response has a 4xx status code
func (o *GetMetadataKeysMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get metadata keys method not allowed response has a 5xx status code
func (o *GetMetadataKeysMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get metadata keys method not allowed response a status code equal to that given
func (o *GetMetadataKeysMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get metadata keys method not allowed response
func (o *GetMetadataKeysMethodNotAllowed) Code() int {
	return 405
}

func (o *GetMetadataKeysMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysMethodNotAllowed %s", 405, payload)
}

func (o *GetMetadataKeysMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysMethodNotAllowed %s", 405, payload)
}

func (o *GetMetadataKeysMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetMetadataKeysMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMetadataKeysInternalServerError creates a GetMetadataKeysInternalServerError with default headers values
func NewGetMetadataKeysInternalServerError() *GetMetadataKeysInternalServerError {
	return &GetMetadataKeysInternalServerError{}
}

/*
GetMetadataKeysInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetMetadataKeysInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get metadata keys internal server error response has a 2xx status code
func (o *GetMetadataKeysInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get metadata keys internal server error response has a 3xx status code
func (o *GetMetadataKeysInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get metadata keys internal server error response has a 4xx status code
func (o *GetMetadataKeysInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get metadata keys internal server error response has a 5xx status code
func (o *GetMetadataKeysInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get metadata keys internal server error response a status code equal to that given
func (o *GetMetadataKeysInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get metadata keys internal server error response
func (o *GetMetadataKeysInternalServerError) Code() int {
	return 500
}

func (o *GetMetadataKeysInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysInternalServerError %s", 500, payload)
}

func (o *GetMetadataKeysInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/metadata/keys][%d] getMetadataKeysInternalServerError %s", 500, payload)
}

func (o *GetMetadataKeysInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetMetadataKeysInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
