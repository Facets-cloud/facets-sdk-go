// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RegisterArtifactSaasUsingPOSTReader is a Reader for the RegisterArtifactSaasUsingPOST structure.
type RegisterArtifactSaasUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterArtifactSaasUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterArtifactSaasUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRegisterArtifactSaasUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRegisterArtifactSaasUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRegisterArtifactSaasUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterArtifactSaasUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/register-saas] registerArtifactSaasUsingPOST", response, response.Code())
	}
}

// NewRegisterArtifactSaasUsingPOSTOK creates a RegisterArtifactSaasUsingPOSTOK with default headers values
func NewRegisterArtifactSaasUsingPOSTOK() *RegisterArtifactSaasUsingPOSTOK {
	return &RegisterArtifactSaasUsingPOSTOK{}
}

/*
RegisterArtifactSaasUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RegisterArtifactSaasUsingPOSTOK struct {
}

// IsSuccess returns true when this register artifact saas using p o s t o k response has a 2xx status code
func (o *RegisterArtifactSaasUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact saas using p o s t o k response has a 3xx status code
func (o *RegisterArtifactSaasUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas using p o s t o k response has a 4xx status code
func (o *RegisterArtifactSaasUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact saas using p o s t o k response has a 5xx status code
func (o *RegisterArtifactSaasUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas using p o s t o k response a status code equal to that given
func (o *RegisterArtifactSaasUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register artifact saas using p o s t o k response
func (o *RegisterArtifactSaasUsingPOSTOK) Code() int {
	return 200
}

func (o *RegisterArtifactSaasUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTOK", 200)
}

func (o *RegisterArtifactSaasUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTOK", 200)
}

func (o *RegisterArtifactSaasUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactSaasUsingPOSTCreated creates a RegisterArtifactSaasUsingPOSTCreated with default headers values
func NewRegisterArtifactSaasUsingPOSTCreated() *RegisterArtifactSaasUsingPOSTCreated {
	return &RegisterArtifactSaasUsingPOSTCreated{}
}

/*
RegisterArtifactSaasUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RegisterArtifactSaasUsingPOSTCreated struct {
}

// IsSuccess returns true when this register artifact saas using p o s t created response has a 2xx status code
func (o *RegisterArtifactSaasUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact saas using p o s t created response has a 3xx status code
func (o *RegisterArtifactSaasUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas using p o s t created response has a 4xx status code
func (o *RegisterArtifactSaasUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact saas using p o s t created response has a 5xx status code
func (o *RegisterArtifactSaasUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas using p o s t created response a status code equal to that given
func (o *RegisterArtifactSaasUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the register artifact saas using p o s t created response
func (o *RegisterArtifactSaasUsingPOSTCreated) Code() int {
	return 201
}

func (o *RegisterArtifactSaasUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTCreated", 201)
}

func (o *RegisterArtifactSaasUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTCreated", 201)
}

func (o *RegisterArtifactSaasUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactSaasUsingPOSTUnauthorized creates a RegisterArtifactSaasUsingPOSTUnauthorized with default headers values
func NewRegisterArtifactSaasUsingPOSTUnauthorized() *RegisterArtifactSaasUsingPOSTUnauthorized {
	return &RegisterArtifactSaasUsingPOSTUnauthorized{}
}

/*
RegisterArtifactSaasUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RegisterArtifactSaasUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this register artifact saas using p o s t unauthorized response has a 2xx status code
func (o *RegisterArtifactSaasUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact saas using p o s t unauthorized response has a 3xx status code
func (o *RegisterArtifactSaasUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas using p o s t unauthorized response has a 4xx status code
func (o *RegisterArtifactSaasUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact saas using p o s t unauthorized response has a 5xx status code
func (o *RegisterArtifactSaasUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas using p o s t unauthorized response a status code equal to that given
func (o *RegisterArtifactSaasUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the register artifact saas using p o s t unauthorized response
func (o *RegisterArtifactSaasUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RegisterArtifactSaasUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTUnauthorized", 401)
}

func (o *RegisterArtifactSaasUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTUnauthorized", 401)
}

func (o *RegisterArtifactSaasUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactSaasUsingPOSTForbidden creates a RegisterArtifactSaasUsingPOSTForbidden with default headers values
func NewRegisterArtifactSaasUsingPOSTForbidden() *RegisterArtifactSaasUsingPOSTForbidden {
	return &RegisterArtifactSaasUsingPOSTForbidden{}
}

/*
RegisterArtifactSaasUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RegisterArtifactSaasUsingPOSTForbidden struct {
}

// IsSuccess returns true when this register artifact saas using p o s t forbidden response has a 2xx status code
func (o *RegisterArtifactSaasUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact saas using p o s t forbidden response has a 3xx status code
func (o *RegisterArtifactSaasUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas using p o s t forbidden response has a 4xx status code
func (o *RegisterArtifactSaasUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact saas using p o s t forbidden response has a 5xx status code
func (o *RegisterArtifactSaasUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas using p o s t forbidden response a status code equal to that given
func (o *RegisterArtifactSaasUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the register artifact saas using p o s t forbidden response
func (o *RegisterArtifactSaasUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RegisterArtifactSaasUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTForbidden", 403)
}

func (o *RegisterArtifactSaasUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTForbidden", 403)
}

func (o *RegisterArtifactSaasUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactSaasUsingPOSTNotFound creates a RegisterArtifactSaasUsingPOSTNotFound with default headers values
func NewRegisterArtifactSaasUsingPOSTNotFound() *RegisterArtifactSaasUsingPOSTNotFound {
	return &RegisterArtifactSaasUsingPOSTNotFound{}
}

/*
RegisterArtifactSaasUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RegisterArtifactSaasUsingPOSTNotFound struct {
}

// IsSuccess returns true when this register artifact saas using p o s t not found response has a 2xx status code
func (o *RegisterArtifactSaasUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact saas using p o s t not found response has a 3xx status code
func (o *RegisterArtifactSaasUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact saas using p o s t not found response has a 4xx status code
func (o *RegisterArtifactSaasUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact saas using p o s t not found response has a 5xx status code
func (o *RegisterArtifactSaasUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact saas using p o s t not found response a status code equal to that given
func (o *RegisterArtifactSaasUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the register artifact saas using p o s t not found response
func (o *RegisterArtifactSaasUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RegisterArtifactSaasUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTNotFound", 404)
}

func (o *RegisterArtifactSaasUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-saas][%d] registerArtifactSaasUsingPOSTNotFound", 404)
}

func (o *RegisterArtifactSaasUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
