// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RegisterArtifactV2UsingPOSTReader is a Reader for the RegisterArtifactV2UsingPOST structure.
type RegisterArtifactV2UsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterArtifactV2UsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterArtifactV2UsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRegisterArtifactV2UsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRegisterArtifactV2UsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRegisterArtifactV2UsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterArtifactV2UsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/registerV2] registerArtifactV2UsingPOST", response, response.Code())
	}
}

// NewRegisterArtifactV2UsingPOSTOK creates a RegisterArtifactV2UsingPOSTOK with default headers values
func NewRegisterArtifactV2UsingPOSTOK() *RegisterArtifactV2UsingPOSTOK {
	return &RegisterArtifactV2UsingPOSTOK{}
}

/*
RegisterArtifactV2UsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RegisterArtifactV2UsingPOSTOK struct {
}

// IsSuccess returns true when this register artifact v2 using p o s t o k response has a 2xx status code
func (o *RegisterArtifactV2UsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact v2 using p o s t o k response has a 3xx status code
func (o *RegisterArtifactV2UsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact v2 using p o s t o k response has a 4xx status code
func (o *RegisterArtifactV2UsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact v2 using p o s t o k response has a 5xx status code
func (o *RegisterArtifactV2UsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact v2 using p o s t o k response a status code equal to that given
func (o *RegisterArtifactV2UsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register artifact v2 using p o s t o k response
func (o *RegisterArtifactV2UsingPOSTOK) Code() int {
	return 200
}

func (o *RegisterArtifactV2UsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTOK", 200)
}

func (o *RegisterArtifactV2UsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTOK", 200)
}

func (o *RegisterArtifactV2UsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactV2UsingPOSTCreated creates a RegisterArtifactV2UsingPOSTCreated with default headers values
func NewRegisterArtifactV2UsingPOSTCreated() *RegisterArtifactV2UsingPOSTCreated {
	return &RegisterArtifactV2UsingPOSTCreated{}
}

/*
RegisterArtifactV2UsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RegisterArtifactV2UsingPOSTCreated struct {
}

// IsSuccess returns true when this register artifact v2 using p o s t created response has a 2xx status code
func (o *RegisterArtifactV2UsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact v2 using p o s t created response has a 3xx status code
func (o *RegisterArtifactV2UsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact v2 using p o s t created response has a 4xx status code
func (o *RegisterArtifactV2UsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact v2 using p o s t created response has a 5xx status code
func (o *RegisterArtifactV2UsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact v2 using p o s t created response a status code equal to that given
func (o *RegisterArtifactV2UsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the register artifact v2 using p o s t created response
func (o *RegisterArtifactV2UsingPOSTCreated) Code() int {
	return 201
}

func (o *RegisterArtifactV2UsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTCreated", 201)
}

func (o *RegisterArtifactV2UsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTCreated", 201)
}

func (o *RegisterArtifactV2UsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactV2UsingPOSTUnauthorized creates a RegisterArtifactV2UsingPOSTUnauthorized with default headers values
func NewRegisterArtifactV2UsingPOSTUnauthorized() *RegisterArtifactV2UsingPOSTUnauthorized {
	return &RegisterArtifactV2UsingPOSTUnauthorized{}
}

/*
RegisterArtifactV2UsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RegisterArtifactV2UsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this register artifact v2 using p o s t unauthorized response has a 2xx status code
func (o *RegisterArtifactV2UsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact v2 using p o s t unauthorized response has a 3xx status code
func (o *RegisterArtifactV2UsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact v2 using p o s t unauthorized response has a 4xx status code
func (o *RegisterArtifactV2UsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact v2 using p o s t unauthorized response has a 5xx status code
func (o *RegisterArtifactV2UsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact v2 using p o s t unauthorized response a status code equal to that given
func (o *RegisterArtifactV2UsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the register artifact v2 using p o s t unauthorized response
func (o *RegisterArtifactV2UsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RegisterArtifactV2UsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTUnauthorized", 401)
}

func (o *RegisterArtifactV2UsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTUnauthorized", 401)
}

func (o *RegisterArtifactV2UsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactV2UsingPOSTForbidden creates a RegisterArtifactV2UsingPOSTForbidden with default headers values
func NewRegisterArtifactV2UsingPOSTForbidden() *RegisterArtifactV2UsingPOSTForbidden {
	return &RegisterArtifactV2UsingPOSTForbidden{}
}

/*
RegisterArtifactV2UsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RegisterArtifactV2UsingPOSTForbidden struct {
}

// IsSuccess returns true when this register artifact v2 using p o s t forbidden response has a 2xx status code
func (o *RegisterArtifactV2UsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact v2 using p o s t forbidden response has a 3xx status code
func (o *RegisterArtifactV2UsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact v2 using p o s t forbidden response has a 4xx status code
func (o *RegisterArtifactV2UsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact v2 using p o s t forbidden response has a 5xx status code
func (o *RegisterArtifactV2UsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact v2 using p o s t forbidden response a status code equal to that given
func (o *RegisterArtifactV2UsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the register artifact v2 using p o s t forbidden response
func (o *RegisterArtifactV2UsingPOSTForbidden) Code() int {
	return 403
}

func (o *RegisterArtifactV2UsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTForbidden", 403)
}

func (o *RegisterArtifactV2UsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTForbidden", 403)
}

func (o *RegisterArtifactV2UsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactV2UsingPOSTNotFound creates a RegisterArtifactV2UsingPOSTNotFound with default headers values
func NewRegisterArtifactV2UsingPOSTNotFound() *RegisterArtifactV2UsingPOSTNotFound {
	return &RegisterArtifactV2UsingPOSTNotFound{}
}

/*
RegisterArtifactV2UsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RegisterArtifactV2UsingPOSTNotFound struct {
}

// IsSuccess returns true when this register artifact v2 using p o s t not found response has a 2xx status code
func (o *RegisterArtifactV2UsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact v2 using p o s t not found response has a 3xx status code
func (o *RegisterArtifactV2UsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact v2 using p o s t not found response has a 4xx status code
func (o *RegisterArtifactV2UsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact v2 using p o s t not found response has a 5xx status code
func (o *RegisterArtifactV2UsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact v2 using p o s t not found response a status code equal to that given
func (o *RegisterArtifactV2UsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the register artifact v2 using p o s t not found response
func (o *RegisterArtifactV2UsingPOSTNotFound) Code() int {
	return 404
}

func (o *RegisterArtifactV2UsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTNotFound", 404)
}

func (o *RegisterArtifactV2UsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/registerV2][%d] registerArtifactV2UsingPOSTNotFound", 404)
}

func (o *RegisterArtifactV2UsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
