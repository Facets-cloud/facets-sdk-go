// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactByApplicationNameUsingGETReader is a Reader for the GetArtifactByApplicationNameUsingGET structure.
type GetArtifactByApplicationNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactByApplicationNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactByApplicationNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetArtifactByApplicationNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetArtifactByApplicationNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactByApplicationNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}] getArtifactByApplicationNameUsingGET", response, response.Code())
	}
}

// NewGetArtifactByApplicationNameUsingGETOK creates a GetArtifactByApplicationNameUsingGETOK with default headers values
func NewGetArtifactByApplicationNameUsingGETOK() *GetArtifactByApplicationNameUsingGETOK {
	return &GetArtifactByApplicationNameUsingGETOK{}
}

/*
GetArtifactByApplicationNameUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactByApplicationNameUsingGETOK struct {
	Payload *models.Artifact
}

// IsSuccess returns true when this get artifact by application name using g e t o k response has a 2xx status code
func (o *GetArtifactByApplicationNameUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact by application name using g e t o k response has a 3xx status code
func (o *GetArtifactByApplicationNameUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name using g e t o k response has a 4xx status code
func (o *GetArtifactByApplicationNameUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact by application name using g e t o k response has a 5xx status code
func (o *GetArtifactByApplicationNameUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name using g e t o k response a status code equal to that given
func (o *GetArtifactByApplicationNameUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifact by application name using g e t o k response
func (o *GetArtifactByApplicationNameUsingGETOK) Code() int {
	return 200
}

func (o *GetArtifactByApplicationNameUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETOK %s", 200, payload)
}

func (o *GetArtifactByApplicationNameUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETOK %s", 200, payload)
}

func (o *GetArtifactByApplicationNameUsingGETOK) GetPayload() *models.Artifact {
	return o.Payload
}

func (o *GetArtifactByApplicationNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Artifact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactByApplicationNameUsingGETUnauthorized creates a GetArtifactByApplicationNameUsingGETUnauthorized with default headers values
func NewGetArtifactByApplicationNameUsingGETUnauthorized() *GetArtifactByApplicationNameUsingGETUnauthorized {
	return &GetArtifactByApplicationNameUsingGETUnauthorized{}
}

/*
GetArtifactByApplicationNameUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetArtifactByApplicationNameUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get artifact by application name using g e t unauthorized response has a 2xx status code
func (o *GetArtifactByApplicationNameUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact by application name using g e t unauthorized response has a 3xx status code
func (o *GetArtifactByApplicationNameUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name using g e t unauthorized response has a 4xx status code
func (o *GetArtifactByApplicationNameUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact by application name using g e t unauthorized response has a 5xx status code
func (o *GetArtifactByApplicationNameUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name using g e t unauthorized response a status code equal to that given
func (o *GetArtifactByApplicationNameUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get artifact by application name using g e t unauthorized response
func (o *GetArtifactByApplicationNameUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetArtifactByApplicationNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETUnauthorized", 401)
}

func (o *GetArtifactByApplicationNameUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETUnauthorized", 401)
}

func (o *GetArtifactByApplicationNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactByApplicationNameUsingGETForbidden creates a GetArtifactByApplicationNameUsingGETForbidden with default headers values
func NewGetArtifactByApplicationNameUsingGETForbidden() *GetArtifactByApplicationNameUsingGETForbidden {
	return &GetArtifactByApplicationNameUsingGETForbidden{}
}

/*
GetArtifactByApplicationNameUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetArtifactByApplicationNameUsingGETForbidden struct {
}

// IsSuccess returns true when this get artifact by application name using g e t forbidden response has a 2xx status code
func (o *GetArtifactByApplicationNameUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact by application name using g e t forbidden response has a 3xx status code
func (o *GetArtifactByApplicationNameUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name using g e t forbidden response has a 4xx status code
func (o *GetArtifactByApplicationNameUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact by application name using g e t forbidden response has a 5xx status code
func (o *GetArtifactByApplicationNameUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name using g e t forbidden response a status code equal to that given
func (o *GetArtifactByApplicationNameUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get artifact by application name using g e t forbidden response
func (o *GetArtifactByApplicationNameUsingGETForbidden) Code() int {
	return 403
}

func (o *GetArtifactByApplicationNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETForbidden", 403)
}

func (o *GetArtifactByApplicationNameUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETForbidden", 403)
}

func (o *GetArtifactByApplicationNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetArtifactByApplicationNameUsingGETNotFound creates a GetArtifactByApplicationNameUsingGETNotFound with default headers values
func NewGetArtifactByApplicationNameUsingGETNotFound() *GetArtifactByApplicationNameUsingGETNotFound {
	return &GetArtifactByApplicationNameUsingGETNotFound{}
}

/*
GetArtifactByApplicationNameUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactByApplicationNameUsingGETNotFound struct {
}

// IsSuccess returns true when this get artifact by application name using g e t not found response has a 2xx status code
func (o *GetArtifactByApplicationNameUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact by application name using g e t not found response has a 3xx status code
func (o *GetArtifactByApplicationNameUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact by application name using g e t not found response has a 4xx status code
func (o *GetArtifactByApplicationNameUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact by application name using g e t not found response has a 5xx status code
func (o *GetArtifactByApplicationNameUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact by application name using g e t not found response a status code equal to that given
func (o *GetArtifactByApplicationNameUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifact by application name using g e t not found response
func (o *GetArtifactByApplicationNameUsingGETNotFound) Code() int {
	return 404
}

func (o *GetArtifactByApplicationNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETNotFound", 404)
}

func (o *GetArtifactByApplicationNameUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/application/{applicationName}][%d] getArtifactByApplicationNameUsingGETNotFound", 404)
}

func (o *GetArtifactByApplicationNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
