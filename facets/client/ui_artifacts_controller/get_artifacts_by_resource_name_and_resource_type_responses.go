// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactsByResourceNameAndResourceTypeReader is a Reader for the GetArtifactsByResourceNameAndResourceType structure.
type GetArtifactsByResourceNameAndResourceTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactsByResourceNameAndResourceTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactsByResourceNameAndResourceTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactsByResourceNameAndResourceTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactsByResourceNameAndResourceTypeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetArtifactsByResourceNameAndResourceTypeMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactsByResourceNameAndResourceTypeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}] getArtifactsByResourceNameAndResourceType", response, response.Code())
	}
}

// NewGetArtifactsByResourceNameAndResourceTypeOK creates a GetArtifactsByResourceNameAndResourceTypeOK with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeOK() *GetArtifactsByResourceNameAndResourceTypeOK {
	return &GetArtifactsByResourceNameAndResourceTypeOK{}
}

/*
GetArtifactsByResourceNameAndResourceTypeOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactsByResourceNameAndResourceTypeOK struct {
	Payload *models.Artifact
}

// IsSuccess returns true when this get artifacts by resource name and resource type o k response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifacts by resource name and resource type o k response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type o k response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts by resource name and resource type o k response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type o k response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifacts by resource name and resource type o k response
func (o *GetArtifactsByResourceNameAndResourceTypeOK) Code() int {
	return 200
}

func (o *GetArtifactsByResourceNameAndResourceTypeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeOK %s", 200, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeOK %s", 200, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeOK) GetPayload() *models.Artifact {
	return o.Payload
}

func (o *GetArtifactsByResourceNameAndResourceTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Artifact)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsByResourceNameAndResourceTypeBadRequest creates a GetArtifactsByResourceNameAndResourceTypeBadRequest with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeBadRequest() *GetArtifactsByResourceNameAndResourceTypeBadRequest {
	return &GetArtifactsByResourceNameAndResourceTypeBadRequest{}
}

/*
GetArtifactsByResourceNameAndResourceTypeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactsByResourceNameAndResourceTypeBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts by resource name and resource type bad request response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts by resource name and resource type bad request response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type bad request response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts by resource name and resource type bad request response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type bad request response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get artifacts by resource name and resource type bad request response
func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) Code() int {
	return 400
}

func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeBadRequest %s", 400, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeBadRequest %s", 400, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsByResourceNameAndResourceTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsByResourceNameAndResourceTypeNotFound creates a GetArtifactsByResourceNameAndResourceTypeNotFound with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeNotFound() *GetArtifactsByResourceNameAndResourceTypeNotFound {
	return &GetArtifactsByResourceNameAndResourceTypeNotFound{}
}

/*
GetArtifactsByResourceNameAndResourceTypeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactsByResourceNameAndResourceTypeNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts by resource name and resource type not found response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts by resource name and resource type not found response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type not found response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts by resource name and resource type not found response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type not found response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifacts by resource name and resource type not found response
func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) Code() int {
	return 404
}

func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeNotFound %s", 404, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeNotFound %s", 404, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsByResourceNameAndResourceTypeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsByResourceNameAndResourceTypeMethodNotAllowed creates a GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeMethodNotAllowed() *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed {
	return &GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed{}
}

/*
GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts by resource name and resource type method not allowed response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts by resource name and resource type method not allowed response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type method not allowed response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifacts by resource name and resource type method not allowed response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifacts by resource name and resource type method not allowed response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get artifacts by resource name and resource type method not allowed response
func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) Code() int {
	return 405
}

func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsByResourceNameAndResourceTypeMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactsByResourceNameAndResourceTypeInternalServerError creates a GetArtifactsByResourceNameAndResourceTypeInternalServerError with default headers values
func NewGetArtifactsByResourceNameAndResourceTypeInternalServerError() *GetArtifactsByResourceNameAndResourceTypeInternalServerError {
	return &GetArtifactsByResourceNameAndResourceTypeInternalServerError{}
}

/*
GetArtifactsByResourceNameAndResourceTypeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArtifactsByResourceNameAndResourceTypeInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifacts by resource name and resource type internal server error response has a 2xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifacts by resource name and resource type internal server error response has a 3xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifacts by resource name and resource type internal server error response has a 4xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifacts by resource name and resource type internal server error response has a 5xx status code
func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifacts by resource name and resource type internal server error response a status code equal to that given
func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get artifacts by resource name and resource type internal server error response
func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) Code() int {
	return 500
}

func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeInternalServerError %s", 500, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifacts/cluster/{clusterId}/resourceType/{resourceType}/resourceName/{resourceName}][%d] getArtifactsByResourceNameAndResourceTypeInternalServerError %s", 500, payload)
}

func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactsByResourceNameAndResourceTypeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
