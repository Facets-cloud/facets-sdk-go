// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RegisterArtifactByReleaseStreamReader is a Reader for the RegisterArtifactByReleaseStream structure.
type RegisterArtifactByReleaseStreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterArtifactByReleaseStreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterArtifactByReleaseStreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterArtifactByReleaseStreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterArtifactByReleaseStreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewRegisterArtifactByReleaseStreamMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterArtifactByReleaseStreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifacts/register-by-release-stream] registerArtifactByReleaseStream", response, response.Code())
	}
}

// NewRegisterArtifactByReleaseStreamOK creates a RegisterArtifactByReleaseStreamOK with default headers values
func NewRegisterArtifactByReleaseStreamOK() *RegisterArtifactByReleaseStreamOK {
	return &RegisterArtifactByReleaseStreamOK{}
}

/*
RegisterArtifactByReleaseStreamOK describes a response with status code 200, with default header values.

OK
*/
type RegisterArtifactByReleaseStreamOK struct {
}

// IsSuccess returns true when this register artifact by release stream o k response has a 2xx status code
func (o *RegisterArtifactByReleaseStreamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register artifact by release stream o k response has a 3xx status code
func (o *RegisterArtifactByReleaseStreamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact by release stream o k response has a 4xx status code
func (o *RegisterArtifactByReleaseStreamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact by release stream o k response has a 5xx status code
func (o *RegisterArtifactByReleaseStreamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact by release stream o k response a status code equal to that given
func (o *RegisterArtifactByReleaseStreamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register artifact by release stream o k response
func (o *RegisterArtifactByReleaseStreamOK) Code() int {
	return 200
}

func (o *RegisterArtifactByReleaseStreamOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamOK", 200)
}

func (o *RegisterArtifactByReleaseStreamOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamOK", 200)
}

func (o *RegisterArtifactByReleaseStreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterArtifactByReleaseStreamBadRequest creates a RegisterArtifactByReleaseStreamBadRequest with default headers values
func NewRegisterArtifactByReleaseStreamBadRequest() *RegisterArtifactByReleaseStreamBadRequest {
	return &RegisterArtifactByReleaseStreamBadRequest{}
}

/*
RegisterArtifactByReleaseStreamBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RegisterArtifactByReleaseStreamBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact by release stream bad request response has a 2xx status code
func (o *RegisterArtifactByReleaseStreamBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact by release stream bad request response has a 3xx status code
func (o *RegisterArtifactByReleaseStreamBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact by release stream bad request response has a 4xx status code
func (o *RegisterArtifactByReleaseStreamBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact by release stream bad request response has a 5xx status code
func (o *RegisterArtifactByReleaseStreamBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact by release stream bad request response a status code equal to that given
func (o *RegisterArtifactByReleaseStreamBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the register artifact by release stream bad request response
func (o *RegisterArtifactByReleaseStreamBadRequest) Code() int {
	return 400
}

func (o *RegisterArtifactByReleaseStreamBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamBadRequest %s", 400, payload)
}

func (o *RegisterArtifactByReleaseStreamBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamBadRequest %s", 400, payload)
}

func (o *RegisterArtifactByReleaseStreamBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactByReleaseStreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterArtifactByReleaseStreamNotFound creates a RegisterArtifactByReleaseStreamNotFound with default headers values
func NewRegisterArtifactByReleaseStreamNotFound() *RegisterArtifactByReleaseStreamNotFound {
	return &RegisterArtifactByReleaseStreamNotFound{}
}

/*
RegisterArtifactByReleaseStreamNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RegisterArtifactByReleaseStreamNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact by release stream not found response has a 2xx status code
func (o *RegisterArtifactByReleaseStreamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact by release stream not found response has a 3xx status code
func (o *RegisterArtifactByReleaseStreamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact by release stream not found response has a 4xx status code
func (o *RegisterArtifactByReleaseStreamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact by release stream not found response has a 5xx status code
func (o *RegisterArtifactByReleaseStreamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact by release stream not found response a status code equal to that given
func (o *RegisterArtifactByReleaseStreamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the register artifact by release stream not found response
func (o *RegisterArtifactByReleaseStreamNotFound) Code() int {
	return 404
}

func (o *RegisterArtifactByReleaseStreamNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamNotFound %s", 404, payload)
}

func (o *RegisterArtifactByReleaseStreamNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamNotFound %s", 404, payload)
}

func (o *RegisterArtifactByReleaseStreamNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactByReleaseStreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterArtifactByReleaseStreamMethodNotAllowed creates a RegisterArtifactByReleaseStreamMethodNotAllowed with default headers values
func NewRegisterArtifactByReleaseStreamMethodNotAllowed() *RegisterArtifactByReleaseStreamMethodNotAllowed {
	return &RegisterArtifactByReleaseStreamMethodNotAllowed{}
}

/*
RegisterArtifactByReleaseStreamMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type RegisterArtifactByReleaseStreamMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact by release stream method not allowed response has a 2xx status code
func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact by release stream method not allowed response has a 3xx status code
func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact by release stream method not allowed response has a 4xx status code
func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this register artifact by release stream method not allowed response has a 5xx status code
func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this register artifact by release stream method not allowed response a status code equal to that given
func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the register artifact by release stream method not allowed response
func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) Code() int {
	return 405
}

func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamMethodNotAllowed %s", 405, payload)
}

func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamMethodNotAllowed %s", 405, payload)
}

func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactByReleaseStreamMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterArtifactByReleaseStreamInternalServerError creates a RegisterArtifactByReleaseStreamInternalServerError with default headers values
func NewRegisterArtifactByReleaseStreamInternalServerError() *RegisterArtifactByReleaseStreamInternalServerError {
	return &RegisterArtifactByReleaseStreamInternalServerError{}
}

/*
RegisterArtifactByReleaseStreamInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RegisterArtifactByReleaseStreamInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register artifact by release stream internal server error response has a 2xx status code
func (o *RegisterArtifactByReleaseStreamInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register artifact by release stream internal server error response has a 3xx status code
func (o *RegisterArtifactByReleaseStreamInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register artifact by release stream internal server error response has a 4xx status code
func (o *RegisterArtifactByReleaseStreamInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this register artifact by release stream internal server error response has a 5xx status code
func (o *RegisterArtifactByReleaseStreamInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this register artifact by release stream internal server error response a status code equal to that given
func (o *RegisterArtifactByReleaseStreamInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the register artifact by release stream internal server error response
func (o *RegisterArtifactByReleaseStreamInternalServerError) Code() int {
	return 500
}

func (o *RegisterArtifactByReleaseStreamInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamInternalServerError %s", 500, payload)
}

func (o *RegisterArtifactByReleaseStreamInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifacts/register-by-release-stream][%d] registerArtifactByReleaseStreamInternalServerError %s", 500, payload)
}

func (o *RegisterArtifactByReleaseStreamInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterArtifactByReleaseStreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
