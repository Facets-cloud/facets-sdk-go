// Code generated by go-swagger; DO NOT EDIT.

package ui_artifacts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ReclassifyArtifactsUsingPUTReader is a Reader for the ReclassifyArtifactsUsingPUT structure.
type ReclassifyArtifactsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ReclassifyArtifactsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewReclassifyArtifactsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewReclassifyArtifactsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewReclassifyArtifactsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewReclassifyArtifactsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewReclassifyArtifactsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/artifacts/reclassify] reclassifyArtifactsUsingPUT", response, response.Code())
	}
}

// NewReclassifyArtifactsUsingPUTOK creates a ReclassifyArtifactsUsingPUTOK with default headers values
func NewReclassifyArtifactsUsingPUTOK() *ReclassifyArtifactsUsingPUTOK {
	return &ReclassifyArtifactsUsingPUTOK{}
}

/*
ReclassifyArtifactsUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type ReclassifyArtifactsUsingPUTOK struct {
}

// IsSuccess returns true when this reclassify artifacts using p u t o k response has a 2xx status code
func (o *ReclassifyArtifactsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reclassify artifacts using p u t o k response has a 3xx status code
func (o *ReclassifyArtifactsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts using p u t o k response has a 4xx status code
func (o *ReclassifyArtifactsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this reclassify artifacts using p u t o k response has a 5xx status code
func (o *ReclassifyArtifactsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts using p u t o k response a status code equal to that given
func (o *ReclassifyArtifactsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the reclassify artifacts using p u t o k response
func (o *ReclassifyArtifactsUsingPUTOK) Code() int {
	return 200
}

func (o *ReclassifyArtifactsUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTOK", 200)
}

func (o *ReclassifyArtifactsUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTOK", 200)
}

func (o *ReclassifyArtifactsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReclassifyArtifactsUsingPUTCreated creates a ReclassifyArtifactsUsingPUTCreated with default headers values
func NewReclassifyArtifactsUsingPUTCreated() *ReclassifyArtifactsUsingPUTCreated {
	return &ReclassifyArtifactsUsingPUTCreated{}
}

/*
ReclassifyArtifactsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type ReclassifyArtifactsUsingPUTCreated struct {
}

// IsSuccess returns true when this reclassify artifacts using p u t created response has a 2xx status code
func (o *ReclassifyArtifactsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this reclassify artifacts using p u t created response has a 3xx status code
func (o *ReclassifyArtifactsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts using p u t created response has a 4xx status code
func (o *ReclassifyArtifactsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this reclassify artifacts using p u t created response has a 5xx status code
func (o *ReclassifyArtifactsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts using p u t created response a status code equal to that given
func (o *ReclassifyArtifactsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the reclassify artifacts using p u t created response
func (o *ReclassifyArtifactsUsingPUTCreated) Code() int {
	return 201
}

func (o *ReclassifyArtifactsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTCreated", 201)
}

func (o *ReclassifyArtifactsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTCreated", 201)
}

func (o *ReclassifyArtifactsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReclassifyArtifactsUsingPUTUnauthorized creates a ReclassifyArtifactsUsingPUTUnauthorized with default headers values
func NewReclassifyArtifactsUsingPUTUnauthorized() *ReclassifyArtifactsUsingPUTUnauthorized {
	return &ReclassifyArtifactsUsingPUTUnauthorized{}
}

/*
ReclassifyArtifactsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ReclassifyArtifactsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this reclassify artifacts using p u t unauthorized response has a 2xx status code
func (o *ReclassifyArtifactsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reclassify artifacts using p u t unauthorized response has a 3xx status code
func (o *ReclassifyArtifactsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts using p u t unauthorized response has a 4xx status code
func (o *ReclassifyArtifactsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this reclassify artifacts using p u t unauthorized response has a 5xx status code
func (o *ReclassifyArtifactsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts using p u t unauthorized response a status code equal to that given
func (o *ReclassifyArtifactsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the reclassify artifacts using p u t unauthorized response
func (o *ReclassifyArtifactsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *ReclassifyArtifactsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTUnauthorized", 401)
}

func (o *ReclassifyArtifactsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTUnauthorized", 401)
}

func (o *ReclassifyArtifactsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReclassifyArtifactsUsingPUTForbidden creates a ReclassifyArtifactsUsingPUTForbidden with default headers values
func NewReclassifyArtifactsUsingPUTForbidden() *ReclassifyArtifactsUsingPUTForbidden {
	return &ReclassifyArtifactsUsingPUTForbidden{}
}

/*
ReclassifyArtifactsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ReclassifyArtifactsUsingPUTForbidden struct {
}

// IsSuccess returns true when this reclassify artifacts using p u t forbidden response has a 2xx status code
func (o *ReclassifyArtifactsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reclassify artifacts using p u t forbidden response has a 3xx status code
func (o *ReclassifyArtifactsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts using p u t forbidden response has a 4xx status code
func (o *ReclassifyArtifactsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this reclassify artifacts using p u t forbidden response has a 5xx status code
func (o *ReclassifyArtifactsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts using p u t forbidden response a status code equal to that given
func (o *ReclassifyArtifactsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the reclassify artifacts using p u t forbidden response
func (o *ReclassifyArtifactsUsingPUTForbidden) Code() int {
	return 403
}

func (o *ReclassifyArtifactsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTForbidden", 403)
}

func (o *ReclassifyArtifactsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTForbidden", 403)
}

func (o *ReclassifyArtifactsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewReclassifyArtifactsUsingPUTNotFound creates a ReclassifyArtifactsUsingPUTNotFound with default headers values
func NewReclassifyArtifactsUsingPUTNotFound() *ReclassifyArtifactsUsingPUTNotFound {
	return &ReclassifyArtifactsUsingPUTNotFound{}
}

/*
ReclassifyArtifactsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ReclassifyArtifactsUsingPUTNotFound struct {
}

// IsSuccess returns true when this reclassify artifacts using p u t not found response has a 2xx status code
func (o *ReclassifyArtifactsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this reclassify artifacts using p u t not found response has a 3xx status code
func (o *ReclassifyArtifactsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this reclassify artifacts using p u t not found response has a 4xx status code
func (o *ReclassifyArtifactsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this reclassify artifacts using p u t not found response has a 5xx status code
func (o *ReclassifyArtifactsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this reclassify artifacts using p u t not found response a status code equal to that given
func (o *ReclassifyArtifactsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the reclassify artifacts using p u t not found response
func (o *ReclassifyArtifactsUsingPUTNotFound) Code() int {
	return 404
}

func (o *ReclassifyArtifactsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTNotFound", 404)
}

func (o *ReclassifyArtifactsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifacts/reclassify][%d] reclassifyArtifactsUsingPUTNotFound", 404)
}

func (o *ReclassifyArtifactsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
