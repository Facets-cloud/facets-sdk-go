// Code generated by go-swagger; DO NOT EDIT.

package ui_maintenance_window_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetByClusterIDReader is a Reader for the GetByClusterID structure.
type GetByClusterIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByClusterIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetByClusterIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetByClusterIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetByClusterIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetByClusterIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetByClusterIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/maintenance-window/{clusterId}] getByClusterId", response, response.Code())
	}
}

// NewGetByClusterIDOK creates a GetByClusterIDOK with default headers values
func NewGetByClusterIDOK() *GetByClusterIDOK {
	return &GetByClusterIDOK{}
}

/*
GetByClusterIDOK describes a response with status code 200, with default header values.

OK
*/
type GetByClusterIDOK struct {
	Payload *models.MaintenanceWindowDTO
}

// IsSuccess returns true when this get by cluster Id o k response has a 2xx status code
func (o *GetByClusterIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get by cluster Id o k response has a 3xx status code
func (o *GetByClusterIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id o k response has a 4xx status code
func (o *GetByClusterIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get by cluster Id o k response has a 5xx status code
func (o *GetByClusterIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id o k response a status code equal to that given
func (o *GetByClusterIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get by cluster Id o k response
func (o *GetByClusterIDOK) Code() int {
	return 200
}

func (o *GetByClusterIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdOK %s", 200, payload)
}

func (o *GetByClusterIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdOK %s", 200, payload)
}

func (o *GetByClusterIDOK) GetPayload() *models.MaintenanceWindowDTO {
	return o.Payload
}

func (o *GetByClusterIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenanceWindowDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByClusterIDBadRequest creates a GetByClusterIDBadRequest with default headers values
func NewGetByClusterIDBadRequest() *GetByClusterIDBadRequest {
	return &GetByClusterIDBadRequest{}
}

/*
GetByClusterIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetByClusterIDBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by cluster Id bad request response has a 2xx status code
func (o *GetByClusterIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by cluster Id bad request response has a 3xx status code
func (o *GetByClusterIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id bad request response has a 4xx status code
func (o *GetByClusterIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by cluster Id bad request response has a 5xx status code
func (o *GetByClusterIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id bad request response a status code equal to that given
func (o *GetByClusterIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get by cluster Id bad request response
func (o *GetByClusterIDBadRequest) Code() int {
	return 400
}

func (o *GetByClusterIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdBadRequest %s", 400, payload)
}

func (o *GetByClusterIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdBadRequest %s", 400, payload)
}

func (o *GetByClusterIDBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByClusterIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByClusterIDNotFound creates a GetByClusterIDNotFound with default headers values
func NewGetByClusterIDNotFound() *GetByClusterIDNotFound {
	return &GetByClusterIDNotFound{}
}

/*
GetByClusterIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetByClusterIDNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by cluster Id not found response has a 2xx status code
func (o *GetByClusterIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by cluster Id not found response has a 3xx status code
func (o *GetByClusterIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id not found response has a 4xx status code
func (o *GetByClusterIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by cluster Id not found response has a 5xx status code
func (o *GetByClusterIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id not found response a status code equal to that given
func (o *GetByClusterIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get by cluster Id not found response
func (o *GetByClusterIDNotFound) Code() int {
	return 404
}

func (o *GetByClusterIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdNotFound %s", 404, payload)
}

func (o *GetByClusterIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdNotFound %s", 404, payload)
}

func (o *GetByClusterIDNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByClusterIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByClusterIDMethodNotAllowed creates a GetByClusterIDMethodNotAllowed with default headers values
func NewGetByClusterIDMethodNotAllowed() *GetByClusterIDMethodNotAllowed {
	return &GetByClusterIDMethodNotAllowed{}
}

/*
GetByClusterIDMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetByClusterIDMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by cluster Id method not allowed response has a 2xx status code
func (o *GetByClusterIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by cluster Id method not allowed response has a 3xx status code
func (o *GetByClusterIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id method not allowed response has a 4xx status code
func (o *GetByClusterIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by cluster Id method not allowed response has a 5xx status code
func (o *GetByClusterIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id method not allowed response a status code equal to that given
func (o *GetByClusterIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get by cluster Id method not allowed response
func (o *GetByClusterIDMethodNotAllowed) Code() int {
	return 405
}

func (o *GetByClusterIDMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdMethodNotAllowed %s", 405, payload)
}

func (o *GetByClusterIDMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdMethodNotAllowed %s", 405, payload)
}

func (o *GetByClusterIDMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByClusterIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByClusterIDInternalServerError creates a GetByClusterIDInternalServerError with default headers values
func NewGetByClusterIDInternalServerError() *GetByClusterIDInternalServerError {
	return &GetByClusterIDInternalServerError{}
}

/*
GetByClusterIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetByClusterIDInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by cluster Id internal server error response has a 2xx status code
func (o *GetByClusterIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by cluster Id internal server error response has a 3xx status code
func (o *GetByClusterIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id internal server error response has a 4xx status code
func (o *GetByClusterIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get by cluster Id internal server error response has a 5xx status code
func (o *GetByClusterIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get by cluster Id internal server error response a status code equal to that given
func (o *GetByClusterIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get by cluster Id internal server error response
func (o *GetByClusterIDInternalServerError) Code() int {
	return 500
}

func (o *GetByClusterIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdInternalServerError %s", 500, payload)
}

func (o *GetByClusterIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdInternalServerError %s", 500, payload)
}

func (o *GetByClusterIDInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByClusterIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
