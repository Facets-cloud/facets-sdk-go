// Code generated by go-swagger; DO NOT EDIT.

package ui_maintenance_window_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetByClusterIDUsingGETReader is a Reader for the GetByClusterIDUsingGET structure.
type GetByClusterIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByClusterIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetByClusterIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetByClusterIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetByClusterIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetByClusterIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/maintenance-window/{clusterId}] getByClusterIdUsingGET", response, response.Code())
	}
}

// NewGetByClusterIDUsingGETOK creates a GetByClusterIDUsingGETOK with default headers values
func NewGetByClusterIDUsingGETOK() *GetByClusterIDUsingGETOK {
	return &GetByClusterIDUsingGETOK{}
}

/*
GetByClusterIDUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetByClusterIDUsingGETOK struct {
	Payload *models.MaintenanceWindowDTO
}

// IsSuccess returns true when this get by cluster Id using g e t o k response has a 2xx status code
func (o *GetByClusterIDUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get by cluster Id using g e t o k response has a 3xx status code
func (o *GetByClusterIDUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id using g e t o k response has a 4xx status code
func (o *GetByClusterIDUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get by cluster Id using g e t o k response has a 5xx status code
func (o *GetByClusterIDUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id using g e t o k response a status code equal to that given
func (o *GetByClusterIDUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get by cluster Id using g e t o k response
func (o *GetByClusterIDUsingGETOK) Code() int {
	return 200
}

func (o *GetByClusterIDUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETOK %s", 200, payload)
}

func (o *GetByClusterIDUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETOK %s", 200, payload)
}

func (o *GetByClusterIDUsingGETOK) GetPayload() *models.MaintenanceWindowDTO {
	return o.Payload
}

func (o *GetByClusterIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MaintenanceWindowDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByClusterIDUsingGETUnauthorized creates a GetByClusterIDUsingGETUnauthorized with default headers values
func NewGetByClusterIDUsingGETUnauthorized() *GetByClusterIDUsingGETUnauthorized {
	return &GetByClusterIDUsingGETUnauthorized{}
}

/*
GetByClusterIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetByClusterIDUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get by cluster Id using g e t unauthorized response has a 2xx status code
func (o *GetByClusterIDUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by cluster Id using g e t unauthorized response has a 3xx status code
func (o *GetByClusterIDUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id using g e t unauthorized response has a 4xx status code
func (o *GetByClusterIDUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by cluster Id using g e t unauthorized response has a 5xx status code
func (o *GetByClusterIDUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id using g e t unauthorized response a status code equal to that given
func (o *GetByClusterIDUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get by cluster Id using g e t unauthorized response
func (o *GetByClusterIDUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetByClusterIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETUnauthorized", 401)
}

func (o *GetByClusterIDUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETUnauthorized", 401)
}

func (o *GetByClusterIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetByClusterIDUsingGETForbidden creates a GetByClusterIDUsingGETForbidden with default headers values
func NewGetByClusterIDUsingGETForbidden() *GetByClusterIDUsingGETForbidden {
	return &GetByClusterIDUsingGETForbidden{}
}

/*
GetByClusterIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetByClusterIDUsingGETForbidden struct {
}

// IsSuccess returns true when this get by cluster Id using g e t forbidden response has a 2xx status code
func (o *GetByClusterIDUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by cluster Id using g e t forbidden response has a 3xx status code
func (o *GetByClusterIDUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id using g e t forbidden response has a 4xx status code
func (o *GetByClusterIDUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by cluster Id using g e t forbidden response has a 5xx status code
func (o *GetByClusterIDUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id using g e t forbidden response a status code equal to that given
func (o *GetByClusterIDUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get by cluster Id using g e t forbidden response
func (o *GetByClusterIDUsingGETForbidden) Code() int {
	return 403
}

func (o *GetByClusterIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETForbidden", 403)
}

func (o *GetByClusterIDUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETForbidden", 403)
}

func (o *GetByClusterIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetByClusterIDUsingGETNotFound creates a GetByClusterIDUsingGETNotFound with default headers values
func NewGetByClusterIDUsingGETNotFound() *GetByClusterIDUsingGETNotFound {
	return &GetByClusterIDUsingGETNotFound{}
}

/*
GetByClusterIDUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetByClusterIDUsingGETNotFound struct {
}

// IsSuccess returns true when this get by cluster Id using g e t not found response has a 2xx status code
func (o *GetByClusterIDUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by cluster Id using g e t not found response has a 3xx status code
func (o *GetByClusterIDUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by cluster Id using g e t not found response has a 4xx status code
func (o *GetByClusterIDUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by cluster Id using g e t not found response has a 5xx status code
func (o *GetByClusterIDUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get by cluster Id using g e t not found response a status code equal to that given
func (o *GetByClusterIDUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get by cluster Id using g e t not found response
func (o *GetByClusterIDUsingGETNotFound) Code() int {
	return 404
}

func (o *GetByClusterIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETNotFound", 404)
}

func (o *GetByClusterIDUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/maintenance-window/{clusterId}][%d] getByClusterIdUsingGETNotFound", 404)
}

func (o *GetByClusterIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
