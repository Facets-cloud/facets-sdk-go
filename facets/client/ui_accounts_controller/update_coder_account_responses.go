// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateCoderAccountReader is a Reader for the UpdateCoderAccount structure.
type UpdateCoderAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCoderAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCoderAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateCoderAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCoderAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateCoderAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateCoderAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/coder/{id}] updateCoderAccount", response, response.Code())
	}
}

// NewUpdateCoderAccountOK creates a UpdateCoderAccountOK with default headers values
func NewUpdateCoderAccountOK() *UpdateCoderAccountOK {
	return &UpdateCoderAccountOK{}
}

/*
UpdateCoderAccountOK describes a response with status code 200, with default header values.

OK
*/
type UpdateCoderAccountOK struct {
	Payload *models.CoderAccount
}

// IsSuccess returns true when this update coder account o k response has a 2xx status code
func (o *UpdateCoderAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update coder account o k response has a 3xx status code
func (o *UpdateCoderAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account o k response has a 4xx status code
func (o *UpdateCoderAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update coder account o k response has a 5xx status code
func (o *UpdateCoderAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account o k response a status code equal to that given
func (o *UpdateCoderAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update coder account o k response
func (o *UpdateCoderAccountOK) Code() int {
	return 200
}

func (o *UpdateCoderAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountOK %s", 200, payload)
}

func (o *UpdateCoderAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountOK %s", 200, payload)
}

func (o *UpdateCoderAccountOK) GetPayload() *models.CoderAccount {
	return o.Payload
}

func (o *UpdateCoderAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoderAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCoderAccountBadRequest creates a UpdateCoderAccountBadRequest with default headers values
func NewUpdateCoderAccountBadRequest() *UpdateCoderAccountBadRequest {
	return &UpdateCoderAccountBadRequest{}
}

/*
UpdateCoderAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateCoderAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update coder account bad request response has a 2xx status code
func (o *UpdateCoderAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update coder account bad request response has a 3xx status code
func (o *UpdateCoderAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account bad request response has a 4xx status code
func (o *UpdateCoderAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update coder account bad request response has a 5xx status code
func (o *UpdateCoderAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account bad request response a status code equal to that given
func (o *UpdateCoderAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update coder account bad request response
func (o *UpdateCoderAccountBadRequest) Code() int {
	return 400
}

func (o *UpdateCoderAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountBadRequest %s", 400, payload)
}

func (o *UpdateCoderAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountBadRequest %s", 400, payload)
}

func (o *UpdateCoderAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateCoderAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCoderAccountNotFound creates a UpdateCoderAccountNotFound with default headers values
func NewUpdateCoderAccountNotFound() *UpdateCoderAccountNotFound {
	return &UpdateCoderAccountNotFound{}
}

/*
UpdateCoderAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateCoderAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update coder account not found response has a 2xx status code
func (o *UpdateCoderAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update coder account not found response has a 3xx status code
func (o *UpdateCoderAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account not found response has a 4xx status code
func (o *UpdateCoderAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update coder account not found response has a 5xx status code
func (o *UpdateCoderAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account not found response a status code equal to that given
func (o *UpdateCoderAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update coder account not found response
func (o *UpdateCoderAccountNotFound) Code() int {
	return 404
}

func (o *UpdateCoderAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountNotFound %s", 404, payload)
}

func (o *UpdateCoderAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountNotFound %s", 404, payload)
}

func (o *UpdateCoderAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateCoderAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCoderAccountMethodNotAllowed creates a UpdateCoderAccountMethodNotAllowed with default headers values
func NewUpdateCoderAccountMethodNotAllowed() *UpdateCoderAccountMethodNotAllowed {
	return &UpdateCoderAccountMethodNotAllowed{}
}

/*
UpdateCoderAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateCoderAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update coder account method not allowed response has a 2xx status code
func (o *UpdateCoderAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update coder account method not allowed response has a 3xx status code
func (o *UpdateCoderAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account method not allowed response has a 4xx status code
func (o *UpdateCoderAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update coder account method not allowed response has a 5xx status code
func (o *UpdateCoderAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account method not allowed response a status code equal to that given
func (o *UpdateCoderAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update coder account method not allowed response
func (o *UpdateCoderAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateCoderAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateCoderAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateCoderAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateCoderAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCoderAccountInternalServerError creates a UpdateCoderAccountInternalServerError with default headers values
func NewUpdateCoderAccountInternalServerError() *UpdateCoderAccountInternalServerError {
	return &UpdateCoderAccountInternalServerError{}
}

/*
UpdateCoderAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateCoderAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update coder account internal server error response has a 2xx status code
func (o *UpdateCoderAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update coder account internal server error response has a 3xx status code
func (o *UpdateCoderAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account internal server error response has a 4xx status code
func (o *UpdateCoderAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update coder account internal server error response has a 5xx status code
func (o *UpdateCoderAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update coder account internal server error response a status code equal to that given
func (o *UpdateCoderAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update coder account internal server error response
func (o *UpdateCoderAccountInternalServerError) Code() int {
	return 500
}

func (o *UpdateCoderAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountInternalServerError %s", 500, payload)
}

func (o *UpdateCoderAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountInternalServerError %s", 500, payload)
}

func (o *UpdateCoderAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateCoderAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
