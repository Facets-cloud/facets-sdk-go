// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateKubernetesAccountUsingPUTReader is a Reader for the UpdateKubernetesAccountUsingPUT structure.
type UpdateKubernetesAccountUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateKubernetesAccountUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateKubernetesAccountUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateKubernetesAccountUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateKubernetesAccountUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateKubernetesAccountUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateKubernetesAccountUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/kubernetes/{id}] updateKubernetesAccountUsingPUT", response, response.Code())
	}
}

// NewUpdateKubernetesAccountUsingPUTOK creates a UpdateKubernetesAccountUsingPUTOK with default headers values
func NewUpdateKubernetesAccountUsingPUTOK() *UpdateKubernetesAccountUsingPUTOK {
	return &UpdateKubernetesAccountUsingPUTOK{}
}

/*
UpdateKubernetesAccountUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateKubernetesAccountUsingPUTOK struct {
	Payload *models.KubernetesAccount
}

// IsSuccess returns true when this update kubernetes account using p u t o k response has a 2xx status code
func (o *UpdateKubernetesAccountUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update kubernetes account using p u t o k response has a 3xx status code
func (o *UpdateKubernetesAccountUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes account using p u t o k response has a 4xx status code
func (o *UpdateKubernetesAccountUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update kubernetes account using p u t o k response has a 5xx status code
func (o *UpdateKubernetesAccountUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes account using p u t o k response a status code equal to that given
func (o *UpdateKubernetesAccountUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update kubernetes account using p u t o k response
func (o *UpdateKubernetesAccountUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateKubernetesAccountUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateKubernetesAccountUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateKubernetesAccountUsingPUTOK) GetPayload() *models.KubernetesAccount {
	return o.Payload
}

func (o *UpdateKubernetesAccountUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KubernetesAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateKubernetesAccountUsingPUTCreated creates a UpdateKubernetesAccountUsingPUTCreated with default headers values
func NewUpdateKubernetesAccountUsingPUTCreated() *UpdateKubernetesAccountUsingPUTCreated {
	return &UpdateKubernetesAccountUsingPUTCreated{}
}

/*
UpdateKubernetesAccountUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateKubernetesAccountUsingPUTCreated struct {
}

// IsSuccess returns true when this update kubernetes account using p u t created response has a 2xx status code
func (o *UpdateKubernetesAccountUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update kubernetes account using p u t created response has a 3xx status code
func (o *UpdateKubernetesAccountUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes account using p u t created response has a 4xx status code
func (o *UpdateKubernetesAccountUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update kubernetes account using p u t created response has a 5xx status code
func (o *UpdateKubernetesAccountUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes account using p u t created response a status code equal to that given
func (o *UpdateKubernetesAccountUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update kubernetes account using p u t created response
func (o *UpdateKubernetesAccountUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateKubernetesAccountUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTCreated", 201)
}

func (o *UpdateKubernetesAccountUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTCreated", 201)
}

func (o *UpdateKubernetesAccountUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKubernetesAccountUsingPUTUnauthorized creates a UpdateKubernetesAccountUsingPUTUnauthorized with default headers values
func NewUpdateKubernetesAccountUsingPUTUnauthorized() *UpdateKubernetesAccountUsingPUTUnauthorized {
	return &UpdateKubernetesAccountUsingPUTUnauthorized{}
}

/*
UpdateKubernetesAccountUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateKubernetesAccountUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update kubernetes account using p u t unauthorized response has a 2xx status code
func (o *UpdateKubernetesAccountUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes account using p u t unauthorized response has a 3xx status code
func (o *UpdateKubernetesAccountUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes account using p u t unauthorized response has a 4xx status code
func (o *UpdateKubernetesAccountUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update kubernetes account using p u t unauthorized response has a 5xx status code
func (o *UpdateKubernetesAccountUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes account using p u t unauthorized response a status code equal to that given
func (o *UpdateKubernetesAccountUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update kubernetes account using p u t unauthorized response
func (o *UpdateKubernetesAccountUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateKubernetesAccountUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateKubernetesAccountUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateKubernetesAccountUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKubernetesAccountUsingPUTForbidden creates a UpdateKubernetesAccountUsingPUTForbidden with default headers values
func NewUpdateKubernetesAccountUsingPUTForbidden() *UpdateKubernetesAccountUsingPUTForbidden {
	return &UpdateKubernetesAccountUsingPUTForbidden{}
}

/*
UpdateKubernetesAccountUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateKubernetesAccountUsingPUTForbidden struct {
}

// IsSuccess returns true when this update kubernetes account using p u t forbidden response has a 2xx status code
func (o *UpdateKubernetesAccountUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes account using p u t forbidden response has a 3xx status code
func (o *UpdateKubernetesAccountUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes account using p u t forbidden response has a 4xx status code
func (o *UpdateKubernetesAccountUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update kubernetes account using p u t forbidden response has a 5xx status code
func (o *UpdateKubernetesAccountUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes account using p u t forbidden response a status code equal to that given
func (o *UpdateKubernetesAccountUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update kubernetes account using p u t forbidden response
func (o *UpdateKubernetesAccountUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateKubernetesAccountUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTForbidden", 403)
}

func (o *UpdateKubernetesAccountUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTForbidden", 403)
}

func (o *UpdateKubernetesAccountUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateKubernetesAccountUsingPUTNotFound creates a UpdateKubernetesAccountUsingPUTNotFound with default headers values
func NewUpdateKubernetesAccountUsingPUTNotFound() *UpdateKubernetesAccountUsingPUTNotFound {
	return &UpdateKubernetesAccountUsingPUTNotFound{}
}

/*
UpdateKubernetesAccountUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateKubernetesAccountUsingPUTNotFound struct {
}

// IsSuccess returns true when this update kubernetes account using p u t not found response has a 2xx status code
func (o *UpdateKubernetesAccountUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update kubernetes account using p u t not found response has a 3xx status code
func (o *UpdateKubernetesAccountUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update kubernetes account using p u t not found response has a 4xx status code
func (o *UpdateKubernetesAccountUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update kubernetes account using p u t not found response has a 5xx status code
func (o *UpdateKubernetesAccountUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update kubernetes account using p u t not found response a status code equal to that given
func (o *UpdateKubernetesAccountUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update kubernetes account using p u t not found response
func (o *UpdateKubernetesAccountUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateKubernetesAccountUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTNotFound", 404)
}

func (o *UpdateKubernetesAccountUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/kubernetes/{id}][%d] updateKubernetesAccountUsingPUTNotFound", 404)
}

func (o *UpdateKubernetesAccountUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
