// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAccountsByTypeReader is a Reader for the GetAccountsByType structure.
type GetAccountsByTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountsByTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountsByTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountsByTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountsByTypeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAccountsByTypeMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccountsByTypeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/type/{type}] getAccountsByType", response, response.Code())
	}
}

// NewGetAccountsByTypeOK creates a GetAccountsByTypeOK with default headers values
func NewGetAccountsByTypeOK() *GetAccountsByTypeOK {
	return &GetAccountsByTypeOK{}
}

/*
GetAccountsByTypeOK describes a response with status code 200, with default header values.

OK
*/
type GetAccountsByTypeOK struct {
	Payload []*models.Account
}

// IsSuccess returns true when this get accounts by type o k response has a 2xx status code
func (o *GetAccountsByTypeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get accounts by type o k response has a 3xx status code
func (o *GetAccountsByTypeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type o k response has a 4xx status code
func (o *GetAccountsByTypeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get accounts by type o k response has a 5xx status code
func (o *GetAccountsByTypeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type o k response a status code equal to that given
func (o *GetAccountsByTypeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get accounts by type o k response
func (o *GetAccountsByTypeOK) Code() int {
	return 200
}

func (o *GetAccountsByTypeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeOK %s", 200, payload)
}

func (o *GetAccountsByTypeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeOK %s", 200, payload)
}

func (o *GetAccountsByTypeOK) GetPayload() []*models.Account {
	return o.Payload
}

func (o *GetAccountsByTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsByTypeBadRequest creates a GetAccountsByTypeBadRequest with default headers values
func NewGetAccountsByTypeBadRequest() *GetAccountsByTypeBadRequest {
	return &GetAccountsByTypeBadRequest{}
}

/*
GetAccountsByTypeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAccountsByTypeBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get accounts by type bad request response has a 2xx status code
func (o *GetAccountsByTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts by type bad request response has a 3xx status code
func (o *GetAccountsByTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type bad request response has a 4xx status code
func (o *GetAccountsByTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts by type bad request response has a 5xx status code
func (o *GetAccountsByTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type bad request response a status code equal to that given
func (o *GetAccountsByTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get accounts by type bad request response
func (o *GetAccountsByTypeBadRequest) Code() int {
	return 400
}

func (o *GetAccountsByTypeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeBadRequest %s", 400, payload)
}

func (o *GetAccountsByTypeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeBadRequest %s", 400, payload)
}

func (o *GetAccountsByTypeBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountsByTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsByTypeNotFound creates a GetAccountsByTypeNotFound with default headers values
func NewGetAccountsByTypeNotFound() *GetAccountsByTypeNotFound {
	return &GetAccountsByTypeNotFound{}
}

/*
GetAccountsByTypeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAccountsByTypeNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get accounts by type not found response has a 2xx status code
func (o *GetAccountsByTypeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts by type not found response has a 3xx status code
func (o *GetAccountsByTypeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type not found response has a 4xx status code
func (o *GetAccountsByTypeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts by type not found response has a 5xx status code
func (o *GetAccountsByTypeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type not found response a status code equal to that given
func (o *GetAccountsByTypeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get accounts by type not found response
func (o *GetAccountsByTypeNotFound) Code() int {
	return 404
}

func (o *GetAccountsByTypeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeNotFound %s", 404, payload)
}

func (o *GetAccountsByTypeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeNotFound %s", 404, payload)
}

func (o *GetAccountsByTypeNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountsByTypeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsByTypeMethodNotAllowed creates a GetAccountsByTypeMethodNotAllowed with default headers values
func NewGetAccountsByTypeMethodNotAllowed() *GetAccountsByTypeMethodNotAllowed {
	return &GetAccountsByTypeMethodNotAllowed{}
}

/*
GetAccountsByTypeMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAccountsByTypeMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get accounts by type method not allowed response has a 2xx status code
func (o *GetAccountsByTypeMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts by type method not allowed response has a 3xx status code
func (o *GetAccountsByTypeMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type method not allowed response has a 4xx status code
func (o *GetAccountsByTypeMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts by type method not allowed response has a 5xx status code
func (o *GetAccountsByTypeMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type method not allowed response a status code equal to that given
func (o *GetAccountsByTypeMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get accounts by type method not allowed response
func (o *GetAccountsByTypeMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAccountsByTypeMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeMethodNotAllowed %s", 405, payload)
}

func (o *GetAccountsByTypeMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeMethodNotAllowed %s", 405, payload)
}

func (o *GetAccountsByTypeMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountsByTypeMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsByTypeInternalServerError creates a GetAccountsByTypeInternalServerError with default headers values
func NewGetAccountsByTypeInternalServerError() *GetAccountsByTypeInternalServerError {
	return &GetAccountsByTypeInternalServerError{}
}

/*
GetAccountsByTypeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAccountsByTypeInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get accounts by type internal server error response has a 2xx status code
func (o *GetAccountsByTypeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts by type internal server error response has a 3xx status code
func (o *GetAccountsByTypeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type internal server error response has a 4xx status code
func (o *GetAccountsByTypeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get accounts by type internal server error response has a 5xx status code
func (o *GetAccountsByTypeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get accounts by type internal server error response a status code equal to that given
func (o *GetAccountsByTypeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get accounts by type internal server error response
func (o *GetAccountsByTypeInternalServerError) Code() int {
	return 500
}

func (o *GetAccountsByTypeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeInternalServerError %s", 500, payload)
}

func (o *GetAccountsByTypeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeInternalServerError %s", 500, payload)
}

func (o *GetAccountsByTypeInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountsByTypeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
