// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateBitBucketAccountReader is a Reader for the UpdateBitBucketAccount structure.
type UpdateBitBucketAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBitBucketAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBitBucketAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBitBucketAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBitBucketAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateBitBucketAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBitBucketAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/bitbucket/{id}] updateBitBucketAccount", response, response.Code())
	}
}

// NewUpdateBitBucketAccountOK creates a UpdateBitBucketAccountOK with default headers values
func NewUpdateBitBucketAccountOK() *UpdateBitBucketAccountOK {
	return &UpdateBitBucketAccountOK{}
}

/*
UpdateBitBucketAccountOK describes a response with status code 200, with default header values.

OK
*/
type UpdateBitBucketAccountOK struct {
	Payload *models.BitBucketAccount
}

// IsSuccess returns true when this update bit bucket account o k response has a 2xx status code
func (o *UpdateBitBucketAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update bit bucket account o k response has a 3xx status code
func (o *UpdateBitBucketAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account o k response has a 4xx status code
func (o *UpdateBitBucketAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bit bucket account o k response has a 5xx status code
func (o *UpdateBitBucketAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account o k response a status code equal to that given
func (o *UpdateBitBucketAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update bit bucket account o k response
func (o *UpdateBitBucketAccountOK) Code() int {
	return 200
}

func (o *UpdateBitBucketAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountOK %s", 200, payload)
}

func (o *UpdateBitBucketAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountOK %s", 200, payload)
}

func (o *UpdateBitBucketAccountOK) GetPayload() *models.BitBucketAccount {
	return o.Payload
}

func (o *UpdateBitBucketAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BitBucketAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBitBucketAccountBadRequest creates a UpdateBitBucketAccountBadRequest with default headers values
func NewUpdateBitBucketAccountBadRequest() *UpdateBitBucketAccountBadRequest {
	return &UpdateBitBucketAccountBadRequest{}
}

/*
UpdateBitBucketAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBitBucketAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update bit bucket account bad request response has a 2xx status code
func (o *UpdateBitBucketAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bit bucket account bad request response has a 3xx status code
func (o *UpdateBitBucketAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account bad request response has a 4xx status code
func (o *UpdateBitBucketAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bit bucket account bad request response has a 5xx status code
func (o *UpdateBitBucketAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account bad request response a status code equal to that given
func (o *UpdateBitBucketAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update bit bucket account bad request response
func (o *UpdateBitBucketAccountBadRequest) Code() int {
	return 400
}

func (o *UpdateBitBucketAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountBadRequest %s", 400, payload)
}

func (o *UpdateBitBucketAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountBadRequest %s", 400, payload)
}

func (o *UpdateBitBucketAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBitBucketAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBitBucketAccountNotFound creates a UpdateBitBucketAccountNotFound with default headers values
func NewUpdateBitBucketAccountNotFound() *UpdateBitBucketAccountNotFound {
	return &UpdateBitBucketAccountNotFound{}
}

/*
UpdateBitBucketAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBitBucketAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update bit bucket account not found response has a 2xx status code
func (o *UpdateBitBucketAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bit bucket account not found response has a 3xx status code
func (o *UpdateBitBucketAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account not found response has a 4xx status code
func (o *UpdateBitBucketAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bit bucket account not found response has a 5xx status code
func (o *UpdateBitBucketAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account not found response a status code equal to that given
func (o *UpdateBitBucketAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update bit bucket account not found response
func (o *UpdateBitBucketAccountNotFound) Code() int {
	return 404
}

func (o *UpdateBitBucketAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountNotFound %s", 404, payload)
}

func (o *UpdateBitBucketAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountNotFound %s", 404, payload)
}

func (o *UpdateBitBucketAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBitBucketAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBitBucketAccountMethodNotAllowed creates a UpdateBitBucketAccountMethodNotAllowed with default headers values
func NewUpdateBitBucketAccountMethodNotAllowed() *UpdateBitBucketAccountMethodNotAllowed {
	return &UpdateBitBucketAccountMethodNotAllowed{}
}

/*
UpdateBitBucketAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateBitBucketAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update bit bucket account method not allowed response has a 2xx status code
func (o *UpdateBitBucketAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bit bucket account method not allowed response has a 3xx status code
func (o *UpdateBitBucketAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account method not allowed response has a 4xx status code
func (o *UpdateBitBucketAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bit bucket account method not allowed response has a 5xx status code
func (o *UpdateBitBucketAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account method not allowed response a status code equal to that given
func (o *UpdateBitBucketAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update bit bucket account method not allowed response
func (o *UpdateBitBucketAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateBitBucketAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateBitBucketAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateBitBucketAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBitBucketAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBitBucketAccountInternalServerError creates a UpdateBitBucketAccountInternalServerError with default headers values
func NewUpdateBitBucketAccountInternalServerError() *UpdateBitBucketAccountInternalServerError {
	return &UpdateBitBucketAccountInternalServerError{}
}

/*
UpdateBitBucketAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateBitBucketAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update bit bucket account internal server error response has a 2xx status code
func (o *UpdateBitBucketAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bit bucket account internal server error response has a 3xx status code
func (o *UpdateBitBucketAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account internal server error response has a 4xx status code
func (o *UpdateBitBucketAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bit bucket account internal server error response has a 5xx status code
func (o *UpdateBitBucketAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update bit bucket account internal server error response a status code equal to that given
func (o *UpdateBitBucketAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update bit bucket account internal server error response
func (o *UpdateBitBucketAccountInternalServerError) Code() int {
	return 500
}

func (o *UpdateBitBucketAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountInternalServerError %s", 500, payload)
}

func (o *UpdateBitBucketAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountInternalServerError %s", 500, payload)
}

func (o *UpdateBitBucketAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBitBucketAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
