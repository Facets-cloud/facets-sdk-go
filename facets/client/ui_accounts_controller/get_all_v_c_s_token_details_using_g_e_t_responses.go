// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllVCSTokenDetailsUsingGETReader is a Reader for the GetAllVCSTokenDetailsUsingGET structure.
type GetAllVCSTokenDetailsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllVCSTokenDetailsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllVCSTokenDetailsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllVCSTokenDetailsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllVCSTokenDetailsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllVCSTokenDetailsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/token-details] getAllVCSTokenDetailsUsingGET", response, response.Code())
	}
}

// NewGetAllVCSTokenDetailsUsingGETOK creates a GetAllVCSTokenDetailsUsingGETOK with default headers values
func NewGetAllVCSTokenDetailsUsingGETOK() *GetAllVCSTokenDetailsUsingGETOK {
	return &GetAllVCSTokenDetailsUsingGETOK{}
}

/*
GetAllVCSTokenDetailsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllVCSTokenDetailsUsingGETOK struct {
	Payload []*models.VCSTokenDetailsResponse
}

// IsSuccess returns true when this get all v c s token details using g e t o k response has a 2xx status code
func (o *GetAllVCSTokenDetailsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all v c s token details using g e t o k response has a 3xx status code
func (o *GetAllVCSTokenDetailsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details using g e t o k response has a 4xx status code
func (o *GetAllVCSTokenDetailsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all v c s token details using g e t o k response has a 5xx status code
func (o *GetAllVCSTokenDetailsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details using g e t o k response a status code equal to that given
func (o *GetAllVCSTokenDetailsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all v c s token details using g e t o k response
func (o *GetAllVCSTokenDetailsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllVCSTokenDetailsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETOK %s", 200, payload)
}

func (o *GetAllVCSTokenDetailsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETOK %s", 200, payload)
}

func (o *GetAllVCSTokenDetailsUsingGETOK) GetPayload() []*models.VCSTokenDetailsResponse {
	return o.Payload
}

func (o *GetAllVCSTokenDetailsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSTokenDetailsUsingGETUnauthorized creates a GetAllVCSTokenDetailsUsingGETUnauthorized with default headers values
func NewGetAllVCSTokenDetailsUsingGETUnauthorized() *GetAllVCSTokenDetailsUsingGETUnauthorized {
	return &GetAllVCSTokenDetailsUsingGETUnauthorized{}
}

/*
GetAllVCSTokenDetailsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllVCSTokenDetailsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all v c s token details using g e t unauthorized response has a 2xx status code
func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s token details using g e t unauthorized response has a 3xx status code
func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details using g e t unauthorized response has a 4xx status code
func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s token details using g e t unauthorized response has a 5xx status code
func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details using g e t unauthorized response a status code equal to that given
func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all v c s token details using g e t unauthorized response
func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETUnauthorized", 401)
}

func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETUnauthorized", 401)
}

func (o *GetAllVCSTokenDetailsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllVCSTokenDetailsUsingGETForbidden creates a GetAllVCSTokenDetailsUsingGETForbidden with default headers values
func NewGetAllVCSTokenDetailsUsingGETForbidden() *GetAllVCSTokenDetailsUsingGETForbidden {
	return &GetAllVCSTokenDetailsUsingGETForbidden{}
}

/*
GetAllVCSTokenDetailsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllVCSTokenDetailsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all v c s token details using g e t forbidden response has a 2xx status code
func (o *GetAllVCSTokenDetailsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s token details using g e t forbidden response has a 3xx status code
func (o *GetAllVCSTokenDetailsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details using g e t forbidden response has a 4xx status code
func (o *GetAllVCSTokenDetailsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s token details using g e t forbidden response has a 5xx status code
func (o *GetAllVCSTokenDetailsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details using g e t forbidden response a status code equal to that given
func (o *GetAllVCSTokenDetailsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all v c s token details using g e t forbidden response
func (o *GetAllVCSTokenDetailsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllVCSTokenDetailsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETForbidden", 403)
}

func (o *GetAllVCSTokenDetailsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETForbidden", 403)
}

func (o *GetAllVCSTokenDetailsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllVCSTokenDetailsUsingGETNotFound creates a GetAllVCSTokenDetailsUsingGETNotFound with default headers values
func NewGetAllVCSTokenDetailsUsingGETNotFound() *GetAllVCSTokenDetailsUsingGETNotFound {
	return &GetAllVCSTokenDetailsUsingGETNotFound{}
}

/*
GetAllVCSTokenDetailsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllVCSTokenDetailsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all v c s token details using g e t not found response has a 2xx status code
func (o *GetAllVCSTokenDetailsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s token details using g e t not found response has a 3xx status code
func (o *GetAllVCSTokenDetailsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details using g e t not found response has a 4xx status code
func (o *GetAllVCSTokenDetailsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s token details using g e t not found response has a 5xx status code
func (o *GetAllVCSTokenDetailsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details using g e t not found response a status code equal to that given
func (o *GetAllVCSTokenDetailsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all v c s token details using g e t not found response
func (o *GetAllVCSTokenDetailsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllVCSTokenDetailsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETNotFound", 404)
}

func (o *GetAllVCSTokenDetailsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsUsingGETNotFound", 404)
}

func (o *GetAllVCSTokenDetailsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
