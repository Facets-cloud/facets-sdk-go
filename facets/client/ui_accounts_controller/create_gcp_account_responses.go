// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateGcpAccountReader is a Reader for the CreateGcpAccount structure.
type CreateGcpAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGcpAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGcpAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateGcpAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateGcpAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateGcpAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateGcpAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/gcp/] createGcpAccount", response, response.Code())
	}
}

// NewCreateGcpAccountOK creates a CreateGcpAccountOK with default headers values
func NewCreateGcpAccountOK() *CreateGcpAccountOK {
	return &CreateGcpAccountOK{}
}

/*
CreateGcpAccountOK describes a response with status code 200, with default header values.

OK
*/
type CreateGcpAccountOK struct {
	Payload *models.GcpAccount
}

// IsSuccess returns true when this create gcp account o k response has a 2xx status code
func (o *CreateGcpAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create gcp account o k response has a 3xx status code
func (o *CreateGcpAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account o k response has a 4xx status code
func (o *CreateGcpAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gcp account o k response has a 5xx status code
func (o *CreateGcpAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account o k response a status code equal to that given
func (o *CreateGcpAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create gcp account o k response
func (o *CreateGcpAccountOK) Code() int {
	return 200
}

func (o *CreateGcpAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountOK %s", 200, payload)
}

func (o *CreateGcpAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountOK %s", 200, payload)
}

func (o *CreateGcpAccountOK) GetPayload() *models.GcpAccount {
	return o.Payload
}

func (o *CreateGcpAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GcpAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpAccountBadRequest creates a CreateGcpAccountBadRequest with default headers values
func NewCreateGcpAccountBadRequest() *CreateGcpAccountBadRequest {
	return &CreateGcpAccountBadRequest{}
}

/*
CreateGcpAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateGcpAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create gcp account bad request response has a 2xx status code
func (o *CreateGcpAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp account bad request response has a 3xx status code
func (o *CreateGcpAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account bad request response has a 4xx status code
func (o *CreateGcpAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp account bad request response has a 5xx status code
func (o *CreateGcpAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account bad request response a status code equal to that given
func (o *CreateGcpAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create gcp account bad request response
func (o *CreateGcpAccountBadRequest) Code() int {
	return 400
}

func (o *CreateGcpAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountBadRequest %s", 400, payload)
}

func (o *CreateGcpAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountBadRequest %s", 400, payload)
}

func (o *CreateGcpAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGcpAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpAccountNotFound creates a CreateGcpAccountNotFound with default headers values
func NewCreateGcpAccountNotFound() *CreateGcpAccountNotFound {
	return &CreateGcpAccountNotFound{}
}

/*
CreateGcpAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateGcpAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create gcp account not found response has a 2xx status code
func (o *CreateGcpAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp account not found response has a 3xx status code
func (o *CreateGcpAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account not found response has a 4xx status code
func (o *CreateGcpAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp account not found response has a 5xx status code
func (o *CreateGcpAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account not found response a status code equal to that given
func (o *CreateGcpAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create gcp account not found response
func (o *CreateGcpAccountNotFound) Code() int {
	return 404
}

func (o *CreateGcpAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountNotFound %s", 404, payload)
}

func (o *CreateGcpAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountNotFound %s", 404, payload)
}

func (o *CreateGcpAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGcpAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpAccountMethodNotAllowed creates a CreateGcpAccountMethodNotAllowed with default headers values
func NewCreateGcpAccountMethodNotAllowed() *CreateGcpAccountMethodNotAllowed {
	return &CreateGcpAccountMethodNotAllowed{}
}

/*
CreateGcpAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateGcpAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create gcp account method not allowed response has a 2xx status code
func (o *CreateGcpAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp account method not allowed response has a 3xx status code
func (o *CreateGcpAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account method not allowed response has a 4xx status code
func (o *CreateGcpAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp account method not allowed response has a 5xx status code
func (o *CreateGcpAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account method not allowed response a status code equal to that given
func (o *CreateGcpAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create gcp account method not allowed response
func (o *CreateGcpAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateGcpAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountMethodNotAllowed %s", 405, payload)
}

func (o *CreateGcpAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountMethodNotAllowed %s", 405, payload)
}

func (o *CreateGcpAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGcpAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpAccountInternalServerError creates a CreateGcpAccountInternalServerError with default headers values
func NewCreateGcpAccountInternalServerError() *CreateGcpAccountInternalServerError {
	return &CreateGcpAccountInternalServerError{}
}

/*
CreateGcpAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateGcpAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create gcp account internal server error response has a 2xx status code
func (o *CreateGcpAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp account internal server error response has a 3xx status code
func (o *CreateGcpAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account internal server error response has a 4xx status code
func (o *CreateGcpAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gcp account internal server error response has a 5xx status code
func (o *CreateGcpAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create gcp account internal server error response a status code equal to that given
func (o *CreateGcpAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create gcp account internal server error response
func (o *CreateGcpAccountInternalServerError) Code() int {
	return 500
}

func (o *CreateGcpAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountInternalServerError %s", 500, payload)
}

func (o *CreateGcpAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountInternalServerError %s", 500, payload)
}

func (o *CreateGcpAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGcpAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
