// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ValidateBitbucketAccountUsingPOSTReader is a Reader for the ValidateBitbucketAccountUsingPOST structure.
type ValidateBitbucketAccountUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateBitbucketAccountUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateBitbucketAccountUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewValidateBitbucketAccountUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewValidateBitbucketAccountUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewValidateBitbucketAccountUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateBitbucketAccountUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/bitbucket/validate] validateBitbucketAccountUsingPOST", response, response.Code())
	}
}

// NewValidateBitbucketAccountUsingPOSTOK creates a ValidateBitbucketAccountUsingPOSTOK with default headers values
func NewValidateBitbucketAccountUsingPOSTOK() *ValidateBitbucketAccountUsingPOSTOK {
	return &ValidateBitbucketAccountUsingPOSTOK{}
}

/*
ValidateBitbucketAccountUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type ValidateBitbucketAccountUsingPOSTOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this validate bitbucket account using p o s t o k response has a 2xx status code
func (o *ValidateBitbucketAccountUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate bitbucket account using p o s t o k response has a 3xx status code
func (o *ValidateBitbucketAccountUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account using p o s t o k response has a 4xx status code
func (o *ValidateBitbucketAccountUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate bitbucket account using p o s t o k response has a 5xx status code
func (o *ValidateBitbucketAccountUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account using p o s t o k response a status code equal to that given
func (o *ValidateBitbucketAccountUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate bitbucket account using p o s t o k response
func (o *ValidateBitbucketAccountUsingPOSTOK) Code() int {
	return 200
}

func (o *ValidateBitbucketAccountUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTOK %s", 200, payload)
}

func (o *ValidateBitbucketAccountUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTOK %s", 200, payload)
}

func (o *ValidateBitbucketAccountUsingPOSTOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ValidateBitbucketAccountUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateBitbucketAccountUsingPOSTCreated creates a ValidateBitbucketAccountUsingPOSTCreated with default headers values
func NewValidateBitbucketAccountUsingPOSTCreated() *ValidateBitbucketAccountUsingPOSTCreated {
	return &ValidateBitbucketAccountUsingPOSTCreated{}
}

/*
ValidateBitbucketAccountUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type ValidateBitbucketAccountUsingPOSTCreated struct {
}

// IsSuccess returns true when this validate bitbucket account using p o s t created response has a 2xx status code
func (o *ValidateBitbucketAccountUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate bitbucket account using p o s t created response has a 3xx status code
func (o *ValidateBitbucketAccountUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account using p o s t created response has a 4xx status code
func (o *ValidateBitbucketAccountUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate bitbucket account using p o s t created response has a 5xx status code
func (o *ValidateBitbucketAccountUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account using p o s t created response a status code equal to that given
func (o *ValidateBitbucketAccountUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the validate bitbucket account using p o s t created response
func (o *ValidateBitbucketAccountUsingPOSTCreated) Code() int {
	return 201
}

func (o *ValidateBitbucketAccountUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTCreated", 201)
}

func (o *ValidateBitbucketAccountUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTCreated", 201)
}

func (o *ValidateBitbucketAccountUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateBitbucketAccountUsingPOSTUnauthorized creates a ValidateBitbucketAccountUsingPOSTUnauthorized with default headers values
func NewValidateBitbucketAccountUsingPOSTUnauthorized() *ValidateBitbucketAccountUsingPOSTUnauthorized {
	return &ValidateBitbucketAccountUsingPOSTUnauthorized{}
}

/*
ValidateBitbucketAccountUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ValidateBitbucketAccountUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this validate bitbucket account using p o s t unauthorized response has a 2xx status code
func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate bitbucket account using p o s t unauthorized response has a 3xx status code
func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account using p o s t unauthorized response has a 4xx status code
func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate bitbucket account using p o s t unauthorized response has a 5xx status code
func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account using p o s t unauthorized response a status code equal to that given
func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the validate bitbucket account using p o s t unauthorized response
func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTUnauthorized", 401)
}

func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTUnauthorized", 401)
}

func (o *ValidateBitbucketAccountUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateBitbucketAccountUsingPOSTForbidden creates a ValidateBitbucketAccountUsingPOSTForbidden with default headers values
func NewValidateBitbucketAccountUsingPOSTForbidden() *ValidateBitbucketAccountUsingPOSTForbidden {
	return &ValidateBitbucketAccountUsingPOSTForbidden{}
}

/*
ValidateBitbucketAccountUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ValidateBitbucketAccountUsingPOSTForbidden struct {
}

// IsSuccess returns true when this validate bitbucket account using p o s t forbidden response has a 2xx status code
func (o *ValidateBitbucketAccountUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate bitbucket account using p o s t forbidden response has a 3xx status code
func (o *ValidateBitbucketAccountUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account using p o s t forbidden response has a 4xx status code
func (o *ValidateBitbucketAccountUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate bitbucket account using p o s t forbidden response has a 5xx status code
func (o *ValidateBitbucketAccountUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account using p o s t forbidden response a status code equal to that given
func (o *ValidateBitbucketAccountUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the validate bitbucket account using p o s t forbidden response
func (o *ValidateBitbucketAccountUsingPOSTForbidden) Code() int {
	return 403
}

func (o *ValidateBitbucketAccountUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTForbidden", 403)
}

func (o *ValidateBitbucketAccountUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTForbidden", 403)
}

func (o *ValidateBitbucketAccountUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateBitbucketAccountUsingPOSTNotFound creates a ValidateBitbucketAccountUsingPOSTNotFound with default headers values
func NewValidateBitbucketAccountUsingPOSTNotFound() *ValidateBitbucketAccountUsingPOSTNotFound {
	return &ValidateBitbucketAccountUsingPOSTNotFound{}
}

/*
ValidateBitbucketAccountUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateBitbucketAccountUsingPOSTNotFound struct {
}

// IsSuccess returns true when this validate bitbucket account using p o s t not found response has a 2xx status code
func (o *ValidateBitbucketAccountUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate bitbucket account using p o s t not found response has a 3xx status code
func (o *ValidateBitbucketAccountUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account using p o s t not found response has a 4xx status code
func (o *ValidateBitbucketAccountUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate bitbucket account using p o s t not found response has a 5xx status code
func (o *ValidateBitbucketAccountUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account using p o s t not found response a status code equal to that given
func (o *ValidateBitbucketAccountUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate bitbucket account using p o s t not found response
func (o *ValidateBitbucketAccountUsingPOSTNotFound) Code() int {
	return 404
}

func (o *ValidateBitbucketAccountUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTNotFound", 404)
}

func (o *ValidateBitbucketAccountUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountUsingPOSTNotFound", 404)
}

func (o *ValidateBitbucketAccountUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
