// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateCoderAccountUsingPUTReader is a Reader for the UpdateCoderAccountUsingPUT structure.
type UpdateCoderAccountUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateCoderAccountUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateCoderAccountUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateCoderAccountUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateCoderAccountUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateCoderAccountUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateCoderAccountUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/coder/{id}] updateCoderAccountUsingPUT", response, response.Code())
	}
}

// NewUpdateCoderAccountUsingPUTOK creates a UpdateCoderAccountUsingPUTOK with default headers values
func NewUpdateCoderAccountUsingPUTOK() *UpdateCoderAccountUsingPUTOK {
	return &UpdateCoderAccountUsingPUTOK{}
}

/*
UpdateCoderAccountUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateCoderAccountUsingPUTOK struct {
	Payload *models.CoderAccount
}

// IsSuccess returns true when this update coder account using p u t o k response has a 2xx status code
func (o *UpdateCoderAccountUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update coder account using p u t o k response has a 3xx status code
func (o *UpdateCoderAccountUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account using p u t o k response has a 4xx status code
func (o *UpdateCoderAccountUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update coder account using p u t o k response has a 5xx status code
func (o *UpdateCoderAccountUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account using p u t o k response a status code equal to that given
func (o *UpdateCoderAccountUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update coder account using p u t o k response
func (o *UpdateCoderAccountUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateCoderAccountUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateCoderAccountUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateCoderAccountUsingPUTOK) GetPayload() *models.CoderAccount {
	return o.Payload
}

func (o *UpdateCoderAccountUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoderAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateCoderAccountUsingPUTCreated creates a UpdateCoderAccountUsingPUTCreated with default headers values
func NewUpdateCoderAccountUsingPUTCreated() *UpdateCoderAccountUsingPUTCreated {
	return &UpdateCoderAccountUsingPUTCreated{}
}

/*
UpdateCoderAccountUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateCoderAccountUsingPUTCreated struct {
}

// IsSuccess returns true when this update coder account using p u t created response has a 2xx status code
func (o *UpdateCoderAccountUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update coder account using p u t created response has a 3xx status code
func (o *UpdateCoderAccountUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account using p u t created response has a 4xx status code
func (o *UpdateCoderAccountUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update coder account using p u t created response has a 5xx status code
func (o *UpdateCoderAccountUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account using p u t created response a status code equal to that given
func (o *UpdateCoderAccountUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update coder account using p u t created response
func (o *UpdateCoderAccountUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateCoderAccountUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTCreated", 201)
}

func (o *UpdateCoderAccountUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTCreated", 201)
}

func (o *UpdateCoderAccountUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCoderAccountUsingPUTUnauthorized creates a UpdateCoderAccountUsingPUTUnauthorized with default headers values
func NewUpdateCoderAccountUsingPUTUnauthorized() *UpdateCoderAccountUsingPUTUnauthorized {
	return &UpdateCoderAccountUsingPUTUnauthorized{}
}

/*
UpdateCoderAccountUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateCoderAccountUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update coder account using p u t unauthorized response has a 2xx status code
func (o *UpdateCoderAccountUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update coder account using p u t unauthorized response has a 3xx status code
func (o *UpdateCoderAccountUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account using p u t unauthorized response has a 4xx status code
func (o *UpdateCoderAccountUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update coder account using p u t unauthorized response has a 5xx status code
func (o *UpdateCoderAccountUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account using p u t unauthorized response a status code equal to that given
func (o *UpdateCoderAccountUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update coder account using p u t unauthorized response
func (o *UpdateCoderAccountUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateCoderAccountUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateCoderAccountUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateCoderAccountUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCoderAccountUsingPUTForbidden creates a UpdateCoderAccountUsingPUTForbidden with default headers values
func NewUpdateCoderAccountUsingPUTForbidden() *UpdateCoderAccountUsingPUTForbidden {
	return &UpdateCoderAccountUsingPUTForbidden{}
}

/*
UpdateCoderAccountUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateCoderAccountUsingPUTForbidden struct {
}

// IsSuccess returns true when this update coder account using p u t forbidden response has a 2xx status code
func (o *UpdateCoderAccountUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update coder account using p u t forbidden response has a 3xx status code
func (o *UpdateCoderAccountUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account using p u t forbidden response has a 4xx status code
func (o *UpdateCoderAccountUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update coder account using p u t forbidden response has a 5xx status code
func (o *UpdateCoderAccountUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account using p u t forbidden response a status code equal to that given
func (o *UpdateCoderAccountUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update coder account using p u t forbidden response
func (o *UpdateCoderAccountUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateCoderAccountUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTForbidden", 403)
}

func (o *UpdateCoderAccountUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTForbidden", 403)
}

func (o *UpdateCoderAccountUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateCoderAccountUsingPUTNotFound creates a UpdateCoderAccountUsingPUTNotFound with default headers values
func NewUpdateCoderAccountUsingPUTNotFound() *UpdateCoderAccountUsingPUTNotFound {
	return &UpdateCoderAccountUsingPUTNotFound{}
}

/*
UpdateCoderAccountUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateCoderAccountUsingPUTNotFound struct {
}

// IsSuccess returns true when this update coder account using p u t not found response has a 2xx status code
func (o *UpdateCoderAccountUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update coder account using p u t not found response has a 3xx status code
func (o *UpdateCoderAccountUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update coder account using p u t not found response has a 4xx status code
func (o *UpdateCoderAccountUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update coder account using p u t not found response has a 5xx status code
func (o *UpdateCoderAccountUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update coder account using p u t not found response a status code equal to that given
func (o *UpdateCoderAccountUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update coder account using p u t not found response
func (o *UpdateCoderAccountUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateCoderAccountUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTNotFound", 404)
}

func (o *UpdateCoderAccountUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/coder/{id}][%d] updateCoderAccountUsingPUTNotFound", 404)
}

func (o *UpdateCoderAccountUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
