// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllAccountsReader is a Reader for the GetAllAccounts structure.
type GetAllAccountsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllAccountsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllAccountsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllAccountsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllAccountsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllAccountsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllAccountsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/] getAllAccounts", response, response.Code())
	}
}

// NewGetAllAccountsOK creates a GetAllAccountsOK with default headers values
func NewGetAllAccountsOK() *GetAllAccountsOK {
	return &GetAllAccountsOK{}
}

/*
GetAllAccountsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllAccountsOK struct {
	Payload []*models.Account
}

// IsSuccess returns true when this get all accounts o k response has a 2xx status code
func (o *GetAllAccountsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all accounts o k response has a 3xx status code
func (o *GetAllAccountsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all accounts o k response has a 4xx status code
func (o *GetAllAccountsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all accounts o k response has a 5xx status code
func (o *GetAllAccountsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all accounts o k response a status code equal to that given
func (o *GetAllAccountsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all accounts o k response
func (o *GetAllAccountsOK) Code() int {
	return 200
}

func (o *GetAllAccountsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsOK %s", 200, payload)
}

func (o *GetAllAccountsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsOK %s", 200, payload)
}

func (o *GetAllAccountsOK) GetPayload() []*models.Account {
	return o.Payload
}

func (o *GetAllAccountsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAccountsBadRequest creates a GetAllAccountsBadRequest with default headers values
func NewGetAllAccountsBadRequest() *GetAllAccountsBadRequest {
	return &GetAllAccountsBadRequest{}
}

/*
GetAllAccountsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllAccountsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all accounts bad request response has a 2xx status code
func (o *GetAllAccountsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all accounts bad request response has a 3xx status code
func (o *GetAllAccountsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all accounts bad request response has a 4xx status code
func (o *GetAllAccountsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all accounts bad request response has a 5xx status code
func (o *GetAllAccountsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all accounts bad request response a status code equal to that given
func (o *GetAllAccountsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all accounts bad request response
func (o *GetAllAccountsBadRequest) Code() int {
	return 400
}

func (o *GetAllAccountsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsBadRequest %s", 400, payload)
}

func (o *GetAllAccountsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsBadRequest %s", 400, payload)
}

func (o *GetAllAccountsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllAccountsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAccountsNotFound creates a GetAllAccountsNotFound with default headers values
func NewGetAllAccountsNotFound() *GetAllAccountsNotFound {
	return &GetAllAccountsNotFound{}
}

/*
GetAllAccountsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllAccountsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all accounts not found response has a 2xx status code
func (o *GetAllAccountsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all accounts not found response has a 3xx status code
func (o *GetAllAccountsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all accounts not found response has a 4xx status code
func (o *GetAllAccountsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all accounts not found response has a 5xx status code
func (o *GetAllAccountsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all accounts not found response a status code equal to that given
func (o *GetAllAccountsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all accounts not found response
func (o *GetAllAccountsNotFound) Code() int {
	return 404
}

func (o *GetAllAccountsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsNotFound %s", 404, payload)
}

func (o *GetAllAccountsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsNotFound %s", 404, payload)
}

func (o *GetAllAccountsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllAccountsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAccountsMethodNotAllowed creates a GetAllAccountsMethodNotAllowed with default headers values
func NewGetAllAccountsMethodNotAllowed() *GetAllAccountsMethodNotAllowed {
	return &GetAllAccountsMethodNotAllowed{}
}

/*
GetAllAccountsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllAccountsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all accounts method not allowed response has a 2xx status code
func (o *GetAllAccountsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all accounts method not allowed response has a 3xx status code
func (o *GetAllAccountsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all accounts method not allowed response has a 4xx status code
func (o *GetAllAccountsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all accounts method not allowed response has a 5xx status code
func (o *GetAllAccountsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all accounts method not allowed response a status code equal to that given
func (o *GetAllAccountsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all accounts method not allowed response
func (o *GetAllAccountsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllAccountsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllAccountsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllAccountsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllAccountsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllAccountsInternalServerError creates a GetAllAccountsInternalServerError with default headers values
func NewGetAllAccountsInternalServerError() *GetAllAccountsInternalServerError {
	return &GetAllAccountsInternalServerError{}
}

/*
GetAllAccountsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllAccountsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all accounts internal server error response has a 2xx status code
func (o *GetAllAccountsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all accounts internal server error response has a 3xx status code
func (o *GetAllAccountsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all accounts internal server error response has a 4xx status code
func (o *GetAllAccountsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all accounts internal server error response has a 5xx status code
func (o *GetAllAccountsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all accounts internal server error response a status code equal to that given
func (o *GetAllAccountsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all accounts internal server error response
func (o *GetAllAccountsInternalServerError) Code() int {
	return 500
}

func (o *GetAllAccountsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsInternalServerError %s", 500, payload)
}

func (o *GetAllAccountsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/][%d] getAllAccountsInternalServerError %s", 500, payload)
}

func (o *GetAllAccountsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllAccountsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
