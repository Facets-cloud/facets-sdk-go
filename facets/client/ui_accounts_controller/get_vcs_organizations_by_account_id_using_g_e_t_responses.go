// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetVcsOrganizationsByAccountIDUsingGETReader is a Reader for the GetVcsOrganizationsByAccountIDUsingGET structure.
type GetVcsOrganizationsByAccountIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVcsOrganizationsByAccountIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVcsOrganizationsByAccountIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetVcsOrganizationsByAccountIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetVcsOrganizationsByAccountIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVcsOrganizationsByAccountIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}] getVcsOrganizationsByAccountIdUsingGET", response, response.Code())
	}
}

// NewGetVcsOrganizationsByAccountIDUsingGETOK creates a GetVcsOrganizationsByAccountIDUsingGETOK with default headers values
func NewGetVcsOrganizationsByAccountIDUsingGETOK() *GetVcsOrganizationsByAccountIDUsingGETOK {
	return &GetVcsOrganizationsByAccountIDUsingGETOK{}
}

/*
GetVcsOrganizationsByAccountIDUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetVcsOrganizationsByAccountIDUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get vcs organizations by account Id using g e t o k response has a 2xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get vcs organizations by account Id using g e t o k response has a 3xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs organizations by account Id using g e t o k response has a 4xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get vcs organizations by account Id using g e t o k response has a 5xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs organizations by account Id using g e t o k response a status code equal to that given
func (o *GetVcsOrganizationsByAccountIDUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get vcs organizations by account Id using g e t o k response
func (o *GetVcsOrganizationsByAccountIDUsingGETOK) Code() int {
	return 200
}

func (o *GetVcsOrganizationsByAccountIDUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETOK %s", 200, payload)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETOK %s", 200, payload)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetVcsOrganizationsByAccountIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVcsOrganizationsByAccountIDUsingGETUnauthorized creates a GetVcsOrganizationsByAccountIDUsingGETUnauthorized with default headers values
func NewGetVcsOrganizationsByAccountIDUsingGETUnauthorized() *GetVcsOrganizationsByAccountIDUsingGETUnauthorized {
	return &GetVcsOrganizationsByAccountIDUsingGETUnauthorized{}
}

/*
GetVcsOrganizationsByAccountIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetVcsOrganizationsByAccountIDUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get vcs organizations by account Id using g e t unauthorized response has a 2xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs organizations by account Id using g e t unauthorized response has a 3xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs organizations by account Id using g e t unauthorized response has a 4xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs organizations by account Id using g e t unauthorized response has a 5xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs organizations by account Id using g e t unauthorized response a status code equal to that given
func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get vcs organizations by account Id using g e t unauthorized response
func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETUnauthorized", 401)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETUnauthorized", 401)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVcsOrganizationsByAccountIDUsingGETForbidden creates a GetVcsOrganizationsByAccountIDUsingGETForbidden with default headers values
func NewGetVcsOrganizationsByAccountIDUsingGETForbidden() *GetVcsOrganizationsByAccountIDUsingGETForbidden {
	return &GetVcsOrganizationsByAccountIDUsingGETForbidden{}
}

/*
GetVcsOrganizationsByAccountIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetVcsOrganizationsByAccountIDUsingGETForbidden struct {
}

// IsSuccess returns true when this get vcs organizations by account Id using g e t forbidden response has a 2xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs organizations by account Id using g e t forbidden response has a 3xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs organizations by account Id using g e t forbidden response has a 4xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs organizations by account Id using g e t forbidden response has a 5xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs organizations by account Id using g e t forbidden response a status code equal to that given
func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get vcs organizations by account Id using g e t forbidden response
func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) Code() int {
	return 403
}

func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETForbidden", 403)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETForbidden", 403)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetVcsOrganizationsByAccountIDUsingGETNotFound creates a GetVcsOrganizationsByAccountIDUsingGETNotFound with default headers values
func NewGetVcsOrganizationsByAccountIDUsingGETNotFound() *GetVcsOrganizationsByAccountIDUsingGETNotFound {
	return &GetVcsOrganizationsByAccountIDUsingGETNotFound{}
}

/*
GetVcsOrganizationsByAccountIDUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVcsOrganizationsByAccountIDUsingGETNotFound struct {
}

// IsSuccess returns true when this get vcs organizations by account Id using g e t not found response has a 2xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get vcs organizations by account Id using g e t not found response has a 3xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get vcs organizations by account Id using g e t not found response has a 4xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get vcs organizations by account Id using g e t not found response has a 5xx status code
func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get vcs organizations by account Id using g e t not found response a status code equal to that given
func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get vcs organizations by account Id using g e t not found response
func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) Code() int {
	return 404
}

func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETNotFound", 404)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/vcs-orgs/{accountId}][%d] getVcsOrganizationsByAccountIdUsingGETNotFound", 404)
}

func (o *GetVcsOrganizationsByAccountIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
