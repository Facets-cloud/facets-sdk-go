// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateAwsAccountReader is a Reader for the UpdateAwsAccount structure.
type UpdateAwsAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAwsAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAwsAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAwsAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAwsAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateAwsAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAwsAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/aws/{id}] updateAwsAccount", response, response.Code())
	}
}

// NewUpdateAwsAccountOK creates a UpdateAwsAccountOK with default headers values
func NewUpdateAwsAccountOK() *UpdateAwsAccountOK {
	return &UpdateAwsAccountOK{}
}

/*
UpdateAwsAccountOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAwsAccountOK struct {
	Payload *models.AwsAccount
}

// IsSuccess returns true when this update aws account o k response has a 2xx status code
func (o *UpdateAwsAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update aws account o k response has a 3xx status code
func (o *UpdateAwsAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account o k response has a 4xx status code
func (o *UpdateAwsAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update aws account o k response has a 5xx status code
func (o *UpdateAwsAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account o k response a status code equal to that given
func (o *UpdateAwsAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update aws account o k response
func (o *UpdateAwsAccountOK) Code() int {
	return 200
}

func (o *UpdateAwsAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountOK %s", 200, payload)
}

func (o *UpdateAwsAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountOK %s", 200, payload)
}

func (o *UpdateAwsAccountOK) GetPayload() *models.AwsAccount {
	return o.Payload
}

func (o *UpdateAwsAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AwsAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAwsAccountBadRequest creates a UpdateAwsAccountBadRequest with default headers values
func NewUpdateAwsAccountBadRequest() *UpdateAwsAccountBadRequest {
	return &UpdateAwsAccountBadRequest{}
}

/*
UpdateAwsAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAwsAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update aws account bad request response has a 2xx status code
func (o *UpdateAwsAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws account bad request response has a 3xx status code
func (o *UpdateAwsAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account bad request response has a 4xx status code
func (o *UpdateAwsAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws account bad request response has a 5xx status code
func (o *UpdateAwsAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account bad request response a status code equal to that given
func (o *UpdateAwsAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update aws account bad request response
func (o *UpdateAwsAccountBadRequest) Code() int {
	return 400
}

func (o *UpdateAwsAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountBadRequest %s", 400, payload)
}

func (o *UpdateAwsAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountBadRequest %s", 400, payload)
}

func (o *UpdateAwsAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAwsAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAwsAccountNotFound creates a UpdateAwsAccountNotFound with default headers values
func NewUpdateAwsAccountNotFound() *UpdateAwsAccountNotFound {
	return &UpdateAwsAccountNotFound{}
}

/*
UpdateAwsAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAwsAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update aws account not found response has a 2xx status code
func (o *UpdateAwsAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws account not found response has a 3xx status code
func (o *UpdateAwsAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account not found response has a 4xx status code
func (o *UpdateAwsAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws account not found response has a 5xx status code
func (o *UpdateAwsAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account not found response a status code equal to that given
func (o *UpdateAwsAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update aws account not found response
func (o *UpdateAwsAccountNotFound) Code() int {
	return 404
}

func (o *UpdateAwsAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountNotFound %s", 404, payload)
}

func (o *UpdateAwsAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountNotFound %s", 404, payload)
}

func (o *UpdateAwsAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAwsAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAwsAccountMethodNotAllowed creates a UpdateAwsAccountMethodNotAllowed with default headers values
func NewUpdateAwsAccountMethodNotAllowed() *UpdateAwsAccountMethodNotAllowed {
	return &UpdateAwsAccountMethodNotAllowed{}
}

/*
UpdateAwsAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateAwsAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update aws account method not allowed response has a 2xx status code
func (o *UpdateAwsAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws account method not allowed response has a 3xx status code
func (o *UpdateAwsAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account method not allowed response has a 4xx status code
func (o *UpdateAwsAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws account method not allowed response has a 5xx status code
func (o *UpdateAwsAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account method not allowed response a status code equal to that given
func (o *UpdateAwsAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update aws account method not allowed response
func (o *UpdateAwsAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateAwsAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAwsAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAwsAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAwsAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAwsAccountInternalServerError creates a UpdateAwsAccountInternalServerError with default headers values
func NewUpdateAwsAccountInternalServerError() *UpdateAwsAccountInternalServerError {
	return &UpdateAwsAccountInternalServerError{}
}

/*
UpdateAwsAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateAwsAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update aws account internal server error response has a 2xx status code
func (o *UpdateAwsAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws account internal server error response has a 3xx status code
func (o *UpdateAwsAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account internal server error response has a 4xx status code
func (o *UpdateAwsAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update aws account internal server error response has a 5xx status code
func (o *UpdateAwsAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update aws account internal server error response a status code equal to that given
func (o *UpdateAwsAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update aws account internal server error response
func (o *UpdateAwsAccountInternalServerError) Code() int {
	return 500
}

func (o *UpdateAwsAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountInternalServerError %s", 500, payload)
}

func (o *UpdateAwsAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountInternalServerError %s", 500, payload)
}

func (o *UpdateAwsAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAwsAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
