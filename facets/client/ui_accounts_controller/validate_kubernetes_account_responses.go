// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ValidateKubernetesAccountReader is a Reader for the ValidateKubernetesAccount structure.
type ValidateKubernetesAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateKubernetesAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateKubernetesAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateKubernetesAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateKubernetesAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewValidateKubernetesAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateKubernetesAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/kubernetes/validate] validateKubernetesAccount", response, response.Code())
	}
}

// NewValidateKubernetesAccountOK creates a ValidateKubernetesAccountOK with default headers values
func NewValidateKubernetesAccountOK() *ValidateKubernetesAccountOK {
	return &ValidateKubernetesAccountOK{}
}

/*
ValidateKubernetesAccountOK describes a response with status code 200, with default header values.

OK
*/
type ValidateKubernetesAccountOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this validate kubernetes account o k response has a 2xx status code
func (o *ValidateKubernetesAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate kubernetes account o k response has a 3xx status code
func (o *ValidateKubernetesAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate kubernetes account o k response has a 4xx status code
func (o *ValidateKubernetesAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate kubernetes account o k response has a 5xx status code
func (o *ValidateKubernetesAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate kubernetes account o k response a status code equal to that given
func (o *ValidateKubernetesAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate kubernetes account o k response
func (o *ValidateKubernetesAccountOK) Code() int {
	return 200
}

func (o *ValidateKubernetesAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountOK %s", 200, payload)
}

func (o *ValidateKubernetesAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountOK %s", 200, payload)
}

func (o *ValidateKubernetesAccountOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ValidateKubernetesAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateKubernetesAccountBadRequest creates a ValidateKubernetesAccountBadRequest with default headers values
func NewValidateKubernetesAccountBadRequest() *ValidateKubernetesAccountBadRequest {
	return &ValidateKubernetesAccountBadRequest{}
}

/*
ValidateKubernetesAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateKubernetesAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate kubernetes account bad request response has a 2xx status code
func (o *ValidateKubernetesAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate kubernetes account bad request response has a 3xx status code
func (o *ValidateKubernetesAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate kubernetes account bad request response has a 4xx status code
func (o *ValidateKubernetesAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate kubernetes account bad request response has a 5xx status code
func (o *ValidateKubernetesAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate kubernetes account bad request response a status code equal to that given
func (o *ValidateKubernetesAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate kubernetes account bad request response
func (o *ValidateKubernetesAccountBadRequest) Code() int {
	return 400
}

func (o *ValidateKubernetesAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountBadRequest %s", 400, payload)
}

func (o *ValidateKubernetesAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountBadRequest %s", 400, payload)
}

func (o *ValidateKubernetesAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateKubernetesAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateKubernetesAccountNotFound creates a ValidateKubernetesAccountNotFound with default headers values
func NewValidateKubernetesAccountNotFound() *ValidateKubernetesAccountNotFound {
	return &ValidateKubernetesAccountNotFound{}
}

/*
ValidateKubernetesAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateKubernetesAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate kubernetes account not found response has a 2xx status code
func (o *ValidateKubernetesAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate kubernetes account not found response has a 3xx status code
func (o *ValidateKubernetesAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate kubernetes account not found response has a 4xx status code
func (o *ValidateKubernetesAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate kubernetes account not found response has a 5xx status code
func (o *ValidateKubernetesAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate kubernetes account not found response a status code equal to that given
func (o *ValidateKubernetesAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate kubernetes account not found response
func (o *ValidateKubernetesAccountNotFound) Code() int {
	return 404
}

func (o *ValidateKubernetesAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountNotFound %s", 404, payload)
}

func (o *ValidateKubernetesAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountNotFound %s", 404, payload)
}

func (o *ValidateKubernetesAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateKubernetesAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateKubernetesAccountMethodNotAllowed creates a ValidateKubernetesAccountMethodNotAllowed with default headers values
func NewValidateKubernetesAccountMethodNotAllowed() *ValidateKubernetesAccountMethodNotAllowed {
	return &ValidateKubernetesAccountMethodNotAllowed{}
}

/*
ValidateKubernetesAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ValidateKubernetesAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate kubernetes account method not allowed response has a 2xx status code
func (o *ValidateKubernetesAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate kubernetes account method not allowed response has a 3xx status code
func (o *ValidateKubernetesAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate kubernetes account method not allowed response has a 4xx status code
func (o *ValidateKubernetesAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate kubernetes account method not allowed response has a 5xx status code
func (o *ValidateKubernetesAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this validate kubernetes account method not allowed response a status code equal to that given
func (o *ValidateKubernetesAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the validate kubernetes account method not allowed response
func (o *ValidateKubernetesAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *ValidateKubernetesAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateKubernetesAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateKubernetesAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateKubernetesAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateKubernetesAccountInternalServerError creates a ValidateKubernetesAccountInternalServerError with default headers values
func NewValidateKubernetesAccountInternalServerError() *ValidateKubernetesAccountInternalServerError {
	return &ValidateKubernetesAccountInternalServerError{}
}

/*
ValidateKubernetesAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ValidateKubernetesAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate kubernetes account internal server error response has a 2xx status code
func (o *ValidateKubernetesAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate kubernetes account internal server error response has a 3xx status code
func (o *ValidateKubernetesAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate kubernetes account internal server error response has a 4xx status code
func (o *ValidateKubernetesAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate kubernetes account internal server error response has a 5xx status code
func (o *ValidateKubernetesAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate kubernetes account internal server error response a status code equal to that given
func (o *ValidateKubernetesAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate kubernetes account internal server error response
func (o *ValidateKubernetesAccountInternalServerError) Code() int {
	return 500
}

func (o *ValidateKubernetesAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountInternalServerError %s", 500, payload)
}

func (o *ValidateKubernetesAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/kubernetes/validate][%d] validateKubernetesAccountInternalServerError %s", 500, payload)
}

func (o *ValidateKubernetesAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateKubernetesAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
