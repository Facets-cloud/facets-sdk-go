// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewUpdateKubernetesAccountUsingPUTParams creates a new UpdateKubernetesAccountUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateKubernetesAccountUsingPUTParams() *UpdateKubernetesAccountUsingPUTParams {
	return &UpdateKubernetesAccountUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateKubernetesAccountUsingPUTParamsWithTimeout creates a new UpdateKubernetesAccountUsingPUTParams object
// with the ability to set a timeout on a request.
func NewUpdateKubernetesAccountUsingPUTParamsWithTimeout(timeout time.Duration) *UpdateKubernetesAccountUsingPUTParams {
	return &UpdateKubernetesAccountUsingPUTParams{
		timeout: timeout,
	}
}

// NewUpdateKubernetesAccountUsingPUTParamsWithContext creates a new UpdateKubernetesAccountUsingPUTParams object
// with the ability to set a context for a request.
func NewUpdateKubernetesAccountUsingPUTParamsWithContext(ctx context.Context) *UpdateKubernetesAccountUsingPUTParams {
	return &UpdateKubernetesAccountUsingPUTParams{
		Context: ctx,
	}
}

// NewUpdateKubernetesAccountUsingPUTParamsWithHTTPClient creates a new UpdateKubernetesAccountUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateKubernetesAccountUsingPUTParamsWithHTTPClient(client *http.Client) *UpdateKubernetesAccountUsingPUTParams {
	return &UpdateKubernetesAccountUsingPUTParams{
		HTTPClient: client,
	}
}

/*
UpdateKubernetesAccountUsingPUTParams contains all the parameters to send to the API endpoint

	for the update kubernetes account using p u t operation.

	Typically these are written to a http.Request.
*/
type UpdateKubernetesAccountUsingPUTParams struct {

	/* ID.

	   id
	*/
	ID string

	/* K8sAccountRequest.

	   k8sAccountRequest
	*/
	K8sAccountRequest *models.KubernetesAccount

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update kubernetes account using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateKubernetesAccountUsingPUTParams) WithDefaults() *UpdateKubernetesAccountUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update kubernetes account using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateKubernetesAccountUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) WithTimeout(timeout time.Duration) *UpdateKubernetesAccountUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) WithContext(ctx context.Context) *UpdateKubernetesAccountUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) WithHTTPClient(client *http.Client) *UpdateKubernetesAccountUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) WithID(id string) *UpdateKubernetesAccountUsingPUTParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) SetID(id string) {
	o.ID = id
}

// WithK8sAccountRequest adds the k8sAccountRequest to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) WithK8sAccountRequest(k8sAccountRequest *models.KubernetesAccount) *UpdateKubernetesAccountUsingPUTParams {
	o.SetK8sAccountRequest(k8sAccountRequest)
	return o
}

// SetK8sAccountRequest adds the k8sAccountRequest to the update kubernetes account using p u t params
func (o *UpdateKubernetesAccountUsingPUTParams) SetK8sAccountRequest(k8sAccountRequest *models.KubernetesAccount) {
	o.K8sAccountRequest = k8sAccountRequest
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateKubernetesAccountUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param id
	if err := r.SetPathParam("id", o.ID); err != nil {
		return err
	}
	if o.K8sAccountRequest != nil {
		if err := r.SetBodyParam(o.K8sAccountRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
