// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAccountsByTypeUsingGETReader is a Reader for the GetAccountsByTypeUsingGET structure.
type GetAccountsByTypeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountsByTypeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountsByTypeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAccountsByTypeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountsByTypeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountsByTypeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/type/{type}] getAccountsByTypeUsingGET", response, response.Code())
	}
}

// NewGetAccountsByTypeUsingGETOK creates a GetAccountsByTypeUsingGETOK with default headers values
func NewGetAccountsByTypeUsingGETOK() *GetAccountsByTypeUsingGETOK {
	return &GetAccountsByTypeUsingGETOK{}
}

/*
GetAccountsByTypeUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAccountsByTypeUsingGETOK struct {
	Payload []*models.Account
}

// IsSuccess returns true when this get accounts by type using g e t o k response has a 2xx status code
func (o *GetAccountsByTypeUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get accounts by type using g e t o k response has a 3xx status code
func (o *GetAccountsByTypeUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type using g e t o k response has a 4xx status code
func (o *GetAccountsByTypeUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get accounts by type using g e t o k response has a 5xx status code
func (o *GetAccountsByTypeUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type using g e t o k response a status code equal to that given
func (o *GetAccountsByTypeUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get accounts by type using g e t o k response
func (o *GetAccountsByTypeUsingGETOK) Code() int {
	return 200
}

func (o *GetAccountsByTypeUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETOK %s", 200, payload)
}

func (o *GetAccountsByTypeUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETOK %s", 200, payload)
}

func (o *GetAccountsByTypeUsingGETOK) GetPayload() []*models.Account {
	return o.Payload
}

func (o *GetAccountsByTypeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountsByTypeUsingGETUnauthorized creates a GetAccountsByTypeUsingGETUnauthorized with default headers values
func NewGetAccountsByTypeUsingGETUnauthorized() *GetAccountsByTypeUsingGETUnauthorized {
	return &GetAccountsByTypeUsingGETUnauthorized{}
}

/*
GetAccountsByTypeUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAccountsByTypeUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get accounts by type using g e t unauthorized response has a 2xx status code
func (o *GetAccountsByTypeUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts by type using g e t unauthorized response has a 3xx status code
func (o *GetAccountsByTypeUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type using g e t unauthorized response has a 4xx status code
func (o *GetAccountsByTypeUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts by type using g e t unauthorized response has a 5xx status code
func (o *GetAccountsByTypeUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type using g e t unauthorized response a status code equal to that given
func (o *GetAccountsByTypeUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get accounts by type using g e t unauthorized response
func (o *GetAccountsByTypeUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAccountsByTypeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETUnauthorized", 401)
}

func (o *GetAccountsByTypeUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETUnauthorized", 401)
}

func (o *GetAccountsByTypeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountsByTypeUsingGETForbidden creates a GetAccountsByTypeUsingGETForbidden with default headers values
func NewGetAccountsByTypeUsingGETForbidden() *GetAccountsByTypeUsingGETForbidden {
	return &GetAccountsByTypeUsingGETForbidden{}
}

/*
GetAccountsByTypeUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAccountsByTypeUsingGETForbidden struct {
}

// IsSuccess returns true when this get accounts by type using g e t forbidden response has a 2xx status code
func (o *GetAccountsByTypeUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts by type using g e t forbidden response has a 3xx status code
func (o *GetAccountsByTypeUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type using g e t forbidden response has a 4xx status code
func (o *GetAccountsByTypeUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts by type using g e t forbidden response has a 5xx status code
func (o *GetAccountsByTypeUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type using g e t forbidden response a status code equal to that given
func (o *GetAccountsByTypeUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get accounts by type using g e t forbidden response
func (o *GetAccountsByTypeUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAccountsByTypeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETForbidden", 403)
}

func (o *GetAccountsByTypeUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETForbidden", 403)
}

func (o *GetAccountsByTypeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountsByTypeUsingGETNotFound creates a GetAccountsByTypeUsingGETNotFound with default headers values
func NewGetAccountsByTypeUsingGETNotFound() *GetAccountsByTypeUsingGETNotFound {
	return &GetAccountsByTypeUsingGETNotFound{}
}

/*
GetAccountsByTypeUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAccountsByTypeUsingGETNotFound struct {
}

// IsSuccess returns true when this get accounts by type using g e t not found response has a 2xx status code
func (o *GetAccountsByTypeUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get accounts by type using g e t not found response has a 3xx status code
func (o *GetAccountsByTypeUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get accounts by type using g e t not found response has a 4xx status code
func (o *GetAccountsByTypeUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get accounts by type using g e t not found response has a 5xx status code
func (o *GetAccountsByTypeUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get accounts by type using g e t not found response a status code equal to that given
func (o *GetAccountsByTypeUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get accounts by type using g e t not found response
func (o *GetAccountsByTypeUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAccountsByTypeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETNotFound", 404)
}

func (o *GetAccountsByTypeUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/type/{type}][%d] getAccountsByTypeUsingGETNotFound", 404)
}

func (o *GetAccountsByTypeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
