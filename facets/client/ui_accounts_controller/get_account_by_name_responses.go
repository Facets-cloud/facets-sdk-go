// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAccountByNameReader is a Reader for the GetAccountByName structure.
type GetAccountByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAccountByNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccountByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/name/{name}] getAccountByName", response, response.Code())
	}
}

// NewGetAccountByNameOK creates a GetAccountByNameOK with default headers values
func NewGetAccountByNameOK() *GetAccountByNameOK {
	return &GetAccountByNameOK{}
}

/*
GetAccountByNameOK describes a response with status code 200, with default header values.

OK
*/
type GetAccountByNameOK struct {
	Payload *models.Account
}

// IsSuccess returns true when this get account by name o k response has a 2xx status code
func (o *GetAccountByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get account by name o k response has a 3xx status code
func (o *GetAccountByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account by name o k response has a 4xx status code
func (o *GetAccountByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account by name o k response has a 5xx status code
func (o *GetAccountByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get account by name o k response a status code equal to that given
func (o *GetAccountByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get account by name o k response
func (o *GetAccountByNameOK) Code() int {
	return 200
}

func (o *GetAccountByNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameOK %s", 200, payload)
}

func (o *GetAccountByNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameOK %s", 200, payload)
}

func (o *GetAccountByNameOK) GetPayload() *models.Account {
	return o.Payload
}

func (o *GetAccountByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Account)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountByNameBadRequest creates a GetAccountByNameBadRequest with default headers values
func NewGetAccountByNameBadRequest() *GetAccountByNameBadRequest {
	return &GetAccountByNameBadRequest{}
}

/*
GetAccountByNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAccountByNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account by name bad request response has a 2xx status code
func (o *GetAccountByNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account by name bad request response has a 3xx status code
func (o *GetAccountByNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account by name bad request response has a 4xx status code
func (o *GetAccountByNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account by name bad request response has a 5xx status code
func (o *GetAccountByNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get account by name bad request response a status code equal to that given
func (o *GetAccountByNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get account by name bad request response
func (o *GetAccountByNameBadRequest) Code() int {
	return 400
}

func (o *GetAccountByNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameBadRequest %s", 400, payload)
}

func (o *GetAccountByNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameBadRequest %s", 400, payload)
}

func (o *GetAccountByNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountByNameNotFound creates a GetAccountByNameNotFound with default headers values
func NewGetAccountByNameNotFound() *GetAccountByNameNotFound {
	return &GetAccountByNameNotFound{}
}

/*
GetAccountByNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAccountByNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account by name not found response has a 2xx status code
func (o *GetAccountByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account by name not found response has a 3xx status code
func (o *GetAccountByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account by name not found response has a 4xx status code
func (o *GetAccountByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account by name not found response has a 5xx status code
func (o *GetAccountByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get account by name not found response a status code equal to that given
func (o *GetAccountByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get account by name not found response
func (o *GetAccountByNameNotFound) Code() int {
	return 404
}

func (o *GetAccountByNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameNotFound %s", 404, payload)
}

func (o *GetAccountByNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameNotFound %s", 404, payload)
}

func (o *GetAccountByNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountByNameMethodNotAllowed creates a GetAccountByNameMethodNotAllowed with default headers values
func NewGetAccountByNameMethodNotAllowed() *GetAccountByNameMethodNotAllowed {
	return &GetAccountByNameMethodNotAllowed{}
}

/*
GetAccountByNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAccountByNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account by name method not allowed response has a 2xx status code
func (o *GetAccountByNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account by name method not allowed response has a 3xx status code
func (o *GetAccountByNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account by name method not allowed response has a 4xx status code
func (o *GetAccountByNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account by name method not allowed response has a 5xx status code
func (o *GetAccountByNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get account by name method not allowed response a status code equal to that given
func (o *GetAccountByNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get account by name method not allowed response
func (o *GetAccountByNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAccountByNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetAccountByNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetAccountByNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountByNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountByNameInternalServerError creates a GetAccountByNameInternalServerError with default headers values
func NewGetAccountByNameInternalServerError() *GetAccountByNameInternalServerError {
	return &GetAccountByNameInternalServerError{}
}

/*
GetAccountByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAccountByNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account by name internal server error response has a 2xx status code
func (o *GetAccountByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account by name internal server error response has a 3xx status code
func (o *GetAccountByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account by name internal server error response has a 4xx status code
func (o *GetAccountByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account by name internal server error response has a 5xx status code
func (o *GetAccountByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get account by name internal server error response a status code equal to that given
func (o *GetAccountByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get account by name internal server error response
func (o *GetAccountByNameInternalServerError) Code() int {
	return 500
}

func (o *GetAccountByNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameInternalServerError %s", 500, payload)
}

func (o *GetAccountByNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/name/{name}][%d] getAccountByNameInternalServerError %s", 500, payload)
}

func (o *GetAccountByNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
