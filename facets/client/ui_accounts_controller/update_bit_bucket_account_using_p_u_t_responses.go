// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateBitBucketAccountUsingPUTReader is a Reader for the UpdateBitBucketAccountUsingPUT structure.
type UpdateBitBucketAccountUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBitBucketAccountUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBitBucketAccountUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateBitBucketAccountUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateBitBucketAccountUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBitBucketAccountUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBitBucketAccountUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/bitbucket/{id}] updateBitBucketAccountUsingPUT", response, response.Code())
	}
}

// NewUpdateBitBucketAccountUsingPUTOK creates a UpdateBitBucketAccountUsingPUTOK with default headers values
func NewUpdateBitBucketAccountUsingPUTOK() *UpdateBitBucketAccountUsingPUTOK {
	return &UpdateBitBucketAccountUsingPUTOK{}
}

/*
UpdateBitBucketAccountUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateBitBucketAccountUsingPUTOK struct {
	Payload *models.BitBucketAccount
}

// IsSuccess returns true when this update bit bucket account using p u t o k response has a 2xx status code
func (o *UpdateBitBucketAccountUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update bit bucket account using p u t o k response has a 3xx status code
func (o *UpdateBitBucketAccountUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account using p u t o k response has a 4xx status code
func (o *UpdateBitBucketAccountUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bit bucket account using p u t o k response has a 5xx status code
func (o *UpdateBitBucketAccountUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account using p u t o k response a status code equal to that given
func (o *UpdateBitBucketAccountUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update bit bucket account using p u t o k response
func (o *UpdateBitBucketAccountUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateBitBucketAccountUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateBitBucketAccountUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateBitBucketAccountUsingPUTOK) GetPayload() *models.BitBucketAccount {
	return o.Payload
}

func (o *UpdateBitBucketAccountUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BitBucketAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBitBucketAccountUsingPUTCreated creates a UpdateBitBucketAccountUsingPUTCreated with default headers values
func NewUpdateBitBucketAccountUsingPUTCreated() *UpdateBitBucketAccountUsingPUTCreated {
	return &UpdateBitBucketAccountUsingPUTCreated{}
}

/*
UpdateBitBucketAccountUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateBitBucketAccountUsingPUTCreated struct {
}

// IsSuccess returns true when this update bit bucket account using p u t created response has a 2xx status code
func (o *UpdateBitBucketAccountUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update bit bucket account using p u t created response has a 3xx status code
func (o *UpdateBitBucketAccountUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account using p u t created response has a 4xx status code
func (o *UpdateBitBucketAccountUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update bit bucket account using p u t created response has a 5xx status code
func (o *UpdateBitBucketAccountUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account using p u t created response a status code equal to that given
func (o *UpdateBitBucketAccountUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update bit bucket account using p u t created response
func (o *UpdateBitBucketAccountUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateBitBucketAccountUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTCreated", 201)
}

func (o *UpdateBitBucketAccountUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTCreated", 201)
}

func (o *UpdateBitBucketAccountUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBitBucketAccountUsingPUTUnauthorized creates a UpdateBitBucketAccountUsingPUTUnauthorized with default headers values
func NewUpdateBitBucketAccountUsingPUTUnauthorized() *UpdateBitBucketAccountUsingPUTUnauthorized {
	return &UpdateBitBucketAccountUsingPUTUnauthorized{}
}

/*
UpdateBitBucketAccountUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBitBucketAccountUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update bit bucket account using p u t unauthorized response has a 2xx status code
func (o *UpdateBitBucketAccountUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bit bucket account using p u t unauthorized response has a 3xx status code
func (o *UpdateBitBucketAccountUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account using p u t unauthorized response has a 4xx status code
func (o *UpdateBitBucketAccountUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bit bucket account using p u t unauthorized response has a 5xx status code
func (o *UpdateBitBucketAccountUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account using p u t unauthorized response a status code equal to that given
func (o *UpdateBitBucketAccountUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update bit bucket account using p u t unauthorized response
func (o *UpdateBitBucketAccountUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateBitBucketAccountUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateBitBucketAccountUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateBitBucketAccountUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBitBucketAccountUsingPUTForbidden creates a UpdateBitBucketAccountUsingPUTForbidden with default headers values
func NewUpdateBitBucketAccountUsingPUTForbidden() *UpdateBitBucketAccountUsingPUTForbidden {
	return &UpdateBitBucketAccountUsingPUTForbidden{}
}

/*
UpdateBitBucketAccountUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBitBucketAccountUsingPUTForbidden struct {
}

// IsSuccess returns true when this update bit bucket account using p u t forbidden response has a 2xx status code
func (o *UpdateBitBucketAccountUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bit bucket account using p u t forbidden response has a 3xx status code
func (o *UpdateBitBucketAccountUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account using p u t forbidden response has a 4xx status code
func (o *UpdateBitBucketAccountUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bit bucket account using p u t forbidden response has a 5xx status code
func (o *UpdateBitBucketAccountUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account using p u t forbidden response a status code equal to that given
func (o *UpdateBitBucketAccountUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update bit bucket account using p u t forbidden response
func (o *UpdateBitBucketAccountUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateBitBucketAccountUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTForbidden", 403)
}

func (o *UpdateBitBucketAccountUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTForbidden", 403)
}

func (o *UpdateBitBucketAccountUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBitBucketAccountUsingPUTNotFound creates a UpdateBitBucketAccountUsingPUTNotFound with default headers values
func NewUpdateBitBucketAccountUsingPUTNotFound() *UpdateBitBucketAccountUsingPUTNotFound {
	return &UpdateBitBucketAccountUsingPUTNotFound{}
}

/*
UpdateBitBucketAccountUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBitBucketAccountUsingPUTNotFound struct {
}

// IsSuccess returns true when this update bit bucket account using p u t not found response has a 2xx status code
func (o *UpdateBitBucketAccountUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update bit bucket account using p u t not found response has a 3xx status code
func (o *UpdateBitBucketAccountUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update bit bucket account using p u t not found response has a 4xx status code
func (o *UpdateBitBucketAccountUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update bit bucket account using p u t not found response has a 5xx status code
func (o *UpdateBitBucketAccountUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update bit bucket account using p u t not found response a status code equal to that given
func (o *UpdateBitBucketAccountUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update bit bucket account using p u t not found response
func (o *UpdateBitBucketAccountUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateBitBucketAccountUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTNotFound", 404)
}

func (o *UpdateBitBucketAccountUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/bitbucket/{id}][%d] updateBitBucketAccountUsingPUTNotFound", 404)
}

func (o *UpdateBitBucketAccountUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
