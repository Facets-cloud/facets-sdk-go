// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateAwsAccountUsingPUTReader is a Reader for the UpdateAwsAccountUsingPUT structure.
type UpdateAwsAccountUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAwsAccountUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAwsAccountUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateAwsAccountUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateAwsAccountUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateAwsAccountUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAwsAccountUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/aws/{id}] updateAwsAccountUsingPUT", response, response.Code())
	}
}

// NewUpdateAwsAccountUsingPUTOK creates a UpdateAwsAccountUsingPUTOK with default headers values
func NewUpdateAwsAccountUsingPUTOK() *UpdateAwsAccountUsingPUTOK {
	return &UpdateAwsAccountUsingPUTOK{}
}

/*
UpdateAwsAccountUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAwsAccountUsingPUTOK struct {
	Payload *models.AwsAccount
}

// IsSuccess returns true when this update aws account using p u t o k response has a 2xx status code
func (o *UpdateAwsAccountUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update aws account using p u t o k response has a 3xx status code
func (o *UpdateAwsAccountUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account using p u t o k response has a 4xx status code
func (o *UpdateAwsAccountUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update aws account using p u t o k response has a 5xx status code
func (o *UpdateAwsAccountUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account using p u t o k response a status code equal to that given
func (o *UpdateAwsAccountUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update aws account using p u t o k response
func (o *UpdateAwsAccountUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateAwsAccountUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateAwsAccountUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTOK %s", 200, payload)
}

func (o *UpdateAwsAccountUsingPUTOK) GetPayload() *models.AwsAccount {
	return o.Payload
}

func (o *UpdateAwsAccountUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AwsAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAwsAccountUsingPUTCreated creates a UpdateAwsAccountUsingPUTCreated with default headers values
func NewUpdateAwsAccountUsingPUTCreated() *UpdateAwsAccountUsingPUTCreated {
	return &UpdateAwsAccountUsingPUTCreated{}
}

/*
UpdateAwsAccountUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateAwsAccountUsingPUTCreated struct {
}

// IsSuccess returns true when this update aws account using p u t created response has a 2xx status code
func (o *UpdateAwsAccountUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update aws account using p u t created response has a 3xx status code
func (o *UpdateAwsAccountUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account using p u t created response has a 4xx status code
func (o *UpdateAwsAccountUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update aws account using p u t created response has a 5xx status code
func (o *UpdateAwsAccountUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account using p u t created response a status code equal to that given
func (o *UpdateAwsAccountUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update aws account using p u t created response
func (o *UpdateAwsAccountUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateAwsAccountUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTCreated", 201)
}

func (o *UpdateAwsAccountUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTCreated", 201)
}

func (o *UpdateAwsAccountUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAwsAccountUsingPUTUnauthorized creates a UpdateAwsAccountUsingPUTUnauthorized with default headers values
func NewUpdateAwsAccountUsingPUTUnauthorized() *UpdateAwsAccountUsingPUTUnauthorized {
	return &UpdateAwsAccountUsingPUTUnauthorized{}
}

/*
UpdateAwsAccountUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateAwsAccountUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update aws account using p u t unauthorized response has a 2xx status code
func (o *UpdateAwsAccountUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws account using p u t unauthorized response has a 3xx status code
func (o *UpdateAwsAccountUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account using p u t unauthorized response has a 4xx status code
func (o *UpdateAwsAccountUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws account using p u t unauthorized response has a 5xx status code
func (o *UpdateAwsAccountUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account using p u t unauthorized response a status code equal to that given
func (o *UpdateAwsAccountUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update aws account using p u t unauthorized response
func (o *UpdateAwsAccountUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateAwsAccountUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateAwsAccountUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTUnauthorized", 401)
}

func (o *UpdateAwsAccountUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAwsAccountUsingPUTForbidden creates a UpdateAwsAccountUsingPUTForbidden with default headers values
func NewUpdateAwsAccountUsingPUTForbidden() *UpdateAwsAccountUsingPUTForbidden {
	return &UpdateAwsAccountUsingPUTForbidden{}
}

/*
UpdateAwsAccountUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateAwsAccountUsingPUTForbidden struct {
}

// IsSuccess returns true when this update aws account using p u t forbidden response has a 2xx status code
func (o *UpdateAwsAccountUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws account using p u t forbidden response has a 3xx status code
func (o *UpdateAwsAccountUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account using p u t forbidden response has a 4xx status code
func (o *UpdateAwsAccountUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws account using p u t forbidden response has a 5xx status code
func (o *UpdateAwsAccountUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account using p u t forbidden response a status code equal to that given
func (o *UpdateAwsAccountUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update aws account using p u t forbidden response
func (o *UpdateAwsAccountUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateAwsAccountUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTForbidden", 403)
}

func (o *UpdateAwsAccountUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTForbidden", 403)
}

func (o *UpdateAwsAccountUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateAwsAccountUsingPUTNotFound creates a UpdateAwsAccountUsingPUTNotFound with default headers values
func NewUpdateAwsAccountUsingPUTNotFound() *UpdateAwsAccountUsingPUTNotFound {
	return &UpdateAwsAccountUsingPUTNotFound{}
}

/*
UpdateAwsAccountUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAwsAccountUsingPUTNotFound struct {
}

// IsSuccess returns true when this update aws account using p u t not found response has a 2xx status code
func (o *UpdateAwsAccountUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update aws account using p u t not found response has a 3xx status code
func (o *UpdateAwsAccountUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update aws account using p u t not found response has a 4xx status code
func (o *UpdateAwsAccountUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update aws account using p u t not found response has a 5xx status code
func (o *UpdateAwsAccountUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update aws account using p u t not found response a status code equal to that given
func (o *UpdateAwsAccountUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update aws account using p u t not found response
func (o *UpdateAwsAccountUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateAwsAccountUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTNotFound", 404)
}

func (o *UpdateAwsAccountUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/aws/{id}][%d] updateAwsAccountUsingPUTNotFound", 404)
}

func (o *UpdateAwsAccountUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
