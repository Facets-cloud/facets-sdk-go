// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAccountUsingGETReader is a Reader for the GetAccountUsingGET structure.
type GetAccountUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAccountUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/{id}] getAccountUsingGET", response, response.Code())
	}
}

// NewGetAccountUsingGETOK creates a GetAccountUsingGETOK with default headers values
func NewGetAccountUsingGETOK() *GetAccountUsingGETOK {
	return &GetAccountUsingGETOK{}
}

/*
GetAccountUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAccountUsingGETOK struct {
	Payload *models.Account
}

// IsSuccess returns true when this get account using g e t o k response has a 2xx status code
func (o *GetAccountUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get account using g e t o k response has a 3xx status code
func (o *GetAccountUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account using g e t o k response has a 4xx status code
func (o *GetAccountUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account using g e t o k response has a 5xx status code
func (o *GetAccountUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get account using g e t o k response a status code equal to that given
func (o *GetAccountUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get account using g e t o k response
func (o *GetAccountUsingGETOK) Code() int {
	return 200
}

func (o *GetAccountUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETOK %s", 200, payload)
}

func (o *GetAccountUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETOK %s", 200, payload)
}

func (o *GetAccountUsingGETOK) GetPayload() *models.Account {
	return o.Payload
}

func (o *GetAccountUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Account)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountUsingGETUnauthorized creates a GetAccountUsingGETUnauthorized with default headers values
func NewGetAccountUsingGETUnauthorized() *GetAccountUsingGETUnauthorized {
	return &GetAccountUsingGETUnauthorized{}
}

/*
GetAccountUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAccountUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get account using g e t unauthorized response has a 2xx status code
func (o *GetAccountUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account using g e t unauthorized response has a 3xx status code
func (o *GetAccountUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account using g e t unauthorized response has a 4xx status code
func (o *GetAccountUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account using g e t unauthorized response has a 5xx status code
func (o *GetAccountUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get account using g e t unauthorized response a status code equal to that given
func (o *GetAccountUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get account using g e t unauthorized response
func (o *GetAccountUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAccountUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETUnauthorized", 401)
}

func (o *GetAccountUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETUnauthorized", 401)
}

func (o *GetAccountUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountUsingGETForbidden creates a GetAccountUsingGETForbidden with default headers values
func NewGetAccountUsingGETForbidden() *GetAccountUsingGETForbidden {
	return &GetAccountUsingGETForbidden{}
}

/*
GetAccountUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAccountUsingGETForbidden struct {
}

// IsSuccess returns true when this get account using g e t forbidden response has a 2xx status code
func (o *GetAccountUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account using g e t forbidden response has a 3xx status code
func (o *GetAccountUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account using g e t forbidden response has a 4xx status code
func (o *GetAccountUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account using g e t forbidden response has a 5xx status code
func (o *GetAccountUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get account using g e t forbidden response a status code equal to that given
func (o *GetAccountUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get account using g e t forbidden response
func (o *GetAccountUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAccountUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETForbidden", 403)
}

func (o *GetAccountUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETForbidden", 403)
}

func (o *GetAccountUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAccountUsingGETNotFound creates a GetAccountUsingGETNotFound with default headers values
func NewGetAccountUsingGETNotFound() *GetAccountUsingGETNotFound {
	return &GetAccountUsingGETNotFound{}
}

/*
GetAccountUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAccountUsingGETNotFound struct {
}

// IsSuccess returns true when this get account using g e t not found response has a 2xx status code
func (o *GetAccountUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account using g e t not found response has a 3xx status code
func (o *GetAccountUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account using g e t not found response has a 4xx status code
func (o *GetAccountUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account using g e t not found response has a 5xx status code
func (o *GetAccountUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get account using g e t not found response a status code equal to that given
func (o *GetAccountUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get account using g e t not found response
func (o *GetAccountUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAccountUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETNotFound", 404)
}

func (o *GetAccountUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountUsingGETNotFound", 404)
}

func (o *GetAccountUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
