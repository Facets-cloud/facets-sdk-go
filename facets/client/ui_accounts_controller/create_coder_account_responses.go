// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateCoderAccountReader is a Reader for the CreateCoderAccount structure.
type CreateCoderAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateCoderAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateCoderAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateCoderAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateCoderAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateCoderAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateCoderAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/coder/] createCoderAccount", response, response.Code())
	}
}

// NewCreateCoderAccountOK creates a CreateCoderAccountOK with default headers values
func NewCreateCoderAccountOK() *CreateCoderAccountOK {
	return &CreateCoderAccountOK{}
}

/*
CreateCoderAccountOK describes a response with status code 200, with default header values.

OK
*/
type CreateCoderAccountOK struct {
	Payload *models.CoderAccount
}

// IsSuccess returns true when this create coder account o k response has a 2xx status code
func (o *CreateCoderAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create coder account o k response has a 3xx status code
func (o *CreateCoderAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create coder account o k response has a 4xx status code
func (o *CreateCoderAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create coder account o k response has a 5xx status code
func (o *CreateCoderAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create coder account o k response a status code equal to that given
func (o *CreateCoderAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create coder account o k response
func (o *CreateCoderAccountOK) Code() int {
	return 200
}

func (o *CreateCoderAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountOK %s", 200, payload)
}

func (o *CreateCoderAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountOK %s", 200, payload)
}

func (o *CreateCoderAccountOK) GetPayload() *models.CoderAccount {
	return o.Payload
}

func (o *CreateCoderAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoderAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoderAccountBadRequest creates a CreateCoderAccountBadRequest with default headers values
func NewCreateCoderAccountBadRequest() *CreateCoderAccountBadRequest {
	return &CreateCoderAccountBadRequest{}
}

/*
CreateCoderAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateCoderAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create coder account bad request response has a 2xx status code
func (o *CreateCoderAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create coder account bad request response has a 3xx status code
func (o *CreateCoderAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create coder account bad request response has a 4xx status code
func (o *CreateCoderAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create coder account bad request response has a 5xx status code
func (o *CreateCoderAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create coder account bad request response a status code equal to that given
func (o *CreateCoderAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create coder account bad request response
func (o *CreateCoderAccountBadRequest) Code() int {
	return 400
}

func (o *CreateCoderAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountBadRequest %s", 400, payload)
}

func (o *CreateCoderAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountBadRequest %s", 400, payload)
}

func (o *CreateCoderAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCoderAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoderAccountNotFound creates a CreateCoderAccountNotFound with default headers values
func NewCreateCoderAccountNotFound() *CreateCoderAccountNotFound {
	return &CreateCoderAccountNotFound{}
}

/*
CreateCoderAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateCoderAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create coder account not found response has a 2xx status code
func (o *CreateCoderAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create coder account not found response has a 3xx status code
func (o *CreateCoderAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create coder account not found response has a 4xx status code
func (o *CreateCoderAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create coder account not found response has a 5xx status code
func (o *CreateCoderAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create coder account not found response a status code equal to that given
func (o *CreateCoderAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create coder account not found response
func (o *CreateCoderAccountNotFound) Code() int {
	return 404
}

func (o *CreateCoderAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountNotFound %s", 404, payload)
}

func (o *CreateCoderAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountNotFound %s", 404, payload)
}

func (o *CreateCoderAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCoderAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoderAccountMethodNotAllowed creates a CreateCoderAccountMethodNotAllowed with default headers values
func NewCreateCoderAccountMethodNotAllowed() *CreateCoderAccountMethodNotAllowed {
	return &CreateCoderAccountMethodNotAllowed{}
}

/*
CreateCoderAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateCoderAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create coder account method not allowed response has a 2xx status code
func (o *CreateCoderAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create coder account method not allowed response has a 3xx status code
func (o *CreateCoderAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create coder account method not allowed response has a 4xx status code
func (o *CreateCoderAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create coder account method not allowed response has a 5xx status code
func (o *CreateCoderAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create coder account method not allowed response a status code equal to that given
func (o *CreateCoderAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create coder account method not allowed response
func (o *CreateCoderAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateCoderAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountMethodNotAllowed %s", 405, payload)
}

func (o *CreateCoderAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountMethodNotAllowed %s", 405, payload)
}

func (o *CreateCoderAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCoderAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateCoderAccountInternalServerError creates a CreateCoderAccountInternalServerError with default headers values
func NewCreateCoderAccountInternalServerError() *CreateCoderAccountInternalServerError {
	return &CreateCoderAccountInternalServerError{}
}

/*
CreateCoderAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateCoderAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create coder account internal server error response has a 2xx status code
func (o *CreateCoderAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create coder account internal server error response has a 3xx status code
func (o *CreateCoderAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create coder account internal server error response has a 4xx status code
func (o *CreateCoderAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create coder account internal server error response has a 5xx status code
func (o *CreateCoderAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create coder account internal server error response a status code equal to that given
func (o *CreateCoderAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create coder account internal server error response
func (o *CreateCoderAccountInternalServerError) Code() int {
	return 500
}

func (o *CreateCoderAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountInternalServerError %s", 500, payload)
}

func (o *CreateCoderAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/coder/][%d] createCoderAccountInternalServerError %s", 500, payload)
}

func (o *CreateCoderAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateCoderAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
