// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVCSTokenDetailsByStackNameReader is a Reader for the GetVCSTokenDetailsByStackName structure.
type GetVCSTokenDetailsByStackNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVCSTokenDetailsByStackNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVCSTokenDetailsByStackNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVCSTokenDetailsByStackNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVCSTokenDetailsByStackNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetVCSTokenDetailsByStackNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVCSTokenDetailsByStackNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details] getVCSTokenDetailsByStackName", response, response.Code())
	}
}

// NewGetVCSTokenDetailsByStackNameOK creates a GetVCSTokenDetailsByStackNameOK with default headers values
func NewGetVCSTokenDetailsByStackNameOK() *GetVCSTokenDetailsByStackNameOK {
	return &GetVCSTokenDetailsByStackNameOK{}
}

/*
GetVCSTokenDetailsByStackNameOK describes a response with status code 200, with default header values.

OK
*/
type GetVCSTokenDetailsByStackNameOK struct {
	Payload *models.VCSTokenDetailsResponse
}

// IsSuccess returns true when this get v c s token details by stack name o k response has a 2xx status code
func (o *GetVCSTokenDetailsByStackNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v c s token details by stack name o k response has a 3xx status code
func (o *GetVCSTokenDetailsByStackNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s token details by stack name o k response has a 4xx status code
func (o *GetVCSTokenDetailsByStackNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v c s token details by stack name o k response has a 5xx status code
func (o *GetVCSTokenDetailsByStackNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s token details by stack name o k response a status code equal to that given
func (o *GetVCSTokenDetailsByStackNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v c s token details by stack name o k response
func (o *GetVCSTokenDetailsByStackNameOK) Code() int {
	return 200
}

func (o *GetVCSTokenDetailsByStackNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameOK %s", 200, payload)
}

func (o *GetVCSTokenDetailsByStackNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameOK %s", 200, payload)
}

func (o *GetVCSTokenDetailsByStackNameOK) GetPayload() *models.VCSTokenDetailsResponse {
	return o.Payload
}

func (o *GetVCSTokenDetailsByStackNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.VCSTokenDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSTokenDetailsByStackNameBadRequest creates a GetVCSTokenDetailsByStackNameBadRequest with default headers values
func NewGetVCSTokenDetailsByStackNameBadRequest() *GetVCSTokenDetailsByStackNameBadRequest {
	return &GetVCSTokenDetailsByStackNameBadRequest{}
}

/*
GetVCSTokenDetailsByStackNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVCSTokenDetailsByStackNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s token details by stack name bad request response has a 2xx status code
func (o *GetVCSTokenDetailsByStackNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s token details by stack name bad request response has a 3xx status code
func (o *GetVCSTokenDetailsByStackNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s token details by stack name bad request response has a 4xx status code
func (o *GetVCSTokenDetailsByStackNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v c s token details by stack name bad request response has a 5xx status code
func (o *GetVCSTokenDetailsByStackNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s token details by stack name bad request response a status code equal to that given
func (o *GetVCSTokenDetailsByStackNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v c s token details by stack name bad request response
func (o *GetVCSTokenDetailsByStackNameBadRequest) Code() int {
	return 400
}

func (o *GetVCSTokenDetailsByStackNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameBadRequest %s", 400, payload)
}

func (o *GetVCSTokenDetailsByStackNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameBadRequest %s", 400, payload)
}

func (o *GetVCSTokenDetailsByStackNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSTokenDetailsByStackNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSTokenDetailsByStackNameNotFound creates a GetVCSTokenDetailsByStackNameNotFound with default headers values
func NewGetVCSTokenDetailsByStackNameNotFound() *GetVCSTokenDetailsByStackNameNotFound {
	return &GetVCSTokenDetailsByStackNameNotFound{}
}

/*
GetVCSTokenDetailsByStackNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVCSTokenDetailsByStackNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s token details by stack name not found response has a 2xx status code
func (o *GetVCSTokenDetailsByStackNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s token details by stack name not found response has a 3xx status code
func (o *GetVCSTokenDetailsByStackNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s token details by stack name not found response has a 4xx status code
func (o *GetVCSTokenDetailsByStackNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v c s token details by stack name not found response has a 5xx status code
func (o *GetVCSTokenDetailsByStackNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s token details by stack name not found response a status code equal to that given
func (o *GetVCSTokenDetailsByStackNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v c s token details by stack name not found response
func (o *GetVCSTokenDetailsByStackNameNotFound) Code() int {
	return 404
}

func (o *GetVCSTokenDetailsByStackNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameNotFound %s", 404, payload)
}

func (o *GetVCSTokenDetailsByStackNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameNotFound %s", 404, payload)
}

func (o *GetVCSTokenDetailsByStackNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSTokenDetailsByStackNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSTokenDetailsByStackNameMethodNotAllowed creates a GetVCSTokenDetailsByStackNameMethodNotAllowed with default headers values
func NewGetVCSTokenDetailsByStackNameMethodNotAllowed() *GetVCSTokenDetailsByStackNameMethodNotAllowed {
	return &GetVCSTokenDetailsByStackNameMethodNotAllowed{}
}

/*
GetVCSTokenDetailsByStackNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetVCSTokenDetailsByStackNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s token details by stack name method not allowed response has a 2xx status code
func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s token details by stack name method not allowed response has a 3xx status code
func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s token details by stack name method not allowed response has a 4xx status code
func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v c s token details by stack name method not allowed response has a 5xx status code
func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s token details by stack name method not allowed response a status code equal to that given
func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get v c s token details by stack name method not allowed response
func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameMethodNotAllowed %s", 405, payload)
}

func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameMethodNotAllowed %s", 405, payload)
}

func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSTokenDetailsByStackNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSTokenDetailsByStackNameInternalServerError creates a GetVCSTokenDetailsByStackNameInternalServerError with default headers values
func NewGetVCSTokenDetailsByStackNameInternalServerError() *GetVCSTokenDetailsByStackNameInternalServerError {
	return &GetVCSTokenDetailsByStackNameInternalServerError{}
}

/*
GetVCSTokenDetailsByStackNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVCSTokenDetailsByStackNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s token details by stack name internal server error response has a 2xx status code
func (o *GetVCSTokenDetailsByStackNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s token details by stack name internal server error response has a 3xx status code
func (o *GetVCSTokenDetailsByStackNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s token details by stack name internal server error response has a 4xx status code
func (o *GetVCSTokenDetailsByStackNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v c s token details by stack name internal server error response has a 5xx status code
func (o *GetVCSTokenDetailsByStackNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v c s token details by stack name internal server error response a status code equal to that given
func (o *GetVCSTokenDetailsByStackNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v c s token details by stack name internal server error response
func (o *GetVCSTokenDetailsByStackNameInternalServerError) Code() int {
	return 500
}

func (o *GetVCSTokenDetailsByStackNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameInternalServerError %s", 500, payload)
}

func (o *GetVCSTokenDetailsByStackNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/stack/{stackName}/token-details][%d] getVCSTokenDetailsByStackNameInternalServerError %s", 500, payload)
}

func (o *GetVCSTokenDetailsByStackNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSTokenDetailsByStackNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
