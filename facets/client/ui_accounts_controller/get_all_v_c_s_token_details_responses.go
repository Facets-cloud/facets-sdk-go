// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllVCSTokenDetailsReader is a Reader for the GetAllVCSTokenDetails structure.
type GetAllVCSTokenDetailsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllVCSTokenDetailsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllVCSTokenDetailsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllVCSTokenDetailsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllVCSTokenDetailsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllVCSTokenDetailsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllVCSTokenDetailsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/token-details] getAllVCSTokenDetails", response, response.Code())
	}
}

// NewGetAllVCSTokenDetailsOK creates a GetAllVCSTokenDetailsOK with default headers values
func NewGetAllVCSTokenDetailsOK() *GetAllVCSTokenDetailsOK {
	return &GetAllVCSTokenDetailsOK{}
}

/*
GetAllVCSTokenDetailsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllVCSTokenDetailsOK struct {
	Payload []*models.VCSTokenDetailsResponse
}

// IsSuccess returns true when this get all v c s token details o k response has a 2xx status code
func (o *GetAllVCSTokenDetailsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all v c s token details o k response has a 3xx status code
func (o *GetAllVCSTokenDetailsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details o k response has a 4xx status code
func (o *GetAllVCSTokenDetailsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all v c s token details o k response has a 5xx status code
func (o *GetAllVCSTokenDetailsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details o k response a status code equal to that given
func (o *GetAllVCSTokenDetailsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all v c s token details o k response
func (o *GetAllVCSTokenDetailsOK) Code() int {
	return 200
}

func (o *GetAllVCSTokenDetailsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsOK %s", 200, payload)
}

func (o *GetAllVCSTokenDetailsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsOK %s", 200, payload)
}

func (o *GetAllVCSTokenDetailsOK) GetPayload() []*models.VCSTokenDetailsResponse {
	return o.Payload
}

func (o *GetAllVCSTokenDetailsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSTokenDetailsBadRequest creates a GetAllVCSTokenDetailsBadRequest with default headers values
func NewGetAllVCSTokenDetailsBadRequest() *GetAllVCSTokenDetailsBadRequest {
	return &GetAllVCSTokenDetailsBadRequest{}
}

/*
GetAllVCSTokenDetailsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllVCSTokenDetailsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all v c s token details bad request response has a 2xx status code
func (o *GetAllVCSTokenDetailsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s token details bad request response has a 3xx status code
func (o *GetAllVCSTokenDetailsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details bad request response has a 4xx status code
func (o *GetAllVCSTokenDetailsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s token details bad request response has a 5xx status code
func (o *GetAllVCSTokenDetailsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details bad request response a status code equal to that given
func (o *GetAllVCSTokenDetailsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all v c s token details bad request response
func (o *GetAllVCSTokenDetailsBadRequest) Code() int {
	return 400
}

func (o *GetAllVCSTokenDetailsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsBadRequest %s", 400, payload)
}

func (o *GetAllVCSTokenDetailsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsBadRequest %s", 400, payload)
}

func (o *GetAllVCSTokenDetailsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVCSTokenDetailsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSTokenDetailsNotFound creates a GetAllVCSTokenDetailsNotFound with default headers values
func NewGetAllVCSTokenDetailsNotFound() *GetAllVCSTokenDetailsNotFound {
	return &GetAllVCSTokenDetailsNotFound{}
}

/*
GetAllVCSTokenDetailsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllVCSTokenDetailsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all v c s token details not found response has a 2xx status code
func (o *GetAllVCSTokenDetailsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s token details not found response has a 3xx status code
func (o *GetAllVCSTokenDetailsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details not found response has a 4xx status code
func (o *GetAllVCSTokenDetailsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s token details not found response has a 5xx status code
func (o *GetAllVCSTokenDetailsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details not found response a status code equal to that given
func (o *GetAllVCSTokenDetailsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all v c s token details not found response
func (o *GetAllVCSTokenDetailsNotFound) Code() int {
	return 404
}

func (o *GetAllVCSTokenDetailsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsNotFound %s", 404, payload)
}

func (o *GetAllVCSTokenDetailsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsNotFound %s", 404, payload)
}

func (o *GetAllVCSTokenDetailsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVCSTokenDetailsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSTokenDetailsMethodNotAllowed creates a GetAllVCSTokenDetailsMethodNotAllowed with default headers values
func NewGetAllVCSTokenDetailsMethodNotAllowed() *GetAllVCSTokenDetailsMethodNotAllowed {
	return &GetAllVCSTokenDetailsMethodNotAllowed{}
}

/*
GetAllVCSTokenDetailsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllVCSTokenDetailsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all v c s token details method not allowed response has a 2xx status code
func (o *GetAllVCSTokenDetailsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s token details method not allowed response has a 3xx status code
func (o *GetAllVCSTokenDetailsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details method not allowed response has a 4xx status code
func (o *GetAllVCSTokenDetailsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all v c s token details method not allowed response has a 5xx status code
func (o *GetAllVCSTokenDetailsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all v c s token details method not allowed response a status code equal to that given
func (o *GetAllVCSTokenDetailsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all v c s token details method not allowed response
func (o *GetAllVCSTokenDetailsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllVCSTokenDetailsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllVCSTokenDetailsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllVCSTokenDetailsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVCSTokenDetailsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVCSTokenDetailsInternalServerError creates a GetAllVCSTokenDetailsInternalServerError with default headers values
func NewGetAllVCSTokenDetailsInternalServerError() *GetAllVCSTokenDetailsInternalServerError {
	return &GetAllVCSTokenDetailsInternalServerError{}
}

/*
GetAllVCSTokenDetailsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllVCSTokenDetailsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all v c s token details internal server error response has a 2xx status code
func (o *GetAllVCSTokenDetailsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all v c s token details internal server error response has a 3xx status code
func (o *GetAllVCSTokenDetailsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all v c s token details internal server error response has a 4xx status code
func (o *GetAllVCSTokenDetailsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all v c s token details internal server error response has a 5xx status code
func (o *GetAllVCSTokenDetailsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all v c s token details internal server error response a status code equal to that given
func (o *GetAllVCSTokenDetailsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all v c s token details internal server error response
func (o *GetAllVCSTokenDetailsInternalServerError) Code() int {
	return 500
}

func (o *GetAllVCSTokenDetailsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsInternalServerError %s", 500, payload)
}

func (o *GetAllVCSTokenDetailsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/token-details][%d] getAllVCSTokenDetailsInternalServerError %s", 500, payload)
}

func (o *GetAllVCSTokenDetailsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVCSTokenDetailsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
