// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateGcpAccountUsingPOSTReader is a Reader for the CreateGcpAccountUsingPOST structure.
type CreateGcpAccountUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGcpAccountUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGcpAccountUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateGcpAccountUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateGcpAccountUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateGcpAccountUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateGcpAccountUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/gcp/] createGcpAccountUsingPOST", response, response.Code())
	}
}

// NewCreateGcpAccountUsingPOSTOK creates a CreateGcpAccountUsingPOSTOK with default headers values
func NewCreateGcpAccountUsingPOSTOK() *CreateGcpAccountUsingPOSTOK {
	return &CreateGcpAccountUsingPOSTOK{}
}

/*
CreateGcpAccountUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateGcpAccountUsingPOSTOK struct {
	Payload *models.GcpAccount
}

// IsSuccess returns true when this create gcp account using p o s t o k response has a 2xx status code
func (o *CreateGcpAccountUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create gcp account using p o s t o k response has a 3xx status code
func (o *CreateGcpAccountUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account using p o s t o k response has a 4xx status code
func (o *CreateGcpAccountUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gcp account using p o s t o k response has a 5xx status code
func (o *CreateGcpAccountUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account using p o s t o k response a status code equal to that given
func (o *CreateGcpAccountUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create gcp account using p o s t o k response
func (o *CreateGcpAccountUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateGcpAccountUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTOK %s", 200, payload)
}

func (o *CreateGcpAccountUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTOK %s", 200, payload)
}

func (o *CreateGcpAccountUsingPOSTOK) GetPayload() *models.GcpAccount {
	return o.Payload
}

func (o *CreateGcpAccountUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GcpAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGcpAccountUsingPOSTCreated creates a CreateGcpAccountUsingPOSTCreated with default headers values
func NewCreateGcpAccountUsingPOSTCreated() *CreateGcpAccountUsingPOSTCreated {
	return &CreateGcpAccountUsingPOSTCreated{}
}

/*
CreateGcpAccountUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateGcpAccountUsingPOSTCreated struct {
}

// IsSuccess returns true when this create gcp account using p o s t created response has a 2xx status code
func (o *CreateGcpAccountUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create gcp account using p o s t created response has a 3xx status code
func (o *CreateGcpAccountUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account using p o s t created response has a 4xx status code
func (o *CreateGcpAccountUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create gcp account using p o s t created response has a 5xx status code
func (o *CreateGcpAccountUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account using p o s t created response a status code equal to that given
func (o *CreateGcpAccountUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create gcp account using p o s t created response
func (o *CreateGcpAccountUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateGcpAccountUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTCreated", 201)
}

func (o *CreateGcpAccountUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTCreated", 201)
}

func (o *CreateGcpAccountUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGcpAccountUsingPOSTUnauthorized creates a CreateGcpAccountUsingPOSTUnauthorized with default headers values
func NewCreateGcpAccountUsingPOSTUnauthorized() *CreateGcpAccountUsingPOSTUnauthorized {
	return &CreateGcpAccountUsingPOSTUnauthorized{}
}

/*
CreateGcpAccountUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateGcpAccountUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create gcp account using p o s t unauthorized response has a 2xx status code
func (o *CreateGcpAccountUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp account using p o s t unauthorized response has a 3xx status code
func (o *CreateGcpAccountUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account using p o s t unauthorized response has a 4xx status code
func (o *CreateGcpAccountUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp account using p o s t unauthorized response has a 5xx status code
func (o *CreateGcpAccountUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account using p o s t unauthorized response a status code equal to that given
func (o *CreateGcpAccountUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create gcp account using p o s t unauthorized response
func (o *CreateGcpAccountUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateGcpAccountUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTUnauthorized", 401)
}

func (o *CreateGcpAccountUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTUnauthorized", 401)
}

func (o *CreateGcpAccountUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGcpAccountUsingPOSTForbidden creates a CreateGcpAccountUsingPOSTForbidden with default headers values
func NewCreateGcpAccountUsingPOSTForbidden() *CreateGcpAccountUsingPOSTForbidden {
	return &CreateGcpAccountUsingPOSTForbidden{}
}

/*
CreateGcpAccountUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateGcpAccountUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create gcp account using p o s t forbidden response has a 2xx status code
func (o *CreateGcpAccountUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp account using p o s t forbidden response has a 3xx status code
func (o *CreateGcpAccountUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account using p o s t forbidden response has a 4xx status code
func (o *CreateGcpAccountUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp account using p o s t forbidden response has a 5xx status code
func (o *CreateGcpAccountUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account using p o s t forbidden response a status code equal to that given
func (o *CreateGcpAccountUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create gcp account using p o s t forbidden response
func (o *CreateGcpAccountUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateGcpAccountUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTForbidden", 403)
}

func (o *CreateGcpAccountUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTForbidden", 403)
}

func (o *CreateGcpAccountUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGcpAccountUsingPOSTNotFound creates a CreateGcpAccountUsingPOSTNotFound with default headers values
func NewCreateGcpAccountUsingPOSTNotFound() *CreateGcpAccountUsingPOSTNotFound {
	return &CreateGcpAccountUsingPOSTNotFound{}
}

/*
CreateGcpAccountUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateGcpAccountUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create gcp account using p o s t not found response has a 2xx status code
func (o *CreateGcpAccountUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create gcp account using p o s t not found response has a 3xx status code
func (o *CreateGcpAccountUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create gcp account using p o s t not found response has a 4xx status code
func (o *CreateGcpAccountUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create gcp account using p o s t not found response has a 5xx status code
func (o *CreateGcpAccountUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create gcp account using p o s t not found response a status code equal to that given
func (o *CreateGcpAccountUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create gcp account using p o s t not found response
func (o *CreateGcpAccountUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateGcpAccountUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTNotFound", 404)
}

func (o *CreateGcpAccountUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/gcp/][%d] createGcpAccountUsingPOSTNotFound", 404)
}

func (o *CreateGcpAccountUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
