// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ValidateBitbucketAccountReader is a Reader for the ValidateBitbucketAccount structure.
type ValidateBitbucketAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateBitbucketAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateBitbucketAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateBitbucketAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateBitbucketAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewValidateBitbucketAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateBitbucketAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/bitbucket/validate] validateBitbucketAccount", response, response.Code())
	}
}

// NewValidateBitbucketAccountOK creates a ValidateBitbucketAccountOK with default headers values
func NewValidateBitbucketAccountOK() *ValidateBitbucketAccountOK {
	return &ValidateBitbucketAccountOK{}
}

/*
ValidateBitbucketAccountOK describes a response with status code 200, with default header values.

OK
*/
type ValidateBitbucketAccountOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this validate bitbucket account o k response has a 2xx status code
func (o *ValidateBitbucketAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate bitbucket account o k response has a 3xx status code
func (o *ValidateBitbucketAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account o k response has a 4xx status code
func (o *ValidateBitbucketAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate bitbucket account o k response has a 5xx status code
func (o *ValidateBitbucketAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account o k response a status code equal to that given
func (o *ValidateBitbucketAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate bitbucket account o k response
func (o *ValidateBitbucketAccountOK) Code() int {
	return 200
}

func (o *ValidateBitbucketAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountOK %s", 200, payload)
}

func (o *ValidateBitbucketAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountOK %s", 200, payload)
}

func (o *ValidateBitbucketAccountOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ValidateBitbucketAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateBitbucketAccountBadRequest creates a ValidateBitbucketAccountBadRequest with default headers values
func NewValidateBitbucketAccountBadRequest() *ValidateBitbucketAccountBadRequest {
	return &ValidateBitbucketAccountBadRequest{}
}

/*
ValidateBitbucketAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateBitbucketAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate bitbucket account bad request response has a 2xx status code
func (o *ValidateBitbucketAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate bitbucket account bad request response has a 3xx status code
func (o *ValidateBitbucketAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account bad request response has a 4xx status code
func (o *ValidateBitbucketAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate bitbucket account bad request response has a 5xx status code
func (o *ValidateBitbucketAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account bad request response a status code equal to that given
func (o *ValidateBitbucketAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate bitbucket account bad request response
func (o *ValidateBitbucketAccountBadRequest) Code() int {
	return 400
}

func (o *ValidateBitbucketAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountBadRequest %s", 400, payload)
}

func (o *ValidateBitbucketAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountBadRequest %s", 400, payload)
}

func (o *ValidateBitbucketAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateBitbucketAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateBitbucketAccountNotFound creates a ValidateBitbucketAccountNotFound with default headers values
func NewValidateBitbucketAccountNotFound() *ValidateBitbucketAccountNotFound {
	return &ValidateBitbucketAccountNotFound{}
}

/*
ValidateBitbucketAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateBitbucketAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate bitbucket account not found response has a 2xx status code
func (o *ValidateBitbucketAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate bitbucket account not found response has a 3xx status code
func (o *ValidateBitbucketAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account not found response has a 4xx status code
func (o *ValidateBitbucketAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate bitbucket account not found response has a 5xx status code
func (o *ValidateBitbucketAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account not found response a status code equal to that given
func (o *ValidateBitbucketAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate bitbucket account not found response
func (o *ValidateBitbucketAccountNotFound) Code() int {
	return 404
}

func (o *ValidateBitbucketAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountNotFound %s", 404, payload)
}

func (o *ValidateBitbucketAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountNotFound %s", 404, payload)
}

func (o *ValidateBitbucketAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateBitbucketAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateBitbucketAccountMethodNotAllowed creates a ValidateBitbucketAccountMethodNotAllowed with default headers values
func NewValidateBitbucketAccountMethodNotAllowed() *ValidateBitbucketAccountMethodNotAllowed {
	return &ValidateBitbucketAccountMethodNotAllowed{}
}

/*
ValidateBitbucketAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ValidateBitbucketAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate bitbucket account method not allowed response has a 2xx status code
func (o *ValidateBitbucketAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate bitbucket account method not allowed response has a 3xx status code
func (o *ValidateBitbucketAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account method not allowed response has a 4xx status code
func (o *ValidateBitbucketAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate bitbucket account method not allowed response has a 5xx status code
func (o *ValidateBitbucketAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this validate bitbucket account method not allowed response a status code equal to that given
func (o *ValidateBitbucketAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the validate bitbucket account method not allowed response
func (o *ValidateBitbucketAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *ValidateBitbucketAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateBitbucketAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateBitbucketAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateBitbucketAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateBitbucketAccountInternalServerError creates a ValidateBitbucketAccountInternalServerError with default headers values
func NewValidateBitbucketAccountInternalServerError() *ValidateBitbucketAccountInternalServerError {
	return &ValidateBitbucketAccountInternalServerError{}
}

/*
ValidateBitbucketAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ValidateBitbucketAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate bitbucket account internal server error response has a 2xx status code
func (o *ValidateBitbucketAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate bitbucket account internal server error response has a 3xx status code
func (o *ValidateBitbucketAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate bitbucket account internal server error response has a 4xx status code
func (o *ValidateBitbucketAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate bitbucket account internal server error response has a 5xx status code
func (o *ValidateBitbucketAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate bitbucket account internal server error response a status code equal to that given
func (o *ValidateBitbucketAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate bitbucket account internal server error response
func (o *ValidateBitbucketAccountInternalServerError) Code() int {
	return 500
}

func (o *ValidateBitbucketAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountInternalServerError %s", 500, payload)
}

func (o *ValidateBitbucketAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/bitbucket/validate][%d] validateBitbucketAccountInternalServerError %s", 500, payload)
}

func (o *ValidateBitbucketAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateBitbucketAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
