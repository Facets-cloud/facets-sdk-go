// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetVCSOrganisationsReader is a Reader for the GetVCSOrganisations structure.
type GetVCSOrganisationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetVCSOrganisationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetVCSOrganisationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetVCSOrganisationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetVCSOrganisationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetVCSOrganisationsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetVCSOrganisationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/get-organisations] getVCSOrganisations", response, response.Code())
	}
}

// NewGetVCSOrganisationsOK creates a GetVCSOrganisationsOK with default headers values
func NewGetVCSOrganisationsOK() *GetVCSOrganisationsOK {
	return &GetVCSOrganisationsOK{}
}

/*
GetVCSOrganisationsOK describes a response with status code 200, with default header values.

OK
*/
type GetVCSOrganisationsOK struct {
	Payload []string
}

// IsSuccess returns true when this get v c s organisations o k response has a 2xx status code
func (o *GetVCSOrganisationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get v c s organisations o k response has a 3xx status code
func (o *GetVCSOrganisationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s organisations o k response has a 4xx status code
func (o *GetVCSOrganisationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v c s organisations o k response has a 5xx status code
func (o *GetVCSOrganisationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s organisations o k response a status code equal to that given
func (o *GetVCSOrganisationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get v c s organisations o k response
func (o *GetVCSOrganisationsOK) Code() int {
	return 200
}

func (o *GetVCSOrganisationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsOK %s", 200, payload)
}

func (o *GetVCSOrganisationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsOK %s", 200, payload)
}

func (o *GetVCSOrganisationsOK) GetPayload() []string {
	return o.Payload
}

func (o *GetVCSOrganisationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSOrganisationsBadRequest creates a GetVCSOrganisationsBadRequest with default headers values
func NewGetVCSOrganisationsBadRequest() *GetVCSOrganisationsBadRequest {
	return &GetVCSOrganisationsBadRequest{}
}

/*
GetVCSOrganisationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetVCSOrganisationsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s organisations bad request response has a 2xx status code
func (o *GetVCSOrganisationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s organisations bad request response has a 3xx status code
func (o *GetVCSOrganisationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s organisations bad request response has a 4xx status code
func (o *GetVCSOrganisationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v c s organisations bad request response has a 5xx status code
func (o *GetVCSOrganisationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s organisations bad request response a status code equal to that given
func (o *GetVCSOrganisationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get v c s organisations bad request response
func (o *GetVCSOrganisationsBadRequest) Code() int {
	return 400
}

func (o *GetVCSOrganisationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsBadRequest %s", 400, payload)
}

func (o *GetVCSOrganisationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsBadRequest %s", 400, payload)
}

func (o *GetVCSOrganisationsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSOrganisationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSOrganisationsNotFound creates a GetVCSOrganisationsNotFound with default headers values
func NewGetVCSOrganisationsNotFound() *GetVCSOrganisationsNotFound {
	return &GetVCSOrganisationsNotFound{}
}

/*
GetVCSOrganisationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetVCSOrganisationsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s organisations not found response has a 2xx status code
func (o *GetVCSOrganisationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s organisations not found response has a 3xx status code
func (o *GetVCSOrganisationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s organisations not found response has a 4xx status code
func (o *GetVCSOrganisationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v c s organisations not found response has a 5xx status code
func (o *GetVCSOrganisationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s organisations not found response a status code equal to that given
func (o *GetVCSOrganisationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get v c s organisations not found response
func (o *GetVCSOrganisationsNotFound) Code() int {
	return 404
}

func (o *GetVCSOrganisationsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsNotFound %s", 404, payload)
}

func (o *GetVCSOrganisationsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsNotFound %s", 404, payload)
}

func (o *GetVCSOrganisationsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSOrganisationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSOrganisationsMethodNotAllowed creates a GetVCSOrganisationsMethodNotAllowed with default headers values
func NewGetVCSOrganisationsMethodNotAllowed() *GetVCSOrganisationsMethodNotAllowed {
	return &GetVCSOrganisationsMethodNotAllowed{}
}

/*
GetVCSOrganisationsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetVCSOrganisationsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s organisations method not allowed response has a 2xx status code
func (o *GetVCSOrganisationsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s organisations method not allowed response has a 3xx status code
func (o *GetVCSOrganisationsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s organisations method not allowed response has a 4xx status code
func (o *GetVCSOrganisationsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get v c s organisations method not allowed response has a 5xx status code
func (o *GetVCSOrganisationsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get v c s organisations method not allowed response a status code equal to that given
func (o *GetVCSOrganisationsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get v c s organisations method not allowed response
func (o *GetVCSOrganisationsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetVCSOrganisationsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsMethodNotAllowed %s", 405, payload)
}

func (o *GetVCSOrganisationsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsMethodNotAllowed %s", 405, payload)
}

func (o *GetVCSOrganisationsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSOrganisationsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetVCSOrganisationsInternalServerError creates a GetVCSOrganisationsInternalServerError with default headers values
func NewGetVCSOrganisationsInternalServerError() *GetVCSOrganisationsInternalServerError {
	return &GetVCSOrganisationsInternalServerError{}
}

/*
GetVCSOrganisationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetVCSOrganisationsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get v c s organisations internal server error response has a 2xx status code
func (o *GetVCSOrganisationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get v c s organisations internal server error response has a 3xx status code
func (o *GetVCSOrganisationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get v c s organisations internal server error response has a 4xx status code
func (o *GetVCSOrganisationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get v c s organisations internal server error response has a 5xx status code
func (o *GetVCSOrganisationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get v c s organisations internal server error response a status code equal to that given
func (o *GetVCSOrganisationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get v c s organisations internal server error response
func (o *GetVCSOrganisationsInternalServerError) Code() int {
	return 500
}

func (o *GetVCSOrganisationsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsInternalServerError %s", 500, payload)
}

func (o *GetVCSOrganisationsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/get-organisations][%d] getVCSOrganisationsInternalServerError %s", 500, payload)
}

func (o *GetVCSOrganisationsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetVCSOrganisationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
