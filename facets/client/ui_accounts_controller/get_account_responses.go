// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAccountReader is a Reader for the GetAccount structure.
type GetAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/accounts/{id}] getAccount", response, response.Code())
	}
}

// NewGetAccountOK creates a GetAccountOK with default headers values
func NewGetAccountOK() *GetAccountOK {
	return &GetAccountOK{}
}

/*
GetAccountOK describes a response with status code 200, with default header values.

OK
*/
type GetAccountOK struct {
	Payload *models.Account
}

// IsSuccess returns true when this get account o k response has a 2xx status code
func (o *GetAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get account o k response has a 3xx status code
func (o *GetAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account o k response has a 4xx status code
func (o *GetAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account o k response has a 5xx status code
func (o *GetAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get account o k response a status code equal to that given
func (o *GetAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get account o k response
func (o *GetAccountOK) Code() int {
	return 200
}

func (o *GetAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountOK %s", 200, payload)
}

func (o *GetAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountOK %s", 200, payload)
}

func (o *GetAccountOK) GetPayload() *models.Account {
	return o.Payload
}

func (o *GetAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Account)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountBadRequest creates a GetAccountBadRequest with default headers values
func NewGetAccountBadRequest() *GetAccountBadRequest {
	return &GetAccountBadRequest{}
}

/*
GetAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account bad request response has a 2xx status code
func (o *GetAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account bad request response has a 3xx status code
func (o *GetAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account bad request response has a 4xx status code
func (o *GetAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account bad request response has a 5xx status code
func (o *GetAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get account bad request response a status code equal to that given
func (o *GetAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get account bad request response
func (o *GetAccountBadRequest) Code() int {
	return 400
}

func (o *GetAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountBadRequest %s", 400, payload)
}

func (o *GetAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountBadRequest %s", 400, payload)
}

func (o *GetAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountNotFound creates a GetAccountNotFound with default headers values
func NewGetAccountNotFound() *GetAccountNotFound {
	return &GetAccountNotFound{}
}

/*
GetAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account not found response has a 2xx status code
func (o *GetAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account not found response has a 3xx status code
func (o *GetAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account not found response has a 4xx status code
func (o *GetAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account not found response has a 5xx status code
func (o *GetAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get account not found response a status code equal to that given
func (o *GetAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get account not found response
func (o *GetAccountNotFound) Code() int {
	return 404
}

func (o *GetAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountNotFound %s", 404, payload)
}

func (o *GetAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountNotFound %s", 404, payload)
}

func (o *GetAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountMethodNotAllowed creates a GetAccountMethodNotAllowed with default headers values
func NewGetAccountMethodNotAllowed() *GetAccountMethodNotAllowed {
	return &GetAccountMethodNotAllowed{}
}

/*
GetAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account method not allowed response has a 2xx status code
func (o *GetAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account method not allowed response has a 3xx status code
func (o *GetAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account method not allowed response has a 4xx status code
func (o *GetAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get account method not allowed response has a 5xx status code
func (o *GetAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get account method not allowed response a status code equal to that given
func (o *GetAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get account method not allowed response
func (o *GetAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountMethodNotAllowed %s", 405, payload)
}

func (o *GetAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountMethodNotAllowed %s", 405, payload)
}

func (o *GetAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountInternalServerError creates a GetAccountInternalServerError with default headers values
func NewGetAccountInternalServerError() *GetAccountInternalServerError {
	return &GetAccountInternalServerError{}
}

/*
GetAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get account internal server error response has a 2xx status code
func (o *GetAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get account internal server error response has a 3xx status code
func (o *GetAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get account internal server error response has a 4xx status code
func (o *GetAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get account internal server error response has a 5xx status code
func (o *GetAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get account internal server error response a status code equal to that given
func (o *GetAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get account internal server error response
func (o *GetAccountInternalServerError) Code() int {
	return 500
}

func (o *GetAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountInternalServerError %s", 500, payload)
}

func (o *GetAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/accounts/{id}][%d] getAccountInternalServerError %s", 500, payload)
}

func (o *GetAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
