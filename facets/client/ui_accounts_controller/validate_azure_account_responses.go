// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ValidateAzureAccountReader is a Reader for the ValidateAzureAccount structure.
type ValidateAzureAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateAzureAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateAzureAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateAzureAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateAzureAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewValidateAzureAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateAzureAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/azure/validate] validateAzureAccount", response, response.Code())
	}
}

// NewValidateAzureAccountOK creates a ValidateAzureAccountOK with default headers values
func NewValidateAzureAccountOK() *ValidateAzureAccountOK {
	return &ValidateAzureAccountOK{}
}

/*
ValidateAzureAccountOK describes a response with status code 200, with default header values.

OK
*/
type ValidateAzureAccountOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this validate azure account o k response has a 2xx status code
func (o *ValidateAzureAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate azure account o k response has a 3xx status code
func (o *ValidateAzureAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate azure account o k response has a 4xx status code
func (o *ValidateAzureAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate azure account o k response has a 5xx status code
func (o *ValidateAzureAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate azure account o k response a status code equal to that given
func (o *ValidateAzureAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate azure account o k response
func (o *ValidateAzureAccountOK) Code() int {
	return 200
}

func (o *ValidateAzureAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountOK %s", 200, payload)
}

func (o *ValidateAzureAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountOK %s", 200, payload)
}

func (o *ValidateAzureAccountOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ValidateAzureAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAzureAccountBadRequest creates a ValidateAzureAccountBadRequest with default headers values
func NewValidateAzureAccountBadRequest() *ValidateAzureAccountBadRequest {
	return &ValidateAzureAccountBadRequest{}
}

/*
ValidateAzureAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateAzureAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate azure account bad request response has a 2xx status code
func (o *ValidateAzureAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate azure account bad request response has a 3xx status code
func (o *ValidateAzureAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate azure account bad request response has a 4xx status code
func (o *ValidateAzureAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate azure account bad request response has a 5xx status code
func (o *ValidateAzureAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate azure account bad request response a status code equal to that given
func (o *ValidateAzureAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate azure account bad request response
func (o *ValidateAzureAccountBadRequest) Code() int {
	return 400
}

func (o *ValidateAzureAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountBadRequest %s", 400, payload)
}

func (o *ValidateAzureAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountBadRequest %s", 400, payload)
}

func (o *ValidateAzureAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAzureAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAzureAccountNotFound creates a ValidateAzureAccountNotFound with default headers values
func NewValidateAzureAccountNotFound() *ValidateAzureAccountNotFound {
	return &ValidateAzureAccountNotFound{}
}

/*
ValidateAzureAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateAzureAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate azure account not found response has a 2xx status code
func (o *ValidateAzureAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate azure account not found response has a 3xx status code
func (o *ValidateAzureAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate azure account not found response has a 4xx status code
func (o *ValidateAzureAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate azure account not found response has a 5xx status code
func (o *ValidateAzureAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate azure account not found response a status code equal to that given
func (o *ValidateAzureAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate azure account not found response
func (o *ValidateAzureAccountNotFound) Code() int {
	return 404
}

func (o *ValidateAzureAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountNotFound %s", 404, payload)
}

func (o *ValidateAzureAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountNotFound %s", 404, payload)
}

func (o *ValidateAzureAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAzureAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAzureAccountMethodNotAllowed creates a ValidateAzureAccountMethodNotAllowed with default headers values
func NewValidateAzureAccountMethodNotAllowed() *ValidateAzureAccountMethodNotAllowed {
	return &ValidateAzureAccountMethodNotAllowed{}
}

/*
ValidateAzureAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ValidateAzureAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate azure account method not allowed response has a 2xx status code
func (o *ValidateAzureAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate azure account method not allowed response has a 3xx status code
func (o *ValidateAzureAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate azure account method not allowed response has a 4xx status code
func (o *ValidateAzureAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate azure account method not allowed response has a 5xx status code
func (o *ValidateAzureAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this validate azure account method not allowed response a status code equal to that given
func (o *ValidateAzureAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the validate azure account method not allowed response
func (o *ValidateAzureAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *ValidateAzureAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateAzureAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateAzureAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAzureAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAzureAccountInternalServerError creates a ValidateAzureAccountInternalServerError with default headers values
func NewValidateAzureAccountInternalServerError() *ValidateAzureAccountInternalServerError {
	return &ValidateAzureAccountInternalServerError{}
}

/*
ValidateAzureAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ValidateAzureAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate azure account internal server error response has a 2xx status code
func (o *ValidateAzureAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate azure account internal server error response has a 3xx status code
func (o *ValidateAzureAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate azure account internal server error response has a 4xx status code
func (o *ValidateAzureAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate azure account internal server error response has a 5xx status code
func (o *ValidateAzureAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate azure account internal server error response a status code equal to that given
func (o *ValidateAzureAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate azure account internal server error response
func (o *ValidateAzureAccountInternalServerError) Code() int {
	return 500
}

func (o *ValidateAzureAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountInternalServerError %s", 500, payload)
}

func (o *ValidateAzureAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/azure/validate][%d] validateAzureAccountInternalServerError %s", 500, payload)
}

func (o *ValidateAzureAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAzureAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
