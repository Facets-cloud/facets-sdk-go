// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ValidateAwsAccountUsingPOSTReader is a Reader for the ValidateAwsAccountUsingPOST structure.
type ValidateAwsAccountUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateAwsAccountUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateAwsAccountUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewValidateAwsAccountUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewValidateAwsAccountUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewValidateAwsAccountUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateAwsAccountUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/aws/validate] validateAwsAccountUsingPOST", response, response.Code())
	}
}

// NewValidateAwsAccountUsingPOSTOK creates a ValidateAwsAccountUsingPOSTOK with default headers values
func NewValidateAwsAccountUsingPOSTOK() *ValidateAwsAccountUsingPOSTOK {
	return &ValidateAwsAccountUsingPOSTOK{}
}

/*
ValidateAwsAccountUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type ValidateAwsAccountUsingPOSTOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this validate aws account using p o s t o k response has a 2xx status code
func (o *ValidateAwsAccountUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate aws account using p o s t o k response has a 3xx status code
func (o *ValidateAwsAccountUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account using p o s t o k response has a 4xx status code
func (o *ValidateAwsAccountUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate aws account using p o s t o k response has a 5xx status code
func (o *ValidateAwsAccountUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account using p o s t o k response a status code equal to that given
func (o *ValidateAwsAccountUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate aws account using p o s t o k response
func (o *ValidateAwsAccountUsingPOSTOK) Code() int {
	return 200
}

func (o *ValidateAwsAccountUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTOK %s", 200, payload)
}

func (o *ValidateAwsAccountUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTOK %s", 200, payload)
}

func (o *ValidateAwsAccountUsingPOSTOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ValidateAwsAccountUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAwsAccountUsingPOSTCreated creates a ValidateAwsAccountUsingPOSTCreated with default headers values
func NewValidateAwsAccountUsingPOSTCreated() *ValidateAwsAccountUsingPOSTCreated {
	return &ValidateAwsAccountUsingPOSTCreated{}
}

/*
ValidateAwsAccountUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type ValidateAwsAccountUsingPOSTCreated struct {
}

// IsSuccess returns true when this validate aws account using p o s t created response has a 2xx status code
func (o *ValidateAwsAccountUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate aws account using p o s t created response has a 3xx status code
func (o *ValidateAwsAccountUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account using p o s t created response has a 4xx status code
func (o *ValidateAwsAccountUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate aws account using p o s t created response has a 5xx status code
func (o *ValidateAwsAccountUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account using p o s t created response a status code equal to that given
func (o *ValidateAwsAccountUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the validate aws account using p o s t created response
func (o *ValidateAwsAccountUsingPOSTCreated) Code() int {
	return 201
}

func (o *ValidateAwsAccountUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTCreated", 201)
}

func (o *ValidateAwsAccountUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTCreated", 201)
}

func (o *ValidateAwsAccountUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateAwsAccountUsingPOSTUnauthorized creates a ValidateAwsAccountUsingPOSTUnauthorized with default headers values
func NewValidateAwsAccountUsingPOSTUnauthorized() *ValidateAwsAccountUsingPOSTUnauthorized {
	return &ValidateAwsAccountUsingPOSTUnauthorized{}
}

/*
ValidateAwsAccountUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ValidateAwsAccountUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this validate aws account using p o s t unauthorized response has a 2xx status code
func (o *ValidateAwsAccountUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate aws account using p o s t unauthorized response has a 3xx status code
func (o *ValidateAwsAccountUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account using p o s t unauthorized response has a 4xx status code
func (o *ValidateAwsAccountUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate aws account using p o s t unauthorized response has a 5xx status code
func (o *ValidateAwsAccountUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account using p o s t unauthorized response a status code equal to that given
func (o *ValidateAwsAccountUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the validate aws account using p o s t unauthorized response
func (o *ValidateAwsAccountUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *ValidateAwsAccountUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTUnauthorized", 401)
}

func (o *ValidateAwsAccountUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTUnauthorized", 401)
}

func (o *ValidateAwsAccountUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateAwsAccountUsingPOSTForbidden creates a ValidateAwsAccountUsingPOSTForbidden with default headers values
func NewValidateAwsAccountUsingPOSTForbidden() *ValidateAwsAccountUsingPOSTForbidden {
	return &ValidateAwsAccountUsingPOSTForbidden{}
}

/*
ValidateAwsAccountUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ValidateAwsAccountUsingPOSTForbidden struct {
}

// IsSuccess returns true when this validate aws account using p o s t forbidden response has a 2xx status code
func (o *ValidateAwsAccountUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate aws account using p o s t forbidden response has a 3xx status code
func (o *ValidateAwsAccountUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account using p o s t forbidden response has a 4xx status code
func (o *ValidateAwsAccountUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate aws account using p o s t forbidden response has a 5xx status code
func (o *ValidateAwsAccountUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account using p o s t forbidden response a status code equal to that given
func (o *ValidateAwsAccountUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the validate aws account using p o s t forbidden response
func (o *ValidateAwsAccountUsingPOSTForbidden) Code() int {
	return 403
}

func (o *ValidateAwsAccountUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTForbidden", 403)
}

func (o *ValidateAwsAccountUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTForbidden", 403)
}

func (o *ValidateAwsAccountUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateAwsAccountUsingPOSTNotFound creates a ValidateAwsAccountUsingPOSTNotFound with default headers values
func NewValidateAwsAccountUsingPOSTNotFound() *ValidateAwsAccountUsingPOSTNotFound {
	return &ValidateAwsAccountUsingPOSTNotFound{}
}

/*
ValidateAwsAccountUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateAwsAccountUsingPOSTNotFound struct {
}

// IsSuccess returns true when this validate aws account using p o s t not found response has a 2xx status code
func (o *ValidateAwsAccountUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate aws account using p o s t not found response has a 3xx status code
func (o *ValidateAwsAccountUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account using p o s t not found response has a 4xx status code
func (o *ValidateAwsAccountUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate aws account using p o s t not found response has a 5xx status code
func (o *ValidateAwsAccountUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account using p o s t not found response a status code equal to that given
func (o *ValidateAwsAccountUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate aws account using p o s t not found response
func (o *ValidateAwsAccountUsingPOSTNotFound) Code() int {
	return 404
}

func (o *ValidateAwsAccountUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTNotFound", 404)
}

func (o *ValidateAwsAccountUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountUsingPOSTNotFound", 404)
}

func (o *ValidateAwsAccountUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
