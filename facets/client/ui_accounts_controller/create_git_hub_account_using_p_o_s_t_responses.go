// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateGitHubAccountUsingPOSTReader is a Reader for the CreateGitHubAccountUsingPOST structure.
type CreateGitHubAccountUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGitHubAccountUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGitHubAccountUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateGitHubAccountUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateGitHubAccountUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateGitHubAccountUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateGitHubAccountUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/github/] createGitHubAccountUsingPOST", response, response.Code())
	}
}

// NewCreateGitHubAccountUsingPOSTOK creates a CreateGitHubAccountUsingPOSTOK with default headers values
func NewCreateGitHubAccountUsingPOSTOK() *CreateGitHubAccountUsingPOSTOK {
	return &CreateGitHubAccountUsingPOSTOK{}
}

/*
CreateGitHubAccountUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateGitHubAccountUsingPOSTOK struct {
	Payload *models.GitHubAccount
}

// IsSuccess returns true when this create git hub account using p o s t o k response has a 2xx status code
func (o *CreateGitHubAccountUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create git hub account using p o s t o k response has a 3xx status code
func (o *CreateGitHubAccountUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create git hub account using p o s t o k response has a 4xx status code
func (o *CreateGitHubAccountUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create git hub account using p o s t o k response has a 5xx status code
func (o *CreateGitHubAccountUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create git hub account using p o s t o k response a status code equal to that given
func (o *CreateGitHubAccountUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create git hub account using p o s t o k response
func (o *CreateGitHubAccountUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateGitHubAccountUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTOK %s", 200, payload)
}

func (o *CreateGitHubAccountUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTOK %s", 200, payload)
}

func (o *CreateGitHubAccountUsingPOSTOK) GetPayload() *models.GitHubAccount {
	return o.Payload
}

func (o *CreateGitHubAccountUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GitHubAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGitHubAccountUsingPOSTCreated creates a CreateGitHubAccountUsingPOSTCreated with default headers values
func NewCreateGitHubAccountUsingPOSTCreated() *CreateGitHubAccountUsingPOSTCreated {
	return &CreateGitHubAccountUsingPOSTCreated{}
}

/*
CreateGitHubAccountUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateGitHubAccountUsingPOSTCreated struct {
}

// IsSuccess returns true when this create git hub account using p o s t created response has a 2xx status code
func (o *CreateGitHubAccountUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create git hub account using p o s t created response has a 3xx status code
func (o *CreateGitHubAccountUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create git hub account using p o s t created response has a 4xx status code
func (o *CreateGitHubAccountUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create git hub account using p o s t created response has a 5xx status code
func (o *CreateGitHubAccountUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create git hub account using p o s t created response a status code equal to that given
func (o *CreateGitHubAccountUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create git hub account using p o s t created response
func (o *CreateGitHubAccountUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateGitHubAccountUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTCreated", 201)
}

func (o *CreateGitHubAccountUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTCreated", 201)
}

func (o *CreateGitHubAccountUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGitHubAccountUsingPOSTUnauthorized creates a CreateGitHubAccountUsingPOSTUnauthorized with default headers values
func NewCreateGitHubAccountUsingPOSTUnauthorized() *CreateGitHubAccountUsingPOSTUnauthorized {
	return &CreateGitHubAccountUsingPOSTUnauthorized{}
}

/*
CreateGitHubAccountUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateGitHubAccountUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create git hub account using p o s t unauthorized response has a 2xx status code
func (o *CreateGitHubAccountUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create git hub account using p o s t unauthorized response has a 3xx status code
func (o *CreateGitHubAccountUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create git hub account using p o s t unauthorized response has a 4xx status code
func (o *CreateGitHubAccountUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create git hub account using p o s t unauthorized response has a 5xx status code
func (o *CreateGitHubAccountUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create git hub account using p o s t unauthorized response a status code equal to that given
func (o *CreateGitHubAccountUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create git hub account using p o s t unauthorized response
func (o *CreateGitHubAccountUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateGitHubAccountUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTUnauthorized", 401)
}

func (o *CreateGitHubAccountUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTUnauthorized", 401)
}

func (o *CreateGitHubAccountUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGitHubAccountUsingPOSTForbidden creates a CreateGitHubAccountUsingPOSTForbidden with default headers values
func NewCreateGitHubAccountUsingPOSTForbidden() *CreateGitHubAccountUsingPOSTForbidden {
	return &CreateGitHubAccountUsingPOSTForbidden{}
}

/*
CreateGitHubAccountUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateGitHubAccountUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create git hub account using p o s t forbidden response has a 2xx status code
func (o *CreateGitHubAccountUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create git hub account using p o s t forbidden response has a 3xx status code
func (o *CreateGitHubAccountUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create git hub account using p o s t forbidden response has a 4xx status code
func (o *CreateGitHubAccountUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create git hub account using p o s t forbidden response has a 5xx status code
func (o *CreateGitHubAccountUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create git hub account using p o s t forbidden response a status code equal to that given
func (o *CreateGitHubAccountUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create git hub account using p o s t forbidden response
func (o *CreateGitHubAccountUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateGitHubAccountUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTForbidden", 403)
}

func (o *CreateGitHubAccountUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTForbidden", 403)
}

func (o *CreateGitHubAccountUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGitHubAccountUsingPOSTNotFound creates a CreateGitHubAccountUsingPOSTNotFound with default headers values
func NewCreateGitHubAccountUsingPOSTNotFound() *CreateGitHubAccountUsingPOSTNotFound {
	return &CreateGitHubAccountUsingPOSTNotFound{}
}

/*
CreateGitHubAccountUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateGitHubAccountUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create git hub account using p o s t not found response has a 2xx status code
func (o *CreateGitHubAccountUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create git hub account using p o s t not found response has a 3xx status code
func (o *CreateGitHubAccountUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create git hub account using p o s t not found response has a 4xx status code
func (o *CreateGitHubAccountUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create git hub account using p o s t not found response has a 5xx status code
func (o *CreateGitHubAccountUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create git hub account using p o s t not found response a status code equal to that given
func (o *CreateGitHubAccountUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create git hub account using p o s t not found response
func (o *CreateGitHubAccountUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateGitHubAccountUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTNotFound", 404)
}

func (o *CreateGitHubAccountUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/github/][%d] createGitHubAccountUsingPOSTNotFound", 404)
}

func (o *CreateGitHubAccountUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
