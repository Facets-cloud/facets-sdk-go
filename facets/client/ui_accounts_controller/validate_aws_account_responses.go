// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ValidateAwsAccountReader is a Reader for the ValidateAwsAccount structure.
type ValidateAwsAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateAwsAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateAwsAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewValidateAwsAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateAwsAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewValidateAwsAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewValidateAwsAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/accounts/aws/validate] validateAwsAccount", response, response.Code())
	}
}

// NewValidateAwsAccountOK creates a ValidateAwsAccountOK with default headers values
func NewValidateAwsAccountOK() *ValidateAwsAccountOK {
	return &ValidateAwsAccountOK{}
}

/*
ValidateAwsAccountOK describes a response with status code 200, with default header values.

OK
*/
type ValidateAwsAccountOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this validate aws account o k response has a 2xx status code
func (o *ValidateAwsAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate aws account o k response has a 3xx status code
func (o *ValidateAwsAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account o k response has a 4xx status code
func (o *ValidateAwsAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate aws account o k response has a 5xx status code
func (o *ValidateAwsAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account o k response a status code equal to that given
func (o *ValidateAwsAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate aws account o k response
func (o *ValidateAwsAccountOK) Code() int {
	return 200
}

func (o *ValidateAwsAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountOK %s", 200, payload)
}

func (o *ValidateAwsAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountOK %s", 200, payload)
}

func (o *ValidateAwsAccountOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *ValidateAwsAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAwsAccountBadRequest creates a ValidateAwsAccountBadRequest with default headers values
func NewValidateAwsAccountBadRequest() *ValidateAwsAccountBadRequest {
	return &ValidateAwsAccountBadRequest{}
}

/*
ValidateAwsAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ValidateAwsAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate aws account bad request response has a 2xx status code
func (o *ValidateAwsAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate aws account bad request response has a 3xx status code
func (o *ValidateAwsAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account bad request response has a 4xx status code
func (o *ValidateAwsAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate aws account bad request response has a 5xx status code
func (o *ValidateAwsAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account bad request response a status code equal to that given
func (o *ValidateAwsAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the validate aws account bad request response
func (o *ValidateAwsAccountBadRequest) Code() int {
	return 400
}

func (o *ValidateAwsAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountBadRequest %s", 400, payload)
}

func (o *ValidateAwsAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountBadRequest %s", 400, payload)
}

func (o *ValidateAwsAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAwsAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAwsAccountNotFound creates a ValidateAwsAccountNotFound with default headers values
func NewValidateAwsAccountNotFound() *ValidateAwsAccountNotFound {
	return &ValidateAwsAccountNotFound{}
}

/*
ValidateAwsAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateAwsAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate aws account not found response has a 2xx status code
func (o *ValidateAwsAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate aws account not found response has a 3xx status code
func (o *ValidateAwsAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account not found response has a 4xx status code
func (o *ValidateAwsAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate aws account not found response has a 5xx status code
func (o *ValidateAwsAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account not found response a status code equal to that given
func (o *ValidateAwsAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate aws account not found response
func (o *ValidateAwsAccountNotFound) Code() int {
	return 404
}

func (o *ValidateAwsAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountNotFound %s", 404, payload)
}

func (o *ValidateAwsAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountNotFound %s", 404, payload)
}

func (o *ValidateAwsAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAwsAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAwsAccountMethodNotAllowed creates a ValidateAwsAccountMethodNotAllowed with default headers values
func NewValidateAwsAccountMethodNotAllowed() *ValidateAwsAccountMethodNotAllowed {
	return &ValidateAwsAccountMethodNotAllowed{}
}

/*
ValidateAwsAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ValidateAwsAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate aws account method not allowed response has a 2xx status code
func (o *ValidateAwsAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate aws account method not allowed response has a 3xx status code
func (o *ValidateAwsAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account method not allowed response has a 4xx status code
func (o *ValidateAwsAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate aws account method not allowed response has a 5xx status code
func (o *ValidateAwsAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this validate aws account method not allowed response a status code equal to that given
func (o *ValidateAwsAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the validate aws account method not allowed response
func (o *ValidateAwsAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *ValidateAwsAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateAwsAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountMethodNotAllowed %s", 405, payload)
}

func (o *ValidateAwsAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAwsAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewValidateAwsAccountInternalServerError creates a ValidateAwsAccountInternalServerError with default headers values
func NewValidateAwsAccountInternalServerError() *ValidateAwsAccountInternalServerError {
	return &ValidateAwsAccountInternalServerError{}
}

/*
ValidateAwsAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ValidateAwsAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this validate aws account internal server error response has a 2xx status code
func (o *ValidateAwsAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate aws account internal server error response has a 3xx status code
func (o *ValidateAwsAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate aws account internal server error response has a 4xx status code
func (o *ValidateAwsAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate aws account internal server error response has a 5xx status code
func (o *ValidateAwsAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this validate aws account internal server error response a status code equal to that given
func (o *ValidateAwsAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the validate aws account internal server error response
func (o *ValidateAwsAccountInternalServerError) Code() int {
	return 500
}

func (o *ValidateAwsAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountInternalServerError %s", 500, payload)
}

func (o *ValidateAwsAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/accounts/aws/validate][%d] validateAwsAccountInternalServerError %s", 500, payload)
}

func (o *ValidateAwsAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ValidateAwsAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
