// Code generated by go-swagger; DO NOT EDIT.

package ui_accounts_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateAzureAccountReader is a Reader for the UpdateAzureAccount structure.
type UpdateAzureAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAzureAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAzureAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAzureAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAzureAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateAzureAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAzureAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/accounts/azure/{id}] updateAzureAccount", response, response.Code())
	}
}

// NewUpdateAzureAccountOK creates a UpdateAzureAccountOK with default headers values
func NewUpdateAzureAccountOK() *UpdateAzureAccountOK {
	return &UpdateAzureAccountOK{}
}

/*
UpdateAzureAccountOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAzureAccountOK struct {
	Payload *models.AzureAccount
}

// IsSuccess returns true when this update azure account o k response has a 2xx status code
func (o *UpdateAzureAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update azure account o k response has a 3xx status code
func (o *UpdateAzureAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure account o k response has a 4xx status code
func (o *UpdateAzureAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update azure account o k response has a 5xx status code
func (o *UpdateAzureAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure account o k response a status code equal to that given
func (o *UpdateAzureAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update azure account o k response
func (o *UpdateAzureAccountOK) Code() int {
	return 200
}

func (o *UpdateAzureAccountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountOK %s", 200, payload)
}

func (o *UpdateAzureAccountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountOK %s", 200, payload)
}

func (o *UpdateAzureAccountOK) GetPayload() *models.AzureAccount {
	return o.Payload
}

func (o *UpdateAzureAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AzureAccount)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureAccountBadRequest creates a UpdateAzureAccountBadRequest with default headers values
func NewUpdateAzureAccountBadRequest() *UpdateAzureAccountBadRequest {
	return &UpdateAzureAccountBadRequest{}
}

/*
UpdateAzureAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAzureAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure account bad request response has a 2xx status code
func (o *UpdateAzureAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure account bad request response has a 3xx status code
func (o *UpdateAzureAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure account bad request response has a 4xx status code
func (o *UpdateAzureAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure account bad request response has a 5xx status code
func (o *UpdateAzureAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure account bad request response a status code equal to that given
func (o *UpdateAzureAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update azure account bad request response
func (o *UpdateAzureAccountBadRequest) Code() int {
	return 400
}

func (o *UpdateAzureAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountBadRequest %s", 400, payload)
}

func (o *UpdateAzureAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountBadRequest %s", 400, payload)
}

func (o *UpdateAzureAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureAccountNotFound creates a UpdateAzureAccountNotFound with default headers values
func NewUpdateAzureAccountNotFound() *UpdateAzureAccountNotFound {
	return &UpdateAzureAccountNotFound{}
}

/*
UpdateAzureAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAzureAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure account not found response has a 2xx status code
func (o *UpdateAzureAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure account not found response has a 3xx status code
func (o *UpdateAzureAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure account not found response has a 4xx status code
func (o *UpdateAzureAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure account not found response has a 5xx status code
func (o *UpdateAzureAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure account not found response a status code equal to that given
func (o *UpdateAzureAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update azure account not found response
func (o *UpdateAzureAccountNotFound) Code() int {
	return 404
}

func (o *UpdateAzureAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountNotFound %s", 404, payload)
}

func (o *UpdateAzureAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountNotFound %s", 404, payload)
}

func (o *UpdateAzureAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureAccountMethodNotAllowed creates a UpdateAzureAccountMethodNotAllowed with default headers values
func NewUpdateAzureAccountMethodNotAllowed() *UpdateAzureAccountMethodNotAllowed {
	return &UpdateAzureAccountMethodNotAllowed{}
}

/*
UpdateAzureAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateAzureAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure account method not allowed response has a 2xx status code
func (o *UpdateAzureAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure account method not allowed response has a 3xx status code
func (o *UpdateAzureAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure account method not allowed response has a 4xx status code
func (o *UpdateAzureAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure account method not allowed response has a 5xx status code
func (o *UpdateAzureAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure account method not allowed response a status code equal to that given
func (o *UpdateAzureAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update azure account method not allowed response
func (o *UpdateAzureAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateAzureAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAzureAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAzureAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureAccountInternalServerError creates a UpdateAzureAccountInternalServerError with default headers values
func NewUpdateAzureAccountInternalServerError() *UpdateAzureAccountInternalServerError {
	return &UpdateAzureAccountInternalServerError{}
}

/*
UpdateAzureAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateAzureAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure account internal server error response has a 2xx status code
func (o *UpdateAzureAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure account internal server error response has a 3xx status code
func (o *UpdateAzureAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure account internal server error response has a 4xx status code
func (o *UpdateAzureAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update azure account internal server error response has a 5xx status code
func (o *UpdateAzureAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update azure account internal server error response a status code equal to that given
func (o *UpdateAzureAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update azure account internal server error response
func (o *UpdateAzureAccountInternalServerError) Code() int {
	return 500
}

func (o *UpdateAzureAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountInternalServerError %s", 500, payload)
}

func (o *UpdateAzureAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/accounts/azure/{id}][%d] updateAzureAccountInternalServerError %s", 500, payload)
}

func (o *UpdateAzureAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
