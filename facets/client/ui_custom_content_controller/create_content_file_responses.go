// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_content_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateContentFileReader is a Reader for the CreateContentFile structure.
type CreateContentFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateContentFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateContentFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateContentFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateContentFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateContentFileMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateContentFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/content/files] createContentFile", response, response.Code())
	}
}

// NewCreateContentFileOK creates a CreateContentFileOK with default headers values
func NewCreateContentFileOK() *CreateContentFileOK {
	return &CreateContentFileOK{}
}

/*
CreateContentFileOK describes a response with status code 200, with default header values.

OK
*/
type CreateContentFileOK struct {
	Payload *models.ContentFile
}

// IsSuccess returns true when this create content file o k response has a 2xx status code
func (o *CreateContentFileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create content file o k response has a 3xx status code
func (o *CreateContentFileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file o k response has a 4xx status code
func (o *CreateContentFileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create content file o k response has a 5xx status code
func (o *CreateContentFileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file o k response a status code equal to that given
func (o *CreateContentFileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create content file o k response
func (o *CreateContentFileOK) Code() int {
	return 200
}

func (o *CreateContentFileOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileOK %s", 200, payload)
}

func (o *CreateContentFileOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileOK %s", 200, payload)
}

func (o *CreateContentFileOK) GetPayload() *models.ContentFile {
	return o.Payload
}

func (o *CreateContentFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFileBadRequest creates a CreateContentFileBadRequest with default headers values
func NewCreateContentFileBadRequest() *CreateContentFileBadRequest {
	return &CreateContentFileBadRequest{}
}

/*
CreateContentFileBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateContentFileBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create content file bad request response has a 2xx status code
func (o *CreateContentFileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create content file bad request response has a 3xx status code
func (o *CreateContentFileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file bad request response has a 4xx status code
func (o *CreateContentFileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create content file bad request response has a 5xx status code
func (o *CreateContentFileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file bad request response a status code equal to that given
func (o *CreateContentFileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create content file bad request response
func (o *CreateContentFileBadRequest) Code() int {
	return 400
}

func (o *CreateContentFileBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileBadRequest %s", 400, payload)
}

func (o *CreateContentFileBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileBadRequest %s", 400, payload)
}

func (o *CreateContentFileBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateContentFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFileNotFound creates a CreateContentFileNotFound with default headers values
func NewCreateContentFileNotFound() *CreateContentFileNotFound {
	return &CreateContentFileNotFound{}
}

/*
CreateContentFileNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateContentFileNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create content file not found response has a 2xx status code
func (o *CreateContentFileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create content file not found response has a 3xx status code
func (o *CreateContentFileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file not found response has a 4xx status code
func (o *CreateContentFileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create content file not found response has a 5xx status code
func (o *CreateContentFileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file not found response a status code equal to that given
func (o *CreateContentFileNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create content file not found response
func (o *CreateContentFileNotFound) Code() int {
	return 404
}

func (o *CreateContentFileNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileNotFound %s", 404, payload)
}

func (o *CreateContentFileNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileNotFound %s", 404, payload)
}

func (o *CreateContentFileNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateContentFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFileMethodNotAllowed creates a CreateContentFileMethodNotAllowed with default headers values
func NewCreateContentFileMethodNotAllowed() *CreateContentFileMethodNotAllowed {
	return &CreateContentFileMethodNotAllowed{}
}

/*
CreateContentFileMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateContentFileMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create content file method not allowed response has a 2xx status code
func (o *CreateContentFileMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create content file method not allowed response has a 3xx status code
func (o *CreateContentFileMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file method not allowed response has a 4xx status code
func (o *CreateContentFileMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create content file method not allowed response has a 5xx status code
func (o *CreateContentFileMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file method not allowed response a status code equal to that given
func (o *CreateContentFileMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create content file method not allowed response
func (o *CreateContentFileMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateContentFileMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileMethodNotAllowed %s", 405, payload)
}

func (o *CreateContentFileMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileMethodNotAllowed %s", 405, payload)
}

func (o *CreateContentFileMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateContentFileMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFileInternalServerError creates a CreateContentFileInternalServerError with default headers values
func NewCreateContentFileInternalServerError() *CreateContentFileInternalServerError {
	return &CreateContentFileInternalServerError{}
}

/*
CreateContentFileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateContentFileInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create content file internal server error response has a 2xx status code
func (o *CreateContentFileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create content file internal server error response has a 3xx status code
func (o *CreateContentFileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file internal server error response has a 4xx status code
func (o *CreateContentFileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create content file internal server error response has a 5xx status code
func (o *CreateContentFileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create content file internal server error response a status code equal to that given
func (o *CreateContentFileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create content file internal server error response
func (o *CreateContentFileInternalServerError) Code() int {
	return 500
}

func (o *CreateContentFileInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileInternalServerError %s", 500, payload)
}

func (o *CreateContentFileInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileInternalServerError %s", 500, payload)
}

func (o *CreateContentFileInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateContentFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
