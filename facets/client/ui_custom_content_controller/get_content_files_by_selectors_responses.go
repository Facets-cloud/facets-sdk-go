// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_content_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetContentFilesBySelectorsReader is a Reader for the GetContentFilesBySelectors structure.
type GetContentFilesBySelectorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentFilesBySelectorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentFilesBySelectorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetContentFilesBySelectorsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentFilesBySelectorsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetContentFilesBySelectorsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetContentFilesBySelectorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/content/files/selectors/{contentType}] getContentFilesBySelectors", response, response.Code())
	}
}

// NewGetContentFilesBySelectorsOK creates a GetContentFilesBySelectorsOK with default headers values
func NewGetContentFilesBySelectorsOK() *GetContentFilesBySelectorsOK {
	return &GetContentFilesBySelectorsOK{}
}

/*
GetContentFilesBySelectorsOK describes a response with status code 200, with default header values.

OK
*/
type GetContentFilesBySelectorsOK struct {
	Payload []*models.ContentFile
}

// IsSuccess returns true when this get content files by selectors o k response has a 2xx status code
func (o *GetContentFilesBySelectorsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get content files by selectors o k response has a 3xx status code
func (o *GetContentFilesBySelectorsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors o k response has a 4xx status code
func (o *GetContentFilesBySelectorsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get content files by selectors o k response has a 5xx status code
func (o *GetContentFilesBySelectorsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors o k response a status code equal to that given
func (o *GetContentFilesBySelectorsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get content files by selectors o k response
func (o *GetContentFilesBySelectorsOK) Code() int {
	return 200
}

func (o *GetContentFilesBySelectorsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsOK %s", 200, payload)
}

func (o *GetContentFilesBySelectorsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsOK %s", 200, payload)
}

func (o *GetContentFilesBySelectorsOK) GetPayload() []*models.ContentFile {
	return o.Payload
}

func (o *GetContentFilesBySelectorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentFilesBySelectorsBadRequest creates a GetContentFilesBySelectorsBadRequest with default headers values
func NewGetContentFilesBySelectorsBadRequest() *GetContentFilesBySelectorsBadRequest {
	return &GetContentFilesBySelectorsBadRequest{}
}

/*
GetContentFilesBySelectorsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetContentFilesBySelectorsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get content files by selectors bad request response has a 2xx status code
func (o *GetContentFilesBySelectorsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get content files by selectors bad request response has a 3xx status code
func (o *GetContentFilesBySelectorsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors bad request response has a 4xx status code
func (o *GetContentFilesBySelectorsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get content files by selectors bad request response has a 5xx status code
func (o *GetContentFilesBySelectorsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors bad request response a status code equal to that given
func (o *GetContentFilesBySelectorsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get content files by selectors bad request response
func (o *GetContentFilesBySelectorsBadRequest) Code() int {
	return 400
}

func (o *GetContentFilesBySelectorsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsBadRequest %s", 400, payload)
}

func (o *GetContentFilesBySelectorsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsBadRequest %s", 400, payload)
}

func (o *GetContentFilesBySelectorsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetContentFilesBySelectorsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentFilesBySelectorsNotFound creates a GetContentFilesBySelectorsNotFound with default headers values
func NewGetContentFilesBySelectorsNotFound() *GetContentFilesBySelectorsNotFound {
	return &GetContentFilesBySelectorsNotFound{}
}

/*
GetContentFilesBySelectorsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetContentFilesBySelectorsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get content files by selectors not found response has a 2xx status code
func (o *GetContentFilesBySelectorsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get content files by selectors not found response has a 3xx status code
func (o *GetContentFilesBySelectorsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors not found response has a 4xx status code
func (o *GetContentFilesBySelectorsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get content files by selectors not found response has a 5xx status code
func (o *GetContentFilesBySelectorsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors not found response a status code equal to that given
func (o *GetContentFilesBySelectorsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get content files by selectors not found response
func (o *GetContentFilesBySelectorsNotFound) Code() int {
	return 404
}

func (o *GetContentFilesBySelectorsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsNotFound %s", 404, payload)
}

func (o *GetContentFilesBySelectorsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsNotFound %s", 404, payload)
}

func (o *GetContentFilesBySelectorsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetContentFilesBySelectorsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentFilesBySelectorsMethodNotAllowed creates a GetContentFilesBySelectorsMethodNotAllowed with default headers values
func NewGetContentFilesBySelectorsMethodNotAllowed() *GetContentFilesBySelectorsMethodNotAllowed {
	return &GetContentFilesBySelectorsMethodNotAllowed{}
}

/*
GetContentFilesBySelectorsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetContentFilesBySelectorsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get content files by selectors method not allowed response has a 2xx status code
func (o *GetContentFilesBySelectorsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get content files by selectors method not allowed response has a 3xx status code
func (o *GetContentFilesBySelectorsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors method not allowed response has a 4xx status code
func (o *GetContentFilesBySelectorsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get content files by selectors method not allowed response has a 5xx status code
func (o *GetContentFilesBySelectorsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors method not allowed response a status code equal to that given
func (o *GetContentFilesBySelectorsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get content files by selectors method not allowed response
func (o *GetContentFilesBySelectorsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetContentFilesBySelectorsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsMethodNotAllowed %s", 405, payload)
}

func (o *GetContentFilesBySelectorsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsMethodNotAllowed %s", 405, payload)
}

func (o *GetContentFilesBySelectorsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetContentFilesBySelectorsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentFilesBySelectorsInternalServerError creates a GetContentFilesBySelectorsInternalServerError with default headers values
func NewGetContentFilesBySelectorsInternalServerError() *GetContentFilesBySelectorsInternalServerError {
	return &GetContentFilesBySelectorsInternalServerError{}
}

/*
GetContentFilesBySelectorsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetContentFilesBySelectorsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get content files by selectors internal server error response has a 2xx status code
func (o *GetContentFilesBySelectorsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get content files by selectors internal server error response has a 3xx status code
func (o *GetContentFilesBySelectorsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors internal server error response has a 4xx status code
func (o *GetContentFilesBySelectorsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get content files by selectors internal server error response has a 5xx status code
func (o *GetContentFilesBySelectorsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get content files by selectors internal server error response a status code equal to that given
func (o *GetContentFilesBySelectorsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get content files by selectors internal server error response
func (o *GetContentFilesBySelectorsInternalServerError) Code() int {
	return 500
}

func (o *GetContentFilesBySelectorsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsInternalServerError %s", 500, payload)
}

func (o *GetContentFilesBySelectorsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsInternalServerError %s", 500, payload)
}

func (o *GetContentFilesBySelectorsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetContentFilesBySelectorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
