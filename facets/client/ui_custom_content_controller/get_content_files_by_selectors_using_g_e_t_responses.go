// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_content_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetContentFilesBySelectorsUsingGETReader is a Reader for the GetContentFilesBySelectorsUsingGET structure.
type GetContentFilesBySelectorsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetContentFilesBySelectorsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetContentFilesBySelectorsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetContentFilesBySelectorsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetContentFilesBySelectorsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetContentFilesBySelectorsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/content/files/selectors/{contentType}] getContentFilesBySelectorsUsingGET", response, response.Code())
	}
}

// NewGetContentFilesBySelectorsUsingGETOK creates a GetContentFilesBySelectorsUsingGETOK with default headers values
func NewGetContentFilesBySelectorsUsingGETOK() *GetContentFilesBySelectorsUsingGETOK {
	return &GetContentFilesBySelectorsUsingGETOK{}
}

/*
GetContentFilesBySelectorsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetContentFilesBySelectorsUsingGETOK struct {
	Payload []*models.ContentFile
}

// IsSuccess returns true when this get content files by selectors using g e t o k response has a 2xx status code
func (o *GetContentFilesBySelectorsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get content files by selectors using g e t o k response has a 3xx status code
func (o *GetContentFilesBySelectorsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors using g e t o k response has a 4xx status code
func (o *GetContentFilesBySelectorsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get content files by selectors using g e t o k response has a 5xx status code
func (o *GetContentFilesBySelectorsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors using g e t o k response a status code equal to that given
func (o *GetContentFilesBySelectorsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get content files by selectors using g e t o k response
func (o *GetContentFilesBySelectorsUsingGETOK) Code() int {
	return 200
}

func (o *GetContentFilesBySelectorsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETOK %s", 200, payload)
}

func (o *GetContentFilesBySelectorsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETOK %s", 200, payload)
}

func (o *GetContentFilesBySelectorsUsingGETOK) GetPayload() []*models.ContentFile {
	return o.Payload
}

func (o *GetContentFilesBySelectorsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetContentFilesBySelectorsUsingGETUnauthorized creates a GetContentFilesBySelectorsUsingGETUnauthorized with default headers values
func NewGetContentFilesBySelectorsUsingGETUnauthorized() *GetContentFilesBySelectorsUsingGETUnauthorized {
	return &GetContentFilesBySelectorsUsingGETUnauthorized{}
}

/*
GetContentFilesBySelectorsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetContentFilesBySelectorsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get content files by selectors using g e t unauthorized response has a 2xx status code
func (o *GetContentFilesBySelectorsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get content files by selectors using g e t unauthorized response has a 3xx status code
func (o *GetContentFilesBySelectorsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors using g e t unauthorized response has a 4xx status code
func (o *GetContentFilesBySelectorsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get content files by selectors using g e t unauthorized response has a 5xx status code
func (o *GetContentFilesBySelectorsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors using g e t unauthorized response a status code equal to that given
func (o *GetContentFilesBySelectorsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get content files by selectors using g e t unauthorized response
func (o *GetContentFilesBySelectorsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetContentFilesBySelectorsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETUnauthorized", 401)
}

func (o *GetContentFilesBySelectorsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETUnauthorized", 401)
}

func (o *GetContentFilesBySelectorsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetContentFilesBySelectorsUsingGETForbidden creates a GetContentFilesBySelectorsUsingGETForbidden with default headers values
func NewGetContentFilesBySelectorsUsingGETForbidden() *GetContentFilesBySelectorsUsingGETForbidden {
	return &GetContentFilesBySelectorsUsingGETForbidden{}
}

/*
GetContentFilesBySelectorsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetContentFilesBySelectorsUsingGETForbidden struct {
}

// IsSuccess returns true when this get content files by selectors using g e t forbidden response has a 2xx status code
func (o *GetContentFilesBySelectorsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get content files by selectors using g e t forbidden response has a 3xx status code
func (o *GetContentFilesBySelectorsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors using g e t forbidden response has a 4xx status code
func (o *GetContentFilesBySelectorsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get content files by selectors using g e t forbidden response has a 5xx status code
func (o *GetContentFilesBySelectorsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors using g e t forbidden response a status code equal to that given
func (o *GetContentFilesBySelectorsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get content files by selectors using g e t forbidden response
func (o *GetContentFilesBySelectorsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetContentFilesBySelectorsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETForbidden", 403)
}

func (o *GetContentFilesBySelectorsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETForbidden", 403)
}

func (o *GetContentFilesBySelectorsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetContentFilesBySelectorsUsingGETNotFound creates a GetContentFilesBySelectorsUsingGETNotFound with default headers values
func NewGetContentFilesBySelectorsUsingGETNotFound() *GetContentFilesBySelectorsUsingGETNotFound {
	return &GetContentFilesBySelectorsUsingGETNotFound{}
}

/*
GetContentFilesBySelectorsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetContentFilesBySelectorsUsingGETNotFound struct {
}

// IsSuccess returns true when this get content files by selectors using g e t not found response has a 2xx status code
func (o *GetContentFilesBySelectorsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get content files by selectors using g e t not found response has a 3xx status code
func (o *GetContentFilesBySelectorsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get content files by selectors using g e t not found response has a 4xx status code
func (o *GetContentFilesBySelectorsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get content files by selectors using g e t not found response has a 5xx status code
func (o *GetContentFilesBySelectorsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get content files by selectors using g e t not found response a status code equal to that given
func (o *GetContentFilesBySelectorsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get content files by selectors using g e t not found response
func (o *GetContentFilesBySelectorsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetContentFilesBySelectorsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETNotFound", 404)
}

func (o *GetContentFilesBySelectorsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/content/files/selectors/{contentType}][%d] getContentFilesBySelectorsUsingGETNotFound", 404)
}

func (o *GetContentFilesBySelectorsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
