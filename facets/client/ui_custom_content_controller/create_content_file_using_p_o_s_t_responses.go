// Code generated by go-swagger; DO NOT EDIT.

package ui_custom_content_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateContentFileUsingPOSTReader is a Reader for the CreateContentFileUsingPOST structure.
type CreateContentFileUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateContentFileUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateContentFileUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateContentFileUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateContentFileUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateContentFileUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateContentFileUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/content/files] createContentFileUsingPOST", response, response.Code())
	}
}

// NewCreateContentFileUsingPOSTOK creates a CreateContentFileUsingPOSTOK with default headers values
func NewCreateContentFileUsingPOSTOK() *CreateContentFileUsingPOSTOK {
	return &CreateContentFileUsingPOSTOK{}
}

/*
CreateContentFileUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateContentFileUsingPOSTOK struct {
	Payload *models.ContentFile
}

// IsSuccess returns true when this create content file using p o s t o k response has a 2xx status code
func (o *CreateContentFileUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create content file using p o s t o k response has a 3xx status code
func (o *CreateContentFileUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file using p o s t o k response has a 4xx status code
func (o *CreateContentFileUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create content file using p o s t o k response has a 5xx status code
func (o *CreateContentFileUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file using p o s t o k response a status code equal to that given
func (o *CreateContentFileUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create content file using p o s t o k response
func (o *CreateContentFileUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateContentFileUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTOK %s", 200, payload)
}

func (o *CreateContentFileUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTOK %s", 200, payload)
}

func (o *CreateContentFileUsingPOSTOK) GetPayload() *models.ContentFile {
	return o.Payload
}

func (o *CreateContentFileUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ContentFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateContentFileUsingPOSTCreated creates a CreateContentFileUsingPOSTCreated with default headers values
func NewCreateContentFileUsingPOSTCreated() *CreateContentFileUsingPOSTCreated {
	return &CreateContentFileUsingPOSTCreated{}
}

/*
CreateContentFileUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateContentFileUsingPOSTCreated struct {
}

// IsSuccess returns true when this create content file using p o s t created response has a 2xx status code
func (o *CreateContentFileUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create content file using p o s t created response has a 3xx status code
func (o *CreateContentFileUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file using p o s t created response has a 4xx status code
func (o *CreateContentFileUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create content file using p o s t created response has a 5xx status code
func (o *CreateContentFileUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file using p o s t created response a status code equal to that given
func (o *CreateContentFileUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create content file using p o s t created response
func (o *CreateContentFileUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateContentFileUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTCreated", 201)
}

func (o *CreateContentFileUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTCreated", 201)
}

func (o *CreateContentFileUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateContentFileUsingPOSTUnauthorized creates a CreateContentFileUsingPOSTUnauthorized with default headers values
func NewCreateContentFileUsingPOSTUnauthorized() *CreateContentFileUsingPOSTUnauthorized {
	return &CreateContentFileUsingPOSTUnauthorized{}
}

/*
CreateContentFileUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateContentFileUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create content file using p o s t unauthorized response has a 2xx status code
func (o *CreateContentFileUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create content file using p o s t unauthorized response has a 3xx status code
func (o *CreateContentFileUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file using p o s t unauthorized response has a 4xx status code
func (o *CreateContentFileUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create content file using p o s t unauthorized response has a 5xx status code
func (o *CreateContentFileUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file using p o s t unauthorized response a status code equal to that given
func (o *CreateContentFileUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create content file using p o s t unauthorized response
func (o *CreateContentFileUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateContentFileUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTUnauthorized", 401)
}

func (o *CreateContentFileUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTUnauthorized", 401)
}

func (o *CreateContentFileUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateContentFileUsingPOSTForbidden creates a CreateContentFileUsingPOSTForbidden with default headers values
func NewCreateContentFileUsingPOSTForbidden() *CreateContentFileUsingPOSTForbidden {
	return &CreateContentFileUsingPOSTForbidden{}
}

/*
CreateContentFileUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateContentFileUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create content file using p o s t forbidden response has a 2xx status code
func (o *CreateContentFileUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create content file using p o s t forbidden response has a 3xx status code
func (o *CreateContentFileUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file using p o s t forbidden response has a 4xx status code
func (o *CreateContentFileUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create content file using p o s t forbidden response has a 5xx status code
func (o *CreateContentFileUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file using p o s t forbidden response a status code equal to that given
func (o *CreateContentFileUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create content file using p o s t forbidden response
func (o *CreateContentFileUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateContentFileUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTForbidden", 403)
}

func (o *CreateContentFileUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTForbidden", 403)
}

func (o *CreateContentFileUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateContentFileUsingPOSTNotFound creates a CreateContentFileUsingPOSTNotFound with default headers values
func NewCreateContentFileUsingPOSTNotFound() *CreateContentFileUsingPOSTNotFound {
	return &CreateContentFileUsingPOSTNotFound{}
}

/*
CreateContentFileUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateContentFileUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create content file using p o s t not found response has a 2xx status code
func (o *CreateContentFileUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create content file using p o s t not found response has a 3xx status code
func (o *CreateContentFileUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create content file using p o s t not found response has a 4xx status code
func (o *CreateContentFileUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create content file using p o s t not found response has a 5xx status code
func (o *CreateContentFileUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create content file using p o s t not found response a status code equal to that given
func (o *CreateContentFileUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create content file using p o s t not found response
func (o *CreateContentFileUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateContentFileUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTNotFound", 404)
}

func (o *CreateContentFileUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/content/files][%d] createContentFileUsingPOSTNotFound", 404)
}

func (o *CreateContentFileUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
