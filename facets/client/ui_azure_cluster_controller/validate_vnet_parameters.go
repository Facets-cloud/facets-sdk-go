// Code generated by go-swagger; DO NOT EDIT.

package ui_azure_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewValidateVnetParams creates a new ValidateVnetParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewValidateVnetParams() *ValidateVnetParams {
	return &ValidateVnetParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewValidateVnetParamsWithTimeout creates a new ValidateVnetParams object
// with the ability to set a timeout on a request.
func NewValidateVnetParamsWithTimeout(timeout time.Duration) *ValidateVnetParams {
	return &ValidateVnetParams{
		timeout: timeout,
	}
}

// NewValidateVnetParamsWithContext creates a new ValidateVnetParams object
// with the ability to set a context for a request.
func NewValidateVnetParamsWithContext(ctx context.Context) *ValidateVnetParams {
	return &ValidateVnetParams{
		Context: ctx,
	}
}

// NewValidateVnetParamsWithHTTPClient creates a new ValidateVnetParams object
// with the ability to set a custom HTTPClient for a request.
func NewValidateVnetParamsWithHTTPClient(client *http.Client) *ValidateVnetParams {
	return &ValidateVnetParams{
		HTTPClient: client,
	}
}

/*
ValidateVnetParams contains all the parameters to send to the API endpoint

	for the validate vnet operation.

	Typically these are written to a http.Request.
*/
type ValidateVnetParams struct {

	// AccountID.
	AccountID string

	// ResourceGroup.
	ResourceGroup string

	// Vnet.
	Vnet string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the validate vnet params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ValidateVnetParams) WithDefaults() *ValidateVnetParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the validate vnet params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ValidateVnetParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the validate vnet params
func (o *ValidateVnetParams) WithTimeout(timeout time.Duration) *ValidateVnetParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the validate vnet params
func (o *ValidateVnetParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the validate vnet params
func (o *ValidateVnetParams) WithContext(ctx context.Context) *ValidateVnetParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the validate vnet params
func (o *ValidateVnetParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the validate vnet params
func (o *ValidateVnetParams) WithHTTPClient(client *http.Client) *ValidateVnetParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the validate vnet params
func (o *ValidateVnetParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the validate vnet params
func (o *ValidateVnetParams) WithAccountID(accountID string) *ValidateVnetParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the validate vnet params
func (o *ValidateVnetParams) SetAccountID(accountID string) {
	o.AccountID = accountID
}

// WithResourceGroup adds the resourceGroup to the validate vnet params
func (o *ValidateVnetParams) WithResourceGroup(resourceGroup string) *ValidateVnetParams {
	o.SetResourceGroup(resourceGroup)
	return o
}

// SetResourceGroup adds the resourceGroup to the validate vnet params
func (o *ValidateVnetParams) SetResourceGroup(resourceGroup string) {
	o.ResourceGroup = resourceGroup
}

// WithVnet adds the vnet to the validate vnet params
func (o *ValidateVnetParams) WithVnet(vnet string) *ValidateVnetParams {
	o.SetVnet(vnet)
	return o
}

// SetVnet adds the vnet to the validate vnet params
func (o *ValidateVnetParams) SetVnet(vnet string) {
	o.Vnet = vnet
}

// WriteToRequest writes these params to a swagger request
func (o *ValidateVnetParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param accountId
	qrAccountID := o.AccountID
	qAccountID := qrAccountID
	if qAccountID != "" {

		if err := r.SetQueryParam("accountId", qAccountID); err != nil {
			return err
		}
	}

	// query param resourceGroup
	qrResourceGroup := o.ResourceGroup
	qResourceGroup := qrResourceGroup
	if qResourceGroup != "" {

		if err := r.SetQueryParam("resourceGroup", qResourceGroup); err != nil {
			return err
		}
	}

	// query param vnet
	qrVnet := o.Vnet
	qVnet := qrVnet
	if qVnet != "" {

		if err := r.SetQueryParam("vnet", qVnet); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
