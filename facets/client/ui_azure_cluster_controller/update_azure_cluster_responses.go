// Code generated by go-swagger; DO NOT EDIT.

package ui_azure_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateAzureClusterReader is a Reader for the UpdateAzureCluster structure.
type UpdateAzureClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateAzureClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateAzureClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateAzureClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateAzureClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateAzureClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateAzureClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/azure/clusters/{clusterId}] updateAzureCluster", response, response.Code())
	}
}

// NewUpdateAzureClusterOK creates a UpdateAzureClusterOK with default headers values
func NewUpdateAzureClusterOK() *UpdateAzureClusterOK {
	return &UpdateAzureClusterOK{}
}

/*
UpdateAzureClusterOK describes a response with status code 200, with default header values.

OK
*/
type UpdateAzureClusterOK struct {
	Payload *models.AzureCluster
}

// IsSuccess returns true when this update azure cluster o k response has a 2xx status code
func (o *UpdateAzureClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update azure cluster o k response has a 3xx status code
func (o *UpdateAzureClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure cluster o k response has a 4xx status code
func (o *UpdateAzureClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update azure cluster o k response has a 5xx status code
func (o *UpdateAzureClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure cluster o k response a status code equal to that given
func (o *UpdateAzureClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update azure cluster o k response
func (o *UpdateAzureClusterOK) Code() int {
	return 200
}

func (o *UpdateAzureClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterOK %s", 200, payload)
}

func (o *UpdateAzureClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterOK %s", 200, payload)
}

func (o *UpdateAzureClusterOK) GetPayload() *models.AzureCluster {
	return o.Payload
}

func (o *UpdateAzureClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AzureCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureClusterBadRequest creates a UpdateAzureClusterBadRequest with default headers values
func NewUpdateAzureClusterBadRequest() *UpdateAzureClusterBadRequest {
	return &UpdateAzureClusterBadRequest{}
}

/*
UpdateAzureClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateAzureClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure cluster bad request response has a 2xx status code
func (o *UpdateAzureClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure cluster bad request response has a 3xx status code
func (o *UpdateAzureClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure cluster bad request response has a 4xx status code
func (o *UpdateAzureClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure cluster bad request response has a 5xx status code
func (o *UpdateAzureClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure cluster bad request response a status code equal to that given
func (o *UpdateAzureClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update azure cluster bad request response
func (o *UpdateAzureClusterBadRequest) Code() int {
	return 400
}

func (o *UpdateAzureClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterBadRequest %s", 400, payload)
}

func (o *UpdateAzureClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterBadRequest %s", 400, payload)
}

func (o *UpdateAzureClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureClusterNotFound creates a UpdateAzureClusterNotFound with default headers values
func NewUpdateAzureClusterNotFound() *UpdateAzureClusterNotFound {
	return &UpdateAzureClusterNotFound{}
}

/*
UpdateAzureClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateAzureClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure cluster not found response has a 2xx status code
func (o *UpdateAzureClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure cluster not found response has a 3xx status code
func (o *UpdateAzureClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure cluster not found response has a 4xx status code
func (o *UpdateAzureClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure cluster not found response has a 5xx status code
func (o *UpdateAzureClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure cluster not found response a status code equal to that given
func (o *UpdateAzureClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update azure cluster not found response
func (o *UpdateAzureClusterNotFound) Code() int {
	return 404
}

func (o *UpdateAzureClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterNotFound %s", 404, payload)
}

func (o *UpdateAzureClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterNotFound %s", 404, payload)
}

func (o *UpdateAzureClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureClusterMethodNotAllowed creates a UpdateAzureClusterMethodNotAllowed with default headers values
func NewUpdateAzureClusterMethodNotAllowed() *UpdateAzureClusterMethodNotAllowed {
	return &UpdateAzureClusterMethodNotAllowed{}
}

/*
UpdateAzureClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateAzureClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure cluster method not allowed response has a 2xx status code
func (o *UpdateAzureClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure cluster method not allowed response has a 3xx status code
func (o *UpdateAzureClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure cluster method not allowed response has a 4xx status code
func (o *UpdateAzureClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update azure cluster method not allowed response has a 5xx status code
func (o *UpdateAzureClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update azure cluster method not allowed response a status code equal to that given
func (o *UpdateAzureClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update azure cluster method not allowed response
func (o *UpdateAzureClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateAzureClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAzureClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterMethodNotAllowed %s", 405, payload)
}

func (o *UpdateAzureClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateAzureClusterInternalServerError creates a UpdateAzureClusterInternalServerError with default headers values
func NewUpdateAzureClusterInternalServerError() *UpdateAzureClusterInternalServerError {
	return &UpdateAzureClusterInternalServerError{}
}

/*
UpdateAzureClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateAzureClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update azure cluster internal server error response has a 2xx status code
func (o *UpdateAzureClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update azure cluster internal server error response has a 3xx status code
func (o *UpdateAzureClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update azure cluster internal server error response has a 4xx status code
func (o *UpdateAzureClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update azure cluster internal server error response has a 5xx status code
func (o *UpdateAzureClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update azure cluster internal server error response a status code equal to that given
func (o *UpdateAzureClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update azure cluster internal server error response
func (o *UpdateAzureClusterInternalServerError) Code() int {
	return 500
}

func (o *UpdateAzureClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterInternalServerError %s", 500, payload)
}

func (o *UpdateAzureClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/azure/clusters/{clusterId}][%d] updateAzureClusterInternalServerError %s", 500, payload)
}

func (o *UpdateAzureClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateAzureClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
