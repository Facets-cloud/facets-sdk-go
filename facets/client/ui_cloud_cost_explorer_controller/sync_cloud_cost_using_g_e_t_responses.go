// Code generated by go-swagger; DO NOT EDIT.

package ui_cloud_cost_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SyncCloudCostUsingGETReader is a Reader for the SyncCloudCostUsingGET structure.
type SyncCloudCostUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncCloudCostUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncCloudCostUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSyncCloudCostUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSyncCloudCostUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSyncCloudCostUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/cost-explorer/sync-cost] syncCloudCostUsingGET", response, response.Code())
	}
}

// NewSyncCloudCostUsingGETOK creates a SyncCloudCostUsingGETOK with default headers values
func NewSyncCloudCostUsingGETOK() *SyncCloudCostUsingGETOK {
	return &SyncCloudCostUsingGETOK{}
}

/*
SyncCloudCostUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type SyncCloudCostUsingGETOK struct {
}

// IsSuccess returns true when this sync cloud cost using g e t o k response has a 2xx status code
func (o *SyncCloudCostUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync cloud cost using g e t o k response has a 3xx status code
func (o *SyncCloudCostUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cloud cost using g e t o k response has a 4xx status code
func (o *SyncCloudCostUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync cloud cost using g e t o k response has a 5xx status code
func (o *SyncCloudCostUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cloud cost using g e t o k response a status code equal to that given
func (o *SyncCloudCostUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sync cloud cost using g e t o k response
func (o *SyncCloudCostUsingGETOK) Code() int {
	return 200
}

func (o *SyncCloudCostUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETOK", 200)
}

func (o *SyncCloudCostUsingGETOK) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETOK", 200)
}

func (o *SyncCloudCostUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncCloudCostUsingGETUnauthorized creates a SyncCloudCostUsingGETUnauthorized with default headers values
func NewSyncCloudCostUsingGETUnauthorized() *SyncCloudCostUsingGETUnauthorized {
	return &SyncCloudCostUsingGETUnauthorized{}
}

/*
SyncCloudCostUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SyncCloudCostUsingGETUnauthorized struct {
}

// IsSuccess returns true when this sync cloud cost using g e t unauthorized response has a 2xx status code
func (o *SyncCloudCostUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync cloud cost using g e t unauthorized response has a 3xx status code
func (o *SyncCloudCostUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cloud cost using g e t unauthorized response has a 4xx status code
func (o *SyncCloudCostUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync cloud cost using g e t unauthorized response has a 5xx status code
func (o *SyncCloudCostUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cloud cost using g e t unauthorized response a status code equal to that given
func (o *SyncCloudCostUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the sync cloud cost using g e t unauthorized response
func (o *SyncCloudCostUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SyncCloudCostUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETUnauthorized", 401)
}

func (o *SyncCloudCostUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETUnauthorized", 401)
}

func (o *SyncCloudCostUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncCloudCostUsingGETForbidden creates a SyncCloudCostUsingGETForbidden with default headers values
func NewSyncCloudCostUsingGETForbidden() *SyncCloudCostUsingGETForbidden {
	return &SyncCloudCostUsingGETForbidden{}
}

/*
SyncCloudCostUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SyncCloudCostUsingGETForbidden struct {
}

// IsSuccess returns true when this sync cloud cost using g e t forbidden response has a 2xx status code
func (o *SyncCloudCostUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync cloud cost using g e t forbidden response has a 3xx status code
func (o *SyncCloudCostUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cloud cost using g e t forbidden response has a 4xx status code
func (o *SyncCloudCostUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync cloud cost using g e t forbidden response has a 5xx status code
func (o *SyncCloudCostUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cloud cost using g e t forbidden response a status code equal to that given
func (o *SyncCloudCostUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the sync cloud cost using g e t forbidden response
func (o *SyncCloudCostUsingGETForbidden) Code() int {
	return 403
}

func (o *SyncCloudCostUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETForbidden", 403)
}

func (o *SyncCloudCostUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETForbidden", 403)
}

func (o *SyncCloudCostUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncCloudCostUsingGETNotFound creates a SyncCloudCostUsingGETNotFound with default headers values
func NewSyncCloudCostUsingGETNotFound() *SyncCloudCostUsingGETNotFound {
	return &SyncCloudCostUsingGETNotFound{}
}

/*
SyncCloudCostUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SyncCloudCostUsingGETNotFound struct {
}

// IsSuccess returns true when this sync cloud cost using g e t not found response has a 2xx status code
func (o *SyncCloudCostUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync cloud cost using g e t not found response has a 3xx status code
func (o *SyncCloudCostUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cloud cost using g e t not found response has a 4xx status code
func (o *SyncCloudCostUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync cloud cost using g e t not found response has a 5xx status code
func (o *SyncCloudCostUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cloud cost using g e t not found response a status code equal to that given
func (o *SyncCloudCostUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the sync cloud cost using g e t not found response
func (o *SyncCloudCostUsingGETNotFound) Code() int {
	return 404
}

func (o *SyncCloudCostUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETNotFound", 404)
}

func (o *SyncCloudCostUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/sync-cost][%d] syncCloudCostUsingGETNotFound", 404)
}

func (o *SyncCloudCostUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
