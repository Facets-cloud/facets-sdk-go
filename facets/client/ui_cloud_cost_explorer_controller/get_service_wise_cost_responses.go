// Code generated by go-swagger; DO NOT EDIT.

package ui_cloud_cost_explorer_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetServiceWiseCostReader is a Reader for the GetServiceWiseCost structure.
type GetServiceWiseCostReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceWiseCostReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceWiseCostOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetServiceWiseCostBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceWiseCostNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetServiceWiseCostMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetServiceWiseCostInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}] getServiceWiseCost", response, response.Code())
	}
}

// NewGetServiceWiseCostOK creates a GetServiceWiseCostOK with default headers values
func NewGetServiceWiseCostOK() *GetServiceWiseCostOK {
	return &GetServiceWiseCostOK{}
}

/*
GetServiceWiseCostOK describes a response with status code 200, with default header values.

OK
*/
type GetServiceWiseCostOK struct {
	Payload []*models.DailyCost
}

// IsSuccess returns true when this get service wise cost o k response has a 2xx status code
func (o *GetServiceWiseCostOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get service wise cost o k response has a 3xx status code
func (o *GetServiceWiseCostOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service wise cost o k response has a 4xx status code
func (o *GetServiceWiseCostOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get service wise cost o k response has a 5xx status code
func (o *GetServiceWiseCostOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get service wise cost o k response a status code equal to that given
func (o *GetServiceWiseCostOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get service wise cost o k response
func (o *GetServiceWiseCostOK) Code() int {
	return 200
}

func (o *GetServiceWiseCostOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostOK %s", 200, payload)
}

func (o *GetServiceWiseCostOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostOK %s", 200, payload)
}

func (o *GetServiceWiseCostOK) GetPayload() []*models.DailyCost {
	return o.Payload
}

func (o *GetServiceWiseCostOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceWiseCostBadRequest creates a GetServiceWiseCostBadRequest with default headers values
func NewGetServiceWiseCostBadRequest() *GetServiceWiseCostBadRequest {
	return &GetServiceWiseCostBadRequest{}
}

/*
GetServiceWiseCostBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetServiceWiseCostBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get service wise cost bad request response has a 2xx status code
func (o *GetServiceWiseCostBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service wise cost bad request response has a 3xx status code
func (o *GetServiceWiseCostBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service wise cost bad request response has a 4xx status code
func (o *GetServiceWiseCostBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service wise cost bad request response has a 5xx status code
func (o *GetServiceWiseCostBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get service wise cost bad request response a status code equal to that given
func (o *GetServiceWiseCostBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get service wise cost bad request response
func (o *GetServiceWiseCostBadRequest) Code() int {
	return 400
}

func (o *GetServiceWiseCostBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostBadRequest %s", 400, payload)
}

func (o *GetServiceWiseCostBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostBadRequest %s", 400, payload)
}

func (o *GetServiceWiseCostBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetServiceWiseCostBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceWiseCostNotFound creates a GetServiceWiseCostNotFound with default headers values
func NewGetServiceWiseCostNotFound() *GetServiceWiseCostNotFound {
	return &GetServiceWiseCostNotFound{}
}

/*
GetServiceWiseCostNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetServiceWiseCostNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get service wise cost not found response has a 2xx status code
func (o *GetServiceWiseCostNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service wise cost not found response has a 3xx status code
func (o *GetServiceWiseCostNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service wise cost not found response has a 4xx status code
func (o *GetServiceWiseCostNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service wise cost not found response has a 5xx status code
func (o *GetServiceWiseCostNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get service wise cost not found response a status code equal to that given
func (o *GetServiceWiseCostNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get service wise cost not found response
func (o *GetServiceWiseCostNotFound) Code() int {
	return 404
}

func (o *GetServiceWiseCostNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostNotFound %s", 404, payload)
}

func (o *GetServiceWiseCostNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostNotFound %s", 404, payload)
}

func (o *GetServiceWiseCostNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetServiceWiseCostNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceWiseCostMethodNotAllowed creates a GetServiceWiseCostMethodNotAllowed with default headers values
func NewGetServiceWiseCostMethodNotAllowed() *GetServiceWiseCostMethodNotAllowed {
	return &GetServiceWiseCostMethodNotAllowed{}
}

/*
GetServiceWiseCostMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetServiceWiseCostMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get service wise cost method not allowed response has a 2xx status code
func (o *GetServiceWiseCostMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service wise cost method not allowed response has a 3xx status code
func (o *GetServiceWiseCostMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service wise cost method not allowed response has a 4xx status code
func (o *GetServiceWiseCostMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service wise cost method not allowed response has a 5xx status code
func (o *GetServiceWiseCostMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get service wise cost method not allowed response a status code equal to that given
func (o *GetServiceWiseCostMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get service wise cost method not allowed response
func (o *GetServiceWiseCostMethodNotAllowed) Code() int {
	return 405
}

func (o *GetServiceWiseCostMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostMethodNotAllowed %s", 405, payload)
}

func (o *GetServiceWiseCostMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostMethodNotAllowed %s", 405, payload)
}

func (o *GetServiceWiseCostMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetServiceWiseCostMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceWiseCostInternalServerError creates a GetServiceWiseCostInternalServerError with default headers values
func NewGetServiceWiseCostInternalServerError() *GetServiceWiseCostInternalServerError {
	return &GetServiceWiseCostInternalServerError{}
}

/*
GetServiceWiseCostInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetServiceWiseCostInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get service wise cost internal server error response has a 2xx status code
func (o *GetServiceWiseCostInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service wise cost internal server error response has a 3xx status code
func (o *GetServiceWiseCostInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service wise cost internal server error response has a 4xx status code
func (o *GetServiceWiseCostInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get service wise cost internal server error response has a 5xx status code
func (o *GetServiceWiseCostInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get service wise cost internal server error response a status code equal to that given
func (o *GetServiceWiseCostInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get service wise cost internal server error response
func (o *GetServiceWiseCostInternalServerError) Code() int {
	return 500
}

func (o *GetServiceWiseCostInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostInternalServerError %s", 500, payload)
}

func (o *GetServiceWiseCostInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/cost-explorer/service-wise-cost/{clusterId}][%d] getServiceWiseCostInternalServerError %s", 500, payload)
}

func (o *GetServiceWiseCostInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetServiceWiseCostInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
