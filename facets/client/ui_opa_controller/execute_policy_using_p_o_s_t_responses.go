// Code generated by go-swagger; DO NOT EDIT.

package ui_opa_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ExecutePolicyUsingPOSTReader is a Reader for the ExecutePolicyUsingPOST structure.
type ExecutePolicyUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ExecutePolicyUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewExecutePolicyUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewExecutePolicyUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewExecutePolicyUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewExecutePolicyUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewExecutePolicyUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/opa/{policyName}/execute] executePolicyUsingPOST", response, response.Code())
	}
}

// NewExecutePolicyUsingPOSTOK creates a ExecutePolicyUsingPOSTOK with default headers values
func NewExecutePolicyUsingPOSTOK() *ExecutePolicyUsingPOSTOK {
	return &ExecutePolicyUsingPOSTOK{}
}

/*
ExecutePolicyUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type ExecutePolicyUsingPOSTOK struct {
	Payload *models.OpaPolicyExecutionResult
}

// IsSuccess returns true when this execute policy using p o s t o k response has a 2xx status code
func (o *ExecutePolicyUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this execute policy using p o s t o k response has a 3xx status code
func (o *ExecutePolicyUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this execute policy using p o s t o k response has a 4xx status code
func (o *ExecutePolicyUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this execute policy using p o s t o k response has a 5xx status code
func (o *ExecutePolicyUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this execute policy using p o s t o k response a status code equal to that given
func (o *ExecutePolicyUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the execute policy using p o s t o k response
func (o *ExecutePolicyUsingPOSTOK) Code() int {
	return 200
}

func (o *ExecutePolicyUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTOK %s", 200, payload)
}

func (o *ExecutePolicyUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTOK %s", 200, payload)
}

func (o *ExecutePolicyUsingPOSTOK) GetPayload() *models.OpaPolicyExecutionResult {
	return o.Payload
}

func (o *ExecutePolicyUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OpaPolicyExecutionResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewExecutePolicyUsingPOSTCreated creates a ExecutePolicyUsingPOSTCreated with default headers values
func NewExecutePolicyUsingPOSTCreated() *ExecutePolicyUsingPOSTCreated {
	return &ExecutePolicyUsingPOSTCreated{}
}

/*
ExecutePolicyUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type ExecutePolicyUsingPOSTCreated struct {
}

// IsSuccess returns true when this execute policy using p o s t created response has a 2xx status code
func (o *ExecutePolicyUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this execute policy using p o s t created response has a 3xx status code
func (o *ExecutePolicyUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this execute policy using p o s t created response has a 4xx status code
func (o *ExecutePolicyUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this execute policy using p o s t created response has a 5xx status code
func (o *ExecutePolicyUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this execute policy using p o s t created response a status code equal to that given
func (o *ExecutePolicyUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the execute policy using p o s t created response
func (o *ExecutePolicyUsingPOSTCreated) Code() int {
	return 201
}

func (o *ExecutePolicyUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTCreated", 201)
}

func (o *ExecutePolicyUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTCreated", 201)
}

func (o *ExecutePolicyUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExecutePolicyUsingPOSTUnauthorized creates a ExecutePolicyUsingPOSTUnauthorized with default headers values
func NewExecutePolicyUsingPOSTUnauthorized() *ExecutePolicyUsingPOSTUnauthorized {
	return &ExecutePolicyUsingPOSTUnauthorized{}
}

/*
ExecutePolicyUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ExecutePolicyUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this execute policy using p o s t unauthorized response has a 2xx status code
func (o *ExecutePolicyUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this execute policy using p o s t unauthorized response has a 3xx status code
func (o *ExecutePolicyUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this execute policy using p o s t unauthorized response has a 4xx status code
func (o *ExecutePolicyUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this execute policy using p o s t unauthorized response has a 5xx status code
func (o *ExecutePolicyUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this execute policy using p o s t unauthorized response a status code equal to that given
func (o *ExecutePolicyUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the execute policy using p o s t unauthorized response
func (o *ExecutePolicyUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *ExecutePolicyUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTUnauthorized", 401)
}

func (o *ExecutePolicyUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTUnauthorized", 401)
}

func (o *ExecutePolicyUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExecutePolicyUsingPOSTForbidden creates a ExecutePolicyUsingPOSTForbidden with default headers values
func NewExecutePolicyUsingPOSTForbidden() *ExecutePolicyUsingPOSTForbidden {
	return &ExecutePolicyUsingPOSTForbidden{}
}

/*
ExecutePolicyUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ExecutePolicyUsingPOSTForbidden struct {
}

// IsSuccess returns true when this execute policy using p o s t forbidden response has a 2xx status code
func (o *ExecutePolicyUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this execute policy using p o s t forbidden response has a 3xx status code
func (o *ExecutePolicyUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this execute policy using p o s t forbidden response has a 4xx status code
func (o *ExecutePolicyUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this execute policy using p o s t forbidden response has a 5xx status code
func (o *ExecutePolicyUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this execute policy using p o s t forbidden response a status code equal to that given
func (o *ExecutePolicyUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the execute policy using p o s t forbidden response
func (o *ExecutePolicyUsingPOSTForbidden) Code() int {
	return 403
}

func (o *ExecutePolicyUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTForbidden", 403)
}

func (o *ExecutePolicyUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTForbidden", 403)
}

func (o *ExecutePolicyUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewExecutePolicyUsingPOSTNotFound creates a ExecutePolicyUsingPOSTNotFound with default headers values
func NewExecutePolicyUsingPOSTNotFound() *ExecutePolicyUsingPOSTNotFound {
	return &ExecutePolicyUsingPOSTNotFound{}
}

/*
ExecutePolicyUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ExecutePolicyUsingPOSTNotFound struct {
}

// IsSuccess returns true when this execute policy using p o s t not found response has a 2xx status code
func (o *ExecutePolicyUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this execute policy using p o s t not found response has a 3xx status code
func (o *ExecutePolicyUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this execute policy using p o s t not found response has a 4xx status code
func (o *ExecutePolicyUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this execute policy using p o s t not found response has a 5xx status code
func (o *ExecutePolicyUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this execute policy using p o s t not found response a status code equal to that given
func (o *ExecutePolicyUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the execute policy using p o s t not found response
func (o *ExecutePolicyUsingPOSTNotFound) Code() int {
	return 404
}

func (o *ExecutePolicyUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTNotFound", 404)
}

func (o *ExecutePolicyUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}/execute][%d] executePolicyUsingPOSTNotFound", 404)
}

func (o *ExecutePolicyUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
