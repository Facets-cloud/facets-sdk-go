// Code generated by go-swagger; DO NOT EDIT.

package ui_opa_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllPolicyTemplatesUsingGETReader is a Reader for the GetAllPolicyTemplatesUsingGET structure.
type GetAllPolicyTemplatesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllPolicyTemplatesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllPolicyTemplatesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllPolicyTemplatesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllPolicyTemplatesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllPolicyTemplatesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/opa/policy-templates] getAllPolicyTemplatesUsingGET", response, response.Code())
	}
}

// NewGetAllPolicyTemplatesUsingGETOK creates a GetAllPolicyTemplatesUsingGETOK with default headers values
func NewGetAllPolicyTemplatesUsingGETOK() *GetAllPolicyTemplatesUsingGETOK {
	return &GetAllPolicyTemplatesUsingGETOK{}
}

/*
GetAllPolicyTemplatesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllPolicyTemplatesUsingGETOK struct {
	Payload []*models.PolicyTemplateDTO
}

// IsSuccess returns true when this get all policy templates using g e t o k response has a 2xx status code
func (o *GetAllPolicyTemplatesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all policy templates using g e t o k response has a 3xx status code
func (o *GetAllPolicyTemplatesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policy templates using g e t o k response has a 4xx status code
func (o *GetAllPolicyTemplatesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all policy templates using g e t o k response has a 5xx status code
func (o *GetAllPolicyTemplatesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policy templates using g e t o k response a status code equal to that given
func (o *GetAllPolicyTemplatesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all policy templates using g e t o k response
func (o *GetAllPolicyTemplatesUsingGETOK) Code() int {
	return 200
}

func (o *GetAllPolicyTemplatesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETOK %s", 200, payload)
}

func (o *GetAllPolicyTemplatesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETOK %s", 200, payload)
}

func (o *GetAllPolicyTemplatesUsingGETOK) GetPayload() []*models.PolicyTemplateDTO {
	return o.Payload
}

func (o *GetAllPolicyTemplatesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPolicyTemplatesUsingGETUnauthorized creates a GetAllPolicyTemplatesUsingGETUnauthorized with default headers values
func NewGetAllPolicyTemplatesUsingGETUnauthorized() *GetAllPolicyTemplatesUsingGETUnauthorized {
	return &GetAllPolicyTemplatesUsingGETUnauthorized{}
}

/*
GetAllPolicyTemplatesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllPolicyTemplatesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all policy templates using g e t unauthorized response has a 2xx status code
func (o *GetAllPolicyTemplatesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policy templates using g e t unauthorized response has a 3xx status code
func (o *GetAllPolicyTemplatesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policy templates using g e t unauthorized response has a 4xx status code
func (o *GetAllPolicyTemplatesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all policy templates using g e t unauthorized response has a 5xx status code
func (o *GetAllPolicyTemplatesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policy templates using g e t unauthorized response a status code equal to that given
func (o *GetAllPolicyTemplatesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all policy templates using g e t unauthorized response
func (o *GetAllPolicyTemplatesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllPolicyTemplatesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETUnauthorized", 401)
}

func (o *GetAllPolicyTemplatesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETUnauthorized", 401)
}

func (o *GetAllPolicyTemplatesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllPolicyTemplatesUsingGETForbidden creates a GetAllPolicyTemplatesUsingGETForbidden with default headers values
func NewGetAllPolicyTemplatesUsingGETForbidden() *GetAllPolicyTemplatesUsingGETForbidden {
	return &GetAllPolicyTemplatesUsingGETForbidden{}
}

/*
GetAllPolicyTemplatesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllPolicyTemplatesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all policy templates using g e t forbidden response has a 2xx status code
func (o *GetAllPolicyTemplatesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policy templates using g e t forbidden response has a 3xx status code
func (o *GetAllPolicyTemplatesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policy templates using g e t forbidden response has a 4xx status code
func (o *GetAllPolicyTemplatesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all policy templates using g e t forbidden response has a 5xx status code
func (o *GetAllPolicyTemplatesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policy templates using g e t forbidden response a status code equal to that given
func (o *GetAllPolicyTemplatesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all policy templates using g e t forbidden response
func (o *GetAllPolicyTemplatesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllPolicyTemplatesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETForbidden", 403)
}

func (o *GetAllPolicyTemplatesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETForbidden", 403)
}

func (o *GetAllPolicyTemplatesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllPolicyTemplatesUsingGETNotFound creates a GetAllPolicyTemplatesUsingGETNotFound with default headers values
func NewGetAllPolicyTemplatesUsingGETNotFound() *GetAllPolicyTemplatesUsingGETNotFound {
	return &GetAllPolicyTemplatesUsingGETNotFound{}
}

/*
GetAllPolicyTemplatesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllPolicyTemplatesUsingGETNotFound struct {
}

// IsSuccess returns true when this get all policy templates using g e t not found response has a 2xx status code
func (o *GetAllPolicyTemplatesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policy templates using g e t not found response has a 3xx status code
func (o *GetAllPolicyTemplatesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policy templates using g e t not found response has a 4xx status code
func (o *GetAllPolicyTemplatesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all policy templates using g e t not found response has a 5xx status code
func (o *GetAllPolicyTemplatesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policy templates using g e t not found response a status code equal to that given
func (o *GetAllPolicyTemplatesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all policy templates using g e t not found response
func (o *GetAllPolicyTemplatesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllPolicyTemplatesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETNotFound", 404)
}

func (o *GetAllPolicyTemplatesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/opa/policy-templates][%d] getAllPolicyTemplatesUsingGETNotFound", 404)
}

func (o *GetAllPolicyTemplatesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
