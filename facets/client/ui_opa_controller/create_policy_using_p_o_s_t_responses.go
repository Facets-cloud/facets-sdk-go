// Code generated by go-swagger; DO NOT EDIT.

package ui_opa_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreatePolicyUsingPOSTReader is a Reader for the CreatePolicyUsingPOST structure.
type CreatePolicyUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreatePolicyUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreatePolicyUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreatePolicyUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreatePolicyUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreatePolicyUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreatePolicyUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/opa/{policyName}] createPolicyUsingPOST", response, response.Code())
	}
}

// NewCreatePolicyUsingPOSTOK creates a CreatePolicyUsingPOSTOK with default headers values
func NewCreatePolicyUsingPOSTOK() *CreatePolicyUsingPOSTOK {
	return &CreatePolicyUsingPOSTOK{}
}

/*
CreatePolicyUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreatePolicyUsingPOSTOK struct {
	Payload *models.OpaPolicy
}

// IsSuccess returns true when this create policy using p o s t o k response has a 2xx status code
func (o *CreatePolicyUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create policy using p o s t o k response has a 3xx status code
func (o *CreatePolicyUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy using p o s t o k response has a 4xx status code
func (o *CreatePolicyUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create policy using p o s t o k response has a 5xx status code
func (o *CreatePolicyUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy using p o s t o k response a status code equal to that given
func (o *CreatePolicyUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create policy using p o s t o k response
func (o *CreatePolicyUsingPOSTOK) Code() int {
	return 200
}

func (o *CreatePolicyUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTOK %s", 200, payload)
}

func (o *CreatePolicyUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTOK %s", 200, payload)
}

func (o *CreatePolicyUsingPOSTOK) GetPayload() *models.OpaPolicy {
	return o.Payload
}

func (o *CreatePolicyUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OpaPolicy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreatePolicyUsingPOSTCreated creates a CreatePolicyUsingPOSTCreated with default headers values
func NewCreatePolicyUsingPOSTCreated() *CreatePolicyUsingPOSTCreated {
	return &CreatePolicyUsingPOSTCreated{}
}

/*
CreatePolicyUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreatePolicyUsingPOSTCreated struct {
}

// IsSuccess returns true when this create policy using p o s t created response has a 2xx status code
func (o *CreatePolicyUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create policy using p o s t created response has a 3xx status code
func (o *CreatePolicyUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy using p o s t created response has a 4xx status code
func (o *CreatePolicyUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create policy using p o s t created response has a 5xx status code
func (o *CreatePolicyUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy using p o s t created response a status code equal to that given
func (o *CreatePolicyUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create policy using p o s t created response
func (o *CreatePolicyUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreatePolicyUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTCreated", 201)
}

func (o *CreatePolicyUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTCreated", 201)
}

func (o *CreatePolicyUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePolicyUsingPOSTUnauthorized creates a CreatePolicyUsingPOSTUnauthorized with default headers values
func NewCreatePolicyUsingPOSTUnauthorized() *CreatePolicyUsingPOSTUnauthorized {
	return &CreatePolicyUsingPOSTUnauthorized{}
}

/*
CreatePolicyUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreatePolicyUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create policy using p o s t unauthorized response has a 2xx status code
func (o *CreatePolicyUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create policy using p o s t unauthorized response has a 3xx status code
func (o *CreatePolicyUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy using p o s t unauthorized response has a 4xx status code
func (o *CreatePolicyUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create policy using p o s t unauthorized response has a 5xx status code
func (o *CreatePolicyUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy using p o s t unauthorized response a status code equal to that given
func (o *CreatePolicyUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create policy using p o s t unauthorized response
func (o *CreatePolicyUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreatePolicyUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTUnauthorized", 401)
}

func (o *CreatePolicyUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTUnauthorized", 401)
}

func (o *CreatePolicyUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePolicyUsingPOSTForbidden creates a CreatePolicyUsingPOSTForbidden with default headers values
func NewCreatePolicyUsingPOSTForbidden() *CreatePolicyUsingPOSTForbidden {
	return &CreatePolicyUsingPOSTForbidden{}
}

/*
CreatePolicyUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreatePolicyUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create policy using p o s t forbidden response has a 2xx status code
func (o *CreatePolicyUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create policy using p o s t forbidden response has a 3xx status code
func (o *CreatePolicyUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy using p o s t forbidden response has a 4xx status code
func (o *CreatePolicyUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create policy using p o s t forbidden response has a 5xx status code
func (o *CreatePolicyUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy using p o s t forbidden response a status code equal to that given
func (o *CreatePolicyUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create policy using p o s t forbidden response
func (o *CreatePolicyUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreatePolicyUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTForbidden", 403)
}

func (o *CreatePolicyUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTForbidden", 403)
}

func (o *CreatePolicyUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreatePolicyUsingPOSTNotFound creates a CreatePolicyUsingPOSTNotFound with default headers values
func NewCreatePolicyUsingPOSTNotFound() *CreatePolicyUsingPOSTNotFound {
	return &CreatePolicyUsingPOSTNotFound{}
}

/*
CreatePolicyUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreatePolicyUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create policy using p o s t not found response has a 2xx status code
func (o *CreatePolicyUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create policy using p o s t not found response has a 3xx status code
func (o *CreatePolicyUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create policy using p o s t not found response has a 4xx status code
func (o *CreatePolicyUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create policy using p o s t not found response has a 5xx status code
func (o *CreatePolicyUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create policy using p o s t not found response a status code equal to that given
func (o *CreatePolicyUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create policy using p o s t not found response
func (o *CreatePolicyUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreatePolicyUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTNotFound", 404)
}

func (o *CreatePolicyUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/opa/{policyName}][%d] createPolicyUsingPOSTNotFound", 404)
}

func (o *CreatePolicyUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
