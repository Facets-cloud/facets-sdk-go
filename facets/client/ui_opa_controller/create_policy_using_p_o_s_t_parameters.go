// Code generated by go-swagger; DO NOT EDIT.

package ui_opa_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewCreatePolicyUsingPOSTParams creates a new CreatePolicyUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreatePolicyUsingPOSTParams() *CreatePolicyUsingPOSTParams {
	return &CreatePolicyUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreatePolicyUsingPOSTParamsWithTimeout creates a new CreatePolicyUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewCreatePolicyUsingPOSTParamsWithTimeout(timeout time.Duration) *CreatePolicyUsingPOSTParams {
	return &CreatePolicyUsingPOSTParams{
		timeout: timeout,
	}
}

// NewCreatePolicyUsingPOSTParamsWithContext creates a new CreatePolicyUsingPOSTParams object
// with the ability to set a context for a request.
func NewCreatePolicyUsingPOSTParamsWithContext(ctx context.Context) *CreatePolicyUsingPOSTParams {
	return &CreatePolicyUsingPOSTParams{
		Context: ctx,
	}
}

// NewCreatePolicyUsingPOSTParamsWithHTTPClient creates a new CreatePolicyUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreatePolicyUsingPOSTParamsWithHTTPClient(client *http.Client) *CreatePolicyUsingPOSTParams {
	return &CreatePolicyUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
CreatePolicyUsingPOSTParams contains all the parameters to send to the API endpoint

	for the create policy using p o s t operation.

	Typically these are written to a http.Request.
*/
type CreatePolicyUsingPOSTParams struct {

	/* OpaRequest.

	   opaRequest
	*/
	OpaRequest *models.OpaPolicyRequest

	/* PolicyName.

	   policyName
	*/
	PolicyName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create policy using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreatePolicyUsingPOSTParams) WithDefaults() *CreatePolicyUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create policy using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreatePolicyUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) WithTimeout(timeout time.Duration) *CreatePolicyUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) WithContext(ctx context.Context) *CreatePolicyUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) WithHTTPClient(client *http.Client) *CreatePolicyUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOpaRequest adds the opaRequest to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) WithOpaRequest(opaRequest *models.OpaPolicyRequest) *CreatePolicyUsingPOSTParams {
	o.SetOpaRequest(opaRequest)
	return o
}

// SetOpaRequest adds the opaRequest to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) SetOpaRequest(opaRequest *models.OpaPolicyRequest) {
	o.OpaRequest = opaRequest
}

// WithPolicyName adds the policyName to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) WithPolicyName(policyName string) *CreatePolicyUsingPOSTParams {
	o.SetPolicyName(policyName)
	return o
}

// SetPolicyName adds the policyName to the create policy using p o s t params
func (o *CreatePolicyUsingPOSTParams) SetPolicyName(policyName string) {
	o.PolicyName = policyName
}

// WriteToRequest writes these params to a swagger request
func (o *CreatePolicyUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.OpaRequest != nil {
		if err := r.SetBodyParam(o.OpaRequest); err != nil {
			return err
		}
	}

	// path param policyName
	if err := r.SetPathParam("policyName", o.PolicyName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
