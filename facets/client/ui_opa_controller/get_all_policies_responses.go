// Code generated by go-swagger; DO NOT EDIT.

package ui_opa_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllPoliciesReader is a Reader for the GetAllPolicies structure.
type GetAllPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllPoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllPoliciesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/opa] getAllPolicies", response, response.Code())
	}
}

// NewGetAllPoliciesOK creates a GetAllPoliciesOK with default headers values
func NewGetAllPoliciesOK() *GetAllPoliciesOK {
	return &GetAllPoliciesOK{}
}

/*
GetAllPoliciesOK describes a response with status code 200, with default header values.

OK
*/
type GetAllPoliciesOK struct {
	Payload []*models.OpaPolicy
}

// IsSuccess returns true when this get all policies o k response has a 2xx status code
func (o *GetAllPoliciesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all policies o k response has a 3xx status code
func (o *GetAllPoliciesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policies o k response has a 4xx status code
func (o *GetAllPoliciesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all policies o k response has a 5xx status code
func (o *GetAllPoliciesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policies o k response a status code equal to that given
func (o *GetAllPoliciesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all policies o k response
func (o *GetAllPoliciesOK) Code() int {
	return 200
}

func (o *GetAllPoliciesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesOK %s", 200, payload)
}

func (o *GetAllPoliciesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesOK %s", 200, payload)
}

func (o *GetAllPoliciesOK) GetPayload() []*models.OpaPolicy {
	return o.Payload
}

func (o *GetAllPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPoliciesBadRequest creates a GetAllPoliciesBadRequest with default headers values
func NewGetAllPoliciesBadRequest() *GetAllPoliciesBadRequest {
	return &GetAllPoliciesBadRequest{}
}

/*
GetAllPoliciesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllPoliciesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all policies bad request response has a 2xx status code
func (o *GetAllPoliciesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policies bad request response has a 3xx status code
func (o *GetAllPoliciesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policies bad request response has a 4xx status code
func (o *GetAllPoliciesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all policies bad request response has a 5xx status code
func (o *GetAllPoliciesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policies bad request response a status code equal to that given
func (o *GetAllPoliciesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all policies bad request response
func (o *GetAllPoliciesBadRequest) Code() int {
	return 400
}

func (o *GetAllPoliciesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesBadRequest %s", 400, payload)
}

func (o *GetAllPoliciesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesBadRequest %s", 400, payload)
}

func (o *GetAllPoliciesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPoliciesNotFound creates a GetAllPoliciesNotFound with default headers values
func NewGetAllPoliciesNotFound() *GetAllPoliciesNotFound {
	return &GetAllPoliciesNotFound{}
}

/*
GetAllPoliciesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllPoliciesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all policies not found response has a 2xx status code
func (o *GetAllPoliciesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policies not found response has a 3xx status code
func (o *GetAllPoliciesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policies not found response has a 4xx status code
func (o *GetAllPoliciesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all policies not found response has a 5xx status code
func (o *GetAllPoliciesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policies not found response a status code equal to that given
func (o *GetAllPoliciesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all policies not found response
func (o *GetAllPoliciesNotFound) Code() int {
	return 404
}

func (o *GetAllPoliciesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesNotFound %s", 404, payload)
}

func (o *GetAllPoliciesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesNotFound %s", 404, payload)
}

func (o *GetAllPoliciesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPoliciesMethodNotAllowed creates a GetAllPoliciesMethodNotAllowed with default headers values
func NewGetAllPoliciesMethodNotAllowed() *GetAllPoliciesMethodNotAllowed {
	return &GetAllPoliciesMethodNotAllowed{}
}

/*
GetAllPoliciesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllPoliciesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all policies method not allowed response has a 2xx status code
func (o *GetAllPoliciesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policies method not allowed response has a 3xx status code
func (o *GetAllPoliciesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policies method not allowed response has a 4xx status code
func (o *GetAllPoliciesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all policies method not allowed response has a 5xx status code
func (o *GetAllPoliciesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all policies method not allowed response a status code equal to that given
func (o *GetAllPoliciesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all policies method not allowed response
func (o *GetAllPoliciesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllPoliciesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllPoliciesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllPoliciesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPoliciesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPoliciesInternalServerError creates a GetAllPoliciesInternalServerError with default headers values
func NewGetAllPoliciesInternalServerError() *GetAllPoliciesInternalServerError {
	return &GetAllPoliciesInternalServerError{}
}

/*
GetAllPoliciesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllPoliciesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all policies internal server error response has a 2xx status code
func (o *GetAllPoliciesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all policies internal server error response has a 3xx status code
func (o *GetAllPoliciesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all policies internal server error response has a 4xx status code
func (o *GetAllPoliciesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all policies internal server error response has a 5xx status code
func (o *GetAllPoliciesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all policies internal server error response a status code equal to that given
func (o *GetAllPoliciesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all policies internal server error response
func (o *GetAllPoliciesInternalServerError) Code() int {
	return 500
}

func (o *GetAllPoliciesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesInternalServerError %s", 500, payload)
}

func (o *GetAllPoliciesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/opa][%d] getAllPoliciesInternalServerError %s", 500, payload)
}

func (o *GetAllPoliciesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
