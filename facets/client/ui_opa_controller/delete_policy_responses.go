// Code generated by go-swagger; DO NOT EDIT.

package ui_opa_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeletePolicyReader is a Reader for the DeletePolicy structure.
type DeletePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeletePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeletePolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeletePolicyBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeletePolicyNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeletePolicyMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeletePolicyInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/opa/{policyName}] deletePolicy", response, response.Code())
	}
}

// NewDeletePolicyOK creates a DeletePolicyOK with default headers values
func NewDeletePolicyOK() *DeletePolicyOK {
	return &DeletePolicyOK{}
}

/*
DeletePolicyOK describes a response with status code 200, with default header values.

OK
*/
type DeletePolicyOK struct {
}

// IsSuccess returns true when this delete policy o k response has a 2xx status code
func (o *DeletePolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete policy o k response has a 3xx status code
func (o *DeletePolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy o k response has a 4xx status code
func (o *DeletePolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete policy o k response has a 5xx status code
func (o *DeletePolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy o k response a status code equal to that given
func (o *DeletePolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete policy o k response
func (o *DeletePolicyOK) Code() int {
	return 200
}

func (o *DeletePolicyOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyOK", 200)
}

func (o *DeletePolicyOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyOK", 200)
}

func (o *DeletePolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeletePolicyBadRequest creates a DeletePolicyBadRequest with default headers values
func NewDeletePolicyBadRequest() *DeletePolicyBadRequest {
	return &DeletePolicyBadRequest{}
}

/*
DeletePolicyBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeletePolicyBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete policy bad request response has a 2xx status code
func (o *DeletePolicyBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy bad request response has a 3xx status code
func (o *DeletePolicyBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy bad request response has a 4xx status code
func (o *DeletePolicyBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy bad request response has a 5xx status code
func (o *DeletePolicyBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy bad request response a status code equal to that given
func (o *DeletePolicyBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete policy bad request response
func (o *DeletePolicyBadRequest) Code() int {
	return 400
}

func (o *DeletePolicyBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyBadRequest %s", 400, payload)
}

func (o *DeletePolicyBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyBadRequest %s", 400, payload)
}

func (o *DeletePolicyBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeletePolicyBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyNotFound creates a DeletePolicyNotFound with default headers values
func NewDeletePolicyNotFound() *DeletePolicyNotFound {
	return &DeletePolicyNotFound{}
}

/*
DeletePolicyNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeletePolicyNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete policy not found response has a 2xx status code
func (o *DeletePolicyNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy not found response has a 3xx status code
func (o *DeletePolicyNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy not found response has a 4xx status code
func (o *DeletePolicyNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy not found response has a 5xx status code
func (o *DeletePolicyNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy not found response a status code equal to that given
func (o *DeletePolicyNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete policy not found response
func (o *DeletePolicyNotFound) Code() int {
	return 404
}

func (o *DeletePolicyNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyNotFound %s", 404, payload)
}

func (o *DeletePolicyNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyNotFound %s", 404, payload)
}

func (o *DeletePolicyNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeletePolicyNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyMethodNotAllowed creates a DeletePolicyMethodNotAllowed with default headers values
func NewDeletePolicyMethodNotAllowed() *DeletePolicyMethodNotAllowed {
	return &DeletePolicyMethodNotAllowed{}
}

/*
DeletePolicyMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeletePolicyMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete policy method not allowed response has a 2xx status code
func (o *DeletePolicyMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy method not allowed response has a 3xx status code
func (o *DeletePolicyMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy method not allowed response has a 4xx status code
func (o *DeletePolicyMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete policy method not allowed response has a 5xx status code
func (o *DeletePolicyMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete policy method not allowed response a status code equal to that given
func (o *DeletePolicyMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete policy method not allowed response
func (o *DeletePolicyMethodNotAllowed) Code() int {
	return 405
}

func (o *DeletePolicyMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyMethodNotAllowed %s", 405, payload)
}

func (o *DeletePolicyMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyMethodNotAllowed %s", 405, payload)
}

func (o *DeletePolicyMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeletePolicyMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeletePolicyInternalServerError creates a DeletePolicyInternalServerError with default headers values
func NewDeletePolicyInternalServerError() *DeletePolicyInternalServerError {
	return &DeletePolicyInternalServerError{}
}

/*
DeletePolicyInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeletePolicyInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete policy internal server error response has a 2xx status code
func (o *DeletePolicyInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete policy internal server error response has a 3xx status code
func (o *DeletePolicyInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete policy internal server error response has a 4xx status code
func (o *DeletePolicyInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete policy internal server error response has a 5xx status code
func (o *DeletePolicyInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete policy internal server error response a status code equal to that given
func (o *DeletePolicyInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete policy internal server error response
func (o *DeletePolicyInternalServerError) Code() int {
	return 500
}

func (o *DeletePolicyInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyInternalServerError %s", 500, payload)
}

func (o *DeletePolicyInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/opa/{policyName}][%d] deletePolicyInternalServerError %s", 500, payload)
}

func (o *DeletePolicyInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeletePolicyInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
