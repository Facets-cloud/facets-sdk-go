// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_status_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceStatusReader is a Reader for the GetResourceStatus structure.
type GetResourceStatusReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceStatusReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceStatusOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceStatusBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceStatusNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetResourceStatusMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceStatusInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status] getResourceStatus", response, response.Code())
	}
}

// NewGetResourceStatusOK creates a GetResourceStatusOK with default headers values
func NewGetResourceStatusOK() *GetResourceStatusOK {
	return &GetResourceStatusOK{}
}

/*
GetResourceStatusOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceStatusOK struct {
	Payload *models.ResourceStatusResponse
}

// IsSuccess returns true when this get resource status o k response has a 2xx status code
func (o *GetResourceStatusOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource status o k response has a 3xx status code
func (o *GetResourceStatusOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource status o k response has a 4xx status code
func (o *GetResourceStatusOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource status o k response has a 5xx status code
func (o *GetResourceStatusOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource status o k response a status code equal to that given
func (o *GetResourceStatusOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource status o k response
func (o *GetResourceStatusOK) Code() int {
	return 200
}

func (o *GetResourceStatusOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusOK %s", 200, payload)
}

func (o *GetResourceStatusOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusOK %s", 200, payload)
}

func (o *GetResourceStatusOK) GetPayload() *models.ResourceStatusResponse {
	return o.Payload
}

func (o *GetResourceStatusOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceStatusBadRequest creates a GetResourceStatusBadRequest with default headers values
func NewGetResourceStatusBadRequest() *GetResourceStatusBadRequest {
	return &GetResourceStatusBadRequest{}
}

/*
GetResourceStatusBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceStatusBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource status bad request response has a 2xx status code
func (o *GetResourceStatusBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource status bad request response has a 3xx status code
func (o *GetResourceStatusBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource status bad request response has a 4xx status code
func (o *GetResourceStatusBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource status bad request response has a 5xx status code
func (o *GetResourceStatusBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource status bad request response a status code equal to that given
func (o *GetResourceStatusBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get resource status bad request response
func (o *GetResourceStatusBadRequest) Code() int {
	return 400
}

func (o *GetResourceStatusBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusBadRequest %s", 400, payload)
}

func (o *GetResourceStatusBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusBadRequest %s", 400, payload)
}

func (o *GetResourceStatusBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceStatusBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceStatusNotFound creates a GetResourceStatusNotFound with default headers values
func NewGetResourceStatusNotFound() *GetResourceStatusNotFound {
	return &GetResourceStatusNotFound{}
}

/*
GetResourceStatusNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceStatusNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource status not found response has a 2xx status code
func (o *GetResourceStatusNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource status not found response has a 3xx status code
func (o *GetResourceStatusNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource status not found response has a 4xx status code
func (o *GetResourceStatusNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource status not found response has a 5xx status code
func (o *GetResourceStatusNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource status not found response a status code equal to that given
func (o *GetResourceStatusNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource status not found response
func (o *GetResourceStatusNotFound) Code() int {
	return 404
}

func (o *GetResourceStatusNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusNotFound %s", 404, payload)
}

func (o *GetResourceStatusNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusNotFound %s", 404, payload)
}

func (o *GetResourceStatusNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceStatusNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceStatusMethodNotAllowed creates a GetResourceStatusMethodNotAllowed with default headers values
func NewGetResourceStatusMethodNotAllowed() *GetResourceStatusMethodNotAllowed {
	return &GetResourceStatusMethodNotAllowed{}
}

/*
GetResourceStatusMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetResourceStatusMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource status method not allowed response has a 2xx status code
func (o *GetResourceStatusMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource status method not allowed response has a 3xx status code
func (o *GetResourceStatusMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource status method not allowed response has a 4xx status code
func (o *GetResourceStatusMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource status method not allowed response has a 5xx status code
func (o *GetResourceStatusMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource status method not allowed response a status code equal to that given
func (o *GetResourceStatusMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get resource status method not allowed response
func (o *GetResourceStatusMethodNotAllowed) Code() int {
	return 405
}

func (o *GetResourceStatusMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceStatusMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceStatusMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceStatusMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceStatusInternalServerError creates a GetResourceStatusInternalServerError with default headers values
func NewGetResourceStatusInternalServerError() *GetResourceStatusInternalServerError {
	return &GetResourceStatusInternalServerError{}
}

/*
GetResourceStatusInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceStatusInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource status internal server error response has a 2xx status code
func (o *GetResourceStatusInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource status internal server error response has a 3xx status code
func (o *GetResourceStatusInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource status internal server error response has a 4xx status code
func (o *GetResourceStatusInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource status internal server error response has a 5xx status code
func (o *GetResourceStatusInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource status internal server error response a status code equal to that given
func (o *GetResourceStatusInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource status internal server error response
func (o *GetResourceStatusInternalServerError) Code() int {
	return 500
}

func (o *GetResourceStatusInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusInternalServerError %s", 500, payload)
}

func (o *GetResourceStatusInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{projectName}/{environmentName}/status][%d] getResourceStatusInternalServerError %s", 500, payload)
}

func (o *GetResourceStatusInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceStatusInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
