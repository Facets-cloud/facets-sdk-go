// Code generated by go-swagger; DO NOT EDIT.

package ui_resource_status_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetNamespacesInUseByDependentClustersReader is a Reader for the GetNamespacesInUseByDependentClusters structure.
type GetNamespacesInUseByDependentClustersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNamespacesInUseByDependentClustersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNamespacesInUseByDependentClustersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetNamespacesInUseByDependentClustersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetNamespacesInUseByDependentClustersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetNamespacesInUseByDependentClustersMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetNamespacesInUseByDependentClustersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces] getNamespacesInUseByDependentClusters", response, response.Code())
	}
}

// NewGetNamespacesInUseByDependentClustersOK creates a GetNamespacesInUseByDependentClustersOK with default headers values
func NewGetNamespacesInUseByDependentClustersOK() *GetNamespacesInUseByDependentClustersOK {
	return &GetNamespacesInUseByDependentClustersOK{}
}

/*
GetNamespacesInUseByDependentClustersOK describes a response with status code 200, with default header values.

OK
*/
type GetNamespacesInUseByDependentClustersOK struct {
	Payload map[string]string
}

// IsSuccess returns true when this get namespaces in use by dependent clusters o k response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get namespaces in use by dependent clusters o k response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters o k response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get namespaces in use by dependent clusters o k response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters o k response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get namespaces in use by dependent clusters o k response
func (o *GetNamespacesInUseByDependentClustersOK) Code() int {
	return 200
}

func (o *GetNamespacesInUseByDependentClustersOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersOK %s", 200, payload)
}

func (o *GetNamespacesInUseByDependentClustersOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersOK %s", 200, payload)
}

func (o *GetNamespacesInUseByDependentClustersOK) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetNamespacesInUseByDependentClustersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesInUseByDependentClustersBadRequest creates a GetNamespacesInUseByDependentClustersBadRequest with default headers values
func NewGetNamespacesInUseByDependentClustersBadRequest() *GetNamespacesInUseByDependentClustersBadRequest {
	return &GetNamespacesInUseByDependentClustersBadRequest{}
}

/*
GetNamespacesInUseByDependentClustersBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetNamespacesInUseByDependentClustersBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get namespaces in use by dependent clusters bad request response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get namespaces in use by dependent clusters bad request response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters bad request response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get namespaces in use by dependent clusters bad request response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters bad request response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get namespaces in use by dependent clusters bad request response
func (o *GetNamespacesInUseByDependentClustersBadRequest) Code() int {
	return 400
}

func (o *GetNamespacesInUseByDependentClustersBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersBadRequest %s", 400, payload)
}

func (o *GetNamespacesInUseByDependentClustersBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersBadRequest %s", 400, payload)
}

func (o *GetNamespacesInUseByDependentClustersBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetNamespacesInUseByDependentClustersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesInUseByDependentClustersNotFound creates a GetNamespacesInUseByDependentClustersNotFound with default headers values
func NewGetNamespacesInUseByDependentClustersNotFound() *GetNamespacesInUseByDependentClustersNotFound {
	return &GetNamespacesInUseByDependentClustersNotFound{}
}

/*
GetNamespacesInUseByDependentClustersNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetNamespacesInUseByDependentClustersNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get namespaces in use by dependent clusters not found response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get namespaces in use by dependent clusters not found response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters not found response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get namespaces in use by dependent clusters not found response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters not found response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get namespaces in use by dependent clusters not found response
func (o *GetNamespacesInUseByDependentClustersNotFound) Code() int {
	return 404
}

func (o *GetNamespacesInUseByDependentClustersNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersNotFound %s", 404, payload)
}

func (o *GetNamespacesInUseByDependentClustersNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersNotFound %s", 404, payload)
}

func (o *GetNamespacesInUseByDependentClustersNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetNamespacesInUseByDependentClustersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesInUseByDependentClustersMethodNotAllowed creates a GetNamespacesInUseByDependentClustersMethodNotAllowed with default headers values
func NewGetNamespacesInUseByDependentClustersMethodNotAllowed() *GetNamespacesInUseByDependentClustersMethodNotAllowed {
	return &GetNamespacesInUseByDependentClustersMethodNotAllowed{}
}

/*
GetNamespacesInUseByDependentClustersMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetNamespacesInUseByDependentClustersMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get namespaces in use by dependent clusters method not allowed response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get namespaces in use by dependent clusters method not allowed response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters method not allowed response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get namespaces in use by dependent clusters method not allowed response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get namespaces in use by dependent clusters method not allowed response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get namespaces in use by dependent clusters method not allowed response
func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) Code() int {
	return 405
}

func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersMethodNotAllowed %s", 405, payload)
}

func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetNamespacesInUseByDependentClustersMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespacesInUseByDependentClustersInternalServerError creates a GetNamespacesInUseByDependentClustersInternalServerError with default headers values
func NewGetNamespacesInUseByDependentClustersInternalServerError() *GetNamespacesInUseByDependentClustersInternalServerError {
	return &GetNamespacesInUseByDependentClustersInternalServerError{}
}

/*
GetNamespacesInUseByDependentClustersInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetNamespacesInUseByDependentClustersInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get namespaces in use by dependent clusters internal server error response has a 2xx status code
func (o *GetNamespacesInUseByDependentClustersInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get namespaces in use by dependent clusters internal server error response has a 3xx status code
func (o *GetNamespacesInUseByDependentClustersInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get namespaces in use by dependent clusters internal server error response has a 4xx status code
func (o *GetNamespacesInUseByDependentClustersInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get namespaces in use by dependent clusters internal server error response has a 5xx status code
func (o *GetNamespacesInUseByDependentClustersInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get namespaces in use by dependent clusters internal server error response a status code equal to that given
func (o *GetNamespacesInUseByDependentClustersInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get namespaces in use by dependent clusters internal server error response
func (o *GetNamespacesInUseByDependentClustersInternalServerError) Code() int {
	return 500
}

func (o *GetNamespacesInUseByDependentClustersInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersInternalServerError %s", 500, payload)
}

func (o *GetNamespacesInUseByDependentClustersInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/resources/{baseClusterId}/base-env-in-use-namespaces][%d] getNamespacesInUseByDependentClustersInternalServerError %s", 500, payload)
}

func (o *GetNamespacesInUseByDependentClustersInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetNamespacesInUseByDependentClustersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
