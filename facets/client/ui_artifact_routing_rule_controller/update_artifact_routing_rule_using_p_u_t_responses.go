// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_routing_rule_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateArtifactRoutingRuleUsingPUTReader is a Reader for the UpdateArtifactRoutingRuleUsingPUT structure.
type UpdateArtifactRoutingRuleUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateArtifactRoutingRuleUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateArtifactRoutingRuleUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateArtifactRoutingRuleUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateArtifactRoutingRuleUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateArtifactRoutingRuleUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateArtifactRoutingRuleUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/artifact-routing-rule] updateArtifactRoutingRuleUsingPUT", response, response.Code())
	}
}

// NewUpdateArtifactRoutingRuleUsingPUTOK creates a UpdateArtifactRoutingRuleUsingPUTOK with default headers values
func NewUpdateArtifactRoutingRuleUsingPUTOK() *UpdateArtifactRoutingRuleUsingPUTOK {
	return &UpdateArtifactRoutingRuleUsingPUTOK{}
}

/*
UpdateArtifactRoutingRuleUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateArtifactRoutingRuleUsingPUTOK struct {
	Payload *models.ArtifactRoutingRuleResponse
}

// IsSuccess returns true when this update artifact routing rule using p u t o k response has a 2xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update artifact routing rule using p u t o k response has a 3xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact routing rule using p u t o k response has a 4xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update artifact routing rule using p u t o k response has a 5xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact routing rule using p u t o k response a status code equal to that given
func (o *UpdateArtifactRoutingRuleUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update artifact routing rule using p u t o k response
func (o *UpdateArtifactRoutingRuleUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateArtifactRoutingRuleUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateArtifactRoutingRuleUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTOK %s", 200, payload)
}

func (o *UpdateArtifactRoutingRuleUsingPUTOK) GetPayload() *models.ArtifactRoutingRuleResponse {
	return o.Payload
}

func (o *UpdateArtifactRoutingRuleUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactRoutingRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateArtifactRoutingRuleUsingPUTCreated creates a UpdateArtifactRoutingRuleUsingPUTCreated with default headers values
func NewUpdateArtifactRoutingRuleUsingPUTCreated() *UpdateArtifactRoutingRuleUsingPUTCreated {
	return &UpdateArtifactRoutingRuleUsingPUTCreated{}
}

/*
UpdateArtifactRoutingRuleUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateArtifactRoutingRuleUsingPUTCreated struct {
}

// IsSuccess returns true when this update artifact routing rule using p u t created response has a 2xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update artifact routing rule using p u t created response has a 3xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact routing rule using p u t created response has a 4xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update artifact routing rule using p u t created response has a 5xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact routing rule using p u t created response a status code equal to that given
func (o *UpdateArtifactRoutingRuleUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update artifact routing rule using p u t created response
func (o *UpdateArtifactRoutingRuleUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateArtifactRoutingRuleUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTCreated", 201)
}

func (o *UpdateArtifactRoutingRuleUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTCreated", 201)
}

func (o *UpdateArtifactRoutingRuleUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateArtifactRoutingRuleUsingPUTUnauthorized creates a UpdateArtifactRoutingRuleUsingPUTUnauthorized with default headers values
func NewUpdateArtifactRoutingRuleUsingPUTUnauthorized() *UpdateArtifactRoutingRuleUsingPUTUnauthorized {
	return &UpdateArtifactRoutingRuleUsingPUTUnauthorized{}
}

/*
UpdateArtifactRoutingRuleUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateArtifactRoutingRuleUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update artifact routing rule using p u t unauthorized response has a 2xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update artifact routing rule using p u t unauthorized response has a 3xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact routing rule using p u t unauthorized response has a 4xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update artifact routing rule using p u t unauthorized response has a 5xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact routing rule using p u t unauthorized response a status code equal to that given
func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update artifact routing rule using p u t unauthorized response
func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTUnauthorized", 401)
}

func (o *UpdateArtifactRoutingRuleUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateArtifactRoutingRuleUsingPUTForbidden creates a UpdateArtifactRoutingRuleUsingPUTForbidden with default headers values
func NewUpdateArtifactRoutingRuleUsingPUTForbidden() *UpdateArtifactRoutingRuleUsingPUTForbidden {
	return &UpdateArtifactRoutingRuleUsingPUTForbidden{}
}

/*
UpdateArtifactRoutingRuleUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateArtifactRoutingRuleUsingPUTForbidden struct {
}

// IsSuccess returns true when this update artifact routing rule using p u t forbidden response has a 2xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update artifact routing rule using p u t forbidden response has a 3xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact routing rule using p u t forbidden response has a 4xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update artifact routing rule using p u t forbidden response has a 5xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact routing rule using p u t forbidden response a status code equal to that given
func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update artifact routing rule using p u t forbidden response
func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTForbidden", 403)
}

func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTForbidden", 403)
}

func (o *UpdateArtifactRoutingRuleUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateArtifactRoutingRuleUsingPUTNotFound creates a UpdateArtifactRoutingRuleUsingPUTNotFound with default headers values
func NewUpdateArtifactRoutingRuleUsingPUTNotFound() *UpdateArtifactRoutingRuleUsingPUTNotFound {
	return &UpdateArtifactRoutingRuleUsingPUTNotFound{}
}

/*
UpdateArtifactRoutingRuleUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateArtifactRoutingRuleUsingPUTNotFound struct {
}

// IsSuccess returns true when this update artifact routing rule using p u t not found response has a 2xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update artifact routing rule using p u t not found response has a 3xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update artifact routing rule using p u t not found response has a 4xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update artifact routing rule using p u t not found response has a 5xx status code
func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update artifact routing rule using p u t not found response a status code equal to that given
func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update artifact routing rule using p u t not found response
func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTNotFound", 404)
}

func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/artifact-routing-rule][%d] updateArtifactRoutingRuleUsingPUTNotFound", 404)
}

func (o *UpdateArtifactRoutingRuleUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
