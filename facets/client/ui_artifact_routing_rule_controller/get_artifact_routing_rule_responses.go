// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_routing_rule_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetArtifactRoutingRuleReader is a Reader for the GetArtifactRoutingRule structure.
type GetArtifactRoutingRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetArtifactRoutingRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetArtifactRoutingRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetArtifactRoutingRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetArtifactRoutingRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetArtifactRoutingRuleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetArtifactRoutingRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}] getArtifactRoutingRule", response, response.Code())
	}
}

// NewGetArtifactRoutingRuleOK creates a GetArtifactRoutingRuleOK with default headers values
func NewGetArtifactRoutingRuleOK() *GetArtifactRoutingRuleOK {
	return &GetArtifactRoutingRuleOK{}
}

/*
GetArtifactRoutingRuleOK describes a response with status code 200, with default header values.

OK
*/
type GetArtifactRoutingRuleOK struct {
	Payload *models.ArtifactRoutingRuleResponse
}

// IsSuccess returns true when this get artifact routing rule o k response has a 2xx status code
func (o *GetArtifactRoutingRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get artifact routing rule o k response has a 3xx status code
func (o *GetArtifactRoutingRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact routing rule o k response has a 4xx status code
func (o *GetArtifactRoutingRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact routing rule o k response has a 5xx status code
func (o *GetArtifactRoutingRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact routing rule o k response a status code equal to that given
func (o *GetArtifactRoutingRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get artifact routing rule o k response
func (o *GetArtifactRoutingRuleOK) Code() int {
	return 200
}

func (o *GetArtifactRoutingRuleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleOK %s", 200, payload)
}

func (o *GetArtifactRoutingRuleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleOK %s", 200, payload)
}

func (o *GetArtifactRoutingRuleOK) GetPayload() *models.ArtifactRoutingRuleResponse {
	return o.Payload
}

func (o *GetArtifactRoutingRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactRoutingRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactRoutingRuleBadRequest creates a GetArtifactRoutingRuleBadRequest with default headers values
func NewGetArtifactRoutingRuleBadRequest() *GetArtifactRoutingRuleBadRequest {
	return &GetArtifactRoutingRuleBadRequest{}
}

/*
GetArtifactRoutingRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetArtifactRoutingRuleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact routing rule bad request response has a 2xx status code
func (o *GetArtifactRoutingRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact routing rule bad request response has a 3xx status code
func (o *GetArtifactRoutingRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact routing rule bad request response has a 4xx status code
func (o *GetArtifactRoutingRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact routing rule bad request response has a 5xx status code
func (o *GetArtifactRoutingRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact routing rule bad request response a status code equal to that given
func (o *GetArtifactRoutingRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get artifact routing rule bad request response
func (o *GetArtifactRoutingRuleBadRequest) Code() int {
	return 400
}

func (o *GetArtifactRoutingRuleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleBadRequest %s", 400, payload)
}

func (o *GetArtifactRoutingRuleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleBadRequest %s", 400, payload)
}

func (o *GetArtifactRoutingRuleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactRoutingRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactRoutingRuleNotFound creates a GetArtifactRoutingRuleNotFound with default headers values
func NewGetArtifactRoutingRuleNotFound() *GetArtifactRoutingRuleNotFound {
	return &GetArtifactRoutingRuleNotFound{}
}

/*
GetArtifactRoutingRuleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetArtifactRoutingRuleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact routing rule not found response has a 2xx status code
func (o *GetArtifactRoutingRuleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact routing rule not found response has a 3xx status code
func (o *GetArtifactRoutingRuleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact routing rule not found response has a 4xx status code
func (o *GetArtifactRoutingRuleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact routing rule not found response has a 5xx status code
func (o *GetArtifactRoutingRuleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact routing rule not found response a status code equal to that given
func (o *GetArtifactRoutingRuleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get artifact routing rule not found response
func (o *GetArtifactRoutingRuleNotFound) Code() int {
	return 404
}

func (o *GetArtifactRoutingRuleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleNotFound %s", 404, payload)
}

func (o *GetArtifactRoutingRuleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleNotFound %s", 404, payload)
}

func (o *GetArtifactRoutingRuleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactRoutingRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactRoutingRuleMethodNotAllowed creates a GetArtifactRoutingRuleMethodNotAllowed with default headers values
func NewGetArtifactRoutingRuleMethodNotAllowed() *GetArtifactRoutingRuleMethodNotAllowed {
	return &GetArtifactRoutingRuleMethodNotAllowed{}
}

/*
GetArtifactRoutingRuleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetArtifactRoutingRuleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact routing rule method not allowed response has a 2xx status code
func (o *GetArtifactRoutingRuleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact routing rule method not allowed response has a 3xx status code
func (o *GetArtifactRoutingRuleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact routing rule method not allowed response has a 4xx status code
func (o *GetArtifactRoutingRuleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get artifact routing rule method not allowed response has a 5xx status code
func (o *GetArtifactRoutingRuleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get artifact routing rule method not allowed response a status code equal to that given
func (o *GetArtifactRoutingRuleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get artifact routing rule method not allowed response
func (o *GetArtifactRoutingRuleMethodNotAllowed) Code() int {
	return 405
}

func (o *GetArtifactRoutingRuleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactRoutingRuleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleMethodNotAllowed %s", 405, payload)
}

func (o *GetArtifactRoutingRuleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactRoutingRuleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetArtifactRoutingRuleInternalServerError creates a GetArtifactRoutingRuleInternalServerError with default headers values
func NewGetArtifactRoutingRuleInternalServerError() *GetArtifactRoutingRuleInternalServerError {
	return &GetArtifactRoutingRuleInternalServerError{}
}

/*
GetArtifactRoutingRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetArtifactRoutingRuleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get artifact routing rule internal server error response has a 2xx status code
func (o *GetArtifactRoutingRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get artifact routing rule internal server error response has a 3xx status code
func (o *GetArtifactRoutingRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get artifact routing rule internal server error response has a 4xx status code
func (o *GetArtifactRoutingRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get artifact routing rule internal server error response has a 5xx status code
func (o *GetArtifactRoutingRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get artifact routing rule internal server error response a status code equal to that given
func (o *GetArtifactRoutingRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get artifact routing rule internal server error response
func (o *GetArtifactRoutingRuleInternalServerError) Code() int {
	return 500
}

func (o *GetArtifactRoutingRuleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleInternalServerError %s", 500, payload)
}

func (o *GetArtifactRoutingRuleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] getArtifactRoutingRuleInternalServerError %s", 500, payload)
}

func (o *GetArtifactRoutingRuleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetArtifactRoutingRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
