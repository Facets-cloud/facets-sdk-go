// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_routing_rule_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllArtifactRoutingRulesUsingGETReader is a Reader for the GetAllArtifactRoutingRulesUsingGET structure.
type GetAllArtifactRoutingRulesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllArtifactRoutingRulesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllArtifactRoutingRulesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllArtifactRoutingRulesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllArtifactRoutingRulesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllArtifactRoutingRulesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifact-routing-rule] getAllArtifactRoutingRulesUsingGET", response, response.Code())
	}
}

// NewGetAllArtifactRoutingRulesUsingGETOK creates a GetAllArtifactRoutingRulesUsingGETOK with default headers values
func NewGetAllArtifactRoutingRulesUsingGETOK() *GetAllArtifactRoutingRulesUsingGETOK {
	return &GetAllArtifactRoutingRulesUsingGETOK{}
}

/*
GetAllArtifactRoutingRulesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllArtifactRoutingRulesUsingGETOK struct {
	Payload []*models.ArtifactRoutingRuleResponse
}

// IsSuccess returns true when this get all artifact routing rules using g e t o k response has a 2xx status code
func (o *GetAllArtifactRoutingRulesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all artifact routing rules using g e t o k response has a 3xx status code
func (o *GetAllArtifactRoutingRulesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules using g e t o k response has a 4xx status code
func (o *GetAllArtifactRoutingRulesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all artifact routing rules using g e t o k response has a 5xx status code
func (o *GetAllArtifactRoutingRulesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules using g e t o k response a status code equal to that given
func (o *GetAllArtifactRoutingRulesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all artifact routing rules using g e t o k response
func (o *GetAllArtifactRoutingRulesUsingGETOK) Code() int {
	return 200
}

func (o *GetAllArtifactRoutingRulesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETOK %s", 200, payload)
}

func (o *GetAllArtifactRoutingRulesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETOK %s", 200, payload)
}

func (o *GetAllArtifactRoutingRulesUsingGETOK) GetPayload() []*models.ArtifactRoutingRuleResponse {
	return o.Payload
}

func (o *GetAllArtifactRoutingRulesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllArtifactRoutingRulesUsingGETUnauthorized creates a GetAllArtifactRoutingRulesUsingGETUnauthorized with default headers values
func NewGetAllArtifactRoutingRulesUsingGETUnauthorized() *GetAllArtifactRoutingRulesUsingGETUnauthorized {
	return &GetAllArtifactRoutingRulesUsingGETUnauthorized{}
}

/*
GetAllArtifactRoutingRulesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllArtifactRoutingRulesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all artifact routing rules using g e t unauthorized response has a 2xx status code
func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifact routing rules using g e t unauthorized response has a 3xx status code
func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules using g e t unauthorized response has a 4xx status code
func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifact routing rules using g e t unauthorized response has a 5xx status code
func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules using g e t unauthorized response a status code equal to that given
func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all artifact routing rules using g e t unauthorized response
func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETUnauthorized", 401)
}

func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETUnauthorized", 401)
}

func (o *GetAllArtifactRoutingRulesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllArtifactRoutingRulesUsingGETForbidden creates a GetAllArtifactRoutingRulesUsingGETForbidden with default headers values
func NewGetAllArtifactRoutingRulesUsingGETForbidden() *GetAllArtifactRoutingRulesUsingGETForbidden {
	return &GetAllArtifactRoutingRulesUsingGETForbidden{}
}

/*
GetAllArtifactRoutingRulesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllArtifactRoutingRulesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all artifact routing rules using g e t forbidden response has a 2xx status code
func (o *GetAllArtifactRoutingRulesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifact routing rules using g e t forbidden response has a 3xx status code
func (o *GetAllArtifactRoutingRulesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules using g e t forbidden response has a 4xx status code
func (o *GetAllArtifactRoutingRulesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifact routing rules using g e t forbidden response has a 5xx status code
func (o *GetAllArtifactRoutingRulesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules using g e t forbidden response a status code equal to that given
func (o *GetAllArtifactRoutingRulesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all artifact routing rules using g e t forbidden response
func (o *GetAllArtifactRoutingRulesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllArtifactRoutingRulesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETForbidden", 403)
}

func (o *GetAllArtifactRoutingRulesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETForbidden", 403)
}

func (o *GetAllArtifactRoutingRulesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllArtifactRoutingRulesUsingGETNotFound creates a GetAllArtifactRoutingRulesUsingGETNotFound with default headers values
func NewGetAllArtifactRoutingRulesUsingGETNotFound() *GetAllArtifactRoutingRulesUsingGETNotFound {
	return &GetAllArtifactRoutingRulesUsingGETNotFound{}
}

/*
GetAllArtifactRoutingRulesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllArtifactRoutingRulesUsingGETNotFound struct {
}

// IsSuccess returns true when this get all artifact routing rules using g e t not found response has a 2xx status code
func (o *GetAllArtifactRoutingRulesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifact routing rules using g e t not found response has a 3xx status code
func (o *GetAllArtifactRoutingRulesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules using g e t not found response has a 4xx status code
func (o *GetAllArtifactRoutingRulesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifact routing rules using g e t not found response has a 5xx status code
func (o *GetAllArtifactRoutingRulesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules using g e t not found response a status code equal to that given
func (o *GetAllArtifactRoutingRulesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all artifact routing rules using g e t not found response
func (o *GetAllArtifactRoutingRulesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllArtifactRoutingRulesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETNotFound", 404)
}

func (o *GetAllArtifactRoutingRulesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesUsingGETNotFound", 404)
}

func (o *GetAllArtifactRoutingRulesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
