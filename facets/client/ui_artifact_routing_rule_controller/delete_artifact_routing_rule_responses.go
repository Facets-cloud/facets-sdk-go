// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_routing_rule_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteArtifactRoutingRuleReader is a Reader for the DeleteArtifactRoutingRule structure.
type DeleteArtifactRoutingRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteArtifactRoutingRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteArtifactRoutingRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteArtifactRoutingRuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteArtifactRoutingRuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteArtifactRoutingRuleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteArtifactRoutingRuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}] deleteArtifactRoutingRule", response, response.Code())
	}
}

// NewDeleteArtifactRoutingRuleOK creates a DeleteArtifactRoutingRuleOK with default headers values
func NewDeleteArtifactRoutingRuleOK() *DeleteArtifactRoutingRuleOK {
	return &DeleteArtifactRoutingRuleOK{}
}

/*
DeleteArtifactRoutingRuleOK describes a response with status code 200, with default header values.

OK
*/
type DeleteArtifactRoutingRuleOK struct {
}

// IsSuccess returns true when this delete artifact routing rule o k response has a 2xx status code
func (o *DeleteArtifactRoutingRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete artifact routing rule o k response has a 3xx status code
func (o *DeleteArtifactRoutingRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact routing rule o k response has a 4xx status code
func (o *DeleteArtifactRoutingRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifact routing rule o k response has a 5xx status code
func (o *DeleteArtifactRoutingRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact routing rule o k response a status code equal to that given
func (o *DeleteArtifactRoutingRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete artifact routing rule o k response
func (o *DeleteArtifactRoutingRuleOK) Code() int {
	return 200
}

func (o *DeleteArtifactRoutingRuleOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleOK", 200)
}

func (o *DeleteArtifactRoutingRuleOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleOK", 200)
}

func (o *DeleteArtifactRoutingRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteArtifactRoutingRuleBadRequest creates a DeleteArtifactRoutingRuleBadRequest with default headers values
func NewDeleteArtifactRoutingRuleBadRequest() *DeleteArtifactRoutingRuleBadRequest {
	return &DeleteArtifactRoutingRuleBadRequest{}
}

/*
DeleteArtifactRoutingRuleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteArtifactRoutingRuleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact routing rule bad request response has a 2xx status code
func (o *DeleteArtifactRoutingRuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact routing rule bad request response has a 3xx status code
func (o *DeleteArtifactRoutingRuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact routing rule bad request response has a 4xx status code
func (o *DeleteArtifactRoutingRuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact routing rule bad request response has a 5xx status code
func (o *DeleteArtifactRoutingRuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact routing rule bad request response a status code equal to that given
func (o *DeleteArtifactRoutingRuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete artifact routing rule bad request response
func (o *DeleteArtifactRoutingRuleBadRequest) Code() int {
	return 400
}

func (o *DeleteArtifactRoutingRuleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleBadRequest %s", 400, payload)
}

func (o *DeleteArtifactRoutingRuleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleBadRequest %s", 400, payload)
}

func (o *DeleteArtifactRoutingRuleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactRoutingRuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactRoutingRuleNotFound creates a DeleteArtifactRoutingRuleNotFound with default headers values
func NewDeleteArtifactRoutingRuleNotFound() *DeleteArtifactRoutingRuleNotFound {
	return &DeleteArtifactRoutingRuleNotFound{}
}

/*
DeleteArtifactRoutingRuleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteArtifactRoutingRuleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact routing rule not found response has a 2xx status code
func (o *DeleteArtifactRoutingRuleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact routing rule not found response has a 3xx status code
func (o *DeleteArtifactRoutingRuleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact routing rule not found response has a 4xx status code
func (o *DeleteArtifactRoutingRuleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact routing rule not found response has a 5xx status code
func (o *DeleteArtifactRoutingRuleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact routing rule not found response a status code equal to that given
func (o *DeleteArtifactRoutingRuleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete artifact routing rule not found response
func (o *DeleteArtifactRoutingRuleNotFound) Code() int {
	return 404
}

func (o *DeleteArtifactRoutingRuleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleNotFound %s", 404, payload)
}

func (o *DeleteArtifactRoutingRuleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleNotFound %s", 404, payload)
}

func (o *DeleteArtifactRoutingRuleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactRoutingRuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactRoutingRuleMethodNotAllowed creates a DeleteArtifactRoutingRuleMethodNotAllowed with default headers values
func NewDeleteArtifactRoutingRuleMethodNotAllowed() *DeleteArtifactRoutingRuleMethodNotAllowed {
	return &DeleteArtifactRoutingRuleMethodNotAllowed{}
}

/*
DeleteArtifactRoutingRuleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteArtifactRoutingRuleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact routing rule method not allowed response has a 2xx status code
func (o *DeleteArtifactRoutingRuleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact routing rule method not allowed response has a 3xx status code
func (o *DeleteArtifactRoutingRuleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact routing rule method not allowed response has a 4xx status code
func (o *DeleteArtifactRoutingRuleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifact routing rule method not allowed response has a 5xx status code
func (o *DeleteArtifactRoutingRuleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifact routing rule method not allowed response a status code equal to that given
func (o *DeleteArtifactRoutingRuleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete artifact routing rule method not allowed response
func (o *DeleteArtifactRoutingRuleMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteArtifactRoutingRuleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteArtifactRoutingRuleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteArtifactRoutingRuleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactRoutingRuleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactRoutingRuleInternalServerError creates a DeleteArtifactRoutingRuleInternalServerError with default headers values
func NewDeleteArtifactRoutingRuleInternalServerError() *DeleteArtifactRoutingRuleInternalServerError {
	return &DeleteArtifactRoutingRuleInternalServerError{}
}

/*
DeleteArtifactRoutingRuleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteArtifactRoutingRuleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifact routing rule internal server error response has a 2xx status code
func (o *DeleteArtifactRoutingRuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifact routing rule internal server error response has a 3xx status code
func (o *DeleteArtifactRoutingRuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifact routing rule internal server error response has a 4xx status code
func (o *DeleteArtifactRoutingRuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifact routing rule internal server error response has a 5xx status code
func (o *DeleteArtifactRoutingRuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete artifact routing rule internal server error response a status code equal to that given
func (o *DeleteArtifactRoutingRuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete artifact routing rule internal server error response
func (o *DeleteArtifactRoutingRuleInternalServerError) Code() int {
	return 500
}

func (o *DeleteArtifactRoutingRuleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleInternalServerError %s", 500, payload)
}

func (o *DeleteArtifactRoutingRuleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifact-routing-rule/{ruleId}][%d] deleteArtifactRoutingRuleInternalServerError %s", 500, payload)
}

func (o *DeleteArtifactRoutingRuleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactRoutingRuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
