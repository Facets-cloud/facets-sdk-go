// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_routing_rule_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddArtifactRoutingRuleUsingPOSTReader is a Reader for the AddArtifactRoutingRuleUsingPOST structure.
type AddArtifactRoutingRuleUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddArtifactRoutingRuleUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddArtifactRoutingRuleUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddArtifactRoutingRuleUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddArtifactRoutingRuleUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddArtifactRoutingRuleUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddArtifactRoutingRuleUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifact-routing-rule] addArtifactRoutingRuleUsingPOST", response, response.Code())
	}
}

// NewAddArtifactRoutingRuleUsingPOSTOK creates a AddArtifactRoutingRuleUsingPOSTOK with default headers values
func NewAddArtifactRoutingRuleUsingPOSTOK() *AddArtifactRoutingRuleUsingPOSTOK {
	return &AddArtifactRoutingRuleUsingPOSTOK{}
}

/*
AddArtifactRoutingRuleUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type AddArtifactRoutingRuleUsingPOSTOK struct {
	Payload *models.ArtifactRoutingRuleResponse
}

// IsSuccess returns true when this add artifact routing rule using p o s t o k response has a 2xx status code
func (o *AddArtifactRoutingRuleUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add artifact routing rule using p o s t o k response has a 3xx status code
func (o *AddArtifactRoutingRuleUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add artifact routing rule using p o s t o k response has a 4xx status code
func (o *AddArtifactRoutingRuleUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add artifact routing rule using p o s t o k response has a 5xx status code
func (o *AddArtifactRoutingRuleUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add artifact routing rule using p o s t o k response a status code equal to that given
func (o *AddArtifactRoutingRuleUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add artifact routing rule using p o s t o k response
func (o *AddArtifactRoutingRuleUsingPOSTOK) Code() int {
	return 200
}

func (o *AddArtifactRoutingRuleUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTOK %s", 200, payload)
}

func (o *AddArtifactRoutingRuleUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTOK %s", 200, payload)
}

func (o *AddArtifactRoutingRuleUsingPOSTOK) GetPayload() *models.ArtifactRoutingRuleResponse {
	return o.Payload
}

func (o *AddArtifactRoutingRuleUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ArtifactRoutingRuleResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddArtifactRoutingRuleUsingPOSTCreated creates a AddArtifactRoutingRuleUsingPOSTCreated with default headers values
func NewAddArtifactRoutingRuleUsingPOSTCreated() *AddArtifactRoutingRuleUsingPOSTCreated {
	return &AddArtifactRoutingRuleUsingPOSTCreated{}
}

/*
AddArtifactRoutingRuleUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddArtifactRoutingRuleUsingPOSTCreated struct {
}

// IsSuccess returns true when this add artifact routing rule using p o s t created response has a 2xx status code
func (o *AddArtifactRoutingRuleUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add artifact routing rule using p o s t created response has a 3xx status code
func (o *AddArtifactRoutingRuleUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add artifact routing rule using p o s t created response has a 4xx status code
func (o *AddArtifactRoutingRuleUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add artifact routing rule using p o s t created response has a 5xx status code
func (o *AddArtifactRoutingRuleUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add artifact routing rule using p o s t created response a status code equal to that given
func (o *AddArtifactRoutingRuleUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add artifact routing rule using p o s t created response
func (o *AddArtifactRoutingRuleUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddArtifactRoutingRuleUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTCreated", 201)
}

func (o *AddArtifactRoutingRuleUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTCreated", 201)
}

func (o *AddArtifactRoutingRuleUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddArtifactRoutingRuleUsingPOSTUnauthorized creates a AddArtifactRoutingRuleUsingPOSTUnauthorized with default headers values
func NewAddArtifactRoutingRuleUsingPOSTUnauthorized() *AddArtifactRoutingRuleUsingPOSTUnauthorized {
	return &AddArtifactRoutingRuleUsingPOSTUnauthorized{}
}

/*
AddArtifactRoutingRuleUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddArtifactRoutingRuleUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add artifact routing rule using p o s t unauthorized response has a 2xx status code
func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add artifact routing rule using p o s t unauthorized response has a 3xx status code
func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add artifact routing rule using p o s t unauthorized response has a 4xx status code
func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add artifact routing rule using p o s t unauthorized response has a 5xx status code
func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add artifact routing rule using p o s t unauthorized response a status code equal to that given
func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add artifact routing rule using p o s t unauthorized response
func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTUnauthorized", 401)
}

func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTUnauthorized", 401)
}

func (o *AddArtifactRoutingRuleUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddArtifactRoutingRuleUsingPOSTForbidden creates a AddArtifactRoutingRuleUsingPOSTForbidden with default headers values
func NewAddArtifactRoutingRuleUsingPOSTForbidden() *AddArtifactRoutingRuleUsingPOSTForbidden {
	return &AddArtifactRoutingRuleUsingPOSTForbidden{}
}

/*
AddArtifactRoutingRuleUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddArtifactRoutingRuleUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add artifact routing rule using p o s t forbidden response has a 2xx status code
func (o *AddArtifactRoutingRuleUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add artifact routing rule using p o s t forbidden response has a 3xx status code
func (o *AddArtifactRoutingRuleUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add artifact routing rule using p o s t forbidden response has a 4xx status code
func (o *AddArtifactRoutingRuleUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add artifact routing rule using p o s t forbidden response has a 5xx status code
func (o *AddArtifactRoutingRuleUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add artifact routing rule using p o s t forbidden response a status code equal to that given
func (o *AddArtifactRoutingRuleUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add artifact routing rule using p o s t forbidden response
func (o *AddArtifactRoutingRuleUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddArtifactRoutingRuleUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTForbidden", 403)
}

func (o *AddArtifactRoutingRuleUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTForbidden", 403)
}

func (o *AddArtifactRoutingRuleUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddArtifactRoutingRuleUsingPOSTNotFound creates a AddArtifactRoutingRuleUsingPOSTNotFound with default headers values
func NewAddArtifactRoutingRuleUsingPOSTNotFound() *AddArtifactRoutingRuleUsingPOSTNotFound {
	return &AddArtifactRoutingRuleUsingPOSTNotFound{}
}

/*
AddArtifactRoutingRuleUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddArtifactRoutingRuleUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add artifact routing rule using p o s t not found response has a 2xx status code
func (o *AddArtifactRoutingRuleUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add artifact routing rule using p o s t not found response has a 3xx status code
func (o *AddArtifactRoutingRuleUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add artifact routing rule using p o s t not found response has a 4xx status code
func (o *AddArtifactRoutingRuleUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add artifact routing rule using p o s t not found response has a 5xx status code
func (o *AddArtifactRoutingRuleUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add artifact routing rule using p o s t not found response a status code equal to that given
func (o *AddArtifactRoutingRuleUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add artifact routing rule using p o s t not found response
func (o *AddArtifactRoutingRuleUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddArtifactRoutingRuleUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTNotFound", 404)
}

func (o *AddArtifactRoutingRuleUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifact-routing-rule][%d] addArtifactRoutingRuleUsingPOSTNotFound", 404)
}

func (o *AddArtifactRoutingRuleUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
