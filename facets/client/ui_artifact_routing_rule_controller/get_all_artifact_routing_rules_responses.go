// Code generated by go-swagger; DO NOT EDIT.

package ui_artifact_routing_rule_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllArtifactRoutingRulesReader is a Reader for the GetAllArtifactRoutingRules structure.
type GetAllArtifactRoutingRulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllArtifactRoutingRulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllArtifactRoutingRulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllArtifactRoutingRulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllArtifactRoutingRulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllArtifactRoutingRulesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllArtifactRoutingRulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifact-routing-rule] getAllArtifactRoutingRules", response, response.Code())
	}
}

// NewGetAllArtifactRoutingRulesOK creates a GetAllArtifactRoutingRulesOK with default headers values
func NewGetAllArtifactRoutingRulesOK() *GetAllArtifactRoutingRulesOK {
	return &GetAllArtifactRoutingRulesOK{}
}

/*
GetAllArtifactRoutingRulesOK describes a response with status code 200, with default header values.

OK
*/
type GetAllArtifactRoutingRulesOK struct {
	Payload []*models.ArtifactRoutingRuleResponse
}

// IsSuccess returns true when this get all artifact routing rules o k response has a 2xx status code
func (o *GetAllArtifactRoutingRulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all artifact routing rules o k response has a 3xx status code
func (o *GetAllArtifactRoutingRulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules o k response has a 4xx status code
func (o *GetAllArtifactRoutingRulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all artifact routing rules o k response has a 5xx status code
func (o *GetAllArtifactRoutingRulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules o k response a status code equal to that given
func (o *GetAllArtifactRoutingRulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all artifact routing rules o k response
func (o *GetAllArtifactRoutingRulesOK) Code() int {
	return 200
}

func (o *GetAllArtifactRoutingRulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesOK %s", 200, payload)
}

func (o *GetAllArtifactRoutingRulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesOK %s", 200, payload)
}

func (o *GetAllArtifactRoutingRulesOK) GetPayload() []*models.ArtifactRoutingRuleResponse {
	return o.Payload
}

func (o *GetAllArtifactRoutingRulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllArtifactRoutingRulesBadRequest creates a GetAllArtifactRoutingRulesBadRequest with default headers values
func NewGetAllArtifactRoutingRulesBadRequest() *GetAllArtifactRoutingRulesBadRequest {
	return &GetAllArtifactRoutingRulesBadRequest{}
}

/*
GetAllArtifactRoutingRulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllArtifactRoutingRulesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all artifact routing rules bad request response has a 2xx status code
func (o *GetAllArtifactRoutingRulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifact routing rules bad request response has a 3xx status code
func (o *GetAllArtifactRoutingRulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules bad request response has a 4xx status code
func (o *GetAllArtifactRoutingRulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifact routing rules bad request response has a 5xx status code
func (o *GetAllArtifactRoutingRulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules bad request response a status code equal to that given
func (o *GetAllArtifactRoutingRulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all artifact routing rules bad request response
func (o *GetAllArtifactRoutingRulesBadRequest) Code() int {
	return 400
}

func (o *GetAllArtifactRoutingRulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesBadRequest %s", 400, payload)
}

func (o *GetAllArtifactRoutingRulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesBadRequest %s", 400, payload)
}

func (o *GetAllArtifactRoutingRulesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllArtifactRoutingRulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllArtifactRoutingRulesNotFound creates a GetAllArtifactRoutingRulesNotFound with default headers values
func NewGetAllArtifactRoutingRulesNotFound() *GetAllArtifactRoutingRulesNotFound {
	return &GetAllArtifactRoutingRulesNotFound{}
}

/*
GetAllArtifactRoutingRulesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllArtifactRoutingRulesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all artifact routing rules not found response has a 2xx status code
func (o *GetAllArtifactRoutingRulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifact routing rules not found response has a 3xx status code
func (o *GetAllArtifactRoutingRulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules not found response has a 4xx status code
func (o *GetAllArtifactRoutingRulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifact routing rules not found response has a 5xx status code
func (o *GetAllArtifactRoutingRulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules not found response a status code equal to that given
func (o *GetAllArtifactRoutingRulesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all artifact routing rules not found response
func (o *GetAllArtifactRoutingRulesNotFound) Code() int {
	return 404
}

func (o *GetAllArtifactRoutingRulesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesNotFound %s", 404, payload)
}

func (o *GetAllArtifactRoutingRulesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesNotFound %s", 404, payload)
}

func (o *GetAllArtifactRoutingRulesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllArtifactRoutingRulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllArtifactRoutingRulesMethodNotAllowed creates a GetAllArtifactRoutingRulesMethodNotAllowed with default headers values
func NewGetAllArtifactRoutingRulesMethodNotAllowed() *GetAllArtifactRoutingRulesMethodNotAllowed {
	return &GetAllArtifactRoutingRulesMethodNotAllowed{}
}

/*
GetAllArtifactRoutingRulesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllArtifactRoutingRulesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all artifact routing rules method not allowed response has a 2xx status code
func (o *GetAllArtifactRoutingRulesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifact routing rules method not allowed response has a 3xx status code
func (o *GetAllArtifactRoutingRulesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules method not allowed response has a 4xx status code
func (o *GetAllArtifactRoutingRulesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all artifact routing rules method not allowed response has a 5xx status code
func (o *GetAllArtifactRoutingRulesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all artifact routing rules method not allowed response a status code equal to that given
func (o *GetAllArtifactRoutingRulesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all artifact routing rules method not allowed response
func (o *GetAllArtifactRoutingRulesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllArtifactRoutingRulesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllArtifactRoutingRulesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllArtifactRoutingRulesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllArtifactRoutingRulesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllArtifactRoutingRulesInternalServerError creates a GetAllArtifactRoutingRulesInternalServerError with default headers values
func NewGetAllArtifactRoutingRulesInternalServerError() *GetAllArtifactRoutingRulesInternalServerError {
	return &GetAllArtifactRoutingRulesInternalServerError{}
}

/*
GetAllArtifactRoutingRulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllArtifactRoutingRulesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all artifact routing rules internal server error response has a 2xx status code
func (o *GetAllArtifactRoutingRulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all artifact routing rules internal server error response has a 3xx status code
func (o *GetAllArtifactRoutingRulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all artifact routing rules internal server error response has a 4xx status code
func (o *GetAllArtifactRoutingRulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all artifact routing rules internal server error response has a 5xx status code
func (o *GetAllArtifactRoutingRulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all artifact routing rules internal server error response a status code equal to that given
func (o *GetAllArtifactRoutingRulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all artifact routing rules internal server error response
func (o *GetAllArtifactRoutingRulesInternalServerError) Code() int {
	return 500
}

func (o *GetAllArtifactRoutingRulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesInternalServerError %s", 500, payload)
}

func (o *GetAllArtifactRoutingRulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifact-routing-rule][%d] getAllArtifactRoutingRulesInternalServerError %s", 500, payload)
}

func (o *GetAllArtifactRoutingRulesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllArtifactRoutingRulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
