// Code generated by go-swagger; DO NOT EDIT.

package ui_web_component_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateComponentUsingPUTReader is a Reader for the UpdateComponentUsingPUT structure.
type UpdateComponentUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateComponentUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateComponentUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateComponentUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateComponentUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateComponentUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateComponentUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/web-components/{webComponentId}] updateComponentUsingPUT", response, response.Code())
	}
}

// NewUpdateComponentUsingPUTOK creates a UpdateComponentUsingPUTOK with default headers values
func NewUpdateComponentUsingPUTOK() *UpdateComponentUsingPUTOK {
	return &UpdateComponentUsingPUTOK{}
}

/*
UpdateComponentUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateComponentUsingPUTOK struct {
	Payload *models.WebComponentDTO
}

// IsSuccess returns true when this update component using p u t o k response has a 2xx status code
func (o *UpdateComponentUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update component using p u t o k response has a 3xx status code
func (o *UpdateComponentUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update component using p u t o k response has a 4xx status code
func (o *UpdateComponentUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update component using p u t o k response has a 5xx status code
func (o *UpdateComponentUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update component using p u t o k response a status code equal to that given
func (o *UpdateComponentUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update component using p u t o k response
func (o *UpdateComponentUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateComponentUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTOK %s", 200, payload)
}

func (o *UpdateComponentUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTOK %s", 200, payload)
}

func (o *UpdateComponentUsingPUTOK) GetPayload() *models.WebComponentDTO {
	return o.Payload
}

func (o *UpdateComponentUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.WebComponentDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateComponentUsingPUTCreated creates a UpdateComponentUsingPUTCreated with default headers values
func NewUpdateComponentUsingPUTCreated() *UpdateComponentUsingPUTCreated {
	return &UpdateComponentUsingPUTCreated{}
}

/*
UpdateComponentUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateComponentUsingPUTCreated struct {
}

// IsSuccess returns true when this update component using p u t created response has a 2xx status code
func (o *UpdateComponentUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update component using p u t created response has a 3xx status code
func (o *UpdateComponentUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update component using p u t created response has a 4xx status code
func (o *UpdateComponentUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update component using p u t created response has a 5xx status code
func (o *UpdateComponentUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update component using p u t created response a status code equal to that given
func (o *UpdateComponentUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update component using p u t created response
func (o *UpdateComponentUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateComponentUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTCreated", 201)
}

func (o *UpdateComponentUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTCreated", 201)
}

func (o *UpdateComponentUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateComponentUsingPUTUnauthorized creates a UpdateComponentUsingPUTUnauthorized with default headers values
func NewUpdateComponentUsingPUTUnauthorized() *UpdateComponentUsingPUTUnauthorized {
	return &UpdateComponentUsingPUTUnauthorized{}
}

/*
UpdateComponentUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateComponentUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update component using p u t unauthorized response has a 2xx status code
func (o *UpdateComponentUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update component using p u t unauthorized response has a 3xx status code
func (o *UpdateComponentUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update component using p u t unauthorized response has a 4xx status code
func (o *UpdateComponentUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update component using p u t unauthorized response has a 5xx status code
func (o *UpdateComponentUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update component using p u t unauthorized response a status code equal to that given
func (o *UpdateComponentUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update component using p u t unauthorized response
func (o *UpdateComponentUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateComponentUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTUnauthorized", 401)
}

func (o *UpdateComponentUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTUnauthorized", 401)
}

func (o *UpdateComponentUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateComponentUsingPUTForbidden creates a UpdateComponentUsingPUTForbidden with default headers values
func NewUpdateComponentUsingPUTForbidden() *UpdateComponentUsingPUTForbidden {
	return &UpdateComponentUsingPUTForbidden{}
}

/*
UpdateComponentUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateComponentUsingPUTForbidden struct {
}

// IsSuccess returns true when this update component using p u t forbidden response has a 2xx status code
func (o *UpdateComponentUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update component using p u t forbidden response has a 3xx status code
func (o *UpdateComponentUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update component using p u t forbidden response has a 4xx status code
func (o *UpdateComponentUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update component using p u t forbidden response has a 5xx status code
func (o *UpdateComponentUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update component using p u t forbidden response a status code equal to that given
func (o *UpdateComponentUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update component using p u t forbidden response
func (o *UpdateComponentUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateComponentUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTForbidden", 403)
}

func (o *UpdateComponentUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTForbidden", 403)
}

func (o *UpdateComponentUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateComponentUsingPUTNotFound creates a UpdateComponentUsingPUTNotFound with default headers values
func NewUpdateComponentUsingPUTNotFound() *UpdateComponentUsingPUTNotFound {
	return &UpdateComponentUsingPUTNotFound{}
}

/*
UpdateComponentUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateComponentUsingPUTNotFound struct {
}

// IsSuccess returns true when this update component using p u t not found response has a 2xx status code
func (o *UpdateComponentUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update component using p u t not found response has a 3xx status code
func (o *UpdateComponentUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update component using p u t not found response has a 4xx status code
func (o *UpdateComponentUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update component using p u t not found response has a 5xx status code
func (o *UpdateComponentUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update component using p u t not found response a status code equal to that given
func (o *UpdateComponentUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update component using p u t not found response
func (o *UpdateComponentUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateComponentUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTNotFound", 404)
}

func (o *UpdateComponentUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/web-components/{webComponentId}][%d] updateComponentUsingPUTNotFound", 404)
}

func (o *UpdateComponentUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
