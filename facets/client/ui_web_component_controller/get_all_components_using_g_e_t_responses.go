// Code generated by go-swagger; DO NOT EDIT.

package ui_web_component_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllComponentsUsingGETReader is a Reader for the GetAllComponentsUsingGET structure.
type GetAllComponentsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllComponentsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllComponentsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllComponentsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllComponentsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllComponentsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/web-components] getAllComponentsUsingGET", response, response.Code())
	}
}

// NewGetAllComponentsUsingGETOK creates a GetAllComponentsUsingGETOK with default headers values
func NewGetAllComponentsUsingGETOK() *GetAllComponentsUsingGETOK {
	return &GetAllComponentsUsingGETOK{}
}

/*
GetAllComponentsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllComponentsUsingGETOK struct {
	Payload []*models.WebComponentDTO
}

// IsSuccess returns true when this get all components using g e t o k response has a 2xx status code
func (o *GetAllComponentsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all components using g e t o k response has a 3xx status code
func (o *GetAllComponentsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all components using g e t o k response has a 4xx status code
func (o *GetAllComponentsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all components using g e t o k response has a 5xx status code
func (o *GetAllComponentsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all components using g e t o k response a status code equal to that given
func (o *GetAllComponentsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all components using g e t o k response
func (o *GetAllComponentsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllComponentsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETOK %s", 200, payload)
}

func (o *GetAllComponentsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETOK %s", 200, payload)
}

func (o *GetAllComponentsUsingGETOK) GetPayload() []*models.WebComponentDTO {
	return o.Payload
}

func (o *GetAllComponentsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllComponentsUsingGETUnauthorized creates a GetAllComponentsUsingGETUnauthorized with default headers values
func NewGetAllComponentsUsingGETUnauthorized() *GetAllComponentsUsingGETUnauthorized {
	return &GetAllComponentsUsingGETUnauthorized{}
}

/*
GetAllComponentsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllComponentsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all components using g e t unauthorized response has a 2xx status code
func (o *GetAllComponentsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all components using g e t unauthorized response has a 3xx status code
func (o *GetAllComponentsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all components using g e t unauthorized response has a 4xx status code
func (o *GetAllComponentsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all components using g e t unauthorized response has a 5xx status code
func (o *GetAllComponentsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all components using g e t unauthorized response a status code equal to that given
func (o *GetAllComponentsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all components using g e t unauthorized response
func (o *GetAllComponentsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllComponentsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETUnauthorized", 401)
}

func (o *GetAllComponentsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETUnauthorized", 401)
}

func (o *GetAllComponentsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllComponentsUsingGETForbidden creates a GetAllComponentsUsingGETForbidden with default headers values
func NewGetAllComponentsUsingGETForbidden() *GetAllComponentsUsingGETForbidden {
	return &GetAllComponentsUsingGETForbidden{}
}

/*
GetAllComponentsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllComponentsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all components using g e t forbidden response has a 2xx status code
func (o *GetAllComponentsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all components using g e t forbidden response has a 3xx status code
func (o *GetAllComponentsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all components using g e t forbidden response has a 4xx status code
func (o *GetAllComponentsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all components using g e t forbidden response has a 5xx status code
func (o *GetAllComponentsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all components using g e t forbidden response a status code equal to that given
func (o *GetAllComponentsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all components using g e t forbidden response
func (o *GetAllComponentsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllComponentsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETForbidden", 403)
}

func (o *GetAllComponentsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETForbidden", 403)
}

func (o *GetAllComponentsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllComponentsUsingGETNotFound creates a GetAllComponentsUsingGETNotFound with default headers values
func NewGetAllComponentsUsingGETNotFound() *GetAllComponentsUsingGETNotFound {
	return &GetAllComponentsUsingGETNotFound{}
}

/*
GetAllComponentsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllComponentsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all components using g e t not found response has a 2xx status code
func (o *GetAllComponentsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all components using g e t not found response has a 3xx status code
func (o *GetAllComponentsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all components using g e t not found response has a 4xx status code
func (o *GetAllComponentsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all components using g e t not found response has a 5xx status code
func (o *GetAllComponentsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all components using g e t not found response a status code equal to that given
func (o *GetAllComponentsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all components using g e t not found response
func (o *GetAllComponentsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllComponentsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETNotFound", 404)
}

func (o *GetAllComponentsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/web-components][%d] getAllComponentsUsingGETNotFound", 404)
}

func (o *GetAllComponentsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
