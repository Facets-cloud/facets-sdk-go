// Code generated by go-swagger; DO NOT EDIT.

package ui_queued_release_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllQueuedReleasesReader is a Reader for the GetAllQueuedReleases structure.
type GetAllQueuedReleasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllQueuedReleasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllQueuedReleasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllQueuedReleasesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllQueuedReleasesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllQueuedReleasesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllQueuedReleasesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/] getAllQueuedReleases", response, response.Code())
	}
}

// NewGetAllQueuedReleasesOK creates a GetAllQueuedReleasesOK with default headers values
func NewGetAllQueuedReleasesOK() *GetAllQueuedReleasesOK {
	return &GetAllQueuedReleasesOK{}
}

/*
GetAllQueuedReleasesOK describes a response with status code 200, with default header values.

OK
*/
type GetAllQueuedReleasesOK struct {
	Payload []*models.QueuedRelease
}

// IsSuccess returns true when this get all queued releases o k response has a 2xx status code
func (o *GetAllQueuedReleasesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all queued releases o k response has a 3xx status code
func (o *GetAllQueuedReleasesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all queued releases o k response has a 4xx status code
func (o *GetAllQueuedReleasesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all queued releases o k response has a 5xx status code
func (o *GetAllQueuedReleasesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all queued releases o k response a status code equal to that given
func (o *GetAllQueuedReleasesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all queued releases o k response
func (o *GetAllQueuedReleasesOK) Code() int {
	return 200
}

func (o *GetAllQueuedReleasesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesOK %s", 200, payload)
}

func (o *GetAllQueuedReleasesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesOK %s", 200, payload)
}

func (o *GetAllQueuedReleasesOK) GetPayload() []*models.QueuedRelease {
	return o.Payload
}

func (o *GetAllQueuedReleasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllQueuedReleasesBadRequest creates a GetAllQueuedReleasesBadRequest with default headers values
func NewGetAllQueuedReleasesBadRequest() *GetAllQueuedReleasesBadRequest {
	return &GetAllQueuedReleasesBadRequest{}
}

/*
GetAllQueuedReleasesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllQueuedReleasesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all queued releases bad request response has a 2xx status code
func (o *GetAllQueuedReleasesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all queued releases bad request response has a 3xx status code
func (o *GetAllQueuedReleasesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all queued releases bad request response has a 4xx status code
func (o *GetAllQueuedReleasesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all queued releases bad request response has a 5xx status code
func (o *GetAllQueuedReleasesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all queued releases bad request response a status code equal to that given
func (o *GetAllQueuedReleasesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all queued releases bad request response
func (o *GetAllQueuedReleasesBadRequest) Code() int {
	return 400
}

func (o *GetAllQueuedReleasesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesBadRequest %s", 400, payload)
}

func (o *GetAllQueuedReleasesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesBadRequest %s", 400, payload)
}

func (o *GetAllQueuedReleasesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllQueuedReleasesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllQueuedReleasesNotFound creates a GetAllQueuedReleasesNotFound with default headers values
func NewGetAllQueuedReleasesNotFound() *GetAllQueuedReleasesNotFound {
	return &GetAllQueuedReleasesNotFound{}
}

/*
GetAllQueuedReleasesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllQueuedReleasesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all queued releases not found response has a 2xx status code
func (o *GetAllQueuedReleasesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all queued releases not found response has a 3xx status code
func (o *GetAllQueuedReleasesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all queued releases not found response has a 4xx status code
func (o *GetAllQueuedReleasesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all queued releases not found response has a 5xx status code
func (o *GetAllQueuedReleasesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all queued releases not found response a status code equal to that given
func (o *GetAllQueuedReleasesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all queued releases not found response
func (o *GetAllQueuedReleasesNotFound) Code() int {
	return 404
}

func (o *GetAllQueuedReleasesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesNotFound %s", 404, payload)
}

func (o *GetAllQueuedReleasesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesNotFound %s", 404, payload)
}

func (o *GetAllQueuedReleasesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllQueuedReleasesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllQueuedReleasesMethodNotAllowed creates a GetAllQueuedReleasesMethodNotAllowed with default headers values
func NewGetAllQueuedReleasesMethodNotAllowed() *GetAllQueuedReleasesMethodNotAllowed {
	return &GetAllQueuedReleasesMethodNotAllowed{}
}

/*
GetAllQueuedReleasesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllQueuedReleasesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all queued releases method not allowed response has a 2xx status code
func (o *GetAllQueuedReleasesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all queued releases method not allowed response has a 3xx status code
func (o *GetAllQueuedReleasesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all queued releases method not allowed response has a 4xx status code
func (o *GetAllQueuedReleasesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all queued releases method not allowed response has a 5xx status code
func (o *GetAllQueuedReleasesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all queued releases method not allowed response a status code equal to that given
func (o *GetAllQueuedReleasesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all queued releases method not allowed response
func (o *GetAllQueuedReleasesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllQueuedReleasesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllQueuedReleasesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllQueuedReleasesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllQueuedReleasesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllQueuedReleasesInternalServerError creates a GetAllQueuedReleasesInternalServerError with default headers values
func NewGetAllQueuedReleasesInternalServerError() *GetAllQueuedReleasesInternalServerError {
	return &GetAllQueuedReleasesInternalServerError{}
}

/*
GetAllQueuedReleasesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllQueuedReleasesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all queued releases internal server error response has a 2xx status code
func (o *GetAllQueuedReleasesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all queued releases internal server error response has a 3xx status code
func (o *GetAllQueuedReleasesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all queued releases internal server error response has a 4xx status code
func (o *GetAllQueuedReleasesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all queued releases internal server error response has a 5xx status code
func (o *GetAllQueuedReleasesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all queued releases internal server error response a status code equal to that given
func (o *GetAllQueuedReleasesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all queued releases internal server error response
func (o *GetAllQueuedReleasesInternalServerError) Code() int {
	return 500
}

func (o *GetAllQueuedReleasesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesInternalServerError %s", 500, payload)
}

func (o *GetAllQueuedReleasesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/queued-releases/][%d] getAllQueuedReleasesInternalServerError %s", 500, payload)
}

func (o *GetAllQueuedReleasesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllQueuedReleasesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
