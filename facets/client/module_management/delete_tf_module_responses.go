// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteTfModuleReader is a Reader for the DeleteTfModule structure.
type DeleteTfModuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTfModuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTfModuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTfModuleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTfModuleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteTfModuleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTfModuleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/modules/{id}] deleteTfModule", response, response.Code())
	}
}

// NewDeleteTfModuleOK creates a DeleteTfModuleOK with default headers values
func NewDeleteTfModuleOK() *DeleteTfModuleOK {
	return &DeleteTfModuleOK{}
}

/*
DeleteTfModuleOK describes a response with status code 200, with default header values.

Operation successful
*/
type DeleteTfModuleOK struct {
	Payload *models.TFModule
}

// IsSuccess returns true when this delete tf module o k response has a 2xx status code
func (o *DeleteTfModuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete tf module o k response has a 3xx status code
func (o *DeleteTfModuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf module o k response has a 4xx status code
func (o *DeleteTfModuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tf module o k response has a 5xx status code
func (o *DeleteTfModuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf module o k response a status code equal to that given
func (o *DeleteTfModuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete tf module o k response
func (o *DeleteTfModuleOK) Code() int {
	return 200
}

func (o *DeleteTfModuleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleOK %s", 200, payload)
}

func (o *DeleteTfModuleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleOK %s", 200, payload)
}

func (o *DeleteTfModuleOK) GetPayload() *models.TFModule {
	return o.Payload
}

func (o *DeleteTfModuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TFModule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfModuleBadRequest creates a DeleteTfModuleBadRequest with default headers values
func NewDeleteTfModuleBadRequest() *DeleteTfModuleBadRequest {
	return &DeleteTfModuleBadRequest{}
}

/*
DeleteTfModuleBadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type DeleteTfModuleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf module bad request response has a 2xx status code
func (o *DeleteTfModuleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf module bad request response has a 3xx status code
func (o *DeleteTfModuleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf module bad request response has a 4xx status code
func (o *DeleteTfModuleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf module bad request response has a 5xx status code
func (o *DeleteTfModuleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf module bad request response a status code equal to that given
func (o *DeleteTfModuleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete tf module bad request response
func (o *DeleteTfModuleBadRequest) Code() int {
	return 400
}

func (o *DeleteTfModuleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleBadRequest %s", 400, payload)
}

func (o *DeleteTfModuleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleBadRequest %s", 400, payload)
}

func (o *DeleteTfModuleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfModuleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfModuleNotFound creates a DeleteTfModuleNotFound with default headers values
func NewDeleteTfModuleNotFound() *DeleteTfModuleNotFound {
	return &DeleteTfModuleNotFound{}
}

/*
DeleteTfModuleNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type DeleteTfModuleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf module not found response has a 2xx status code
func (o *DeleteTfModuleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf module not found response has a 3xx status code
func (o *DeleteTfModuleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf module not found response has a 4xx status code
func (o *DeleteTfModuleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf module not found response has a 5xx status code
func (o *DeleteTfModuleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf module not found response a status code equal to that given
func (o *DeleteTfModuleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete tf module not found response
func (o *DeleteTfModuleNotFound) Code() int {
	return 404
}

func (o *DeleteTfModuleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleNotFound %s", 404, payload)
}

func (o *DeleteTfModuleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleNotFound %s", 404, payload)
}

func (o *DeleteTfModuleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfModuleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfModuleMethodNotAllowed creates a DeleteTfModuleMethodNotAllowed with default headers values
func NewDeleteTfModuleMethodNotAllowed() *DeleteTfModuleMethodNotAllowed {
	return &DeleteTfModuleMethodNotAllowed{}
}

/*
DeleteTfModuleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteTfModuleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf module method not allowed response has a 2xx status code
func (o *DeleteTfModuleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf module method not allowed response has a 3xx status code
func (o *DeleteTfModuleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf module method not allowed response has a 4xx status code
func (o *DeleteTfModuleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf module method not allowed response has a 5xx status code
func (o *DeleteTfModuleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf module method not allowed response a status code equal to that given
func (o *DeleteTfModuleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete tf module method not allowed response
func (o *DeleteTfModuleMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteTfModuleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteTfModuleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleMethodNotAllowed %s", 405, payload)
}

func (o *DeleteTfModuleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfModuleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfModuleInternalServerError creates a DeleteTfModuleInternalServerError with default headers values
func NewDeleteTfModuleInternalServerError() *DeleteTfModuleInternalServerError {
	return &DeleteTfModuleInternalServerError{}
}

/*
DeleteTfModuleInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type DeleteTfModuleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf module internal server error response has a 2xx status code
func (o *DeleteTfModuleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf module internal server error response has a 3xx status code
func (o *DeleteTfModuleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf module internal server error response has a 4xx status code
func (o *DeleteTfModuleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tf module internal server error response has a 5xx status code
func (o *DeleteTfModuleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete tf module internal server error response a status code equal to that given
func (o *DeleteTfModuleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete tf module internal server error response
func (o *DeleteTfModuleInternalServerError) Code() int {
	return 500
}

func (o *DeleteTfModuleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleInternalServerError %s", 500, payload)
}

func (o *DeleteTfModuleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/modules/{id}][%d] deleteTfModuleInternalServerError %s", 500, payload)
}

func (o *DeleteTfModuleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfModuleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
