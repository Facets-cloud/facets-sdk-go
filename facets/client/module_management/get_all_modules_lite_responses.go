// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllModulesLiteReader is a Reader for the GetAllModulesLite structure.
type GetAllModulesLiteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllModulesLiteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllModulesLiteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllModulesLiteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllModulesLiteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllModulesLiteMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllModulesLiteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/modules/modules-lite] getAllModulesLite", response, response.Code())
	}
}

// NewGetAllModulesLiteOK creates a GetAllModulesLiteOK with default headers values
func NewGetAllModulesLiteOK() *GetAllModulesLiteOK {
	return &GetAllModulesLiteOK{}
}

/*
GetAllModulesLiteOK describes a response with status code 200, with default header values.

OK
*/
type GetAllModulesLiteOK struct {
	Payload []*models.TFModuleLiteDTO
}

// IsSuccess returns true when this get all modules lite o k response has a 2xx status code
func (o *GetAllModulesLiteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all modules lite o k response has a 3xx status code
func (o *GetAllModulesLiteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite o k response has a 4xx status code
func (o *GetAllModulesLiteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all modules lite o k response has a 5xx status code
func (o *GetAllModulesLiteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite o k response a status code equal to that given
func (o *GetAllModulesLiteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all modules lite o k response
func (o *GetAllModulesLiteOK) Code() int {
	return 200
}

func (o *GetAllModulesLiteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteOK %s", 200, payload)
}

func (o *GetAllModulesLiteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteOK %s", 200, payload)
}

func (o *GetAllModulesLiteOK) GetPayload() []*models.TFModuleLiteDTO {
	return o.Payload
}

func (o *GetAllModulesLiteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllModulesLiteBadRequest creates a GetAllModulesLiteBadRequest with default headers values
func NewGetAllModulesLiteBadRequest() *GetAllModulesLiteBadRequest {
	return &GetAllModulesLiteBadRequest{}
}

/*
GetAllModulesLiteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllModulesLiteBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all modules lite bad request response has a 2xx status code
func (o *GetAllModulesLiteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all modules lite bad request response has a 3xx status code
func (o *GetAllModulesLiteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite bad request response has a 4xx status code
func (o *GetAllModulesLiteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all modules lite bad request response has a 5xx status code
func (o *GetAllModulesLiteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite bad request response a status code equal to that given
func (o *GetAllModulesLiteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all modules lite bad request response
func (o *GetAllModulesLiteBadRequest) Code() int {
	return 400
}

func (o *GetAllModulesLiteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteBadRequest %s", 400, payload)
}

func (o *GetAllModulesLiteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteBadRequest %s", 400, payload)
}

func (o *GetAllModulesLiteBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllModulesLiteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllModulesLiteNotFound creates a GetAllModulesLiteNotFound with default headers values
func NewGetAllModulesLiteNotFound() *GetAllModulesLiteNotFound {
	return &GetAllModulesLiteNotFound{}
}

/*
GetAllModulesLiteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllModulesLiteNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all modules lite not found response has a 2xx status code
func (o *GetAllModulesLiteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all modules lite not found response has a 3xx status code
func (o *GetAllModulesLiteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite not found response has a 4xx status code
func (o *GetAllModulesLiteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all modules lite not found response has a 5xx status code
func (o *GetAllModulesLiteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite not found response a status code equal to that given
func (o *GetAllModulesLiteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all modules lite not found response
func (o *GetAllModulesLiteNotFound) Code() int {
	return 404
}

func (o *GetAllModulesLiteNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteNotFound %s", 404, payload)
}

func (o *GetAllModulesLiteNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteNotFound %s", 404, payload)
}

func (o *GetAllModulesLiteNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllModulesLiteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllModulesLiteMethodNotAllowed creates a GetAllModulesLiteMethodNotAllowed with default headers values
func NewGetAllModulesLiteMethodNotAllowed() *GetAllModulesLiteMethodNotAllowed {
	return &GetAllModulesLiteMethodNotAllowed{}
}

/*
GetAllModulesLiteMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllModulesLiteMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all modules lite method not allowed response has a 2xx status code
func (o *GetAllModulesLiteMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all modules lite method not allowed response has a 3xx status code
func (o *GetAllModulesLiteMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite method not allowed response has a 4xx status code
func (o *GetAllModulesLiteMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all modules lite method not allowed response has a 5xx status code
func (o *GetAllModulesLiteMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all modules lite method not allowed response a status code equal to that given
func (o *GetAllModulesLiteMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all modules lite method not allowed response
func (o *GetAllModulesLiteMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllModulesLiteMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteMethodNotAllowed %s", 405, payload)
}

func (o *GetAllModulesLiteMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteMethodNotAllowed %s", 405, payload)
}

func (o *GetAllModulesLiteMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllModulesLiteMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllModulesLiteInternalServerError creates a GetAllModulesLiteInternalServerError with default headers values
func NewGetAllModulesLiteInternalServerError() *GetAllModulesLiteInternalServerError {
	return &GetAllModulesLiteInternalServerError{}
}

/*
GetAllModulesLiteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllModulesLiteInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all modules lite internal server error response has a 2xx status code
func (o *GetAllModulesLiteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all modules lite internal server error response has a 3xx status code
func (o *GetAllModulesLiteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all modules lite internal server error response has a 4xx status code
func (o *GetAllModulesLiteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all modules lite internal server error response has a 5xx status code
func (o *GetAllModulesLiteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all modules lite internal server error response a status code equal to that given
func (o *GetAllModulesLiteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all modules lite internal server error response
func (o *GetAllModulesLiteInternalServerError) Code() int {
	return 500
}

func (o *GetAllModulesLiteInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteInternalServerError %s", 500, payload)
}

func (o *GetAllModulesLiteInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/modules-lite][%d] getAllModulesLiteInternalServerError %s", 500, payload)
}

func (o *GetAllModulesLiteInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllModulesLiteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
