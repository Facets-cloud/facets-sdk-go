// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAllModulesLiteParams creates a new GetAllModulesLiteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAllModulesLiteParams() *GetAllModulesLiteParams {
	return &GetAllModulesLiteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAllModulesLiteParamsWithTimeout creates a new GetAllModulesLiteParams object
// with the ability to set a timeout on a request.
func NewGetAllModulesLiteParamsWithTimeout(timeout time.Duration) *GetAllModulesLiteParams {
	return &GetAllModulesLiteParams{
		timeout: timeout,
	}
}

// NewGetAllModulesLiteParamsWithContext creates a new GetAllModulesLiteParams object
// with the ability to set a context for a request.
func NewGetAllModulesLiteParamsWithContext(ctx context.Context) *GetAllModulesLiteParams {
	return &GetAllModulesLiteParams{
		Context: ctx,
	}
}

// NewGetAllModulesLiteParamsWithHTTPClient creates a new GetAllModulesLiteParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAllModulesLiteParamsWithHTTPClient(client *http.Client) *GetAllModulesLiteParams {
	return &GetAllModulesLiteParams{
		HTTPClient: client,
	}
}

/*
GetAllModulesLiteParams contains all the parameters to send to the API endpoint

	for the get all modules lite operation.

	Typically these are written to a http.Request.
*/
type GetAllModulesLiteParams struct {

	// AllowPreviewModules.
	AllowPreviewModules *string

	// Clouds.
	Clouds *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get all modules lite params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllModulesLiteParams) WithDefaults() *GetAllModulesLiteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get all modules lite params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAllModulesLiteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get all modules lite params
func (o *GetAllModulesLiteParams) WithTimeout(timeout time.Duration) *GetAllModulesLiteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all modules lite params
func (o *GetAllModulesLiteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all modules lite params
func (o *GetAllModulesLiteParams) WithContext(ctx context.Context) *GetAllModulesLiteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all modules lite params
func (o *GetAllModulesLiteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all modules lite params
func (o *GetAllModulesLiteParams) WithHTTPClient(client *http.Client) *GetAllModulesLiteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all modules lite params
func (o *GetAllModulesLiteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllowPreviewModules adds the allowPreviewModules to the get all modules lite params
func (o *GetAllModulesLiteParams) WithAllowPreviewModules(allowPreviewModules *string) *GetAllModulesLiteParams {
	o.SetAllowPreviewModules(allowPreviewModules)
	return o
}

// SetAllowPreviewModules adds the allowPreviewModules to the get all modules lite params
func (o *GetAllModulesLiteParams) SetAllowPreviewModules(allowPreviewModules *string) {
	o.AllowPreviewModules = allowPreviewModules
}

// WithClouds adds the clouds to the get all modules lite params
func (o *GetAllModulesLiteParams) WithClouds(clouds *string) *GetAllModulesLiteParams {
	o.SetClouds(clouds)
	return o
}

// SetClouds adds the clouds to the get all modules lite params
func (o *GetAllModulesLiteParams) SetClouds(clouds *string) {
	o.Clouds = clouds
}

// WriteToRequest writes these params to a swagger request
func (o *GetAllModulesLiteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllowPreviewModules != nil {

		// query param allowPreviewModules
		var qrAllowPreviewModules string

		if o.AllowPreviewModules != nil {
			qrAllowPreviewModules = *o.AllowPreviewModules
		}
		qAllowPreviewModules := qrAllowPreviewModules
		if qAllowPreviewModules != "" {

			if err := r.SetQueryParam("allowPreviewModules", qAllowPreviewModules); err != nil {
				return err
			}
		}
	}

	if o.Clouds != nil {

		// query param clouds
		var qrClouds string

		if o.Clouds != nil {
			qrClouds = *o.Clouds
		}
		qClouds := qrClouds
		if qClouds != "" {

			if err := r.SetQueryParam("clouds", qClouds); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
