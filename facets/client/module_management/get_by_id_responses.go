// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetByIDReader is a Reader for the GetByID structure.
type GetByIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetByIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetByIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetByIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetByIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetByIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetByIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/modules/{id}] getById", response, response.Code())
	}
}

// NewGetByIDOK creates a GetByIDOK with default headers values
func NewGetByIDOK() *GetByIDOK {
	return &GetByIDOK{}
}

/*
GetByIDOK describes a response with status code 200, with default header values.

Operation successful
*/
type GetByIDOK struct {
	Payload *models.TFModuleResponseDTO
}

// IsSuccess returns true when this get by Id o k response has a 2xx status code
func (o *GetByIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get by Id o k response has a 3xx status code
func (o *GetByIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by Id o k response has a 4xx status code
func (o *GetByIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get by Id o k response has a 5xx status code
func (o *GetByIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get by Id o k response a status code equal to that given
func (o *GetByIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get by Id o k response
func (o *GetByIDOK) Code() int {
	return 200
}

func (o *GetByIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdOK %s", 200, payload)
}

func (o *GetByIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdOK %s", 200, payload)
}

func (o *GetByIDOK) GetPayload() *models.TFModuleResponseDTO {
	return o.Payload
}

func (o *GetByIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TFModuleResponseDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByIDBadRequest creates a GetByIDBadRequest with default headers values
func NewGetByIDBadRequest() *GetByIDBadRequest {
	return &GetByIDBadRequest{}
}

/*
GetByIDBadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type GetByIDBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by Id bad request response has a 2xx status code
func (o *GetByIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by Id bad request response has a 3xx status code
func (o *GetByIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by Id bad request response has a 4xx status code
func (o *GetByIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by Id bad request response has a 5xx status code
func (o *GetByIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get by Id bad request response a status code equal to that given
func (o *GetByIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get by Id bad request response
func (o *GetByIDBadRequest) Code() int {
	return 400
}

func (o *GetByIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdBadRequest %s", 400, payload)
}

func (o *GetByIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdBadRequest %s", 400, payload)
}

func (o *GetByIDBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByIDNotFound creates a GetByIDNotFound with default headers values
func NewGetByIDNotFound() *GetByIDNotFound {
	return &GetByIDNotFound{}
}

/*
GetByIDNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetByIDNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by Id not found response has a 2xx status code
func (o *GetByIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by Id not found response has a 3xx status code
func (o *GetByIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by Id not found response has a 4xx status code
func (o *GetByIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by Id not found response has a 5xx status code
func (o *GetByIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get by Id not found response a status code equal to that given
func (o *GetByIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get by Id not found response
func (o *GetByIDNotFound) Code() int {
	return 404
}

func (o *GetByIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdNotFound %s", 404, payload)
}

func (o *GetByIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdNotFound %s", 404, payload)
}

func (o *GetByIDNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByIDMethodNotAllowed creates a GetByIDMethodNotAllowed with default headers values
func NewGetByIDMethodNotAllowed() *GetByIDMethodNotAllowed {
	return &GetByIDMethodNotAllowed{}
}

/*
GetByIDMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetByIDMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by Id method not allowed response has a 2xx status code
func (o *GetByIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by Id method not allowed response has a 3xx status code
func (o *GetByIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by Id method not allowed response has a 4xx status code
func (o *GetByIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get by Id method not allowed response has a 5xx status code
func (o *GetByIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get by Id method not allowed response a status code equal to that given
func (o *GetByIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get by Id method not allowed response
func (o *GetByIDMethodNotAllowed) Code() int {
	return 405
}

func (o *GetByIDMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdMethodNotAllowed %s", 405, payload)
}

func (o *GetByIDMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdMethodNotAllowed %s", 405, payload)
}

func (o *GetByIDMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetByIDInternalServerError creates a GetByIDInternalServerError with default headers values
func NewGetByIDInternalServerError() *GetByIDInternalServerError {
	return &GetByIDInternalServerError{}
}

/*
GetByIDInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetByIDInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get by Id internal server error response has a 2xx status code
func (o *GetByIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get by Id internal server error response has a 3xx status code
func (o *GetByIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get by Id internal server error response has a 4xx status code
func (o *GetByIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get by Id internal server error response has a 5xx status code
func (o *GetByIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get by Id internal server error response a status code equal to that given
func (o *GetByIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get by Id internal server error response
func (o *GetByIDInternalServerError) Code() int {
	return 500
}

func (o *GetByIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdInternalServerError %s", 500, payload)
}

func (o *GetByIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}][%d] getByIdInternalServerError %s", 500, payload)
}

func (o *GetByIDInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetByIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
