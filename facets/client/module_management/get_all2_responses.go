// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAll2Reader is a Reader for the GetAll2 structure.
type GetAll2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAll2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAll2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAll2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAll2NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAll2MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAll2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/modules/all] getAll_2", response, response.Code())
	}
}

// NewGetAll2OK creates a GetAll2OK with default headers values
func NewGetAll2OK() *GetAll2OK {
	return &GetAll2OK{}
}

/*
GetAll2OK describes a response with status code 200, with default header values.

Operation successful
*/
type GetAll2OK struct {
	Payload []*models.TFModule
}

// IsSuccess returns true when this get all2 o k response has a 2xx status code
func (o *GetAll2OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all2 o k response has a 3xx status code
func (o *GetAll2OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all2 o k response has a 4xx status code
func (o *GetAll2OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all2 o k response has a 5xx status code
func (o *GetAll2OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all2 o k response a status code equal to that given
func (o *GetAll2OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all2 o k response
func (o *GetAll2OK) Code() int {
	return 200
}

func (o *GetAll2OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2OK %s", 200, payload)
}

func (o *GetAll2OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2OK %s", 200, payload)
}

func (o *GetAll2OK) GetPayload() []*models.TFModule {
	return o.Payload
}

func (o *GetAll2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll2BadRequest creates a GetAll2BadRequest with default headers values
func NewGetAll2BadRequest() *GetAll2BadRequest {
	return &GetAll2BadRequest{}
}

/*
GetAll2BadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type GetAll2BadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all2 bad request response has a 2xx status code
func (o *GetAll2BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all2 bad request response has a 3xx status code
func (o *GetAll2BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all2 bad request response has a 4xx status code
func (o *GetAll2BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all2 bad request response has a 5xx status code
func (o *GetAll2BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all2 bad request response a status code equal to that given
func (o *GetAll2BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all2 bad request response
func (o *GetAll2BadRequest) Code() int {
	return 400
}

func (o *GetAll2BadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2BadRequest %s", 400, payload)
}

func (o *GetAll2BadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2BadRequest %s", 400, payload)
}

func (o *GetAll2BadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll2NotFound creates a GetAll2NotFound with default headers values
func NewGetAll2NotFound() *GetAll2NotFound {
	return &GetAll2NotFound{}
}

/*
GetAll2NotFound describes a response with status code 404, with default header values.

Entity not found
*/
type GetAll2NotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all2 not found response has a 2xx status code
func (o *GetAll2NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all2 not found response has a 3xx status code
func (o *GetAll2NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all2 not found response has a 4xx status code
func (o *GetAll2NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all2 not found response has a 5xx status code
func (o *GetAll2NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all2 not found response a status code equal to that given
func (o *GetAll2NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all2 not found response
func (o *GetAll2NotFound) Code() int {
	return 404
}

func (o *GetAll2NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2NotFound %s", 404, payload)
}

func (o *GetAll2NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2NotFound %s", 404, payload)
}

func (o *GetAll2NotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll2NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll2MethodNotAllowed creates a GetAll2MethodNotAllowed with default headers values
func NewGetAll2MethodNotAllowed() *GetAll2MethodNotAllowed {
	return &GetAll2MethodNotAllowed{}
}

/*
GetAll2MethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAll2MethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all2 method not allowed response has a 2xx status code
func (o *GetAll2MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all2 method not allowed response has a 3xx status code
func (o *GetAll2MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all2 method not allowed response has a 4xx status code
func (o *GetAll2MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all2 method not allowed response has a 5xx status code
func (o *GetAll2MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all2 method not allowed response a status code equal to that given
func (o *GetAll2MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all2 method not allowed response
func (o *GetAll2MethodNotAllowed) Code() int {
	return 405
}

func (o *GetAll2MethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2MethodNotAllowed %s", 405, payload)
}

func (o *GetAll2MethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2MethodNotAllowed %s", 405, payload)
}

func (o *GetAll2MethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll2MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll2InternalServerError creates a GetAll2InternalServerError with default headers values
func NewGetAll2InternalServerError() *GetAll2InternalServerError {
	return &GetAll2InternalServerError{}
}

/*
GetAll2InternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetAll2InternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all2 internal server error response has a 2xx status code
func (o *GetAll2InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all2 internal server error response has a 3xx status code
func (o *GetAll2InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all2 internal server error response has a 4xx status code
func (o *GetAll2InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all2 internal server error response has a 5xx status code
func (o *GetAll2InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all2 internal server error response a status code equal to that given
func (o *GetAll2InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all2 internal server error response
func (o *GetAll2InternalServerError) Code() int {
	return 500
}

func (o *GetAll2InternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2InternalServerError %s", 500, payload)
}

func (o *GetAll2InternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/all][%d] getAll2InternalServerError %s", 500, payload)
}

func (o *GetAll2InternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
