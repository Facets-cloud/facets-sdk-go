// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetModuleUsagesReader is a Reader for the GetModuleUsages structure.
type GetModuleUsagesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetModuleUsagesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetModuleUsagesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetModuleUsagesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetModuleUsagesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetModuleUsagesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetModuleUsagesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/modules/{id}/usages] getModuleUsages", response, response.Code())
	}
}

// NewGetModuleUsagesOK creates a GetModuleUsagesOK with default headers values
func NewGetModuleUsagesOK() *GetModuleUsagesOK {
	return &GetModuleUsagesOK{}
}

/*
GetModuleUsagesOK describes a response with status code 200, with default header values.

Operation successful
*/
type GetModuleUsagesOK struct {
	Payload []*models.ModuleUsageDTO
}

// IsSuccess returns true when this get module usages o k response has a 2xx status code
func (o *GetModuleUsagesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get module usages o k response has a 3xx status code
func (o *GetModuleUsagesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module usages o k response has a 4xx status code
func (o *GetModuleUsagesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get module usages o k response has a 5xx status code
func (o *GetModuleUsagesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get module usages o k response a status code equal to that given
func (o *GetModuleUsagesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get module usages o k response
func (o *GetModuleUsagesOK) Code() int {
	return 200
}

func (o *GetModuleUsagesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesOK %s", 200, payload)
}

func (o *GetModuleUsagesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesOK %s", 200, payload)
}

func (o *GetModuleUsagesOK) GetPayload() []*models.ModuleUsageDTO {
	return o.Payload
}

func (o *GetModuleUsagesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleUsagesBadRequest creates a GetModuleUsagesBadRequest with default headers values
func NewGetModuleUsagesBadRequest() *GetModuleUsagesBadRequest {
	return &GetModuleUsagesBadRequest{}
}

/*
GetModuleUsagesBadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type GetModuleUsagesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module usages bad request response has a 2xx status code
func (o *GetModuleUsagesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module usages bad request response has a 3xx status code
func (o *GetModuleUsagesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module usages bad request response has a 4xx status code
func (o *GetModuleUsagesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get module usages bad request response has a 5xx status code
func (o *GetModuleUsagesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get module usages bad request response a status code equal to that given
func (o *GetModuleUsagesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get module usages bad request response
func (o *GetModuleUsagesBadRequest) Code() int {
	return 400
}

func (o *GetModuleUsagesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesBadRequest %s", 400, payload)
}

func (o *GetModuleUsagesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesBadRequest %s", 400, payload)
}

func (o *GetModuleUsagesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleUsagesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleUsagesNotFound creates a GetModuleUsagesNotFound with default headers values
func NewGetModuleUsagesNotFound() *GetModuleUsagesNotFound {
	return &GetModuleUsagesNotFound{}
}

/*
GetModuleUsagesNotFound describes a response with status code 404, with default header values.

Module not found
*/
type GetModuleUsagesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module usages not found response has a 2xx status code
func (o *GetModuleUsagesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module usages not found response has a 3xx status code
func (o *GetModuleUsagesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module usages not found response has a 4xx status code
func (o *GetModuleUsagesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get module usages not found response has a 5xx status code
func (o *GetModuleUsagesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get module usages not found response a status code equal to that given
func (o *GetModuleUsagesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get module usages not found response
func (o *GetModuleUsagesNotFound) Code() int {
	return 404
}

func (o *GetModuleUsagesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesNotFound %s", 404, payload)
}

func (o *GetModuleUsagesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesNotFound %s", 404, payload)
}

func (o *GetModuleUsagesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleUsagesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleUsagesMethodNotAllowed creates a GetModuleUsagesMethodNotAllowed with default headers values
func NewGetModuleUsagesMethodNotAllowed() *GetModuleUsagesMethodNotAllowed {
	return &GetModuleUsagesMethodNotAllowed{}
}

/*
GetModuleUsagesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetModuleUsagesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module usages method not allowed response has a 2xx status code
func (o *GetModuleUsagesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module usages method not allowed response has a 3xx status code
func (o *GetModuleUsagesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module usages method not allowed response has a 4xx status code
func (o *GetModuleUsagesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get module usages method not allowed response has a 5xx status code
func (o *GetModuleUsagesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get module usages method not allowed response a status code equal to that given
func (o *GetModuleUsagesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get module usages method not allowed response
func (o *GetModuleUsagesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetModuleUsagesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesMethodNotAllowed %s", 405, payload)
}

func (o *GetModuleUsagesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesMethodNotAllowed %s", 405, payload)
}

func (o *GetModuleUsagesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleUsagesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetModuleUsagesInternalServerError creates a GetModuleUsagesInternalServerError with default headers values
func NewGetModuleUsagesInternalServerError() *GetModuleUsagesInternalServerError {
	return &GetModuleUsagesInternalServerError{}
}

/*
GetModuleUsagesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type GetModuleUsagesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get module usages internal server error response has a 2xx status code
func (o *GetModuleUsagesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get module usages internal server error response has a 3xx status code
func (o *GetModuleUsagesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get module usages internal server error response has a 4xx status code
func (o *GetModuleUsagesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get module usages internal server error response has a 5xx status code
func (o *GetModuleUsagesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get module usages internal server error response a status code equal to that given
func (o *GetModuleUsagesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get module usages internal server error response
func (o *GetModuleUsagesInternalServerError) Code() int {
	return 500
}

func (o *GetModuleUsagesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesInternalServerError %s", 500, payload)
}

func (o *GetModuleUsagesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/modules/{id}/usages][%d] getModuleUsagesInternalServerError %s", 500, payload)
}

func (o *GetModuleUsagesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetModuleUsagesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
