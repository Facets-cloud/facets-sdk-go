// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// BootstrapModulesReader is a Reader for the BootstrapModules structure.
type BootstrapModulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BootstrapModulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBootstrapModulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBootstrapModulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewBootstrapModulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewBootstrapModulesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBootstrapModulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/modules/bootstrap] bootstrapModules", response, response.Code())
	}
}

// NewBootstrapModulesOK creates a BootstrapModulesOK with default headers values
func NewBootstrapModulesOK() *BootstrapModulesOK {
	return &BootstrapModulesOK{}
}

/*
BootstrapModulesOK describes a response with status code 200, with default header values.

Operation successful
*/
type BootstrapModulesOK struct {
	Payload map[string][]string
}

// IsSuccess returns true when this bootstrap modules o k response has a 2xx status code
func (o *BootstrapModulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this bootstrap modules o k response has a 3xx status code
func (o *BootstrapModulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules o k response has a 4xx status code
func (o *BootstrapModulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this bootstrap modules o k response has a 5xx status code
func (o *BootstrapModulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules o k response a status code equal to that given
func (o *BootstrapModulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the bootstrap modules o k response
func (o *BootstrapModulesOK) Code() int {
	return 200
}

func (o *BootstrapModulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesOK %s", 200, payload)
}

func (o *BootstrapModulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesOK %s", 200, payload)
}

func (o *BootstrapModulesOK) GetPayload() map[string][]string {
	return o.Payload
}

func (o *BootstrapModulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapModulesBadRequest creates a BootstrapModulesBadRequest with default headers values
func NewBootstrapModulesBadRequest() *BootstrapModulesBadRequest {
	return &BootstrapModulesBadRequest{}
}

/*
BootstrapModulesBadRequest describes a response with status code 400, with default header values.

Invalid input parameters
*/
type BootstrapModulesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bootstrap modules bad request response has a 2xx status code
func (o *BootstrapModulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules bad request response has a 3xx status code
func (o *BootstrapModulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules bad request response has a 4xx status code
func (o *BootstrapModulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this bootstrap modules bad request response has a 5xx status code
func (o *BootstrapModulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules bad request response a status code equal to that given
func (o *BootstrapModulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the bootstrap modules bad request response
func (o *BootstrapModulesBadRequest) Code() int {
	return 400
}

func (o *BootstrapModulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesBadRequest %s", 400, payload)
}

func (o *BootstrapModulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesBadRequest %s", 400, payload)
}

func (o *BootstrapModulesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BootstrapModulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapModulesNotFound creates a BootstrapModulesNotFound with default headers values
func NewBootstrapModulesNotFound() *BootstrapModulesNotFound {
	return &BootstrapModulesNotFound{}
}

/*
BootstrapModulesNotFound describes a response with status code 404, with default header values.

Entity not found
*/
type BootstrapModulesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bootstrap modules not found response has a 2xx status code
func (o *BootstrapModulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules not found response has a 3xx status code
func (o *BootstrapModulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules not found response has a 4xx status code
func (o *BootstrapModulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this bootstrap modules not found response has a 5xx status code
func (o *BootstrapModulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules not found response a status code equal to that given
func (o *BootstrapModulesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the bootstrap modules not found response
func (o *BootstrapModulesNotFound) Code() int {
	return 404
}

func (o *BootstrapModulesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesNotFound %s", 404, payload)
}

func (o *BootstrapModulesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesNotFound %s", 404, payload)
}

func (o *BootstrapModulesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BootstrapModulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapModulesMethodNotAllowed creates a BootstrapModulesMethodNotAllowed with default headers values
func NewBootstrapModulesMethodNotAllowed() *BootstrapModulesMethodNotAllowed {
	return &BootstrapModulesMethodNotAllowed{}
}

/*
BootstrapModulesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type BootstrapModulesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bootstrap modules method not allowed response has a 2xx status code
func (o *BootstrapModulesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules method not allowed response has a 3xx status code
func (o *BootstrapModulesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules method not allowed response has a 4xx status code
func (o *BootstrapModulesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this bootstrap modules method not allowed response has a 5xx status code
func (o *BootstrapModulesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this bootstrap modules method not allowed response a status code equal to that given
func (o *BootstrapModulesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the bootstrap modules method not allowed response
func (o *BootstrapModulesMethodNotAllowed) Code() int {
	return 405
}

func (o *BootstrapModulesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesMethodNotAllowed %s", 405, payload)
}

func (o *BootstrapModulesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesMethodNotAllowed %s", 405, payload)
}

func (o *BootstrapModulesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BootstrapModulesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBootstrapModulesInternalServerError creates a BootstrapModulesInternalServerError with default headers values
func NewBootstrapModulesInternalServerError() *BootstrapModulesInternalServerError {
	return &BootstrapModulesInternalServerError{}
}

/*
BootstrapModulesInternalServerError describes a response with status code 500, with default header values.

Internal server error
*/
type BootstrapModulesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this bootstrap modules internal server error response has a 2xx status code
func (o *BootstrapModulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this bootstrap modules internal server error response has a 3xx status code
func (o *BootstrapModulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this bootstrap modules internal server error response has a 4xx status code
func (o *BootstrapModulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this bootstrap modules internal server error response has a 5xx status code
func (o *BootstrapModulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this bootstrap modules internal server error response a status code equal to that given
func (o *BootstrapModulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the bootstrap modules internal server error response
func (o *BootstrapModulesInternalServerError) Code() int {
	return 500
}

func (o *BootstrapModulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesInternalServerError %s", 500, payload)
}

func (o *BootstrapModulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/modules/bootstrap][%d] bootstrapModulesInternalServerError %s", 500, payload)
}

func (o *BootstrapModulesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *BootstrapModulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
