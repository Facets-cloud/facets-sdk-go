// Code generated by go-swagger; DO NOT EDIT.

package module_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAll2Params creates a new GetAll2Params object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAll2Params() *GetAll2Params {
	return &GetAll2Params{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAll2ParamsWithTimeout creates a new GetAll2Params object
// with the ability to set a timeout on a request.
func NewGetAll2ParamsWithTimeout(timeout time.Duration) *GetAll2Params {
	return &GetAll2Params{
		timeout: timeout,
	}
}

// NewGetAll2ParamsWithContext creates a new GetAll2Params object
// with the ability to set a context for a request.
func NewGetAll2ParamsWithContext(ctx context.Context) *GetAll2Params {
	return &GetAll2Params{
		Context: ctx,
	}
}

// NewGetAll2ParamsWithHTTPClient creates a new GetAll2Params object
// with the ability to set a custom HTTPClient for a request.
func NewGetAll2ParamsWithHTTPClient(client *http.Client) *GetAll2Params {
	return &GetAll2Params{
		HTTPClient: client,
	}
}

/*
GetAll2Params contains all the parameters to send to the API endpoint

	for the get all 2 operation.

	Typically these are written to a http.Request.
*/
type GetAll2Params struct {

	// AllowPreviewModules.
	AllowPreviewModules *string

	// IncludeFacetsYaml.
	IncludeFacetsYaml *string

	// WithPathOnly.
	WithPathOnly *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get all 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAll2Params) WithDefaults() *GetAll2Params {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get all 2 params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAll2Params) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get all 2 params
func (o *GetAll2Params) WithTimeout(timeout time.Duration) *GetAll2Params {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get all 2 params
func (o *GetAll2Params) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get all 2 params
func (o *GetAll2Params) WithContext(ctx context.Context) *GetAll2Params {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get all 2 params
func (o *GetAll2Params) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get all 2 params
func (o *GetAll2Params) WithHTTPClient(client *http.Client) *GetAll2Params {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get all 2 params
func (o *GetAll2Params) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllowPreviewModules adds the allowPreviewModules to the get all 2 params
func (o *GetAll2Params) WithAllowPreviewModules(allowPreviewModules *string) *GetAll2Params {
	o.SetAllowPreviewModules(allowPreviewModules)
	return o
}

// SetAllowPreviewModules adds the allowPreviewModules to the get all 2 params
func (o *GetAll2Params) SetAllowPreviewModules(allowPreviewModules *string) {
	o.AllowPreviewModules = allowPreviewModules
}

// WithIncludeFacetsYaml adds the includeFacetsYaml to the get all 2 params
func (o *GetAll2Params) WithIncludeFacetsYaml(includeFacetsYaml *string) *GetAll2Params {
	o.SetIncludeFacetsYaml(includeFacetsYaml)
	return o
}

// SetIncludeFacetsYaml adds the includeFacetsYaml to the get all 2 params
func (o *GetAll2Params) SetIncludeFacetsYaml(includeFacetsYaml *string) {
	o.IncludeFacetsYaml = includeFacetsYaml
}

// WithWithPathOnly adds the withPathOnly to the get all 2 params
func (o *GetAll2Params) WithWithPathOnly(withPathOnly *string) *GetAll2Params {
	o.SetWithPathOnly(withPathOnly)
	return o
}

// SetWithPathOnly adds the withPathOnly to the get all 2 params
func (o *GetAll2Params) SetWithPathOnly(withPathOnly *string) {
	o.WithPathOnly = withPathOnly
}

// WriteToRequest writes these params to a swagger request
func (o *GetAll2Params) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllowPreviewModules != nil {

		// query param allowPreviewModules
		var qrAllowPreviewModules string

		if o.AllowPreviewModules != nil {
			qrAllowPreviewModules = *o.AllowPreviewModules
		}
		qAllowPreviewModules := qrAllowPreviewModules
		if qAllowPreviewModules != "" {

			if err := r.SetQueryParam("allowPreviewModules", qAllowPreviewModules); err != nil {
				return err
			}
		}
	}

	if o.IncludeFacetsYaml != nil {

		// query param includeFacetsYaml
		var qrIncludeFacetsYaml string

		if o.IncludeFacetsYaml != nil {
			qrIncludeFacetsYaml = *o.IncludeFacetsYaml
		}
		qIncludeFacetsYaml := qrIncludeFacetsYaml
		if qIncludeFacetsYaml != "" {

			if err := r.SetQueryParam("includeFacetsYaml", qIncludeFacetsYaml); err != nil {
				return err
			}
		}
	}

	if o.WithPathOnly != nil {

		// query param withPathOnly
		var qrWithPathOnly string

		if o.WithPathOnly != nil {
			qrWithPathOnly = *o.WithPathOnly
		}
		qWithPathOnly := qrWithPathOnly
		if qWithPathOnly != "" {

			if err := r.SetQueryParam("withPathOnly", qWithPathOnly); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
