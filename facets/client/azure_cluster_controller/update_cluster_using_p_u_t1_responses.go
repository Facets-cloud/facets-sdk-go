// Code generated by go-swagger; DO NOT EDIT.

package azure_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateClusterUsingPUT1Reader is a Reader for the UpdateClusterUsingPUT1 structure.
type UpdateClusterUsingPUT1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterUsingPUT1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterUsingPUT1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateClusterUsingPUT1Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateClusterUsingPUT1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateClusterUsingPUT1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterUsingPUT1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc/v1/azure/clusters/{clusterId}] updateClusterUsingPUT_1", response, response.Code())
	}
}

// NewUpdateClusterUsingPUT1OK creates a UpdateClusterUsingPUT1OK with default headers values
func NewUpdateClusterUsingPUT1OK() *UpdateClusterUsingPUT1OK {
	return &UpdateClusterUsingPUT1OK{}
}

/*
UpdateClusterUsingPUT1OK describes a response with status code 200, with default header values.

OK
*/
type UpdateClusterUsingPUT1OK struct {
	Payload *models.AzureCluster
}

// IsSuccess returns true when this update cluster using p u t1 o k response has a 2xx status code
func (o *UpdateClusterUsingPUT1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster using p u t1 o k response has a 3xx status code
func (o *UpdateClusterUsingPUT1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t1 o k response has a 4xx status code
func (o *UpdateClusterUsingPUT1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster using p u t1 o k response has a 5xx status code
func (o *UpdateClusterUsingPUT1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t1 o k response a status code equal to that given
func (o *UpdateClusterUsingPUT1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update cluster using p u t1 o k response
func (o *UpdateClusterUsingPUT1OK) Code() int {
	return 200
}

func (o *UpdateClusterUsingPUT1OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1OK %s", 200, payload)
}

func (o *UpdateClusterUsingPUT1OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1OK %s", 200, payload)
}

func (o *UpdateClusterUsingPUT1OK) GetPayload() *models.AzureCluster {
	return o.Payload
}

func (o *UpdateClusterUsingPUT1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AzureCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterUsingPUT1Created creates a UpdateClusterUsingPUT1Created with default headers values
func NewUpdateClusterUsingPUT1Created() *UpdateClusterUsingPUT1Created {
	return &UpdateClusterUsingPUT1Created{}
}

/*
UpdateClusterUsingPUT1Created describes a response with status code 201, with default header values.

Created
*/
type UpdateClusterUsingPUT1Created struct {
}

// IsSuccess returns true when this update cluster using p u t1 created response has a 2xx status code
func (o *UpdateClusterUsingPUT1Created) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update cluster using p u t1 created response has a 3xx status code
func (o *UpdateClusterUsingPUT1Created) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t1 created response has a 4xx status code
func (o *UpdateClusterUsingPUT1Created) IsClientError() bool {
	return false
}

// IsServerError returns true when this update cluster using p u t1 created response has a 5xx status code
func (o *UpdateClusterUsingPUT1Created) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t1 created response a status code equal to that given
func (o *UpdateClusterUsingPUT1Created) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update cluster using p u t1 created response
func (o *UpdateClusterUsingPUT1Created) Code() int {
	return 201
}

func (o *UpdateClusterUsingPUT1Created) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1Created", 201)
}

func (o *UpdateClusterUsingPUT1Created) String() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1Created", 201)
}

func (o *UpdateClusterUsingPUT1Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterUsingPUT1Unauthorized creates a UpdateClusterUsingPUT1Unauthorized with default headers values
func NewUpdateClusterUsingPUT1Unauthorized() *UpdateClusterUsingPUT1Unauthorized {
	return &UpdateClusterUsingPUT1Unauthorized{}
}

/*
UpdateClusterUsingPUT1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateClusterUsingPUT1Unauthorized struct {
}

// IsSuccess returns true when this update cluster using p u t1 unauthorized response has a 2xx status code
func (o *UpdateClusterUsingPUT1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster using p u t1 unauthorized response has a 3xx status code
func (o *UpdateClusterUsingPUT1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t1 unauthorized response has a 4xx status code
func (o *UpdateClusterUsingPUT1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster using p u t1 unauthorized response has a 5xx status code
func (o *UpdateClusterUsingPUT1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t1 unauthorized response a status code equal to that given
func (o *UpdateClusterUsingPUT1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update cluster using p u t1 unauthorized response
func (o *UpdateClusterUsingPUT1Unauthorized) Code() int {
	return 401
}

func (o *UpdateClusterUsingPUT1Unauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1Unauthorized", 401)
}

func (o *UpdateClusterUsingPUT1Unauthorized) String() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1Unauthorized", 401)
}

func (o *UpdateClusterUsingPUT1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterUsingPUT1Forbidden creates a UpdateClusterUsingPUT1Forbidden with default headers values
func NewUpdateClusterUsingPUT1Forbidden() *UpdateClusterUsingPUT1Forbidden {
	return &UpdateClusterUsingPUT1Forbidden{}
}

/*
UpdateClusterUsingPUT1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateClusterUsingPUT1Forbidden struct {
}

// IsSuccess returns true when this update cluster using p u t1 forbidden response has a 2xx status code
func (o *UpdateClusterUsingPUT1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster using p u t1 forbidden response has a 3xx status code
func (o *UpdateClusterUsingPUT1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t1 forbidden response has a 4xx status code
func (o *UpdateClusterUsingPUT1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster using p u t1 forbidden response has a 5xx status code
func (o *UpdateClusterUsingPUT1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t1 forbidden response a status code equal to that given
func (o *UpdateClusterUsingPUT1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update cluster using p u t1 forbidden response
func (o *UpdateClusterUsingPUT1Forbidden) Code() int {
	return 403
}

func (o *UpdateClusterUsingPUT1Forbidden) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1Forbidden", 403)
}

func (o *UpdateClusterUsingPUT1Forbidden) String() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1Forbidden", 403)
}

func (o *UpdateClusterUsingPUT1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateClusterUsingPUT1NotFound creates a UpdateClusterUsingPUT1NotFound with default headers values
func NewUpdateClusterUsingPUT1NotFound() *UpdateClusterUsingPUT1NotFound {
	return &UpdateClusterUsingPUT1NotFound{}
}

/*
UpdateClusterUsingPUT1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateClusterUsingPUT1NotFound struct {
}

// IsSuccess returns true when this update cluster using p u t1 not found response has a 2xx status code
func (o *UpdateClusterUsingPUT1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update cluster using p u t1 not found response has a 3xx status code
func (o *UpdateClusterUsingPUT1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update cluster using p u t1 not found response has a 4xx status code
func (o *UpdateClusterUsingPUT1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update cluster using p u t1 not found response has a 5xx status code
func (o *UpdateClusterUsingPUT1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update cluster using p u t1 not found response a status code equal to that given
func (o *UpdateClusterUsingPUT1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update cluster using p u t1 not found response
func (o *UpdateClusterUsingPUT1NotFound) Code() int {
	return 404
}

func (o *UpdateClusterUsingPUT1NotFound) Error() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1NotFound", 404)
}

func (o *UpdateClusterUsingPUT1NotFound) String() string {
	return fmt.Sprintf("[PUT /cc/v1/azure/clusters/{clusterId}][%d] updateClusterUsingPUT1NotFound", 404)
}

func (o *UpdateClusterUsingPUT1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
