// Code generated by go-swagger; DO NOT EDIT.

package ui_gcp_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateGCPClusterReader is a Reader for the CreateGCPCluster structure.
type CreateGCPClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGCPClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGCPClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateGCPClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateGCPClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateGCPClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateGCPClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/gcp/clusters] createGCPCluster", response, response.Code())
	}
}

// NewCreateGCPClusterOK creates a CreateGCPClusterOK with default headers values
func NewCreateGCPClusterOK() *CreateGCPClusterOK {
	return &CreateGCPClusterOK{}
}

/*
CreateGCPClusterOK describes a response with status code 200, with default header values.

OK
*/
type CreateGCPClusterOK struct {
	Payload *models.GCPCluster
}

// IsSuccess returns true when this create g c p cluster o k response has a 2xx status code
func (o *CreateGCPClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create g c p cluster o k response has a 3xx status code
func (o *CreateGCPClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster o k response has a 4xx status code
func (o *CreateGCPClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create g c p cluster o k response has a 5xx status code
func (o *CreateGCPClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster o k response a status code equal to that given
func (o *CreateGCPClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create g c p cluster o k response
func (o *CreateGCPClusterOK) Code() int {
	return 200
}

func (o *CreateGCPClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterOK %s", 200, payload)
}

func (o *CreateGCPClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterOK %s", 200, payload)
}

func (o *CreateGCPClusterOK) GetPayload() *models.GCPCluster {
	return o.Payload
}

func (o *CreateGCPClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GCPCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGCPClusterBadRequest creates a CreateGCPClusterBadRequest with default headers values
func NewCreateGCPClusterBadRequest() *CreateGCPClusterBadRequest {
	return &CreateGCPClusterBadRequest{}
}

/*
CreateGCPClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateGCPClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create g c p cluster bad request response has a 2xx status code
func (o *CreateGCPClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create g c p cluster bad request response has a 3xx status code
func (o *CreateGCPClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster bad request response has a 4xx status code
func (o *CreateGCPClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create g c p cluster bad request response has a 5xx status code
func (o *CreateGCPClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster bad request response a status code equal to that given
func (o *CreateGCPClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create g c p cluster bad request response
func (o *CreateGCPClusterBadRequest) Code() int {
	return 400
}

func (o *CreateGCPClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterBadRequest %s", 400, payload)
}

func (o *CreateGCPClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterBadRequest %s", 400, payload)
}

func (o *CreateGCPClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGCPClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGCPClusterNotFound creates a CreateGCPClusterNotFound with default headers values
func NewCreateGCPClusterNotFound() *CreateGCPClusterNotFound {
	return &CreateGCPClusterNotFound{}
}

/*
CreateGCPClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateGCPClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create g c p cluster not found response has a 2xx status code
func (o *CreateGCPClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create g c p cluster not found response has a 3xx status code
func (o *CreateGCPClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster not found response has a 4xx status code
func (o *CreateGCPClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create g c p cluster not found response has a 5xx status code
func (o *CreateGCPClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster not found response a status code equal to that given
func (o *CreateGCPClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create g c p cluster not found response
func (o *CreateGCPClusterNotFound) Code() int {
	return 404
}

func (o *CreateGCPClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterNotFound %s", 404, payload)
}

func (o *CreateGCPClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterNotFound %s", 404, payload)
}

func (o *CreateGCPClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGCPClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGCPClusterMethodNotAllowed creates a CreateGCPClusterMethodNotAllowed with default headers values
func NewCreateGCPClusterMethodNotAllowed() *CreateGCPClusterMethodNotAllowed {
	return &CreateGCPClusterMethodNotAllowed{}
}

/*
CreateGCPClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateGCPClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create g c p cluster method not allowed response has a 2xx status code
func (o *CreateGCPClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create g c p cluster method not allowed response has a 3xx status code
func (o *CreateGCPClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster method not allowed response has a 4xx status code
func (o *CreateGCPClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create g c p cluster method not allowed response has a 5xx status code
func (o *CreateGCPClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster method not allowed response a status code equal to that given
func (o *CreateGCPClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create g c p cluster method not allowed response
func (o *CreateGCPClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateGCPClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterMethodNotAllowed %s", 405, payload)
}

func (o *CreateGCPClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterMethodNotAllowed %s", 405, payload)
}

func (o *CreateGCPClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGCPClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGCPClusterInternalServerError creates a CreateGCPClusterInternalServerError with default headers values
func NewCreateGCPClusterInternalServerError() *CreateGCPClusterInternalServerError {
	return &CreateGCPClusterInternalServerError{}
}

/*
CreateGCPClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateGCPClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create g c p cluster internal server error response has a 2xx status code
func (o *CreateGCPClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create g c p cluster internal server error response has a 3xx status code
func (o *CreateGCPClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster internal server error response has a 4xx status code
func (o *CreateGCPClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create g c p cluster internal server error response has a 5xx status code
func (o *CreateGCPClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create g c p cluster internal server error response a status code equal to that given
func (o *CreateGCPClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create g c p cluster internal server error response
func (o *CreateGCPClusterInternalServerError) Code() int {
	return 500
}

func (o *CreateGCPClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterInternalServerError %s", 500, payload)
}

func (o *CreateGCPClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterInternalServerError %s", 500, payload)
}

func (o *CreateGCPClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateGCPClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
