// Code generated by go-swagger; DO NOT EDIT.

package ui_gcp_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ConfigureDraftClusterReader is a Reader for the ConfigureDraftCluster structure.
type ConfigureDraftClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ConfigureDraftClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewConfigureDraftClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewConfigureDraftClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewConfigureDraftClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewConfigureDraftClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewConfigureDraftClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}] configureDraftCluster", response, response.Code())
	}
}

// NewConfigureDraftClusterOK creates a ConfigureDraftClusterOK with default headers values
func NewConfigureDraftClusterOK() *ConfigureDraftClusterOK {
	return &ConfigureDraftClusterOK{}
}

/*
ConfigureDraftClusterOK describes a response with status code 200, with default header values.

OK
*/
type ConfigureDraftClusterOK struct {
	Payload *models.GCPCluster
}

// IsSuccess returns true when this configure draft cluster o k response has a 2xx status code
func (o *ConfigureDraftClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this configure draft cluster o k response has a 3xx status code
func (o *ConfigureDraftClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure draft cluster o k response has a 4xx status code
func (o *ConfigureDraftClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this configure draft cluster o k response has a 5xx status code
func (o *ConfigureDraftClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this configure draft cluster o k response a status code equal to that given
func (o *ConfigureDraftClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the configure draft cluster o k response
func (o *ConfigureDraftClusterOK) Code() int {
	return 200
}

func (o *ConfigureDraftClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterOK %s", 200, payload)
}

func (o *ConfigureDraftClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterOK %s", 200, payload)
}

func (o *ConfigureDraftClusterOK) GetPayload() *models.GCPCluster {
	return o.Payload
}

func (o *ConfigureDraftClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GCPCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigureDraftClusterBadRequest creates a ConfigureDraftClusterBadRequest with default headers values
func NewConfigureDraftClusterBadRequest() *ConfigureDraftClusterBadRequest {
	return &ConfigureDraftClusterBadRequest{}
}

/*
ConfigureDraftClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ConfigureDraftClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this configure draft cluster bad request response has a 2xx status code
func (o *ConfigureDraftClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure draft cluster bad request response has a 3xx status code
func (o *ConfigureDraftClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure draft cluster bad request response has a 4xx status code
func (o *ConfigureDraftClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this configure draft cluster bad request response has a 5xx status code
func (o *ConfigureDraftClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this configure draft cluster bad request response a status code equal to that given
func (o *ConfigureDraftClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the configure draft cluster bad request response
func (o *ConfigureDraftClusterBadRequest) Code() int {
	return 400
}

func (o *ConfigureDraftClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterBadRequest %s", 400, payload)
}

func (o *ConfigureDraftClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterBadRequest %s", 400, payload)
}

func (o *ConfigureDraftClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ConfigureDraftClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigureDraftClusterNotFound creates a ConfigureDraftClusterNotFound with default headers values
func NewConfigureDraftClusterNotFound() *ConfigureDraftClusterNotFound {
	return &ConfigureDraftClusterNotFound{}
}

/*
ConfigureDraftClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ConfigureDraftClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this configure draft cluster not found response has a 2xx status code
func (o *ConfigureDraftClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure draft cluster not found response has a 3xx status code
func (o *ConfigureDraftClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure draft cluster not found response has a 4xx status code
func (o *ConfigureDraftClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this configure draft cluster not found response has a 5xx status code
func (o *ConfigureDraftClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this configure draft cluster not found response a status code equal to that given
func (o *ConfigureDraftClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the configure draft cluster not found response
func (o *ConfigureDraftClusterNotFound) Code() int {
	return 404
}

func (o *ConfigureDraftClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterNotFound %s", 404, payload)
}

func (o *ConfigureDraftClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterNotFound %s", 404, payload)
}

func (o *ConfigureDraftClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ConfigureDraftClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigureDraftClusterMethodNotAllowed creates a ConfigureDraftClusterMethodNotAllowed with default headers values
func NewConfigureDraftClusterMethodNotAllowed() *ConfigureDraftClusterMethodNotAllowed {
	return &ConfigureDraftClusterMethodNotAllowed{}
}

/*
ConfigureDraftClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ConfigureDraftClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this configure draft cluster method not allowed response has a 2xx status code
func (o *ConfigureDraftClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure draft cluster method not allowed response has a 3xx status code
func (o *ConfigureDraftClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure draft cluster method not allowed response has a 4xx status code
func (o *ConfigureDraftClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this configure draft cluster method not allowed response has a 5xx status code
func (o *ConfigureDraftClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this configure draft cluster method not allowed response a status code equal to that given
func (o *ConfigureDraftClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the configure draft cluster method not allowed response
func (o *ConfigureDraftClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *ConfigureDraftClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterMethodNotAllowed %s", 405, payload)
}

func (o *ConfigureDraftClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterMethodNotAllowed %s", 405, payload)
}

func (o *ConfigureDraftClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ConfigureDraftClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewConfigureDraftClusterInternalServerError creates a ConfigureDraftClusterInternalServerError with default headers values
func NewConfigureDraftClusterInternalServerError() *ConfigureDraftClusterInternalServerError {
	return &ConfigureDraftClusterInternalServerError{}
}

/*
ConfigureDraftClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ConfigureDraftClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this configure draft cluster internal server error response has a 2xx status code
func (o *ConfigureDraftClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this configure draft cluster internal server error response has a 3xx status code
func (o *ConfigureDraftClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this configure draft cluster internal server error response has a 4xx status code
func (o *ConfigureDraftClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this configure draft cluster internal server error response has a 5xx status code
func (o *ConfigureDraftClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this configure draft cluster internal server error response a status code equal to that given
func (o *ConfigureDraftClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the configure draft cluster internal server error response
func (o *ConfigureDraftClusterInternalServerError) Code() int {
	return 500
}

func (o *ConfigureDraftClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterInternalServerError %s", 500, payload)
}

func (o *ConfigureDraftClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters/configure/{clusterId}][%d] configureDraftClusterInternalServerError %s", 500, payload)
}

func (o *ConfigureDraftClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ConfigureDraftClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
