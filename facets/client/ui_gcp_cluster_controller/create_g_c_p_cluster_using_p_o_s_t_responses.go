// Code generated by go-swagger; DO NOT EDIT.

package ui_gcp_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateGCPClusterUsingPOSTReader is a Reader for the CreateGCPClusterUsingPOST structure.
type CreateGCPClusterUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateGCPClusterUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateGCPClusterUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateGCPClusterUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateGCPClusterUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateGCPClusterUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateGCPClusterUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/gcp/clusters] createGCPClusterUsingPOST", response, response.Code())
	}
}

// NewCreateGCPClusterUsingPOSTOK creates a CreateGCPClusterUsingPOSTOK with default headers values
func NewCreateGCPClusterUsingPOSTOK() *CreateGCPClusterUsingPOSTOK {
	return &CreateGCPClusterUsingPOSTOK{}
}

/*
CreateGCPClusterUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateGCPClusterUsingPOSTOK struct {
	Payload *models.GCPCluster
}

// IsSuccess returns true when this create g c p cluster using p o s t o k response has a 2xx status code
func (o *CreateGCPClusterUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create g c p cluster using p o s t o k response has a 3xx status code
func (o *CreateGCPClusterUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster using p o s t o k response has a 4xx status code
func (o *CreateGCPClusterUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create g c p cluster using p o s t o k response has a 5xx status code
func (o *CreateGCPClusterUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster using p o s t o k response a status code equal to that given
func (o *CreateGCPClusterUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create g c p cluster using p o s t o k response
func (o *CreateGCPClusterUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateGCPClusterUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTOK %s", 200, payload)
}

func (o *CreateGCPClusterUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTOK %s", 200, payload)
}

func (o *CreateGCPClusterUsingPOSTOK) GetPayload() *models.GCPCluster {
	return o.Payload
}

func (o *CreateGCPClusterUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GCPCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateGCPClusterUsingPOSTCreated creates a CreateGCPClusterUsingPOSTCreated with default headers values
func NewCreateGCPClusterUsingPOSTCreated() *CreateGCPClusterUsingPOSTCreated {
	return &CreateGCPClusterUsingPOSTCreated{}
}

/*
CreateGCPClusterUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateGCPClusterUsingPOSTCreated struct {
}

// IsSuccess returns true when this create g c p cluster using p o s t created response has a 2xx status code
func (o *CreateGCPClusterUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create g c p cluster using p o s t created response has a 3xx status code
func (o *CreateGCPClusterUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster using p o s t created response has a 4xx status code
func (o *CreateGCPClusterUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create g c p cluster using p o s t created response has a 5xx status code
func (o *CreateGCPClusterUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster using p o s t created response a status code equal to that given
func (o *CreateGCPClusterUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create g c p cluster using p o s t created response
func (o *CreateGCPClusterUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateGCPClusterUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTCreated", 201)
}

func (o *CreateGCPClusterUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTCreated", 201)
}

func (o *CreateGCPClusterUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGCPClusterUsingPOSTUnauthorized creates a CreateGCPClusterUsingPOSTUnauthorized with default headers values
func NewCreateGCPClusterUsingPOSTUnauthorized() *CreateGCPClusterUsingPOSTUnauthorized {
	return &CreateGCPClusterUsingPOSTUnauthorized{}
}

/*
CreateGCPClusterUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateGCPClusterUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create g c p cluster using p o s t unauthorized response has a 2xx status code
func (o *CreateGCPClusterUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create g c p cluster using p o s t unauthorized response has a 3xx status code
func (o *CreateGCPClusterUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster using p o s t unauthorized response has a 4xx status code
func (o *CreateGCPClusterUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create g c p cluster using p o s t unauthorized response has a 5xx status code
func (o *CreateGCPClusterUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster using p o s t unauthorized response a status code equal to that given
func (o *CreateGCPClusterUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create g c p cluster using p o s t unauthorized response
func (o *CreateGCPClusterUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateGCPClusterUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTUnauthorized", 401)
}

func (o *CreateGCPClusterUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTUnauthorized", 401)
}

func (o *CreateGCPClusterUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGCPClusterUsingPOSTForbidden creates a CreateGCPClusterUsingPOSTForbidden with default headers values
func NewCreateGCPClusterUsingPOSTForbidden() *CreateGCPClusterUsingPOSTForbidden {
	return &CreateGCPClusterUsingPOSTForbidden{}
}

/*
CreateGCPClusterUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateGCPClusterUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create g c p cluster using p o s t forbidden response has a 2xx status code
func (o *CreateGCPClusterUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create g c p cluster using p o s t forbidden response has a 3xx status code
func (o *CreateGCPClusterUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster using p o s t forbidden response has a 4xx status code
func (o *CreateGCPClusterUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create g c p cluster using p o s t forbidden response has a 5xx status code
func (o *CreateGCPClusterUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster using p o s t forbidden response a status code equal to that given
func (o *CreateGCPClusterUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create g c p cluster using p o s t forbidden response
func (o *CreateGCPClusterUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateGCPClusterUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTForbidden", 403)
}

func (o *CreateGCPClusterUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTForbidden", 403)
}

func (o *CreateGCPClusterUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateGCPClusterUsingPOSTNotFound creates a CreateGCPClusterUsingPOSTNotFound with default headers values
func NewCreateGCPClusterUsingPOSTNotFound() *CreateGCPClusterUsingPOSTNotFound {
	return &CreateGCPClusterUsingPOSTNotFound{}
}

/*
CreateGCPClusterUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateGCPClusterUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create g c p cluster using p o s t not found response has a 2xx status code
func (o *CreateGCPClusterUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create g c p cluster using p o s t not found response has a 3xx status code
func (o *CreateGCPClusterUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create g c p cluster using p o s t not found response has a 4xx status code
func (o *CreateGCPClusterUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create g c p cluster using p o s t not found response has a 5xx status code
func (o *CreateGCPClusterUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create g c p cluster using p o s t not found response a status code equal to that given
func (o *CreateGCPClusterUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create g c p cluster using p o s t not found response
func (o *CreateGCPClusterUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateGCPClusterUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTNotFound", 404)
}

func (o *CreateGCPClusterUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/gcp/clusters][%d] createGCPClusterUsingPOSTNotFound", 404)
}

func (o *CreateGCPClusterUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
