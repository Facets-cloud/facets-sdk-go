// Code generated by go-swagger; DO NOT EDIT.

package ui_gcp_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetGCPClusterReader is a Reader for the GetGCPCluster structure.
type GetGCPClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGCPClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGCPClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGCPClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGCPClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetGCPClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGCPClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/gcp/clusters/{clusterId}] getGCPCluster", response, response.Code())
	}
}

// NewGetGCPClusterOK creates a GetGCPClusterOK with default headers values
func NewGetGCPClusterOK() *GetGCPClusterOK {
	return &GetGCPClusterOK{}
}

/*
GetGCPClusterOK describes a response with status code 200, with default header values.

OK
*/
type GetGCPClusterOK struct {
	Payload *models.GCPCluster
}

// IsSuccess returns true when this get g c p cluster o k response has a 2xx status code
func (o *GetGCPClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get g c p cluster o k response has a 3xx status code
func (o *GetGCPClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get g c p cluster o k response has a 4xx status code
func (o *GetGCPClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get g c p cluster o k response has a 5xx status code
func (o *GetGCPClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get g c p cluster o k response a status code equal to that given
func (o *GetGCPClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get g c p cluster o k response
func (o *GetGCPClusterOK) Code() int {
	return 200
}

func (o *GetGCPClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterOK %s", 200, payload)
}

func (o *GetGCPClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterOK %s", 200, payload)
}

func (o *GetGCPClusterOK) GetPayload() *models.GCPCluster {
	return o.Payload
}

func (o *GetGCPClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GCPCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGCPClusterBadRequest creates a GetGCPClusterBadRequest with default headers values
func NewGetGCPClusterBadRequest() *GetGCPClusterBadRequest {
	return &GetGCPClusterBadRequest{}
}

/*
GetGCPClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetGCPClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get g c p cluster bad request response has a 2xx status code
func (o *GetGCPClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get g c p cluster bad request response has a 3xx status code
func (o *GetGCPClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get g c p cluster bad request response has a 4xx status code
func (o *GetGCPClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get g c p cluster bad request response has a 5xx status code
func (o *GetGCPClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get g c p cluster bad request response a status code equal to that given
func (o *GetGCPClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get g c p cluster bad request response
func (o *GetGCPClusterBadRequest) Code() int {
	return 400
}

func (o *GetGCPClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterBadRequest %s", 400, payload)
}

func (o *GetGCPClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterBadRequest %s", 400, payload)
}

func (o *GetGCPClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetGCPClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGCPClusterNotFound creates a GetGCPClusterNotFound with default headers values
func NewGetGCPClusterNotFound() *GetGCPClusterNotFound {
	return &GetGCPClusterNotFound{}
}

/*
GetGCPClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetGCPClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get g c p cluster not found response has a 2xx status code
func (o *GetGCPClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get g c p cluster not found response has a 3xx status code
func (o *GetGCPClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get g c p cluster not found response has a 4xx status code
func (o *GetGCPClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get g c p cluster not found response has a 5xx status code
func (o *GetGCPClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get g c p cluster not found response a status code equal to that given
func (o *GetGCPClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get g c p cluster not found response
func (o *GetGCPClusterNotFound) Code() int {
	return 404
}

func (o *GetGCPClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterNotFound %s", 404, payload)
}

func (o *GetGCPClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterNotFound %s", 404, payload)
}

func (o *GetGCPClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetGCPClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGCPClusterMethodNotAllowed creates a GetGCPClusterMethodNotAllowed with default headers values
func NewGetGCPClusterMethodNotAllowed() *GetGCPClusterMethodNotAllowed {
	return &GetGCPClusterMethodNotAllowed{}
}

/*
GetGCPClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetGCPClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get g c p cluster method not allowed response has a 2xx status code
func (o *GetGCPClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get g c p cluster method not allowed response has a 3xx status code
func (o *GetGCPClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get g c p cluster method not allowed response has a 4xx status code
func (o *GetGCPClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get g c p cluster method not allowed response has a 5xx status code
func (o *GetGCPClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get g c p cluster method not allowed response a status code equal to that given
func (o *GetGCPClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get g c p cluster method not allowed response
func (o *GetGCPClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *GetGCPClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterMethodNotAllowed %s", 405, payload)
}

func (o *GetGCPClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterMethodNotAllowed %s", 405, payload)
}

func (o *GetGCPClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetGCPClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGCPClusterInternalServerError creates a GetGCPClusterInternalServerError with default headers values
func NewGetGCPClusterInternalServerError() *GetGCPClusterInternalServerError {
	return &GetGCPClusterInternalServerError{}
}

/*
GetGCPClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetGCPClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get g c p cluster internal server error response has a 2xx status code
func (o *GetGCPClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get g c p cluster internal server error response has a 3xx status code
func (o *GetGCPClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get g c p cluster internal server error response has a 4xx status code
func (o *GetGCPClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get g c p cluster internal server error response has a 5xx status code
func (o *GetGCPClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get g c p cluster internal server error response a status code equal to that given
func (o *GetGCPClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get g c p cluster internal server error response
func (o *GetGCPClusterInternalServerError) Code() int {
	return 500
}

func (o *GetGCPClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterInternalServerError %s", 500, payload)
}

func (o *GetGCPClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/gcp/clusters/{clusterId}][%d] getGCPClusterInternalServerError %s", 500, payload)
}

func (o *GetGCPClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetGCPClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
