// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SoftDeletedEntitiesUsingGETReader is a Reader for the SoftDeletedEntitiesUsingGET structure.
type SoftDeletedEntitiesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SoftDeletedEntitiesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSoftDeletedEntitiesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSoftDeletedEntitiesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSoftDeletedEntitiesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSoftDeletedEntitiesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/versions/softDeletedEntities] softDeletedEntitiesUsingGET", response, response.Code())
	}
}

// NewSoftDeletedEntitiesUsingGETOK creates a SoftDeletedEntitiesUsingGETOK with default headers values
func NewSoftDeletedEntitiesUsingGETOK() *SoftDeletedEntitiesUsingGETOK {
	return &SoftDeletedEntitiesUsingGETOK{}
}

/*
SoftDeletedEntitiesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type SoftDeletedEntitiesUsingGETOK struct {
	Payload []*models.DeletedEntity
}

// IsSuccess returns true when this soft deleted entities using g e t o k response has a 2xx status code
func (o *SoftDeletedEntitiesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this soft deleted entities using g e t o k response has a 3xx status code
func (o *SoftDeletedEntitiesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities using g e t o k response has a 4xx status code
func (o *SoftDeletedEntitiesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this soft deleted entities using g e t o k response has a 5xx status code
func (o *SoftDeletedEntitiesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities using g e t o k response a status code equal to that given
func (o *SoftDeletedEntitiesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the soft deleted entities using g e t o k response
func (o *SoftDeletedEntitiesUsingGETOK) Code() int {
	return 200
}

func (o *SoftDeletedEntitiesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETOK %s", 200, payload)
}

func (o *SoftDeletedEntitiesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETOK %s", 200, payload)
}

func (o *SoftDeletedEntitiesUsingGETOK) GetPayload() []*models.DeletedEntity {
	return o.Payload
}

func (o *SoftDeletedEntitiesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSoftDeletedEntitiesUsingGETUnauthorized creates a SoftDeletedEntitiesUsingGETUnauthorized with default headers values
func NewSoftDeletedEntitiesUsingGETUnauthorized() *SoftDeletedEntitiesUsingGETUnauthorized {
	return &SoftDeletedEntitiesUsingGETUnauthorized{}
}

/*
SoftDeletedEntitiesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SoftDeletedEntitiesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this soft deleted entities using g e t unauthorized response has a 2xx status code
func (o *SoftDeletedEntitiesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities using g e t unauthorized response has a 3xx status code
func (o *SoftDeletedEntitiesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities using g e t unauthorized response has a 4xx status code
func (o *SoftDeletedEntitiesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities using g e t unauthorized response has a 5xx status code
func (o *SoftDeletedEntitiesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities using g e t unauthorized response a status code equal to that given
func (o *SoftDeletedEntitiesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the soft deleted entities using g e t unauthorized response
func (o *SoftDeletedEntitiesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SoftDeletedEntitiesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETUnauthorized", 401)
}

func (o *SoftDeletedEntitiesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETUnauthorized", 401)
}

func (o *SoftDeletedEntitiesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSoftDeletedEntitiesUsingGETForbidden creates a SoftDeletedEntitiesUsingGETForbidden with default headers values
func NewSoftDeletedEntitiesUsingGETForbidden() *SoftDeletedEntitiesUsingGETForbidden {
	return &SoftDeletedEntitiesUsingGETForbidden{}
}

/*
SoftDeletedEntitiesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SoftDeletedEntitiesUsingGETForbidden struct {
}

// IsSuccess returns true when this soft deleted entities using g e t forbidden response has a 2xx status code
func (o *SoftDeletedEntitiesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities using g e t forbidden response has a 3xx status code
func (o *SoftDeletedEntitiesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities using g e t forbidden response has a 4xx status code
func (o *SoftDeletedEntitiesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities using g e t forbidden response has a 5xx status code
func (o *SoftDeletedEntitiesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities using g e t forbidden response a status code equal to that given
func (o *SoftDeletedEntitiesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the soft deleted entities using g e t forbidden response
func (o *SoftDeletedEntitiesUsingGETForbidden) Code() int {
	return 403
}

func (o *SoftDeletedEntitiesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETForbidden", 403)
}

func (o *SoftDeletedEntitiesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETForbidden", 403)
}

func (o *SoftDeletedEntitiesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSoftDeletedEntitiesUsingGETNotFound creates a SoftDeletedEntitiesUsingGETNotFound with default headers values
func NewSoftDeletedEntitiesUsingGETNotFound() *SoftDeletedEntitiesUsingGETNotFound {
	return &SoftDeletedEntitiesUsingGETNotFound{}
}

/*
SoftDeletedEntitiesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SoftDeletedEntitiesUsingGETNotFound struct {
}

// IsSuccess returns true when this soft deleted entities using g e t not found response has a 2xx status code
func (o *SoftDeletedEntitiesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities using g e t not found response has a 3xx status code
func (o *SoftDeletedEntitiesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities using g e t not found response has a 4xx status code
func (o *SoftDeletedEntitiesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities using g e t not found response has a 5xx status code
func (o *SoftDeletedEntitiesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities using g e t not found response a status code equal to that given
func (o *SoftDeletedEntitiesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the soft deleted entities using g e t not found response
func (o *SoftDeletedEntitiesUsingGETNotFound) Code() int {
	return 404
}

func (o *SoftDeletedEntitiesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETNotFound", 404)
}

func (o *SoftDeletedEntitiesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities][%d] softDeletedEntitiesUsingGETNotFound", 404)
}

func (o *SoftDeletedEntitiesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
