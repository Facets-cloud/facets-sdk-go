// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SoftDeletedEntitiesByTypeUsingGETReader is a Reader for the SoftDeletedEntitiesByTypeUsingGET structure.
type SoftDeletedEntitiesByTypeUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SoftDeletedEntitiesByTypeUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSoftDeletedEntitiesByTypeUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSoftDeletedEntitiesByTypeUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSoftDeletedEntitiesByTypeUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSoftDeletedEntitiesByTypeUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}] softDeletedEntitiesByTypeUsingGET", response, response.Code())
	}
}

// NewSoftDeletedEntitiesByTypeUsingGETOK creates a SoftDeletedEntitiesByTypeUsingGETOK with default headers values
func NewSoftDeletedEntitiesByTypeUsingGETOK() *SoftDeletedEntitiesByTypeUsingGETOK {
	return &SoftDeletedEntitiesByTypeUsingGETOK{}
}

/*
SoftDeletedEntitiesByTypeUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type SoftDeletedEntitiesByTypeUsingGETOK struct {
	Payload []*models.DeletedEntity
}

// IsSuccess returns true when this soft deleted entities by type using g e t o k response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this soft deleted entities by type using g e t o k response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type using g e t o k response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this soft deleted entities by type using g e t o k response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type using g e t o k response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the soft deleted entities by type using g e t o k response
func (o *SoftDeletedEntitiesByTypeUsingGETOK) Code() int {
	return 200
}

func (o *SoftDeletedEntitiesByTypeUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETOK %s", 200, payload)
}

func (o *SoftDeletedEntitiesByTypeUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETOK %s", 200, payload)
}

func (o *SoftDeletedEntitiesByTypeUsingGETOK) GetPayload() []*models.DeletedEntity {
	return o.Payload
}

func (o *SoftDeletedEntitiesByTypeUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSoftDeletedEntitiesByTypeUsingGETUnauthorized creates a SoftDeletedEntitiesByTypeUsingGETUnauthorized with default headers values
func NewSoftDeletedEntitiesByTypeUsingGETUnauthorized() *SoftDeletedEntitiesByTypeUsingGETUnauthorized {
	return &SoftDeletedEntitiesByTypeUsingGETUnauthorized{}
}

/*
SoftDeletedEntitiesByTypeUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SoftDeletedEntitiesByTypeUsingGETUnauthorized struct {
}

// IsSuccess returns true when this soft deleted entities by type using g e t unauthorized response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities by type using g e t unauthorized response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type using g e t unauthorized response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities by type using g e t unauthorized response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type using g e t unauthorized response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the soft deleted entities by type using g e t unauthorized response
func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETUnauthorized", 401)
}

func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETUnauthorized", 401)
}

func (o *SoftDeletedEntitiesByTypeUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSoftDeletedEntitiesByTypeUsingGETForbidden creates a SoftDeletedEntitiesByTypeUsingGETForbidden with default headers values
func NewSoftDeletedEntitiesByTypeUsingGETForbidden() *SoftDeletedEntitiesByTypeUsingGETForbidden {
	return &SoftDeletedEntitiesByTypeUsingGETForbidden{}
}

/*
SoftDeletedEntitiesByTypeUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SoftDeletedEntitiesByTypeUsingGETForbidden struct {
}

// IsSuccess returns true when this soft deleted entities by type using g e t forbidden response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities by type using g e t forbidden response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type using g e t forbidden response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities by type using g e t forbidden response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type using g e t forbidden response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the soft deleted entities by type using g e t forbidden response
func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) Code() int {
	return 403
}

func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETForbidden", 403)
}

func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETForbidden", 403)
}

func (o *SoftDeletedEntitiesByTypeUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSoftDeletedEntitiesByTypeUsingGETNotFound creates a SoftDeletedEntitiesByTypeUsingGETNotFound with default headers values
func NewSoftDeletedEntitiesByTypeUsingGETNotFound() *SoftDeletedEntitiesByTypeUsingGETNotFound {
	return &SoftDeletedEntitiesByTypeUsingGETNotFound{}
}

/*
SoftDeletedEntitiesByTypeUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SoftDeletedEntitiesByTypeUsingGETNotFound struct {
}

// IsSuccess returns true when this soft deleted entities by type using g e t not found response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities by type using g e t not found response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type using g e t not found response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities by type using g e t not found response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type using g e t not found response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the soft deleted entities by type using g e t not found response
func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) Code() int {
	return 404
}

func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETNotFound", 404)
}

func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeUsingGETNotFound", 404)
}

func (o *SoftDeletedEntitiesByTypeUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
