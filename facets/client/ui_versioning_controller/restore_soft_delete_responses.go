// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RestoreSoftDeleteReader is a Reader for the RestoreSoftDelete structure.
type RestoreSoftDeleteReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreSoftDeleteReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreSoftDeleteOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestoreSoftDeleteBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreSoftDeleteNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewRestoreSoftDeleteMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestoreSoftDeleteInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}] restoreSoftDelete", response, response.Code())
	}
}

// NewRestoreSoftDeleteOK creates a RestoreSoftDeleteOK with default headers values
func NewRestoreSoftDeleteOK() *RestoreSoftDeleteOK {
	return &RestoreSoftDeleteOK{}
}

/*
RestoreSoftDeleteOK describes a response with status code 200, with default header values.

OK
*/
type RestoreSoftDeleteOK struct {
	Payload string
}

// IsSuccess returns true when this restore soft delete o k response has a 2xx status code
func (o *RestoreSoftDeleteOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore soft delete o k response has a 3xx status code
func (o *RestoreSoftDeleteOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete o k response has a 4xx status code
func (o *RestoreSoftDeleteOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore soft delete o k response has a 5xx status code
func (o *RestoreSoftDeleteOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete o k response a status code equal to that given
func (o *RestoreSoftDeleteOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restore soft delete o k response
func (o *RestoreSoftDeleteOK) Code() int {
	return 200
}

func (o *RestoreSoftDeleteOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteOK %s", 200, payload)
}

func (o *RestoreSoftDeleteOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteOK %s", 200, payload)
}

func (o *RestoreSoftDeleteOK) GetPayload() string {
	return o.Payload
}

func (o *RestoreSoftDeleteOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreSoftDeleteBadRequest creates a RestoreSoftDeleteBadRequest with default headers values
func NewRestoreSoftDeleteBadRequest() *RestoreSoftDeleteBadRequest {
	return &RestoreSoftDeleteBadRequest{}
}

/*
RestoreSoftDeleteBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RestoreSoftDeleteBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore soft delete bad request response has a 2xx status code
func (o *RestoreSoftDeleteBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore soft delete bad request response has a 3xx status code
func (o *RestoreSoftDeleteBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete bad request response has a 4xx status code
func (o *RestoreSoftDeleteBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore soft delete bad request response has a 5xx status code
func (o *RestoreSoftDeleteBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete bad request response a status code equal to that given
func (o *RestoreSoftDeleteBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the restore soft delete bad request response
func (o *RestoreSoftDeleteBadRequest) Code() int {
	return 400
}

func (o *RestoreSoftDeleteBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteBadRequest %s", 400, payload)
}

func (o *RestoreSoftDeleteBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteBadRequest %s", 400, payload)
}

func (o *RestoreSoftDeleteBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreSoftDeleteBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreSoftDeleteNotFound creates a RestoreSoftDeleteNotFound with default headers values
func NewRestoreSoftDeleteNotFound() *RestoreSoftDeleteNotFound {
	return &RestoreSoftDeleteNotFound{}
}

/*
RestoreSoftDeleteNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RestoreSoftDeleteNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore soft delete not found response has a 2xx status code
func (o *RestoreSoftDeleteNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore soft delete not found response has a 3xx status code
func (o *RestoreSoftDeleteNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete not found response has a 4xx status code
func (o *RestoreSoftDeleteNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore soft delete not found response has a 5xx status code
func (o *RestoreSoftDeleteNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete not found response a status code equal to that given
func (o *RestoreSoftDeleteNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restore soft delete not found response
func (o *RestoreSoftDeleteNotFound) Code() int {
	return 404
}

func (o *RestoreSoftDeleteNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteNotFound %s", 404, payload)
}

func (o *RestoreSoftDeleteNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteNotFound %s", 404, payload)
}

func (o *RestoreSoftDeleteNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreSoftDeleteNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreSoftDeleteMethodNotAllowed creates a RestoreSoftDeleteMethodNotAllowed with default headers values
func NewRestoreSoftDeleteMethodNotAllowed() *RestoreSoftDeleteMethodNotAllowed {
	return &RestoreSoftDeleteMethodNotAllowed{}
}

/*
RestoreSoftDeleteMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type RestoreSoftDeleteMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore soft delete method not allowed response has a 2xx status code
func (o *RestoreSoftDeleteMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore soft delete method not allowed response has a 3xx status code
func (o *RestoreSoftDeleteMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete method not allowed response has a 4xx status code
func (o *RestoreSoftDeleteMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore soft delete method not allowed response has a 5xx status code
func (o *RestoreSoftDeleteMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete method not allowed response a status code equal to that given
func (o *RestoreSoftDeleteMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the restore soft delete method not allowed response
func (o *RestoreSoftDeleteMethodNotAllowed) Code() int {
	return 405
}

func (o *RestoreSoftDeleteMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteMethodNotAllowed %s", 405, payload)
}

func (o *RestoreSoftDeleteMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteMethodNotAllowed %s", 405, payload)
}

func (o *RestoreSoftDeleteMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreSoftDeleteMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreSoftDeleteInternalServerError creates a RestoreSoftDeleteInternalServerError with default headers values
func NewRestoreSoftDeleteInternalServerError() *RestoreSoftDeleteInternalServerError {
	return &RestoreSoftDeleteInternalServerError{}
}

/*
RestoreSoftDeleteInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RestoreSoftDeleteInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore soft delete internal server error response has a 2xx status code
func (o *RestoreSoftDeleteInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore soft delete internal server error response has a 3xx status code
func (o *RestoreSoftDeleteInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete internal server error response has a 4xx status code
func (o *RestoreSoftDeleteInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore soft delete internal server error response has a 5xx status code
func (o *RestoreSoftDeleteInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore soft delete internal server error response a status code equal to that given
func (o *RestoreSoftDeleteInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the restore soft delete internal server error response
func (o *RestoreSoftDeleteInternalServerError) Code() int {
	return 500
}

func (o *RestoreSoftDeleteInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteInternalServerError %s", 500, payload)
}

func (o *RestoreSoftDeleteInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteInternalServerError %s", 500, payload)
}

func (o *RestoreSoftDeleteInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreSoftDeleteInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
