// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RestoreUsingPOSTReader is a Reader for the RestoreUsingPOST structure.
type RestoreUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRestoreUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRestoreUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestoreUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/versions/{versionId}/restore] restoreUsingPOST", response, response.Code())
	}
}

// NewRestoreUsingPOSTOK creates a RestoreUsingPOSTOK with default headers values
func NewRestoreUsingPOSTOK() *RestoreUsingPOSTOK {
	return &RestoreUsingPOSTOK{}
}

/*
RestoreUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RestoreUsingPOSTOK struct {
	Payload interface{}
}

// IsSuccess returns true when this restore using p o s t o k response has a 2xx status code
func (o *RestoreUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore using p o s t o k response has a 3xx status code
func (o *RestoreUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore using p o s t o k response has a 4xx status code
func (o *RestoreUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore using p o s t o k response has a 5xx status code
func (o *RestoreUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore using p o s t o k response a status code equal to that given
func (o *RestoreUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restore using p o s t o k response
func (o *RestoreUsingPOSTOK) Code() int {
	return 200
}

func (o *RestoreUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTOK %s", 200, payload)
}

func (o *RestoreUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTOK %s", 200, payload)
}

func (o *RestoreUsingPOSTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreUsingPOSTCreated creates a RestoreUsingPOSTCreated with default headers values
func NewRestoreUsingPOSTCreated() *RestoreUsingPOSTCreated {
	return &RestoreUsingPOSTCreated{}
}

/*
RestoreUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RestoreUsingPOSTCreated struct {
}

// IsSuccess returns true when this restore using p o s t created response has a 2xx status code
func (o *RestoreUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore using p o s t created response has a 3xx status code
func (o *RestoreUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore using p o s t created response has a 4xx status code
func (o *RestoreUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore using p o s t created response has a 5xx status code
func (o *RestoreUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this restore using p o s t created response a status code equal to that given
func (o *RestoreUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the restore using p o s t created response
func (o *RestoreUsingPOSTCreated) Code() int {
	return 201
}

func (o *RestoreUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTCreated", 201)
}

func (o *RestoreUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTCreated", 201)
}

func (o *RestoreUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreUsingPOSTUnauthorized creates a RestoreUsingPOSTUnauthorized with default headers values
func NewRestoreUsingPOSTUnauthorized() *RestoreUsingPOSTUnauthorized {
	return &RestoreUsingPOSTUnauthorized{}
}

/*
RestoreUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RestoreUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this restore using p o s t unauthorized response has a 2xx status code
func (o *RestoreUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore using p o s t unauthorized response has a 3xx status code
func (o *RestoreUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore using p o s t unauthorized response has a 4xx status code
func (o *RestoreUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore using p o s t unauthorized response has a 5xx status code
func (o *RestoreUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore using p o s t unauthorized response a status code equal to that given
func (o *RestoreUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the restore using p o s t unauthorized response
func (o *RestoreUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RestoreUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTUnauthorized", 401)
}

func (o *RestoreUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTUnauthorized", 401)
}

func (o *RestoreUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreUsingPOSTForbidden creates a RestoreUsingPOSTForbidden with default headers values
func NewRestoreUsingPOSTForbidden() *RestoreUsingPOSTForbidden {
	return &RestoreUsingPOSTForbidden{}
}

/*
RestoreUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RestoreUsingPOSTForbidden struct {
}

// IsSuccess returns true when this restore using p o s t forbidden response has a 2xx status code
func (o *RestoreUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore using p o s t forbidden response has a 3xx status code
func (o *RestoreUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore using p o s t forbidden response has a 4xx status code
func (o *RestoreUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore using p o s t forbidden response has a 5xx status code
func (o *RestoreUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore using p o s t forbidden response a status code equal to that given
func (o *RestoreUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the restore using p o s t forbidden response
func (o *RestoreUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RestoreUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTForbidden", 403)
}

func (o *RestoreUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTForbidden", 403)
}

func (o *RestoreUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreUsingPOSTNotFound creates a RestoreUsingPOSTNotFound with default headers values
func NewRestoreUsingPOSTNotFound() *RestoreUsingPOSTNotFound {
	return &RestoreUsingPOSTNotFound{}
}

/*
RestoreUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RestoreUsingPOSTNotFound struct {
}

// IsSuccess returns true when this restore using p o s t not found response has a 2xx status code
func (o *RestoreUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore using p o s t not found response has a 3xx status code
func (o *RestoreUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore using p o s t not found response has a 4xx status code
func (o *RestoreUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore using p o s t not found response has a 5xx status code
func (o *RestoreUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore using p o s t not found response a status code equal to that given
func (o *RestoreUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restore using p o s t not found response
func (o *RestoreUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RestoreUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTNotFound", 404)
}

func (o *RestoreUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreUsingPOSTNotFound", 404)
}

func (o *RestoreUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
