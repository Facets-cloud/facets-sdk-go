// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SoftDeletedEntitiesByTypeReader is a Reader for the SoftDeletedEntitiesByType structure.
type SoftDeletedEntitiesByTypeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SoftDeletedEntitiesByTypeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSoftDeletedEntitiesByTypeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSoftDeletedEntitiesByTypeBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSoftDeletedEntitiesByTypeNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSoftDeletedEntitiesByTypeMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSoftDeletedEntitiesByTypeInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}] softDeletedEntitiesByType", response, response.Code())
	}
}

// NewSoftDeletedEntitiesByTypeOK creates a SoftDeletedEntitiesByTypeOK with default headers values
func NewSoftDeletedEntitiesByTypeOK() *SoftDeletedEntitiesByTypeOK {
	return &SoftDeletedEntitiesByTypeOK{}
}

/*
SoftDeletedEntitiesByTypeOK describes a response with status code 200, with default header values.

OK
*/
type SoftDeletedEntitiesByTypeOK struct {
	Payload []*models.DeletedEntitySoftDelete
}

// IsSuccess returns true when this soft deleted entities by type o k response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this soft deleted entities by type o k response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type o k response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this soft deleted entities by type o k response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeOK) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type o k response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the soft deleted entities by type o k response
func (o *SoftDeletedEntitiesByTypeOK) Code() int {
	return 200
}

func (o *SoftDeletedEntitiesByTypeOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeOK %s", 200, payload)
}

func (o *SoftDeletedEntitiesByTypeOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeOK %s", 200, payload)
}

func (o *SoftDeletedEntitiesByTypeOK) GetPayload() []*models.DeletedEntitySoftDelete {
	return o.Payload
}

func (o *SoftDeletedEntitiesByTypeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSoftDeletedEntitiesByTypeBadRequest creates a SoftDeletedEntitiesByTypeBadRequest with default headers values
func NewSoftDeletedEntitiesByTypeBadRequest() *SoftDeletedEntitiesByTypeBadRequest {
	return &SoftDeletedEntitiesByTypeBadRequest{}
}

/*
SoftDeletedEntitiesByTypeBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SoftDeletedEntitiesByTypeBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this soft deleted entities by type bad request response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities by type bad request response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type bad request response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities by type bad request response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type bad request response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the soft deleted entities by type bad request response
func (o *SoftDeletedEntitiesByTypeBadRequest) Code() int {
	return 400
}

func (o *SoftDeletedEntitiesByTypeBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeBadRequest %s", 400, payload)
}

func (o *SoftDeletedEntitiesByTypeBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeBadRequest %s", 400, payload)
}

func (o *SoftDeletedEntitiesByTypeBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SoftDeletedEntitiesByTypeBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSoftDeletedEntitiesByTypeNotFound creates a SoftDeletedEntitiesByTypeNotFound with default headers values
func NewSoftDeletedEntitiesByTypeNotFound() *SoftDeletedEntitiesByTypeNotFound {
	return &SoftDeletedEntitiesByTypeNotFound{}
}

/*
SoftDeletedEntitiesByTypeNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SoftDeletedEntitiesByTypeNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this soft deleted entities by type not found response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities by type not found response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type not found response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities by type not found response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type not found response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the soft deleted entities by type not found response
func (o *SoftDeletedEntitiesByTypeNotFound) Code() int {
	return 404
}

func (o *SoftDeletedEntitiesByTypeNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeNotFound %s", 404, payload)
}

func (o *SoftDeletedEntitiesByTypeNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeNotFound %s", 404, payload)
}

func (o *SoftDeletedEntitiesByTypeNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SoftDeletedEntitiesByTypeNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSoftDeletedEntitiesByTypeMethodNotAllowed creates a SoftDeletedEntitiesByTypeMethodNotAllowed with default headers values
func NewSoftDeletedEntitiesByTypeMethodNotAllowed() *SoftDeletedEntitiesByTypeMethodNotAllowed {
	return &SoftDeletedEntitiesByTypeMethodNotAllowed{}
}

/*
SoftDeletedEntitiesByTypeMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SoftDeletedEntitiesByTypeMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this soft deleted entities by type method not allowed response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities by type method not allowed response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type method not allowed response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this soft deleted entities by type method not allowed response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this soft deleted entities by type method not allowed response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the soft deleted entities by type method not allowed response
func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) Code() int {
	return 405
}

func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeMethodNotAllowed %s", 405, payload)
}

func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeMethodNotAllowed %s", 405, payload)
}

func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SoftDeletedEntitiesByTypeMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSoftDeletedEntitiesByTypeInternalServerError creates a SoftDeletedEntitiesByTypeInternalServerError with default headers values
func NewSoftDeletedEntitiesByTypeInternalServerError() *SoftDeletedEntitiesByTypeInternalServerError {
	return &SoftDeletedEntitiesByTypeInternalServerError{}
}

/*
SoftDeletedEntitiesByTypeInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SoftDeletedEntitiesByTypeInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this soft deleted entities by type internal server error response has a 2xx status code
func (o *SoftDeletedEntitiesByTypeInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this soft deleted entities by type internal server error response has a 3xx status code
func (o *SoftDeletedEntitiesByTypeInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this soft deleted entities by type internal server error response has a 4xx status code
func (o *SoftDeletedEntitiesByTypeInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this soft deleted entities by type internal server error response has a 5xx status code
func (o *SoftDeletedEntitiesByTypeInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this soft deleted entities by type internal server error response a status code equal to that given
func (o *SoftDeletedEntitiesByTypeInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the soft deleted entities by type internal server error response
func (o *SoftDeletedEntitiesByTypeInternalServerError) Code() int {
	return 500
}

func (o *SoftDeletedEntitiesByTypeInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeInternalServerError %s", 500, payload)
}

func (o *SoftDeletedEntitiesByTypeInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/versions/softDeletedEntities/{entityType}][%d] softDeletedEntitiesByTypeInternalServerError %s", 500, payload)
}

func (o *SoftDeletedEntitiesByTypeInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SoftDeletedEntitiesByTypeInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
