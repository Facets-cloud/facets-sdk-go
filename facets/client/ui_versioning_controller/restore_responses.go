// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RestoreReader is a Reader for the Restore structure.
type RestoreReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRestoreBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewRestoreMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRestoreInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/versions/{versionId}/restore] restore", response, response.Code())
	}
}

// NewRestoreOK creates a RestoreOK with default headers values
func NewRestoreOK() *RestoreOK {
	return &RestoreOK{}
}

/*
RestoreOK describes a response with status code 200, with default header values.

OK
*/
type RestoreOK struct {
	Payload interface{}
}

// IsSuccess returns true when this restore o k response has a 2xx status code
func (o *RestoreOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore o k response has a 3xx status code
func (o *RestoreOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore o k response has a 4xx status code
func (o *RestoreOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore o k response has a 5xx status code
func (o *RestoreOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore o k response a status code equal to that given
func (o *RestoreOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restore o k response
func (o *RestoreOK) Code() int {
	return 200
}

func (o *RestoreOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreOK %s", 200, payload)
}

func (o *RestoreOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreOK %s", 200, payload)
}

func (o *RestoreOK) GetPayload() interface{} {
	return o.Payload
}

func (o *RestoreOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreBadRequest creates a RestoreBadRequest with default headers values
func NewRestoreBadRequest() *RestoreBadRequest {
	return &RestoreBadRequest{}
}

/*
RestoreBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RestoreBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore bad request response has a 2xx status code
func (o *RestoreBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore bad request response has a 3xx status code
func (o *RestoreBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore bad request response has a 4xx status code
func (o *RestoreBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore bad request response has a 5xx status code
func (o *RestoreBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this restore bad request response a status code equal to that given
func (o *RestoreBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the restore bad request response
func (o *RestoreBadRequest) Code() int {
	return 400
}

func (o *RestoreBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreBadRequest %s", 400, payload)
}

func (o *RestoreBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreBadRequest %s", 400, payload)
}

func (o *RestoreBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreNotFound creates a RestoreNotFound with default headers values
func NewRestoreNotFound() *RestoreNotFound {
	return &RestoreNotFound{}
}

/*
RestoreNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RestoreNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore not found response has a 2xx status code
func (o *RestoreNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore not found response has a 3xx status code
func (o *RestoreNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore not found response has a 4xx status code
func (o *RestoreNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore not found response has a 5xx status code
func (o *RestoreNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore not found response a status code equal to that given
func (o *RestoreNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restore not found response
func (o *RestoreNotFound) Code() int {
	return 404
}

func (o *RestoreNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreNotFound %s", 404, payload)
}

func (o *RestoreNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreNotFound %s", 404, payload)
}

func (o *RestoreNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreMethodNotAllowed creates a RestoreMethodNotAllowed with default headers values
func NewRestoreMethodNotAllowed() *RestoreMethodNotAllowed {
	return &RestoreMethodNotAllowed{}
}

/*
RestoreMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type RestoreMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore method not allowed response has a 2xx status code
func (o *RestoreMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore method not allowed response has a 3xx status code
func (o *RestoreMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore method not allowed response has a 4xx status code
func (o *RestoreMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore method not allowed response has a 5xx status code
func (o *RestoreMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this restore method not allowed response a status code equal to that given
func (o *RestoreMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the restore method not allowed response
func (o *RestoreMethodNotAllowed) Code() int {
	return 405
}

func (o *RestoreMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreMethodNotAllowed %s", 405, payload)
}

func (o *RestoreMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreMethodNotAllowed %s", 405, payload)
}

func (o *RestoreMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreInternalServerError creates a RestoreInternalServerError with default headers values
func NewRestoreInternalServerError() *RestoreInternalServerError {
	return &RestoreInternalServerError{}
}

/*
RestoreInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RestoreInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this restore internal server error response has a 2xx status code
func (o *RestoreInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore internal server error response has a 3xx status code
func (o *RestoreInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore internal server error response has a 4xx status code
func (o *RestoreInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore internal server error response has a 5xx status code
func (o *RestoreInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this restore internal server error response a status code equal to that given
func (o *RestoreInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the restore internal server error response
func (o *RestoreInternalServerError) Code() int {
	return 500
}

func (o *RestoreInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreInternalServerError %s", 500, payload)
}

func (o *RestoreInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/{versionId}/restore][%d] restoreInternalServerError %s", 500, payload)
}

func (o *RestoreInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RestoreInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
