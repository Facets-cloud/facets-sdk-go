// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewSoftDeletedEntitiesByTypeParams creates a new SoftDeletedEntitiesByTypeParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSoftDeletedEntitiesByTypeParams() *SoftDeletedEntitiesByTypeParams {
	return &SoftDeletedEntitiesByTypeParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSoftDeletedEntitiesByTypeParamsWithTimeout creates a new SoftDeletedEntitiesByTypeParams object
// with the ability to set a timeout on a request.
func NewSoftDeletedEntitiesByTypeParamsWithTimeout(timeout time.Duration) *SoftDeletedEntitiesByTypeParams {
	return &SoftDeletedEntitiesByTypeParams{
		timeout: timeout,
	}
}

// NewSoftDeletedEntitiesByTypeParamsWithContext creates a new SoftDeletedEntitiesByTypeParams object
// with the ability to set a context for a request.
func NewSoftDeletedEntitiesByTypeParamsWithContext(ctx context.Context) *SoftDeletedEntitiesByTypeParams {
	return &SoftDeletedEntitiesByTypeParams{
		Context: ctx,
	}
}

// NewSoftDeletedEntitiesByTypeParamsWithHTTPClient creates a new SoftDeletedEntitiesByTypeParams object
// with the ability to set a custom HTTPClient for a request.
func NewSoftDeletedEntitiesByTypeParamsWithHTTPClient(client *http.Client) *SoftDeletedEntitiesByTypeParams {
	return &SoftDeletedEntitiesByTypeParams{
		HTTPClient: client,
	}
}

/*
SoftDeletedEntitiesByTypeParams contains all the parameters to send to the API endpoint

	for the soft deleted entities by type operation.

	Typically these are written to a http.Request.
*/
type SoftDeletedEntitiesByTypeParams struct {

	// EntityType.
	EntityType string

	// Page.
	Page *string

	// PerPage.
	PerPage *string

	// SortBy.
	SortBy *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the soft deleted entities by type params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SoftDeletedEntitiesByTypeParams) WithDefaults() *SoftDeletedEntitiesByTypeParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the soft deleted entities by type params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SoftDeletedEntitiesByTypeParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) WithTimeout(timeout time.Duration) *SoftDeletedEntitiesByTypeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) WithContext(ctx context.Context) *SoftDeletedEntitiesByTypeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) WithHTTPClient(client *http.Client) *SoftDeletedEntitiesByTypeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEntityType adds the entityType to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) WithEntityType(entityType string) *SoftDeletedEntitiesByTypeParams {
	o.SetEntityType(entityType)
	return o
}

// SetEntityType adds the entityType to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) SetEntityType(entityType string) {
	o.EntityType = entityType
}

// WithPage adds the page to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) WithPage(page *string) *SoftDeletedEntitiesByTypeParams {
	o.SetPage(page)
	return o
}

// SetPage adds the page to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) SetPage(page *string) {
	o.Page = page
}

// WithPerPage adds the perPage to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) WithPerPage(perPage *string) *SoftDeletedEntitiesByTypeParams {
	o.SetPerPage(perPage)
	return o
}

// SetPerPage adds the perPage to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) SetPerPage(perPage *string) {
	o.PerPage = perPage
}

// WithSortBy adds the sortBy to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) WithSortBy(sortBy *string) *SoftDeletedEntitiesByTypeParams {
	o.SetSortBy(sortBy)
	return o
}

// SetSortBy adds the sortBy to the soft deleted entities by type params
func (o *SoftDeletedEntitiesByTypeParams) SetSortBy(sortBy *string) {
	o.SortBy = sortBy
}

// WriteToRequest writes these params to a swagger request
func (o *SoftDeletedEntitiesByTypeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param entityType
	if err := r.SetPathParam("entityType", o.EntityType); err != nil {
		return err
	}

	if o.Page != nil {

		// query param page
		var qrPage string

		if o.Page != nil {
			qrPage = *o.Page
		}
		qPage := qrPage
		if qPage != "" {

			if err := r.SetQueryParam("page", qPage); err != nil {
				return err
			}
		}
	}

	if o.PerPage != nil {

		// query param perPage
		var qrPerPage string

		if o.PerPage != nil {
			qrPerPage = *o.PerPage
		}
		qPerPage := qrPerPage
		if qPerPage != "" {

			if err := r.SetQueryParam("perPage", qPerPage); err != nil {
				return err
			}
		}
	}

	if o.SortBy != nil {

		// query param sortBy
		var qrSortBy string

		if o.SortBy != nil {
			qrSortBy = *o.SortBy
		}
		qSortBy := qrSortBy
		if qSortBy != "" {

			if err := r.SetQueryParam("sortBy", qSortBy); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
