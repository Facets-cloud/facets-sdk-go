// Code generated by go-swagger; DO NOT EDIT.

package ui_versioning_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RestoreSoftDeleteUsingPOSTReader is a Reader for the RestoreSoftDeleteUsingPOST structure.
type RestoreSoftDeleteUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RestoreSoftDeleteUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRestoreSoftDeleteUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRestoreSoftDeleteUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRestoreSoftDeleteUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRestoreSoftDeleteUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRestoreSoftDeleteUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}] restoreSoftDeleteUsingPOST", response, response.Code())
	}
}

// NewRestoreSoftDeleteUsingPOSTOK creates a RestoreSoftDeleteUsingPOSTOK with default headers values
func NewRestoreSoftDeleteUsingPOSTOK() *RestoreSoftDeleteUsingPOSTOK {
	return &RestoreSoftDeleteUsingPOSTOK{}
}

/*
RestoreSoftDeleteUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RestoreSoftDeleteUsingPOSTOK struct {
	Payload string
}

// IsSuccess returns true when this restore soft delete using p o s t o k response has a 2xx status code
func (o *RestoreSoftDeleteUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore soft delete using p o s t o k response has a 3xx status code
func (o *RestoreSoftDeleteUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete using p o s t o k response has a 4xx status code
func (o *RestoreSoftDeleteUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore soft delete using p o s t o k response has a 5xx status code
func (o *RestoreSoftDeleteUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete using p o s t o k response a status code equal to that given
func (o *RestoreSoftDeleteUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the restore soft delete using p o s t o k response
func (o *RestoreSoftDeleteUsingPOSTOK) Code() int {
	return 200
}

func (o *RestoreSoftDeleteUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTOK %s", 200, payload)
}

func (o *RestoreSoftDeleteUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTOK %s", 200, payload)
}

func (o *RestoreSoftDeleteUsingPOSTOK) GetPayload() string {
	return o.Payload
}

func (o *RestoreSoftDeleteUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRestoreSoftDeleteUsingPOSTCreated creates a RestoreSoftDeleteUsingPOSTCreated with default headers values
func NewRestoreSoftDeleteUsingPOSTCreated() *RestoreSoftDeleteUsingPOSTCreated {
	return &RestoreSoftDeleteUsingPOSTCreated{}
}

/*
RestoreSoftDeleteUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RestoreSoftDeleteUsingPOSTCreated struct {
}

// IsSuccess returns true when this restore soft delete using p o s t created response has a 2xx status code
func (o *RestoreSoftDeleteUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this restore soft delete using p o s t created response has a 3xx status code
func (o *RestoreSoftDeleteUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete using p o s t created response has a 4xx status code
func (o *RestoreSoftDeleteUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this restore soft delete using p o s t created response has a 5xx status code
func (o *RestoreSoftDeleteUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete using p o s t created response a status code equal to that given
func (o *RestoreSoftDeleteUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the restore soft delete using p o s t created response
func (o *RestoreSoftDeleteUsingPOSTCreated) Code() int {
	return 201
}

func (o *RestoreSoftDeleteUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTCreated", 201)
}

func (o *RestoreSoftDeleteUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTCreated", 201)
}

func (o *RestoreSoftDeleteUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreSoftDeleteUsingPOSTUnauthorized creates a RestoreSoftDeleteUsingPOSTUnauthorized with default headers values
func NewRestoreSoftDeleteUsingPOSTUnauthorized() *RestoreSoftDeleteUsingPOSTUnauthorized {
	return &RestoreSoftDeleteUsingPOSTUnauthorized{}
}

/*
RestoreSoftDeleteUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RestoreSoftDeleteUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this restore soft delete using p o s t unauthorized response has a 2xx status code
func (o *RestoreSoftDeleteUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore soft delete using p o s t unauthorized response has a 3xx status code
func (o *RestoreSoftDeleteUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete using p o s t unauthorized response has a 4xx status code
func (o *RestoreSoftDeleteUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore soft delete using p o s t unauthorized response has a 5xx status code
func (o *RestoreSoftDeleteUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete using p o s t unauthorized response a status code equal to that given
func (o *RestoreSoftDeleteUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the restore soft delete using p o s t unauthorized response
func (o *RestoreSoftDeleteUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RestoreSoftDeleteUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTUnauthorized", 401)
}

func (o *RestoreSoftDeleteUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTUnauthorized", 401)
}

func (o *RestoreSoftDeleteUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreSoftDeleteUsingPOSTForbidden creates a RestoreSoftDeleteUsingPOSTForbidden with default headers values
func NewRestoreSoftDeleteUsingPOSTForbidden() *RestoreSoftDeleteUsingPOSTForbidden {
	return &RestoreSoftDeleteUsingPOSTForbidden{}
}

/*
RestoreSoftDeleteUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RestoreSoftDeleteUsingPOSTForbidden struct {
}

// IsSuccess returns true when this restore soft delete using p o s t forbidden response has a 2xx status code
func (o *RestoreSoftDeleteUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore soft delete using p o s t forbidden response has a 3xx status code
func (o *RestoreSoftDeleteUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete using p o s t forbidden response has a 4xx status code
func (o *RestoreSoftDeleteUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore soft delete using p o s t forbidden response has a 5xx status code
func (o *RestoreSoftDeleteUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete using p o s t forbidden response a status code equal to that given
func (o *RestoreSoftDeleteUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the restore soft delete using p o s t forbidden response
func (o *RestoreSoftDeleteUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RestoreSoftDeleteUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTForbidden", 403)
}

func (o *RestoreSoftDeleteUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTForbidden", 403)
}

func (o *RestoreSoftDeleteUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRestoreSoftDeleteUsingPOSTNotFound creates a RestoreSoftDeleteUsingPOSTNotFound with default headers values
func NewRestoreSoftDeleteUsingPOSTNotFound() *RestoreSoftDeleteUsingPOSTNotFound {
	return &RestoreSoftDeleteUsingPOSTNotFound{}
}

/*
RestoreSoftDeleteUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RestoreSoftDeleteUsingPOSTNotFound struct {
}

// IsSuccess returns true when this restore soft delete using p o s t not found response has a 2xx status code
func (o *RestoreSoftDeleteUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this restore soft delete using p o s t not found response has a 3xx status code
func (o *RestoreSoftDeleteUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this restore soft delete using p o s t not found response has a 4xx status code
func (o *RestoreSoftDeleteUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this restore soft delete using p o s t not found response has a 5xx status code
func (o *RestoreSoftDeleteUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this restore soft delete using p o s t not found response a status code equal to that given
func (o *RestoreSoftDeleteUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the restore soft delete using p o s t not found response
func (o *RestoreSoftDeleteUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RestoreSoftDeleteUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTNotFound", 404)
}

func (o *RestoreSoftDeleteUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/versions/softDeletedEntities/{entityId}][%d] restoreSoftDeleteUsingPOSTNotFound", 404)
}

func (o *RestoreSoftDeleteUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
