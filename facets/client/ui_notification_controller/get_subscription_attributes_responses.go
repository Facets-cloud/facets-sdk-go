// Code generated by go-swagger; DO NOT EDIT.

package ui_notification_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetSubscriptionAttributesReader is a Reader for the GetSubscriptionAttributes structure.
type GetSubscriptionAttributesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSubscriptionAttributesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSubscriptionAttributesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetSubscriptionAttributesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSubscriptionAttributesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetSubscriptionAttributesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetSubscriptionAttributesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes] getSubscriptionAttributes", response, response.Code())
	}
}

// NewGetSubscriptionAttributesOK creates a GetSubscriptionAttributesOK with default headers values
func NewGetSubscriptionAttributesOK() *GetSubscriptionAttributesOK {
	return &GetSubscriptionAttributesOK{}
}

/*
GetSubscriptionAttributesOK describes a response with status code 200, with default header values.

OK
*/
type GetSubscriptionAttributesOK struct {
	Payload []string
}

// IsSuccess returns true when this get subscription attributes o k response has a 2xx status code
func (o *GetSubscriptionAttributesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get subscription attributes o k response has a 3xx status code
func (o *GetSubscriptionAttributesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subscription attributes o k response has a 4xx status code
func (o *GetSubscriptionAttributesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subscription attributes o k response has a 5xx status code
func (o *GetSubscriptionAttributesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get subscription attributes o k response a status code equal to that given
func (o *GetSubscriptionAttributesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get subscription attributes o k response
func (o *GetSubscriptionAttributesOK) Code() int {
	return 200
}

func (o *GetSubscriptionAttributesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesOK %s", 200, payload)
}

func (o *GetSubscriptionAttributesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesOK %s", 200, payload)
}

func (o *GetSubscriptionAttributesOK) GetPayload() []string {
	return o.Payload
}

func (o *GetSubscriptionAttributesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubscriptionAttributesBadRequest creates a GetSubscriptionAttributesBadRequest with default headers values
func NewGetSubscriptionAttributesBadRequest() *GetSubscriptionAttributesBadRequest {
	return &GetSubscriptionAttributesBadRequest{}
}

/*
GetSubscriptionAttributesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetSubscriptionAttributesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get subscription attributes bad request response has a 2xx status code
func (o *GetSubscriptionAttributesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subscription attributes bad request response has a 3xx status code
func (o *GetSubscriptionAttributesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subscription attributes bad request response has a 4xx status code
func (o *GetSubscriptionAttributesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subscription attributes bad request response has a 5xx status code
func (o *GetSubscriptionAttributesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get subscription attributes bad request response a status code equal to that given
func (o *GetSubscriptionAttributesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get subscription attributes bad request response
func (o *GetSubscriptionAttributesBadRequest) Code() int {
	return 400
}

func (o *GetSubscriptionAttributesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesBadRequest %s", 400, payload)
}

func (o *GetSubscriptionAttributesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesBadRequest %s", 400, payload)
}

func (o *GetSubscriptionAttributesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSubscriptionAttributesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubscriptionAttributesNotFound creates a GetSubscriptionAttributesNotFound with default headers values
func NewGetSubscriptionAttributesNotFound() *GetSubscriptionAttributesNotFound {
	return &GetSubscriptionAttributesNotFound{}
}

/*
GetSubscriptionAttributesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSubscriptionAttributesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get subscription attributes not found response has a 2xx status code
func (o *GetSubscriptionAttributesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subscription attributes not found response has a 3xx status code
func (o *GetSubscriptionAttributesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subscription attributes not found response has a 4xx status code
func (o *GetSubscriptionAttributesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subscription attributes not found response has a 5xx status code
func (o *GetSubscriptionAttributesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get subscription attributes not found response a status code equal to that given
func (o *GetSubscriptionAttributesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get subscription attributes not found response
func (o *GetSubscriptionAttributesNotFound) Code() int {
	return 404
}

func (o *GetSubscriptionAttributesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesNotFound %s", 404, payload)
}

func (o *GetSubscriptionAttributesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesNotFound %s", 404, payload)
}

func (o *GetSubscriptionAttributesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSubscriptionAttributesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubscriptionAttributesMethodNotAllowed creates a GetSubscriptionAttributesMethodNotAllowed with default headers values
func NewGetSubscriptionAttributesMethodNotAllowed() *GetSubscriptionAttributesMethodNotAllowed {
	return &GetSubscriptionAttributesMethodNotAllowed{}
}

/*
GetSubscriptionAttributesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetSubscriptionAttributesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get subscription attributes method not allowed response has a 2xx status code
func (o *GetSubscriptionAttributesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subscription attributes method not allowed response has a 3xx status code
func (o *GetSubscriptionAttributesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subscription attributes method not allowed response has a 4xx status code
func (o *GetSubscriptionAttributesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get subscription attributes method not allowed response has a 5xx status code
func (o *GetSubscriptionAttributesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get subscription attributes method not allowed response a status code equal to that given
func (o *GetSubscriptionAttributesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get subscription attributes method not allowed response
func (o *GetSubscriptionAttributesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetSubscriptionAttributesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesMethodNotAllowed %s", 405, payload)
}

func (o *GetSubscriptionAttributesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesMethodNotAllowed %s", 405, payload)
}

func (o *GetSubscriptionAttributesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSubscriptionAttributesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSubscriptionAttributesInternalServerError creates a GetSubscriptionAttributesInternalServerError with default headers values
func NewGetSubscriptionAttributesInternalServerError() *GetSubscriptionAttributesInternalServerError {
	return &GetSubscriptionAttributesInternalServerError{}
}

/*
GetSubscriptionAttributesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetSubscriptionAttributesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get subscription attributes internal server error response has a 2xx status code
func (o *GetSubscriptionAttributesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get subscription attributes internal server error response has a 3xx status code
func (o *GetSubscriptionAttributesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get subscription attributes internal server error response has a 4xx status code
func (o *GetSubscriptionAttributesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get subscription attributes internal server error response has a 5xx status code
func (o *GetSubscriptionAttributesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get subscription attributes internal server error response a status code equal to that given
func (o *GetSubscriptionAttributesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get subscription attributes internal server error response
func (o *GetSubscriptionAttributesInternalServerError) Code() int {
	return 500
}

func (o *GetSubscriptionAttributesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesInternalServerError %s", 500, payload)
}

func (o *GetSubscriptionAttributesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationType/{notificationType}/attributes][%d] getSubscriptionAttributesInternalServerError %s", 500, payload)
}

func (o *GetSubscriptionAttributesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetSubscriptionAttributesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
