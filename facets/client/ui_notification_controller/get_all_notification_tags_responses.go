// Code generated by go-swagger; DO NOT EDIT.

package ui_notification_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllNotificationTagsReader is a Reader for the GetAllNotificationTags structure.
type GetAllNotificationTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllNotificationTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllNotificationTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllNotificationTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllNotificationTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllNotificationTagsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllNotificationTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/notification/notificationTags] getAllNotificationTags", response, response.Code())
	}
}

// NewGetAllNotificationTagsOK creates a GetAllNotificationTagsOK with default headers values
func NewGetAllNotificationTagsOK() *GetAllNotificationTagsOK {
	return &GetAllNotificationTagsOK{}
}

/*
GetAllNotificationTagsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllNotificationTagsOK struct {
	Payload []*models.NotificationTagPayload
}

// IsSuccess returns true when this get all notification tags o k response has a 2xx status code
func (o *GetAllNotificationTagsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all notification tags o k response has a 3xx status code
func (o *GetAllNotificationTagsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags o k response has a 4xx status code
func (o *GetAllNotificationTagsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all notification tags o k response has a 5xx status code
func (o *GetAllNotificationTagsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags o k response a status code equal to that given
func (o *GetAllNotificationTagsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all notification tags o k response
func (o *GetAllNotificationTagsOK) Code() int {
	return 200
}

func (o *GetAllNotificationTagsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsOK %s", 200, payload)
}

func (o *GetAllNotificationTagsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsOK %s", 200, payload)
}

func (o *GetAllNotificationTagsOK) GetPayload() []*models.NotificationTagPayload {
	return o.Payload
}

func (o *GetAllNotificationTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNotificationTagsBadRequest creates a GetAllNotificationTagsBadRequest with default headers values
func NewGetAllNotificationTagsBadRequest() *GetAllNotificationTagsBadRequest {
	return &GetAllNotificationTagsBadRequest{}
}

/*
GetAllNotificationTagsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllNotificationTagsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all notification tags bad request response has a 2xx status code
func (o *GetAllNotificationTagsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all notification tags bad request response has a 3xx status code
func (o *GetAllNotificationTagsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags bad request response has a 4xx status code
func (o *GetAllNotificationTagsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all notification tags bad request response has a 5xx status code
func (o *GetAllNotificationTagsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags bad request response a status code equal to that given
func (o *GetAllNotificationTagsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all notification tags bad request response
func (o *GetAllNotificationTagsBadRequest) Code() int {
	return 400
}

func (o *GetAllNotificationTagsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsBadRequest %s", 400, payload)
}

func (o *GetAllNotificationTagsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsBadRequest %s", 400, payload)
}

func (o *GetAllNotificationTagsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllNotificationTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNotificationTagsNotFound creates a GetAllNotificationTagsNotFound with default headers values
func NewGetAllNotificationTagsNotFound() *GetAllNotificationTagsNotFound {
	return &GetAllNotificationTagsNotFound{}
}

/*
GetAllNotificationTagsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllNotificationTagsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all notification tags not found response has a 2xx status code
func (o *GetAllNotificationTagsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all notification tags not found response has a 3xx status code
func (o *GetAllNotificationTagsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags not found response has a 4xx status code
func (o *GetAllNotificationTagsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all notification tags not found response has a 5xx status code
func (o *GetAllNotificationTagsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags not found response a status code equal to that given
func (o *GetAllNotificationTagsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all notification tags not found response
func (o *GetAllNotificationTagsNotFound) Code() int {
	return 404
}

func (o *GetAllNotificationTagsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsNotFound %s", 404, payload)
}

func (o *GetAllNotificationTagsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsNotFound %s", 404, payload)
}

func (o *GetAllNotificationTagsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllNotificationTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNotificationTagsMethodNotAllowed creates a GetAllNotificationTagsMethodNotAllowed with default headers values
func NewGetAllNotificationTagsMethodNotAllowed() *GetAllNotificationTagsMethodNotAllowed {
	return &GetAllNotificationTagsMethodNotAllowed{}
}

/*
GetAllNotificationTagsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllNotificationTagsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all notification tags method not allowed response has a 2xx status code
func (o *GetAllNotificationTagsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all notification tags method not allowed response has a 3xx status code
func (o *GetAllNotificationTagsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags method not allowed response has a 4xx status code
func (o *GetAllNotificationTagsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all notification tags method not allowed response has a 5xx status code
func (o *GetAllNotificationTagsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags method not allowed response a status code equal to that given
func (o *GetAllNotificationTagsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all notification tags method not allowed response
func (o *GetAllNotificationTagsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllNotificationTagsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllNotificationTagsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllNotificationTagsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllNotificationTagsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNotificationTagsInternalServerError creates a GetAllNotificationTagsInternalServerError with default headers values
func NewGetAllNotificationTagsInternalServerError() *GetAllNotificationTagsInternalServerError {
	return &GetAllNotificationTagsInternalServerError{}
}

/*
GetAllNotificationTagsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllNotificationTagsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all notification tags internal server error response has a 2xx status code
func (o *GetAllNotificationTagsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all notification tags internal server error response has a 3xx status code
func (o *GetAllNotificationTagsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags internal server error response has a 4xx status code
func (o *GetAllNotificationTagsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all notification tags internal server error response has a 5xx status code
func (o *GetAllNotificationTagsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all notification tags internal server error response a status code equal to that given
func (o *GetAllNotificationTagsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all notification tags internal server error response
func (o *GetAllNotificationTagsInternalServerError) Code() int {
	return 500
}

func (o *GetAllNotificationTagsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsInternalServerError %s", 500, payload)
}

func (o *GetAllNotificationTagsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsInternalServerError %s", 500, payload)
}

func (o *GetAllNotificationTagsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllNotificationTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
