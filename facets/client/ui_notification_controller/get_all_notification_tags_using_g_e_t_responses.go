// Code generated by go-swagger; DO NOT EDIT.

package ui_notification_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllNotificationTagsUsingGETReader is a Reader for the GetAllNotificationTagsUsingGET structure.
type GetAllNotificationTagsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllNotificationTagsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllNotificationTagsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllNotificationTagsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllNotificationTagsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllNotificationTagsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/notification/notificationTags] getAllNotificationTagsUsingGET", response, response.Code())
	}
}

// NewGetAllNotificationTagsUsingGETOK creates a GetAllNotificationTagsUsingGETOK with default headers values
func NewGetAllNotificationTagsUsingGETOK() *GetAllNotificationTagsUsingGETOK {
	return &GetAllNotificationTagsUsingGETOK{}
}

/*
GetAllNotificationTagsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllNotificationTagsUsingGETOK struct {
	Payload []*models.NotificationTagPayload
}

// IsSuccess returns true when this get all notification tags using g e t o k response has a 2xx status code
func (o *GetAllNotificationTagsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all notification tags using g e t o k response has a 3xx status code
func (o *GetAllNotificationTagsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags using g e t o k response has a 4xx status code
func (o *GetAllNotificationTagsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all notification tags using g e t o k response has a 5xx status code
func (o *GetAllNotificationTagsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags using g e t o k response a status code equal to that given
func (o *GetAllNotificationTagsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all notification tags using g e t o k response
func (o *GetAllNotificationTagsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllNotificationTagsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETOK %s", 200, payload)
}

func (o *GetAllNotificationTagsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETOK %s", 200, payload)
}

func (o *GetAllNotificationTagsUsingGETOK) GetPayload() []*models.NotificationTagPayload {
	return o.Payload
}

func (o *GetAllNotificationTagsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllNotificationTagsUsingGETUnauthorized creates a GetAllNotificationTagsUsingGETUnauthorized with default headers values
func NewGetAllNotificationTagsUsingGETUnauthorized() *GetAllNotificationTagsUsingGETUnauthorized {
	return &GetAllNotificationTagsUsingGETUnauthorized{}
}

/*
GetAllNotificationTagsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllNotificationTagsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all notification tags using g e t unauthorized response has a 2xx status code
func (o *GetAllNotificationTagsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all notification tags using g e t unauthorized response has a 3xx status code
func (o *GetAllNotificationTagsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags using g e t unauthorized response has a 4xx status code
func (o *GetAllNotificationTagsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all notification tags using g e t unauthorized response has a 5xx status code
func (o *GetAllNotificationTagsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags using g e t unauthorized response a status code equal to that given
func (o *GetAllNotificationTagsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all notification tags using g e t unauthorized response
func (o *GetAllNotificationTagsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllNotificationTagsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETUnauthorized", 401)
}

func (o *GetAllNotificationTagsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETUnauthorized", 401)
}

func (o *GetAllNotificationTagsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllNotificationTagsUsingGETForbidden creates a GetAllNotificationTagsUsingGETForbidden with default headers values
func NewGetAllNotificationTagsUsingGETForbidden() *GetAllNotificationTagsUsingGETForbidden {
	return &GetAllNotificationTagsUsingGETForbidden{}
}

/*
GetAllNotificationTagsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllNotificationTagsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all notification tags using g e t forbidden response has a 2xx status code
func (o *GetAllNotificationTagsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all notification tags using g e t forbidden response has a 3xx status code
func (o *GetAllNotificationTagsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags using g e t forbidden response has a 4xx status code
func (o *GetAllNotificationTagsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all notification tags using g e t forbidden response has a 5xx status code
func (o *GetAllNotificationTagsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags using g e t forbidden response a status code equal to that given
func (o *GetAllNotificationTagsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all notification tags using g e t forbidden response
func (o *GetAllNotificationTagsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllNotificationTagsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETForbidden", 403)
}

func (o *GetAllNotificationTagsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETForbidden", 403)
}

func (o *GetAllNotificationTagsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllNotificationTagsUsingGETNotFound creates a GetAllNotificationTagsUsingGETNotFound with default headers values
func NewGetAllNotificationTagsUsingGETNotFound() *GetAllNotificationTagsUsingGETNotFound {
	return &GetAllNotificationTagsUsingGETNotFound{}
}

/*
GetAllNotificationTagsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllNotificationTagsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all notification tags using g e t not found response has a 2xx status code
func (o *GetAllNotificationTagsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all notification tags using g e t not found response has a 3xx status code
func (o *GetAllNotificationTagsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all notification tags using g e t not found response has a 4xx status code
func (o *GetAllNotificationTagsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all notification tags using g e t not found response has a 5xx status code
func (o *GetAllNotificationTagsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all notification tags using g e t not found response a status code equal to that given
func (o *GetAllNotificationTagsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all notification tags using g e t not found response
func (o *GetAllNotificationTagsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllNotificationTagsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETNotFound", 404)
}

func (o *GetAllNotificationTagsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/notification/notificationTags][%d] getAllNotificationTagsUsingGETNotFound", 404)
}

func (o *GetAllNotificationTagsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
