// Code generated by go-swagger; DO NOT EDIT.

package ui_notification_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// EditNotificationChannelReader is a Reader for the EditNotificationChannel structure.
type EditNotificationChannelReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditNotificationChannelReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditNotificationChannelOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditNotificationChannelBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditNotificationChannelNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewEditNotificationChannelMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEditNotificationChannelInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/notification/channels/{channelId}] editNotificationChannel", response, response.Code())
	}
}

// NewEditNotificationChannelOK creates a EditNotificationChannelOK with default headers values
func NewEditNotificationChannelOK() *EditNotificationChannelOK {
	return &EditNotificationChannelOK{}
}

/*
EditNotificationChannelOK describes a response with status code 200, with default header values.

OK
*/
type EditNotificationChannelOK struct {
	Payload []*models.NotificationChannel
}

// IsSuccess returns true when this edit notification channel o k response has a 2xx status code
func (o *EditNotificationChannelOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit notification channel o k response has a 3xx status code
func (o *EditNotificationChannelOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel o k response has a 4xx status code
func (o *EditNotificationChannelOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit notification channel o k response has a 5xx status code
func (o *EditNotificationChannelOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel o k response a status code equal to that given
func (o *EditNotificationChannelOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the edit notification channel o k response
func (o *EditNotificationChannelOK) Code() int {
	return 200
}

func (o *EditNotificationChannelOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelOK %s", 200, payload)
}

func (o *EditNotificationChannelOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelOK %s", 200, payload)
}

func (o *EditNotificationChannelOK) GetPayload() []*models.NotificationChannel {
	return o.Payload
}

func (o *EditNotificationChannelOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditNotificationChannelBadRequest creates a EditNotificationChannelBadRequest with default headers values
func NewEditNotificationChannelBadRequest() *EditNotificationChannelBadRequest {
	return &EditNotificationChannelBadRequest{}
}

/*
EditNotificationChannelBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EditNotificationChannelBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit notification channel bad request response has a 2xx status code
func (o *EditNotificationChannelBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit notification channel bad request response has a 3xx status code
func (o *EditNotificationChannelBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel bad request response has a 4xx status code
func (o *EditNotificationChannelBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit notification channel bad request response has a 5xx status code
func (o *EditNotificationChannelBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel bad request response a status code equal to that given
func (o *EditNotificationChannelBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the edit notification channel bad request response
func (o *EditNotificationChannelBadRequest) Code() int {
	return 400
}

func (o *EditNotificationChannelBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelBadRequest %s", 400, payload)
}

func (o *EditNotificationChannelBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelBadRequest %s", 400, payload)
}

func (o *EditNotificationChannelBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditNotificationChannelBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditNotificationChannelNotFound creates a EditNotificationChannelNotFound with default headers values
func NewEditNotificationChannelNotFound() *EditNotificationChannelNotFound {
	return &EditNotificationChannelNotFound{}
}

/*
EditNotificationChannelNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EditNotificationChannelNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit notification channel not found response has a 2xx status code
func (o *EditNotificationChannelNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit notification channel not found response has a 3xx status code
func (o *EditNotificationChannelNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel not found response has a 4xx status code
func (o *EditNotificationChannelNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit notification channel not found response has a 5xx status code
func (o *EditNotificationChannelNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel not found response a status code equal to that given
func (o *EditNotificationChannelNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the edit notification channel not found response
func (o *EditNotificationChannelNotFound) Code() int {
	return 404
}

func (o *EditNotificationChannelNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelNotFound %s", 404, payload)
}

func (o *EditNotificationChannelNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelNotFound %s", 404, payload)
}

func (o *EditNotificationChannelNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditNotificationChannelNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditNotificationChannelMethodNotAllowed creates a EditNotificationChannelMethodNotAllowed with default headers values
func NewEditNotificationChannelMethodNotAllowed() *EditNotificationChannelMethodNotAllowed {
	return &EditNotificationChannelMethodNotAllowed{}
}

/*
EditNotificationChannelMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type EditNotificationChannelMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit notification channel method not allowed response has a 2xx status code
func (o *EditNotificationChannelMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit notification channel method not allowed response has a 3xx status code
func (o *EditNotificationChannelMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel method not allowed response has a 4xx status code
func (o *EditNotificationChannelMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit notification channel method not allowed response has a 5xx status code
func (o *EditNotificationChannelMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel method not allowed response a status code equal to that given
func (o *EditNotificationChannelMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the edit notification channel method not allowed response
func (o *EditNotificationChannelMethodNotAllowed) Code() int {
	return 405
}

func (o *EditNotificationChannelMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelMethodNotAllowed %s", 405, payload)
}

func (o *EditNotificationChannelMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelMethodNotAllowed %s", 405, payload)
}

func (o *EditNotificationChannelMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditNotificationChannelMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditNotificationChannelInternalServerError creates a EditNotificationChannelInternalServerError with default headers values
func NewEditNotificationChannelInternalServerError() *EditNotificationChannelInternalServerError {
	return &EditNotificationChannelInternalServerError{}
}

/*
EditNotificationChannelInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type EditNotificationChannelInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this edit notification channel internal server error response has a 2xx status code
func (o *EditNotificationChannelInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit notification channel internal server error response has a 3xx status code
func (o *EditNotificationChannelInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel internal server error response has a 4xx status code
func (o *EditNotificationChannelInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit notification channel internal server error response has a 5xx status code
func (o *EditNotificationChannelInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this edit notification channel internal server error response a status code equal to that given
func (o *EditNotificationChannelInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the edit notification channel internal server error response
func (o *EditNotificationChannelInternalServerError) Code() int {
	return 500
}

func (o *EditNotificationChannelInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelInternalServerError %s", 500, payload)
}

func (o *EditNotificationChannelInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelInternalServerError %s", 500, payload)
}

func (o *EditNotificationChannelInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *EditNotificationChannelInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
