// Code generated by go-swagger; DO NOT EDIT.

package ui_notification_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetFiltersForSubscriptionsUsingPOSTReader is a Reader for the GetFiltersForSubscriptionsUsingPOST structure.
type GetFiltersForSubscriptionsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFiltersForSubscriptionsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFiltersForSubscriptionsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewGetFiltersForSubscriptionsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFiltersForSubscriptionsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFiltersForSubscriptionsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFiltersForSubscriptionsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/] getFiltersForSubscriptionsUsingPOST", response, response.Code())
	}
}

// NewGetFiltersForSubscriptionsUsingPOSTOK creates a GetFiltersForSubscriptionsUsingPOSTOK with default headers values
func NewGetFiltersForSubscriptionsUsingPOSTOK() *GetFiltersForSubscriptionsUsingPOSTOK {
	return &GetFiltersForSubscriptionsUsingPOSTOK{}
}

/*
GetFiltersForSubscriptionsUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type GetFiltersForSubscriptionsUsingPOSTOK struct {
	Payload models.TagDataModel
}

// IsSuccess returns true when this get filters for subscriptions using p o s t o k response has a 2xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get filters for subscriptions using p o s t o k response has a 3xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get filters for subscriptions using p o s t o k response has a 4xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get filters for subscriptions using p o s t o k response has a 5xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get filters for subscriptions using p o s t o k response a status code equal to that given
func (o *GetFiltersForSubscriptionsUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get filters for subscriptions using p o s t o k response
func (o *GetFiltersForSubscriptionsUsingPOSTOK) Code() int {
	return 200
}

func (o *GetFiltersForSubscriptionsUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTOK %s", 200, payload)
}

func (o *GetFiltersForSubscriptionsUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTOK %s", 200, payload)
}

func (o *GetFiltersForSubscriptionsUsingPOSTOK) GetPayload() models.TagDataModel {
	return o.Payload
}

func (o *GetFiltersForSubscriptionsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFiltersForSubscriptionsUsingPOSTCreated creates a GetFiltersForSubscriptionsUsingPOSTCreated with default headers values
func NewGetFiltersForSubscriptionsUsingPOSTCreated() *GetFiltersForSubscriptionsUsingPOSTCreated {
	return &GetFiltersForSubscriptionsUsingPOSTCreated{}
}

/*
GetFiltersForSubscriptionsUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type GetFiltersForSubscriptionsUsingPOSTCreated struct {
}

// IsSuccess returns true when this get filters for subscriptions using p o s t created response has a 2xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get filters for subscriptions using p o s t created response has a 3xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get filters for subscriptions using p o s t created response has a 4xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this get filters for subscriptions using p o s t created response has a 5xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this get filters for subscriptions using p o s t created response a status code equal to that given
func (o *GetFiltersForSubscriptionsUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the get filters for subscriptions using p o s t created response
func (o *GetFiltersForSubscriptionsUsingPOSTCreated) Code() int {
	return 201
}

func (o *GetFiltersForSubscriptionsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTCreated", 201)
}

func (o *GetFiltersForSubscriptionsUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTCreated", 201)
}

func (o *GetFiltersForSubscriptionsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFiltersForSubscriptionsUsingPOSTUnauthorized creates a GetFiltersForSubscriptionsUsingPOSTUnauthorized with default headers values
func NewGetFiltersForSubscriptionsUsingPOSTUnauthorized() *GetFiltersForSubscriptionsUsingPOSTUnauthorized {
	return &GetFiltersForSubscriptionsUsingPOSTUnauthorized{}
}

/*
GetFiltersForSubscriptionsUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFiltersForSubscriptionsUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this get filters for subscriptions using p o s t unauthorized response has a 2xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get filters for subscriptions using p o s t unauthorized response has a 3xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get filters for subscriptions using p o s t unauthorized response has a 4xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get filters for subscriptions using p o s t unauthorized response has a 5xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get filters for subscriptions using p o s t unauthorized response a status code equal to that given
func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get filters for subscriptions using p o s t unauthorized response
func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTUnauthorized", 401)
}

func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTUnauthorized", 401)
}

func (o *GetFiltersForSubscriptionsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFiltersForSubscriptionsUsingPOSTForbidden creates a GetFiltersForSubscriptionsUsingPOSTForbidden with default headers values
func NewGetFiltersForSubscriptionsUsingPOSTForbidden() *GetFiltersForSubscriptionsUsingPOSTForbidden {
	return &GetFiltersForSubscriptionsUsingPOSTForbidden{}
}

/*
GetFiltersForSubscriptionsUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetFiltersForSubscriptionsUsingPOSTForbidden struct {
}

// IsSuccess returns true when this get filters for subscriptions using p o s t forbidden response has a 2xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get filters for subscriptions using p o s t forbidden response has a 3xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get filters for subscriptions using p o s t forbidden response has a 4xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get filters for subscriptions using p o s t forbidden response has a 5xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get filters for subscriptions using p o s t forbidden response a status code equal to that given
func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get filters for subscriptions using p o s t forbidden response
func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) Code() int {
	return 403
}

func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTForbidden", 403)
}

func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTForbidden", 403)
}

func (o *GetFiltersForSubscriptionsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFiltersForSubscriptionsUsingPOSTNotFound creates a GetFiltersForSubscriptionsUsingPOSTNotFound with default headers values
func NewGetFiltersForSubscriptionsUsingPOSTNotFound() *GetFiltersForSubscriptionsUsingPOSTNotFound {
	return &GetFiltersForSubscriptionsUsingPOSTNotFound{}
}

/*
GetFiltersForSubscriptionsUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFiltersForSubscriptionsUsingPOSTNotFound struct {
}

// IsSuccess returns true when this get filters for subscriptions using p o s t not found response has a 2xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get filters for subscriptions using p o s t not found response has a 3xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get filters for subscriptions using p o s t not found response has a 4xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get filters for subscriptions using p o s t not found response has a 5xx status code
func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get filters for subscriptions using p o s t not found response a status code equal to that given
func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get filters for subscriptions using p o s t not found response
func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) Code() int {
	return 404
}

func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTNotFound", 404)
}

func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/notification/{notificationType}/tag/{tagName}/values/][%d] getFiltersForSubscriptionsUsingPOSTNotFound", 404)
}

func (o *GetFiltersForSubscriptionsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
