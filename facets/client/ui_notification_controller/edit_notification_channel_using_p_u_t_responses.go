// Code generated by go-swagger; DO NOT EDIT.

package ui_notification_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// EditNotificationChannelUsingPUTReader is a Reader for the EditNotificationChannelUsingPUT structure.
type EditNotificationChannelUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditNotificationChannelUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditNotificationChannelUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewEditNotificationChannelUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewEditNotificationChannelUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEditNotificationChannelUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditNotificationChannelUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/notification/channels/{channelId}] editNotificationChannelUsingPUT", response, response.Code())
	}
}

// NewEditNotificationChannelUsingPUTOK creates a EditNotificationChannelUsingPUTOK with default headers values
func NewEditNotificationChannelUsingPUTOK() *EditNotificationChannelUsingPUTOK {
	return &EditNotificationChannelUsingPUTOK{}
}

/*
EditNotificationChannelUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type EditNotificationChannelUsingPUTOK struct {
	Payload []*models.NotificationChannel
}

// IsSuccess returns true when this edit notification channel using p u t o k response has a 2xx status code
func (o *EditNotificationChannelUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit notification channel using p u t o k response has a 3xx status code
func (o *EditNotificationChannelUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel using p u t o k response has a 4xx status code
func (o *EditNotificationChannelUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit notification channel using p u t o k response has a 5xx status code
func (o *EditNotificationChannelUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel using p u t o k response a status code equal to that given
func (o *EditNotificationChannelUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the edit notification channel using p u t o k response
func (o *EditNotificationChannelUsingPUTOK) Code() int {
	return 200
}

func (o *EditNotificationChannelUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTOK %s", 200, payload)
}

func (o *EditNotificationChannelUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTOK %s", 200, payload)
}

func (o *EditNotificationChannelUsingPUTOK) GetPayload() []*models.NotificationChannel {
	return o.Payload
}

func (o *EditNotificationChannelUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditNotificationChannelUsingPUTCreated creates a EditNotificationChannelUsingPUTCreated with default headers values
func NewEditNotificationChannelUsingPUTCreated() *EditNotificationChannelUsingPUTCreated {
	return &EditNotificationChannelUsingPUTCreated{}
}

/*
EditNotificationChannelUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type EditNotificationChannelUsingPUTCreated struct {
}

// IsSuccess returns true when this edit notification channel using p u t created response has a 2xx status code
func (o *EditNotificationChannelUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this edit notification channel using p u t created response has a 3xx status code
func (o *EditNotificationChannelUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel using p u t created response has a 4xx status code
func (o *EditNotificationChannelUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this edit notification channel using p u t created response has a 5xx status code
func (o *EditNotificationChannelUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel using p u t created response a status code equal to that given
func (o *EditNotificationChannelUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the edit notification channel using p u t created response
func (o *EditNotificationChannelUsingPUTCreated) Code() int {
	return 201
}

func (o *EditNotificationChannelUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTCreated", 201)
}

func (o *EditNotificationChannelUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTCreated", 201)
}

func (o *EditNotificationChannelUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEditNotificationChannelUsingPUTUnauthorized creates a EditNotificationChannelUsingPUTUnauthorized with default headers values
func NewEditNotificationChannelUsingPUTUnauthorized() *EditNotificationChannelUsingPUTUnauthorized {
	return &EditNotificationChannelUsingPUTUnauthorized{}
}

/*
EditNotificationChannelUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type EditNotificationChannelUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this edit notification channel using p u t unauthorized response has a 2xx status code
func (o *EditNotificationChannelUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit notification channel using p u t unauthorized response has a 3xx status code
func (o *EditNotificationChannelUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel using p u t unauthorized response has a 4xx status code
func (o *EditNotificationChannelUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit notification channel using p u t unauthorized response has a 5xx status code
func (o *EditNotificationChannelUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel using p u t unauthorized response a status code equal to that given
func (o *EditNotificationChannelUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the edit notification channel using p u t unauthorized response
func (o *EditNotificationChannelUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *EditNotificationChannelUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTUnauthorized", 401)
}

func (o *EditNotificationChannelUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTUnauthorized", 401)
}

func (o *EditNotificationChannelUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEditNotificationChannelUsingPUTForbidden creates a EditNotificationChannelUsingPUTForbidden with default headers values
func NewEditNotificationChannelUsingPUTForbidden() *EditNotificationChannelUsingPUTForbidden {
	return &EditNotificationChannelUsingPUTForbidden{}
}

/*
EditNotificationChannelUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EditNotificationChannelUsingPUTForbidden struct {
}

// IsSuccess returns true when this edit notification channel using p u t forbidden response has a 2xx status code
func (o *EditNotificationChannelUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit notification channel using p u t forbidden response has a 3xx status code
func (o *EditNotificationChannelUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel using p u t forbidden response has a 4xx status code
func (o *EditNotificationChannelUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit notification channel using p u t forbidden response has a 5xx status code
func (o *EditNotificationChannelUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel using p u t forbidden response a status code equal to that given
func (o *EditNotificationChannelUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the edit notification channel using p u t forbidden response
func (o *EditNotificationChannelUsingPUTForbidden) Code() int {
	return 403
}

func (o *EditNotificationChannelUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTForbidden", 403)
}

func (o *EditNotificationChannelUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTForbidden", 403)
}

func (o *EditNotificationChannelUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewEditNotificationChannelUsingPUTNotFound creates a EditNotificationChannelUsingPUTNotFound with default headers values
func NewEditNotificationChannelUsingPUTNotFound() *EditNotificationChannelUsingPUTNotFound {
	return &EditNotificationChannelUsingPUTNotFound{}
}

/*
EditNotificationChannelUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EditNotificationChannelUsingPUTNotFound struct {
}

// IsSuccess returns true when this edit notification channel using p u t not found response has a 2xx status code
func (o *EditNotificationChannelUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this edit notification channel using p u t not found response has a 3xx status code
func (o *EditNotificationChannelUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this edit notification channel using p u t not found response has a 4xx status code
func (o *EditNotificationChannelUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this edit notification channel using p u t not found response has a 5xx status code
func (o *EditNotificationChannelUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this edit notification channel using p u t not found response a status code equal to that given
func (o *EditNotificationChannelUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the edit notification channel using p u t not found response
func (o *EditNotificationChannelUsingPUTNotFound) Code() int {
	return 404
}

func (o *EditNotificationChannelUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTNotFound", 404)
}

func (o *EditNotificationChannelUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/notification/channels/{channelId}][%d] editNotificationChannelUsingPUTNotFound", 404)
}

func (o *EditNotificationChannelUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
