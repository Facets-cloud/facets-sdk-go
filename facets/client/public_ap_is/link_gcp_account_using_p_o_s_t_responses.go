// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LinkGcpAccountUsingPOSTReader is a Reader for the LinkGcpAccountUsingPOST structure.
type LinkGcpAccountUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkGcpAccountUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkGcpAccountUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewLinkGcpAccountUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLinkGcpAccountUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLinkGcpAccountUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkGcpAccountUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-gcp] linkGcpAccountUsingPOST", response, response.Code())
	}
}

// NewLinkGcpAccountUsingPOSTOK creates a LinkGcpAccountUsingPOSTOK with default headers values
func NewLinkGcpAccountUsingPOSTOK() *LinkGcpAccountUsingPOSTOK {
	return &LinkGcpAccountUsingPOSTOK{}
}

/*
LinkGcpAccountUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type LinkGcpAccountUsingPOSTOK struct {
}

// IsSuccess returns true when this link gcp account using p o s t o k response has a 2xx status code
func (o *LinkGcpAccountUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link gcp account using p o s t o k response has a 3xx status code
func (o *LinkGcpAccountUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link gcp account using p o s t o k response has a 4xx status code
func (o *LinkGcpAccountUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link gcp account using p o s t o k response has a 5xx status code
func (o *LinkGcpAccountUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link gcp account using p o s t o k response a status code equal to that given
func (o *LinkGcpAccountUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link gcp account using p o s t o k response
func (o *LinkGcpAccountUsingPOSTOK) Code() int {
	return 200
}

func (o *LinkGcpAccountUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTOK", 200)
}

func (o *LinkGcpAccountUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTOK", 200)
}

func (o *LinkGcpAccountUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGcpAccountUsingPOSTCreated creates a LinkGcpAccountUsingPOSTCreated with default headers values
func NewLinkGcpAccountUsingPOSTCreated() *LinkGcpAccountUsingPOSTCreated {
	return &LinkGcpAccountUsingPOSTCreated{}
}

/*
LinkGcpAccountUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type LinkGcpAccountUsingPOSTCreated struct {
}

// IsSuccess returns true when this link gcp account using p o s t created response has a 2xx status code
func (o *LinkGcpAccountUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link gcp account using p o s t created response has a 3xx status code
func (o *LinkGcpAccountUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link gcp account using p o s t created response has a 4xx status code
func (o *LinkGcpAccountUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this link gcp account using p o s t created response has a 5xx status code
func (o *LinkGcpAccountUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this link gcp account using p o s t created response a status code equal to that given
func (o *LinkGcpAccountUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the link gcp account using p o s t created response
func (o *LinkGcpAccountUsingPOSTCreated) Code() int {
	return 201
}

func (o *LinkGcpAccountUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTCreated", 201)
}

func (o *LinkGcpAccountUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTCreated", 201)
}

func (o *LinkGcpAccountUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGcpAccountUsingPOSTUnauthorized creates a LinkGcpAccountUsingPOSTUnauthorized with default headers values
func NewLinkGcpAccountUsingPOSTUnauthorized() *LinkGcpAccountUsingPOSTUnauthorized {
	return &LinkGcpAccountUsingPOSTUnauthorized{}
}

/*
LinkGcpAccountUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LinkGcpAccountUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this link gcp account using p o s t unauthorized response has a 2xx status code
func (o *LinkGcpAccountUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link gcp account using p o s t unauthorized response has a 3xx status code
func (o *LinkGcpAccountUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link gcp account using p o s t unauthorized response has a 4xx status code
func (o *LinkGcpAccountUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this link gcp account using p o s t unauthorized response has a 5xx status code
func (o *LinkGcpAccountUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this link gcp account using p o s t unauthorized response a status code equal to that given
func (o *LinkGcpAccountUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the link gcp account using p o s t unauthorized response
func (o *LinkGcpAccountUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *LinkGcpAccountUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTUnauthorized", 401)
}

func (o *LinkGcpAccountUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTUnauthorized", 401)
}

func (o *LinkGcpAccountUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGcpAccountUsingPOSTForbidden creates a LinkGcpAccountUsingPOSTForbidden with default headers values
func NewLinkGcpAccountUsingPOSTForbidden() *LinkGcpAccountUsingPOSTForbidden {
	return &LinkGcpAccountUsingPOSTForbidden{}
}

/*
LinkGcpAccountUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LinkGcpAccountUsingPOSTForbidden struct {
}

// IsSuccess returns true when this link gcp account using p o s t forbidden response has a 2xx status code
func (o *LinkGcpAccountUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link gcp account using p o s t forbidden response has a 3xx status code
func (o *LinkGcpAccountUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link gcp account using p o s t forbidden response has a 4xx status code
func (o *LinkGcpAccountUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this link gcp account using p o s t forbidden response has a 5xx status code
func (o *LinkGcpAccountUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this link gcp account using p o s t forbidden response a status code equal to that given
func (o *LinkGcpAccountUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the link gcp account using p o s t forbidden response
func (o *LinkGcpAccountUsingPOSTForbidden) Code() int {
	return 403
}

func (o *LinkGcpAccountUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTForbidden", 403)
}

func (o *LinkGcpAccountUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTForbidden", 403)
}

func (o *LinkGcpAccountUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGcpAccountUsingPOSTNotFound creates a LinkGcpAccountUsingPOSTNotFound with default headers values
func NewLinkGcpAccountUsingPOSTNotFound() *LinkGcpAccountUsingPOSTNotFound {
	return &LinkGcpAccountUsingPOSTNotFound{}
}

/*
LinkGcpAccountUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkGcpAccountUsingPOSTNotFound struct {
}

// IsSuccess returns true when this link gcp account using p o s t not found response has a 2xx status code
func (o *LinkGcpAccountUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link gcp account using p o s t not found response has a 3xx status code
func (o *LinkGcpAccountUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link gcp account using p o s t not found response has a 4xx status code
func (o *LinkGcpAccountUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link gcp account using p o s t not found response has a 5xx status code
func (o *LinkGcpAccountUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link gcp account using p o s t not found response a status code equal to that given
func (o *LinkGcpAccountUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link gcp account using p o s t not found response
func (o *LinkGcpAccountUsingPOSTNotFound) Code() int {
	return 404
}

func (o *LinkGcpAccountUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTNotFound", 404)
}

func (o *LinkGcpAccountUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /public/v1/link-gcp][%d] linkGcpAccountUsingPOSTNotFound", 404)
}

func (o *LinkGcpAccountUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
