// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LinkBitbucketAccountUsingPOSTReader is a Reader for the LinkBitbucketAccountUsingPOST structure.
type LinkBitbucketAccountUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkBitbucketAccountUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkBitbucketAccountUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewLinkBitbucketAccountUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLinkBitbucketAccountUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLinkBitbucketAccountUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkBitbucketAccountUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-bitbucket] linkBitbucketAccountUsingPOST", response, response.Code())
	}
}

// NewLinkBitbucketAccountUsingPOSTOK creates a LinkBitbucketAccountUsingPOSTOK with default headers values
func NewLinkBitbucketAccountUsingPOSTOK() *LinkBitbucketAccountUsingPOSTOK {
	return &LinkBitbucketAccountUsingPOSTOK{}
}

/*
LinkBitbucketAccountUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type LinkBitbucketAccountUsingPOSTOK struct {
}

// IsSuccess returns true when this link bitbucket account using p o s t o k response has a 2xx status code
func (o *LinkBitbucketAccountUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link bitbucket account using p o s t o k response has a 3xx status code
func (o *LinkBitbucketAccountUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account using p o s t o k response has a 4xx status code
func (o *LinkBitbucketAccountUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link bitbucket account using p o s t o k response has a 5xx status code
func (o *LinkBitbucketAccountUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account using p o s t o k response a status code equal to that given
func (o *LinkBitbucketAccountUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link bitbucket account using p o s t o k response
func (o *LinkBitbucketAccountUsingPOSTOK) Code() int {
	return 200
}

func (o *LinkBitbucketAccountUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTOK", 200)
}

func (o *LinkBitbucketAccountUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTOK", 200)
}

func (o *LinkBitbucketAccountUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkBitbucketAccountUsingPOSTCreated creates a LinkBitbucketAccountUsingPOSTCreated with default headers values
func NewLinkBitbucketAccountUsingPOSTCreated() *LinkBitbucketAccountUsingPOSTCreated {
	return &LinkBitbucketAccountUsingPOSTCreated{}
}

/*
LinkBitbucketAccountUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type LinkBitbucketAccountUsingPOSTCreated struct {
}

// IsSuccess returns true when this link bitbucket account using p o s t created response has a 2xx status code
func (o *LinkBitbucketAccountUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link bitbucket account using p o s t created response has a 3xx status code
func (o *LinkBitbucketAccountUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account using p o s t created response has a 4xx status code
func (o *LinkBitbucketAccountUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this link bitbucket account using p o s t created response has a 5xx status code
func (o *LinkBitbucketAccountUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account using p o s t created response a status code equal to that given
func (o *LinkBitbucketAccountUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the link bitbucket account using p o s t created response
func (o *LinkBitbucketAccountUsingPOSTCreated) Code() int {
	return 201
}

func (o *LinkBitbucketAccountUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTCreated", 201)
}

func (o *LinkBitbucketAccountUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTCreated", 201)
}

func (o *LinkBitbucketAccountUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkBitbucketAccountUsingPOSTUnauthorized creates a LinkBitbucketAccountUsingPOSTUnauthorized with default headers values
func NewLinkBitbucketAccountUsingPOSTUnauthorized() *LinkBitbucketAccountUsingPOSTUnauthorized {
	return &LinkBitbucketAccountUsingPOSTUnauthorized{}
}

/*
LinkBitbucketAccountUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LinkBitbucketAccountUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this link bitbucket account using p o s t unauthorized response has a 2xx status code
func (o *LinkBitbucketAccountUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link bitbucket account using p o s t unauthorized response has a 3xx status code
func (o *LinkBitbucketAccountUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account using p o s t unauthorized response has a 4xx status code
func (o *LinkBitbucketAccountUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this link bitbucket account using p o s t unauthorized response has a 5xx status code
func (o *LinkBitbucketAccountUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account using p o s t unauthorized response a status code equal to that given
func (o *LinkBitbucketAccountUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the link bitbucket account using p o s t unauthorized response
func (o *LinkBitbucketAccountUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *LinkBitbucketAccountUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTUnauthorized", 401)
}

func (o *LinkBitbucketAccountUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTUnauthorized", 401)
}

func (o *LinkBitbucketAccountUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkBitbucketAccountUsingPOSTForbidden creates a LinkBitbucketAccountUsingPOSTForbidden with default headers values
func NewLinkBitbucketAccountUsingPOSTForbidden() *LinkBitbucketAccountUsingPOSTForbidden {
	return &LinkBitbucketAccountUsingPOSTForbidden{}
}

/*
LinkBitbucketAccountUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LinkBitbucketAccountUsingPOSTForbidden struct {
}

// IsSuccess returns true when this link bitbucket account using p o s t forbidden response has a 2xx status code
func (o *LinkBitbucketAccountUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link bitbucket account using p o s t forbidden response has a 3xx status code
func (o *LinkBitbucketAccountUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account using p o s t forbidden response has a 4xx status code
func (o *LinkBitbucketAccountUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this link bitbucket account using p o s t forbidden response has a 5xx status code
func (o *LinkBitbucketAccountUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account using p o s t forbidden response a status code equal to that given
func (o *LinkBitbucketAccountUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the link bitbucket account using p o s t forbidden response
func (o *LinkBitbucketAccountUsingPOSTForbidden) Code() int {
	return 403
}

func (o *LinkBitbucketAccountUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTForbidden", 403)
}

func (o *LinkBitbucketAccountUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTForbidden", 403)
}

func (o *LinkBitbucketAccountUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkBitbucketAccountUsingPOSTNotFound creates a LinkBitbucketAccountUsingPOSTNotFound with default headers values
func NewLinkBitbucketAccountUsingPOSTNotFound() *LinkBitbucketAccountUsingPOSTNotFound {
	return &LinkBitbucketAccountUsingPOSTNotFound{}
}

/*
LinkBitbucketAccountUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkBitbucketAccountUsingPOSTNotFound struct {
}

// IsSuccess returns true when this link bitbucket account using p o s t not found response has a 2xx status code
func (o *LinkBitbucketAccountUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link bitbucket account using p o s t not found response has a 3xx status code
func (o *LinkBitbucketAccountUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account using p o s t not found response has a 4xx status code
func (o *LinkBitbucketAccountUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link bitbucket account using p o s t not found response has a 5xx status code
func (o *LinkBitbucketAccountUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account using p o s t not found response a status code equal to that given
func (o *LinkBitbucketAccountUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link bitbucket account using p o s t not found response
func (o *LinkBitbucketAccountUsingPOSTNotFound) Code() int {
	return 404
}

func (o *LinkBitbucketAccountUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTNotFound", 404)
}

func (o *LinkBitbucketAccountUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountUsingPOSTNotFound", 404)
}

func (o *LinkBitbucketAccountUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
