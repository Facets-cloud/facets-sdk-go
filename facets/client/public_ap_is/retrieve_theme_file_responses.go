// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RetrieveThemeFileReader is a Reader for the RetrieveThemeFile structure.
type RetrieveThemeFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RetrieveThemeFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRetrieveThemeFileOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRetrieveThemeFileBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRetrieveThemeFileNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewRetrieveThemeFileMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRetrieveThemeFileInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /public/v1/themeFile] retrieveThemeFile", response, response.Code())
	}
}

// NewRetrieveThemeFileOK creates a RetrieveThemeFileOK with default headers values
func NewRetrieveThemeFileOK() *RetrieveThemeFileOK {
	return &RetrieveThemeFileOK{}
}

/*
RetrieveThemeFileOK describes a response with status code 200, with default header values.

OK
*/
type RetrieveThemeFileOK struct {
	Payload *models.ThemeFileResponse
}

// IsSuccess returns true when this retrieve theme file o k response has a 2xx status code
func (o *RetrieveThemeFileOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this retrieve theme file o k response has a 3xx status code
func (o *RetrieveThemeFileOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this retrieve theme file o k response has a 4xx status code
func (o *RetrieveThemeFileOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this retrieve theme file o k response has a 5xx status code
func (o *RetrieveThemeFileOK) IsServerError() bool {
	return false
}

// IsCode returns true when this retrieve theme file o k response a status code equal to that given
func (o *RetrieveThemeFileOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the retrieve theme file o k response
func (o *RetrieveThemeFileOK) Code() int {
	return 200
}

func (o *RetrieveThemeFileOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileOK %s", 200, payload)
}

func (o *RetrieveThemeFileOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileOK %s", 200, payload)
}

func (o *RetrieveThemeFileOK) GetPayload() *models.ThemeFileResponse {
	return o.Payload
}

func (o *RetrieveThemeFileOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ThemeFileResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRetrieveThemeFileBadRequest creates a RetrieveThemeFileBadRequest with default headers values
func NewRetrieveThemeFileBadRequest() *RetrieveThemeFileBadRequest {
	return &RetrieveThemeFileBadRequest{}
}

/*
RetrieveThemeFileBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RetrieveThemeFileBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this retrieve theme file bad request response has a 2xx status code
func (o *RetrieveThemeFileBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this retrieve theme file bad request response has a 3xx status code
func (o *RetrieveThemeFileBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this retrieve theme file bad request response has a 4xx status code
func (o *RetrieveThemeFileBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this retrieve theme file bad request response has a 5xx status code
func (o *RetrieveThemeFileBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this retrieve theme file bad request response a status code equal to that given
func (o *RetrieveThemeFileBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the retrieve theme file bad request response
func (o *RetrieveThemeFileBadRequest) Code() int {
	return 400
}

func (o *RetrieveThemeFileBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileBadRequest %s", 400, payload)
}

func (o *RetrieveThemeFileBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileBadRequest %s", 400, payload)
}

func (o *RetrieveThemeFileBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RetrieveThemeFileBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRetrieveThemeFileNotFound creates a RetrieveThemeFileNotFound with default headers values
func NewRetrieveThemeFileNotFound() *RetrieveThemeFileNotFound {
	return &RetrieveThemeFileNotFound{}
}

/*
RetrieveThemeFileNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RetrieveThemeFileNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this retrieve theme file not found response has a 2xx status code
func (o *RetrieveThemeFileNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this retrieve theme file not found response has a 3xx status code
func (o *RetrieveThemeFileNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this retrieve theme file not found response has a 4xx status code
func (o *RetrieveThemeFileNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this retrieve theme file not found response has a 5xx status code
func (o *RetrieveThemeFileNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this retrieve theme file not found response a status code equal to that given
func (o *RetrieveThemeFileNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the retrieve theme file not found response
func (o *RetrieveThemeFileNotFound) Code() int {
	return 404
}

func (o *RetrieveThemeFileNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileNotFound %s", 404, payload)
}

func (o *RetrieveThemeFileNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileNotFound %s", 404, payload)
}

func (o *RetrieveThemeFileNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RetrieveThemeFileNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRetrieveThemeFileMethodNotAllowed creates a RetrieveThemeFileMethodNotAllowed with default headers values
func NewRetrieveThemeFileMethodNotAllowed() *RetrieveThemeFileMethodNotAllowed {
	return &RetrieveThemeFileMethodNotAllowed{}
}

/*
RetrieveThemeFileMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type RetrieveThemeFileMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this retrieve theme file method not allowed response has a 2xx status code
func (o *RetrieveThemeFileMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this retrieve theme file method not allowed response has a 3xx status code
func (o *RetrieveThemeFileMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this retrieve theme file method not allowed response has a 4xx status code
func (o *RetrieveThemeFileMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this retrieve theme file method not allowed response has a 5xx status code
func (o *RetrieveThemeFileMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this retrieve theme file method not allowed response a status code equal to that given
func (o *RetrieveThemeFileMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the retrieve theme file method not allowed response
func (o *RetrieveThemeFileMethodNotAllowed) Code() int {
	return 405
}

func (o *RetrieveThemeFileMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileMethodNotAllowed %s", 405, payload)
}

func (o *RetrieveThemeFileMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileMethodNotAllowed %s", 405, payload)
}

func (o *RetrieveThemeFileMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RetrieveThemeFileMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRetrieveThemeFileInternalServerError creates a RetrieveThemeFileInternalServerError with default headers values
func NewRetrieveThemeFileInternalServerError() *RetrieveThemeFileInternalServerError {
	return &RetrieveThemeFileInternalServerError{}
}

/*
RetrieveThemeFileInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RetrieveThemeFileInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this retrieve theme file internal server error response has a 2xx status code
func (o *RetrieveThemeFileInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this retrieve theme file internal server error response has a 3xx status code
func (o *RetrieveThemeFileInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this retrieve theme file internal server error response has a 4xx status code
func (o *RetrieveThemeFileInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this retrieve theme file internal server error response has a 5xx status code
func (o *RetrieveThemeFileInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this retrieve theme file internal server error response a status code equal to that given
func (o *RetrieveThemeFileInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the retrieve theme file internal server error response
func (o *RetrieveThemeFileInternalServerError) Code() int {
	return 500
}

func (o *RetrieveThemeFileInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileInternalServerError %s", 500, payload)
}

func (o *RetrieveThemeFileInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/themeFile][%d] retrieveThemeFileInternalServerError %s", 500, payload)
}

func (o *RetrieveThemeFileInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RetrieveThemeFileInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
