// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LinkECRUsingPOSTReader is a Reader for the LinkECRUsingPOST structure.
type LinkECRUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkECRUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkECRUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewLinkECRUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLinkECRUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLinkECRUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkECRUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-ecr] linkECRUsingPOST", response, response.Code())
	}
}

// NewLinkECRUsingPOSTOK creates a LinkECRUsingPOSTOK with default headers values
func NewLinkECRUsingPOSTOK() *LinkECRUsingPOSTOK {
	return &LinkECRUsingPOSTOK{}
}

/*
LinkECRUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type LinkECRUsingPOSTOK struct {
}

// IsSuccess returns true when this link e c r using p o s t o k response has a 2xx status code
func (o *LinkECRUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link e c r using p o s t o k response has a 3xx status code
func (o *LinkECRUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link e c r using p o s t o k response has a 4xx status code
func (o *LinkECRUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link e c r using p o s t o k response has a 5xx status code
func (o *LinkECRUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link e c r using p o s t o k response a status code equal to that given
func (o *LinkECRUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link e c r using p o s t o k response
func (o *LinkECRUsingPOSTOK) Code() int {
	return 200
}

func (o *LinkECRUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTOK", 200)
}

func (o *LinkECRUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTOK", 200)
}

func (o *LinkECRUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkECRUsingPOSTCreated creates a LinkECRUsingPOSTCreated with default headers values
func NewLinkECRUsingPOSTCreated() *LinkECRUsingPOSTCreated {
	return &LinkECRUsingPOSTCreated{}
}

/*
LinkECRUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type LinkECRUsingPOSTCreated struct {
}

// IsSuccess returns true when this link e c r using p o s t created response has a 2xx status code
func (o *LinkECRUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link e c r using p o s t created response has a 3xx status code
func (o *LinkECRUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link e c r using p o s t created response has a 4xx status code
func (o *LinkECRUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this link e c r using p o s t created response has a 5xx status code
func (o *LinkECRUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this link e c r using p o s t created response a status code equal to that given
func (o *LinkECRUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the link e c r using p o s t created response
func (o *LinkECRUsingPOSTCreated) Code() int {
	return 201
}

func (o *LinkECRUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTCreated", 201)
}

func (o *LinkECRUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTCreated", 201)
}

func (o *LinkECRUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkECRUsingPOSTUnauthorized creates a LinkECRUsingPOSTUnauthorized with default headers values
func NewLinkECRUsingPOSTUnauthorized() *LinkECRUsingPOSTUnauthorized {
	return &LinkECRUsingPOSTUnauthorized{}
}

/*
LinkECRUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LinkECRUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this link e c r using p o s t unauthorized response has a 2xx status code
func (o *LinkECRUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link e c r using p o s t unauthorized response has a 3xx status code
func (o *LinkECRUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link e c r using p o s t unauthorized response has a 4xx status code
func (o *LinkECRUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this link e c r using p o s t unauthorized response has a 5xx status code
func (o *LinkECRUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this link e c r using p o s t unauthorized response a status code equal to that given
func (o *LinkECRUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the link e c r using p o s t unauthorized response
func (o *LinkECRUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *LinkECRUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTUnauthorized", 401)
}

func (o *LinkECRUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTUnauthorized", 401)
}

func (o *LinkECRUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkECRUsingPOSTForbidden creates a LinkECRUsingPOSTForbidden with default headers values
func NewLinkECRUsingPOSTForbidden() *LinkECRUsingPOSTForbidden {
	return &LinkECRUsingPOSTForbidden{}
}

/*
LinkECRUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LinkECRUsingPOSTForbidden struct {
}

// IsSuccess returns true when this link e c r using p o s t forbidden response has a 2xx status code
func (o *LinkECRUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link e c r using p o s t forbidden response has a 3xx status code
func (o *LinkECRUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link e c r using p o s t forbidden response has a 4xx status code
func (o *LinkECRUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this link e c r using p o s t forbidden response has a 5xx status code
func (o *LinkECRUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this link e c r using p o s t forbidden response a status code equal to that given
func (o *LinkECRUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the link e c r using p o s t forbidden response
func (o *LinkECRUsingPOSTForbidden) Code() int {
	return 403
}

func (o *LinkECRUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTForbidden", 403)
}

func (o *LinkECRUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTForbidden", 403)
}

func (o *LinkECRUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkECRUsingPOSTNotFound creates a LinkECRUsingPOSTNotFound with default headers values
func NewLinkECRUsingPOSTNotFound() *LinkECRUsingPOSTNotFound {
	return &LinkECRUsingPOSTNotFound{}
}

/*
LinkECRUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkECRUsingPOSTNotFound struct {
}

// IsSuccess returns true when this link e c r using p o s t not found response has a 2xx status code
func (o *LinkECRUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link e c r using p o s t not found response has a 3xx status code
func (o *LinkECRUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link e c r using p o s t not found response has a 4xx status code
func (o *LinkECRUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link e c r using p o s t not found response has a 5xx status code
func (o *LinkECRUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link e c r using p o s t not found response a status code equal to that given
func (o *LinkECRUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link e c r using p o s t not found response
func (o *LinkECRUsingPOSTNotFound) Code() int {
	return 404
}

func (o *LinkECRUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTNotFound", 404)
}

func (o *LinkECRUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /public/v1/link-ecr][%d] linkECRUsingPOSTNotFound", 404)
}

func (o *LinkECRUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
