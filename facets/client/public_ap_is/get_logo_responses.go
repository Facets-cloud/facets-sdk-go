// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetLogoReader is a Reader for the GetLogo structure.
type GetLogoReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogoReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogoOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLogoBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLogoNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetLogoMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLogoInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /public/v1/logo] getLogo", response, response.Code())
	}
}

// NewGetLogoOK creates a GetLogoOK with default headers values
func NewGetLogoOK() *GetLogoOK {
	return &GetLogoOK{}
}

/*
GetLogoOK describes a response with status code 200, with default header values.

OK
*/
type GetLogoOK struct {
	Payload string
}

// IsSuccess returns true when this get logo o k response has a 2xx status code
func (o *GetLogoOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get logo o k response has a 3xx status code
func (o *GetLogoOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logo o k response has a 4xx status code
func (o *GetLogoOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get logo o k response has a 5xx status code
func (o *GetLogoOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get logo o k response a status code equal to that given
func (o *GetLogoOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get logo o k response
func (o *GetLogoOK) Code() int {
	return 200
}

func (o *GetLogoOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoOK %s", 200, payload)
}

func (o *GetLogoOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoOK %s", 200, payload)
}

func (o *GetLogoOK) GetPayload() string {
	return o.Payload
}

func (o *GetLogoOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogoBadRequest creates a GetLogoBadRequest with default headers values
func NewGetLogoBadRequest() *GetLogoBadRequest {
	return &GetLogoBadRequest{}
}

/*
GetLogoBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLogoBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get logo bad request response has a 2xx status code
func (o *GetLogoBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get logo bad request response has a 3xx status code
func (o *GetLogoBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logo bad request response has a 4xx status code
func (o *GetLogoBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get logo bad request response has a 5xx status code
func (o *GetLogoBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get logo bad request response a status code equal to that given
func (o *GetLogoBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get logo bad request response
func (o *GetLogoBadRequest) Code() int {
	return 400
}

func (o *GetLogoBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoBadRequest %s", 400, payload)
}

func (o *GetLogoBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoBadRequest %s", 400, payload)
}

func (o *GetLogoBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLogoBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogoNotFound creates a GetLogoNotFound with default headers values
func NewGetLogoNotFound() *GetLogoNotFound {
	return &GetLogoNotFound{}
}

/*
GetLogoNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLogoNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get logo not found response has a 2xx status code
func (o *GetLogoNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get logo not found response has a 3xx status code
func (o *GetLogoNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logo not found response has a 4xx status code
func (o *GetLogoNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get logo not found response has a 5xx status code
func (o *GetLogoNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get logo not found response a status code equal to that given
func (o *GetLogoNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get logo not found response
func (o *GetLogoNotFound) Code() int {
	return 404
}

func (o *GetLogoNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoNotFound %s", 404, payload)
}

func (o *GetLogoNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoNotFound %s", 404, payload)
}

func (o *GetLogoNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLogoNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogoMethodNotAllowed creates a GetLogoMethodNotAllowed with default headers values
func NewGetLogoMethodNotAllowed() *GetLogoMethodNotAllowed {
	return &GetLogoMethodNotAllowed{}
}

/*
GetLogoMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetLogoMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get logo method not allowed response has a 2xx status code
func (o *GetLogoMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get logo method not allowed response has a 3xx status code
func (o *GetLogoMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logo method not allowed response has a 4xx status code
func (o *GetLogoMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get logo method not allowed response has a 5xx status code
func (o *GetLogoMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get logo method not allowed response a status code equal to that given
func (o *GetLogoMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get logo method not allowed response
func (o *GetLogoMethodNotAllowed) Code() int {
	return 405
}

func (o *GetLogoMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoMethodNotAllowed %s", 405, payload)
}

func (o *GetLogoMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoMethodNotAllowed %s", 405, payload)
}

func (o *GetLogoMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLogoMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogoInternalServerError creates a GetLogoInternalServerError with default headers values
func NewGetLogoInternalServerError() *GetLogoInternalServerError {
	return &GetLogoInternalServerError{}
}

/*
GetLogoInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLogoInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get logo internal server error response has a 2xx status code
func (o *GetLogoInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get logo internal server error response has a 3xx status code
func (o *GetLogoInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logo internal server error response has a 4xx status code
func (o *GetLogoInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get logo internal server error response has a 5xx status code
func (o *GetLogoInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get logo internal server error response a status code equal to that given
func (o *GetLogoInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get logo internal server error response
func (o *GetLogoInternalServerError) Code() int {
	return 500
}

func (o *GetLogoInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoInternalServerError %s", 500, payload)
}

func (o *GetLogoInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/logo][%d] getLogoInternalServerError %s", 500, payload)
}

func (o *GetLogoInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLogoInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
