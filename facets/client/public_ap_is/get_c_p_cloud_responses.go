// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetCPCloudReader is a Reader for the GetCPCloud structure.
type GetCPCloudReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCPCloudReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCPCloudOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetCPCloudBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCPCloudNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetCPCloudMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetCPCloudInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /public/v1/cp-cloud] getCPCloud", response, response.Code())
	}
}

// NewGetCPCloudOK creates a GetCPCloudOK with default headers values
func NewGetCPCloudOK() *GetCPCloudOK {
	return &GetCPCloudOK{}
}

/*
GetCPCloudOK describes a response with status code 200, with default header values.

OK
*/
type GetCPCloudOK struct {
	Payload string
}

// IsSuccess returns true when this get c p cloud o k response has a 2xx status code
func (o *GetCPCloudOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c p cloud o k response has a 3xx status code
func (o *GetCPCloudOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud o k response has a 4xx status code
func (o *GetCPCloudOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c p cloud o k response has a 5xx status code
func (o *GetCPCloudOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud o k response a status code equal to that given
func (o *GetCPCloudOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get c p cloud o k response
func (o *GetCPCloudOK) Code() int {
	return 200
}

func (o *GetCPCloudOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudOK %s", 200, payload)
}

func (o *GetCPCloudOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudOK %s", 200, payload)
}

func (o *GetCPCloudOK) GetPayload() string {
	return o.Payload
}

func (o *GetCPCloudOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCPCloudBadRequest creates a GetCPCloudBadRequest with default headers values
func NewGetCPCloudBadRequest() *GetCPCloudBadRequest {
	return &GetCPCloudBadRequest{}
}

/*
GetCPCloudBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetCPCloudBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get c p cloud bad request response has a 2xx status code
func (o *GetCPCloudBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p cloud bad request response has a 3xx status code
func (o *GetCPCloudBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud bad request response has a 4xx status code
func (o *GetCPCloudBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p cloud bad request response has a 5xx status code
func (o *GetCPCloudBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud bad request response a status code equal to that given
func (o *GetCPCloudBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get c p cloud bad request response
func (o *GetCPCloudBadRequest) Code() int {
	return 400
}

func (o *GetCPCloudBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudBadRequest %s", 400, payload)
}

func (o *GetCPCloudBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudBadRequest %s", 400, payload)
}

func (o *GetCPCloudBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCPCloudBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCPCloudNotFound creates a GetCPCloudNotFound with default headers values
func NewGetCPCloudNotFound() *GetCPCloudNotFound {
	return &GetCPCloudNotFound{}
}

/*
GetCPCloudNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCPCloudNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get c p cloud not found response has a 2xx status code
func (o *GetCPCloudNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p cloud not found response has a 3xx status code
func (o *GetCPCloudNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud not found response has a 4xx status code
func (o *GetCPCloudNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p cloud not found response has a 5xx status code
func (o *GetCPCloudNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud not found response a status code equal to that given
func (o *GetCPCloudNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get c p cloud not found response
func (o *GetCPCloudNotFound) Code() int {
	return 404
}

func (o *GetCPCloudNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudNotFound %s", 404, payload)
}

func (o *GetCPCloudNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudNotFound %s", 404, payload)
}

func (o *GetCPCloudNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCPCloudNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCPCloudMethodNotAllowed creates a GetCPCloudMethodNotAllowed with default headers values
func NewGetCPCloudMethodNotAllowed() *GetCPCloudMethodNotAllowed {
	return &GetCPCloudMethodNotAllowed{}
}

/*
GetCPCloudMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetCPCloudMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get c p cloud method not allowed response has a 2xx status code
func (o *GetCPCloudMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p cloud method not allowed response has a 3xx status code
func (o *GetCPCloudMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud method not allowed response has a 4xx status code
func (o *GetCPCloudMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p cloud method not allowed response has a 5xx status code
func (o *GetCPCloudMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud method not allowed response a status code equal to that given
func (o *GetCPCloudMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get c p cloud method not allowed response
func (o *GetCPCloudMethodNotAllowed) Code() int {
	return 405
}

func (o *GetCPCloudMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudMethodNotAllowed %s", 405, payload)
}

func (o *GetCPCloudMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudMethodNotAllowed %s", 405, payload)
}

func (o *GetCPCloudMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCPCloudMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCPCloudInternalServerError creates a GetCPCloudInternalServerError with default headers values
func NewGetCPCloudInternalServerError() *GetCPCloudInternalServerError {
	return &GetCPCloudInternalServerError{}
}

/*
GetCPCloudInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetCPCloudInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get c p cloud internal server error response has a 2xx status code
func (o *GetCPCloudInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p cloud internal server error response has a 3xx status code
func (o *GetCPCloudInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud internal server error response has a 4xx status code
func (o *GetCPCloudInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c p cloud internal server error response has a 5xx status code
func (o *GetCPCloudInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get c p cloud internal server error response a status code equal to that given
func (o *GetCPCloudInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get c p cloud internal server error response
func (o *GetCPCloudInternalServerError) Code() int {
	return 500
}

func (o *GetCPCloudInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudInternalServerError %s", 500, payload)
}

func (o *GetCPCloudInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudInternalServerError %s", 500, payload)
}

func (o *GetCPCloudInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetCPCloudInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
