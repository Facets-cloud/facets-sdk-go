// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LinkGithubAccountUsingPOSTReader is a Reader for the LinkGithubAccountUsingPOST structure.
type LinkGithubAccountUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkGithubAccountUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkGithubAccountUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewLinkGithubAccountUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLinkGithubAccountUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLinkGithubAccountUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkGithubAccountUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-github] linkGithubAccountUsingPOST", response, response.Code())
	}
}

// NewLinkGithubAccountUsingPOSTOK creates a LinkGithubAccountUsingPOSTOK with default headers values
func NewLinkGithubAccountUsingPOSTOK() *LinkGithubAccountUsingPOSTOK {
	return &LinkGithubAccountUsingPOSTOK{}
}

/*
LinkGithubAccountUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type LinkGithubAccountUsingPOSTOK struct {
}

// IsSuccess returns true when this link github account using p o s t o k response has a 2xx status code
func (o *LinkGithubAccountUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link github account using p o s t o k response has a 3xx status code
func (o *LinkGithubAccountUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link github account using p o s t o k response has a 4xx status code
func (o *LinkGithubAccountUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link github account using p o s t o k response has a 5xx status code
func (o *LinkGithubAccountUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link github account using p o s t o k response a status code equal to that given
func (o *LinkGithubAccountUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link github account using p o s t o k response
func (o *LinkGithubAccountUsingPOSTOK) Code() int {
	return 200
}

func (o *LinkGithubAccountUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTOK", 200)
}

func (o *LinkGithubAccountUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTOK", 200)
}

func (o *LinkGithubAccountUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGithubAccountUsingPOSTCreated creates a LinkGithubAccountUsingPOSTCreated with default headers values
func NewLinkGithubAccountUsingPOSTCreated() *LinkGithubAccountUsingPOSTCreated {
	return &LinkGithubAccountUsingPOSTCreated{}
}

/*
LinkGithubAccountUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type LinkGithubAccountUsingPOSTCreated struct {
}

// IsSuccess returns true when this link github account using p o s t created response has a 2xx status code
func (o *LinkGithubAccountUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link github account using p o s t created response has a 3xx status code
func (o *LinkGithubAccountUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link github account using p o s t created response has a 4xx status code
func (o *LinkGithubAccountUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this link github account using p o s t created response has a 5xx status code
func (o *LinkGithubAccountUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this link github account using p o s t created response a status code equal to that given
func (o *LinkGithubAccountUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the link github account using p o s t created response
func (o *LinkGithubAccountUsingPOSTCreated) Code() int {
	return 201
}

func (o *LinkGithubAccountUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTCreated", 201)
}

func (o *LinkGithubAccountUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTCreated", 201)
}

func (o *LinkGithubAccountUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGithubAccountUsingPOSTUnauthorized creates a LinkGithubAccountUsingPOSTUnauthorized with default headers values
func NewLinkGithubAccountUsingPOSTUnauthorized() *LinkGithubAccountUsingPOSTUnauthorized {
	return &LinkGithubAccountUsingPOSTUnauthorized{}
}

/*
LinkGithubAccountUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LinkGithubAccountUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this link github account using p o s t unauthorized response has a 2xx status code
func (o *LinkGithubAccountUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link github account using p o s t unauthorized response has a 3xx status code
func (o *LinkGithubAccountUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link github account using p o s t unauthorized response has a 4xx status code
func (o *LinkGithubAccountUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this link github account using p o s t unauthorized response has a 5xx status code
func (o *LinkGithubAccountUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this link github account using p o s t unauthorized response a status code equal to that given
func (o *LinkGithubAccountUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the link github account using p o s t unauthorized response
func (o *LinkGithubAccountUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *LinkGithubAccountUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTUnauthorized", 401)
}

func (o *LinkGithubAccountUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTUnauthorized", 401)
}

func (o *LinkGithubAccountUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGithubAccountUsingPOSTForbidden creates a LinkGithubAccountUsingPOSTForbidden with default headers values
func NewLinkGithubAccountUsingPOSTForbidden() *LinkGithubAccountUsingPOSTForbidden {
	return &LinkGithubAccountUsingPOSTForbidden{}
}

/*
LinkGithubAccountUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LinkGithubAccountUsingPOSTForbidden struct {
}

// IsSuccess returns true when this link github account using p o s t forbidden response has a 2xx status code
func (o *LinkGithubAccountUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link github account using p o s t forbidden response has a 3xx status code
func (o *LinkGithubAccountUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link github account using p o s t forbidden response has a 4xx status code
func (o *LinkGithubAccountUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this link github account using p o s t forbidden response has a 5xx status code
func (o *LinkGithubAccountUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this link github account using p o s t forbidden response a status code equal to that given
func (o *LinkGithubAccountUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the link github account using p o s t forbidden response
func (o *LinkGithubAccountUsingPOSTForbidden) Code() int {
	return 403
}

func (o *LinkGithubAccountUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTForbidden", 403)
}

func (o *LinkGithubAccountUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTForbidden", 403)
}

func (o *LinkGithubAccountUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkGithubAccountUsingPOSTNotFound creates a LinkGithubAccountUsingPOSTNotFound with default headers values
func NewLinkGithubAccountUsingPOSTNotFound() *LinkGithubAccountUsingPOSTNotFound {
	return &LinkGithubAccountUsingPOSTNotFound{}
}

/*
LinkGithubAccountUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkGithubAccountUsingPOSTNotFound struct {
}

// IsSuccess returns true when this link github account using p o s t not found response has a 2xx status code
func (o *LinkGithubAccountUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link github account using p o s t not found response has a 3xx status code
func (o *LinkGithubAccountUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link github account using p o s t not found response has a 4xx status code
func (o *LinkGithubAccountUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link github account using p o s t not found response has a 5xx status code
func (o *LinkGithubAccountUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link github account using p o s t not found response a status code equal to that given
func (o *LinkGithubAccountUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link github account using p o s t not found response
func (o *LinkGithubAccountUsingPOSTNotFound) Code() int {
	return 404
}

func (o *LinkGithubAccountUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTNotFound", 404)
}

func (o *LinkGithubAccountUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /public/v1/link-github][%d] linkGithubAccountUsingPOSTNotFound", 404)
}

func (o *LinkGithubAccountUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
