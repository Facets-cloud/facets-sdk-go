// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LinkDockerRegistriesUsingPOSTReader is a Reader for the LinkDockerRegistriesUsingPOST structure.
type LinkDockerRegistriesUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkDockerRegistriesUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkDockerRegistriesUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewLinkDockerRegistriesUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLinkDockerRegistriesUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLinkDockerRegistriesUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkDockerRegistriesUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-docker-registries] linkDockerRegistriesUsingPOST", response, response.Code())
	}
}

// NewLinkDockerRegistriesUsingPOSTOK creates a LinkDockerRegistriesUsingPOSTOK with default headers values
func NewLinkDockerRegistriesUsingPOSTOK() *LinkDockerRegistriesUsingPOSTOK {
	return &LinkDockerRegistriesUsingPOSTOK{}
}

/*
LinkDockerRegistriesUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type LinkDockerRegistriesUsingPOSTOK struct {
}

// IsSuccess returns true when this link docker registries using p o s t o k response has a 2xx status code
func (o *LinkDockerRegistriesUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link docker registries using p o s t o k response has a 3xx status code
func (o *LinkDockerRegistriesUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries using p o s t o k response has a 4xx status code
func (o *LinkDockerRegistriesUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link docker registries using p o s t o k response has a 5xx status code
func (o *LinkDockerRegistriesUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries using p o s t o k response a status code equal to that given
func (o *LinkDockerRegistriesUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link docker registries using p o s t o k response
func (o *LinkDockerRegistriesUsingPOSTOK) Code() int {
	return 200
}

func (o *LinkDockerRegistriesUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTOK", 200)
}

func (o *LinkDockerRegistriesUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTOK", 200)
}

func (o *LinkDockerRegistriesUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkDockerRegistriesUsingPOSTCreated creates a LinkDockerRegistriesUsingPOSTCreated with default headers values
func NewLinkDockerRegistriesUsingPOSTCreated() *LinkDockerRegistriesUsingPOSTCreated {
	return &LinkDockerRegistriesUsingPOSTCreated{}
}

/*
LinkDockerRegistriesUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type LinkDockerRegistriesUsingPOSTCreated struct {
}

// IsSuccess returns true when this link docker registries using p o s t created response has a 2xx status code
func (o *LinkDockerRegistriesUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link docker registries using p o s t created response has a 3xx status code
func (o *LinkDockerRegistriesUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries using p o s t created response has a 4xx status code
func (o *LinkDockerRegistriesUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this link docker registries using p o s t created response has a 5xx status code
func (o *LinkDockerRegistriesUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries using p o s t created response a status code equal to that given
func (o *LinkDockerRegistriesUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the link docker registries using p o s t created response
func (o *LinkDockerRegistriesUsingPOSTCreated) Code() int {
	return 201
}

func (o *LinkDockerRegistriesUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTCreated", 201)
}

func (o *LinkDockerRegistriesUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTCreated", 201)
}

func (o *LinkDockerRegistriesUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkDockerRegistriesUsingPOSTUnauthorized creates a LinkDockerRegistriesUsingPOSTUnauthorized with default headers values
func NewLinkDockerRegistriesUsingPOSTUnauthorized() *LinkDockerRegistriesUsingPOSTUnauthorized {
	return &LinkDockerRegistriesUsingPOSTUnauthorized{}
}

/*
LinkDockerRegistriesUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LinkDockerRegistriesUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this link docker registries using p o s t unauthorized response has a 2xx status code
func (o *LinkDockerRegistriesUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link docker registries using p o s t unauthorized response has a 3xx status code
func (o *LinkDockerRegistriesUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries using p o s t unauthorized response has a 4xx status code
func (o *LinkDockerRegistriesUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this link docker registries using p o s t unauthorized response has a 5xx status code
func (o *LinkDockerRegistriesUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries using p o s t unauthorized response a status code equal to that given
func (o *LinkDockerRegistriesUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the link docker registries using p o s t unauthorized response
func (o *LinkDockerRegistriesUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *LinkDockerRegistriesUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTUnauthorized", 401)
}

func (o *LinkDockerRegistriesUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTUnauthorized", 401)
}

func (o *LinkDockerRegistriesUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkDockerRegistriesUsingPOSTForbidden creates a LinkDockerRegistriesUsingPOSTForbidden with default headers values
func NewLinkDockerRegistriesUsingPOSTForbidden() *LinkDockerRegistriesUsingPOSTForbidden {
	return &LinkDockerRegistriesUsingPOSTForbidden{}
}

/*
LinkDockerRegistriesUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LinkDockerRegistriesUsingPOSTForbidden struct {
}

// IsSuccess returns true when this link docker registries using p o s t forbidden response has a 2xx status code
func (o *LinkDockerRegistriesUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link docker registries using p o s t forbidden response has a 3xx status code
func (o *LinkDockerRegistriesUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries using p o s t forbidden response has a 4xx status code
func (o *LinkDockerRegistriesUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this link docker registries using p o s t forbidden response has a 5xx status code
func (o *LinkDockerRegistriesUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries using p o s t forbidden response a status code equal to that given
func (o *LinkDockerRegistriesUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the link docker registries using p o s t forbidden response
func (o *LinkDockerRegistriesUsingPOSTForbidden) Code() int {
	return 403
}

func (o *LinkDockerRegistriesUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTForbidden", 403)
}

func (o *LinkDockerRegistriesUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTForbidden", 403)
}

func (o *LinkDockerRegistriesUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkDockerRegistriesUsingPOSTNotFound creates a LinkDockerRegistriesUsingPOSTNotFound with default headers values
func NewLinkDockerRegistriesUsingPOSTNotFound() *LinkDockerRegistriesUsingPOSTNotFound {
	return &LinkDockerRegistriesUsingPOSTNotFound{}
}

/*
LinkDockerRegistriesUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkDockerRegistriesUsingPOSTNotFound struct {
}

// IsSuccess returns true when this link docker registries using p o s t not found response has a 2xx status code
func (o *LinkDockerRegistriesUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link docker registries using p o s t not found response has a 3xx status code
func (o *LinkDockerRegistriesUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries using p o s t not found response has a 4xx status code
func (o *LinkDockerRegistriesUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link docker registries using p o s t not found response has a 5xx status code
func (o *LinkDockerRegistriesUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries using p o s t not found response a status code equal to that given
func (o *LinkDockerRegistriesUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link docker registries using p o s t not found response
func (o *LinkDockerRegistriesUsingPOSTNotFound) Code() int {
	return 404
}

func (o *LinkDockerRegistriesUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTNotFound", 404)
}

func (o *LinkDockerRegistriesUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesUsingPOSTNotFound", 404)
}

func (o *LinkDockerRegistriesUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
