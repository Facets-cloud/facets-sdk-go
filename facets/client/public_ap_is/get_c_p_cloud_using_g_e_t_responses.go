// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetCPCloudUsingGETReader is a Reader for the GetCPCloudUsingGET structure.
type GetCPCloudUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCPCloudUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCPCloudUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCPCloudUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCPCloudUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCPCloudUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /public/v1/cp-cloud] getCPCloudUsingGET", response, response.Code())
	}
}

// NewGetCPCloudUsingGETOK creates a GetCPCloudUsingGETOK with default headers values
func NewGetCPCloudUsingGETOK() *GetCPCloudUsingGETOK {
	return &GetCPCloudUsingGETOK{}
}

/*
GetCPCloudUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetCPCloudUsingGETOK struct {
	Payload string
}

// IsSuccess returns true when this get c p cloud using g e t o k response has a 2xx status code
func (o *GetCPCloudUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c p cloud using g e t o k response has a 3xx status code
func (o *GetCPCloudUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud using g e t o k response has a 4xx status code
func (o *GetCPCloudUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c p cloud using g e t o k response has a 5xx status code
func (o *GetCPCloudUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud using g e t o k response a status code equal to that given
func (o *GetCPCloudUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get c p cloud using g e t o k response
func (o *GetCPCloudUsingGETOK) Code() int {
	return 200
}

func (o *GetCPCloudUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETOK %s", 200, payload)
}

func (o *GetCPCloudUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETOK %s", 200, payload)
}

func (o *GetCPCloudUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *GetCPCloudUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCPCloudUsingGETUnauthorized creates a GetCPCloudUsingGETUnauthorized with default headers values
func NewGetCPCloudUsingGETUnauthorized() *GetCPCloudUsingGETUnauthorized {
	return &GetCPCloudUsingGETUnauthorized{}
}

/*
GetCPCloudUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCPCloudUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get c p cloud using g e t unauthorized response has a 2xx status code
func (o *GetCPCloudUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p cloud using g e t unauthorized response has a 3xx status code
func (o *GetCPCloudUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud using g e t unauthorized response has a 4xx status code
func (o *GetCPCloudUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p cloud using g e t unauthorized response has a 5xx status code
func (o *GetCPCloudUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud using g e t unauthorized response a status code equal to that given
func (o *GetCPCloudUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get c p cloud using g e t unauthorized response
func (o *GetCPCloudUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetCPCloudUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETUnauthorized", 401)
}

func (o *GetCPCloudUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETUnauthorized", 401)
}

func (o *GetCPCloudUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCPCloudUsingGETForbidden creates a GetCPCloudUsingGETForbidden with default headers values
func NewGetCPCloudUsingGETForbidden() *GetCPCloudUsingGETForbidden {
	return &GetCPCloudUsingGETForbidden{}
}

/*
GetCPCloudUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCPCloudUsingGETForbidden struct {
}

// IsSuccess returns true when this get c p cloud using g e t forbidden response has a 2xx status code
func (o *GetCPCloudUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p cloud using g e t forbidden response has a 3xx status code
func (o *GetCPCloudUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud using g e t forbidden response has a 4xx status code
func (o *GetCPCloudUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p cloud using g e t forbidden response has a 5xx status code
func (o *GetCPCloudUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud using g e t forbidden response a status code equal to that given
func (o *GetCPCloudUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get c p cloud using g e t forbidden response
func (o *GetCPCloudUsingGETForbidden) Code() int {
	return 403
}

func (o *GetCPCloudUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETForbidden", 403)
}

func (o *GetCPCloudUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETForbidden", 403)
}

func (o *GetCPCloudUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCPCloudUsingGETNotFound creates a GetCPCloudUsingGETNotFound with default headers values
func NewGetCPCloudUsingGETNotFound() *GetCPCloudUsingGETNotFound {
	return &GetCPCloudUsingGETNotFound{}
}

/*
GetCPCloudUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCPCloudUsingGETNotFound struct {
}

// IsSuccess returns true when this get c p cloud using g e t not found response has a 2xx status code
func (o *GetCPCloudUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p cloud using g e t not found response has a 3xx status code
func (o *GetCPCloudUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p cloud using g e t not found response has a 4xx status code
func (o *GetCPCloudUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p cloud using g e t not found response has a 5xx status code
func (o *GetCPCloudUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p cloud using g e t not found response a status code equal to that given
func (o *GetCPCloudUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get c p cloud using g e t not found response
func (o *GetCPCloudUsingGETNotFound) Code() int {
	return 404
}

func (o *GetCPCloudUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETNotFound", 404)
}

func (o *GetCPCloudUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /public/v1/cp-cloud][%d] getCPCloudUsingGETNotFound", 404)
}

func (o *GetCPCloudUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
