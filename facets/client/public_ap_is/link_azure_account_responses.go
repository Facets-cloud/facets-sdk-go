// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// LinkAzureAccountReader is a Reader for the LinkAzureAccount structure.
type LinkAzureAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkAzureAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkAzureAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkAzureAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkAzureAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewLinkAzureAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkAzureAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-azure] linkAzureAccount", response, response.Code())
	}
}

// NewLinkAzureAccountOK creates a LinkAzureAccountOK with default headers values
func NewLinkAzureAccountOK() *LinkAzureAccountOK {
	return &LinkAzureAccountOK{}
}

/*
LinkAzureAccountOK describes a response with status code 200, with default header values.

OK
*/
type LinkAzureAccountOK struct {
}

// IsSuccess returns true when this link azure account o k response has a 2xx status code
func (o *LinkAzureAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link azure account o k response has a 3xx status code
func (o *LinkAzureAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link azure account o k response has a 4xx status code
func (o *LinkAzureAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link azure account o k response has a 5xx status code
func (o *LinkAzureAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link azure account o k response a status code equal to that given
func (o *LinkAzureAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link azure account o k response
func (o *LinkAzureAccountOK) Code() int {
	return 200
}

func (o *LinkAzureAccountOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountOK", 200)
}

func (o *LinkAzureAccountOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountOK", 200)
}

func (o *LinkAzureAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkAzureAccountBadRequest creates a LinkAzureAccountBadRequest with default headers values
func NewLinkAzureAccountBadRequest() *LinkAzureAccountBadRequest {
	return &LinkAzureAccountBadRequest{}
}

/*
LinkAzureAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type LinkAzureAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link azure account bad request response has a 2xx status code
func (o *LinkAzureAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link azure account bad request response has a 3xx status code
func (o *LinkAzureAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link azure account bad request response has a 4xx status code
func (o *LinkAzureAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this link azure account bad request response has a 5xx status code
func (o *LinkAzureAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this link azure account bad request response a status code equal to that given
func (o *LinkAzureAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the link azure account bad request response
func (o *LinkAzureAccountBadRequest) Code() int {
	return 400
}

func (o *LinkAzureAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountBadRequest %s", 400, payload)
}

func (o *LinkAzureAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountBadRequest %s", 400, payload)
}

func (o *LinkAzureAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkAzureAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkAzureAccountNotFound creates a LinkAzureAccountNotFound with default headers values
func NewLinkAzureAccountNotFound() *LinkAzureAccountNotFound {
	return &LinkAzureAccountNotFound{}
}

/*
LinkAzureAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkAzureAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link azure account not found response has a 2xx status code
func (o *LinkAzureAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link azure account not found response has a 3xx status code
func (o *LinkAzureAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link azure account not found response has a 4xx status code
func (o *LinkAzureAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link azure account not found response has a 5xx status code
func (o *LinkAzureAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link azure account not found response a status code equal to that given
func (o *LinkAzureAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link azure account not found response
func (o *LinkAzureAccountNotFound) Code() int {
	return 404
}

func (o *LinkAzureAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountNotFound %s", 404, payload)
}

func (o *LinkAzureAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountNotFound %s", 404, payload)
}

func (o *LinkAzureAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkAzureAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkAzureAccountMethodNotAllowed creates a LinkAzureAccountMethodNotAllowed with default headers values
func NewLinkAzureAccountMethodNotAllowed() *LinkAzureAccountMethodNotAllowed {
	return &LinkAzureAccountMethodNotAllowed{}
}

/*
LinkAzureAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type LinkAzureAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link azure account method not allowed response has a 2xx status code
func (o *LinkAzureAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link azure account method not allowed response has a 3xx status code
func (o *LinkAzureAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link azure account method not allowed response has a 4xx status code
func (o *LinkAzureAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this link azure account method not allowed response has a 5xx status code
func (o *LinkAzureAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this link azure account method not allowed response a status code equal to that given
func (o *LinkAzureAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the link azure account method not allowed response
func (o *LinkAzureAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *LinkAzureAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountMethodNotAllowed %s", 405, payload)
}

func (o *LinkAzureAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountMethodNotAllowed %s", 405, payload)
}

func (o *LinkAzureAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkAzureAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkAzureAccountInternalServerError creates a LinkAzureAccountInternalServerError with default headers values
func NewLinkAzureAccountInternalServerError() *LinkAzureAccountInternalServerError {
	return &LinkAzureAccountInternalServerError{}
}

/*
LinkAzureAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type LinkAzureAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link azure account internal server error response has a 2xx status code
func (o *LinkAzureAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link azure account internal server error response has a 3xx status code
func (o *LinkAzureAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link azure account internal server error response has a 4xx status code
func (o *LinkAzureAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this link azure account internal server error response has a 5xx status code
func (o *LinkAzureAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this link azure account internal server error response a status code equal to that given
func (o *LinkAzureAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the link azure account internal server error response
func (o *LinkAzureAccountInternalServerError) Code() int {
	return 500
}

func (o *LinkAzureAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountInternalServerError %s", 500, payload)
}

func (o *LinkAzureAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-azure][%d] linkAzureAccountInternalServerError %s", 500, payload)
}

func (o *LinkAzureAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkAzureAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
