// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// LinkBitbucketAccountReader is a Reader for the LinkBitbucketAccount structure.
type LinkBitbucketAccountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkBitbucketAccountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkBitbucketAccountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkBitbucketAccountBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkBitbucketAccountNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewLinkBitbucketAccountMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkBitbucketAccountInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-bitbucket] linkBitbucketAccount", response, response.Code())
	}
}

// NewLinkBitbucketAccountOK creates a LinkBitbucketAccountOK with default headers values
func NewLinkBitbucketAccountOK() *LinkBitbucketAccountOK {
	return &LinkBitbucketAccountOK{}
}

/*
LinkBitbucketAccountOK describes a response with status code 200, with default header values.

OK
*/
type LinkBitbucketAccountOK struct {
}

// IsSuccess returns true when this link bitbucket account o k response has a 2xx status code
func (o *LinkBitbucketAccountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link bitbucket account o k response has a 3xx status code
func (o *LinkBitbucketAccountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account o k response has a 4xx status code
func (o *LinkBitbucketAccountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link bitbucket account o k response has a 5xx status code
func (o *LinkBitbucketAccountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account o k response a status code equal to that given
func (o *LinkBitbucketAccountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link bitbucket account o k response
func (o *LinkBitbucketAccountOK) Code() int {
	return 200
}

func (o *LinkBitbucketAccountOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountOK", 200)
}

func (o *LinkBitbucketAccountOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountOK", 200)
}

func (o *LinkBitbucketAccountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkBitbucketAccountBadRequest creates a LinkBitbucketAccountBadRequest with default headers values
func NewLinkBitbucketAccountBadRequest() *LinkBitbucketAccountBadRequest {
	return &LinkBitbucketAccountBadRequest{}
}

/*
LinkBitbucketAccountBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type LinkBitbucketAccountBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link bitbucket account bad request response has a 2xx status code
func (o *LinkBitbucketAccountBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link bitbucket account bad request response has a 3xx status code
func (o *LinkBitbucketAccountBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account bad request response has a 4xx status code
func (o *LinkBitbucketAccountBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this link bitbucket account bad request response has a 5xx status code
func (o *LinkBitbucketAccountBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account bad request response a status code equal to that given
func (o *LinkBitbucketAccountBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the link bitbucket account bad request response
func (o *LinkBitbucketAccountBadRequest) Code() int {
	return 400
}

func (o *LinkBitbucketAccountBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountBadRequest %s", 400, payload)
}

func (o *LinkBitbucketAccountBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountBadRequest %s", 400, payload)
}

func (o *LinkBitbucketAccountBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkBitbucketAccountBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkBitbucketAccountNotFound creates a LinkBitbucketAccountNotFound with default headers values
func NewLinkBitbucketAccountNotFound() *LinkBitbucketAccountNotFound {
	return &LinkBitbucketAccountNotFound{}
}

/*
LinkBitbucketAccountNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkBitbucketAccountNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link bitbucket account not found response has a 2xx status code
func (o *LinkBitbucketAccountNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link bitbucket account not found response has a 3xx status code
func (o *LinkBitbucketAccountNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account not found response has a 4xx status code
func (o *LinkBitbucketAccountNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link bitbucket account not found response has a 5xx status code
func (o *LinkBitbucketAccountNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account not found response a status code equal to that given
func (o *LinkBitbucketAccountNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link bitbucket account not found response
func (o *LinkBitbucketAccountNotFound) Code() int {
	return 404
}

func (o *LinkBitbucketAccountNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountNotFound %s", 404, payload)
}

func (o *LinkBitbucketAccountNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountNotFound %s", 404, payload)
}

func (o *LinkBitbucketAccountNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkBitbucketAccountNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkBitbucketAccountMethodNotAllowed creates a LinkBitbucketAccountMethodNotAllowed with default headers values
func NewLinkBitbucketAccountMethodNotAllowed() *LinkBitbucketAccountMethodNotAllowed {
	return &LinkBitbucketAccountMethodNotAllowed{}
}

/*
LinkBitbucketAccountMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type LinkBitbucketAccountMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link bitbucket account method not allowed response has a 2xx status code
func (o *LinkBitbucketAccountMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link bitbucket account method not allowed response has a 3xx status code
func (o *LinkBitbucketAccountMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account method not allowed response has a 4xx status code
func (o *LinkBitbucketAccountMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this link bitbucket account method not allowed response has a 5xx status code
func (o *LinkBitbucketAccountMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this link bitbucket account method not allowed response a status code equal to that given
func (o *LinkBitbucketAccountMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the link bitbucket account method not allowed response
func (o *LinkBitbucketAccountMethodNotAllowed) Code() int {
	return 405
}

func (o *LinkBitbucketAccountMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountMethodNotAllowed %s", 405, payload)
}

func (o *LinkBitbucketAccountMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountMethodNotAllowed %s", 405, payload)
}

func (o *LinkBitbucketAccountMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkBitbucketAccountMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkBitbucketAccountInternalServerError creates a LinkBitbucketAccountInternalServerError with default headers values
func NewLinkBitbucketAccountInternalServerError() *LinkBitbucketAccountInternalServerError {
	return &LinkBitbucketAccountInternalServerError{}
}

/*
LinkBitbucketAccountInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type LinkBitbucketAccountInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link bitbucket account internal server error response has a 2xx status code
func (o *LinkBitbucketAccountInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link bitbucket account internal server error response has a 3xx status code
func (o *LinkBitbucketAccountInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link bitbucket account internal server error response has a 4xx status code
func (o *LinkBitbucketAccountInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this link bitbucket account internal server error response has a 5xx status code
func (o *LinkBitbucketAccountInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this link bitbucket account internal server error response a status code equal to that given
func (o *LinkBitbucketAccountInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the link bitbucket account internal server error response
func (o *LinkBitbucketAccountInternalServerError) Code() int {
	return 500
}

func (o *LinkBitbucketAccountInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountInternalServerError %s", 500, payload)
}

func (o *LinkBitbucketAccountInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-bitbucket][%d] linkBitbucketAccountInternalServerError %s", 500, payload)
}

func (o *LinkBitbucketAccountInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkBitbucketAccountInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
