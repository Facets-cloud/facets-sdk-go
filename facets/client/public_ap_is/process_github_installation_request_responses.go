// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ProcessGithubInstallationRequestReader is a Reader for the ProcessGithubInstallationRequest structure.
type ProcessGithubInstallationRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ProcessGithubInstallationRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewProcessGithubInstallationRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewProcessGithubInstallationRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewProcessGithubInstallationRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewProcessGithubInstallationRequestMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewProcessGithubInstallationRequestInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/github-installation-request] processGithubInstallationRequest", response, response.Code())
	}
}

// NewProcessGithubInstallationRequestOK creates a ProcessGithubInstallationRequestOK with default headers values
func NewProcessGithubInstallationRequestOK() *ProcessGithubInstallationRequestOK {
	return &ProcessGithubInstallationRequestOK{}
}

/*
ProcessGithubInstallationRequestOK describes a response with status code 200, with default header values.

OK
*/
type ProcessGithubInstallationRequestOK struct {
	Payload *models.GithubAppInstallationRequestResponse
}

// IsSuccess returns true when this process github installation request o k response has a 2xx status code
func (o *ProcessGithubInstallationRequestOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this process github installation request o k response has a 3xx status code
func (o *ProcessGithubInstallationRequestOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this process github installation request o k response has a 4xx status code
func (o *ProcessGithubInstallationRequestOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this process github installation request o k response has a 5xx status code
func (o *ProcessGithubInstallationRequestOK) IsServerError() bool {
	return false
}

// IsCode returns true when this process github installation request o k response a status code equal to that given
func (o *ProcessGithubInstallationRequestOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the process github installation request o k response
func (o *ProcessGithubInstallationRequestOK) Code() int {
	return 200
}

func (o *ProcessGithubInstallationRequestOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestOK %s", 200, payload)
}

func (o *ProcessGithubInstallationRequestOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestOK %s", 200, payload)
}

func (o *ProcessGithubInstallationRequestOK) GetPayload() *models.GithubAppInstallationRequestResponse {
	return o.Payload
}

func (o *ProcessGithubInstallationRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GithubAppInstallationRequestResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessGithubInstallationRequestBadRequest creates a ProcessGithubInstallationRequestBadRequest with default headers values
func NewProcessGithubInstallationRequestBadRequest() *ProcessGithubInstallationRequestBadRequest {
	return &ProcessGithubInstallationRequestBadRequest{}
}

/*
ProcessGithubInstallationRequestBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type ProcessGithubInstallationRequestBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this process github installation request bad request response has a 2xx status code
func (o *ProcessGithubInstallationRequestBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this process github installation request bad request response has a 3xx status code
func (o *ProcessGithubInstallationRequestBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this process github installation request bad request response has a 4xx status code
func (o *ProcessGithubInstallationRequestBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this process github installation request bad request response has a 5xx status code
func (o *ProcessGithubInstallationRequestBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this process github installation request bad request response a status code equal to that given
func (o *ProcessGithubInstallationRequestBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the process github installation request bad request response
func (o *ProcessGithubInstallationRequestBadRequest) Code() int {
	return 400
}

func (o *ProcessGithubInstallationRequestBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestBadRequest %s", 400, payload)
}

func (o *ProcessGithubInstallationRequestBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestBadRequest %s", 400, payload)
}

func (o *ProcessGithubInstallationRequestBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ProcessGithubInstallationRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessGithubInstallationRequestNotFound creates a ProcessGithubInstallationRequestNotFound with default headers values
func NewProcessGithubInstallationRequestNotFound() *ProcessGithubInstallationRequestNotFound {
	return &ProcessGithubInstallationRequestNotFound{}
}

/*
ProcessGithubInstallationRequestNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ProcessGithubInstallationRequestNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this process github installation request not found response has a 2xx status code
func (o *ProcessGithubInstallationRequestNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this process github installation request not found response has a 3xx status code
func (o *ProcessGithubInstallationRequestNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this process github installation request not found response has a 4xx status code
func (o *ProcessGithubInstallationRequestNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this process github installation request not found response has a 5xx status code
func (o *ProcessGithubInstallationRequestNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this process github installation request not found response a status code equal to that given
func (o *ProcessGithubInstallationRequestNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the process github installation request not found response
func (o *ProcessGithubInstallationRequestNotFound) Code() int {
	return 404
}

func (o *ProcessGithubInstallationRequestNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestNotFound %s", 404, payload)
}

func (o *ProcessGithubInstallationRequestNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestNotFound %s", 404, payload)
}

func (o *ProcessGithubInstallationRequestNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ProcessGithubInstallationRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessGithubInstallationRequestMethodNotAllowed creates a ProcessGithubInstallationRequestMethodNotAllowed with default headers values
func NewProcessGithubInstallationRequestMethodNotAllowed() *ProcessGithubInstallationRequestMethodNotAllowed {
	return &ProcessGithubInstallationRequestMethodNotAllowed{}
}

/*
ProcessGithubInstallationRequestMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type ProcessGithubInstallationRequestMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this process github installation request method not allowed response has a 2xx status code
func (o *ProcessGithubInstallationRequestMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this process github installation request method not allowed response has a 3xx status code
func (o *ProcessGithubInstallationRequestMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this process github installation request method not allowed response has a 4xx status code
func (o *ProcessGithubInstallationRequestMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this process github installation request method not allowed response has a 5xx status code
func (o *ProcessGithubInstallationRequestMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this process github installation request method not allowed response a status code equal to that given
func (o *ProcessGithubInstallationRequestMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the process github installation request method not allowed response
func (o *ProcessGithubInstallationRequestMethodNotAllowed) Code() int {
	return 405
}

func (o *ProcessGithubInstallationRequestMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestMethodNotAllowed %s", 405, payload)
}

func (o *ProcessGithubInstallationRequestMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestMethodNotAllowed %s", 405, payload)
}

func (o *ProcessGithubInstallationRequestMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ProcessGithubInstallationRequestMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewProcessGithubInstallationRequestInternalServerError creates a ProcessGithubInstallationRequestInternalServerError with default headers values
func NewProcessGithubInstallationRequestInternalServerError() *ProcessGithubInstallationRequestInternalServerError {
	return &ProcessGithubInstallationRequestInternalServerError{}
}

/*
ProcessGithubInstallationRequestInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type ProcessGithubInstallationRequestInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this process github installation request internal server error response has a 2xx status code
func (o *ProcessGithubInstallationRequestInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this process github installation request internal server error response has a 3xx status code
func (o *ProcessGithubInstallationRequestInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this process github installation request internal server error response has a 4xx status code
func (o *ProcessGithubInstallationRequestInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this process github installation request internal server error response has a 5xx status code
func (o *ProcessGithubInstallationRequestInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this process github installation request internal server error response a status code equal to that given
func (o *ProcessGithubInstallationRequestInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the process github installation request internal server error response
func (o *ProcessGithubInstallationRequestInternalServerError) Code() int {
	return 500
}

func (o *ProcessGithubInstallationRequestInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestInternalServerError %s", 500, payload)
}

func (o *ProcessGithubInstallationRequestInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/github-installation-request][%d] processGithubInstallationRequestInternalServerError %s", 500, payload)
}

func (o *ProcessGithubInstallationRequestInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *ProcessGithubInstallationRequestInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
