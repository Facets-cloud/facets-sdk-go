// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// HealthCheckReader is a Reader for the HealthCheck structure.
type HealthCheckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HealthCheckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHealthCheckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewHealthCheckBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHealthCheckNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewHealthCheckMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewHealthCheckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /public/v1/health] healthCheck", response, response.Code())
	}
}

// NewHealthCheckOK creates a HealthCheckOK with default headers values
func NewHealthCheckOK() *HealthCheckOK {
	return &HealthCheckOK{}
}

/*
HealthCheckOK describes a response with status code 200, with default header values.

OK
*/
type HealthCheckOK struct {
	Payload map[string]interface{}
}

// IsSuccess returns true when this health check o k response has a 2xx status code
func (o *HealthCheckOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this health check o k response has a 3xx status code
func (o *HealthCheckOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this health check o k response has a 4xx status code
func (o *HealthCheckOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this health check o k response has a 5xx status code
func (o *HealthCheckOK) IsServerError() bool {
	return false
}

// IsCode returns true when this health check o k response a status code equal to that given
func (o *HealthCheckOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the health check o k response
func (o *HealthCheckOK) Code() int {
	return 200
}

func (o *HealthCheckOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckOK %s", 200, payload)
}

func (o *HealthCheckOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckOK %s", 200, payload)
}

func (o *HealthCheckOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *HealthCheckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHealthCheckBadRequest creates a HealthCheckBadRequest with default headers values
func NewHealthCheckBadRequest() *HealthCheckBadRequest {
	return &HealthCheckBadRequest{}
}

/*
HealthCheckBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type HealthCheckBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this health check bad request response has a 2xx status code
func (o *HealthCheckBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this health check bad request response has a 3xx status code
func (o *HealthCheckBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this health check bad request response has a 4xx status code
func (o *HealthCheckBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this health check bad request response has a 5xx status code
func (o *HealthCheckBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this health check bad request response a status code equal to that given
func (o *HealthCheckBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the health check bad request response
func (o *HealthCheckBadRequest) Code() int {
	return 400
}

func (o *HealthCheckBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckBadRequest %s", 400, payload)
}

func (o *HealthCheckBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckBadRequest %s", 400, payload)
}

func (o *HealthCheckBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *HealthCheckBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHealthCheckNotFound creates a HealthCheckNotFound with default headers values
func NewHealthCheckNotFound() *HealthCheckNotFound {
	return &HealthCheckNotFound{}
}

/*
HealthCheckNotFound describes a response with status code 404, with default header values.

Not Found
*/
type HealthCheckNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this health check not found response has a 2xx status code
func (o *HealthCheckNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this health check not found response has a 3xx status code
func (o *HealthCheckNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this health check not found response has a 4xx status code
func (o *HealthCheckNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this health check not found response has a 5xx status code
func (o *HealthCheckNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this health check not found response a status code equal to that given
func (o *HealthCheckNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the health check not found response
func (o *HealthCheckNotFound) Code() int {
	return 404
}

func (o *HealthCheckNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckNotFound %s", 404, payload)
}

func (o *HealthCheckNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckNotFound %s", 404, payload)
}

func (o *HealthCheckNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *HealthCheckNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHealthCheckMethodNotAllowed creates a HealthCheckMethodNotAllowed with default headers values
func NewHealthCheckMethodNotAllowed() *HealthCheckMethodNotAllowed {
	return &HealthCheckMethodNotAllowed{}
}

/*
HealthCheckMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type HealthCheckMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this health check method not allowed response has a 2xx status code
func (o *HealthCheckMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this health check method not allowed response has a 3xx status code
func (o *HealthCheckMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this health check method not allowed response has a 4xx status code
func (o *HealthCheckMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this health check method not allowed response has a 5xx status code
func (o *HealthCheckMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this health check method not allowed response a status code equal to that given
func (o *HealthCheckMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the health check method not allowed response
func (o *HealthCheckMethodNotAllowed) Code() int {
	return 405
}

func (o *HealthCheckMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckMethodNotAllowed %s", 405, payload)
}

func (o *HealthCheckMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckMethodNotAllowed %s", 405, payload)
}

func (o *HealthCheckMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *HealthCheckMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHealthCheckInternalServerError creates a HealthCheckInternalServerError with default headers values
func NewHealthCheckInternalServerError() *HealthCheckInternalServerError {
	return &HealthCheckInternalServerError{}
}

/*
HealthCheckInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type HealthCheckInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this health check internal server error response has a 2xx status code
func (o *HealthCheckInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this health check internal server error response has a 3xx status code
func (o *HealthCheckInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this health check internal server error response has a 4xx status code
func (o *HealthCheckInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this health check internal server error response has a 5xx status code
func (o *HealthCheckInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this health check internal server error response a status code equal to that given
func (o *HealthCheckInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the health check internal server error response
func (o *HealthCheckInternalServerError) Code() int {
	return 500
}

func (o *HealthCheckInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckInternalServerError %s", 500, payload)
}

func (o *HealthCheckInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /public/v1/health][%d] healthCheckInternalServerError %s", 500, payload)
}

func (o *HealthCheckInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *HealthCheckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
