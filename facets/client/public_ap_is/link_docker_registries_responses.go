// Code generated by go-swagger; DO NOT EDIT.

package public_ap_is

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// LinkDockerRegistriesReader is a Reader for the LinkDockerRegistries structure.
type LinkDockerRegistriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LinkDockerRegistriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLinkDockerRegistriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLinkDockerRegistriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLinkDockerRegistriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewLinkDockerRegistriesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLinkDockerRegistriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /public/v1/link-docker-registries] linkDockerRegistries", response, response.Code())
	}
}

// NewLinkDockerRegistriesOK creates a LinkDockerRegistriesOK with default headers values
func NewLinkDockerRegistriesOK() *LinkDockerRegistriesOK {
	return &LinkDockerRegistriesOK{}
}

/*
LinkDockerRegistriesOK describes a response with status code 200, with default header values.

OK
*/
type LinkDockerRegistriesOK struct {
}

// IsSuccess returns true when this link docker registries o k response has a 2xx status code
func (o *LinkDockerRegistriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this link docker registries o k response has a 3xx status code
func (o *LinkDockerRegistriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries o k response has a 4xx status code
func (o *LinkDockerRegistriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this link docker registries o k response has a 5xx status code
func (o *LinkDockerRegistriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries o k response a status code equal to that given
func (o *LinkDockerRegistriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the link docker registries o k response
func (o *LinkDockerRegistriesOK) Code() int {
	return 200
}

func (o *LinkDockerRegistriesOK) Error() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesOK", 200)
}

func (o *LinkDockerRegistriesOK) String() string {
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesOK", 200)
}

func (o *LinkDockerRegistriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLinkDockerRegistriesBadRequest creates a LinkDockerRegistriesBadRequest with default headers values
func NewLinkDockerRegistriesBadRequest() *LinkDockerRegistriesBadRequest {
	return &LinkDockerRegistriesBadRequest{}
}

/*
LinkDockerRegistriesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type LinkDockerRegistriesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link docker registries bad request response has a 2xx status code
func (o *LinkDockerRegistriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link docker registries bad request response has a 3xx status code
func (o *LinkDockerRegistriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries bad request response has a 4xx status code
func (o *LinkDockerRegistriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this link docker registries bad request response has a 5xx status code
func (o *LinkDockerRegistriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries bad request response a status code equal to that given
func (o *LinkDockerRegistriesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the link docker registries bad request response
func (o *LinkDockerRegistriesBadRequest) Code() int {
	return 400
}

func (o *LinkDockerRegistriesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesBadRequest %s", 400, payload)
}

func (o *LinkDockerRegistriesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesBadRequest %s", 400, payload)
}

func (o *LinkDockerRegistriesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkDockerRegistriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkDockerRegistriesNotFound creates a LinkDockerRegistriesNotFound with default headers values
func NewLinkDockerRegistriesNotFound() *LinkDockerRegistriesNotFound {
	return &LinkDockerRegistriesNotFound{}
}

/*
LinkDockerRegistriesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LinkDockerRegistriesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link docker registries not found response has a 2xx status code
func (o *LinkDockerRegistriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link docker registries not found response has a 3xx status code
func (o *LinkDockerRegistriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries not found response has a 4xx status code
func (o *LinkDockerRegistriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this link docker registries not found response has a 5xx status code
func (o *LinkDockerRegistriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries not found response a status code equal to that given
func (o *LinkDockerRegistriesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the link docker registries not found response
func (o *LinkDockerRegistriesNotFound) Code() int {
	return 404
}

func (o *LinkDockerRegistriesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesNotFound %s", 404, payload)
}

func (o *LinkDockerRegistriesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesNotFound %s", 404, payload)
}

func (o *LinkDockerRegistriesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkDockerRegistriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkDockerRegistriesMethodNotAllowed creates a LinkDockerRegistriesMethodNotAllowed with default headers values
func NewLinkDockerRegistriesMethodNotAllowed() *LinkDockerRegistriesMethodNotAllowed {
	return &LinkDockerRegistriesMethodNotAllowed{}
}

/*
LinkDockerRegistriesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type LinkDockerRegistriesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link docker registries method not allowed response has a 2xx status code
func (o *LinkDockerRegistriesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link docker registries method not allowed response has a 3xx status code
func (o *LinkDockerRegistriesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries method not allowed response has a 4xx status code
func (o *LinkDockerRegistriesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this link docker registries method not allowed response has a 5xx status code
func (o *LinkDockerRegistriesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this link docker registries method not allowed response a status code equal to that given
func (o *LinkDockerRegistriesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the link docker registries method not allowed response
func (o *LinkDockerRegistriesMethodNotAllowed) Code() int {
	return 405
}

func (o *LinkDockerRegistriesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesMethodNotAllowed %s", 405, payload)
}

func (o *LinkDockerRegistriesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesMethodNotAllowed %s", 405, payload)
}

func (o *LinkDockerRegistriesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkDockerRegistriesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLinkDockerRegistriesInternalServerError creates a LinkDockerRegistriesInternalServerError with default headers values
func NewLinkDockerRegistriesInternalServerError() *LinkDockerRegistriesInternalServerError {
	return &LinkDockerRegistriesInternalServerError{}
}

/*
LinkDockerRegistriesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type LinkDockerRegistriesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this link docker registries internal server error response has a 2xx status code
func (o *LinkDockerRegistriesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this link docker registries internal server error response has a 3xx status code
func (o *LinkDockerRegistriesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this link docker registries internal server error response has a 4xx status code
func (o *LinkDockerRegistriesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this link docker registries internal server error response has a 5xx status code
func (o *LinkDockerRegistriesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this link docker registries internal server error response a status code equal to that given
func (o *LinkDockerRegistriesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the link docker registries internal server error response
func (o *LinkDockerRegistriesInternalServerError) Code() int {
	return 500
}

func (o *LinkDockerRegistriesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesInternalServerError %s", 500, payload)
}

func (o *LinkDockerRegistriesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /public/v1/link-docker-registries][%d] linkDockerRegistriesInternalServerError %s", 500, payload)
}

func (o *LinkDockerRegistriesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *LinkDockerRegistriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
