// Code generated by go-swagger; DO NOT EDIT.

package ui_k_8s_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateK8sClusterReader is a Reader for the UpdateK8sCluster structure.
type UpdateK8sClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateK8sClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateK8sClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateK8sClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateK8sClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateK8sClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateK8sClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}] updateK8sCluster", response, response.Code())
	}
}

// NewUpdateK8sClusterOK creates a UpdateK8sClusterOK with default headers values
func NewUpdateK8sClusterOK() *UpdateK8sClusterOK {
	return &UpdateK8sClusterOK{}
}

/*
UpdateK8sClusterOK describes a response with status code 200, with default header values.

OK
*/
type UpdateK8sClusterOK struct {
	Payload *models.KubernetesCluster
}

// IsSuccess returns true when this update k8s cluster o k response has a 2xx status code
func (o *UpdateK8sClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update k8s cluster o k response has a 3xx status code
func (o *UpdateK8sClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster o k response has a 4xx status code
func (o *UpdateK8sClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k8s cluster o k response has a 5xx status code
func (o *UpdateK8sClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster o k response a status code equal to that given
func (o *UpdateK8sClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update k8s cluster o k response
func (o *UpdateK8sClusterOK) Code() int {
	return 200
}

func (o *UpdateK8sClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterOK %s", 200, payload)
}

func (o *UpdateK8sClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterOK %s", 200, payload)
}

func (o *UpdateK8sClusterOK) GetPayload() *models.KubernetesCluster {
	return o.Payload
}

func (o *UpdateK8sClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KubernetesCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateK8sClusterBadRequest creates a UpdateK8sClusterBadRequest with default headers values
func NewUpdateK8sClusterBadRequest() *UpdateK8sClusterBadRequest {
	return &UpdateK8sClusterBadRequest{}
}

/*
UpdateK8sClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateK8sClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update k8s cluster bad request response has a 2xx status code
func (o *UpdateK8sClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k8s cluster bad request response has a 3xx status code
func (o *UpdateK8sClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster bad request response has a 4xx status code
func (o *UpdateK8sClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k8s cluster bad request response has a 5xx status code
func (o *UpdateK8sClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster bad request response a status code equal to that given
func (o *UpdateK8sClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update k8s cluster bad request response
func (o *UpdateK8sClusterBadRequest) Code() int {
	return 400
}

func (o *UpdateK8sClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterBadRequest %s", 400, payload)
}

func (o *UpdateK8sClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterBadRequest %s", 400, payload)
}

func (o *UpdateK8sClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateK8sClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateK8sClusterNotFound creates a UpdateK8sClusterNotFound with default headers values
func NewUpdateK8sClusterNotFound() *UpdateK8sClusterNotFound {
	return &UpdateK8sClusterNotFound{}
}

/*
UpdateK8sClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateK8sClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update k8s cluster not found response has a 2xx status code
func (o *UpdateK8sClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k8s cluster not found response has a 3xx status code
func (o *UpdateK8sClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster not found response has a 4xx status code
func (o *UpdateK8sClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k8s cluster not found response has a 5xx status code
func (o *UpdateK8sClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster not found response a status code equal to that given
func (o *UpdateK8sClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update k8s cluster not found response
func (o *UpdateK8sClusterNotFound) Code() int {
	return 404
}

func (o *UpdateK8sClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterNotFound %s", 404, payload)
}

func (o *UpdateK8sClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterNotFound %s", 404, payload)
}

func (o *UpdateK8sClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateK8sClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateK8sClusterMethodNotAllowed creates a UpdateK8sClusterMethodNotAllowed with default headers values
func NewUpdateK8sClusterMethodNotAllowed() *UpdateK8sClusterMethodNotAllowed {
	return &UpdateK8sClusterMethodNotAllowed{}
}

/*
UpdateK8sClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateK8sClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update k8s cluster method not allowed response has a 2xx status code
func (o *UpdateK8sClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k8s cluster method not allowed response has a 3xx status code
func (o *UpdateK8sClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster method not allowed response has a 4xx status code
func (o *UpdateK8sClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k8s cluster method not allowed response has a 5xx status code
func (o *UpdateK8sClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster method not allowed response a status code equal to that given
func (o *UpdateK8sClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update k8s cluster method not allowed response
func (o *UpdateK8sClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateK8sClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterMethodNotAllowed %s", 405, payload)
}

func (o *UpdateK8sClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterMethodNotAllowed %s", 405, payload)
}

func (o *UpdateK8sClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateK8sClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateK8sClusterInternalServerError creates a UpdateK8sClusterInternalServerError with default headers values
func NewUpdateK8sClusterInternalServerError() *UpdateK8sClusterInternalServerError {
	return &UpdateK8sClusterInternalServerError{}
}

/*
UpdateK8sClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateK8sClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update k8s cluster internal server error response has a 2xx status code
func (o *UpdateK8sClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k8s cluster internal server error response has a 3xx status code
func (o *UpdateK8sClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster internal server error response has a 4xx status code
func (o *UpdateK8sClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k8s cluster internal server error response has a 5xx status code
func (o *UpdateK8sClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update k8s cluster internal server error response a status code equal to that given
func (o *UpdateK8sClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update k8s cluster internal server error response
func (o *UpdateK8sClusterInternalServerError) Code() int {
	return 500
}

func (o *UpdateK8sClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterInternalServerError %s", 500, payload)
}

func (o *UpdateK8sClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterInternalServerError %s", 500, payload)
}

func (o *UpdateK8sClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateK8sClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
