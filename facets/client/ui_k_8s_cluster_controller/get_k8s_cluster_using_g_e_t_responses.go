// Code generated by go-swagger; DO NOT EDIT.

package ui_k_8s_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetK8sClusterUsingGETReader is a Reader for the GetK8sClusterUsingGET structure.
type GetK8sClusterUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetK8sClusterUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetK8sClusterUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetK8sClusterUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetK8sClusterUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetK8sClusterUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}] getK8sClusterUsingGET", response, response.Code())
	}
}

// NewGetK8sClusterUsingGETOK creates a GetK8sClusterUsingGETOK with default headers values
func NewGetK8sClusterUsingGETOK() *GetK8sClusterUsingGETOK {
	return &GetK8sClusterUsingGETOK{}
}

/*
GetK8sClusterUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetK8sClusterUsingGETOK struct {
	Payload *models.KubernetesCluster
}

// IsSuccess returns true when this get k8s cluster using g e t o k response has a 2xx status code
func (o *GetK8sClusterUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get k8s cluster using g e t o k response has a 3xx status code
func (o *GetK8sClusterUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s cluster using g e t o k response has a 4xx status code
func (o *GetK8sClusterUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get k8s cluster using g e t o k response has a 5xx status code
func (o *GetK8sClusterUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s cluster using g e t o k response a status code equal to that given
func (o *GetK8sClusterUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get k8s cluster using g e t o k response
func (o *GetK8sClusterUsingGETOK) Code() int {
	return 200
}

func (o *GetK8sClusterUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETOK %s", 200, payload)
}

func (o *GetK8sClusterUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETOK %s", 200, payload)
}

func (o *GetK8sClusterUsingGETOK) GetPayload() *models.KubernetesCluster {
	return o.Payload
}

func (o *GetK8sClusterUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KubernetesCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetK8sClusterUsingGETUnauthorized creates a GetK8sClusterUsingGETUnauthorized with default headers values
func NewGetK8sClusterUsingGETUnauthorized() *GetK8sClusterUsingGETUnauthorized {
	return &GetK8sClusterUsingGETUnauthorized{}
}

/*
GetK8sClusterUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetK8sClusterUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get k8s cluster using g e t unauthorized response has a 2xx status code
func (o *GetK8sClusterUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s cluster using g e t unauthorized response has a 3xx status code
func (o *GetK8sClusterUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s cluster using g e t unauthorized response has a 4xx status code
func (o *GetK8sClusterUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s cluster using g e t unauthorized response has a 5xx status code
func (o *GetK8sClusterUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s cluster using g e t unauthorized response a status code equal to that given
func (o *GetK8sClusterUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get k8s cluster using g e t unauthorized response
func (o *GetK8sClusterUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetK8sClusterUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETUnauthorized", 401)
}

func (o *GetK8sClusterUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETUnauthorized", 401)
}

func (o *GetK8sClusterUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetK8sClusterUsingGETForbidden creates a GetK8sClusterUsingGETForbidden with default headers values
func NewGetK8sClusterUsingGETForbidden() *GetK8sClusterUsingGETForbidden {
	return &GetK8sClusterUsingGETForbidden{}
}

/*
GetK8sClusterUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetK8sClusterUsingGETForbidden struct {
}

// IsSuccess returns true when this get k8s cluster using g e t forbidden response has a 2xx status code
func (o *GetK8sClusterUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s cluster using g e t forbidden response has a 3xx status code
func (o *GetK8sClusterUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s cluster using g e t forbidden response has a 4xx status code
func (o *GetK8sClusterUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s cluster using g e t forbidden response has a 5xx status code
func (o *GetK8sClusterUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s cluster using g e t forbidden response a status code equal to that given
func (o *GetK8sClusterUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get k8s cluster using g e t forbidden response
func (o *GetK8sClusterUsingGETForbidden) Code() int {
	return 403
}

func (o *GetK8sClusterUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETForbidden", 403)
}

func (o *GetK8sClusterUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETForbidden", 403)
}

func (o *GetK8sClusterUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetK8sClusterUsingGETNotFound creates a GetK8sClusterUsingGETNotFound with default headers values
func NewGetK8sClusterUsingGETNotFound() *GetK8sClusterUsingGETNotFound {
	return &GetK8sClusterUsingGETNotFound{}
}

/*
GetK8sClusterUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetK8sClusterUsingGETNotFound struct {
}

// IsSuccess returns true when this get k8s cluster using g e t not found response has a 2xx status code
func (o *GetK8sClusterUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s cluster using g e t not found response has a 3xx status code
func (o *GetK8sClusterUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s cluster using g e t not found response has a 4xx status code
func (o *GetK8sClusterUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s cluster using g e t not found response has a 5xx status code
func (o *GetK8sClusterUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s cluster using g e t not found response a status code equal to that given
func (o *GetK8sClusterUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get k8s cluster using g e t not found response
func (o *GetK8sClusterUsingGETNotFound) Code() int {
	return 404
}

func (o *GetK8sClusterUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETNotFound", 404)
}

func (o *GetK8sClusterUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] getK8sClusterUsingGETNotFound", 404)
}

func (o *GetK8sClusterUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
