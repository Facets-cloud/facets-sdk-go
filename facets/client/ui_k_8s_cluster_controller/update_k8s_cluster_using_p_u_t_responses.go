// Code generated by go-swagger; DO NOT EDIT.

package ui_k_8s_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateK8sClusterUsingPUTReader is a Reader for the UpdateK8sClusterUsingPUT structure.
type UpdateK8sClusterUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateK8sClusterUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateK8sClusterUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateK8sClusterUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateK8sClusterUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateK8sClusterUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateK8sClusterUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}] updateK8sClusterUsingPUT", response, response.Code())
	}
}

// NewUpdateK8sClusterUsingPUTOK creates a UpdateK8sClusterUsingPUTOK with default headers values
func NewUpdateK8sClusterUsingPUTOK() *UpdateK8sClusterUsingPUTOK {
	return &UpdateK8sClusterUsingPUTOK{}
}

/*
UpdateK8sClusterUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateK8sClusterUsingPUTOK struct {
	Payload *models.KubernetesCluster
}

// IsSuccess returns true when this update k8s cluster using p u t o k response has a 2xx status code
func (o *UpdateK8sClusterUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update k8s cluster using p u t o k response has a 3xx status code
func (o *UpdateK8sClusterUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster using p u t o k response has a 4xx status code
func (o *UpdateK8sClusterUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k8s cluster using p u t o k response has a 5xx status code
func (o *UpdateK8sClusterUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster using p u t o k response a status code equal to that given
func (o *UpdateK8sClusterUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update k8s cluster using p u t o k response
func (o *UpdateK8sClusterUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateK8sClusterUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTOK %s", 200, payload)
}

func (o *UpdateK8sClusterUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTOK %s", 200, payload)
}

func (o *UpdateK8sClusterUsingPUTOK) GetPayload() *models.KubernetesCluster {
	return o.Payload
}

func (o *UpdateK8sClusterUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.KubernetesCluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateK8sClusterUsingPUTCreated creates a UpdateK8sClusterUsingPUTCreated with default headers values
func NewUpdateK8sClusterUsingPUTCreated() *UpdateK8sClusterUsingPUTCreated {
	return &UpdateK8sClusterUsingPUTCreated{}
}

/*
UpdateK8sClusterUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateK8sClusterUsingPUTCreated struct {
}

// IsSuccess returns true when this update k8s cluster using p u t created response has a 2xx status code
func (o *UpdateK8sClusterUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update k8s cluster using p u t created response has a 3xx status code
func (o *UpdateK8sClusterUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster using p u t created response has a 4xx status code
func (o *UpdateK8sClusterUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update k8s cluster using p u t created response has a 5xx status code
func (o *UpdateK8sClusterUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster using p u t created response a status code equal to that given
func (o *UpdateK8sClusterUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update k8s cluster using p u t created response
func (o *UpdateK8sClusterUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateK8sClusterUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTCreated", 201)
}

func (o *UpdateK8sClusterUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTCreated", 201)
}

func (o *UpdateK8sClusterUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateK8sClusterUsingPUTUnauthorized creates a UpdateK8sClusterUsingPUTUnauthorized with default headers values
func NewUpdateK8sClusterUsingPUTUnauthorized() *UpdateK8sClusterUsingPUTUnauthorized {
	return &UpdateK8sClusterUsingPUTUnauthorized{}
}

/*
UpdateK8sClusterUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateK8sClusterUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update k8s cluster using p u t unauthorized response has a 2xx status code
func (o *UpdateK8sClusterUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k8s cluster using p u t unauthorized response has a 3xx status code
func (o *UpdateK8sClusterUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster using p u t unauthorized response has a 4xx status code
func (o *UpdateK8sClusterUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k8s cluster using p u t unauthorized response has a 5xx status code
func (o *UpdateK8sClusterUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster using p u t unauthorized response a status code equal to that given
func (o *UpdateK8sClusterUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update k8s cluster using p u t unauthorized response
func (o *UpdateK8sClusterUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateK8sClusterUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTUnauthorized", 401)
}

func (o *UpdateK8sClusterUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTUnauthorized", 401)
}

func (o *UpdateK8sClusterUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateK8sClusterUsingPUTForbidden creates a UpdateK8sClusterUsingPUTForbidden with default headers values
func NewUpdateK8sClusterUsingPUTForbidden() *UpdateK8sClusterUsingPUTForbidden {
	return &UpdateK8sClusterUsingPUTForbidden{}
}

/*
UpdateK8sClusterUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateK8sClusterUsingPUTForbidden struct {
}

// IsSuccess returns true when this update k8s cluster using p u t forbidden response has a 2xx status code
func (o *UpdateK8sClusterUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k8s cluster using p u t forbidden response has a 3xx status code
func (o *UpdateK8sClusterUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster using p u t forbidden response has a 4xx status code
func (o *UpdateK8sClusterUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k8s cluster using p u t forbidden response has a 5xx status code
func (o *UpdateK8sClusterUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster using p u t forbidden response a status code equal to that given
func (o *UpdateK8sClusterUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update k8s cluster using p u t forbidden response
func (o *UpdateK8sClusterUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateK8sClusterUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTForbidden", 403)
}

func (o *UpdateK8sClusterUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTForbidden", 403)
}

func (o *UpdateK8sClusterUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateK8sClusterUsingPUTNotFound creates a UpdateK8sClusterUsingPUTNotFound with default headers values
func NewUpdateK8sClusterUsingPUTNotFound() *UpdateK8sClusterUsingPUTNotFound {
	return &UpdateK8sClusterUsingPUTNotFound{}
}

/*
UpdateK8sClusterUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateK8sClusterUsingPUTNotFound struct {
}

// IsSuccess returns true when this update k8s cluster using p u t not found response has a 2xx status code
func (o *UpdateK8sClusterUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update k8s cluster using p u t not found response has a 3xx status code
func (o *UpdateK8sClusterUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update k8s cluster using p u t not found response has a 4xx status code
func (o *UpdateK8sClusterUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update k8s cluster using p u t not found response has a 5xx status code
func (o *UpdateK8sClusterUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update k8s cluster using p u t not found response a status code equal to that given
func (o *UpdateK8sClusterUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update k8s cluster using p u t not found response
func (o *UpdateK8sClusterUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateK8sClusterUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTNotFound", 404)
}

func (o *UpdateK8sClusterUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/kubernetes/clusters/{clusterId}][%d] updateK8sClusterUsingPUTNotFound", 404)
}

func (o *UpdateK8sClusterUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
