// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetLatestReleaseByApplicationReader is a Reader for the GetLatestReleaseByApplication structure.
type GetLatestReleaseByApplicationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLatestReleaseByApplicationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLatestReleaseByApplicationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLatestReleaseByApplicationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLatestReleaseByApplicationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetLatestReleaseByApplicationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLatestReleaseByApplicationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}] getLatestReleaseByApplication", response, response.Code())
	}
}

// NewGetLatestReleaseByApplicationOK creates a GetLatestReleaseByApplicationOK with default headers values
func NewGetLatestReleaseByApplicationOK() *GetLatestReleaseByApplicationOK {
	return &GetLatestReleaseByApplicationOK{}
}

/*
GetLatestReleaseByApplicationOK describes a response with status code 200, with default header values.

OK
*/
type GetLatestReleaseByApplicationOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this get latest release by application o k response has a 2xx status code
func (o *GetLatestReleaseByApplicationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get latest release by application o k response has a 3xx status code
func (o *GetLatestReleaseByApplicationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get latest release by application o k response has a 4xx status code
func (o *GetLatestReleaseByApplicationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get latest release by application o k response has a 5xx status code
func (o *GetLatestReleaseByApplicationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get latest release by application o k response a status code equal to that given
func (o *GetLatestReleaseByApplicationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get latest release by application o k response
func (o *GetLatestReleaseByApplicationOK) Code() int {
	return 200
}

func (o *GetLatestReleaseByApplicationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationOK %s", 200, payload)
}

func (o *GetLatestReleaseByApplicationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationOK %s", 200, payload)
}

func (o *GetLatestReleaseByApplicationOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *GetLatestReleaseByApplicationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLatestReleaseByApplicationBadRequest creates a GetLatestReleaseByApplicationBadRequest with default headers values
func NewGetLatestReleaseByApplicationBadRequest() *GetLatestReleaseByApplicationBadRequest {
	return &GetLatestReleaseByApplicationBadRequest{}
}

/*
GetLatestReleaseByApplicationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLatestReleaseByApplicationBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get latest release by application bad request response has a 2xx status code
func (o *GetLatestReleaseByApplicationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get latest release by application bad request response has a 3xx status code
func (o *GetLatestReleaseByApplicationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get latest release by application bad request response has a 4xx status code
func (o *GetLatestReleaseByApplicationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get latest release by application bad request response has a 5xx status code
func (o *GetLatestReleaseByApplicationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get latest release by application bad request response a status code equal to that given
func (o *GetLatestReleaseByApplicationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get latest release by application bad request response
func (o *GetLatestReleaseByApplicationBadRequest) Code() int {
	return 400
}

func (o *GetLatestReleaseByApplicationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationBadRequest %s", 400, payload)
}

func (o *GetLatestReleaseByApplicationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationBadRequest %s", 400, payload)
}

func (o *GetLatestReleaseByApplicationBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLatestReleaseByApplicationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLatestReleaseByApplicationNotFound creates a GetLatestReleaseByApplicationNotFound with default headers values
func NewGetLatestReleaseByApplicationNotFound() *GetLatestReleaseByApplicationNotFound {
	return &GetLatestReleaseByApplicationNotFound{}
}

/*
GetLatestReleaseByApplicationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLatestReleaseByApplicationNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get latest release by application not found response has a 2xx status code
func (o *GetLatestReleaseByApplicationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get latest release by application not found response has a 3xx status code
func (o *GetLatestReleaseByApplicationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get latest release by application not found response has a 4xx status code
func (o *GetLatestReleaseByApplicationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get latest release by application not found response has a 5xx status code
func (o *GetLatestReleaseByApplicationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get latest release by application not found response a status code equal to that given
func (o *GetLatestReleaseByApplicationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get latest release by application not found response
func (o *GetLatestReleaseByApplicationNotFound) Code() int {
	return 404
}

func (o *GetLatestReleaseByApplicationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationNotFound %s", 404, payload)
}

func (o *GetLatestReleaseByApplicationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationNotFound %s", 404, payload)
}

func (o *GetLatestReleaseByApplicationNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLatestReleaseByApplicationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLatestReleaseByApplicationMethodNotAllowed creates a GetLatestReleaseByApplicationMethodNotAllowed with default headers values
func NewGetLatestReleaseByApplicationMethodNotAllowed() *GetLatestReleaseByApplicationMethodNotAllowed {
	return &GetLatestReleaseByApplicationMethodNotAllowed{}
}

/*
GetLatestReleaseByApplicationMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetLatestReleaseByApplicationMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get latest release by application method not allowed response has a 2xx status code
func (o *GetLatestReleaseByApplicationMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get latest release by application method not allowed response has a 3xx status code
func (o *GetLatestReleaseByApplicationMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get latest release by application method not allowed response has a 4xx status code
func (o *GetLatestReleaseByApplicationMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get latest release by application method not allowed response has a 5xx status code
func (o *GetLatestReleaseByApplicationMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get latest release by application method not allowed response a status code equal to that given
func (o *GetLatestReleaseByApplicationMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get latest release by application method not allowed response
func (o *GetLatestReleaseByApplicationMethodNotAllowed) Code() int {
	return 405
}

func (o *GetLatestReleaseByApplicationMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationMethodNotAllowed %s", 405, payload)
}

func (o *GetLatestReleaseByApplicationMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationMethodNotAllowed %s", 405, payload)
}

func (o *GetLatestReleaseByApplicationMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLatestReleaseByApplicationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLatestReleaseByApplicationInternalServerError creates a GetLatestReleaseByApplicationInternalServerError with default headers values
func NewGetLatestReleaseByApplicationInternalServerError() *GetLatestReleaseByApplicationInternalServerError {
	return &GetLatestReleaseByApplicationInternalServerError{}
}

/*
GetLatestReleaseByApplicationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLatestReleaseByApplicationInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get latest release by application internal server error response has a 2xx status code
func (o *GetLatestReleaseByApplicationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get latest release by application internal server error response has a 3xx status code
func (o *GetLatestReleaseByApplicationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get latest release by application internal server error response has a 4xx status code
func (o *GetLatestReleaseByApplicationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get latest release by application internal server error response has a 5xx status code
func (o *GetLatestReleaseByApplicationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get latest release by application internal server error response a status code equal to that given
func (o *GetLatestReleaseByApplicationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get latest release by application internal server error response
func (o *GetLatestReleaseByApplicationInternalServerError) Code() int {
	return 500
}

func (o *GetLatestReleaseByApplicationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationInternalServerError %s", 500, payload)
}

func (o *GetLatestReleaseByApplicationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/latest-successful-release/{application}][%d] getLatestReleaseByApplicationInternalServerError %s", 500, payload)
}

func (o *GetLatestReleaseByApplicationInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLatestReleaseByApplicationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
