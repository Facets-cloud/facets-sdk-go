// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// TriggerTerraformExportReader is a Reader for the TriggerTerraformExport structure.
type TriggerTerraformExportReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *TriggerTerraformExportReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewTriggerTerraformExportOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewTriggerTerraformExportBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewTriggerTerraformExportNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewTriggerTerraformExportMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewTriggerTerraformExportInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export] triggerTerraformExport", response, response.Code())
	}
}

// NewTriggerTerraformExportOK creates a TriggerTerraformExportOK with default headers values
func NewTriggerTerraformExportOK() *TriggerTerraformExportOK {
	return &TriggerTerraformExportOK{}
}

/*
TriggerTerraformExportOK describes a response with status code 200, with default header values.

OK
*/
type TriggerTerraformExportOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this trigger terraform export o k response has a 2xx status code
func (o *TriggerTerraformExportOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this trigger terraform export o k response has a 3xx status code
func (o *TriggerTerraformExportOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger terraform export o k response has a 4xx status code
func (o *TriggerTerraformExportOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger terraform export o k response has a 5xx status code
func (o *TriggerTerraformExportOK) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger terraform export o k response a status code equal to that given
func (o *TriggerTerraformExportOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the trigger terraform export o k response
func (o *TriggerTerraformExportOK) Code() int {
	return 200
}

func (o *TriggerTerraformExportOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportOK %s", 200, payload)
}

func (o *TriggerTerraformExportOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportOK %s", 200, payload)
}

func (o *TriggerTerraformExportOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *TriggerTerraformExportOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerTerraformExportBadRequest creates a TriggerTerraformExportBadRequest with default headers values
func NewTriggerTerraformExportBadRequest() *TriggerTerraformExportBadRequest {
	return &TriggerTerraformExportBadRequest{}
}

/*
TriggerTerraformExportBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type TriggerTerraformExportBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this trigger terraform export bad request response has a 2xx status code
func (o *TriggerTerraformExportBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger terraform export bad request response has a 3xx status code
func (o *TriggerTerraformExportBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger terraform export bad request response has a 4xx status code
func (o *TriggerTerraformExportBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this trigger terraform export bad request response has a 5xx status code
func (o *TriggerTerraformExportBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger terraform export bad request response a status code equal to that given
func (o *TriggerTerraformExportBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the trigger terraform export bad request response
func (o *TriggerTerraformExportBadRequest) Code() int {
	return 400
}

func (o *TriggerTerraformExportBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportBadRequest %s", 400, payload)
}

func (o *TriggerTerraformExportBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportBadRequest %s", 400, payload)
}

func (o *TriggerTerraformExportBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *TriggerTerraformExportBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerTerraformExportNotFound creates a TriggerTerraformExportNotFound with default headers values
func NewTriggerTerraformExportNotFound() *TriggerTerraformExportNotFound {
	return &TriggerTerraformExportNotFound{}
}

/*
TriggerTerraformExportNotFound describes a response with status code 404, with default header values.

Not Found
*/
type TriggerTerraformExportNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this trigger terraform export not found response has a 2xx status code
func (o *TriggerTerraformExportNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger terraform export not found response has a 3xx status code
func (o *TriggerTerraformExportNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger terraform export not found response has a 4xx status code
func (o *TriggerTerraformExportNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this trigger terraform export not found response has a 5xx status code
func (o *TriggerTerraformExportNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger terraform export not found response a status code equal to that given
func (o *TriggerTerraformExportNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the trigger terraform export not found response
func (o *TriggerTerraformExportNotFound) Code() int {
	return 404
}

func (o *TriggerTerraformExportNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportNotFound %s", 404, payload)
}

func (o *TriggerTerraformExportNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportNotFound %s", 404, payload)
}

func (o *TriggerTerraformExportNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *TriggerTerraformExportNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerTerraformExportMethodNotAllowed creates a TriggerTerraformExportMethodNotAllowed with default headers values
func NewTriggerTerraformExportMethodNotAllowed() *TriggerTerraformExportMethodNotAllowed {
	return &TriggerTerraformExportMethodNotAllowed{}
}

/*
TriggerTerraformExportMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type TriggerTerraformExportMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this trigger terraform export method not allowed response has a 2xx status code
func (o *TriggerTerraformExportMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger terraform export method not allowed response has a 3xx status code
func (o *TriggerTerraformExportMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger terraform export method not allowed response has a 4xx status code
func (o *TriggerTerraformExportMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this trigger terraform export method not allowed response has a 5xx status code
func (o *TriggerTerraformExportMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this trigger terraform export method not allowed response a status code equal to that given
func (o *TriggerTerraformExportMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the trigger terraform export method not allowed response
func (o *TriggerTerraformExportMethodNotAllowed) Code() int {
	return 405
}

func (o *TriggerTerraformExportMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportMethodNotAllowed %s", 405, payload)
}

func (o *TriggerTerraformExportMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportMethodNotAllowed %s", 405, payload)
}

func (o *TriggerTerraformExportMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *TriggerTerraformExportMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewTriggerTerraformExportInternalServerError creates a TriggerTerraformExportInternalServerError with default headers values
func NewTriggerTerraformExportInternalServerError() *TriggerTerraformExportInternalServerError {
	return &TriggerTerraformExportInternalServerError{}
}

/*
TriggerTerraformExportInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type TriggerTerraformExportInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this trigger terraform export internal server error response has a 2xx status code
func (o *TriggerTerraformExportInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this trigger terraform export internal server error response has a 3xx status code
func (o *TriggerTerraformExportInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this trigger terraform export internal server error response has a 4xx status code
func (o *TriggerTerraformExportInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this trigger terraform export internal server error response has a 5xx status code
func (o *TriggerTerraformExportInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this trigger terraform export internal server error response a status code equal to that given
func (o *TriggerTerraformExportInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the trigger terraform export internal server error response
func (o *TriggerTerraformExportInternalServerError) Code() int {
	return 500
}

func (o *TriggerTerraformExportInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportInternalServerError %s", 500, payload)
}

func (o *TriggerTerraformExportInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/terraform-export][%d] triggerTerraformExportInternalServerError %s", 500, payload)
}

func (o *TriggerTerraformExportInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *TriggerTerraformExportInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
