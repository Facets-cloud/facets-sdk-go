// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// StreamDeploymentLogsReader is a Reader for the StreamDeploymentLogs structure.
type StreamDeploymentLogsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StreamDeploymentLogsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStreamDeploymentLogsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStreamDeploymentLogsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStreamDeploymentLogsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewStreamDeploymentLogsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStreamDeploymentLogsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream] streamDeploymentLogs", response, response.Code())
	}
}

// NewStreamDeploymentLogsOK creates a StreamDeploymentLogsOK with default headers values
func NewStreamDeploymentLogsOK() *StreamDeploymentLogsOK {
	return &StreamDeploymentLogsOK{}
}

/*
StreamDeploymentLogsOK describes a response with status code 200, with default header values.

OK
*/
type StreamDeploymentLogsOK struct {
	Payload models.StreamingResponseBody
}

// IsSuccess returns true when this stream deployment logs o k response has a 2xx status code
func (o *StreamDeploymentLogsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this stream deployment logs o k response has a 3xx status code
func (o *StreamDeploymentLogsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream deployment logs o k response has a 4xx status code
func (o *StreamDeploymentLogsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this stream deployment logs o k response has a 5xx status code
func (o *StreamDeploymentLogsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this stream deployment logs o k response a status code equal to that given
func (o *StreamDeploymentLogsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the stream deployment logs o k response
func (o *StreamDeploymentLogsOK) Code() int {
	return 200
}

func (o *StreamDeploymentLogsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsOK %s", 200, payload)
}

func (o *StreamDeploymentLogsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsOK %s", 200, payload)
}

func (o *StreamDeploymentLogsOK) GetPayload() models.StreamingResponseBody {
	return o.Payload
}

func (o *StreamDeploymentLogsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamDeploymentLogsBadRequest creates a StreamDeploymentLogsBadRequest with default headers values
func NewStreamDeploymentLogsBadRequest() *StreamDeploymentLogsBadRequest {
	return &StreamDeploymentLogsBadRequest{}
}

/*
StreamDeploymentLogsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StreamDeploymentLogsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this stream deployment logs bad request response has a 2xx status code
func (o *StreamDeploymentLogsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stream deployment logs bad request response has a 3xx status code
func (o *StreamDeploymentLogsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream deployment logs bad request response has a 4xx status code
func (o *StreamDeploymentLogsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this stream deployment logs bad request response has a 5xx status code
func (o *StreamDeploymentLogsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this stream deployment logs bad request response a status code equal to that given
func (o *StreamDeploymentLogsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the stream deployment logs bad request response
func (o *StreamDeploymentLogsBadRequest) Code() int {
	return 400
}

func (o *StreamDeploymentLogsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsBadRequest %s", 400, payload)
}

func (o *StreamDeploymentLogsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsBadRequest %s", 400, payload)
}

func (o *StreamDeploymentLogsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StreamDeploymentLogsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamDeploymentLogsNotFound creates a StreamDeploymentLogsNotFound with default headers values
func NewStreamDeploymentLogsNotFound() *StreamDeploymentLogsNotFound {
	return &StreamDeploymentLogsNotFound{}
}

/*
StreamDeploymentLogsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StreamDeploymentLogsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this stream deployment logs not found response has a 2xx status code
func (o *StreamDeploymentLogsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stream deployment logs not found response has a 3xx status code
func (o *StreamDeploymentLogsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream deployment logs not found response has a 4xx status code
func (o *StreamDeploymentLogsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this stream deployment logs not found response has a 5xx status code
func (o *StreamDeploymentLogsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this stream deployment logs not found response a status code equal to that given
func (o *StreamDeploymentLogsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the stream deployment logs not found response
func (o *StreamDeploymentLogsNotFound) Code() int {
	return 404
}

func (o *StreamDeploymentLogsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsNotFound %s", 404, payload)
}

func (o *StreamDeploymentLogsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsNotFound %s", 404, payload)
}

func (o *StreamDeploymentLogsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StreamDeploymentLogsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamDeploymentLogsMethodNotAllowed creates a StreamDeploymentLogsMethodNotAllowed with default headers values
func NewStreamDeploymentLogsMethodNotAllowed() *StreamDeploymentLogsMethodNotAllowed {
	return &StreamDeploymentLogsMethodNotAllowed{}
}

/*
StreamDeploymentLogsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type StreamDeploymentLogsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this stream deployment logs method not allowed response has a 2xx status code
func (o *StreamDeploymentLogsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stream deployment logs method not allowed response has a 3xx status code
func (o *StreamDeploymentLogsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream deployment logs method not allowed response has a 4xx status code
func (o *StreamDeploymentLogsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this stream deployment logs method not allowed response has a 5xx status code
func (o *StreamDeploymentLogsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this stream deployment logs method not allowed response a status code equal to that given
func (o *StreamDeploymentLogsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the stream deployment logs method not allowed response
func (o *StreamDeploymentLogsMethodNotAllowed) Code() int {
	return 405
}

func (o *StreamDeploymentLogsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsMethodNotAllowed %s", 405, payload)
}

func (o *StreamDeploymentLogsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsMethodNotAllowed %s", 405, payload)
}

func (o *StreamDeploymentLogsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StreamDeploymentLogsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStreamDeploymentLogsInternalServerError creates a StreamDeploymentLogsInternalServerError with default headers values
func NewStreamDeploymentLogsInternalServerError() *StreamDeploymentLogsInternalServerError {
	return &StreamDeploymentLogsInternalServerError{}
}

/*
StreamDeploymentLogsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type StreamDeploymentLogsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this stream deployment logs internal server error response has a 2xx status code
func (o *StreamDeploymentLogsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this stream deployment logs internal server error response has a 3xx status code
func (o *StreamDeploymentLogsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this stream deployment logs internal server error response has a 4xx status code
func (o *StreamDeploymentLogsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this stream deployment logs internal server error response has a 5xx status code
func (o *StreamDeploymentLogsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this stream deployment logs internal server error response a status code equal to that given
func (o *StreamDeploymentLogsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the stream deployment logs internal server error response
func (o *StreamDeploymentLogsInternalServerError) Code() int {
	return 500
}

func (o *StreamDeploymentLogsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsInternalServerError %s", 500, payload)
}

func (o *StreamDeploymentLogsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}/logs/stream][%d] streamDeploymentLogsInternalServerError %s", 500, payload)
}

func (o *StreamDeploymentLogsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StreamDeploymentLogsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
