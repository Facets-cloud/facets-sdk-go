// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SearchDeploymentsReader is a Reader for the SearchDeployments structure.
type SearchDeploymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchDeploymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchDeploymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchDeploymentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSearchDeploymentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSearchDeploymentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSearchDeploymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search] searchDeployments", response, response.Code())
	}
}

// NewSearchDeploymentsOK creates a SearchDeploymentsOK with default headers values
func NewSearchDeploymentsOK() *SearchDeploymentsOK {
	return &SearchDeploymentsOK{}
}

/*
SearchDeploymentsOK describes a response with status code 200, with default header values.

OK
*/
type SearchDeploymentsOK struct {
	Payload *models.PageDeploymentLog
}

// IsSuccess returns true when this search deployments o k response has a 2xx status code
func (o *SearchDeploymentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this search deployments o k response has a 3xx status code
func (o *SearchDeploymentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployments o k response has a 4xx status code
func (o *SearchDeploymentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this search deployments o k response has a 5xx status code
func (o *SearchDeploymentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployments o k response a status code equal to that given
func (o *SearchDeploymentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the search deployments o k response
func (o *SearchDeploymentsOK) Code() int {
	return 200
}

func (o *SearchDeploymentsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsOK %s", 200, payload)
}

func (o *SearchDeploymentsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsOK %s", 200, payload)
}

func (o *SearchDeploymentsOK) GetPayload() *models.PageDeploymentLog {
	return o.Payload
}

func (o *SearchDeploymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageDeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentsBadRequest creates a SearchDeploymentsBadRequest with default headers values
func NewSearchDeploymentsBadRequest() *SearchDeploymentsBadRequest {
	return &SearchDeploymentsBadRequest{}
}

/*
SearchDeploymentsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SearchDeploymentsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search deployments bad request response has a 2xx status code
func (o *SearchDeploymentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployments bad request response has a 3xx status code
func (o *SearchDeploymentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployments bad request response has a 4xx status code
func (o *SearchDeploymentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this search deployments bad request response has a 5xx status code
func (o *SearchDeploymentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployments bad request response a status code equal to that given
func (o *SearchDeploymentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the search deployments bad request response
func (o *SearchDeploymentsBadRequest) Code() int {
	return 400
}

func (o *SearchDeploymentsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsBadRequest %s", 400, payload)
}

func (o *SearchDeploymentsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsBadRequest %s", 400, payload)
}

func (o *SearchDeploymentsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchDeploymentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentsNotFound creates a SearchDeploymentsNotFound with default headers values
func NewSearchDeploymentsNotFound() *SearchDeploymentsNotFound {
	return &SearchDeploymentsNotFound{}
}

/*
SearchDeploymentsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SearchDeploymentsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search deployments not found response has a 2xx status code
func (o *SearchDeploymentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployments not found response has a 3xx status code
func (o *SearchDeploymentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployments not found response has a 4xx status code
func (o *SearchDeploymentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this search deployments not found response has a 5xx status code
func (o *SearchDeploymentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployments not found response a status code equal to that given
func (o *SearchDeploymentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the search deployments not found response
func (o *SearchDeploymentsNotFound) Code() int {
	return 404
}

func (o *SearchDeploymentsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsNotFound %s", 404, payload)
}

func (o *SearchDeploymentsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsNotFound %s", 404, payload)
}

func (o *SearchDeploymentsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchDeploymentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentsMethodNotAllowed creates a SearchDeploymentsMethodNotAllowed with default headers values
func NewSearchDeploymentsMethodNotAllowed() *SearchDeploymentsMethodNotAllowed {
	return &SearchDeploymentsMethodNotAllowed{}
}

/*
SearchDeploymentsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SearchDeploymentsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search deployments method not allowed response has a 2xx status code
func (o *SearchDeploymentsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployments method not allowed response has a 3xx status code
func (o *SearchDeploymentsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployments method not allowed response has a 4xx status code
func (o *SearchDeploymentsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this search deployments method not allowed response has a 5xx status code
func (o *SearchDeploymentsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this search deployments method not allowed response a status code equal to that given
func (o *SearchDeploymentsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the search deployments method not allowed response
func (o *SearchDeploymentsMethodNotAllowed) Code() int {
	return 405
}

func (o *SearchDeploymentsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsMethodNotAllowed %s", 405, payload)
}

func (o *SearchDeploymentsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsMethodNotAllowed %s", 405, payload)
}

func (o *SearchDeploymentsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchDeploymentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchDeploymentsInternalServerError creates a SearchDeploymentsInternalServerError with default headers values
func NewSearchDeploymentsInternalServerError() *SearchDeploymentsInternalServerError {
	return &SearchDeploymentsInternalServerError{}
}

/*
SearchDeploymentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SearchDeploymentsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this search deployments internal server error response has a 2xx status code
func (o *SearchDeploymentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this search deployments internal server error response has a 3xx status code
func (o *SearchDeploymentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this search deployments internal server error response has a 4xx status code
func (o *SearchDeploymentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this search deployments internal server error response has a 5xx status code
func (o *SearchDeploymentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this search deployments internal server error response a status code equal to that given
func (o *SearchDeploymentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the search deployments internal server error response
func (o *SearchDeploymentsInternalServerError) Code() int {
	return 500
}

func (o *SearchDeploymentsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsInternalServerError %s", 500, payload)
}

func (o *SearchDeploymentsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/search][%d] searchDeploymentsInternalServerError %s", 500, payload)
}

func (o *SearchDeploymentsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SearchDeploymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
