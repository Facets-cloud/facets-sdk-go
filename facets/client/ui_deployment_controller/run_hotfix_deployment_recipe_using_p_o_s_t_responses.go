// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RunHotfixDeploymentRecipeUsingPOSTReader is a Reader for the RunHotfixDeploymentRecipeUsingPOST structure.
type RunHotfixDeploymentRecipeUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RunHotfixDeploymentRecipeUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRunHotfixDeploymentRecipeUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRunHotfixDeploymentRecipeUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRunHotfixDeploymentRecipeUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRunHotfixDeploymentRecipeUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRunHotfixDeploymentRecipeUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix] runHotfixDeploymentRecipeUsingPOST", response, response.Code())
	}
}

// NewRunHotfixDeploymentRecipeUsingPOSTOK creates a RunHotfixDeploymentRecipeUsingPOSTOK with default headers values
func NewRunHotfixDeploymentRecipeUsingPOSTOK() *RunHotfixDeploymentRecipeUsingPOSTOK {
	return &RunHotfixDeploymentRecipeUsingPOSTOK{}
}

/*
RunHotfixDeploymentRecipeUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RunHotfixDeploymentRecipeUsingPOSTOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this run hotfix deployment recipe using p o s t o k response has a 2xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this run hotfix deployment recipe using p o s t o k response has a 3xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run hotfix deployment recipe using p o s t o k response has a 4xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this run hotfix deployment recipe using p o s t o k response has a 5xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this run hotfix deployment recipe using p o s t o k response a status code equal to that given
func (o *RunHotfixDeploymentRecipeUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the run hotfix deployment recipe using p o s t o k response
func (o *RunHotfixDeploymentRecipeUsingPOSTOK) Code() int {
	return 200
}

func (o *RunHotfixDeploymentRecipeUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTOK %s", 200, payload)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTOK %s", 200, payload)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *RunHotfixDeploymentRecipeUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRunHotfixDeploymentRecipeUsingPOSTCreated creates a RunHotfixDeploymentRecipeUsingPOSTCreated with default headers values
func NewRunHotfixDeploymentRecipeUsingPOSTCreated() *RunHotfixDeploymentRecipeUsingPOSTCreated {
	return &RunHotfixDeploymentRecipeUsingPOSTCreated{}
}

/*
RunHotfixDeploymentRecipeUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RunHotfixDeploymentRecipeUsingPOSTCreated struct {
}

// IsSuccess returns true when this run hotfix deployment recipe using p o s t created response has a 2xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this run hotfix deployment recipe using p o s t created response has a 3xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run hotfix deployment recipe using p o s t created response has a 4xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this run hotfix deployment recipe using p o s t created response has a 5xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this run hotfix deployment recipe using p o s t created response a status code equal to that given
func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the run hotfix deployment recipe using p o s t created response
func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) Code() int {
	return 201
}

func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTCreated", 201)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTCreated", 201)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRunHotfixDeploymentRecipeUsingPOSTUnauthorized creates a RunHotfixDeploymentRecipeUsingPOSTUnauthorized with default headers values
func NewRunHotfixDeploymentRecipeUsingPOSTUnauthorized() *RunHotfixDeploymentRecipeUsingPOSTUnauthorized {
	return &RunHotfixDeploymentRecipeUsingPOSTUnauthorized{}
}

/*
RunHotfixDeploymentRecipeUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RunHotfixDeploymentRecipeUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this run hotfix deployment recipe using p o s t unauthorized response has a 2xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this run hotfix deployment recipe using p o s t unauthorized response has a 3xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run hotfix deployment recipe using p o s t unauthorized response has a 4xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this run hotfix deployment recipe using p o s t unauthorized response has a 5xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this run hotfix deployment recipe using p o s t unauthorized response a status code equal to that given
func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the run hotfix deployment recipe using p o s t unauthorized response
func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTUnauthorized", 401)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTUnauthorized", 401)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRunHotfixDeploymentRecipeUsingPOSTForbidden creates a RunHotfixDeploymentRecipeUsingPOSTForbidden with default headers values
func NewRunHotfixDeploymentRecipeUsingPOSTForbidden() *RunHotfixDeploymentRecipeUsingPOSTForbidden {
	return &RunHotfixDeploymentRecipeUsingPOSTForbidden{}
}

/*
RunHotfixDeploymentRecipeUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RunHotfixDeploymentRecipeUsingPOSTForbidden struct {
}

// IsSuccess returns true when this run hotfix deployment recipe using p o s t forbidden response has a 2xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this run hotfix deployment recipe using p o s t forbidden response has a 3xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run hotfix deployment recipe using p o s t forbidden response has a 4xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this run hotfix deployment recipe using p o s t forbidden response has a 5xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this run hotfix deployment recipe using p o s t forbidden response a status code equal to that given
func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the run hotfix deployment recipe using p o s t forbidden response
func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTForbidden", 403)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTForbidden", 403)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRunHotfixDeploymentRecipeUsingPOSTNotFound creates a RunHotfixDeploymentRecipeUsingPOSTNotFound with default headers values
func NewRunHotfixDeploymentRecipeUsingPOSTNotFound() *RunHotfixDeploymentRecipeUsingPOSTNotFound {
	return &RunHotfixDeploymentRecipeUsingPOSTNotFound{}
}

/*
RunHotfixDeploymentRecipeUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RunHotfixDeploymentRecipeUsingPOSTNotFound struct {
}

// IsSuccess returns true when this run hotfix deployment recipe using p o s t not found response has a 2xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this run hotfix deployment recipe using p o s t not found response has a 3xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this run hotfix deployment recipe using p o s t not found response has a 4xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this run hotfix deployment recipe using p o s t not found response has a 5xx status code
func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this run hotfix deployment recipe using p o s t not found response a status code equal to that given
func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the run hotfix deployment recipe using p o s t not found response
func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTNotFound", 404)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/deployments/recipes/deployment/hotfix][%d] runHotfixDeploymentRecipeUsingPOSTNotFound", 404)
}

func (o *RunHotfixDeploymentRecipeUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
