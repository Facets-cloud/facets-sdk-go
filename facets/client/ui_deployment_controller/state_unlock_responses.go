// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// StateUnlockReader is a Reader for the StateUnlock structure.
type StateUnlockReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StateUnlockReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStateUnlockOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStateUnlockBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStateUnlockNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewStateUnlockMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewStateUnlockInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock] stateUnlock", response, response.Code())
	}
}

// NewStateUnlockOK creates a StateUnlockOK with default headers values
func NewStateUnlockOK() *StateUnlockOK {
	return &StateUnlockOK{}
}

/*
StateUnlockOK describes a response with status code 200, with default header values.

OK
*/
type StateUnlockOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this state unlock o k response has a 2xx status code
func (o *StateUnlockOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this state unlock o k response has a 3xx status code
func (o *StateUnlockOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock o k response has a 4xx status code
func (o *StateUnlockOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this state unlock o k response has a 5xx status code
func (o *StateUnlockOK) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock o k response a status code equal to that given
func (o *StateUnlockOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the state unlock o k response
func (o *StateUnlockOK) Code() int {
	return 200
}

func (o *StateUnlockOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockOK %s", 200, payload)
}

func (o *StateUnlockOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockOK %s", 200, payload)
}

func (o *StateUnlockOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *StateUnlockOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStateUnlockBadRequest creates a StateUnlockBadRequest with default headers values
func NewStateUnlockBadRequest() *StateUnlockBadRequest {
	return &StateUnlockBadRequest{}
}

/*
StateUnlockBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type StateUnlockBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this state unlock bad request response has a 2xx status code
func (o *StateUnlockBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this state unlock bad request response has a 3xx status code
func (o *StateUnlockBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock bad request response has a 4xx status code
func (o *StateUnlockBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this state unlock bad request response has a 5xx status code
func (o *StateUnlockBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock bad request response a status code equal to that given
func (o *StateUnlockBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the state unlock bad request response
func (o *StateUnlockBadRequest) Code() int {
	return 400
}

func (o *StateUnlockBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockBadRequest %s", 400, payload)
}

func (o *StateUnlockBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockBadRequest %s", 400, payload)
}

func (o *StateUnlockBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StateUnlockBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStateUnlockNotFound creates a StateUnlockNotFound with default headers values
func NewStateUnlockNotFound() *StateUnlockNotFound {
	return &StateUnlockNotFound{}
}

/*
StateUnlockNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StateUnlockNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this state unlock not found response has a 2xx status code
func (o *StateUnlockNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this state unlock not found response has a 3xx status code
func (o *StateUnlockNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock not found response has a 4xx status code
func (o *StateUnlockNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this state unlock not found response has a 5xx status code
func (o *StateUnlockNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock not found response a status code equal to that given
func (o *StateUnlockNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the state unlock not found response
func (o *StateUnlockNotFound) Code() int {
	return 404
}

func (o *StateUnlockNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockNotFound %s", 404, payload)
}

func (o *StateUnlockNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockNotFound %s", 404, payload)
}

func (o *StateUnlockNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StateUnlockNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStateUnlockMethodNotAllowed creates a StateUnlockMethodNotAllowed with default headers values
func NewStateUnlockMethodNotAllowed() *StateUnlockMethodNotAllowed {
	return &StateUnlockMethodNotAllowed{}
}

/*
StateUnlockMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type StateUnlockMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this state unlock method not allowed response has a 2xx status code
func (o *StateUnlockMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this state unlock method not allowed response has a 3xx status code
func (o *StateUnlockMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock method not allowed response has a 4xx status code
func (o *StateUnlockMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this state unlock method not allowed response has a 5xx status code
func (o *StateUnlockMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock method not allowed response a status code equal to that given
func (o *StateUnlockMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the state unlock method not allowed response
func (o *StateUnlockMethodNotAllowed) Code() int {
	return 405
}

func (o *StateUnlockMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockMethodNotAllowed %s", 405, payload)
}

func (o *StateUnlockMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockMethodNotAllowed %s", 405, payload)
}

func (o *StateUnlockMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StateUnlockMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStateUnlockInternalServerError creates a StateUnlockInternalServerError with default headers values
func NewStateUnlockInternalServerError() *StateUnlockInternalServerError {
	return &StateUnlockInternalServerError{}
}

/*
StateUnlockInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type StateUnlockInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this state unlock internal server error response has a 2xx status code
func (o *StateUnlockInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this state unlock internal server error response has a 3xx status code
func (o *StateUnlockInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock internal server error response has a 4xx status code
func (o *StateUnlockInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this state unlock internal server error response has a 5xx status code
func (o *StateUnlockInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this state unlock internal server error response a status code equal to that given
func (o *StateUnlockInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the state unlock internal server error response
func (o *StateUnlockInternalServerError) Code() int {
	return 500
}

func (o *StateUnlockInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockInternalServerError %s", 500, payload)
}

func (o *StateUnlockInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockInternalServerError %s", 500, payload)
}

func (o *StateUnlockInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *StateUnlockInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
