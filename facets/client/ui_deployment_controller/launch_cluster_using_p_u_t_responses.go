// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// LaunchClusterUsingPUTReader is a Reader for the LaunchClusterUsingPUT structure.
type LaunchClusterUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LaunchClusterUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLaunchClusterUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewLaunchClusterUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLaunchClusterUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLaunchClusterUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLaunchClusterUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch] launchClusterUsingPUT", response, response.Code())
	}
}

// NewLaunchClusterUsingPUTOK creates a LaunchClusterUsingPUTOK with default headers values
func NewLaunchClusterUsingPUTOK() *LaunchClusterUsingPUTOK {
	return &LaunchClusterUsingPUTOK{}
}

/*
LaunchClusterUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type LaunchClusterUsingPUTOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this launch cluster using p u t o k response has a 2xx status code
func (o *LaunchClusterUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this launch cluster using p u t o k response has a 3xx status code
func (o *LaunchClusterUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this launch cluster using p u t o k response has a 4xx status code
func (o *LaunchClusterUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this launch cluster using p u t o k response has a 5xx status code
func (o *LaunchClusterUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this launch cluster using p u t o k response a status code equal to that given
func (o *LaunchClusterUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the launch cluster using p u t o k response
func (o *LaunchClusterUsingPUTOK) Code() int {
	return 200
}

func (o *LaunchClusterUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTOK %s", 200, payload)
}

func (o *LaunchClusterUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTOK %s", 200, payload)
}

func (o *LaunchClusterUsingPUTOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *LaunchClusterUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLaunchClusterUsingPUTCreated creates a LaunchClusterUsingPUTCreated with default headers values
func NewLaunchClusterUsingPUTCreated() *LaunchClusterUsingPUTCreated {
	return &LaunchClusterUsingPUTCreated{}
}

/*
LaunchClusterUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type LaunchClusterUsingPUTCreated struct {
}

// IsSuccess returns true when this launch cluster using p u t created response has a 2xx status code
func (o *LaunchClusterUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this launch cluster using p u t created response has a 3xx status code
func (o *LaunchClusterUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this launch cluster using p u t created response has a 4xx status code
func (o *LaunchClusterUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this launch cluster using p u t created response has a 5xx status code
func (o *LaunchClusterUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this launch cluster using p u t created response a status code equal to that given
func (o *LaunchClusterUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the launch cluster using p u t created response
func (o *LaunchClusterUsingPUTCreated) Code() int {
	return 201
}

func (o *LaunchClusterUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTCreated", 201)
}

func (o *LaunchClusterUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTCreated", 201)
}

func (o *LaunchClusterUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLaunchClusterUsingPUTUnauthorized creates a LaunchClusterUsingPUTUnauthorized with default headers values
func NewLaunchClusterUsingPUTUnauthorized() *LaunchClusterUsingPUTUnauthorized {
	return &LaunchClusterUsingPUTUnauthorized{}
}

/*
LaunchClusterUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LaunchClusterUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this launch cluster using p u t unauthorized response has a 2xx status code
func (o *LaunchClusterUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this launch cluster using p u t unauthorized response has a 3xx status code
func (o *LaunchClusterUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this launch cluster using p u t unauthorized response has a 4xx status code
func (o *LaunchClusterUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this launch cluster using p u t unauthorized response has a 5xx status code
func (o *LaunchClusterUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this launch cluster using p u t unauthorized response a status code equal to that given
func (o *LaunchClusterUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the launch cluster using p u t unauthorized response
func (o *LaunchClusterUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *LaunchClusterUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTUnauthorized", 401)
}

func (o *LaunchClusterUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTUnauthorized", 401)
}

func (o *LaunchClusterUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLaunchClusterUsingPUTForbidden creates a LaunchClusterUsingPUTForbidden with default headers values
func NewLaunchClusterUsingPUTForbidden() *LaunchClusterUsingPUTForbidden {
	return &LaunchClusterUsingPUTForbidden{}
}

/*
LaunchClusterUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LaunchClusterUsingPUTForbidden struct {
}

// IsSuccess returns true when this launch cluster using p u t forbidden response has a 2xx status code
func (o *LaunchClusterUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this launch cluster using p u t forbidden response has a 3xx status code
func (o *LaunchClusterUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this launch cluster using p u t forbidden response has a 4xx status code
func (o *LaunchClusterUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this launch cluster using p u t forbidden response has a 5xx status code
func (o *LaunchClusterUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this launch cluster using p u t forbidden response a status code equal to that given
func (o *LaunchClusterUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the launch cluster using p u t forbidden response
func (o *LaunchClusterUsingPUTForbidden) Code() int {
	return 403
}

func (o *LaunchClusterUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTForbidden", 403)
}

func (o *LaunchClusterUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTForbidden", 403)
}

func (o *LaunchClusterUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLaunchClusterUsingPUTNotFound creates a LaunchClusterUsingPUTNotFound with default headers values
func NewLaunchClusterUsingPUTNotFound() *LaunchClusterUsingPUTNotFound {
	return &LaunchClusterUsingPUTNotFound{}
}

/*
LaunchClusterUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type LaunchClusterUsingPUTNotFound struct {
}

// IsSuccess returns true when this launch cluster using p u t not found response has a 2xx status code
func (o *LaunchClusterUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this launch cluster using p u t not found response has a 3xx status code
func (o *LaunchClusterUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this launch cluster using p u t not found response has a 4xx status code
func (o *LaunchClusterUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this launch cluster using p u t not found response has a 5xx status code
func (o *LaunchClusterUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this launch cluster using p u t not found response a status code equal to that given
func (o *LaunchClusterUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the launch cluster using p u t not found response
func (o *LaunchClusterUsingPUTNotFound) Code() int {
	return 404
}

func (o *LaunchClusterUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTNotFound", 404)
}

func (o *LaunchClusterUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/launch][%d] launchClusterUsingPUTNotFound", 404)
}

func (o *LaunchClusterUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
