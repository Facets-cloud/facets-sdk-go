// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// StateUnlockUsingPUTReader is a Reader for the StateUnlockUsingPUT structure.
type StateUnlockUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StateUnlockUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStateUnlockUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewStateUnlockUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewStateUnlockUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewStateUnlockUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStateUnlockUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock] stateUnlockUsingPUT", response, response.Code())
	}
}

// NewStateUnlockUsingPUTOK creates a StateUnlockUsingPUTOK with default headers values
func NewStateUnlockUsingPUTOK() *StateUnlockUsingPUTOK {
	return &StateUnlockUsingPUTOK{}
}

/*
StateUnlockUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type StateUnlockUsingPUTOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this state unlock using p u t o k response has a 2xx status code
func (o *StateUnlockUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this state unlock using p u t o k response has a 3xx status code
func (o *StateUnlockUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock using p u t o k response has a 4xx status code
func (o *StateUnlockUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this state unlock using p u t o k response has a 5xx status code
func (o *StateUnlockUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock using p u t o k response a status code equal to that given
func (o *StateUnlockUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the state unlock using p u t o k response
func (o *StateUnlockUsingPUTOK) Code() int {
	return 200
}

func (o *StateUnlockUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTOK %s", 200, payload)
}

func (o *StateUnlockUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTOK %s", 200, payload)
}

func (o *StateUnlockUsingPUTOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *StateUnlockUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStateUnlockUsingPUTCreated creates a StateUnlockUsingPUTCreated with default headers values
func NewStateUnlockUsingPUTCreated() *StateUnlockUsingPUTCreated {
	return &StateUnlockUsingPUTCreated{}
}

/*
StateUnlockUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type StateUnlockUsingPUTCreated struct {
}

// IsSuccess returns true when this state unlock using p u t created response has a 2xx status code
func (o *StateUnlockUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this state unlock using p u t created response has a 3xx status code
func (o *StateUnlockUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock using p u t created response has a 4xx status code
func (o *StateUnlockUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this state unlock using p u t created response has a 5xx status code
func (o *StateUnlockUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock using p u t created response a status code equal to that given
func (o *StateUnlockUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the state unlock using p u t created response
func (o *StateUnlockUsingPUTCreated) Code() int {
	return 201
}

func (o *StateUnlockUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTCreated", 201)
}

func (o *StateUnlockUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTCreated", 201)
}

func (o *StateUnlockUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStateUnlockUsingPUTUnauthorized creates a StateUnlockUsingPUTUnauthorized with default headers values
func NewStateUnlockUsingPUTUnauthorized() *StateUnlockUsingPUTUnauthorized {
	return &StateUnlockUsingPUTUnauthorized{}
}

/*
StateUnlockUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type StateUnlockUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this state unlock using p u t unauthorized response has a 2xx status code
func (o *StateUnlockUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this state unlock using p u t unauthorized response has a 3xx status code
func (o *StateUnlockUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock using p u t unauthorized response has a 4xx status code
func (o *StateUnlockUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this state unlock using p u t unauthorized response has a 5xx status code
func (o *StateUnlockUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock using p u t unauthorized response a status code equal to that given
func (o *StateUnlockUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the state unlock using p u t unauthorized response
func (o *StateUnlockUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *StateUnlockUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTUnauthorized", 401)
}

func (o *StateUnlockUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTUnauthorized", 401)
}

func (o *StateUnlockUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStateUnlockUsingPUTForbidden creates a StateUnlockUsingPUTForbidden with default headers values
func NewStateUnlockUsingPUTForbidden() *StateUnlockUsingPUTForbidden {
	return &StateUnlockUsingPUTForbidden{}
}

/*
StateUnlockUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type StateUnlockUsingPUTForbidden struct {
}

// IsSuccess returns true when this state unlock using p u t forbidden response has a 2xx status code
func (o *StateUnlockUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this state unlock using p u t forbidden response has a 3xx status code
func (o *StateUnlockUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock using p u t forbidden response has a 4xx status code
func (o *StateUnlockUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this state unlock using p u t forbidden response has a 5xx status code
func (o *StateUnlockUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock using p u t forbidden response a status code equal to that given
func (o *StateUnlockUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the state unlock using p u t forbidden response
func (o *StateUnlockUsingPUTForbidden) Code() int {
	return 403
}

func (o *StateUnlockUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTForbidden", 403)
}

func (o *StateUnlockUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTForbidden", 403)
}

func (o *StateUnlockUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewStateUnlockUsingPUTNotFound creates a StateUnlockUsingPUTNotFound with default headers values
func NewStateUnlockUsingPUTNotFound() *StateUnlockUsingPUTNotFound {
	return &StateUnlockUsingPUTNotFound{}
}

/*
StateUnlockUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type StateUnlockUsingPUTNotFound struct {
}

// IsSuccess returns true when this state unlock using p u t not found response has a 2xx status code
func (o *StateUnlockUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this state unlock using p u t not found response has a 3xx status code
func (o *StateUnlockUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this state unlock using p u t not found response has a 4xx status code
func (o *StateUnlockUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this state unlock using p u t not found response has a 5xx status code
func (o *StateUnlockUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this state unlock using p u t not found response a status code equal to that given
func (o *StateUnlockUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the state unlock using p u t not found response
func (o *StateUnlockUsingPUTNotFound) Code() int {
	return 404
}

func (o *StateUnlockUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTNotFound", 404)
}

func (o *StateUnlockUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/deployments/unlock][%d] stateUnlockUsingPUTNotFound", 404)
}

func (o *StateUnlockUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
