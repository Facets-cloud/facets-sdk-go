// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetClusterStateUsingGETReader is a Reader for the GetClusterStateUsingGET structure.
type GetClusterStateUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClusterStateUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClusterStateUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClusterStateUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClusterStateUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClusterStateUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state] getClusterStateUsingGET", response, response.Code())
	}
}

// NewGetClusterStateUsingGETOK creates a GetClusterStateUsingGETOK with default headers values
func NewGetClusterStateUsingGETOK() *GetClusterStateUsingGETOK {
	return &GetClusterStateUsingGETOK{}
}

/*
GetClusterStateUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClusterStateUsingGETOK struct {
	Payload string
}

// IsSuccess returns true when this get cluster state using g e t o k response has a 2xx status code
func (o *GetClusterStateUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get cluster state using g e t o k response has a 3xx status code
func (o *GetClusterStateUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster state using g e t o k response has a 4xx status code
func (o *GetClusterStateUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get cluster state using g e t o k response has a 5xx status code
func (o *GetClusterStateUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster state using g e t o k response a status code equal to that given
func (o *GetClusterStateUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get cluster state using g e t o k response
func (o *GetClusterStateUsingGETOK) Code() int {
	return 200
}

func (o *GetClusterStateUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETOK %s", 200, payload)
}

func (o *GetClusterStateUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETOK %s", 200, payload)
}

func (o *GetClusterStateUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *GetClusterStateUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClusterStateUsingGETUnauthorized creates a GetClusterStateUsingGETUnauthorized with default headers values
func NewGetClusterStateUsingGETUnauthorized() *GetClusterStateUsingGETUnauthorized {
	return &GetClusterStateUsingGETUnauthorized{}
}

/*
GetClusterStateUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClusterStateUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get cluster state using g e t unauthorized response has a 2xx status code
func (o *GetClusterStateUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster state using g e t unauthorized response has a 3xx status code
func (o *GetClusterStateUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster state using g e t unauthorized response has a 4xx status code
func (o *GetClusterStateUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster state using g e t unauthorized response has a 5xx status code
func (o *GetClusterStateUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster state using g e t unauthorized response a status code equal to that given
func (o *GetClusterStateUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get cluster state using g e t unauthorized response
func (o *GetClusterStateUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClusterStateUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETUnauthorized", 401)
}

func (o *GetClusterStateUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETUnauthorized", 401)
}

func (o *GetClusterStateUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterStateUsingGETForbidden creates a GetClusterStateUsingGETForbidden with default headers values
func NewGetClusterStateUsingGETForbidden() *GetClusterStateUsingGETForbidden {
	return &GetClusterStateUsingGETForbidden{}
}

/*
GetClusterStateUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClusterStateUsingGETForbidden struct {
}

// IsSuccess returns true when this get cluster state using g e t forbidden response has a 2xx status code
func (o *GetClusterStateUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster state using g e t forbidden response has a 3xx status code
func (o *GetClusterStateUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster state using g e t forbidden response has a 4xx status code
func (o *GetClusterStateUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster state using g e t forbidden response has a 5xx status code
func (o *GetClusterStateUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster state using g e t forbidden response a status code equal to that given
func (o *GetClusterStateUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get cluster state using g e t forbidden response
func (o *GetClusterStateUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClusterStateUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETForbidden", 403)
}

func (o *GetClusterStateUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETForbidden", 403)
}

func (o *GetClusterStateUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClusterStateUsingGETNotFound creates a GetClusterStateUsingGETNotFound with default headers values
func NewGetClusterStateUsingGETNotFound() *GetClusterStateUsingGETNotFound {
	return &GetClusterStateUsingGETNotFound{}
}

/*
GetClusterStateUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClusterStateUsingGETNotFound struct {
}

// IsSuccess returns true when this get cluster state using g e t not found response has a 2xx status code
func (o *GetClusterStateUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get cluster state using g e t not found response has a 3xx status code
func (o *GetClusterStateUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get cluster state using g e t not found response has a 4xx status code
func (o *GetClusterStateUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get cluster state using g e t not found response has a 5xx status code
func (o *GetClusterStateUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get cluster state using g e t not found response a status code equal to that given
func (o *GetClusterStateUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get cluster state using g e t not found response
func (o *GetClusterStateUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClusterStateUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETNotFound", 404)
}

func (o *GetClusterStateUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/state][%d] getClusterStateUsingGETNotFound", 404)
}

func (o *GetClusterStateUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
