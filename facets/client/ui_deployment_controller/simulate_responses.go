// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SimulateReader is a Reader for the Simulate structure.
type SimulateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SimulateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSimulateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSimulateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSimulateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSimulateMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSimulateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate] simulate", response, response.Code())
	}
}

// NewSimulateOK creates a SimulateOK with default headers values
func NewSimulateOK() *SimulateOK {
	return &SimulateOK{}
}

/*
SimulateOK describes a response with status code 200, with default header values.

OK
*/
type SimulateOK struct {
	Payload []*models.ChangeRepresentationObject
}

// IsSuccess returns true when this simulate o k response has a 2xx status code
func (o *SimulateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this simulate o k response has a 3xx status code
func (o *SimulateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate o k response has a 4xx status code
func (o *SimulateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this simulate o k response has a 5xx status code
func (o *SimulateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate o k response a status code equal to that given
func (o *SimulateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the simulate o k response
func (o *SimulateOK) Code() int {
	return 200
}

func (o *SimulateOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateOK %s", 200, payload)
}

func (o *SimulateOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateOK %s", 200, payload)
}

func (o *SimulateOK) GetPayload() []*models.ChangeRepresentationObject {
	return o.Payload
}

func (o *SimulateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimulateBadRequest creates a SimulateBadRequest with default headers values
func NewSimulateBadRequest() *SimulateBadRequest {
	return &SimulateBadRequest{}
}

/*
SimulateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SimulateBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this simulate bad request response has a 2xx status code
func (o *SimulateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this simulate bad request response has a 3xx status code
func (o *SimulateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate bad request response has a 4xx status code
func (o *SimulateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this simulate bad request response has a 5xx status code
func (o *SimulateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate bad request response a status code equal to that given
func (o *SimulateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the simulate bad request response
func (o *SimulateBadRequest) Code() int {
	return 400
}

func (o *SimulateBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateBadRequest %s", 400, payload)
}

func (o *SimulateBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateBadRequest %s", 400, payload)
}

func (o *SimulateBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SimulateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimulateNotFound creates a SimulateNotFound with default headers values
func NewSimulateNotFound() *SimulateNotFound {
	return &SimulateNotFound{}
}

/*
SimulateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SimulateNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this simulate not found response has a 2xx status code
func (o *SimulateNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this simulate not found response has a 3xx status code
func (o *SimulateNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate not found response has a 4xx status code
func (o *SimulateNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this simulate not found response has a 5xx status code
func (o *SimulateNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate not found response a status code equal to that given
func (o *SimulateNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the simulate not found response
func (o *SimulateNotFound) Code() int {
	return 404
}

func (o *SimulateNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateNotFound %s", 404, payload)
}

func (o *SimulateNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateNotFound %s", 404, payload)
}

func (o *SimulateNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SimulateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimulateMethodNotAllowed creates a SimulateMethodNotAllowed with default headers values
func NewSimulateMethodNotAllowed() *SimulateMethodNotAllowed {
	return &SimulateMethodNotAllowed{}
}

/*
SimulateMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SimulateMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this simulate method not allowed response has a 2xx status code
func (o *SimulateMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this simulate method not allowed response has a 3xx status code
func (o *SimulateMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate method not allowed response has a 4xx status code
func (o *SimulateMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this simulate method not allowed response has a 5xx status code
func (o *SimulateMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate method not allowed response a status code equal to that given
func (o *SimulateMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the simulate method not allowed response
func (o *SimulateMethodNotAllowed) Code() int {
	return 405
}

func (o *SimulateMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateMethodNotAllowed %s", 405, payload)
}

func (o *SimulateMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateMethodNotAllowed %s", 405, payload)
}

func (o *SimulateMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SimulateMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimulateInternalServerError creates a SimulateInternalServerError with default headers values
func NewSimulateInternalServerError() *SimulateInternalServerError {
	return &SimulateInternalServerError{}
}

/*
SimulateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SimulateInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this simulate internal server error response has a 2xx status code
func (o *SimulateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this simulate internal server error response has a 3xx status code
func (o *SimulateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate internal server error response has a 4xx status code
func (o *SimulateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this simulate internal server error response has a 5xx status code
func (o *SimulateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this simulate internal server error response a status code equal to that given
func (o *SimulateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the simulate internal server error response
func (o *SimulateInternalServerError) Code() int {
	return 500
}

func (o *SimulateInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateInternalServerError %s", 500, payload)
}

func (o *SimulateInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateInternalServerError %s", 500, payload)
}

func (o *SimulateInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SimulateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
