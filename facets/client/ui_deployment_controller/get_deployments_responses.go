// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetDeploymentsReader is a Reader for the GetDeployments structure.
type GetDeploymentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDeploymentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDeploymentsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDeploymentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments] getDeployments", response, response.Code())
	}
}

// NewGetDeploymentsOK creates a GetDeploymentsOK with default headers values
func NewGetDeploymentsOK() *GetDeploymentsOK {
	return &GetDeploymentsOK{}
}

/*
GetDeploymentsOK describes a response with status code 200, with default header values.

OK
*/
type GetDeploymentsOK struct {
	Payload *models.ListDeploymentsWrapper
}

// IsSuccess returns true when this get deployments o k response has a 2xx status code
func (o *GetDeploymentsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deployments o k response has a 3xx status code
func (o *GetDeploymentsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments o k response has a 4xx status code
func (o *GetDeploymentsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployments o k response has a 5xx status code
func (o *GetDeploymentsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments o k response a status code equal to that given
func (o *GetDeploymentsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deployments o k response
func (o *GetDeploymentsOK) Code() int {
	return 200
}

func (o *GetDeploymentsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsOK %s", 200, payload)
}

func (o *GetDeploymentsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsOK %s", 200, payload)
}

func (o *GetDeploymentsOK) GetPayload() *models.ListDeploymentsWrapper {
	return o.Payload
}

func (o *GetDeploymentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListDeploymentsWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsBadRequest creates a GetDeploymentsBadRequest with default headers values
func NewGetDeploymentsBadRequest() *GetDeploymentsBadRequest {
	return &GetDeploymentsBadRequest{}
}

/*
GetDeploymentsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDeploymentsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployments bad request response has a 2xx status code
func (o *GetDeploymentsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments bad request response has a 3xx status code
func (o *GetDeploymentsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments bad request response has a 4xx status code
func (o *GetDeploymentsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments bad request response has a 5xx status code
func (o *GetDeploymentsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments bad request response a status code equal to that given
func (o *GetDeploymentsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get deployments bad request response
func (o *GetDeploymentsBadRequest) Code() int {
	return 400
}

func (o *GetDeploymentsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsBadRequest %s", 400, payload)
}

func (o *GetDeploymentsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsBadRequest %s", 400, payload)
}

func (o *GetDeploymentsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsNotFound creates a GetDeploymentsNotFound with default headers values
func NewGetDeploymentsNotFound() *GetDeploymentsNotFound {
	return &GetDeploymentsNotFound{}
}

/*
GetDeploymentsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeploymentsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployments not found response has a 2xx status code
func (o *GetDeploymentsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments not found response has a 3xx status code
func (o *GetDeploymentsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments not found response has a 4xx status code
func (o *GetDeploymentsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments not found response has a 5xx status code
func (o *GetDeploymentsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments not found response a status code equal to that given
func (o *GetDeploymentsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deployments not found response
func (o *GetDeploymentsNotFound) Code() int {
	return 404
}

func (o *GetDeploymentsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsNotFound %s", 404, payload)
}

func (o *GetDeploymentsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsNotFound %s", 404, payload)
}

func (o *GetDeploymentsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsMethodNotAllowed creates a GetDeploymentsMethodNotAllowed with default headers values
func NewGetDeploymentsMethodNotAllowed() *GetDeploymentsMethodNotAllowed {
	return &GetDeploymentsMethodNotAllowed{}
}

/*
GetDeploymentsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetDeploymentsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployments method not allowed response has a 2xx status code
func (o *GetDeploymentsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments method not allowed response has a 3xx status code
func (o *GetDeploymentsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments method not allowed response has a 4xx status code
func (o *GetDeploymentsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments method not allowed response has a 5xx status code
func (o *GetDeploymentsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments method not allowed response a status code equal to that given
func (o *GetDeploymentsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get deployments method not allowed response
func (o *GetDeploymentsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetDeploymentsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsMethodNotAllowed %s", 405, payload)
}

func (o *GetDeploymentsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsMethodNotAllowed %s", 405, payload)
}

func (o *GetDeploymentsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsInternalServerError creates a GetDeploymentsInternalServerError with default headers values
func NewGetDeploymentsInternalServerError() *GetDeploymentsInternalServerError {
	return &GetDeploymentsInternalServerError{}
}

/*
GetDeploymentsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDeploymentsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployments internal server error response has a 2xx status code
func (o *GetDeploymentsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments internal server error response has a 3xx status code
func (o *GetDeploymentsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments internal server error response has a 4xx status code
func (o *GetDeploymentsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployments internal server error response has a 5xx status code
func (o *GetDeploymentsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get deployments internal server error response a status code equal to that given
func (o *GetDeploymentsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get deployments internal server error response
func (o *GetDeploymentsInternalServerError) Code() int {
	return 500
}

func (o *GetDeploymentsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsInternalServerError %s", 500, payload)
}

func (o *GetDeploymentsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments][%d] getDeploymentsInternalServerError %s", 500, payload)
}

func (o *GetDeploymentsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
