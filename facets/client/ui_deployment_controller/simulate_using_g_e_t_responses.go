// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SimulateUsingGETReader is a Reader for the SimulateUsingGET structure.
type SimulateUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SimulateUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSimulateUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSimulateUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSimulateUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSimulateUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate] simulateUsingGET", response, response.Code())
	}
}

// NewSimulateUsingGETOK creates a SimulateUsingGETOK with default headers values
func NewSimulateUsingGETOK() *SimulateUsingGETOK {
	return &SimulateUsingGETOK{}
}

/*
SimulateUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type SimulateUsingGETOK struct {
	Payload []*models.ChangeRepresentation
}

// IsSuccess returns true when this simulate using g e t o k response has a 2xx status code
func (o *SimulateUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this simulate using g e t o k response has a 3xx status code
func (o *SimulateUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate using g e t o k response has a 4xx status code
func (o *SimulateUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this simulate using g e t o k response has a 5xx status code
func (o *SimulateUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate using g e t o k response a status code equal to that given
func (o *SimulateUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the simulate using g e t o k response
func (o *SimulateUsingGETOK) Code() int {
	return 200
}

func (o *SimulateUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETOK %s", 200, payload)
}

func (o *SimulateUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETOK %s", 200, payload)
}

func (o *SimulateUsingGETOK) GetPayload() []*models.ChangeRepresentation {
	return o.Payload
}

func (o *SimulateUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSimulateUsingGETUnauthorized creates a SimulateUsingGETUnauthorized with default headers values
func NewSimulateUsingGETUnauthorized() *SimulateUsingGETUnauthorized {
	return &SimulateUsingGETUnauthorized{}
}

/*
SimulateUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SimulateUsingGETUnauthorized struct {
}

// IsSuccess returns true when this simulate using g e t unauthorized response has a 2xx status code
func (o *SimulateUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this simulate using g e t unauthorized response has a 3xx status code
func (o *SimulateUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate using g e t unauthorized response has a 4xx status code
func (o *SimulateUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this simulate using g e t unauthorized response has a 5xx status code
func (o *SimulateUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate using g e t unauthorized response a status code equal to that given
func (o *SimulateUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the simulate using g e t unauthorized response
func (o *SimulateUsingGETUnauthorized) Code() int {
	return 401
}

func (o *SimulateUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETUnauthorized", 401)
}

func (o *SimulateUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETUnauthorized", 401)
}

func (o *SimulateUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSimulateUsingGETForbidden creates a SimulateUsingGETForbidden with default headers values
func NewSimulateUsingGETForbidden() *SimulateUsingGETForbidden {
	return &SimulateUsingGETForbidden{}
}

/*
SimulateUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SimulateUsingGETForbidden struct {
}

// IsSuccess returns true when this simulate using g e t forbidden response has a 2xx status code
func (o *SimulateUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this simulate using g e t forbidden response has a 3xx status code
func (o *SimulateUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate using g e t forbidden response has a 4xx status code
func (o *SimulateUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this simulate using g e t forbidden response has a 5xx status code
func (o *SimulateUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate using g e t forbidden response a status code equal to that given
func (o *SimulateUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the simulate using g e t forbidden response
func (o *SimulateUsingGETForbidden) Code() int {
	return 403
}

func (o *SimulateUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETForbidden", 403)
}

func (o *SimulateUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETForbidden", 403)
}

func (o *SimulateUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSimulateUsingGETNotFound creates a SimulateUsingGETNotFound with default headers values
func NewSimulateUsingGETNotFound() *SimulateUsingGETNotFound {
	return &SimulateUsingGETNotFound{}
}

/*
SimulateUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SimulateUsingGETNotFound struct {
}

// IsSuccess returns true when this simulate using g e t not found response has a 2xx status code
func (o *SimulateUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this simulate using g e t not found response has a 3xx status code
func (o *SimulateUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this simulate using g e t not found response has a 4xx status code
func (o *SimulateUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this simulate using g e t not found response has a 5xx status code
func (o *SimulateUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this simulate using g e t not found response a status code equal to that given
func (o *SimulateUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the simulate using g e t not found response
func (o *SimulateUsingGETNotFound) Code() int {
	return 404
}

func (o *SimulateUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETNotFound", 404)
}

func (o *SimulateUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/simulate][%d] simulateUsingGETNotFound", 404)
}

func (o *SimulateUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
