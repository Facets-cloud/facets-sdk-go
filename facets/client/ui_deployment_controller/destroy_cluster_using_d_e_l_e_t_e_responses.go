// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DestroyClusterUsingDELETEReader is a Reader for the DestroyClusterUsingDELETE structure.
type DestroyClusterUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DestroyClusterUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDestroyClusterUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDestroyClusterUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDestroyClusterUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDestroyClusterUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy] destroyClusterUsingDELETE", response, response.Code())
	}
}

// NewDestroyClusterUsingDELETEOK creates a DestroyClusterUsingDELETEOK with default headers values
func NewDestroyClusterUsingDELETEOK() *DestroyClusterUsingDELETEOK {
	return &DestroyClusterUsingDELETEOK{}
}

/*
DestroyClusterUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type DestroyClusterUsingDELETEOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this destroy cluster using d e l e t e o k response has a 2xx status code
func (o *DestroyClusterUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this destroy cluster using d e l e t e o k response has a 3xx status code
func (o *DestroyClusterUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy cluster using d e l e t e o k response has a 4xx status code
func (o *DestroyClusterUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this destroy cluster using d e l e t e o k response has a 5xx status code
func (o *DestroyClusterUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy cluster using d e l e t e o k response a status code equal to that given
func (o *DestroyClusterUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the destroy cluster using d e l e t e o k response
func (o *DestroyClusterUsingDELETEOK) Code() int {
	return 200
}

func (o *DestroyClusterUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETEOK %s", 200, payload)
}

func (o *DestroyClusterUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETEOK %s", 200, payload)
}

func (o *DestroyClusterUsingDELETEOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *DestroyClusterUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDestroyClusterUsingDELETENoContent creates a DestroyClusterUsingDELETENoContent with default headers values
func NewDestroyClusterUsingDELETENoContent() *DestroyClusterUsingDELETENoContent {
	return &DestroyClusterUsingDELETENoContent{}
}

/*
DestroyClusterUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type DestroyClusterUsingDELETENoContent struct {
}

// IsSuccess returns true when this destroy cluster using d e l e t e no content response has a 2xx status code
func (o *DestroyClusterUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this destroy cluster using d e l e t e no content response has a 3xx status code
func (o *DestroyClusterUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy cluster using d e l e t e no content response has a 4xx status code
func (o *DestroyClusterUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this destroy cluster using d e l e t e no content response has a 5xx status code
func (o *DestroyClusterUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy cluster using d e l e t e no content response a status code equal to that given
func (o *DestroyClusterUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the destroy cluster using d e l e t e no content response
func (o *DestroyClusterUsingDELETENoContent) Code() int {
	return 204
}

func (o *DestroyClusterUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETENoContent", 204)
}

func (o *DestroyClusterUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETENoContent", 204)
}

func (o *DestroyClusterUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDestroyClusterUsingDELETEUnauthorized creates a DestroyClusterUsingDELETEUnauthorized with default headers values
func NewDestroyClusterUsingDELETEUnauthorized() *DestroyClusterUsingDELETEUnauthorized {
	return &DestroyClusterUsingDELETEUnauthorized{}
}

/*
DestroyClusterUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DestroyClusterUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this destroy cluster using d e l e t e unauthorized response has a 2xx status code
func (o *DestroyClusterUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy cluster using d e l e t e unauthorized response has a 3xx status code
func (o *DestroyClusterUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy cluster using d e l e t e unauthorized response has a 4xx status code
func (o *DestroyClusterUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this destroy cluster using d e l e t e unauthorized response has a 5xx status code
func (o *DestroyClusterUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy cluster using d e l e t e unauthorized response a status code equal to that given
func (o *DestroyClusterUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the destroy cluster using d e l e t e unauthorized response
func (o *DestroyClusterUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *DestroyClusterUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETEUnauthorized", 401)
}

func (o *DestroyClusterUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETEUnauthorized", 401)
}

func (o *DestroyClusterUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDestroyClusterUsingDELETEForbidden creates a DestroyClusterUsingDELETEForbidden with default headers values
func NewDestroyClusterUsingDELETEForbidden() *DestroyClusterUsingDELETEForbidden {
	return &DestroyClusterUsingDELETEForbidden{}
}

/*
DestroyClusterUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DestroyClusterUsingDELETEForbidden struct {
}

// IsSuccess returns true when this destroy cluster using d e l e t e forbidden response has a 2xx status code
func (o *DestroyClusterUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this destroy cluster using d e l e t e forbidden response has a 3xx status code
func (o *DestroyClusterUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this destroy cluster using d e l e t e forbidden response has a 4xx status code
func (o *DestroyClusterUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this destroy cluster using d e l e t e forbidden response has a 5xx status code
func (o *DestroyClusterUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this destroy cluster using d e l e t e forbidden response a status code equal to that given
func (o *DestroyClusterUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the destroy cluster using d e l e t e forbidden response
func (o *DestroyClusterUsingDELETEForbidden) Code() int {
	return 403
}

func (o *DestroyClusterUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETEForbidden", 403)
}

func (o *DestroyClusterUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/clusters/{clusterId}/deployments/destroy][%d] destroyClusterUsingDELETEForbidden", 403)
}

func (o *DestroyClusterUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
