// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetDeploymentReader is a Reader for the GetDeployment structure.
type GetDeploymentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDeploymentBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDeploymentMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDeploymentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}] getDeployment", response, response.Code())
	}
}

// NewGetDeploymentOK creates a GetDeploymentOK with default headers values
func NewGetDeploymentOK() *GetDeploymentOK {
	return &GetDeploymentOK{}
}

/*
GetDeploymentOK describes a response with status code 200, with default header values.

OK
*/
type GetDeploymentOK struct {
	Payload *models.DeploymentLog
}

// IsSuccess returns true when this get deployment o k response has a 2xx status code
func (o *GetDeploymentOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deployment o k response has a 3xx status code
func (o *GetDeploymentOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment o k response has a 4xx status code
func (o *GetDeploymentOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployment o k response has a 5xx status code
func (o *GetDeploymentOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment o k response a status code equal to that given
func (o *GetDeploymentOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deployment o k response
func (o *GetDeploymentOK) Code() int {
	return 200
}

func (o *GetDeploymentOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentOK %s", 200, payload)
}

func (o *GetDeploymentOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentOK %s", 200, payload)
}

func (o *GetDeploymentOK) GetPayload() *models.DeploymentLog {
	return o.Payload
}

func (o *GetDeploymentOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentLog)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentBadRequest creates a GetDeploymentBadRequest with default headers values
func NewGetDeploymentBadRequest() *GetDeploymentBadRequest {
	return &GetDeploymentBadRequest{}
}

/*
GetDeploymentBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDeploymentBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployment bad request response has a 2xx status code
func (o *GetDeploymentBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment bad request response has a 3xx status code
func (o *GetDeploymentBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment bad request response has a 4xx status code
func (o *GetDeploymentBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployment bad request response has a 5xx status code
func (o *GetDeploymentBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment bad request response a status code equal to that given
func (o *GetDeploymentBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get deployment bad request response
func (o *GetDeploymentBadRequest) Code() int {
	return 400
}

func (o *GetDeploymentBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentBadRequest %s", 400, payload)
}

func (o *GetDeploymentBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentBadRequest %s", 400, payload)
}

func (o *GetDeploymentBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentNotFound creates a GetDeploymentNotFound with default headers values
func NewGetDeploymentNotFound() *GetDeploymentNotFound {
	return &GetDeploymentNotFound{}
}

/*
GetDeploymentNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeploymentNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployment not found response has a 2xx status code
func (o *GetDeploymentNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment not found response has a 3xx status code
func (o *GetDeploymentNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment not found response has a 4xx status code
func (o *GetDeploymentNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployment not found response has a 5xx status code
func (o *GetDeploymentNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment not found response a status code equal to that given
func (o *GetDeploymentNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deployment not found response
func (o *GetDeploymentNotFound) Code() int {
	return 404
}

func (o *GetDeploymentNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentNotFound %s", 404, payload)
}

func (o *GetDeploymentNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentNotFound %s", 404, payload)
}

func (o *GetDeploymentNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentMethodNotAllowed creates a GetDeploymentMethodNotAllowed with default headers values
func NewGetDeploymentMethodNotAllowed() *GetDeploymentMethodNotAllowed {
	return &GetDeploymentMethodNotAllowed{}
}

/*
GetDeploymentMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetDeploymentMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployment method not allowed response has a 2xx status code
func (o *GetDeploymentMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment method not allowed response has a 3xx status code
func (o *GetDeploymentMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment method not allowed response has a 4xx status code
func (o *GetDeploymentMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployment method not allowed response has a 5xx status code
func (o *GetDeploymentMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment method not allowed response a status code equal to that given
func (o *GetDeploymentMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get deployment method not allowed response
func (o *GetDeploymentMethodNotAllowed) Code() int {
	return 405
}

func (o *GetDeploymentMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentMethodNotAllowed %s", 405, payload)
}

func (o *GetDeploymentMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentMethodNotAllowed %s", 405, payload)
}

func (o *GetDeploymentMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentInternalServerError creates a GetDeploymentInternalServerError with default headers values
func NewGetDeploymentInternalServerError() *GetDeploymentInternalServerError {
	return &GetDeploymentInternalServerError{}
}

/*
GetDeploymentInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDeploymentInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get deployment internal server error response has a 2xx status code
func (o *GetDeploymentInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment internal server error response has a 3xx status code
func (o *GetDeploymentInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment internal server error response has a 4xx status code
func (o *GetDeploymentInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployment internal server error response has a 5xx status code
func (o *GetDeploymentInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get deployment internal server error response a status code equal to that given
func (o *GetDeploymentInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get deployment internal server error response
func (o *GetDeploymentInternalServerError) Code() int {
	return 500
}

func (o *GetDeploymentInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentInternalServerError %s", 500, payload)
}

func (o *GetDeploymentInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/deployments/{deploymentId}][%d] getDeploymentInternalServerError %s", 500, payload)
}

func (o *GetDeploymentInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeploymentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
