// Code generated by go-swagger; DO NOT EDIT.

package ui_deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDeploymentLogsParams creates a new GetDeploymentLogsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDeploymentLogsParams() *GetDeploymentLogsParams {
	return &GetDeploymentLogsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDeploymentLogsParamsWithTimeout creates a new GetDeploymentLogsParams object
// with the ability to set a timeout on a request.
func NewGetDeploymentLogsParamsWithTimeout(timeout time.Duration) *GetDeploymentLogsParams {
	return &GetDeploymentLogsParams{
		timeout: timeout,
	}
}

// NewGetDeploymentLogsParamsWithContext creates a new GetDeploymentLogsParams object
// with the ability to set a context for a request.
func NewGetDeploymentLogsParamsWithContext(ctx context.Context) *GetDeploymentLogsParams {
	return &GetDeploymentLogsParams{
		Context: ctx,
	}
}

// NewGetDeploymentLogsParamsWithHTTPClient creates a new GetDeploymentLogsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDeploymentLogsParamsWithHTTPClient(client *http.Client) *GetDeploymentLogsParams {
	return &GetDeploymentLogsParams{
		HTTPClient: client,
	}
}

/*
GetDeploymentLogsParams contains all the parameters to send to the API endpoint

	for the get deployment logs operation.

	Typically these are written to a http.Request.
*/
type GetDeploymentLogsParams struct {

	// ClusterID.
	ClusterID string

	// DeploymentID.
	DeploymentID string

	// NextToken.
	NextToken *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get deployment logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeploymentLogsParams) WithDefaults() *GetDeploymentLogsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get deployment logs params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDeploymentLogsParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get deployment logs params
func (o *GetDeploymentLogsParams) WithTimeout(timeout time.Duration) *GetDeploymentLogsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get deployment logs params
func (o *GetDeploymentLogsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get deployment logs params
func (o *GetDeploymentLogsParams) WithContext(ctx context.Context) *GetDeploymentLogsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get deployment logs params
func (o *GetDeploymentLogsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get deployment logs params
func (o *GetDeploymentLogsParams) WithHTTPClient(client *http.Client) *GetDeploymentLogsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get deployment logs params
func (o *GetDeploymentLogsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClusterID adds the clusterID to the get deployment logs params
func (o *GetDeploymentLogsParams) WithClusterID(clusterID string) *GetDeploymentLogsParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the get deployment logs params
func (o *GetDeploymentLogsParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithDeploymentID adds the deploymentID to the get deployment logs params
func (o *GetDeploymentLogsParams) WithDeploymentID(deploymentID string) *GetDeploymentLogsParams {
	o.SetDeploymentID(deploymentID)
	return o
}

// SetDeploymentID adds the deploymentId to the get deployment logs params
func (o *GetDeploymentLogsParams) SetDeploymentID(deploymentID string) {
	o.DeploymentID = deploymentID
}

// WithNextToken adds the nextToken to the get deployment logs params
func (o *GetDeploymentLogsParams) WithNextToken(nextToken *string) *GetDeploymentLogsParams {
	o.SetNextToken(nextToken)
	return o
}

// SetNextToken adds the nextToken to the get deployment logs params
func (o *GetDeploymentLogsParams) SetNextToken(nextToken *string) {
	o.NextToken = nextToken
}

// WriteToRequest writes these params to a swagger request
func (o *GetDeploymentLogsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}

	// path param deploymentId
	if err := r.SetPathParam("deploymentId", o.DeploymentID); err != nil {
		return err
	}

	if o.NextToken != nil {

		// query param nextToken
		var qrNextToken string

		if o.NextToken != nil {
			qrNextToken = *o.NextToken
		}
		qNextToken := qrNextToken
		if qNextToken != "" {

			if err := r.SetQueryParam("nextToken", qNextToken); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
