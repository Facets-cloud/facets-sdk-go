// Code generated by go-swagger; DO NOT EDIT.

package ui_chat_gpt_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateChatUsingPOSTReader is a Reader for the CreateChatUsingPOST structure.
type CreateChatUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateChatUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateChatUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateChatUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateChatUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewCreateChatUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateChatUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateChatUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/chat] createChatUsingPOST", response, response.Code())
	}
}

// NewCreateChatUsingPOSTOK creates a CreateChatUsingPOSTOK with default headers values
func NewCreateChatUsingPOSTOK() *CreateChatUsingPOSTOK {
	return &CreateChatUsingPOSTOK{}
}

/*
CreateChatUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateChatUsingPOSTOK struct {
	Payload *models.Chat
}

// IsSuccess returns true when this create chat using p o s t o k response has a 2xx status code
func (o *CreateChatUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create chat using p o s t o k response has a 3xx status code
func (o *CreateChatUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chat using p o s t o k response has a 4xx status code
func (o *CreateChatUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chat using p o s t o k response has a 5xx status code
func (o *CreateChatUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create chat using p o s t o k response a status code equal to that given
func (o *CreateChatUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create chat using p o s t o k response
func (o *CreateChatUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateChatUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTOK %s", 200, payload)
}

func (o *CreateChatUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTOK %s", 200, payload)
}

func (o *CreateChatUsingPOSTOK) GetPayload() *models.Chat {
	return o.Payload
}

func (o *CreateChatUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Chat)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChatUsingPOSTCreated creates a CreateChatUsingPOSTCreated with default headers values
func NewCreateChatUsingPOSTCreated() *CreateChatUsingPOSTCreated {
	return &CreateChatUsingPOSTCreated{}
}

/*
CreateChatUsingPOSTCreated describes a response with status code 201, with default header values.

Chat created successfully
*/
type CreateChatUsingPOSTCreated struct {
	Payload *models.Chat
}

// IsSuccess returns true when this create chat using p o s t created response has a 2xx status code
func (o *CreateChatUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create chat using p o s t created response has a 3xx status code
func (o *CreateChatUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chat using p o s t created response has a 4xx status code
func (o *CreateChatUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create chat using p o s t created response has a 5xx status code
func (o *CreateChatUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create chat using p o s t created response a status code equal to that given
func (o *CreateChatUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create chat using p o s t created response
func (o *CreateChatUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateChatUsingPOSTCreated) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTCreated %s", 201, payload)
}

func (o *CreateChatUsingPOSTCreated) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTCreated %s", 201, payload)
}

func (o *CreateChatUsingPOSTCreated) GetPayload() *models.Chat {
	return o.Payload
}

func (o *CreateChatUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Chat)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateChatUsingPOSTBadRequest creates a CreateChatUsingPOSTBadRequest with default headers values
func NewCreateChatUsingPOSTBadRequest() *CreateChatUsingPOSTBadRequest {
	return &CreateChatUsingPOSTBadRequest{}
}

/*
CreateChatUsingPOSTBadRequest describes a response with status code 400, with default header values.

Invalid request
*/
type CreateChatUsingPOSTBadRequest struct {
}

// IsSuccess returns true when this create chat using p o s t bad request response has a 2xx status code
func (o *CreateChatUsingPOSTBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chat using p o s t bad request response has a 3xx status code
func (o *CreateChatUsingPOSTBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chat using p o s t bad request response has a 4xx status code
func (o *CreateChatUsingPOSTBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chat using p o s t bad request response has a 5xx status code
func (o *CreateChatUsingPOSTBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create chat using p o s t bad request response a status code equal to that given
func (o *CreateChatUsingPOSTBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create chat using p o s t bad request response
func (o *CreateChatUsingPOSTBadRequest) Code() int {
	return 400
}

func (o *CreateChatUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTBadRequest", 400)
}

func (o *CreateChatUsingPOSTBadRequest) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTBadRequest", 400)
}

func (o *CreateChatUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateChatUsingPOSTUnauthorized creates a CreateChatUsingPOSTUnauthorized with default headers values
func NewCreateChatUsingPOSTUnauthorized() *CreateChatUsingPOSTUnauthorized {
	return &CreateChatUsingPOSTUnauthorized{}
}

/*
CreateChatUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateChatUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create chat using p o s t unauthorized response has a 2xx status code
func (o *CreateChatUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chat using p o s t unauthorized response has a 3xx status code
func (o *CreateChatUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chat using p o s t unauthorized response has a 4xx status code
func (o *CreateChatUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chat using p o s t unauthorized response has a 5xx status code
func (o *CreateChatUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create chat using p o s t unauthorized response a status code equal to that given
func (o *CreateChatUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create chat using p o s t unauthorized response
func (o *CreateChatUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateChatUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTUnauthorized", 401)
}

func (o *CreateChatUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTUnauthorized", 401)
}

func (o *CreateChatUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateChatUsingPOSTForbidden creates a CreateChatUsingPOSTForbidden with default headers values
func NewCreateChatUsingPOSTForbidden() *CreateChatUsingPOSTForbidden {
	return &CreateChatUsingPOSTForbidden{}
}

/*
CreateChatUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateChatUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create chat using p o s t forbidden response has a 2xx status code
func (o *CreateChatUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chat using p o s t forbidden response has a 3xx status code
func (o *CreateChatUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chat using p o s t forbidden response has a 4xx status code
func (o *CreateChatUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chat using p o s t forbidden response has a 5xx status code
func (o *CreateChatUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create chat using p o s t forbidden response a status code equal to that given
func (o *CreateChatUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create chat using p o s t forbidden response
func (o *CreateChatUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateChatUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTForbidden", 403)
}

func (o *CreateChatUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTForbidden", 403)
}

func (o *CreateChatUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateChatUsingPOSTNotFound creates a CreateChatUsingPOSTNotFound with default headers values
func NewCreateChatUsingPOSTNotFound() *CreateChatUsingPOSTNotFound {
	return &CreateChatUsingPOSTNotFound{}
}

/*
CreateChatUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateChatUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create chat using p o s t not found response has a 2xx status code
func (o *CreateChatUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create chat using p o s t not found response has a 3xx status code
func (o *CreateChatUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create chat using p o s t not found response has a 4xx status code
func (o *CreateChatUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create chat using p o s t not found response has a 5xx status code
func (o *CreateChatUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create chat using p o s t not found response a status code equal to that given
func (o *CreateChatUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create chat using p o s t not found response
func (o *CreateChatUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateChatUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTNotFound", 404)
}

func (o *CreateChatUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/chat][%d] createChatUsingPOSTNotFound", 404)
}

func (o *CreateChatUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
