// Code generated by go-swagger; DO NOT EDIT.

package ui_chat_gpt_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetChatByIDUsingGETReader is a Reader for the GetChatByIDUsingGET structure.
type GetChatByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetChatByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetChatByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetChatByIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetChatByIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetChatByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/chat/{chatId}] getChatByIdUsingGET", response, response.Code())
	}
}

// NewGetChatByIDUsingGETOK creates a GetChatByIDUsingGETOK with default headers values
func NewGetChatByIDUsingGETOK() *GetChatByIDUsingGETOK {
	return &GetChatByIDUsingGETOK{}
}

/*
GetChatByIDUsingGETOK describes a response with status code 200, with default header values.

Chat found
*/
type GetChatByIDUsingGETOK struct {
	Payload *models.Chat
}

// IsSuccess returns true when this get chat by Id using g e t o k response has a 2xx status code
func (o *GetChatByIDUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get chat by Id using g e t o k response has a 3xx status code
func (o *GetChatByIDUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat by Id using g e t o k response has a 4xx status code
func (o *GetChatByIDUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get chat by Id using g e t o k response has a 5xx status code
func (o *GetChatByIDUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat by Id using g e t o k response a status code equal to that given
func (o *GetChatByIDUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get chat by Id using g e t o k response
func (o *GetChatByIDUsingGETOK) Code() int {
	return 200
}

func (o *GetChatByIDUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETOK %s", 200, payload)
}

func (o *GetChatByIDUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETOK %s", 200, payload)
}

func (o *GetChatByIDUsingGETOK) GetPayload() *models.Chat {
	return o.Payload
}

func (o *GetChatByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Chat)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetChatByIDUsingGETUnauthorized creates a GetChatByIDUsingGETUnauthorized with default headers values
func NewGetChatByIDUsingGETUnauthorized() *GetChatByIDUsingGETUnauthorized {
	return &GetChatByIDUsingGETUnauthorized{}
}

/*
GetChatByIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetChatByIDUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get chat by Id using g e t unauthorized response has a 2xx status code
func (o *GetChatByIDUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chat by Id using g e t unauthorized response has a 3xx status code
func (o *GetChatByIDUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat by Id using g e t unauthorized response has a 4xx status code
func (o *GetChatByIDUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chat by Id using g e t unauthorized response has a 5xx status code
func (o *GetChatByIDUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat by Id using g e t unauthorized response a status code equal to that given
func (o *GetChatByIDUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get chat by Id using g e t unauthorized response
func (o *GetChatByIDUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetChatByIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETUnauthorized", 401)
}

func (o *GetChatByIDUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETUnauthorized", 401)
}

func (o *GetChatByIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChatByIDUsingGETForbidden creates a GetChatByIDUsingGETForbidden with default headers values
func NewGetChatByIDUsingGETForbidden() *GetChatByIDUsingGETForbidden {
	return &GetChatByIDUsingGETForbidden{}
}

/*
GetChatByIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetChatByIDUsingGETForbidden struct {
}

// IsSuccess returns true when this get chat by Id using g e t forbidden response has a 2xx status code
func (o *GetChatByIDUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chat by Id using g e t forbidden response has a 3xx status code
func (o *GetChatByIDUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat by Id using g e t forbidden response has a 4xx status code
func (o *GetChatByIDUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chat by Id using g e t forbidden response has a 5xx status code
func (o *GetChatByIDUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat by Id using g e t forbidden response a status code equal to that given
func (o *GetChatByIDUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get chat by Id using g e t forbidden response
func (o *GetChatByIDUsingGETForbidden) Code() int {
	return 403
}

func (o *GetChatByIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETForbidden", 403)
}

func (o *GetChatByIDUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETForbidden", 403)
}

func (o *GetChatByIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetChatByIDUsingGETNotFound creates a GetChatByIDUsingGETNotFound with default headers values
func NewGetChatByIDUsingGETNotFound() *GetChatByIDUsingGETNotFound {
	return &GetChatByIDUsingGETNotFound{}
}

/*
GetChatByIDUsingGETNotFound describes a response with status code 404, with default header values.

Chat not found
*/
type GetChatByIDUsingGETNotFound struct {
}

// IsSuccess returns true when this get chat by Id using g e t not found response has a 2xx status code
func (o *GetChatByIDUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get chat by Id using g e t not found response has a 3xx status code
func (o *GetChatByIDUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get chat by Id using g e t not found response has a 4xx status code
func (o *GetChatByIDUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get chat by Id using g e t not found response has a 5xx status code
func (o *GetChatByIDUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get chat by Id using g e t not found response a status code equal to that given
func (o *GetChatByIDUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get chat by Id using g e t not found response
func (o *GetChatByIDUsingGETNotFound) Code() int {
	return 404
}

func (o *GetChatByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETNotFound", 404)
}

func (o *GetChatByIDUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/chat/{chatId}][%d] getChatByIdUsingGETNotFound", 404)
}

func (o *GetChatByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
