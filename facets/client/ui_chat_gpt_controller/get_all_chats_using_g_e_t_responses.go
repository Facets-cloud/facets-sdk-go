// Code generated by go-swagger; DO NOT EDIT.

package ui_chat_gpt_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllChatsUsingGETReader is a Reader for the GetAllChatsUsingGET structure.
type GetAllChatsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllChatsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllChatsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllChatsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllChatsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllChatsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/chat] getAllChatsUsingGET", response, response.Code())
	}
}

// NewGetAllChatsUsingGETOK creates a GetAllChatsUsingGETOK with default headers values
func NewGetAllChatsUsingGETOK() *GetAllChatsUsingGETOK {
	return &GetAllChatsUsingGETOK{}
}

/*
GetAllChatsUsingGETOK describes a response with status code 200, with default header values.

Chats found
*/
type GetAllChatsUsingGETOK struct {
	Payload *models.PageChat
}

// IsSuccess returns true when this get all chats using g e t o k response has a 2xx status code
func (o *GetAllChatsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all chats using g e t o k response has a 3xx status code
func (o *GetAllChatsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all chats using g e t o k response has a 4xx status code
func (o *GetAllChatsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all chats using g e t o k response has a 5xx status code
func (o *GetAllChatsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all chats using g e t o k response a status code equal to that given
func (o *GetAllChatsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all chats using g e t o k response
func (o *GetAllChatsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllChatsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETOK %s", 200, payload)
}

func (o *GetAllChatsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETOK %s", 200, payload)
}

func (o *GetAllChatsUsingGETOK) GetPayload() *models.PageChat {
	return o.Payload
}

func (o *GetAllChatsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageChat)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllChatsUsingGETUnauthorized creates a GetAllChatsUsingGETUnauthorized with default headers values
func NewGetAllChatsUsingGETUnauthorized() *GetAllChatsUsingGETUnauthorized {
	return &GetAllChatsUsingGETUnauthorized{}
}

/*
GetAllChatsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllChatsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all chats using g e t unauthorized response has a 2xx status code
func (o *GetAllChatsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all chats using g e t unauthorized response has a 3xx status code
func (o *GetAllChatsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all chats using g e t unauthorized response has a 4xx status code
func (o *GetAllChatsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all chats using g e t unauthorized response has a 5xx status code
func (o *GetAllChatsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all chats using g e t unauthorized response a status code equal to that given
func (o *GetAllChatsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all chats using g e t unauthorized response
func (o *GetAllChatsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllChatsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETUnauthorized", 401)
}

func (o *GetAllChatsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETUnauthorized", 401)
}

func (o *GetAllChatsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllChatsUsingGETForbidden creates a GetAllChatsUsingGETForbidden with default headers values
func NewGetAllChatsUsingGETForbidden() *GetAllChatsUsingGETForbidden {
	return &GetAllChatsUsingGETForbidden{}
}

/*
GetAllChatsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllChatsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all chats using g e t forbidden response has a 2xx status code
func (o *GetAllChatsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all chats using g e t forbidden response has a 3xx status code
func (o *GetAllChatsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all chats using g e t forbidden response has a 4xx status code
func (o *GetAllChatsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all chats using g e t forbidden response has a 5xx status code
func (o *GetAllChatsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all chats using g e t forbidden response a status code equal to that given
func (o *GetAllChatsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all chats using g e t forbidden response
func (o *GetAllChatsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllChatsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETForbidden", 403)
}

func (o *GetAllChatsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETForbidden", 403)
}

func (o *GetAllChatsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllChatsUsingGETNotFound creates a GetAllChatsUsingGETNotFound with default headers values
func NewGetAllChatsUsingGETNotFound() *GetAllChatsUsingGETNotFound {
	return &GetAllChatsUsingGETNotFound{}
}

/*
GetAllChatsUsingGETNotFound describes a response with status code 404, with default header values.

Cluster not found
*/
type GetAllChatsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all chats using g e t not found response has a 2xx status code
func (o *GetAllChatsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all chats using g e t not found response has a 3xx status code
func (o *GetAllChatsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all chats using g e t not found response has a 4xx status code
func (o *GetAllChatsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all chats using g e t not found response has a 5xx status code
func (o *GetAllChatsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all chats using g e t not found response a status code equal to that given
func (o *GetAllChatsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all chats using g e t not found response
func (o *GetAllChatsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllChatsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETNotFound", 404)
}

func (o *GetAllChatsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/chat][%d] getAllChatsUsingGETNotFound", 404)
}

func (o *GetAllChatsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
