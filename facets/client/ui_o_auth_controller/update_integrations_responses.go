// Code generated by go-swagger; DO NOT EDIT.

package ui_o_auth_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateIntegrationsReader is a Reader for the UpdateIntegrations structure.
type UpdateIntegrationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIntegrationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIntegrationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateIntegrationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateIntegrationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateIntegrationsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateIntegrationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/oauth/{registrationId}] updateIntegrations", response, response.Code())
	}
}

// NewUpdateIntegrationsOK creates a UpdateIntegrationsOK with default headers values
func NewUpdateIntegrationsOK() *UpdateIntegrationsOK {
	return &UpdateIntegrationsOK{}
}

/*
UpdateIntegrationsOK describes a response with status code 200, with default header values.

OK
*/
type UpdateIntegrationsOK struct {
	Payload []*models.CustomOAuth2ClientRegistration
}

// IsSuccess returns true when this update integrations o k response has a 2xx status code
func (o *UpdateIntegrationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update integrations o k response has a 3xx status code
func (o *UpdateIntegrationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations o k response has a 4xx status code
func (o *UpdateIntegrationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update integrations o k response has a 5xx status code
func (o *UpdateIntegrationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations o k response a status code equal to that given
func (o *UpdateIntegrationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update integrations o k response
func (o *UpdateIntegrationsOK) Code() int {
	return 200
}

func (o *UpdateIntegrationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsOK %s", 200, payload)
}

func (o *UpdateIntegrationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsOK %s", 200, payload)
}

func (o *UpdateIntegrationsOK) GetPayload() []*models.CustomOAuth2ClientRegistration {
	return o.Payload
}

func (o *UpdateIntegrationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIntegrationsBadRequest creates a UpdateIntegrationsBadRequest with default headers values
func NewUpdateIntegrationsBadRequest() *UpdateIntegrationsBadRequest {
	return &UpdateIntegrationsBadRequest{}
}

/*
UpdateIntegrationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateIntegrationsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update integrations bad request response has a 2xx status code
func (o *UpdateIntegrationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update integrations bad request response has a 3xx status code
func (o *UpdateIntegrationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations bad request response has a 4xx status code
func (o *UpdateIntegrationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update integrations bad request response has a 5xx status code
func (o *UpdateIntegrationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations bad request response a status code equal to that given
func (o *UpdateIntegrationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update integrations bad request response
func (o *UpdateIntegrationsBadRequest) Code() int {
	return 400
}

func (o *UpdateIntegrationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsBadRequest %s", 400, payload)
}

func (o *UpdateIntegrationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsBadRequest %s", 400, payload)
}

func (o *UpdateIntegrationsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateIntegrationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIntegrationsNotFound creates a UpdateIntegrationsNotFound with default headers values
func NewUpdateIntegrationsNotFound() *UpdateIntegrationsNotFound {
	return &UpdateIntegrationsNotFound{}
}

/*
UpdateIntegrationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateIntegrationsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update integrations not found response has a 2xx status code
func (o *UpdateIntegrationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update integrations not found response has a 3xx status code
func (o *UpdateIntegrationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations not found response has a 4xx status code
func (o *UpdateIntegrationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update integrations not found response has a 5xx status code
func (o *UpdateIntegrationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations not found response a status code equal to that given
func (o *UpdateIntegrationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update integrations not found response
func (o *UpdateIntegrationsNotFound) Code() int {
	return 404
}

func (o *UpdateIntegrationsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsNotFound %s", 404, payload)
}

func (o *UpdateIntegrationsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsNotFound %s", 404, payload)
}

func (o *UpdateIntegrationsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateIntegrationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIntegrationsMethodNotAllowed creates a UpdateIntegrationsMethodNotAllowed with default headers values
func NewUpdateIntegrationsMethodNotAllowed() *UpdateIntegrationsMethodNotAllowed {
	return &UpdateIntegrationsMethodNotAllowed{}
}

/*
UpdateIntegrationsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateIntegrationsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update integrations method not allowed response has a 2xx status code
func (o *UpdateIntegrationsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update integrations method not allowed response has a 3xx status code
func (o *UpdateIntegrationsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations method not allowed response has a 4xx status code
func (o *UpdateIntegrationsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update integrations method not allowed response has a 5xx status code
func (o *UpdateIntegrationsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations method not allowed response a status code equal to that given
func (o *UpdateIntegrationsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update integrations method not allowed response
func (o *UpdateIntegrationsMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateIntegrationsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsMethodNotAllowed %s", 405, payload)
}

func (o *UpdateIntegrationsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsMethodNotAllowed %s", 405, payload)
}

func (o *UpdateIntegrationsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateIntegrationsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIntegrationsInternalServerError creates a UpdateIntegrationsInternalServerError with default headers values
func NewUpdateIntegrationsInternalServerError() *UpdateIntegrationsInternalServerError {
	return &UpdateIntegrationsInternalServerError{}
}

/*
UpdateIntegrationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateIntegrationsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update integrations internal server error response has a 2xx status code
func (o *UpdateIntegrationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update integrations internal server error response has a 3xx status code
func (o *UpdateIntegrationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations internal server error response has a 4xx status code
func (o *UpdateIntegrationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update integrations internal server error response has a 5xx status code
func (o *UpdateIntegrationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update integrations internal server error response a status code equal to that given
func (o *UpdateIntegrationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update integrations internal server error response
func (o *UpdateIntegrationsInternalServerError) Code() int {
	return 500
}

func (o *UpdateIntegrationsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsInternalServerError %s", 500, payload)
}

func (o *UpdateIntegrationsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsInternalServerError %s", 500, payload)
}

func (o *UpdateIntegrationsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateIntegrationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
