// Code generated by go-swagger; DO NOT EDIT.

package ui_o_auth_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateIntegrationsUsingPUTReader is a Reader for the UpdateIntegrationsUsingPUT structure.
type UpdateIntegrationsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIntegrationsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIntegrationsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateIntegrationsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateIntegrationsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateIntegrationsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateIntegrationsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/oauth/{registrationId}] updateIntegrationsUsingPUT", response, response.Code())
	}
}

// NewUpdateIntegrationsUsingPUTOK creates a UpdateIntegrationsUsingPUTOK with default headers values
func NewUpdateIntegrationsUsingPUTOK() *UpdateIntegrationsUsingPUTOK {
	return &UpdateIntegrationsUsingPUTOK{}
}

/*
UpdateIntegrationsUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateIntegrationsUsingPUTOK struct {
	Payload []*models.CustomOAuth2ClientRegistration
}

// IsSuccess returns true when this update integrations using p u t o k response has a 2xx status code
func (o *UpdateIntegrationsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update integrations using p u t o k response has a 3xx status code
func (o *UpdateIntegrationsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations using p u t o k response has a 4xx status code
func (o *UpdateIntegrationsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update integrations using p u t o k response has a 5xx status code
func (o *UpdateIntegrationsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations using p u t o k response a status code equal to that given
func (o *UpdateIntegrationsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update integrations using p u t o k response
func (o *UpdateIntegrationsUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateIntegrationsUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTOK %s", 200, payload)
}

func (o *UpdateIntegrationsUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTOK %s", 200, payload)
}

func (o *UpdateIntegrationsUsingPUTOK) GetPayload() []*models.CustomOAuth2ClientRegistration {
	return o.Payload
}

func (o *UpdateIntegrationsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIntegrationsUsingPUTCreated creates a UpdateIntegrationsUsingPUTCreated with default headers values
func NewUpdateIntegrationsUsingPUTCreated() *UpdateIntegrationsUsingPUTCreated {
	return &UpdateIntegrationsUsingPUTCreated{}
}

/*
UpdateIntegrationsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateIntegrationsUsingPUTCreated struct {
}

// IsSuccess returns true when this update integrations using p u t created response has a 2xx status code
func (o *UpdateIntegrationsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update integrations using p u t created response has a 3xx status code
func (o *UpdateIntegrationsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations using p u t created response has a 4xx status code
func (o *UpdateIntegrationsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update integrations using p u t created response has a 5xx status code
func (o *UpdateIntegrationsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations using p u t created response a status code equal to that given
func (o *UpdateIntegrationsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update integrations using p u t created response
func (o *UpdateIntegrationsUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateIntegrationsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTCreated", 201)
}

func (o *UpdateIntegrationsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTCreated", 201)
}

func (o *UpdateIntegrationsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateIntegrationsUsingPUTUnauthorized creates a UpdateIntegrationsUsingPUTUnauthorized with default headers values
func NewUpdateIntegrationsUsingPUTUnauthorized() *UpdateIntegrationsUsingPUTUnauthorized {
	return &UpdateIntegrationsUsingPUTUnauthorized{}
}

/*
UpdateIntegrationsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateIntegrationsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update integrations using p u t unauthorized response has a 2xx status code
func (o *UpdateIntegrationsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update integrations using p u t unauthorized response has a 3xx status code
func (o *UpdateIntegrationsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations using p u t unauthorized response has a 4xx status code
func (o *UpdateIntegrationsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update integrations using p u t unauthorized response has a 5xx status code
func (o *UpdateIntegrationsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations using p u t unauthorized response a status code equal to that given
func (o *UpdateIntegrationsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update integrations using p u t unauthorized response
func (o *UpdateIntegrationsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateIntegrationsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTUnauthorized", 401)
}

func (o *UpdateIntegrationsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTUnauthorized", 401)
}

func (o *UpdateIntegrationsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateIntegrationsUsingPUTForbidden creates a UpdateIntegrationsUsingPUTForbidden with default headers values
func NewUpdateIntegrationsUsingPUTForbidden() *UpdateIntegrationsUsingPUTForbidden {
	return &UpdateIntegrationsUsingPUTForbidden{}
}

/*
UpdateIntegrationsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateIntegrationsUsingPUTForbidden struct {
}

// IsSuccess returns true when this update integrations using p u t forbidden response has a 2xx status code
func (o *UpdateIntegrationsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update integrations using p u t forbidden response has a 3xx status code
func (o *UpdateIntegrationsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations using p u t forbidden response has a 4xx status code
func (o *UpdateIntegrationsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update integrations using p u t forbidden response has a 5xx status code
func (o *UpdateIntegrationsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations using p u t forbidden response a status code equal to that given
func (o *UpdateIntegrationsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update integrations using p u t forbidden response
func (o *UpdateIntegrationsUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateIntegrationsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTForbidden", 403)
}

func (o *UpdateIntegrationsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTForbidden", 403)
}

func (o *UpdateIntegrationsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateIntegrationsUsingPUTNotFound creates a UpdateIntegrationsUsingPUTNotFound with default headers values
func NewUpdateIntegrationsUsingPUTNotFound() *UpdateIntegrationsUsingPUTNotFound {
	return &UpdateIntegrationsUsingPUTNotFound{}
}

/*
UpdateIntegrationsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateIntegrationsUsingPUTNotFound struct {
}

// IsSuccess returns true when this update integrations using p u t not found response has a 2xx status code
func (o *UpdateIntegrationsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update integrations using p u t not found response has a 3xx status code
func (o *UpdateIntegrationsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update integrations using p u t not found response has a 4xx status code
func (o *UpdateIntegrationsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update integrations using p u t not found response has a 5xx status code
func (o *UpdateIntegrationsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update integrations using p u t not found response a status code equal to that given
func (o *UpdateIntegrationsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update integrations using p u t not found response
func (o *UpdateIntegrationsUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateIntegrationsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTNotFound", 404)
}

func (o *UpdateIntegrationsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/oauth/{registrationId}][%d] updateIntegrationsUsingPUTNotFound", 404)
}

func (o *UpdateIntegrationsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
