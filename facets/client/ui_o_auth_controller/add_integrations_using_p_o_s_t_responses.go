// Code generated by go-swagger; DO NOT EDIT.

package ui_o_auth_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddIntegrationsUsingPOSTReader is a Reader for the AddIntegrationsUsingPOST structure.
type AddIntegrationsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddIntegrationsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddIntegrationsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddIntegrationsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddIntegrationsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddIntegrationsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddIntegrationsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/oauth] addIntegrationsUsingPOST", response, response.Code())
	}
}

// NewAddIntegrationsUsingPOSTOK creates a AddIntegrationsUsingPOSTOK with default headers values
func NewAddIntegrationsUsingPOSTOK() *AddIntegrationsUsingPOSTOK {
	return &AddIntegrationsUsingPOSTOK{}
}

/*
AddIntegrationsUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type AddIntegrationsUsingPOSTOK struct {
	Payload []*models.CustomOAuth2ClientRegistration
}

// IsSuccess returns true when this add integrations using p o s t o k response has a 2xx status code
func (o *AddIntegrationsUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add integrations using p o s t o k response has a 3xx status code
func (o *AddIntegrationsUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations using p o s t o k response has a 4xx status code
func (o *AddIntegrationsUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add integrations using p o s t o k response has a 5xx status code
func (o *AddIntegrationsUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations using p o s t o k response a status code equal to that given
func (o *AddIntegrationsUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add integrations using p o s t o k response
func (o *AddIntegrationsUsingPOSTOK) Code() int {
	return 200
}

func (o *AddIntegrationsUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTOK %s", 200, payload)
}

func (o *AddIntegrationsUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTOK %s", 200, payload)
}

func (o *AddIntegrationsUsingPOSTOK) GetPayload() []*models.CustomOAuth2ClientRegistration {
	return o.Payload
}

func (o *AddIntegrationsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddIntegrationsUsingPOSTCreated creates a AddIntegrationsUsingPOSTCreated with default headers values
func NewAddIntegrationsUsingPOSTCreated() *AddIntegrationsUsingPOSTCreated {
	return &AddIntegrationsUsingPOSTCreated{}
}

/*
AddIntegrationsUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type AddIntegrationsUsingPOSTCreated struct {
}

// IsSuccess returns true when this add integrations using p o s t created response has a 2xx status code
func (o *AddIntegrationsUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add integrations using p o s t created response has a 3xx status code
func (o *AddIntegrationsUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations using p o s t created response has a 4xx status code
func (o *AddIntegrationsUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add integrations using p o s t created response has a 5xx status code
func (o *AddIntegrationsUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations using p o s t created response a status code equal to that given
func (o *AddIntegrationsUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add integrations using p o s t created response
func (o *AddIntegrationsUsingPOSTCreated) Code() int {
	return 201
}

func (o *AddIntegrationsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTCreated", 201)
}

func (o *AddIntegrationsUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTCreated", 201)
}

func (o *AddIntegrationsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddIntegrationsUsingPOSTUnauthorized creates a AddIntegrationsUsingPOSTUnauthorized with default headers values
func NewAddIntegrationsUsingPOSTUnauthorized() *AddIntegrationsUsingPOSTUnauthorized {
	return &AddIntegrationsUsingPOSTUnauthorized{}
}

/*
AddIntegrationsUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddIntegrationsUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this add integrations using p o s t unauthorized response has a 2xx status code
func (o *AddIntegrationsUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations using p o s t unauthorized response has a 3xx status code
func (o *AddIntegrationsUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations using p o s t unauthorized response has a 4xx status code
func (o *AddIntegrationsUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add integrations using p o s t unauthorized response has a 5xx status code
func (o *AddIntegrationsUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations using p o s t unauthorized response a status code equal to that given
func (o *AddIntegrationsUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add integrations using p o s t unauthorized response
func (o *AddIntegrationsUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *AddIntegrationsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTUnauthorized", 401)
}

func (o *AddIntegrationsUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTUnauthorized", 401)
}

func (o *AddIntegrationsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddIntegrationsUsingPOSTForbidden creates a AddIntegrationsUsingPOSTForbidden with default headers values
func NewAddIntegrationsUsingPOSTForbidden() *AddIntegrationsUsingPOSTForbidden {
	return &AddIntegrationsUsingPOSTForbidden{}
}

/*
AddIntegrationsUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddIntegrationsUsingPOSTForbidden struct {
}

// IsSuccess returns true when this add integrations using p o s t forbidden response has a 2xx status code
func (o *AddIntegrationsUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations using p o s t forbidden response has a 3xx status code
func (o *AddIntegrationsUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations using p o s t forbidden response has a 4xx status code
func (o *AddIntegrationsUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add integrations using p o s t forbidden response has a 5xx status code
func (o *AddIntegrationsUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations using p o s t forbidden response a status code equal to that given
func (o *AddIntegrationsUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add integrations using p o s t forbidden response
func (o *AddIntegrationsUsingPOSTForbidden) Code() int {
	return 403
}

func (o *AddIntegrationsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTForbidden", 403)
}

func (o *AddIntegrationsUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTForbidden", 403)
}

func (o *AddIntegrationsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddIntegrationsUsingPOSTNotFound creates a AddIntegrationsUsingPOSTNotFound with default headers values
func NewAddIntegrationsUsingPOSTNotFound() *AddIntegrationsUsingPOSTNotFound {
	return &AddIntegrationsUsingPOSTNotFound{}
}

/*
AddIntegrationsUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddIntegrationsUsingPOSTNotFound struct {
}

// IsSuccess returns true when this add integrations using p o s t not found response has a 2xx status code
func (o *AddIntegrationsUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations using p o s t not found response has a 3xx status code
func (o *AddIntegrationsUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations using p o s t not found response has a 4xx status code
func (o *AddIntegrationsUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add integrations using p o s t not found response has a 5xx status code
func (o *AddIntegrationsUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations using p o s t not found response a status code equal to that given
func (o *AddIntegrationsUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add integrations using p o s t not found response
func (o *AddIntegrationsUsingPOSTNotFound) Code() int {
	return 404
}

func (o *AddIntegrationsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTNotFound", 404)
}

func (o *AddIntegrationsUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsUsingPOSTNotFound", 404)
}

func (o *AddIntegrationsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
