// Code generated by go-swagger; DO NOT EDIT.

package ui_o_auth_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewEditGenericOAuthIntegrationUsingPUTParams creates a new EditGenericOAuthIntegrationUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewEditGenericOAuthIntegrationUsingPUTParams() *EditGenericOAuthIntegrationUsingPUTParams {
	return &EditGenericOAuthIntegrationUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewEditGenericOAuthIntegrationUsingPUTParamsWithTimeout creates a new EditGenericOAuthIntegrationUsingPUTParams object
// with the ability to set a timeout on a request.
func NewEditGenericOAuthIntegrationUsingPUTParamsWithTimeout(timeout time.Duration) *EditGenericOAuthIntegrationUsingPUTParams {
	return &EditGenericOAuthIntegrationUsingPUTParams{
		timeout: timeout,
	}
}

// NewEditGenericOAuthIntegrationUsingPUTParamsWithContext creates a new EditGenericOAuthIntegrationUsingPUTParams object
// with the ability to set a context for a request.
func NewEditGenericOAuthIntegrationUsingPUTParamsWithContext(ctx context.Context) *EditGenericOAuthIntegrationUsingPUTParams {
	return &EditGenericOAuthIntegrationUsingPUTParams{
		Context: ctx,
	}
}

// NewEditGenericOAuthIntegrationUsingPUTParamsWithHTTPClient creates a new EditGenericOAuthIntegrationUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewEditGenericOAuthIntegrationUsingPUTParamsWithHTTPClient(client *http.Client) *EditGenericOAuthIntegrationUsingPUTParams {
	return &EditGenericOAuthIntegrationUsingPUTParams{
		HTTPClient: client,
	}
}

/*
EditGenericOAuthIntegrationUsingPUTParams contains all the parameters to send to the API endpoint

	for the edit generic o auth integration using p u t operation.

	Typically these are written to a http.Request.
*/
type EditGenericOAuthIntegrationUsingPUTParams struct {

	/* Client.

	   client
	*/
	Client *models.GenericOAuth2ClientRegistration

	/* RegistrationID.

	   registrationId
	*/
	RegistrationID *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the edit generic o auth integration using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EditGenericOAuthIntegrationUsingPUTParams) WithDefaults() *EditGenericOAuthIntegrationUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the edit generic o auth integration using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *EditGenericOAuthIntegrationUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) WithTimeout(timeout time.Duration) *EditGenericOAuthIntegrationUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) WithContext(ctx context.Context) *EditGenericOAuthIntegrationUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) WithHTTPClient(client *http.Client) *EditGenericOAuthIntegrationUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithClient adds the client to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) WithClient(client *models.GenericOAuth2ClientRegistration) *EditGenericOAuthIntegrationUsingPUTParams {
	o.SetClient(client)
	return o
}

// SetClient adds the client to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) SetClient(client *models.GenericOAuth2ClientRegistration) {
	o.Client = client
}

// WithRegistrationID adds the registrationID to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) WithRegistrationID(registrationID *string) *EditGenericOAuthIntegrationUsingPUTParams {
	o.SetRegistrationID(registrationID)
	return o
}

// SetRegistrationID adds the registrationId to the edit generic o auth integration using p u t params
func (o *EditGenericOAuthIntegrationUsingPUTParams) SetRegistrationID(registrationID *string) {
	o.RegistrationID = registrationID
}

// WriteToRequest writes these params to a swagger request
func (o *EditGenericOAuthIntegrationUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Client != nil {
		if err := r.SetBodyParam(o.Client); err != nil {
			return err
		}
	}

	if o.RegistrationID != nil {

		// query param registrationId
		var qrRegistrationID string

		if o.RegistrationID != nil {
			qrRegistrationID = *o.RegistrationID
		}
		qRegistrationID := qrRegistrationID
		if qRegistrationID != "" {

			if err := r.SetQueryParam("registrationId", qRegistrationID); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
