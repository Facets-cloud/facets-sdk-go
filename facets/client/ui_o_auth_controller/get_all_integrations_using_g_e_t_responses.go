// Code generated by go-swagger; DO NOT EDIT.

package ui_o_auth_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllIntegrationsUsingGETReader is a Reader for the GetAllIntegrationsUsingGET structure.
type GetAllIntegrationsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllIntegrationsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllIntegrationsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllIntegrationsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllIntegrationsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllIntegrationsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/oauth] getAllIntegrationsUsingGET", response, response.Code())
	}
}

// NewGetAllIntegrationsUsingGETOK creates a GetAllIntegrationsUsingGETOK with default headers values
func NewGetAllIntegrationsUsingGETOK() *GetAllIntegrationsUsingGETOK {
	return &GetAllIntegrationsUsingGETOK{}
}

/*
GetAllIntegrationsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllIntegrationsUsingGETOK struct {
	Payload []*models.CustomOAuth2ClientRegistration
}

// IsSuccess returns true when this get all integrations using g e t o k response has a 2xx status code
func (o *GetAllIntegrationsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all integrations using g e t o k response has a 3xx status code
func (o *GetAllIntegrationsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all integrations using g e t o k response has a 4xx status code
func (o *GetAllIntegrationsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all integrations using g e t o k response has a 5xx status code
func (o *GetAllIntegrationsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all integrations using g e t o k response a status code equal to that given
func (o *GetAllIntegrationsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all integrations using g e t o k response
func (o *GetAllIntegrationsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllIntegrationsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETOK %s", 200, payload)
}

func (o *GetAllIntegrationsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETOK %s", 200, payload)
}

func (o *GetAllIntegrationsUsingGETOK) GetPayload() []*models.CustomOAuth2ClientRegistration {
	return o.Payload
}

func (o *GetAllIntegrationsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllIntegrationsUsingGETUnauthorized creates a GetAllIntegrationsUsingGETUnauthorized with default headers values
func NewGetAllIntegrationsUsingGETUnauthorized() *GetAllIntegrationsUsingGETUnauthorized {
	return &GetAllIntegrationsUsingGETUnauthorized{}
}

/*
GetAllIntegrationsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllIntegrationsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all integrations using g e t unauthorized response has a 2xx status code
func (o *GetAllIntegrationsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all integrations using g e t unauthorized response has a 3xx status code
func (o *GetAllIntegrationsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all integrations using g e t unauthorized response has a 4xx status code
func (o *GetAllIntegrationsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all integrations using g e t unauthorized response has a 5xx status code
func (o *GetAllIntegrationsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all integrations using g e t unauthorized response a status code equal to that given
func (o *GetAllIntegrationsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all integrations using g e t unauthorized response
func (o *GetAllIntegrationsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllIntegrationsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETUnauthorized", 401)
}

func (o *GetAllIntegrationsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETUnauthorized", 401)
}

func (o *GetAllIntegrationsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllIntegrationsUsingGETForbidden creates a GetAllIntegrationsUsingGETForbidden with default headers values
func NewGetAllIntegrationsUsingGETForbidden() *GetAllIntegrationsUsingGETForbidden {
	return &GetAllIntegrationsUsingGETForbidden{}
}

/*
GetAllIntegrationsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllIntegrationsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all integrations using g e t forbidden response has a 2xx status code
func (o *GetAllIntegrationsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all integrations using g e t forbidden response has a 3xx status code
func (o *GetAllIntegrationsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all integrations using g e t forbidden response has a 4xx status code
func (o *GetAllIntegrationsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all integrations using g e t forbidden response has a 5xx status code
func (o *GetAllIntegrationsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all integrations using g e t forbidden response a status code equal to that given
func (o *GetAllIntegrationsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all integrations using g e t forbidden response
func (o *GetAllIntegrationsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllIntegrationsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETForbidden", 403)
}

func (o *GetAllIntegrationsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETForbidden", 403)
}

func (o *GetAllIntegrationsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllIntegrationsUsingGETNotFound creates a GetAllIntegrationsUsingGETNotFound with default headers values
func NewGetAllIntegrationsUsingGETNotFound() *GetAllIntegrationsUsingGETNotFound {
	return &GetAllIntegrationsUsingGETNotFound{}
}

/*
GetAllIntegrationsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllIntegrationsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all integrations using g e t not found response has a 2xx status code
func (o *GetAllIntegrationsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all integrations using g e t not found response has a 3xx status code
func (o *GetAllIntegrationsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all integrations using g e t not found response has a 4xx status code
func (o *GetAllIntegrationsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all integrations using g e t not found response has a 5xx status code
func (o *GetAllIntegrationsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all integrations using g e t not found response a status code equal to that given
func (o *GetAllIntegrationsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all integrations using g e t not found response
func (o *GetAllIntegrationsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllIntegrationsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETNotFound", 404)
}

func (o *GetAllIntegrationsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/oauth][%d] getAllIntegrationsUsingGETNotFound", 404)
}

func (o *GetAllIntegrationsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
