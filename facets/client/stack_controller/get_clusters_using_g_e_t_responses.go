// Code generated by go-swagger; DO NOT EDIT.

package stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetClustersUsingGETReader is a Reader for the GetClustersUsingGET structure.
type GetClustersUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetClustersUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetClustersUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetClustersUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetClustersUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetClustersUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/stacks/{stackName}/clusters] getClustersUsingGET", response, response.Code())
	}
}

// NewGetClustersUsingGETOK creates a GetClustersUsingGETOK with default headers values
func NewGetClustersUsingGETOK() *GetClustersUsingGETOK {
	return &GetClustersUsingGETOK{}
}

/*
GetClustersUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetClustersUsingGETOK struct {
	Payload []*models.AbstractCluster
}

// IsSuccess returns true when this get clusters using g e t o k response has a 2xx status code
func (o *GetClustersUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get clusters using g e t o k response has a 3xx status code
func (o *GetClustersUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters using g e t o k response has a 4xx status code
func (o *GetClustersUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get clusters using g e t o k response has a 5xx status code
func (o *GetClustersUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters using g e t o k response a status code equal to that given
func (o *GetClustersUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get clusters using g e t o k response
func (o *GetClustersUsingGETOK) Code() int {
	return 200
}

func (o *GetClustersUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETOK %s", 200, payload)
}

func (o *GetClustersUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETOK %s", 200, payload)
}

func (o *GetClustersUsingGETOK) GetPayload() []*models.AbstractCluster {
	return o.Payload
}

func (o *GetClustersUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetClustersUsingGETUnauthorized creates a GetClustersUsingGETUnauthorized with default headers values
func NewGetClustersUsingGETUnauthorized() *GetClustersUsingGETUnauthorized {
	return &GetClustersUsingGETUnauthorized{}
}

/*
GetClustersUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetClustersUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get clusters using g e t unauthorized response has a 2xx status code
func (o *GetClustersUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters using g e t unauthorized response has a 3xx status code
func (o *GetClustersUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters using g e t unauthorized response has a 4xx status code
func (o *GetClustersUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters using g e t unauthorized response has a 5xx status code
func (o *GetClustersUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters using g e t unauthorized response a status code equal to that given
func (o *GetClustersUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get clusters using g e t unauthorized response
func (o *GetClustersUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetClustersUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETUnauthorized", 401)
}

func (o *GetClustersUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETUnauthorized", 401)
}

func (o *GetClustersUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClustersUsingGETForbidden creates a GetClustersUsingGETForbidden with default headers values
func NewGetClustersUsingGETForbidden() *GetClustersUsingGETForbidden {
	return &GetClustersUsingGETForbidden{}
}

/*
GetClustersUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetClustersUsingGETForbidden struct {
}

// IsSuccess returns true when this get clusters using g e t forbidden response has a 2xx status code
func (o *GetClustersUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters using g e t forbidden response has a 3xx status code
func (o *GetClustersUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters using g e t forbidden response has a 4xx status code
func (o *GetClustersUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters using g e t forbidden response has a 5xx status code
func (o *GetClustersUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters using g e t forbidden response a status code equal to that given
func (o *GetClustersUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get clusters using g e t forbidden response
func (o *GetClustersUsingGETForbidden) Code() int {
	return 403
}

func (o *GetClustersUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETForbidden", 403)
}

func (o *GetClustersUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETForbidden", 403)
}

func (o *GetClustersUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetClustersUsingGETNotFound creates a GetClustersUsingGETNotFound with default headers values
func NewGetClustersUsingGETNotFound() *GetClustersUsingGETNotFound {
	return &GetClustersUsingGETNotFound{}
}

/*
GetClustersUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetClustersUsingGETNotFound struct {
}

// IsSuccess returns true when this get clusters using g e t not found response has a 2xx status code
func (o *GetClustersUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get clusters using g e t not found response has a 3xx status code
func (o *GetClustersUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get clusters using g e t not found response has a 4xx status code
func (o *GetClustersUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get clusters using g e t not found response has a 5xx status code
func (o *GetClustersUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get clusters using g e t not found response a status code equal to that given
func (o *GetClustersUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get clusters using g e t not found response
func (o *GetClustersUsingGETNotFound) Code() int {
	return 404
}

func (o *GetClustersUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETNotFound", 404)
}

func (o *GetClustersUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/stacks/{stackName}/clusters][%d] getClustersUsingGETNotFound", 404)
}

func (o *GetClustersUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
