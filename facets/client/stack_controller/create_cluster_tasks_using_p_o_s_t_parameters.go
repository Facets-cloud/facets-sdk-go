// Code generated by go-swagger; DO NOT EDIT.

package stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewCreateClusterTasksUsingPOSTParams creates a new CreateClusterTasksUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateClusterTasksUsingPOSTParams() *CreateClusterTasksUsingPOSTParams {
	return &CreateClusterTasksUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateClusterTasksUsingPOSTParamsWithTimeout creates a new CreateClusterTasksUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewCreateClusterTasksUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateClusterTasksUsingPOSTParams {
	return &CreateClusterTasksUsingPOSTParams{
		timeout: timeout,
	}
}

// NewCreateClusterTasksUsingPOSTParamsWithContext creates a new CreateClusterTasksUsingPOSTParams object
// with the ability to set a context for a request.
func NewCreateClusterTasksUsingPOSTParamsWithContext(ctx context.Context) *CreateClusterTasksUsingPOSTParams {
	return &CreateClusterTasksUsingPOSTParams{
		Context: ctx,
	}
}

// NewCreateClusterTasksUsingPOSTParamsWithHTTPClient creates a new CreateClusterTasksUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateClusterTasksUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateClusterTasksUsingPOSTParams {
	return &CreateClusterTasksUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
CreateClusterTasksUsingPOSTParams contains all the parameters to send to the API endpoint

	for the create cluster tasks using p o s t operation.

	Typically these are written to a http.Request.
*/
type CreateClusterTasksUsingPOSTParams struct {

	/* TaskRequest.

	   taskRequest
	*/
	TaskRequest *models.ClusterTaskRequest

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create cluster tasks using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateClusterTasksUsingPOSTParams) WithDefaults() *CreateClusterTasksUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create cluster tasks using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateClusterTasksUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateClusterTasksUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) WithContext(ctx context.Context) *CreateClusterTasksUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateClusterTasksUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithTaskRequest adds the taskRequest to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) WithTaskRequest(taskRequest *models.ClusterTaskRequest) *CreateClusterTasksUsingPOSTParams {
	o.SetTaskRequest(taskRequest)
	return o
}

// SetTaskRequest adds the taskRequest to the create cluster tasks using p o s t params
func (o *CreateClusterTasksUsingPOSTParams) SetTaskRequest(taskRequest *models.ClusterTaskRequest) {
	o.TaskRequest = taskRequest
}

// WriteToRequest writes these params to a swagger request
func (o *CreateClusterTasksUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.TaskRequest != nil {
		if err := r.SetBodyParam(o.TaskRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
