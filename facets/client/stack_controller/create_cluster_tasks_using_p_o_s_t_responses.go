// Code generated by go-swagger; DO NOT EDIT.

package stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateClusterTasksUsingPOSTReader is a Reader for the CreateClusterTasksUsingPOST structure.
type CreateClusterTasksUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClusterTasksUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateClusterTasksUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateClusterTasksUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateClusterTasksUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateClusterTasksUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateClusterTasksUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc/v1/stacks/clusterTask] createClusterTasksUsingPOST", response, response.Code())
	}
}

// NewCreateClusterTasksUsingPOSTOK creates a CreateClusterTasksUsingPOSTOK with default headers values
func NewCreateClusterTasksUsingPOSTOK() *CreateClusterTasksUsingPOSTOK {
	return &CreateClusterTasksUsingPOSTOK{}
}

/*
CreateClusterTasksUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateClusterTasksUsingPOSTOK struct {
	Payload []*models.ClusterTask
}

// IsSuccess returns true when this create cluster tasks using p o s t o k response has a 2xx status code
func (o *CreateClusterTasksUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create cluster tasks using p o s t o k response has a 3xx status code
func (o *CreateClusterTasksUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster tasks using p o s t o k response has a 4xx status code
func (o *CreateClusterTasksUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create cluster tasks using p o s t o k response has a 5xx status code
func (o *CreateClusterTasksUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster tasks using p o s t o k response a status code equal to that given
func (o *CreateClusterTasksUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create cluster tasks using p o s t o k response
func (o *CreateClusterTasksUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateClusterTasksUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTOK %s", 200, payload)
}

func (o *CreateClusterTasksUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTOK %s", 200, payload)
}

func (o *CreateClusterTasksUsingPOSTOK) GetPayload() []*models.ClusterTask {
	return o.Payload
}

func (o *CreateClusterTasksUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterTasksUsingPOSTCreated creates a CreateClusterTasksUsingPOSTCreated with default headers values
func NewCreateClusterTasksUsingPOSTCreated() *CreateClusterTasksUsingPOSTCreated {
	return &CreateClusterTasksUsingPOSTCreated{}
}

/*
CreateClusterTasksUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateClusterTasksUsingPOSTCreated struct {
}

// IsSuccess returns true when this create cluster tasks using p o s t created response has a 2xx status code
func (o *CreateClusterTasksUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create cluster tasks using p o s t created response has a 3xx status code
func (o *CreateClusterTasksUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster tasks using p o s t created response has a 4xx status code
func (o *CreateClusterTasksUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create cluster tasks using p o s t created response has a 5xx status code
func (o *CreateClusterTasksUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster tasks using p o s t created response a status code equal to that given
func (o *CreateClusterTasksUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create cluster tasks using p o s t created response
func (o *CreateClusterTasksUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateClusterTasksUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTCreated", 201)
}

func (o *CreateClusterTasksUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTCreated", 201)
}

func (o *CreateClusterTasksUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateClusterTasksUsingPOSTUnauthorized creates a CreateClusterTasksUsingPOSTUnauthorized with default headers values
func NewCreateClusterTasksUsingPOSTUnauthorized() *CreateClusterTasksUsingPOSTUnauthorized {
	return &CreateClusterTasksUsingPOSTUnauthorized{}
}

/*
CreateClusterTasksUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateClusterTasksUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create cluster tasks using p o s t unauthorized response has a 2xx status code
func (o *CreateClusterTasksUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create cluster tasks using p o s t unauthorized response has a 3xx status code
func (o *CreateClusterTasksUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster tasks using p o s t unauthorized response has a 4xx status code
func (o *CreateClusterTasksUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create cluster tasks using p o s t unauthorized response has a 5xx status code
func (o *CreateClusterTasksUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster tasks using p o s t unauthorized response a status code equal to that given
func (o *CreateClusterTasksUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create cluster tasks using p o s t unauthorized response
func (o *CreateClusterTasksUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateClusterTasksUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTUnauthorized", 401)
}

func (o *CreateClusterTasksUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTUnauthorized", 401)
}

func (o *CreateClusterTasksUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateClusterTasksUsingPOSTForbidden creates a CreateClusterTasksUsingPOSTForbidden with default headers values
func NewCreateClusterTasksUsingPOSTForbidden() *CreateClusterTasksUsingPOSTForbidden {
	return &CreateClusterTasksUsingPOSTForbidden{}
}

/*
CreateClusterTasksUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateClusterTasksUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create cluster tasks using p o s t forbidden response has a 2xx status code
func (o *CreateClusterTasksUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create cluster tasks using p o s t forbidden response has a 3xx status code
func (o *CreateClusterTasksUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster tasks using p o s t forbidden response has a 4xx status code
func (o *CreateClusterTasksUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create cluster tasks using p o s t forbidden response has a 5xx status code
func (o *CreateClusterTasksUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster tasks using p o s t forbidden response a status code equal to that given
func (o *CreateClusterTasksUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create cluster tasks using p o s t forbidden response
func (o *CreateClusterTasksUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateClusterTasksUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTForbidden", 403)
}

func (o *CreateClusterTasksUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTForbidden", 403)
}

func (o *CreateClusterTasksUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateClusterTasksUsingPOSTNotFound creates a CreateClusterTasksUsingPOSTNotFound with default headers values
func NewCreateClusterTasksUsingPOSTNotFound() *CreateClusterTasksUsingPOSTNotFound {
	return &CreateClusterTasksUsingPOSTNotFound{}
}

/*
CreateClusterTasksUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateClusterTasksUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create cluster tasks using p o s t not found response has a 2xx status code
func (o *CreateClusterTasksUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create cluster tasks using p o s t not found response has a 3xx status code
func (o *CreateClusterTasksUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create cluster tasks using p o s t not found response has a 4xx status code
func (o *CreateClusterTasksUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create cluster tasks using p o s t not found response has a 5xx status code
func (o *CreateClusterTasksUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create cluster tasks using p o s t not found response a status code equal to that given
func (o *CreateClusterTasksUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create cluster tasks using p o s t not found response
func (o *CreateClusterTasksUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateClusterTasksUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTNotFound", 404)
}

func (o *CreateClusterTasksUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/clusterTask][%d] createClusterTasksUsingPOSTNotFound", 404)
}

func (o *CreateClusterTasksUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
