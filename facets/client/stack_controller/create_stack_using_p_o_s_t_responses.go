// Code generated by go-swagger; DO NOT EDIT.

package stack_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateStackUsingPOSTReader is a Reader for the CreateStackUsingPOST structure.
type CreateStackUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateStackUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateStackUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateStackUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateStackUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateStackUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateStackUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc/v1/stacks/] createStackUsingPOST", response, response.Code())
	}
}

// NewCreateStackUsingPOSTOK creates a CreateStackUsingPOSTOK with default headers values
func NewCreateStackUsingPOSTOK() *CreateStackUsingPOSTOK {
	return &CreateStackUsingPOSTOK{}
}

/*
CreateStackUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateStackUsingPOSTOK struct {
	Payload *models.Stack
}

// IsSuccess returns true when this create stack using p o s t o k response has a 2xx status code
func (o *CreateStackUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create stack using p o s t o k response has a 3xx status code
func (o *CreateStackUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack using p o s t o k response has a 4xx status code
func (o *CreateStackUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create stack using p o s t o k response has a 5xx status code
func (o *CreateStackUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack using p o s t o k response a status code equal to that given
func (o *CreateStackUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create stack using p o s t o k response
func (o *CreateStackUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateStackUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTOK %s", 200, payload)
}

func (o *CreateStackUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTOK %s", 200, payload)
}

func (o *CreateStackUsingPOSTOK) GetPayload() *models.Stack {
	return o.Payload
}

func (o *CreateStackUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Stack)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateStackUsingPOSTCreated creates a CreateStackUsingPOSTCreated with default headers values
func NewCreateStackUsingPOSTCreated() *CreateStackUsingPOSTCreated {
	return &CreateStackUsingPOSTCreated{}
}

/*
CreateStackUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateStackUsingPOSTCreated struct {
}

// IsSuccess returns true when this create stack using p o s t created response has a 2xx status code
func (o *CreateStackUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create stack using p o s t created response has a 3xx status code
func (o *CreateStackUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack using p o s t created response has a 4xx status code
func (o *CreateStackUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create stack using p o s t created response has a 5xx status code
func (o *CreateStackUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack using p o s t created response a status code equal to that given
func (o *CreateStackUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create stack using p o s t created response
func (o *CreateStackUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateStackUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTCreated", 201)
}

func (o *CreateStackUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTCreated", 201)
}

func (o *CreateStackUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateStackUsingPOSTUnauthorized creates a CreateStackUsingPOSTUnauthorized with default headers values
func NewCreateStackUsingPOSTUnauthorized() *CreateStackUsingPOSTUnauthorized {
	return &CreateStackUsingPOSTUnauthorized{}
}

/*
CreateStackUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateStackUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create stack using p o s t unauthorized response has a 2xx status code
func (o *CreateStackUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack using p o s t unauthorized response has a 3xx status code
func (o *CreateStackUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack using p o s t unauthorized response has a 4xx status code
func (o *CreateStackUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack using p o s t unauthorized response has a 5xx status code
func (o *CreateStackUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack using p o s t unauthorized response a status code equal to that given
func (o *CreateStackUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create stack using p o s t unauthorized response
func (o *CreateStackUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateStackUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTUnauthorized", 401)
}

func (o *CreateStackUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTUnauthorized", 401)
}

func (o *CreateStackUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateStackUsingPOSTForbidden creates a CreateStackUsingPOSTForbidden with default headers values
func NewCreateStackUsingPOSTForbidden() *CreateStackUsingPOSTForbidden {
	return &CreateStackUsingPOSTForbidden{}
}

/*
CreateStackUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateStackUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create stack using p o s t forbidden response has a 2xx status code
func (o *CreateStackUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack using p o s t forbidden response has a 3xx status code
func (o *CreateStackUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack using p o s t forbidden response has a 4xx status code
func (o *CreateStackUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack using p o s t forbidden response has a 5xx status code
func (o *CreateStackUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack using p o s t forbidden response a status code equal to that given
func (o *CreateStackUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create stack using p o s t forbidden response
func (o *CreateStackUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateStackUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTForbidden", 403)
}

func (o *CreateStackUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTForbidden", 403)
}

func (o *CreateStackUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateStackUsingPOSTNotFound creates a CreateStackUsingPOSTNotFound with default headers values
func NewCreateStackUsingPOSTNotFound() *CreateStackUsingPOSTNotFound {
	return &CreateStackUsingPOSTNotFound{}
}

/*
CreateStackUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateStackUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create stack using p o s t not found response has a 2xx status code
func (o *CreateStackUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create stack using p o s t not found response has a 3xx status code
func (o *CreateStackUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create stack using p o s t not found response has a 4xx status code
func (o *CreateStackUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create stack using p o s t not found response has a 5xx status code
func (o *CreateStackUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create stack using p o s t not found response a status code equal to that given
func (o *CreateStackUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create stack using p o s t not found response
func (o *CreateStackUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateStackUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTNotFound", 404)
}

func (o *CreateStackUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc/v1/stacks/][%d] createStackUsingPOSTNotFound", 404)
}

func (o *CreateStackUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
