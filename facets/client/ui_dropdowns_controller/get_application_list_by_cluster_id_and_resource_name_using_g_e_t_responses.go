// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetApplicationListByClusterIDAndResourceNameUsingGETReader is a Reader for the GetApplicationListByClusterIDAndResourceNameUsingGET structure.
type GetApplicationListByClusterIDAndResourceNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationListByClusterIDAndResourceNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationListByClusterIDAndResourceNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationListByClusterIDAndResourceNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}] getApplicationListByClusterIdAndResourceNameUsingGET", response, response.Code())
	}
}

// NewGetApplicationListByClusterIDAndResourceNameUsingGETOK creates a GetApplicationListByClusterIDAndResourceNameUsingGETOK with default headers values
func NewGetApplicationListByClusterIDAndResourceNameUsingGETOK() *GetApplicationListByClusterIDAndResourceNameUsingGETOK {
	return &GetApplicationListByClusterIDAndResourceNameUsingGETOK{}
}

/*
GetApplicationListByClusterIDAndResourceNameUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationListByClusterIDAndResourceNameUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get application list by cluster Id and resource name using g e t o k response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application list by cluster Id and resource name using g e t o k response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name using g e t o k response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application list by cluster Id and resource name using g e t o k response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name using g e t o k response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application list by cluster Id and resource name using g e t o k response
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) Code() int {
	return 200
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETOK %s", 200, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETOK %s", 200, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized creates a GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized with default headers values
func NewGetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized() *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized {
	return &GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized{}
}

/*
GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get application list by cluster Id and resource name using g e t unauthorized response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list by cluster Id and resource name using g e t unauthorized response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name using g e t unauthorized response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list by cluster Id and resource name using g e t unauthorized response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name using g e t unauthorized response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get application list by cluster Id and resource name using g e t unauthorized response
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETUnauthorized", 401)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETUnauthorized", 401)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationListByClusterIDAndResourceNameUsingGETForbidden creates a GetApplicationListByClusterIDAndResourceNameUsingGETForbidden with default headers values
func NewGetApplicationListByClusterIDAndResourceNameUsingGETForbidden() *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden {
	return &GetApplicationListByClusterIDAndResourceNameUsingGETForbidden{}
}

/*
GetApplicationListByClusterIDAndResourceNameUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationListByClusterIDAndResourceNameUsingGETForbidden struct {
}

// IsSuccess returns true when this get application list by cluster Id and resource name using g e t forbidden response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list by cluster Id and resource name using g e t forbidden response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name using g e t forbidden response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list by cluster Id and resource name using g e t forbidden response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name using g e t forbidden response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get application list by cluster Id and resource name using g e t forbidden response
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) Code() int {
	return 403
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETForbidden", 403)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETForbidden", 403)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationListByClusterIDAndResourceNameUsingGETNotFound creates a GetApplicationListByClusterIDAndResourceNameUsingGETNotFound with default headers values
func NewGetApplicationListByClusterIDAndResourceNameUsingGETNotFound() *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound {
	return &GetApplicationListByClusterIDAndResourceNameUsingGETNotFound{}
}

/*
GetApplicationListByClusterIDAndResourceNameUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationListByClusterIDAndResourceNameUsingGETNotFound struct {
}

// IsSuccess returns true when this get application list by cluster Id and resource name using g e t not found response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list by cluster Id and resource name using g e t not found response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name using g e t not found response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list by cluster Id and resource name using g e t not found response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name using g e t not found response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application list by cluster Id and resource name using g e t not found response
func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) Code() int {
	return 404
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETNotFound", 404)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameUsingGETNotFound", 404)
}

func (o *GetApplicationListByClusterIDAndResourceNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
