// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceByStackUsingGETReader is a Reader for the GetResourceByStackUsingGET structure.
type GetResourceByStackUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceByStackUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceByStackUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceByStackUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceByStackUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceByStackUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info] getResourceByStackUsingGET", response, response.Code())
	}
}

// NewGetResourceByStackUsingGETOK creates a GetResourceByStackUsingGETOK with default headers values
func NewGetResourceByStackUsingGETOK() *GetResourceByStackUsingGETOK {
	return &GetResourceByStackUsingGETOK{}
}

/*
GetResourceByStackUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceByStackUsingGETOK struct {
	Payload *models.BlueprintFile
}

// IsSuccess returns true when this get resource by stack using g e t o k response has a 2xx status code
func (o *GetResourceByStackUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource by stack using g e t o k response has a 3xx status code
func (o *GetResourceByStackUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack using g e t o k response has a 4xx status code
func (o *GetResourceByStackUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by stack using g e t o k response has a 5xx status code
func (o *GetResourceByStackUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack using g e t o k response a status code equal to that given
func (o *GetResourceByStackUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource by stack using g e t o k response
func (o *GetResourceByStackUsingGETOK) Code() int {
	return 200
}

func (o *GetResourceByStackUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETOK %s", 200, payload)
}

func (o *GetResourceByStackUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETOK %s", 200, payload)
}

func (o *GetResourceByStackUsingGETOK) GetPayload() *models.BlueprintFile {
	return o.Payload
}

func (o *GetResourceByStackUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlueprintFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByStackUsingGETUnauthorized creates a GetResourceByStackUsingGETUnauthorized with default headers values
func NewGetResourceByStackUsingGETUnauthorized() *GetResourceByStackUsingGETUnauthorized {
	return &GetResourceByStackUsingGETUnauthorized{}
}

/*
GetResourceByStackUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceByStackUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource by stack using g e t unauthorized response has a 2xx status code
func (o *GetResourceByStackUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by stack using g e t unauthorized response has a 3xx status code
func (o *GetResourceByStackUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack using g e t unauthorized response has a 4xx status code
func (o *GetResourceByStackUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by stack using g e t unauthorized response has a 5xx status code
func (o *GetResourceByStackUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack using g e t unauthorized response a status code equal to that given
func (o *GetResourceByStackUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource by stack using g e t unauthorized response
func (o *GetResourceByStackUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceByStackUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETUnauthorized", 401)
}

func (o *GetResourceByStackUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETUnauthorized", 401)
}

func (o *GetResourceByStackUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceByStackUsingGETForbidden creates a GetResourceByStackUsingGETForbidden with default headers values
func NewGetResourceByStackUsingGETForbidden() *GetResourceByStackUsingGETForbidden {
	return &GetResourceByStackUsingGETForbidden{}
}

/*
GetResourceByStackUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceByStackUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource by stack using g e t forbidden response has a 2xx status code
func (o *GetResourceByStackUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by stack using g e t forbidden response has a 3xx status code
func (o *GetResourceByStackUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack using g e t forbidden response has a 4xx status code
func (o *GetResourceByStackUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by stack using g e t forbidden response has a 5xx status code
func (o *GetResourceByStackUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack using g e t forbidden response a status code equal to that given
func (o *GetResourceByStackUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource by stack using g e t forbidden response
func (o *GetResourceByStackUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceByStackUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETForbidden", 403)
}

func (o *GetResourceByStackUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETForbidden", 403)
}

func (o *GetResourceByStackUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceByStackUsingGETNotFound creates a GetResourceByStackUsingGETNotFound with default headers values
func NewGetResourceByStackUsingGETNotFound() *GetResourceByStackUsingGETNotFound {
	return &GetResourceByStackUsingGETNotFound{}
}

/*
GetResourceByStackUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceByStackUsingGETNotFound struct {
}

// IsSuccess returns true when this get resource by stack using g e t not found response has a 2xx status code
func (o *GetResourceByStackUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by stack using g e t not found response has a 3xx status code
func (o *GetResourceByStackUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack using g e t not found response has a 4xx status code
func (o *GetResourceByStackUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by stack using g e t not found response has a 5xx status code
func (o *GetResourceByStackUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack using g e t not found response a status code equal to that given
func (o *GetResourceByStackUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource by stack using g e t not found response
func (o *GetResourceByStackUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceByStackUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETNotFound", 404)
}

func (o *GetResourceByStackUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackUsingGETNotFound", 404)
}

func (o *GetResourceByStackUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
