// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetFileFromFacetsModulesReader is a Reader for the GetFileFromFacetsModules structure.
type GetFileFromFacetsModulesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFileFromFacetsModulesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFileFromFacetsModulesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetFileFromFacetsModulesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFileFromFacetsModulesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetFileFromFacetsModulesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetFileFromFacetsModulesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/file] getFileFromFacetsModules", response, response.Code())
	}
}

// NewGetFileFromFacetsModulesOK creates a GetFileFromFacetsModulesOK with default headers values
func NewGetFileFromFacetsModulesOK() *GetFileFromFacetsModulesOK {
	return &GetFileFromFacetsModulesOK{}
}

/*
GetFileFromFacetsModulesOK describes a response with status code 200, with default header values.

OK
*/
type GetFileFromFacetsModulesOK struct {
	Payload models.JSONNode
}

// IsSuccess returns true when this get file from facets modules o k response has a 2xx status code
func (o *GetFileFromFacetsModulesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get file from facets modules o k response has a 3xx status code
func (o *GetFileFromFacetsModulesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules o k response has a 4xx status code
func (o *GetFileFromFacetsModulesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get file from facets modules o k response has a 5xx status code
func (o *GetFileFromFacetsModulesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules o k response a status code equal to that given
func (o *GetFileFromFacetsModulesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get file from facets modules o k response
func (o *GetFileFromFacetsModulesOK) Code() int {
	return 200
}

func (o *GetFileFromFacetsModulesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesOK %s", 200, payload)
}

func (o *GetFileFromFacetsModulesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesOK %s", 200, payload)
}

func (o *GetFileFromFacetsModulesOK) GetPayload() models.JSONNode {
	return o.Payload
}

func (o *GetFileFromFacetsModulesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileFromFacetsModulesBadRequest creates a GetFileFromFacetsModulesBadRequest with default headers values
func NewGetFileFromFacetsModulesBadRequest() *GetFileFromFacetsModulesBadRequest {
	return &GetFileFromFacetsModulesBadRequest{}
}

/*
GetFileFromFacetsModulesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetFileFromFacetsModulesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get file from facets modules bad request response has a 2xx status code
func (o *GetFileFromFacetsModulesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get file from facets modules bad request response has a 3xx status code
func (o *GetFileFromFacetsModulesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules bad request response has a 4xx status code
func (o *GetFileFromFacetsModulesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get file from facets modules bad request response has a 5xx status code
func (o *GetFileFromFacetsModulesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules bad request response a status code equal to that given
func (o *GetFileFromFacetsModulesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get file from facets modules bad request response
func (o *GetFileFromFacetsModulesBadRequest) Code() int {
	return 400
}

func (o *GetFileFromFacetsModulesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesBadRequest %s", 400, payload)
}

func (o *GetFileFromFacetsModulesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesBadRequest %s", 400, payload)
}

func (o *GetFileFromFacetsModulesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetFileFromFacetsModulesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileFromFacetsModulesNotFound creates a GetFileFromFacetsModulesNotFound with default headers values
func NewGetFileFromFacetsModulesNotFound() *GetFileFromFacetsModulesNotFound {
	return &GetFileFromFacetsModulesNotFound{}
}

/*
GetFileFromFacetsModulesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFileFromFacetsModulesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get file from facets modules not found response has a 2xx status code
func (o *GetFileFromFacetsModulesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get file from facets modules not found response has a 3xx status code
func (o *GetFileFromFacetsModulesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules not found response has a 4xx status code
func (o *GetFileFromFacetsModulesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get file from facets modules not found response has a 5xx status code
func (o *GetFileFromFacetsModulesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules not found response a status code equal to that given
func (o *GetFileFromFacetsModulesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get file from facets modules not found response
func (o *GetFileFromFacetsModulesNotFound) Code() int {
	return 404
}

func (o *GetFileFromFacetsModulesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesNotFound %s", 404, payload)
}

func (o *GetFileFromFacetsModulesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesNotFound %s", 404, payload)
}

func (o *GetFileFromFacetsModulesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetFileFromFacetsModulesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileFromFacetsModulesMethodNotAllowed creates a GetFileFromFacetsModulesMethodNotAllowed with default headers values
func NewGetFileFromFacetsModulesMethodNotAllowed() *GetFileFromFacetsModulesMethodNotAllowed {
	return &GetFileFromFacetsModulesMethodNotAllowed{}
}

/*
GetFileFromFacetsModulesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetFileFromFacetsModulesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get file from facets modules method not allowed response has a 2xx status code
func (o *GetFileFromFacetsModulesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get file from facets modules method not allowed response has a 3xx status code
func (o *GetFileFromFacetsModulesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules method not allowed response has a 4xx status code
func (o *GetFileFromFacetsModulesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get file from facets modules method not allowed response has a 5xx status code
func (o *GetFileFromFacetsModulesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules method not allowed response a status code equal to that given
func (o *GetFileFromFacetsModulesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get file from facets modules method not allowed response
func (o *GetFileFromFacetsModulesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetFileFromFacetsModulesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesMethodNotAllowed %s", 405, payload)
}

func (o *GetFileFromFacetsModulesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesMethodNotAllowed %s", 405, payload)
}

func (o *GetFileFromFacetsModulesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetFileFromFacetsModulesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileFromFacetsModulesInternalServerError creates a GetFileFromFacetsModulesInternalServerError with default headers values
func NewGetFileFromFacetsModulesInternalServerError() *GetFileFromFacetsModulesInternalServerError {
	return &GetFileFromFacetsModulesInternalServerError{}
}

/*
GetFileFromFacetsModulesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetFileFromFacetsModulesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get file from facets modules internal server error response has a 2xx status code
func (o *GetFileFromFacetsModulesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get file from facets modules internal server error response has a 3xx status code
func (o *GetFileFromFacetsModulesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules internal server error response has a 4xx status code
func (o *GetFileFromFacetsModulesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get file from facets modules internal server error response has a 5xx status code
func (o *GetFileFromFacetsModulesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get file from facets modules internal server error response a status code equal to that given
func (o *GetFileFromFacetsModulesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get file from facets modules internal server error response
func (o *GetFileFromFacetsModulesInternalServerError) Code() int {
	return 500
}

func (o *GetFileFromFacetsModulesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesInternalServerError %s", 500, payload)
}

func (o *GetFileFromFacetsModulesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesInternalServerError %s", 500, payload)
}

func (o *GetFileFromFacetsModulesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetFileFromFacetsModulesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
