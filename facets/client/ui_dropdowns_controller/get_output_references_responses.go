// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetOutputReferencesReader is a Reader for the GetOutputReferences structure.
type GetOutputReferencesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutputReferencesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutputReferencesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutputReferencesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutputReferencesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetOutputReferencesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutputReferencesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references] getOutputReferences", response, response.Code())
	}
}

// NewGetOutputReferencesOK creates a GetOutputReferencesOK with default headers values
func NewGetOutputReferencesOK() *GetOutputReferencesOK {
	return &GetOutputReferencesOK{}
}

/*
GetOutputReferencesOK describes a response with status code 200, with default header values.

OK
*/
type GetOutputReferencesOK struct {
	Payload []*models.OutputReference
}

// IsSuccess returns true when this get output references o k response has a 2xx status code
func (o *GetOutputReferencesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get output references o k response has a 3xx status code
func (o *GetOutputReferencesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output references o k response has a 4xx status code
func (o *GetOutputReferencesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get output references o k response has a 5xx status code
func (o *GetOutputReferencesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get output references o k response a status code equal to that given
func (o *GetOutputReferencesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get output references o k response
func (o *GetOutputReferencesOK) Code() int {
	return 200
}

func (o *GetOutputReferencesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesOK %s", 200, payload)
}

func (o *GetOutputReferencesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesOK %s", 200, payload)
}

func (o *GetOutputReferencesOK) GetPayload() []*models.OutputReference {
	return o.Payload
}

func (o *GetOutputReferencesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputReferencesBadRequest creates a GetOutputReferencesBadRequest with default headers values
func NewGetOutputReferencesBadRequest() *GetOutputReferencesBadRequest {
	return &GetOutputReferencesBadRequest{}
}

/*
GetOutputReferencesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOutputReferencesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output references bad request response has a 2xx status code
func (o *GetOutputReferencesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output references bad request response has a 3xx status code
func (o *GetOutputReferencesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output references bad request response has a 4xx status code
func (o *GetOutputReferencesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output references bad request response has a 5xx status code
func (o *GetOutputReferencesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get output references bad request response a status code equal to that given
func (o *GetOutputReferencesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get output references bad request response
func (o *GetOutputReferencesBadRequest) Code() int {
	return 400
}

func (o *GetOutputReferencesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesBadRequest %s", 400, payload)
}

func (o *GetOutputReferencesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesBadRequest %s", 400, payload)
}

func (o *GetOutputReferencesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputReferencesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputReferencesNotFound creates a GetOutputReferencesNotFound with default headers values
func NewGetOutputReferencesNotFound() *GetOutputReferencesNotFound {
	return &GetOutputReferencesNotFound{}
}

/*
GetOutputReferencesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOutputReferencesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output references not found response has a 2xx status code
func (o *GetOutputReferencesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output references not found response has a 3xx status code
func (o *GetOutputReferencesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output references not found response has a 4xx status code
func (o *GetOutputReferencesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output references not found response has a 5xx status code
func (o *GetOutputReferencesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get output references not found response a status code equal to that given
func (o *GetOutputReferencesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get output references not found response
func (o *GetOutputReferencesNotFound) Code() int {
	return 404
}

func (o *GetOutputReferencesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesNotFound %s", 404, payload)
}

func (o *GetOutputReferencesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesNotFound %s", 404, payload)
}

func (o *GetOutputReferencesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputReferencesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputReferencesMethodNotAllowed creates a GetOutputReferencesMethodNotAllowed with default headers values
func NewGetOutputReferencesMethodNotAllowed() *GetOutputReferencesMethodNotAllowed {
	return &GetOutputReferencesMethodNotAllowed{}
}

/*
GetOutputReferencesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetOutputReferencesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output references method not allowed response has a 2xx status code
func (o *GetOutputReferencesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output references method not allowed response has a 3xx status code
func (o *GetOutputReferencesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output references method not allowed response has a 4xx status code
func (o *GetOutputReferencesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output references method not allowed response has a 5xx status code
func (o *GetOutputReferencesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get output references method not allowed response a status code equal to that given
func (o *GetOutputReferencesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get output references method not allowed response
func (o *GetOutputReferencesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetOutputReferencesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesMethodNotAllowed %s", 405, payload)
}

func (o *GetOutputReferencesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesMethodNotAllowed %s", 405, payload)
}

func (o *GetOutputReferencesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputReferencesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputReferencesInternalServerError creates a GetOutputReferencesInternalServerError with default headers values
func NewGetOutputReferencesInternalServerError() *GetOutputReferencesInternalServerError {
	return &GetOutputReferencesInternalServerError{}
}

/*
GetOutputReferencesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOutputReferencesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output references internal server error response has a 2xx status code
func (o *GetOutputReferencesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output references internal server error response has a 3xx status code
func (o *GetOutputReferencesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output references internal server error response has a 4xx status code
func (o *GetOutputReferencesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get output references internal server error response has a 5xx status code
func (o *GetOutputReferencesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get output references internal server error response a status code equal to that given
func (o *GetOutputReferencesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get output references internal server error response
func (o *GetOutputReferencesInternalServerError) Code() int {
	return 500
}

func (o *GetOutputReferencesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesInternalServerError %s", 500, payload)
}

func (o *GetOutputReferencesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/output/{outputType}/references][%d] getOutputReferencesInternalServerError %s", 500, payload)
}

func (o *GetOutputReferencesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputReferencesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
