// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllClusterResourcesByStackUsingGETReader is a Reader for the GetAllClusterResourcesByStackUsingGET structure.
type GetAllClusterResourcesByStackUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllClusterResourcesByStackUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllClusterResourcesByStackUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllClusterResourcesByStackUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllClusterResourcesByStackUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllClusterResourcesByStackUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info] getAllClusterResourcesByStackUsingGET", response, response.Code())
	}
}

// NewGetAllClusterResourcesByStackUsingGETOK creates a GetAllClusterResourcesByStackUsingGETOK with default headers values
func NewGetAllClusterResourcesByStackUsingGETOK() *GetAllClusterResourcesByStackUsingGETOK {
	return &GetAllClusterResourcesByStackUsingGETOK{}
}

/*
GetAllClusterResourcesByStackUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllClusterResourcesByStackUsingGETOK struct {
	Payload []*models.BlueprintFile
}

// IsSuccess returns true when this get all cluster resources by stack using g e t o k response has a 2xx status code
func (o *GetAllClusterResourcesByStackUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all cluster resources by stack using g e t o k response has a 3xx status code
func (o *GetAllClusterResourcesByStackUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all cluster resources by stack using g e t o k response has a 4xx status code
func (o *GetAllClusterResourcesByStackUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all cluster resources by stack using g e t o k response has a 5xx status code
func (o *GetAllClusterResourcesByStackUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all cluster resources by stack using g e t o k response a status code equal to that given
func (o *GetAllClusterResourcesByStackUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all cluster resources by stack using g e t o k response
func (o *GetAllClusterResourcesByStackUsingGETOK) Code() int {
	return 200
}

func (o *GetAllClusterResourcesByStackUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETOK %s", 200, payload)
}

func (o *GetAllClusterResourcesByStackUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETOK %s", 200, payload)
}

func (o *GetAllClusterResourcesByStackUsingGETOK) GetPayload() []*models.BlueprintFile {
	return o.Payload
}

func (o *GetAllClusterResourcesByStackUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllClusterResourcesByStackUsingGETUnauthorized creates a GetAllClusterResourcesByStackUsingGETUnauthorized with default headers values
func NewGetAllClusterResourcesByStackUsingGETUnauthorized() *GetAllClusterResourcesByStackUsingGETUnauthorized {
	return &GetAllClusterResourcesByStackUsingGETUnauthorized{}
}

/*
GetAllClusterResourcesByStackUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllClusterResourcesByStackUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all cluster resources by stack using g e t unauthorized response has a 2xx status code
func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all cluster resources by stack using g e t unauthorized response has a 3xx status code
func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all cluster resources by stack using g e t unauthorized response has a 4xx status code
func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all cluster resources by stack using g e t unauthorized response has a 5xx status code
func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all cluster resources by stack using g e t unauthorized response a status code equal to that given
func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all cluster resources by stack using g e t unauthorized response
func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETUnauthorized", 401)
}

func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETUnauthorized", 401)
}

func (o *GetAllClusterResourcesByStackUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllClusterResourcesByStackUsingGETForbidden creates a GetAllClusterResourcesByStackUsingGETForbidden with default headers values
func NewGetAllClusterResourcesByStackUsingGETForbidden() *GetAllClusterResourcesByStackUsingGETForbidden {
	return &GetAllClusterResourcesByStackUsingGETForbidden{}
}

/*
GetAllClusterResourcesByStackUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllClusterResourcesByStackUsingGETForbidden struct {
}

// IsSuccess returns true when this get all cluster resources by stack using g e t forbidden response has a 2xx status code
func (o *GetAllClusterResourcesByStackUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all cluster resources by stack using g e t forbidden response has a 3xx status code
func (o *GetAllClusterResourcesByStackUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all cluster resources by stack using g e t forbidden response has a 4xx status code
func (o *GetAllClusterResourcesByStackUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all cluster resources by stack using g e t forbidden response has a 5xx status code
func (o *GetAllClusterResourcesByStackUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all cluster resources by stack using g e t forbidden response a status code equal to that given
func (o *GetAllClusterResourcesByStackUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all cluster resources by stack using g e t forbidden response
func (o *GetAllClusterResourcesByStackUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllClusterResourcesByStackUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETForbidden", 403)
}

func (o *GetAllClusterResourcesByStackUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETForbidden", 403)
}

func (o *GetAllClusterResourcesByStackUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllClusterResourcesByStackUsingGETNotFound creates a GetAllClusterResourcesByStackUsingGETNotFound with default headers values
func NewGetAllClusterResourcesByStackUsingGETNotFound() *GetAllClusterResourcesByStackUsingGETNotFound {
	return &GetAllClusterResourcesByStackUsingGETNotFound{}
}

/*
GetAllClusterResourcesByStackUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllClusterResourcesByStackUsingGETNotFound struct {
}

// IsSuccess returns true when this get all cluster resources by stack using g e t not found response has a 2xx status code
func (o *GetAllClusterResourcesByStackUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all cluster resources by stack using g e t not found response has a 3xx status code
func (o *GetAllClusterResourcesByStackUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all cluster resources by stack using g e t not found response has a 4xx status code
func (o *GetAllClusterResourcesByStackUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all cluster resources by stack using g e t not found response has a 5xx status code
func (o *GetAllClusterResourcesByStackUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all cluster resources by stack using g e t not found response a status code equal to that given
func (o *GetAllClusterResourcesByStackUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all cluster resources by stack using g e t not found response
func (o *GetAllClusterResourcesByStackUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllClusterResourcesByStackUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETNotFound", 404)
}

func (o *GetAllClusterResourcesByStackUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/cluster-resources-info][%d] getAllClusterResourcesByStackUsingGETNotFound", 404)
}

func (o *GetAllClusterResourcesByStackUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
