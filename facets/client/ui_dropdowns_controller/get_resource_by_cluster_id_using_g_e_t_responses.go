// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceByClusterIDUsingGETReader is a Reader for the GetResourceByClusterIDUsingGET structure.
type GetResourceByClusterIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceByClusterIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceByClusterIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceByClusterIDUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceByClusterIDUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceByClusterIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info] getResourceByClusterIdUsingGET", response, response.Code())
	}
}

// NewGetResourceByClusterIDUsingGETOK creates a GetResourceByClusterIDUsingGETOK with default headers values
func NewGetResourceByClusterIDUsingGETOK() *GetResourceByClusterIDUsingGETOK {
	return &GetResourceByClusterIDUsingGETOK{}
}

/*
GetResourceByClusterIDUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceByClusterIDUsingGETOK struct {
	Payload *models.BlueprintFile
}

// IsSuccess returns true when this get resource by cluster Id using g e t o k response has a 2xx status code
func (o *GetResourceByClusterIDUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource by cluster Id using g e t o k response has a 3xx status code
func (o *GetResourceByClusterIDUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id using g e t o k response has a 4xx status code
func (o *GetResourceByClusterIDUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by cluster Id using g e t o k response has a 5xx status code
func (o *GetResourceByClusterIDUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id using g e t o k response a status code equal to that given
func (o *GetResourceByClusterIDUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource by cluster Id using g e t o k response
func (o *GetResourceByClusterIDUsingGETOK) Code() int {
	return 200
}

func (o *GetResourceByClusterIDUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETOK %s", 200, payload)
}

func (o *GetResourceByClusterIDUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETOK %s", 200, payload)
}

func (o *GetResourceByClusterIDUsingGETOK) GetPayload() *models.BlueprintFile {
	return o.Payload
}

func (o *GetResourceByClusterIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlueprintFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByClusterIDUsingGETUnauthorized creates a GetResourceByClusterIDUsingGETUnauthorized with default headers values
func NewGetResourceByClusterIDUsingGETUnauthorized() *GetResourceByClusterIDUsingGETUnauthorized {
	return &GetResourceByClusterIDUsingGETUnauthorized{}
}

/*
GetResourceByClusterIDUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceByClusterIDUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource by cluster Id using g e t unauthorized response has a 2xx status code
func (o *GetResourceByClusterIDUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by cluster Id using g e t unauthorized response has a 3xx status code
func (o *GetResourceByClusterIDUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id using g e t unauthorized response has a 4xx status code
func (o *GetResourceByClusterIDUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by cluster Id using g e t unauthorized response has a 5xx status code
func (o *GetResourceByClusterIDUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id using g e t unauthorized response a status code equal to that given
func (o *GetResourceByClusterIDUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource by cluster Id using g e t unauthorized response
func (o *GetResourceByClusterIDUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceByClusterIDUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETUnauthorized", 401)
}

func (o *GetResourceByClusterIDUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETUnauthorized", 401)
}

func (o *GetResourceByClusterIDUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceByClusterIDUsingGETForbidden creates a GetResourceByClusterIDUsingGETForbidden with default headers values
func NewGetResourceByClusterIDUsingGETForbidden() *GetResourceByClusterIDUsingGETForbidden {
	return &GetResourceByClusterIDUsingGETForbidden{}
}

/*
GetResourceByClusterIDUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceByClusterIDUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource by cluster Id using g e t forbidden response has a 2xx status code
func (o *GetResourceByClusterIDUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by cluster Id using g e t forbidden response has a 3xx status code
func (o *GetResourceByClusterIDUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id using g e t forbidden response has a 4xx status code
func (o *GetResourceByClusterIDUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by cluster Id using g e t forbidden response has a 5xx status code
func (o *GetResourceByClusterIDUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id using g e t forbidden response a status code equal to that given
func (o *GetResourceByClusterIDUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource by cluster Id using g e t forbidden response
func (o *GetResourceByClusterIDUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceByClusterIDUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETForbidden", 403)
}

func (o *GetResourceByClusterIDUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETForbidden", 403)
}

func (o *GetResourceByClusterIDUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceByClusterIDUsingGETNotFound creates a GetResourceByClusterIDUsingGETNotFound with default headers values
func NewGetResourceByClusterIDUsingGETNotFound() *GetResourceByClusterIDUsingGETNotFound {
	return &GetResourceByClusterIDUsingGETNotFound{}
}

/*
GetResourceByClusterIDUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceByClusterIDUsingGETNotFound struct {
}

// IsSuccess returns true when this get resource by cluster Id using g e t not found response has a 2xx status code
func (o *GetResourceByClusterIDUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by cluster Id using g e t not found response has a 3xx status code
func (o *GetResourceByClusterIDUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id using g e t not found response has a 4xx status code
func (o *GetResourceByClusterIDUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by cluster Id using g e t not found response has a 5xx status code
func (o *GetResourceByClusterIDUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id using g e t not found response a status code equal to that given
func (o *GetResourceByClusterIDUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource by cluster Id using g e t not found response
func (o *GetResourceByClusterIDUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceByClusterIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETNotFound", 404)
}

func (o *GetResourceByClusterIDUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdUsingGETNotFound", 404)
}

func (o *GetResourceByClusterIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
