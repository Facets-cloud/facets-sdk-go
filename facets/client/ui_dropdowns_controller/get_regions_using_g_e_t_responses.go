// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetRegionsUsingGETReader is a Reader for the GetRegionsUsingGET structure.
type GetRegionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRegionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRegionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRegionsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRegionsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRegionsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{cloud}/regions] getRegionsUsingGET", response, response.Code())
	}
}

// NewGetRegionsUsingGETOK creates a GetRegionsUsingGETOK with default headers values
func NewGetRegionsUsingGETOK() *GetRegionsUsingGETOK {
	return &GetRegionsUsingGETOK{}
}

/*
GetRegionsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetRegionsUsingGETOK struct {
	Payload []*models.AllRegionsAndAZ
}

// IsSuccess returns true when this get regions using g e t o k response has a 2xx status code
func (o *GetRegionsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get regions using g e t o k response has a 3xx status code
func (o *GetRegionsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions using g e t o k response has a 4xx status code
func (o *GetRegionsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get regions using g e t o k response has a 5xx status code
func (o *GetRegionsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions using g e t o k response a status code equal to that given
func (o *GetRegionsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get regions using g e t o k response
func (o *GetRegionsUsingGETOK) Code() int {
	return 200
}

func (o *GetRegionsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETOK %s", 200, payload)
}

func (o *GetRegionsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETOK %s", 200, payload)
}

func (o *GetRegionsUsingGETOK) GetPayload() []*models.AllRegionsAndAZ {
	return o.Payload
}

func (o *GetRegionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRegionsUsingGETUnauthorized creates a GetRegionsUsingGETUnauthorized with default headers values
func NewGetRegionsUsingGETUnauthorized() *GetRegionsUsingGETUnauthorized {
	return &GetRegionsUsingGETUnauthorized{}
}

/*
GetRegionsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRegionsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get regions using g e t unauthorized response has a 2xx status code
func (o *GetRegionsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get regions using g e t unauthorized response has a 3xx status code
func (o *GetRegionsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions using g e t unauthorized response has a 4xx status code
func (o *GetRegionsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get regions using g e t unauthorized response has a 5xx status code
func (o *GetRegionsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions using g e t unauthorized response a status code equal to that given
func (o *GetRegionsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get regions using g e t unauthorized response
func (o *GetRegionsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetRegionsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETUnauthorized", 401)
}

func (o *GetRegionsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETUnauthorized", 401)
}

func (o *GetRegionsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegionsUsingGETForbidden creates a GetRegionsUsingGETForbidden with default headers values
func NewGetRegionsUsingGETForbidden() *GetRegionsUsingGETForbidden {
	return &GetRegionsUsingGETForbidden{}
}

/*
GetRegionsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRegionsUsingGETForbidden struct {
}

// IsSuccess returns true when this get regions using g e t forbidden response has a 2xx status code
func (o *GetRegionsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get regions using g e t forbidden response has a 3xx status code
func (o *GetRegionsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions using g e t forbidden response has a 4xx status code
func (o *GetRegionsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get regions using g e t forbidden response has a 5xx status code
func (o *GetRegionsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions using g e t forbidden response a status code equal to that given
func (o *GetRegionsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get regions using g e t forbidden response
func (o *GetRegionsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetRegionsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETForbidden", 403)
}

func (o *GetRegionsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETForbidden", 403)
}

func (o *GetRegionsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRegionsUsingGETNotFound creates a GetRegionsUsingGETNotFound with default headers values
func NewGetRegionsUsingGETNotFound() *GetRegionsUsingGETNotFound {
	return &GetRegionsUsingGETNotFound{}
}

/*
GetRegionsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRegionsUsingGETNotFound struct {
}

// IsSuccess returns true when this get regions using g e t not found response has a 2xx status code
func (o *GetRegionsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get regions using g e t not found response has a 3xx status code
func (o *GetRegionsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get regions using g e t not found response has a 4xx status code
func (o *GetRegionsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get regions using g e t not found response has a 5xx status code
func (o *GetRegionsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get regions using g e t not found response a status code equal to that given
func (o *GetRegionsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get regions using g e t not found response
func (o *GetRegionsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetRegionsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETNotFound", 404)
}

func (o *GetRegionsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/regions][%d] getRegionsUsingGETNotFound", 404)
}

func (o *GetRegionsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
