// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllResourcesByClusterUsingGETReader is a Reader for the GetAllResourcesByClusterUsingGET structure.
type GetAllResourcesByClusterUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllResourcesByClusterUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllResourcesByClusterUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllResourcesByClusterUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllResourcesByClusterUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllResourcesByClusterUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info] getAllResourcesByClusterUsingGET", response, response.Code())
	}
}

// NewGetAllResourcesByClusterUsingGETOK creates a GetAllResourcesByClusterUsingGETOK with default headers values
func NewGetAllResourcesByClusterUsingGETOK() *GetAllResourcesByClusterUsingGETOK {
	return &GetAllResourcesByClusterUsingGETOK{}
}

/*
GetAllResourcesByClusterUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllResourcesByClusterUsingGETOK struct {
	Payload []*models.BlueprintFile
}

// IsSuccess returns true when this get all resources by cluster using g e t o k response has a 2xx status code
func (o *GetAllResourcesByClusterUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all resources by cluster using g e t o k response has a 3xx status code
func (o *GetAllResourcesByClusterUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster using g e t o k response has a 4xx status code
func (o *GetAllResourcesByClusterUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources by cluster using g e t o k response has a 5xx status code
func (o *GetAllResourcesByClusterUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster using g e t o k response a status code equal to that given
func (o *GetAllResourcesByClusterUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all resources by cluster using g e t o k response
func (o *GetAllResourcesByClusterUsingGETOK) Code() int {
	return 200
}

func (o *GetAllResourcesByClusterUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesByClusterUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesByClusterUsingGETOK) GetPayload() []*models.BlueprintFile {
	return o.Payload
}

func (o *GetAllResourcesByClusterUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesByClusterUsingGETUnauthorized creates a GetAllResourcesByClusterUsingGETUnauthorized with default headers values
func NewGetAllResourcesByClusterUsingGETUnauthorized() *GetAllResourcesByClusterUsingGETUnauthorized {
	return &GetAllResourcesByClusterUsingGETUnauthorized{}
}

/*
GetAllResourcesByClusterUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllResourcesByClusterUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all resources by cluster using g e t unauthorized response has a 2xx status code
func (o *GetAllResourcesByClusterUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by cluster using g e t unauthorized response has a 3xx status code
func (o *GetAllResourcesByClusterUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster using g e t unauthorized response has a 4xx status code
func (o *GetAllResourcesByClusterUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by cluster using g e t unauthorized response has a 5xx status code
func (o *GetAllResourcesByClusterUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster using g e t unauthorized response a status code equal to that given
func (o *GetAllResourcesByClusterUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all resources by cluster using g e t unauthorized response
func (o *GetAllResourcesByClusterUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllResourcesByClusterUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesByClusterUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesByClusterUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesByClusterUsingGETForbidden creates a GetAllResourcesByClusterUsingGETForbidden with default headers values
func NewGetAllResourcesByClusterUsingGETForbidden() *GetAllResourcesByClusterUsingGETForbidden {
	return &GetAllResourcesByClusterUsingGETForbidden{}
}

/*
GetAllResourcesByClusterUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllResourcesByClusterUsingGETForbidden struct {
}

// IsSuccess returns true when this get all resources by cluster using g e t forbidden response has a 2xx status code
func (o *GetAllResourcesByClusterUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by cluster using g e t forbidden response has a 3xx status code
func (o *GetAllResourcesByClusterUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster using g e t forbidden response has a 4xx status code
func (o *GetAllResourcesByClusterUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by cluster using g e t forbidden response has a 5xx status code
func (o *GetAllResourcesByClusterUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster using g e t forbidden response a status code equal to that given
func (o *GetAllResourcesByClusterUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all resources by cluster using g e t forbidden response
func (o *GetAllResourcesByClusterUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllResourcesByClusterUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETForbidden", 403)
}

func (o *GetAllResourcesByClusterUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETForbidden", 403)
}

func (o *GetAllResourcesByClusterUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesByClusterUsingGETNotFound creates a GetAllResourcesByClusterUsingGETNotFound with default headers values
func NewGetAllResourcesByClusterUsingGETNotFound() *GetAllResourcesByClusterUsingGETNotFound {
	return &GetAllResourcesByClusterUsingGETNotFound{}
}

/*
GetAllResourcesByClusterUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllResourcesByClusterUsingGETNotFound struct {
}

// IsSuccess returns true when this get all resources by cluster using g e t not found response has a 2xx status code
func (o *GetAllResourcesByClusterUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by cluster using g e t not found response has a 3xx status code
func (o *GetAllResourcesByClusterUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster using g e t not found response has a 4xx status code
func (o *GetAllResourcesByClusterUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by cluster using g e t not found response has a 5xx status code
func (o *GetAllResourcesByClusterUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster using g e t not found response a status code equal to that given
func (o *GetAllResourcesByClusterUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all resources by cluster using g e t not found response
func (o *GetAllResourcesByClusterUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllResourcesByClusterUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETNotFound", 404)
}

func (o *GetAllResourcesByClusterUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterUsingGETNotFound", 404)
}

func (o *GetAllResourcesByClusterUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
