// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceByStackReader is a Reader for the GetResourceByStack structure.
type GetResourceByStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceByStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceByStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceByStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceByStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetResourceByStackMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceByStackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info] getResourceByStack", response, response.Code())
	}
}

// NewGetResourceByStackOK creates a GetResourceByStackOK with default headers values
func NewGetResourceByStackOK() *GetResourceByStackOK {
	return &GetResourceByStackOK{}
}

/*
GetResourceByStackOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceByStackOK struct {
	Payload *models.BlueprintFile
}

// IsSuccess returns true when this get resource by stack o k response has a 2xx status code
func (o *GetResourceByStackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource by stack o k response has a 3xx status code
func (o *GetResourceByStackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack o k response has a 4xx status code
func (o *GetResourceByStackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by stack o k response has a 5xx status code
func (o *GetResourceByStackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack o k response a status code equal to that given
func (o *GetResourceByStackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource by stack o k response
func (o *GetResourceByStackOK) Code() int {
	return 200
}

func (o *GetResourceByStackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackOK %s", 200, payload)
}

func (o *GetResourceByStackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackOK %s", 200, payload)
}

func (o *GetResourceByStackOK) GetPayload() *models.BlueprintFile {
	return o.Payload
}

func (o *GetResourceByStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlueprintFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByStackBadRequest creates a GetResourceByStackBadRequest with default headers values
func NewGetResourceByStackBadRequest() *GetResourceByStackBadRequest {
	return &GetResourceByStackBadRequest{}
}

/*
GetResourceByStackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceByStackBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by stack bad request response has a 2xx status code
func (o *GetResourceByStackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by stack bad request response has a 3xx status code
func (o *GetResourceByStackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack bad request response has a 4xx status code
func (o *GetResourceByStackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by stack bad request response has a 5xx status code
func (o *GetResourceByStackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack bad request response a status code equal to that given
func (o *GetResourceByStackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get resource by stack bad request response
func (o *GetResourceByStackBadRequest) Code() int {
	return 400
}

func (o *GetResourceByStackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackBadRequest %s", 400, payload)
}

func (o *GetResourceByStackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackBadRequest %s", 400, payload)
}

func (o *GetResourceByStackBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByStackNotFound creates a GetResourceByStackNotFound with default headers values
func NewGetResourceByStackNotFound() *GetResourceByStackNotFound {
	return &GetResourceByStackNotFound{}
}

/*
GetResourceByStackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceByStackNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by stack not found response has a 2xx status code
func (o *GetResourceByStackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by stack not found response has a 3xx status code
func (o *GetResourceByStackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack not found response has a 4xx status code
func (o *GetResourceByStackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by stack not found response has a 5xx status code
func (o *GetResourceByStackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack not found response a status code equal to that given
func (o *GetResourceByStackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource by stack not found response
func (o *GetResourceByStackNotFound) Code() int {
	return 404
}

func (o *GetResourceByStackNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackNotFound %s", 404, payload)
}

func (o *GetResourceByStackNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackNotFound %s", 404, payload)
}

func (o *GetResourceByStackNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByStackMethodNotAllowed creates a GetResourceByStackMethodNotAllowed with default headers values
func NewGetResourceByStackMethodNotAllowed() *GetResourceByStackMethodNotAllowed {
	return &GetResourceByStackMethodNotAllowed{}
}

/*
GetResourceByStackMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetResourceByStackMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by stack method not allowed response has a 2xx status code
func (o *GetResourceByStackMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by stack method not allowed response has a 3xx status code
func (o *GetResourceByStackMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack method not allowed response has a 4xx status code
func (o *GetResourceByStackMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by stack method not allowed response has a 5xx status code
func (o *GetResourceByStackMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by stack method not allowed response a status code equal to that given
func (o *GetResourceByStackMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get resource by stack method not allowed response
func (o *GetResourceByStackMethodNotAllowed) Code() int {
	return 405
}

func (o *GetResourceByStackMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceByStackMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceByStackMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByStackMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByStackInternalServerError creates a GetResourceByStackInternalServerError with default headers values
func NewGetResourceByStackInternalServerError() *GetResourceByStackInternalServerError {
	return &GetResourceByStackInternalServerError{}
}

/*
GetResourceByStackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceByStackInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by stack internal server error response has a 2xx status code
func (o *GetResourceByStackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by stack internal server error response has a 3xx status code
func (o *GetResourceByStackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by stack internal server error response has a 4xx status code
func (o *GetResourceByStackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by stack internal server error response has a 5xx status code
func (o *GetResourceByStackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource by stack internal server error response a status code equal to that given
func (o *GetResourceByStackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource by stack internal server error response
func (o *GetResourceByStackInternalServerError) Code() int {
	return 500
}

func (o *GetResourceByStackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackInternalServerError %s", 500, payload)
}

func (o *GetResourceByStackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/{resourceType}/{resourceName}/resource-info][%d] getResourceByStackInternalServerError %s", 500, payload)
}

func (o *GetResourceByStackInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByStackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
