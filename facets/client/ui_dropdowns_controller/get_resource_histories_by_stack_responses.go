// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceHistoriesByStackReader is a Reader for the GetResourceHistoriesByStack structure.
type GetResourceHistoriesByStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceHistoriesByStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceHistoriesByStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceHistoriesByStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceHistoriesByStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetResourceHistoriesByStackMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceHistoriesByStackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history] getResourceHistoriesByStack", response, response.Code())
	}
}

// NewGetResourceHistoriesByStackOK creates a GetResourceHistoriesByStackOK with default headers values
func NewGetResourceHistoriesByStackOK() *GetResourceHistoriesByStackOK {
	return &GetResourceHistoriesByStackOK{}
}

/*
GetResourceHistoriesByStackOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceHistoriesByStackOK struct {
	Payload []*models.ResourceHistory
}

// IsSuccess returns true when this get resource histories by stack o k response has a 2xx status code
func (o *GetResourceHistoriesByStackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource histories by stack o k response has a 3xx status code
func (o *GetResourceHistoriesByStackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack o k response has a 4xx status code
func (o *GetResourceHistoriesByStackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource histories by stack o k response has a 5xx status code
func (o *GetResourceHistoriesByStackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack o k response a status code equal to that given
func (o *GetResourceHistoriesByStackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource histories by stack o k response
func (o *GetResourceHistoriesByStackOK) Code() int {
	return 200
}

func (o *GetResourceHistoriesByStackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackOK %s", 200, payload)
}

func (o *GetResourceHistoriesByStackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackOK %s", 200, payload)
}

func (o *GetResourceHistoriesByStackOK) GetPayload() []*models.ResourceHistory {
	return o.Payload
}

func (o *GetResourceHistoriesByStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceHistoriesByStackBadRequest creates a GetResourceHistoriesByStackBadRequest with default headers values
func NewGetResourceHistoriesByStackBadRequest() *GetResourceHistoriesByStackBadRequest {
	return &GetResourceHistoriesByStackBadRequest{}
}

/*
GetResourceHistoriesByStackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceHistoriesByStackBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource histories by stack bad request response has a 2xx status code
func (o *GetResourceHistoriesByStackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource histories by stack bad request response has a 3xx status code
func (o *GetResourceHistoriesByStackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack bad request response has a 4xx status code
func (o *GetResourceHistoriesByStackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource histories by stack bad request response has a 5xx status code
func (o *GetResourceHistoriesByStackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack bad request response a status code equal to that given
func (o *GetResourceHistoriesByStackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get resource histories by stack bad request response
func (o *GetResourceHistoriesByStackBadRequest) Code() int {
	return 400
}

func (o *GetResourceHistoriesByStackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackBadRequest %s", 400, payload)
}

func (o *GetResourceHistoriesByStackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackBadRequest %s", 400, payload)
}

func (o *GetResourceHistoriesByStackBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceHistoriesByStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceHistoriesByStackNotFound creates a GetResourceHistoriesByStackNotFound with default headers values
func NewGetResourceHistoriesByStackNotFound() *GetResourceHistoriesByStackNotFound {
	return &GetResourceHistoriesByStackNotFound{}
}

/*
GetResourceHistoriesByStackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceHistoriesByStackNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource histories by stack not found response has a 2xx status code
func (o *GetResourceHistoriesByStackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource histories by stack not found response has a 3xx status code
func (o *GetResourceHistoriesByStackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack not found response has a 4xx status code
func (o *GetResourceHistoriesByStackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource histories by stack not found response has a 5xx status code
func (o *GetResourceHistoriesByStackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack not found response a status code equal to that given
func (o *GetResourceHistoriesByStackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource histories by stack not found response
func (o *GetResourceHistoriesByStackNotFound) Code() int {
	return 404
}

func (o *GetResourceHistoriesByStackNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackNotFound %s", 404, payload)
}

func (o *GetResourceHistoriesByStackNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackNotFound %s", 404, payload)
}

func (o *GetResourceHistoriesByStackNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceHistoriesByStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceHistoriesByStackMethodNotAllowed creates a GetResourceHistoriesByStackMethodNotAllowed with default headers values
func NewGetResourceHistoriesByStackMethodNotAllowed() *GetResourceHistoriesByStackMethodNotAllowed {
	return &GetResourceHistoriesByStackMethodNotAllowed{}
}

/*
GetResourceHistoriesByStackMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetResourceHistoriesByStackMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource histories by stack method not allowed response has a 2xx status code
func (o *GetResourceHistoriesByStackMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource histories by stack method not allowed response has a 3xx status code
func (o *GetResourceHistoriesByStackMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack method not allowed response has a 4xx status code
func (o *GetResourceHistoriesByStackMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource histories by stack method not allowed response has a 5xx status code
func (o *GetResourceHistoriesByStackMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack method not allowed response a status code equal to that given
func (o *GetResourceHistoriesByStackMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get resource histories by stack method not allowed response
func (o *GetResourceHistoriesByStackMethodNotAllowed) Code() int {
	return 405
}

func (o *GetResourceHistoriesByStackMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceHistoriesByStackMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceHistoriesByStackMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceHistoriesByStackMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceHistoriesByStackInternalServerError creates a GetResourceHistoriesByStackInternalServerError with default headers values
func NewGetResourceHistoriesByStackInternalServerError() *GetResourceHistoriesByStackInternalServerError {
	return &GetResourceHistoriesByStackInternalServerError{}
}

/*
GetResourceHistoriesByStackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceHistoriesByStackInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource histories by stack internal server error response has a 2xx status code
func (o *GetResourceHistoriesByStackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource histories by stack internal server error response has a 3xx status code
func (o *GetResourceHistoriesByStackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack internal server error response has a 4xx status code
func (o *GetResourceHistoriesByStackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource histories by stack internal server error response has a 5xx status code
func (o *GetResourceHistoriesByStackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource histories by stack internal server error response a status code equal to that given
func (o *GetResourceHistoriesByStackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource histories by stack internal server error response
func (o *GetResourceHistoriesByStackInternalServerError) Code() int {
	return 500
}

func (o *GetResourceHistoriesByStackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackInternalServerError %s", 500, payload)
}

func (o *GetResourceHistoriesByStackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackInternalServerError %s", 500, payload)
}

func (o *GetResourceHistoriesByStackInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceHistoriesByStackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
