// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetApplicationListByClusterIDAndResourceNameReader is a Reader for the GetApplicationListByClusterIDAndResourceName structure.
type GetApplicationListByClusterIDAndResourceNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationListByClusterIDAndResourceNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationListByClusterIDAndResourceNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetApplicationListByClusterIDAndResourceNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationListByClusterIDAndResourceNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetApplicationListByClusterIDAndResourceNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetApplicationListByClusterIDAndResourceNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}] getApplicationListByClusterIdAndResourceName", response, response.Code())
	}
}

// NewGetApplicationListByClusterIDAndResourceNameOK creates a GetApplicationListByClusterIDAndResourceNameOK with default headers values
func NewGetApplicationListByClusterIDAndResourceNameOK() *GetApplicationListByClusterIDAndResourceNameOK {
	return &GetApplicationListByClusterIDAndResourceNameOK{}
}

/*
GetApplicationListByClusterIDAndResourceNameOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationListByClusterIDAndResourceNameOK struct {
	Payload []string
}

// IsSuccess returns true when this get application list by cluster Id and resource name o k response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application list by cluster Id and resource name o k response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name o k response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application list by cluster Id and resource name o k response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name o k response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application list by cluster Id and resource name o k response
func (o *GetApplicationListByClusterIDAndResourceNameOK) Code() int {
	return 200
}

func (o *GetApplicationListByClusterIDAndResourceNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameOK %s", 200, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameOK %s", 200, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameOK) GetPayload() []string {
	return o.Payload
}

func (o *GetApplicationListByClusterIDAndResourceNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListByClusterIDAndResourceNameBadRequest creates a GetApplicationListByClusterIDAndResourceNameBadRequest with default headers values
func NewGetApplicationListByClusterIDAndResourceNameBadRequest() *GetApplicationListByClusterIDAndResourceNameBadRequest {
	return &GetApplicationListByClusterIDAndResourceNameBadRequest{}
}

/*
GetApplicationListByClusterIDAndResourceNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetApplicationListByClusterIDAndResourceNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list by cluster Id and resource name bad request response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list by cluster Id and resource name bad request response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name bad request response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list by cluster Id and resource name bad request response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name bad request response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get application list by cluster Id and resource name bad request response
func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) Code() int {
	return 400
}

func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameBadRequest %s", 400, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameBadRequest %s", 400, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListByClusterIDAndResourceNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListByClusterIDAndResourceNameNotFound creates a GetApplicationListByClusterIDAndResourceNameNotFound with default headers values
func NewGetApplicationListByClusterIDAndResourceNameNotFound() *GetApplicationListByClusterIDAndResourceNameNotFound {
	return &GetApplicationListByClusterIDAndResourceNameNotFound{}
}

/*
GetApplicationListByClusterIDAndResourceNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationListByClusterIDAndResourceNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list by cluster Id and resource name not found response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list by cluster Id and resource name not found response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name not found response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list by cluster Id and resource name not found response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name not found response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application list by cluster Id and resource name not found response
func (o *GetApplicationListByClusterIDAndResourceNameNotFound) Code() int {
	return 404
}

func (o *GetApplicationListByClusterIDAndResourceNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameNotFound %s", 404, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameNotFound %s", 404, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListByClusterIDAndResourceNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListByClusterIDAndResourceNameMethodNotAllowed creates a GetApplicationListByClusterIDAndResourceNameMethodNotAllowed with default headers values
func NewGetApplicationListByClusterIDAndResourceNameMethodNotAllowed() *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed {
	return &GetApplicationListByClusterIDAndResourceNameMethodNotAllowed{}
}

/*
GetApplicationListByClusterIDAndResourceNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetApplicationListByClusterIDAndResourceNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list by cluster Id and resource name method not allowed response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list by cluster Id and resource name method not allowed response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name method not allowed response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application list by cluster Id and resource name method not allowed response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get application list by cluster Id and resource name method not allowed response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get application list by cluster Id and resource name method not allowed response
func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameMethodNotAllowed %s", 405, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameMethodNotAllowed %s", 405, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListByClusterIDAndResourceNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationListByClusterIDAndResourceNameInternalServerError creates a GetApplicationListByClusterIDAndResourceNameInternalServerError with default headers values
func NewGetApplicationListByClusterIDAndResourceNameInternalServerError() *GetApplicationListByClusterIDAndResourceNameInternalServerError {
	return &GetApplicationListByClusterIDAndResourceNameInternalServerError{}
}

/*
GetApplicationListByClusterIDAndResourceNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetApplicationListByClusterIDAndResourceNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get application list by cluster Id and resource name internal server error response has a 2xx status code
func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application list by cluster Id and resource name internal server error response has a 3xx status code
func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application list by cluster Id and resource name internal server error response has a 4xx status code
func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application list by cluster Id and resource name internal server error response has a 5xx status code
func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get application list by cluster Id and resource name internal server error response a status code equal to that given
func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get application list by cluster Id and resource name internal server error response
func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) Code() int {
	return 500
}

func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameInternalServerError %s", 500, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/{resourceType}][%d] getApplicationListByClusterIdAndResourceNameInternalServerError %s", 500, payload)
}

func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetApplicationListByClusterIDAndResourceNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
