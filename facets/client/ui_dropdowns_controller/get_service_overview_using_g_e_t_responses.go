// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetServiceOverviewUsingGETReader is a Reader for the GetServiceOverviewUsingGET structure.
type GetServiceOverviewUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetServiceOverviewUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetServiceOverviewUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetServiceOverviewUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetServiceOverviewUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetServiceOverviewUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview] getServiceOverviewUsingGET", response, response.Code())
	}
}

// NewGetServiceOverviewUsingGETOK creates a GetServiceOverviewUsingGETOK with default headers values
func NewGetServiceOverviewUsingGETOK() *GetServiceOverviewUsingGETOK {
	return &GetServiceOverviewUsingGETOK{}
}

/*
GetServiceOverviewUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetServiceOverviewUsingGETOK struct {
	Payload *models.ServiceOverview
}

// IsSuccess returns true when this get service overview using g e t o k response has a 2xx status code
func (o *GetServiceOverviewUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get service overview using g e t o k response has a 3xx status code
func (o *GetServiceOverviewUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service overview using g e t o k response has a 4xx status code
func (o *GetServiceOverviewUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get service overview using g e t o k response has a 5xx status code
func (o *GetServiceOverviewUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get service overview using g e t o k response a status code equal to that given
func (o *GetServiceOverviewUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get service overview using g e t o k response
func (o *GetServiceOverviewUsingGETOK) Code() int {
	return 200
}

func (o *GetServiceOverviewUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETOK %s", 200, payload)
}

func (o *GetServiceOverviewUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETOK %s", 200, payload)
}

func (o *GetServiceOverviewUsingGETOK) GetPayload() *models.ServiceOverview {
	return o.Payload
}

func (o *GetServiceOverviewUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ServiceOverview)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetServiceOverviewUsingGETUnauthorized creates a GetServiceOverviewUsingGETUnauthorized with default headers values
func NewGetServiceOverviewUsingGETUnauthorized() *GetServiceOverviewUsingGETUnauthorized {
	return &GetServiceOverviewUsingGETUnauthorized{}
}

/*
GetServiceOverviewUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetServiceOverviewUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get service overview using g e t unauthorized response has a 2xx status code
func (o *GetServiceOverviewUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service overview using g e t unauthorized response has a 3xx status code
func (o *GetServiceOverviewUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service overview using g e t unauthorized response has a 4xx status code
func (o *GetServiceOverviewUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service overview using g e t unauthorized response has a 5xx status code
func (o *GetServiceOverviewUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get service overview using g e t unauthorized response a status code equal to that given
func (o *GetServiceOverviewUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get service overview using g e t unauthorized response
func (o *GetServiceOverviewUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetServiceOverviewUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETUnauthorized", 401)
}

func (o *GetServiceOverviewUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETUnauthorized", 401)
}

func (o *GetServiceOverviewUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceOverviewUsingGETForbidden creates a GetServiceOverviewUsingGETForbidden with default headers values
func NewGetServiceOverviewUsingGETForbidden() *GetServiceOverviewUsingGETForbidden {
	return &GetServiceOverviewUsingGETForbidden{}
}

/*
GetServiceOverviewUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetServiceOverviewUsingGETForbidden struct {
}

// IsSuccess returns true when this get service overview using g e t forbidden response has a 2xx status code
func (o *GetServiceOverviewUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service overview using g e t forbidden response has a 3xx status code
func (o *GetServiceOverviewUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service overview using g e t forbidden response has a 4xx status code
func (o *GetServiceOverviewUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service overview using g e t forbidden response has a 5xx status code
func (o *GetServiceOverviewUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get service overview using g e t forbidden response a status code equal to that given
func (o *GetServiceOverviewUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get service overview using g e t forbidden response
func (o *GetServiceOverviewUsingGETForbidden) Code() int {
	return 403
}

func (o *GetServiceOverviewUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETForbidden", 403)
}

func (o *GetServiceOverviewUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETForbidden", 403)
}

func (o *GetServiceOverviewUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetServiceOverviewUsingGETNotFound creates a GetServiceOverviewUsingGETNotFound with default headers values
func NewGetServiceOverviewUsingGETNotFound() *GetServiceOverviewUsingGETNotFound {
	return &GetServiceOverviewUsingGETNotFound{}
}

/*
GetServiceOverviewUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetServiceOverviewUsingGETNotFound struct {
}

// IsSuccess returns true when this get service overview using g e t not found response has a 2xx status code
func (o *GetServiceOverviewUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get service overview using g e t not found response has a 3xx status code
func (o *GetServiceOverviewUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get service overview using g e t not found response has a 4xx status code
func (o *GetServiceOverviewUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get service overview using g e t not found response has a 5xx status code
func (o *GetServiceOverviewUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get service overview using g e t not found response a status code equal to that given
func (o *GetServiceOverviewUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get service overview using g e t not found response
func (o *GetServiceOverviewUsingGETNotFound) Code() int {
	return 404
}

func (o *GetServiceOverviewUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETNotFound", 404)
}

func (o *GetServiceOverviewUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/service/{serviceName}/overview][%d] getServiceOverviewUsingGETNotFound", 404)
}

func (o *GetServiceOverviewUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
