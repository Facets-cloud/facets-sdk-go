// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAzForRegionByCloudParams creates a new GetAzForRegionByCloudParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetAzForRegionByCloudParams() *GetAzForRegionByCloudParams {
	return &GetAzForRegionByCloudParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetAzForRegionByCloudParamsWithTimeout creates a new GetAzForRegionByCloudParams object
// with the ability to set a timeout on a request.
func NewGetAzForRegionByCloudParamsWithTimeout(timeout time.Duration) *GetAzForRegionByCloudParams {
	return &GetAzForRegionByCloudParams{
		timeout: timeout,
	}
}

// NewGetAzForRegionByCloudParamsWithContext creates a new GetAzForRegionByCloudParams object
// with the ability to set a context for a request.
func NewGetAzForRegionByCloudParamsWithContext(ctx context.Context) *GetAzForRegionByCloudParams {
	return &GetAzForRegionByCloudParams{
		Context: ctx,
	}
}

// NewGetAzForRegionByCloudParamsWithHTTPClient creates a new GetAzForRegionByCloudParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetAzForRegionByCloudParamsWithHTTPClient(client *http.Client) *GetAzForRegionByCloudParams {
	return &GetAzForRegionByCloudParams{
		HTTPClient: client,
	}
}

/*
GetAzForRegionByCloudParams contains all the parameters to send to the API endpoint

	for the get az for region by cloud operation.

	Typically these are written to a http.Request.
*/
type GetAzForRegionByCloudParams struct {

	// Cloud.
	Cloud string

	// Region.
	Region string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get az for region by cloud params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAzForRegionByCloudParams) WithDefaults() *GetAzForRegionByCloudParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get az for region by cloud params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetAzForRegionByCloudParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) WithTimeout(timeout time.Duration) *GetAzForRegionByCloudParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) WithContext(ctx context.Context) *GetAzForRegionByCloudParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) WithHTTPClient(client *http.Client) *GetAzForRegionByCloudParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCloud adds the cloud to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) WithCloud(cloud string) *GetAzForRegionByCloudParams {
	o.SetCloud(cloud)
	return o
}

// SetCloud adds the cloud to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) SetCloud(cloud string) {
	o.Cloud = cloud
}

// WithRegion adds the region to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) WithRegion(region string) *GetAzForRegionByCloudParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the get az for region by cloud params
func (o *GetAzForRegionByCloudParams) SetRegion(region string) {
	o.Region = region
}

// WriteToRequest writes these params to a swagger request
func (o *GetAzForRegionByCloudParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param cloud
	if err := r.SetPathParam("cloud", o.Cloud); err != nil {
		return err
	}

	// path param region
	if err := r.SetPathParam("region", o.Region); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
