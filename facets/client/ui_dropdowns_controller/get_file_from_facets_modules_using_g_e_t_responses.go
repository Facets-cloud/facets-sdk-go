// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetFileFromFacetsModulesUsingGETReader is a Reader for the GetFileFromFacetsModulesUsingGET structure.
type GetFileFromFacetsModulesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetFileFromFacetsModulesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetFileFromFacetsModulesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetFileFromFacetsModulesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetFileFromFacetsModulesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetFileFromFacetsModulesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/file] getFileFromFacetsModulesUsingGET", response, response.Code())
	}
}

// NewGetFileFromFacetsModulesUsingGETOK creates a GetFileFromFacetsModulesUsingGETOK with default headers values
func NewGetFileFromFacetsModulesUsingGETOK() *GetFileFromFacetsModulesUsingGETOK {
	return &GetFileFromFacetsModulesUsingGETOK{}
}

/*
GetFileFromFacetsModulesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetFileFromFacetsModulesUsingGETOK struct {
	Payload models.JSONNode
}

// IsSuccess returns true when this get file from facets modules using g e t o k response has a 2xx status code
func (o *GetFileFromFacetsModulesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get file from facets modules using g e t o k response has a 3xx status code
func (o *GetFileFromFacetsModulesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules using g e t o k response has a 4xx status code
func (o *GetFileFromFacetsModulesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get file from facets modules using g e t o k response has a 5xx status code
func (o *GetFileFromFacetsModulesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules using g e t o k response a status code equal to that given
func (o *GetFileFromFacetsModulesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get file from facets modules using g e t o k response
func (o *GetFileFromFacetsModulesUsingGETOK) Code() int {
	return 200
}

func (o *GetFileFromFacetsModulesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETOK %s", 200, payload)
}

func (o *GetFileFromFacetsModulesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETOK %s", 200, payload)
}

func (o *GetFileFromFacetsModulesUsingGETOK) GetPayload() models.JSONNode {
	return o.Payload
}

func (o *GetFileFromFacetsModulesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFileFromFacetsModulesUsingGETUnauthorized creates a GetFileFromFacetsModulesUsingGETUnauthorized with default headers values
func NewGetFileFromFacetsModulesUsingGETUnauthorized() *GetFileFromFacetsModulesUsingGETUnauthorized {
	return &GetFileFromFacetsModulesUsingGETUnauthorized{}
}

/*
GetFileFromFacetsModulesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetFileFromFacetsModulesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get file from facets modules using g e t unauthorized response has a 2xx status code
func (o *GetFileFromFacetsModulesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get file from facets modules using g e t unauthorized response has a 3xx status code
func (o *GetFileFromFacetsModulesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules using g e t unauthorized response has a 4xx status code
func (o *GetFileFromFacetsModulesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get file from facets modules using g e t unauthorized response has a 5xx status code
func (o *GetFileFromFacetsModulesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules using g e t unauthorized response a status code equal to that given
func (o *GetFileFromFacetsModulesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get file from facets modules using g e t unauthorized response
func (o *GetFileFromFacetsModulesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetFileFromFacetsModulesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETUnauthorized", 401)
}

func (o *GetFileFromFacetsModulesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETUnauthorized", 401)
}

func (o *GetFileFromFacetsModulesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFileFromFacetsModulesUsingGETForbidden creates a GetFileFromFacetsModulesUsingGETForbidden with default headers values
func NewGetFileFromFacetsModulesUsingGETForbidden() *GetFileFromFacetsModulesUsingGETForbidden {
	return &GetFileFromFacetsModulesUsingGETForbidden{}
}

/*
GetFileFromFacetsModulesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetFileFromFacetsModulesUsingGETForbidden struct {
}

// IsSuccess returns true when this get file from facets modules using g e t forbidden response has a 2xx status code
func (o *GetFileFromFacetsModulesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get file from facets modules using g e t forbidden response has a 3xx status code
func (o *GetFileFromFacetsModulesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules using g e t forbidden response has a 4xx status code
func (o *GetFileFromFacetsModulesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get file from facets modules using g e t forbidden response has a 5xx status code
func (o *GetFileFromFacetsModulesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules using g e t forbidden response a status code equal to that given
func (o *GetFileFromFacetsModulesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get file from facets modules using g e t forbidden response
func (o *GetFileFromFacetsModulesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetFileFromFacetsModulesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETForbidden", 403)
}

func (o *GetFileFromFacetsModulesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETForbidden", 403)
}

func (o *GetFileFromFacetsModulesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetFileFromFacetsModulesUsingGETNotFound creates a GetFileFromFacetsModulesUsingGETNotFound with default headers values
func NewGetFileFromFacetsModulesUsingGETNotFound() *GetFileFromFacetsModulesUsingGETNotFound {
	return &GetFileFromFacetsModulesUsingGETNotFound{}
}

/*
GetFileFromFacetsModulesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetFileFromFacetsModulesUsingGETNotFound struct {
}

// IsSuccess returns true when this get file from facets modules using g e t not found response has a 2xx status code
func (o *GetFileFromFacetsModulesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get file from facets modules using g e t not found response has a 3xx status code
func (o *GetFileFromFacetsModulesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get file from facets modules using g e t not found response has a 4xx status code
func (o *GetFileFromFacetsModulesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get file from facets modules using g e t not found response has a 5xx status code
func (o *GetFileFromFacetsModulesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get file from facets modules using g e t not found response a status code equal to that given
func (o *GetFileFromFacetsModulesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get file from facets modules using g e t not found response
func (o *GetFileFromFacetsModulesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetFileFromFacetsModulesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETNotFound", 404)
}

func (o *GetFileFromFacetsModulesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/file][%d] getFileFromFacetsModulesUsingGETNotFound", 404)
}

func (o *GetFileFromFacetsModulesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
