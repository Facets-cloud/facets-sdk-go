// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllResourcesReader is a Reader for the GetAllResources structure.
type GetAllResourcesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllResourcesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllResourcesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllResourcesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllResourcesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllResourcesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllResourcesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources] getAllResources", response, response.Code())
	}
}

// NewGetAllResourcesOK creates a GetAllResourcesOK with default headers values
func NewGetAllResourcesOK() *GetAllResourcesOK {
	return &GetAllResourcesOK{}
}

/*
GetAllResourcesOK describes a response with status code 200, with default header values.

OK
*/
type GetAllResourcesOK struct {
	Payload map[string][]string
}

// IsSuccess returns true when this get all resources o k response has a 2xx status code
func (o *GetAllResourcesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all resources o k response has a 3xx status code
func (o *GetAllResourcesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources o k response has a 4xx status code
func (o *GetAllResourcesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources o k response has a 5xx status code
func (o *GetAllResourcesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources o k response a status code equal to that given
func (o *GetAllResourcesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all resources o k response
func (o *GetAllResourcesOK) Code() int {
	return 200
}

func (o *GetAllResourcesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesOK %s", 200, payload)
}

func (o *GetAllResourcesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesOK %s", 200, payload)
}

func (o *GetAllResourcesOK) GetPayload() map[string][]string {
	return o.Payload
}

func (o *GetAllResourcesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesBadRequest creates a GetAllResourcesBadRequest with default headers values
func NewGetAllResourcesBadRequest() *GetAllResourcesBadRequest {
	return &GetAllResourcesBadRequest{}
}

/*
GetAllResourcesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllResourcesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources bad request response has a 2xx status code
func (o *GetAllResourcesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources bad request response has a 3xx status code
func (o *GetAllResourcesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources bad request response has a 4xx status code
func (o *GetAllResourcesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources bad request response has a 5xx status code
func (o *GetAllResourcesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources bad request response a status code equal to that given
func (o *GetAllResourcesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all resources bad request response
func (o *GetAllResourcesBadRequest) Code() int {
	return 400
}

func (o *GetAllResourcesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesBadRequest %s", 400, payload)
}

func (o *GetAllResourcesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesBadRequest %s", 400, payload)
}

func (o *GetAllResourcesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesNotFound creates a GetAllResourcesNotFound with default headers values
func NewGetAllResourcesNotFound() *GetAllResourcesNotFound {
	return &GetAllResourcesNotFound{}
}

/*
GetAllResourcesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllResourcesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources not found response has a 2xx status code
func (o *GetAllResourcesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources not found response has a 3xx status code
func (o *GetAllResourcesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources not found response has a 4xx status code
func (o *GetAllResourcesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources not found response has a 5xx status code
func (o *GetAllResourcesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources not found response a status code equal to that given
func (o *GetAllResourcesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all resources not found response
func (o *GetAllResourcesNotFound) Code() int {
	return 404
}

func (o *GetAllResourcesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesNotFound %s", 404, payload)
}

func (o *GetAllResourcesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesNotFound %s", 404, payload)
}

func (o *GetAllResourcesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesMethodNotAllowed creates a GetAllResourcesMethodNotAllowed with default headers values
func NewGetAllResourcesMethodNotAllowed() *GetAllResourcesMethodNotAllowed {
	return &GetAllResourcesMethodNotAllowed{}
}

/*
GetAllResourcesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllResourcesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources method not allowed response has a 2xx status code
func (o *GetAllResourcesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources method not allowed response has a 3xx status code
func (o *GetAllResourcesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources method not allowed response has a 4xx status code
func (o *GetAllResourcesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources method not allowed response has a 5xx status code
func (o *GetAllResourcesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources method not allowed response a status code equal to that given
func (o *GetAllResourcesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all resources method not allowed response
func (o *GetAllResourcesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllResourcesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllResourcesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesMethodNotAllowed %s", 405, payload)
}

func (o *GetAllResourcesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesInternalServerError creates a GetAllResourcesInternalServerError with default headers values
func NewGetAllResourcesInternalServerError() *GetAllResourcesInternalServerError {
	return &GetAllResourcesInternalServerError{}
}

/*
GetAllResourcesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllResourcesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources internal server error response has a 2xx status code
func (o *GetAllResourcesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources internal server error response has a 3xx status code
func (o *GetAllResourcesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources internal server error response has a 4xx status code
func (o *GetAllResourcesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources internal server error response has a 5xx status code
func (o *GetAllResourcesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all resources internal server error response a status code equal to that given
func (o *GetAllResourcesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all resources internal server error response
func (o *GetAllResourcesInternalServerError) Code() int {
	return 500
}

func (o *GetAllResourcesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesInternalServerError %s", 500, payload)
}

func (o *GetAllResourcesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesInternalServerError %s", 500, payload)
}

func (o *GetAllResourcesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
