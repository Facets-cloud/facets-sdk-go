// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAllResourcesUsingGETReader is a Reader for the GetAllResourcesUsingGET structure.
type GetAllResourcesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllResourcesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllResourcesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllResourcesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllResourcesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllResourcesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources] getAllResourcesUsingGET", response, response.Code())
	}
}

// NewGetAllResourcesUsingGETOK creates a GetAllResourcesUsingGETOK with default headers values
func NewGetAllResourcesUsingGETOK() *GetAllResourcesUsingGETOK {
	return &GetAllResourcesUsingGETOK{}
}

/*
GetAllResourcesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllResourcesUsingGETOK struct {
	Payload map[string][]string
}

// IsSuccess returns true when this get all resources using g e t o k response has a 2xx status code
func (o *GetAllResourcesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all resources using g e t o k response has a 3xx status code
func (o *GetAllResourcesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources using g e t o k response has a 4xx status code
func (o *GetAllResourcesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources using g e t o k response has a 5xx status code
func (o *GetAllResourcesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources using g e t o k response a status code equal to that given
func (o *GetAllResourcesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all resources using g e t o k response
func (o *GetAllResourcesUsingGETOK) Code() int {
	return 200
}

func (o *GetAllResourcesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesUsingGETOK) GetPayload() map[string][]string {
	return o.Payload
}

func (o *GetAllResourcesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesUsingGETUnauthorized creates a GetAllResourcesUsingGETUnauthorized with default headers values
func NewGetAllResourcesUsingGETUnauthorized() *GetAllResourcesUsingGETUnauthorized {
	return &GetAllResourcesUsingGETUnauthorized{}
}

/*
GetAllResourcesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllResourcesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all resources using g e t unauthorized response has a 2xx status code
func (o *GetAllResourcesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources using g e t unauthorized response has a 3xx status code
func (o *GetAllResourcesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources using g e t unauthorized response has a 4xx status code
func (o *GetAllResourcesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources using g e t unauthorized response has a 5xx status code
func (o *GetAllResourcesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources using g e t unauthorized response a status code equal to that given
func (o *GetAllResourcesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all resources using g e t unauthorized response
func (o *GetAllResourcesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllResourcesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesUsingGETForbidden creates a GetAllResourcesUsingGETForbidden with default headers values
func NewGetAllResourcesUsingGETForbidden() *GetAllResourcesUsingGETForbidden {
	return &GetAllResourcesUsingGETForbidden{}
}

/*
GetAllResourcesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllResourcesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all resources using g e t forbidden response has a 2xx status code
func (o *GetAllResourcesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources using g e t forbidden response has a 3xx status code
func (o *GetAllResourcesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources using g e t forbidden response has a 4xx status code
func (o *GetAllResourcesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources using g e t forbidden response has a 5xx status code
func (o *GetAllResourcesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources using g e t forbidden response a status code equal to that given
func (o *GetAllResourcesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all resources using g e t forbidden response
func (o *GetAllResourcesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllResourcesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETForbidden", 403)
}

func (o *GetAllResourcesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETForbidden", 403)
}

func (o *GetAllResourcesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesUsingGETNotFound creates a GetAllResourcesUsingGETNotFound with default headers values
func NewGetAllResourcesUsingGETNotFound() *GetAllResourcesUsingGETNotFound {
	return &GetAllResourcesUsingGETNotFound{}
}

/*
GetAllResourcesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllResourcesUsingGETNotFound struct {
}

// IsSuccess returns true when this get all resources using g e t not found response has a 2xx status code
func (o *GetAllResourcesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources using g e t not found response has a 3xx status code
func (o *GetAllResourcesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources using g e t not found response has a 4xx status code
func (o *GetAllResourcesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources using g e t not found response has a 5xx status code
func (o *GetAllResourcesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources using g e t not found response a status code equal to that given
func (o *GetAllResourcesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all resources using g e t not found response
func (o *GetAllResourcesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllResourcesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETNotFound", 404)
}

func (o *GetAllResourcesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources][%d] getAllResourcesUsingGETNotFound", 404)
}

func (o *GetAllResourcesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
