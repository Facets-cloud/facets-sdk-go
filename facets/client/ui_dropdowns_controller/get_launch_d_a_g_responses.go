// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetLaunchDAGReader is a Reader for the GetLaunchDAG structure.
type GetLaunchDAGReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLaunchDAGReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLaunchDAGOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetLaunchDAGBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLaunchDAGNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetLaunchDAGMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetLaunchDAGInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag] getLaunchDAG", response, response.Code())
	}
}

// NewGetLaunchDAGOK creates a GetLaunchDAGOK with default headers values
func NewGetLaunchDAGOK() *GetLaunchDAGOK {
	return &GetLaunchDAGOK{}
}

/*
GetLaunchDAGOK describes a response with status code 200, with default header values.

OK
*/
type GetLaunchDAGOK struct {
	Payload []*models.BlueprintFile
}

// IsSuccess returns true when this get launch d a g o k response has a 2xx status code
func (o *GetLaunchDAGOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get launch d a g o k response has a 3xx status code
func (o *GetLaunchDAGOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g o k response has a 4xx status code
func (o *GetLaunchDAGOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get launch d a g o k response has a 5xx status code
func (o *GetLaunchDAGOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g o k response a status code equal to that given
func (o *GetLaunchDAGOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get launch d a g o k response
func (o *GetLaunchDAGOK) Code() int {
	return 200
}

func (o *GetLaunchDAGOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGOK %s", 200, payload)
}

func (o *GetLaunchDAGOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGOK %s", 200, payload)
}

func (o *GetLaunchDAGOK) GetPayload() []*models.BlueprintFile {
	return o.Payload
}

func (o *GetLaunchDAGOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLaunchDAGBadRequest creates a GetLaunchDAGBadRequest with default headers values
func NewGetLaunchDAGBadRequest() *GetLaunchDAGBadRequest {
	return &GetLaunchDAGBadRequest{}
}

/*
GetLaunchDAGBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetLaunchDAGBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get launch d a g bad request response has a 2xx status code
func (o *GetLaunchDAGBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get launch d a g bad request response has a 3xx status code
func (o *GetLaunchDAGBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g bad request response has a 4xx status code
func (o *GetLaunchDAGBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get launch d a g bad request response has a 5xx status code
func (o *GetLaunchDAGBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g bad request response a status code equal to that given
func (o *GetLaunchDAGBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get launch d a g bad request response
func (o *GetLaunchDAGBadRequest) Code() int {
	return 400
}

func (o *GetLaunchDAGBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGBadRequest %s", 400, payload)
}

func (o *GetLaunchDAGBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGBadRequest %s", 400, payload)
}

func (o *GetLaunchDAGBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLaunchDAGBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLaunchDAGNotFound creates a GetLaunchDAGNotFound with default headers values
func NewGetLaunchDAGNotFound() *GetLaunchDAGNotFound {
	return &GetLaunchDAGNotFound{}
}

/*
GetLaunchDAGNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLaunchDAGNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get launch d a g not found response has a 2xx status code
func (o *GetLaunchDAGNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get launch d a g not found response has a 3xx status code
func (o *GetLaunchDAGNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g not found response has a 4xx status code
func (o *GetLaunchDAGNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get launch d a g not found response has a 5xx status code
func (o *GetLaunchDAGNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g not found response a status code equal to that given
func (o *GetLaunchDAGNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get launch d a g not found response
func (o *GetLaunchDAGNotFound) Code() int {
	return 404
}

func (o *GetLaunchDAGNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGNotFound %s", 404, payload)
}

func (o *GetLaunchDAGNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGNotFound %s", 404, payload)
}

func (o *GetLaunchDAGNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLaunchDAGNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLaunchDAGMethodNotAllowed creates a GetLaunchDAGMethodNotAllowed with default headers values
func NewGetLaunchDAGMethodNotAllowed() *GetLaunchDAGMethodNotAllowed {
	return &GetLaunchDAGMethodNotAllowed{}
}

/*
GetLaunchDAGMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetLaunchDAGMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get launch d a g method not allowed response has a 2xx status code
func (o *GetLaunchDAGMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get launch d a g method not allowed response has a 3xx status code
func (o *GetLaunchDAGMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g method not allowed response has a 4xx status code
func (o *GetLaunchDAGMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get launch d a g method not allowed response has a 5xx status code
func (o *GetLaunchDAGMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g method not allowed response a status code equal to that given
func (o *GetLaunchDAGMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get launch d a g method not allowed response
func (o *GetLaunchDAGMethodNotAllowed) Code() int {
	return 405
}

func (o *GetLaunchDAGMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGMethodNotAllowed %s", 405, payload)
}

func (o *GetLaunchDAGMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGMethodNotAllowed %s", 405, payload)
}

func (o *GetLaunchDAGMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLaunchDAGMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLaunchDAGInternalServerError creates a GetLaunchDAGInternalServerError with default headers values
func NewGetLaunchDAGInternalServerError() *GetLaunchDAGInternalServerError {
	return &GetLaunchDAGInternalServerError{}
}

/*
GetLaunchDAGInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetLaunchDAGInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get launch d a g internal server error response has a 2xx status code
func (o *GetLaunchDAGInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get launch d a g internal server error response has a 3xx status code
func (o *GetLaunchDAGInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g internal server error response has a 4xx status code
func (o *GetLaunchDAGInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get launch d a g internal server error response has a 5xx status code
func (o *GetLaunchDAGInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get launch d a g internal server error response a status code equal to that given
func (o *GetLaunchDAGInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get launch d a g internal server error response
func (o *GetLaunchDAGInternalServerError) Code() int {
	return 500
}

func (o *GetLaunchDAGInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGInternalServerError %s", 500, payload)
}

func (o *GetLaunchDAGInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGInternalServerError %s", 500, payload)
}

func (o *GetLaunchDAGInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetLaunchDAGInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
