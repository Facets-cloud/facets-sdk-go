// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllResourcesByStackUsingGETReader is a Reader for the GetAllResourcesByStackUsingGET structure.
type GetAllResourcesByStackUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllResourcesByStackUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllResourcesByStackUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllResourcesByStackUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllResourcesByStackUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllResourcesByStackUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info] getAllResourcesByStackUsingGET", response, response.Code())
	}
}

// NewGetAllResourcesByStackUsingGETOK creates a GetAllResourcesByStackUsingGETOK with default headers values
func NewGetAllResourcesByStackUsingGETOK() *GetAllResourcesByStackUsingGETOK {
	return &GetAllResourcesByStackUsingGETOK{}
}

/*
GetAllResourcesByStackUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllResourcesByStackUsingGETOK struct {
	Payload []*models.BlueprintFile
}

// IsSuccess returns true when this get all resources by stack using g e t o k response has a 2xx status code
func (o *GetAllResourcesByStackUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all resources by stack using g e t o k response has a 3xx status code
func (o *GetAllResourcesByStackUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by stack using g e t o k response has a 4xx status code
func (o *GetAllResourcesByStackUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources by stack using g e t o k response has a 5xx status code
func (o *GetAllResourcesByStackUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by stack using g e t o k response a status code equal to that given
func (o *GetAllResourcesByStackUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all resources by stack using g e t o k response
func (o *GetAllResourcesByStackUsingGETOK) Code() int {
	return 200
}

func (o *GetAllResourcesByStackUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesByStackUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesByStackUsingGETOK) GetPayload() []*models.BlueprintFile {
	return o.Payload
}

func (o *GetAllResourcesByStackUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesByStackUsingGETUnauthorized creates a GetAllResourcesByStackUsingGETUnauthorized with default headers values
func NewGetAllResourcesByStackUsingGETUnauthorized() *GetAllResourcesByStackUsingGETUnauthorized {
	return &GetAllResourcesByStackUsingGETUnauthorized{}
}

/*
GetAllResourcesByStackUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllResourcesByStackUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all resources by stack using g e t unauthorized response has a 2xx status code
func (o *GetAllResourcesByStackUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by stack using g e t unauthorized response has a 3xx status code
func (o *GetAllResourcesByStackUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by stack using g e t unauthorized response has a 4xx status code
func (o *GetAllResourcesByStackUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by stack using g e t unauthorized response has a 5xx status code
func (o *GetAllResourcesByStackUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by stack using g e t unauthorized response a status code equal to that given
func (o *GetAllResourcesByStackUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all resources by stack using g e t unauthorized response
func (o *GetAllResourcesByStackUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllResourcesByStackUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesByStackUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesByStackUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesByStackUsingGETForbidden creates a GetAllResourcesByStackUsingGETForbidden with default headers values
func NewGetAllResourcesByStackUsingGETForbidden() *GetAllResourcesByStackUsingGETForbidden {
	return &GetAllResourcesByStackUsingGETForbidden{}
}

/*
GetAllResourcesByStackUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllResourcesByStackUsingGETForbidden struct {
}

// IsSuccess returns true when this get all resources by stack using g e t forbidden response has a 2xx status code
func (o *GetAllResourcesByStackUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by stack using g e t forbidden response has a 3xx status code
func (o *GetAllResourcesByStackUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by stack using g e t forbidden response has a 4xx status code
func (o *GetAllResourcesByStackUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by stack using g e t forbidden response has a 5xx status code
func (o *GetAllResourcesByStackUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by stack using g e t forbidden response a status code equal to that given
func (o *GetAllResourcesByStackUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all resources by stack using g e t forbidden response
func (o *GetAllResourcesByStackUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllResourcesByStackUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETForbidden", 403)
}

func (o *GetAllResourcesByStackUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETForbidden", 403)
}

func (o *GetAllResourcesByStackUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesByStackUsingGETNotFound creates a GetAllResourcesByStackUsingGETNotFound with default headers values
func NewGetAllResourcesByStackUsingGETNotFound() *GetAllResourcesByStackUsingGETNotFound {
	return &GetAllResourcesByStackUsingGETNotFound{}
}

/*
GetAllResourcesByStackUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllResourcesByStackUsingGETNotFound struct {
}

// IsSuccess returns true when this get all resources by stack using g e t not found response has a 2xx status code
func (o *GetAllResourcesByStackUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by stack using g e t not found response has a 3xx status code
func (o *GetAllResourcesByStackUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by stack using g e t not found response has a 4xx status code
func (o *GetAllResourcesByStackUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by stack using g e t not found response has a 5xx status code
func (o *GetAllResourcesByStackUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by stack using g e t not found response a status code equal to that given
func (o *GetAllResourcesByStackUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all resources by stack using g e t not found response
func (o *GetAllResourcesByStackUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllResourcesByStackUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETNotFound", 404)
}

func (o *GetAllResourcesByStackUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/resources-info][%d] getAllResourcesByStackUsingGETNotFound", 404)
}

func (o *GetAllResourcesByStackUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
