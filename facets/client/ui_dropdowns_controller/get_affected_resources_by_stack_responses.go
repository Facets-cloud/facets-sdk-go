// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAffectedResourcesByStackReader is a Reader for the GetAffectedResourcesByStack structure.
type GetAffectedResourcesByStackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAffectedResourcesByStackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAffectedResourcesByStackOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAffectedResourcesByStackBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAffectedResourcesByStackNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAffectedResourcesByStackMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAffectedResourcesByStackInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources] getAffectedResourcesByStack", response, response.Code())
	}
}

// NewGetAffectedResourcesByStackOK creates a GetAffectedResourcesByStackOK with default headers values
func NewGetAffectedResourcesByStackOK() *GetAffectedResourcesByStackOK {
	return &GetAffectedResourcesByStackOK{}
}

/*
GetAffectedResourcesByStackOK describes a response with status code 200, with default header values.

OK
*/
type GetAffectedResourcesByStackOK struct {
	Payload *models.ResourceAffectedResponse
}

// IsSuccess returns true when this get affected resources by stack o k response has a 2xx status code
func (o *GetAffectedResourcesByStackOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get affected resources by stack o k response has a 3xx status code
func (o *GetAffectedResourcesByStackOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get affected resources by stack o k response has a 4xx status code
func (o *GetAffectedResourcesByStackOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get affected resources by stack o k response has a 5xx status code
func (o *GetAffectedResourcesByStackOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get affected resources by stack o k response a status code equal to that given
func (o *GetAffectedResourcesByStackOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get affected resources by stack o k response
func (o *GetAffectedResourcesByStackOK) Code() int {
	return 200
}

func (o *GetAffectedResourcesByStackOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackOK %s", 200, payload)
}

func (o *GetAffectedResourcesByStackOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackOK %s", 200, payload)
}

func (o *GetAffectedResourcesByStackOK) GetPayload() *models.ResourceAffectedResponse {
	return o.Payload
}

func (o *GetAffectedResourcesByStackOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ResourceAffectedResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAffectedResourcesByStackBadRequest creates a GetAffectedResourcesByStackBadRequest with default headers values
func NewGetAffectedResourcesByStackBadRequest() *GetAffectedResourcesByStackBadRequest {
	return &GetAffectedResourcesByStackBadRequest{}
}

/*
GetAffectedResourcesByStackBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAffectedResourcesByStackBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get affected resources by stack bad request response has a 2xx status code
func (o *GetAffectedResourcesByStackBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get affected resources by stack bad request response has a 3xx status code
func (o *GetAffectedResourcesByStackBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get affected resources by stack bad request response has a 4xx status code
func (o *GetAffectedResourcesByStackBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get affected resources by stack bad request response has a 5xx status code
func (o *GetAffectedResourcesByStackBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get affected resources by stack bad request response a status code equal to that given
func (o *GetAffectedResourcesByStackBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get affected resources by stack bad request response
func (o *GetAffectedResourcesByStackBadRequest) Code() int {
	return 400
}

func (o *GetAffectedResourcesByStackBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackBadRequest %s", 400, payload)
}

func (o *GetAffectedResourcesByStackBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackBadRequest %s", 400, payload)
}

func (o *GetAffectedResourcesByStackBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAffectedResourcesByStackBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAffectedResourcesByStackNotFound creates a GetAffectedResourcesByStackNotFound with default headers values
func NewGetAffectedResourcesByStackNotFound() *GetAffectedResourcesByStackNotFound {
	return &GetAffectedResourcesByStackNotFound{}
}

/*
GetAffectedResourcesByStackNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAffectedResourcesByStackNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get affected resources by stack not found response has a 2xx status code
func (o *GetAffectedResourcesByStackNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get affected resources by stack not found response has a 3xx status code
func (o *GetAffectedResourcesByStackNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get affected resources by stack not found response has a 4xx status code
func (o *GetAffectedResourcesByStackNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get affected resources by stack not found response has a 5xx status code
func (o *GetAffectedResourcesByStackNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get affected resources by stack not found response a status code equal to that given
func (o *GetAffectedResourcesByStackNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get affected resources by stack not found response
func (o *GetAffectedResourcesByStackNotFound) Code() int {
	return 404
}

func (o *GetAffectedResourcesByStackNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackNotFound %s", 404, payload)
}

func (o *GetAffectedResourcesByStackNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackNotFound %s", 404, payload)
}

func (o *GetAffectedResourcesByStackNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAffectedResourcesByStackNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAffectedResourcesByStackMethodNotAllowed creates a GetAffectedResourcesByStackMethodNotAllowed with default headers values
func NewGetAffectedResourcesByStackMethodNotAllowed() *GetAffectedResourcesByStackMethodNotAllowed {
	return &GetAffectedResourcesByStackMethodNotAllowed{}
}

/*
GetAffectedResourcesByStackMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAffectedResourcesByStackMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get affected resources by stack method not allowed response has a 2xx status code
func (o *GetAffectedResourcesByStackMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get affected resources by stack method not allowed response has a 3xx status code
func (o *GetAffectedResourcesByStackMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get affected resources by stack method not allowed response has a 4xx status code
func (o *GetAffectedResourcesByStackMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get affected resources by stack method not allowed response has a 5xx status code
func (o *GetAffectedResourcesByStackMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get affected resources by stack method not allowed response a status code equal to that given
func (o *GetAffectedResourcesByStackMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get affected resources by stack method not allowed response
func (o *GetAffectedResourcesByStackMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAffectedResourcesByStackMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetAffectedResourcesByStackMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackMethodNotAllowed %s", 405, payload)
}

func (o *GetAffectedResourcesByStackMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAffectedResourcesByStackMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAffectedResourcesByStackInternalServerError creates a GetAffectedResourcesByStackInternalServerError with default headers values
func NewGetAffectedResourcesByStackInternalServerError() *GetAffectedResourcesByStackInternalServerError {
	return &GetAffectedResourcesByStackInternalServerError{}
}

/*
GetAffectedResourcesByStackInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAffectedResourcesByStackInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get affected resources by stack internal server error response has a 2xx status code
func (o *GetAffectedResourcesByStackInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get affected resources by stack internal server error response has a 3xx status code
func (o *GetAffectedResourcesByStackInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get affected resources by stack internal server error response has a 4xx status code
func (o *GetAffectedResourcesByStackInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get affected resources by stack internal server error response has a 5xx status code
func (o *GetAffectedResourcesByStackInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get affected resources by stack internal server error response a status code equal to that given
func (o *GetAffectedResourcesByStackInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get affected resources by stack internal server error response
func (o *GetAffectedResourcesByStackInternalServerError) Code() int {
	return 500
}

func (o *GetAffectedResourcesByStackInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackInternalServerError %s", 500, payload)
}

func (o *GetAffectedResourcesByStackInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/stack/{stackName}/affected-resources][%d] getAffectedResourcesByStackInternalServerError %s", 500, payload)
}

func (o *GetAffectedResourcesByStackInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAffectedResourcesByStackInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
