// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetLaunchDAGUsingGETReader is a Reader for the GetLaunchDAGUsingGET structure.
type GetLaunchDAGUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLaunchDAGUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLaunchDAGUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLaunchDAGUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLaunchDAGUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLaunchDAGUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag] getLaunchDAGUsingGET", response, response.Code())
	}
}

// NewGetLaunchDAGUsingGETOK creates a GetLaunchDAGUsingGETOK with default headers values
func NewGetLaunchDAGUsingGETOK() *GetLaunchDAGUsingGETOK {
	return &GetLaunchDAGUsingGETOK{}
}

/*
GetLaunchDAGUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetLaunchDAGUsingGETOK struct {
	Payload []*models.BlueprintFile
}

// IsSuccess returns true when this get launch d a g using g e t o k response has a 2xx status code
func (o *GetLaunchDAGUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get launch d a g using g e t o k response has a 3xx status code
func (o *GetLaunchDAGUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g using g e t o k response has a 4xx status code
func (o *GetLaunchDAGUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get launch d a g using g e t o k response has a 5xx status code
func (o *GetLaunchDAGUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g using g e t o k response a status code equal to that given
func (o *GetLaunchDAGUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get launch d a g using g e t o k response
func (o *GetLaunchDAGUsingGETOK) Code() int {
	return 200
}

func (o *GetLaunchDAGUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETOK %s", 200, payload)
}

func (o *GetLaunchDAGUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETOK %s", 200, payload)
}

func (o *GetLaunchDAGUsingGETOK) GetPayload() []*models.BlueprintFile {
	return o.Payload
}

func (o *GetLaunchDAGUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLaunchDAGUsingGETUnauthorized creates a GetLaunchDAGUsingGETUnauthorized with default headers values
func NewGetLaunchDAGUsingGETUnauthorized() *GetLaunchDAGUsingGETUnauthorized {
	return &GetLaunchDAGUsingGETUnauthorized{}
}

/*
GetLaunchDAGUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetLaunchDAGUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get launch d a g using g e t unauthorized response has a 2xx status code
func (o *GetLaunchDAGUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get launch d a g using g e t unauthorized response has a 3xx status code
func (o *GetLaunchDAGUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g using g e t unauthorized response has a 4xx status code
func (o *GetLaunchDAGUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get launch d a g using g e t unauthorized response has a 5xx status code
func (o *GetLaunchDAGUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g using g e t unauthorized response a status code equal to that given
func (o *GetLaunchDAGUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get launch d a g using g e t unauthorized response
func (o *GetLaunchDAGUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetLaunchDAGUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETUnauthorized", 401)
}

func (o *GetLaunchDAGUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETUnauthorized", 401)
}

func (o *GetLaunchDAGUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLaunchDAGUsingGETForbidden creates a GetLaunchDAGUsingGETForbidden with default headers values
func NewGetLaunchDAGUsingGETForbidden() *GetLaunchDAGUsingGETForbidden {
	return &GetLaunchDAGUsingGETForbidden{}
}

/*
GetLaunchDAGUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetLaunchDAGUsingGETForbidden struct {
}

// IsSuccess returns true when this get launch d a g using g e t forbidden response has a 2xx status code
func (o *GetLaunchDAGUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get launch d a g using g e t forbidden response has a 3xx status code
func (o *GetLaunchDAGUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g using g e t forbidden response has a 4xx status code
func (o *GetLaunchDAGUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get launch d a g using g e t forbidden response has a 5xx status code
func (o *GetLaunchDAGUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g using g e t forbidden response a status code equal to that given
func (o *GetLaunchDAGUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get launch d a g using g e t forbidden response
func (o *GetLaunchDAGUsingGETForbidden) Code() int {
	return 403
}

func (o *GetLaunchDAGUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETForbidden", 403)
}

func (o *GetLaunchDAGUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETForbidden", 403)
}

func (o *GetLaunchDAGUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLaunchDAGUsingGETNotFound creates a GetLaunchDAGUsingGETNotFound with default headers values
func NewGetLaunchDAGUsingGETNotFound() *GetLaunchDAGUsingGETNotFound {
	return &GetLaunchDAGUsingGETNotFound{}
}

/*
GetLaunchDAGUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLaunchDAGUsingGETNotFound struct {
}

// IsSuccess returns true when this get launch d a g using g e t not found response has a 2xx status code
func (o *GetLaunchDAGUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get launch d a g using g e t not found response has a 3xx status code
func (o *GetLaunchDAGUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get launch d a g using g e t not found response has a 4xx status code
func (o *GetLaunchDAGUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get launch d a g using g e t not found response has a 5xx status code
func (o *GetLaunchDAGUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get launch d a g using g e t not found response a status code equal to that given
func (o *GetLaunchDAGUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get launch d a g using g e t not found response
func (o *GetLaunchDAGUsingGETNotFound) Code() int {
	return 404
}

func (o *GetLaunchDAGUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETNotFound", 404)
}

func (o *GetLaunchDAGUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{clusterId}/cloud/{cloud}/launch-dag][%d] getLaunchDAGUsingGETNotFound", 404)
}

func (o *GetLaunchDAGUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
