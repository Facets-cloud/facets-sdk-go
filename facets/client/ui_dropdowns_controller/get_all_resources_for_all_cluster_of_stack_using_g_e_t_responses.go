// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllResourcesForAllClusterOfStackUsingGETReader is a Reader for the GetAllResourcesForAllClusterOfStackUsingGET structure.
type GetAllResourcesForAllClusterOfStackUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllResourcesForAllClusterOfStackUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllResourcesForAllClusterOfStackUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllResourcesForAllClusterOfStackUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllResourcesForAllClusterOfStackUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllResourcesForAllClusterOfStackUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources] getAllResourcesForAllClusterOfStackUsingGET", response, response.Code())
	}
}

// NewGetAllResourcesForAllClusterOfStackUsingGETOK creates a GetAllResourcesForAllClusterOfStackUsingGETOK with default headers values
func NewGetAllResourcesForAllClusterOfStackUsingGETOK() *GetAllResourcesForAllClusterOfStackUsingGETOK {
	return &GetAllResourcesForAllClusterOfStackUsingGETOK{}
}

/*
GetAllResourcesForAllClusterOfStackUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllResourcesForAllClusterOfStackUsingGETOK struct {
	Payload []*models.ClusterResourcesResponse
}

// IsSuccess returns true when this get all resources for all cluster of stack using g e t o k response has a 2xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all resources for all cluster of stack using g e t o k response has a 3xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources for all cluster of stack using g e t o k response has a 4xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources for all cluster of stack using g e t o k response has a 5xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources for all cluster of stack using g e t o k response a status code equal to that given
func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all resources for all cluster of stack using g e t o k response
func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) Code() int {
	return 200
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETOK %s", 200, payload)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) GetPayload() []*models.ClusterResourcesResponse {
	return o.Payload
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesForAllClusterOfStackUsingGETUnauthorized creates a GetAllResourcesForAllClusterOfStackUsingGETUnauthorized with default headers values
func NewGetAllResourcesForAllClusterOfStackUsingGETUnauthorized() *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized {
	return &GetAllResourcesForAllClusterOfStackUsingGETUnauthorized{}
}

/*
GetAllResourcesForAllClusterOfStackUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllResourcesForAllClusterOfStackUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all resources for all cluster of stack using g e t unauthorized response has a 2xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources for all cluster of stack using g e t unauthorized response has a 3xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources for all cluster of stack using g e t unauthorized response has a 4xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources for all cluster of stack using g e t unauthorized response has a 5xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources for all cluster of stack using g e t unauthorized response a status code equal to that given
func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all resources for all cluster of stack using g e t unauthorized response
func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETUnauthorized", 401)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesForAllClusterOfStackUsingGETForbidden creates a GetAllResourcesForAllClusterOfStackUsingGETForbidden with default headers values
func NewGetAllResourcesForAllClusterOfStackUsingGETForbidden() *GetAllResourcesForAllClusterOfStackUsingGETForbidden {
	return &GetAllResourcesForAllClusterOfStackUsingGETForbidden{}
}

/*
GetAllResourcesForAllClusterOfStackUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllResourcesForAllClusterOfStackUsingGETForbidden struct {
}

// IsSuccess returns true when this get all resources for all cluster of stack using g e t forbidden response has a 2xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources for all cluster of stack using g e t forbidden response has a 3xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources for all cluster of stack using g e t forbidden response has a 4xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources for all cluster of stack using g e t forbidden response has a 5xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources for all cluster of stack using g e t forbidden response a status code equal to that given
func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all resources for all cluster of stack using g e t forbidden response
func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETForbidden", 403)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETForbidden", 403)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllResourcesForAllClusterOfStackUsingGETNotFound creates a GetAllResourcesForAllClusterOfStackUsingGETNotFound with default headers values
func NewGetAllResourcesForAllClusterOfStackUsingGETNotFound() *GetAllResourcesForAllClusterOfStackUsingGETNotFound {
	return &GetAllResourcesForAllClusterOfStackUsingGETNotFound{}
}

/*
GetAllResourcesForAllClusterOfStackUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllResourcesForAllClusterOfStackUsingGETNotFound struct {
}

// IsSuccess returns true when this get all resources for all cluster of stack using g e t not found response has a 2xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources for all cluster of stack using g e t not found response has a 3xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources for all cluster of stack using g e t not found response has a 4xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources for all cluster of stack using g e t not found response has a 5xx status code
func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources for all cluster of stack using g e t not found response a status code equal to that given
func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all resources for all cluster of stack using g e t not found response
func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETNotFound", 404)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/stack/{stackName}/all-cluster-resources][%d] getAllResourcesForAllClusterOfStackUsingGETNotFound", 404)
}

func (o *GetAllResourcesForAllClusterOfStackUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
