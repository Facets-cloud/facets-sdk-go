// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceHistoriesByStackUsingGETReader is a Reader for the GetResourceHistoriesByStackUsingGET structure.
type GetResourceHistoriesByStackUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceHistoriesByStackUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceHistoriesByStackUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetResourceHistoriesByStackUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetResourceHistoriesByStackUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceHistoriesByStackUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history] getResourceHistoriesByStackUsingGET", response, response.Code())
	}
}

// NewGetResourceHistoriesByStackUsingGETOK creates a GetResourceHistoriesByStackUsingGETOK with default headers values
func NewGetResourceHistoriesByStackUsingGETOK() *GetResourceHistoriesByStackUsingGETOK {
	return &GetResourceHistoriesByStackUsingGETOK{}
}

/*
GetResourceHistoriesByStackUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceHistoriesByStackUsingGETOK struct {
	Payload []*models.ResourceHistory
}

// IsSuccess returns true when this get resource histories by stack using g e t o k response has a 2xx status code
func (o *GetResourceHistoriesByStackUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource histories by stack using g e t o k response has a 3xx status code
func (o *GetResourceHistoriesByStackUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack using g e t o k response has a 4xx status code
func (o *GetResourceHistoriesByStackUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource histories by stack using g e t o k response has a 5xx status code
func (o *GetResourceHistoriesByStackUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack using g e t o k response a status code equal to that given
func (o *GetResourceHistoriesByStackUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource histories by stack using g e t o k response
func (o *GetResourceHistoriesByStackUsingGETOK) Code() int {
	return 200
}

func (o *GetResourceHistoriesByStackUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETOK %s", 200, payload)
}

func (o *GetResourceHistoriesByStackUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETOK %s", 200, payload)
}

func (o *GetResourceHistoriesByStackUsingGETOK) GetPayload() []*models.ResourceHistory {
	return o.Payload
}

func (o *GetResourceHistoriesByStackUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceHistoriesByStackUsingGETUnauthorized creates a GetResourceHistoriesByStackUsingGETUnauthorized with default headers values
func NewGetResourceHistoriesByStackUsingGETUnauthorized() *GetResourceHistoriesByStackUsingGETUnauthorized {
	return &GetResourceHistoriesByStackUsingGETUnauthorized{}
}

/*
GetResourceHistoriesByStackUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetResourceHistoriesByStackUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get resource histories by stack using g e t unauthorized response has a 2xx status code
func (o *GetResourceHistoriesByStackUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource histories by stack using g e t unauthorized response has a 3xx status code
func (o *GetResourceHistoriesByStackUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack using g e t unauthorized response has a 4xx status code
func (o *GetResourceHistoriesByStackUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource histories by stack using g e t unauthorized response has a 5xx status code
func (o *GetResourceHistoriesByStackUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack using g e t unauthorized response a status code equal to that given
func (o *GetResourceHistoriesByStackUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get resource histories by stack using g e t unauthorized response
func (o *GetResourceHistoriesByStackUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetResourceHistoriesByStackUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETUnauthorized", 401)
}

func (o *GetResourceHistoriesByStackUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETUnauthorized", 401)
}

func (o *GetResourceHistoriesByStackUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceHistoriesByStackUsingGETForbidden creates a GetResourceHistoriesByStackUsingGETForbidden with default headers values
func NewGetResourceHistoriesByStackUsingGETForbidden() *GetResourceHistoriesByStackUsingGETForbidden {
	return &GetResourceHistoriesByStackUsingGETForbidden{}
}

/*
GetResourceHistoriesByStackUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetResourceHistoriesByStackUsingGETForbidden struct {
}

// IsSuccess returns true when this get resource histories by stack using g e t forbidden response has a 2xx status code
func (o *GetResourceHistoriesByStackUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource histories by stack using g e t forbidden response has a 3xx status code
func (o *GetResourceHistoriesByStackUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack using g e t forbidden response has a 4xx status code
func (o *GetResourceHistoriesByStackUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource histories by stack using g e t forbidden response has a 5xx status code
func (o *GetResourceHistoriesByStackUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack using g e t forbidden response a status code equal to that given
func (o *GetResourceHistoriesByStackUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get resource histories by stack using g e t forbidden response
func (o *GetResourceHistoriesByStackUsingGETForbidden) Code() int {
	return 403
}

func (o *GetResourceHistoriesByStackUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETForbidden", 403)
}

func (o *GetResourceHistoriesByStackUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETForbidden", 403)
}

func (o *GetResourceHistoriesByStackUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetResourceHistoriesByStackUsingGETNotFound creates a GetResourceHistoriesByStackUsingGETNotFound with default headers values
func NewGetResourceHistoriesByStackUsingGETNotFound() *GetResourceHistoriesByStackUsingGETNotFound {
	return &GetResourceHistoriesByStackUsingGETNotFound{}
}

/*
GetResourceHistoriesByStackUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceHistoriesByStackUsingGETNotFound struct {
}

// IsSuccess returns true when this get resource histories by stack using g e t not found response has a 2xx status code
func (o *GetResourceHistoriesByStackUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource histories by stack using g e t not found response has a 3xx status code
func (o *GetResourceHistoriesByStackUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource histories by stack using g e t not found response has a 4xx status code
func (o *GetResourceHistoriesByStackUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource histories by stack using g e t not found response has a 5xx status code
func (o *GetResourceHistoriesByStackUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource histories by stack using g e t not found response a status code equal to that given
func (o *GetResourceHistoriesByStackUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource histories by stack using g e t not found response
func (o *GetResourceHistoriesByStackUsingGETNotFound) Code() int {
	return 404
}

func (o *GetResourceHistoriesByStackUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETNotFound", 404)
}

func (o *GetResourceHistoriesByStackUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{stackName}/resourceType/{resourceType}/resourceName/{resourceName}/resource-history][%d] getResourceHistoriesByStackUsingGETNotFound", 404)
}

func (o *GetResourceHistoriesByStackUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
