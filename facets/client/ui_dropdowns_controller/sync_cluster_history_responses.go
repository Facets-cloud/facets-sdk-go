// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SyncClusterHistoryReader is a Reader for the SyncClusterHistory structure.
type SyncClusterHistoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SyncClusterHistoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSyncClusterHistoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSyncClusterHistoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSyncClusterHistoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSyncClusterHistoryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSyncClusterHistoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}] syncClusterHistory", response, response.Code())
	}
}

// NewSyncClusterHistoryOK creates a SyncClusterHistoryOK with default headers values
func NewSyncClusterHistoryOK() *SyncClusterHistoryOK {
	return &SyncClusterHistoryOK{}
}

/*
SyncClusterHistoryOK describes a response with status code 200, with default header values.

OK
*/
type SyncClusterHistoryOK struct {
}

// IsSuccess returns true when this sync cluster history o k response has a 2xx status code
func (o *SyncClusterHistoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sync cluster history o k response has a 3xx status code
func (o *SyncClusterHistoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cluster history o k response has a 4xx status code
func (o *SyncClusterHistoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync cluster history o k response has a 5xx status code
func (o *SyncClusterHistoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cluster history o k response a status code equal to that given
func (o *SyncClusterHistoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sync cluster history o k response
func (o *SyncClusterHistoryOK) Code() int {
	return 200
}

func (o *SyncClusterHistoryOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryOK", 200)
}

func (o *SyncClusterHistoryOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryOK", 200)
}

func (o *SyncClusterHistoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSyncClusterHistoryBadRequest creates a SyncClusterHistoryBadRequest with default headers values
func NewSyncClusterHistoryBadRequest() *SyncClusterHistoryBadRequest {
	return &SyncClusterHistoryBadRequest{}
}

/*
SyncClusterHistoryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SyncClusterHistoryBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync cluster history bad request response has a 2xx status code
func (o *SyncClusterHistoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync cluster history bad request response has a 3xx status code
func (o *SyncClusterHistoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cluster history bad request response has a 4xx status code
func (o *SyncClusterHistoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync cluster history bad request response has a 5xx status code
func (o *SyncClusterHistoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cluster history bad request response a status code equal to that given
func (o *SyncClusterHistoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the sync cluster history bad request response
func (o *SyncClusterHistoryBadRequest) Code() int {
	return 400
}

func (o *SyncClusterHistoryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryBadRequest %s", 400, payload)
}

func (o *SyncClusterHistoryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryBadRequest %s", 400, payload)
}

func (o *SyncClusterHistoryBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncClusterHistoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncClusterHistoryNotFound creates a SyncClusterHistoryNotFound with default headers values
func NewSyncClusterHistoryNotFound() *SyncClusterHistoryNotFound {
	return &SyncClusterHistoryNotFound{}
}

/*
SyncClusterHistoryNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SyncClusterHistoryNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync cluster history not found response has a 2xx status code
func (o *SyncClusterHistoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync cluster history not found response has a 3xx status code
func (o *SyncClusterHistoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cluster history not found response has a 4xx status code
func (o *SyncClusterHistoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync cluster history not found response has a 5xx status code
func (o *SyncClusterHistoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cluster history not found response a status code equal to that given
func (o *SyncClusterHistoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the sync cluster history not found response
func (o *SyncClusterHistoryNotFound) Code() int {
	return 404
}

func (o *SyncClusterHistoryNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryNotFound %s", 404, payload)
}

func (o *SyncClusterHistoryNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryNotFound %s", 404, payload)
}

func (o *SyncClusterHistoryNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncClusterHistoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncClusterHistoryMethodNotAllowed creates a SyncClusterHistoryMethodNotAllowed with default headers values
func NewSyncClusterHistoryMethodNotAllowed() *SyncClusterHistoryMethodNotAllowed {
	return &SyncClusterHistoryMethodNotAllowed{}
}

/*
SyncClusterHistoryMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SyncClusterHistoryMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync cluster history method not allowed response has a 2xx status code
func (o *SyncClusterHistoryMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync cluster history method not allowed response has a 3xx status code
func (o *SyncClusterHistoryMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cluster history method not allowed response has a 4xx status code
func (o *SyncClusterHistoryMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this sync cluster history method not allowed response has a 5xx status code
func (o *SyncClusterHistoryMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this sync cluster history method not allowed response a status code equal to that given
func (o *SyncClusterHistoryMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the sync cluster history method not allowed response
func (o *SyncClusterHistoryMethodNotAllowed) Code() int {
	return 405
}

func (o *SyncClusterHistoryMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryMethodNotAllowed %s", 405, payload)
}

func (o *SyncClusterHistoryMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryMethodNotAllowed %s", 405, payload)
}

func (o *SyncClusterHistoryMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncClusterHistoryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSyncClusterHistoryInternalServerError creates a SyncClusterHistoryInternalServerError with default headers values
func NewSyncClusterHistoryInternalServerError() *SyncClusterHistoryInternalServerError {
	return &SyncClusterHistoryInternalServerError{}
}

/*
SyncClusterHistoryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SyncClusterHistoryInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this sync cluster history internal server error response has a 2xx status code
func (o *SyncClusterHistoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sync cluster history internal server error response has a 3xx status code
func (o *SyncClusterHistoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sync cluster history internal server error response has a 4xx status code
func (o *SyncClusterHistoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this sync cluster history internal server error response has a 5xx status code
func (o *SyncClusterHistoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this sync cluster history internal server error response a status code equal to that given
func (o *SyncClusterHistoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the sync cluster history internal server error response
func (o *SyncClusterHistoryInternalServerError) Code() int {
	return 500
}

func (o *SyncClusterHistoryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryInternalServerError %s", 500, payload)
}

func (o *SyncClusterHistoryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/dropdown/logs/cluster/{clusterId}][%d] syncClusterHistoryInternalServerError %s", 500, payload)
}

func (o *SyncClusterHistoryInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SyncClusterHistoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
