// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllPermissionsReader is a Reader for the GetAllPermissions structure.
type GetAllPermissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllPermissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllPermissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllPermissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllPermissionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllPermissionsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllPermissionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/getAllPermissions] getAllPermissions", response, response.Code())
	}
}

// NewGetAllPermissionsOK creates a GetAllPermissionsOK with default headers values
func NewGetAllPermissionsOK() *GetAllPermissionsOK {
	return &GetAllPermissionsOK{}
}

/*
GetAllPermissionsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllPermissionsOK struct {
	Payload []string
}

// IsSuccess returns true when this get all permissions o k response has a 2xx status code
func (o *GetAllPermissionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all permissions o k response has a 3xx status code
func (o *GetAllPermissionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all permissions o k response has a 4xx status code
func (o *GetAllPermissionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all permissions o k response has a 5xx status code
func (o *GetAllPermissionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all permissions o k response a status code equal to that given
func (o *GetAllPermissionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all permissions o k response
func (o *GetAllPermissionsOK) Code() int {
	return 200
}

func (o *GetAllPermissionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsOK %s", 200, payload)
}

func (o *GetAllPermissionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsOK %s", 200, payload)
}

func (o *GetAllPermissionsOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAllPermissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsBadRequest creates a GetAllPermissionsBadRequest with default headers values
func NewGetAllPermissionsBadRequest() *GetAllPermissionsBadRequest {
	return &GetAllPermissionsBadRequest{}
}

/*
GetAllPermissionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllPermissionsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all permissions bad request response has a 2xx status code
func (o *GetAllPermissionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all permissions bad request response has a 3xx status code
func (o *GetAllPermissionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all permissions bad request response has a 4xx status code
func (o *GetAllPermissionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all permissions bad request response has a 5xx status code
func (o *GetAllPermissionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all permissions bad request response a status code equal to that given
func (o *GetAllPermissionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all permissions bad request response
func (o *GetAllPermissionsBadRequest) Code() int {
	return 400
}

func (o *GetAllPermissionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsBadRequest %s", 400, payload)
}

func (o *GetAllPermissionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsBadRequest %s", 400, payload)
}

func (o *GetAllPermissionsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPermissionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsNotFound creates a GetAllPermissionsNotFound with default headers values
func NewGetAllPermissionsNotFound() *GetAllPermissionsNotFound {
	return &GetAllPermissionsNotFound{}
}

/*
GetAllPermissionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllPermissionsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all permissions not found response has a 2xx status code
func (o *GetAllPermissionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all permissions not found response has a 3xx status code
func (o *GetAllPermissionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all permissions not found response has a 4xx status code
func (o *GetAllPermissionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all permissions not found response has a 5xx status code
func (o *GetAllPermissionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all permissions not found response a status code equal to that given
func (o *GetAllPermissionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all permissions not found response
func (o *GetAllPermissionsNotFound) Code() int {
	return 404
}

func (o *GetAllPermissionsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsNotFound %s", 404, payload)
}

func (o *GetAllPermissionsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsNotFound %s", 404, payload)
}

func (o *GetAllPermissionsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPermissionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsMethodNotAllowed creates a GetAllPermissionsMethodNotAllowed with default headers values
func NewGetAllPermissionsMethodNotAllowed() *GetAllPermissionsMethodNotAllowed {
	return &GetAllPermissionsMethodNotAllowed{}
}

/*
GetAllPermissionsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllPermissionsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all permissions method not allowed response has a 2xx status code
func (o *GetAllPermissionsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all permissions method not allowed response has a 3xx status code
func (o *GetAllPermissionsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all permissions method not allowed response has a 4xx status code
func (o *GetAllPermissionsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all permissions method not allowed response has a 5xx status code
func (o *GetAllPermissionsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all permissions method not allowed response a status code equal to that given
func (o *GetAllPermissionsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all permissions method not allowed response
func (o *GetAllPermissionsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllPermissionsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllPermissionsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllPermissionsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPermissionsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllPermissionsInternalServerError creates a GetAllPermissionsInternalServerError with default headers values
func NewGetAllPermissionsInternalServerError() *GetAllPermissionsInternalServerError {
	return &GetAllPermissionsInternalServerError{}
}

/*
GetAllPermissionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllPermissionsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all permissions internal server error response has a 2xx status code
func (o *GetAllPermissionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all permissions internal server error response has a 3xx status code
func (o *GetAllPermissionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all permissions internal server error response has a 4xx status code
func (o *GetAllPermissionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all permissions internal server error response has a 5xx status code
func (o *GetAllPermissionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all permissions internal server error response a status code equal to that given
func (o *GetAllPermissionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all permissions internal server error response
func (o *GetAllPermissionsInternalServerError) Code() int {
	return 500
}

func (o *GetAllPermissionsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsInternalServerError %s", 500, payload)
}

func (o *GetAllPermissionsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/getAllPermissions][%d] getAllPermissionsInternalServerError %s", 500, payload)
}

func (o *GetAllPermissionsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllPermissionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
