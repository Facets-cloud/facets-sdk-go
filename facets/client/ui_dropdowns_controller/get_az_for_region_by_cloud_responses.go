// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAzForRegionByCloudReader is a Reader for the GetAzForRegionByCloud structure.
type GetAzForRegionByCloudReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAzForRegionByCloudReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAzForRegionByCloudOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAzForRegionByCloudBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAzForRegionByCloudNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAzForRegionByCloudMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAzForRegionByCloudInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones] getAzForRegionByCloud", response, response.Code())
	}
}

// NewGetAzForRegionByCloudOK creates a GetAzForRegionByCloudOK with default headers values
func NewGetAzForRegionByCloudOK() *GetAzForRegionByCloudOK {
	return &GetAzForRegionByCloudOK{}
}

/*
GetAzForRegionByCloudOK describes a response with status code 200, with default header values.

OK
*/
type GetAzForRegionByCloudOK struct {
	Payload []string
}

// IsSuccess returns true when this get az for region by cloud o k response has a 2xx status code
func (o *GetAzForRegionByCloudOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get az for region by cloud o k response has a 3xx status code
func (o *GetAzForRegionByCloudOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get az for region by cloud o k response has a 4xx status code
func (o *GetAzForRegionByCloudOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get az for region by cloud o k response has a 5xx status code
func (o *GetAzForRegionByCloudOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get az for region by cloud o k response a status code equal to that given
func (o *GetAzForRegionByCloudOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get az for region by cloud o k response
func (o *GetAzForRegionByCloudOK) Code() int {
	return 200
}

func (o *GetAzForRegionByCloudOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudOK %s", 200, payload)
}

func (o *GetAzForRegionByCloudOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudOK %s", 200, payload)
}

func (o *GetAzForRegionByCloudOK) GetPayload() []string {
	return o.Payload
}

func (o *GetAzForRegionByCloudOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzForRegionByCloudBadRequest creates a GetAzForRegionByCloudBadRequest with default headers values
func NewGetAzForRegionByCloudBadRequest() *GetAzForRegionByCloudBadRequest {
	return &GetAzForRegionByCloudBadRequest{}
}

/*
GetAzForRegionByCloudBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAzForRegionByCloudBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get az for region by cloud bad request response has a 2xx status code
func (o *GetAzForRegionByCloudBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get az for region by cloud bad request response has a 3xx status code
func (o *GetAzForRegionByCloudBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get az for region by cloud bad request response has a 4xx status code
func (o *GetAzForRegionByCloudBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get az for region by cloud bad request response has a 5xx status code
func (o *GetAzForRegionByCloudBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get az for region by cloud bad request response a status code equal to that given
func (o *GetAzForRegionByCloudBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get az for region by cloud bad request response
func (o *GetAzForRegionByCloudBadRequest) Code() int {
	return 400
}

func (o *GetAzForRegionByCloudBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudBadRequest %s", 400, payload)
}

func (o *GetAzForRegionByCloudBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudBadRequest %s", 400, payload)
}

func (o *GetAzForRegionByCloudBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAzForRegionByCloudBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzForRegionByCloudNotFound creates a GetAzForRegionByCloudNotFound with default headers values
func NewGetAzForRegionByCloudNotFound() *GetAzForRegionByCloudNotFound {
	return &GetAzForRegionByCloudNotFound{}
}

/*
GetAzForRegionByCloudNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAzForRegionByCloudNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get az for region by cloud not found response has a 2xx status code
func (o *GetAzForRegionByCloudNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get az for region by cloud not found response has a 3xx status code
func (o *GetAzForRegionByCloudNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get az for region by cloud not found response has a 4xx status code
func (o *GetAzForRegionByCloudNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get az for region by cloud not found response has a 5xx status code
func (o *GetAzForRegionByCloudNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get az for region by cloud not found response a status code equal to that given
func (o *GetAzForRegionByCloudNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get az for region by cloud not found response
func (o *GetAzForRegionByCloudNotFound) Code() int {
	return 404
}

func (o *GetAzForRegionByCloudNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudNotFound %s", 404, payload)
}

func (o *GetAzForRegionByCloudNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudNotFound %s", 404, payload)
}

func (o *GetAzForRegionByCloudNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAzForRegionByCloudNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzForRegionByCloudMethodNotAllowed creates a GetAzForRegionByCloudMethodNotAllowed with default headers values
func NewGetAzForRegionByCloudMethodNotAllowed() *GetAzForRegionByCloudMethodNotAllowed {
	return &GetAzForRegionByCloudMethodNotAllowed{}
}

/*
GetAzForRegionByCloudMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAzForRegionByCloudMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get az for region by cloud method not allowed response has a 2xx status code
func (o *GetAzForRegionByCloudMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get az for region by cloud method not allowed response has a 3xx status code
func (o *GetAzForRegionByCloudMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get az for region by cloud method not allowed response has a 4xx status code
func (o *GetAzForRegionByCloudMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get az for region by cloud method not allowed response has a 5xx status code
func (o *GetAzForRegionByCloudMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get az for region by cloud method not allowed response a status code equal to that given
func (o *GetAzForRegionByCloudMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get az for region by cloud method not allowed response
func (o *GetAzForRegionByCloudMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAzForRegionByCloudMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudMethodNotAllowed %s", 405, payload)
}

func (o *GetAzForRegionByCloudMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudMethodNotAllowed %s", 405, payload)
}

func (o *GetAzForRegionByCloudMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAzForRegionByCloudMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAzForRegionByCloudInternalServerError creates a GetAzForRegionByCloudInternalServerError with default headers values
func NewGetAzForRegionByCloudInternalServerError() *GetAzForRegionByCloudInternalServerError {
	return &GetAzForRegionByCloudInternalServerError{}
}

/*
GetAzForRegionByCloudInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAzForRegionByCloudInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get az for region by cloud internal server error response has a 2xx status code
func (o *GetAzForRegionByCloudInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get az for region by cloud internal server error response has a 3xx status code
func (o *GetAzForRegionByCloudInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get az for region by cloud internal server error response has a 4xx status code
func (o *GetAzForRegionByCloudInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get az for region by cloud internal server error response has a 5xx status code
func (o *GetAzForRegionByCloudInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get az for region by cloud internal server error response a status code equal to that given
func (o *GetAzForRegionByCloudInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get az for region by cloud internal server error response
func (o *GetAzForRegionByCloudInternalServerError) Code() int {
	return 500
}

func (o *GetAzForRegionByCloudInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudInternalServerError %s", 500, payload)
}

func (o *GetAzForRegionByCloudInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/{cloud}/region/{region}/availability-zones][%d] getAzForRegionByCloudInternalServerError %s", 500, payload)
}

func (o *GetAzForRegionByCloudInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAzForRegionByCloudInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
