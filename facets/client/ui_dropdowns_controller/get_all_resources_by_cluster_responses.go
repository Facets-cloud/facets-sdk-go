// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllResourcesByClusterReader is a Reader for the GetAllResourcesByCluster structure.
type GetAllResourcesByClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllResourcesByClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllResourcesByClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllResourcesByClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllResourcesByClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllResourcesByClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllResourcesByClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info] getAllResourcesByCluster", response, response.Code())
	}
}

// NewGetAllResourcesByClusterOK creates a GetAllResourcesByClusterOK with default headers values
func NewGetAllResourcesByClusterOK() *GetAllResourcesByClusterOK {
	return &GetAllResourcesByClusterOK{}
}

/*
GetAllResourcesByClusterOK describes a response with status code 200, with default header values.

OK
*/
type GetAllResourcesByClusterOK struct {
	Payload []*models.BlueprintFile
}

// IsSuccess returns true when this get all resources by cluster o k response has a 2xx status code
func (o *GetAllResourcesByClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all resources by cluster o k response has a 3xx status code
func (o *GetAllResourcesByClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster o k response has a 4xx status code
func (o *GetAllResourcesByClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources by cluster o k response has a 5xx status code
func (o *GetAllResourcesByClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster o k response a status code equal to that given
func (o *GetAllResourcesByClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all resources by cluster o k response
func (o *GetAllResourcesByClusterOK) Code() int {
	return 200
}

func (o *GetAllResourcesByClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterOK %s", 200, payload)
}

func (o *GetAllResourcesByClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterOK %s", 200, payload)
}

func (o *GetAllResourcesByClusterOK) GetPayload() []*models.BlueprintFile {
	return o.Payload
}

func (o *GetAllResourcesByClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesByClusterBadRequest creates a GetAllResourcesByClusterBadRequest with default headers values
func NewGetAllResourcesByClusterBadRequest() *GetAllResourcesByClusterBadRequest {
	return &GetAllResourcesByClusterBadRequest{}
}

/*
GetAllResourcesByClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllResourcesByClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources by cluster bad request response has a 2xx status code
func (o *GetAllResourcesByClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by cluster bad request response has a 3xx status code
func (o *GetAllResourcesByClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster bad request response has a 4xx status code
func (o *GetAllResourcesByClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by cluster bad request response has a 5xx status code
func (o *GetAllResourcesByClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster bad request response a status code equal to that given
func (o *GetAllResourcesByClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all resources by cluster bad request response
func (o *GetAllResourcesByClusterBadRequest) Code() int {
	return 400
}

func (o *GetAllResourcesByClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterBadRequest %s", 400, payload)
}

func (o *GetAllResourcesByClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterBadRequest %s", 400, payload)
}

func (o *GetAllResourcesByClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesByClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesByClusterNotFound creates a GetAllResourcesByClusterNotFound with default headers values
func NewGetAllResourcesByClusterNotFound() *GetAllResourcesByClusterNotFound {
	return &GetAllResourcesByClusterNotFound{}
}

/*
GetAllResourcesByClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllResourcesByClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources by cluster not found response has a 2xx status code
func (o *GetAllResourcesByClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by cluster not found response has a 3xx status code
func (o *GetAllResourcesByClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster not found response has a 4xx status code
func (o *GetAllResourcesByClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by cluster not found response has a 5xx status code
func (o *GetAllResourcesByClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster not found response a status code equal to that given
func (o *GetAllResourcesByClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all resources by cluster not found response
func (o *GetAllResourcesByClusterNotFound) Code() int {
	return 404
}

func (o *GetAllResourcesByClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterNotFound %s", 404, payload)
}

func (o *GetAllResourcesByClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterNotFound %s", 404, payload)
}

func (o *GetAllResourcesByClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesByClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesByClusterMethodNotAllowed creates a GetAllResourcesByClusterMethodNotAllowed with default headers values
func NewGetAllResourcesByClusterMethodNotAllowed() *GetAllResourcesByClusterMethodNotAllowed {
	return &GetAllResourcesByClusterMethodNotAllowed{}
}

/*
GetAllResourcesByClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllResourcesByClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources by cluster method not allowed response has a 2xx status code
func (o *GetAllResourcesByClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by cluster method not allowed response has a 3xx status code
func (o *GetAllResourcesByClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster method not allowed response has a 4xx status code
func (o *GetAllResourcesByClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all resources by cluster method not allowed response has a 5xx status code
func (o *GetAllResourcesByClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all resources by cluster method not allowed response a status code equal to that given
func (o *GetAllResourcesByClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all resources by cluster method not allowed response
func (o *GetAllResourcesByClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllResourcesByClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterMethodNotAllowed %s", 405, payload)
}

func (o *GetAllResourcesByClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterMethodNotAllowed %s", 405, payload)
}

func (o *GetAllResourcesByClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesByClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllResourcesByClusterInternalServerError creates a GetAllResourcesByClusterInternalServerError with default headers values
func NewGetAllResourcesByClusterInternalServerError() *GetAllResourcesByClusterInternalServerError {
	return &GetAllResourcesByClusterInternalServerError{}
}

/*
GetAllResourcesByClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllResourcesByClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all resources by cluster internal server error response has a 2xx status code
func (o *GetAllResourcesByClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all resources by cluster internal server error response has a 3xx status code
func (o *GetAllResourcesByClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all resources by cluster internal server error response has a 4xx status code
func (o *GetAllResourcesByClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all resources by cluster internal server error response has a 5xx status code
func (o *GetAllResourcesByClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all resources by cluster internal server error response a status code equal to that given
func (o *GetAllResourcesByClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all resources by cluster internal server error response
func (o *GetAllResourcesByClusterInternalServerError) Code() int {
	return 500
}

func (o *GetAllResourcesByClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterInternalServerError %s", 500, payload)
}

func (o *GetAllResourcesByClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/resources-info][%d] getAllResourcesByClusterInternalServerError %s", 500, payload)
}

func (o *GetAllResourcesByClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllResourcesByClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
