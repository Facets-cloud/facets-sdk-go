// Code generated by go-swagger; DO NOT EDIT.

package ui_dropdowns_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetResourceByClusterIDReader is a Reader for the GetResourceByClusterID structure.
type GetResourceByClusterIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetResourceByClusterIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetResourceByClusterIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetResourceByClusterIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetResourceByClusterIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetResourceByClusterIDMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetResourceByClusterIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info] getResourceByClusterId", response, response.Code())
	}
}

// NewGetResourceByClusterIDOK creates a GetResourceByClusterIDOK with default headers values
func NewGetResourceByClusterIDOK() *GetResourceByClusterIDOK {
	return &GetResourceByClusterIDOK{}
}

/*
GetResourceByClusterIDOK describes a response with status code 200, with default header values.

OK
*/
type GetResourceByClusterIDOK struct {
	Payload *models.BlueprintFile
}

// IsSuccess returns true when this get resource by cluster Id o k response has a 2xx status code
func (o *GetResourceByClusterIDOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get resource by cluster Id o k response has a 3xx status code
func (o *GetResourceByClusterIDOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id o k response has a 4xx status code
func (o *GetResourceByClusterIDOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by cluster Id o k response has a 5xx status code
func (o *GetResourceByClusterIDOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id o k response a status code equal to that given
func (o *GetResourceByClusterIDOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get resource by cluster Id o k response
func (o *GetResourceByClusterIDOK) Code() int {
	return 200
}

func (o *GetResourceByClusterIDOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdOK %s", 200, payload)
}

func (o *GetResourceByClusterIDOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdOK %s", 200, payload)
}

func (o *GetResourceByClusterIDOK) GetPayload() *models.BlueprintFile {
	return o.Payload
}

func (o *GetResourceByClusterIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BlueprintFile)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByClusterIDBadRequest creates a GetResourceByClusterIDBadRequest with default headers values
func NewGetResourceByClusterIDBadRequest() *GetResourceByClusterIDBadRequest {
	return &GetResourceByClusterIDBadRequest{}
}

/*
GetResourceByClusterIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetResourceByClusterIDBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by cluster Id bad request response has a 2xx status code
func (o *GetResourceByClusterIDBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by cluster Id bad request response has a 3xx status code
func (o *GetResourceByClusterIDBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id bad request response has a 4xx status code
func (o *GetResourceByClusterIDBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by cluster Id bad request response has a 5xx status code
func (o *GetResourceByClusterIDBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id bad request response a status code equal to that given
func (o *GetResourceByClusterIDBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get resource by cluster Id bad request response
func (o *GetResourceByClusterIDBadRequest) Code() int {
	return 400
}

func (o *GetResourceByClusterIDBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdBadRequest %s", 400, payload)
}

func (o *GetResourceByClusterIDBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdBadRequest %s", 400, payload)
}

func (o *GetResourceByClusterIDBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByClusterIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByClusterIDNotFound creates a GetResourceByClusterIDNotFound with default headers values
func NewGetResourceByClusterIDNotFound() *GetResourceByClusterIDNotFound {
	return &GetResourceByClusterIDNotFound{}
}

/*
GetResourceByClusterIDNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetResourceByClusterIDNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by cluster Id not found response has a 2xx status code
func (o *GetResourceByClusterIDNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by cluster Id not found response has a 3xx status code
func (o *GetResourceByClusterIDNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id not found response has a 4xx status code
func (o *GetResourceByClusterIDNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by cluster Id not found response has a 5xx status code
func (o *GetResourceByClusterIDNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id not found response a status code equal to that given
func (o *GetResourceByClusterIDNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get resource by cluster Id not found response
func (o *GetResourceByClusterIDNotFound) Code() int {
	return 404
}

func (o *GetResourceByClusterIDNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdNotFound %s", 404, payload)
}

func (o *GetResourceByClusterIDNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdNotFound %s", 404, payload)
}

func (o *GetResourceByClusterIDNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByClusterIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByClusterIDMethodNotAllowed creates a GetResourceByClusterIDMethodNotAllowed with default headers values
func NewGetResourceByClusterIDMethodNotAllowed() *GetResourceByClusterIDMethodNotAllowed {
	return &GetResourceByClusterIDMethodNotAllowed{}
}

/*
GetResourceByClusterIDMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetResourceByClusterIDMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by cluster Id method not allowed response has a 2xx status code
func (o *GetResourceByClusterIDMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by cluster Id method not allowed response has a 3xx status code
func (o *GetResourceByClusterIDMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id method not allowed response has a 4xx status code
func (o *GetResourceByClusterIDMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get resource by cluster Id method not allowed response has a 5xx status code
func (o *GetResourceByClusterIDMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get resource by cluster Id method not allowed response a status code equal to that given
func (o *GetResourceByClusterIDMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get resource by cluster Id method not allowed response
func (o *GetResourceByClusterIDMethodNotAllowed) Code() int {
	return 405
}

func (o *GetResourceByClusterIDMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceByClusterIDMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdMethodNotAllowed %s", 405, payload)
}

func (o *GetResourceByClusterIDMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByClusterIDMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetResourceByClusterIDInternalServerError creates a GetResourceByClusterIDInternalServerError with default headers values
func NewGetResourceByClusterIDInternalServerError() *GetResourceByClusterIDInternalServerError {
	return &GetResourceByClusterIDInternalServerError{}
}

/*
GetResourceByClusterIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetResourceByClusterIDInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get resource by cluster Id internal server error response has a 2xx status code
func (o *GetResourceByClusterIDInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get resource by cluster Id internal server error response has a 3xx status code
func (o *GetResourceByClusterIDInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get resource by cluster Id internal server error response has a 4xx status code
func (o *GetResourceByClusterIDInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get resource by cluster Id internal server error response has a 5xx status code
func (o *GetResourceByClusterIDInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get resource by cluster Id internal server error response a status code equal to that given
func (o *GetResourceByClusterIDInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get resource by cluster Id internal server error response
func (o *GetResourceByClusterIDInternalServerError) Code() int {
	return 500
}

func (o *GetResourceByClusterIDInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdInternalServerError %s", 500, payload)
}

func (o *GetResourceByClusterIDInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/dropdown/cluster/{clusterId}/{resourceType}/{resourceName}/resource-info][%d] getResourceByClusterIdInternalServerError %s", 500, payload)
}

func (o *GetResourceByClusterIDInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetResourceByClusterIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
