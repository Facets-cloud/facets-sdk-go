// Code generated by go-swagger; DO NOT EDIT.

package capillary_cloud_callback_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DrResultCallbackUsingPOSTReader is a Reader for the DrResultCallbackUsingPOST structure.
type DrResultCallbackUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DrResultCallbackUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDrResultCallbackUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewDrResultCallbackUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDrResultCallbackUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDrResultCallbackUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDrResultCallbackUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}] drResultCallbackUsingPOST", response, response.Code())
	}
}

// NewDrResultCallbackUsingPOSTOK creates a DrResultCallbackUsingPOSTOK with default headers values
func NewDrResultCallbackUsingPOSTOK() *DrResultCallbackUsingPOSTOK {
	return &DrResultCallbackUsingPOSTOK{}
}

/*
DrResultCallbackUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type DrResultCallbackUsingPOSTOK struct {
	Payload bool
}

// IsSuccess returns true when this dr result callback using p o s t o k response has a 2xx status code
func (o *DrResultCallbackUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dr result callback using p o s t o k response has a 3xx status code
func (o *DrResultCallbackUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dr result callback using p o s t o k response has a 4xx status code
func (o *DrResultCallbackUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this dr result callback using p o s t o k response has a 5xx status code
func (o *DrResultCallbackUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this dr result callback using p o s t o k response a status code equal to that given
func (o *DrResultCallbackUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the dr result callback using p o s t o k response
func (o *DrResultCallbackUsingPOSTOK) Code() int {
	return 200
}

func (o *DrResultCallbackUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTOK %s", 200, payload)
}

func (o *DrResultCallbackUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTOK %s", 200, payload)
}

func (o *DrResultCallbackUsingPOSTOK) GetPayload() bool {
	return o.Payload
}

func (o *DrResultCallbackUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDrResultCallbackUsingPOSTCreated creates a DrResultCallbackUsingPOSTCreated with default headers values
func NewDrResultCallbackUsingPOSTCreated() *DrResultCallbackUsingPOSTCreated {
	return &DrResultCallbackUsingPOSTCreated{}
}

/*
DrResultCallbackUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type DrResultCallbackUsingPOSTCreated struct {
}

// IsSuccess returns true when this dr result callback using p o s t created response has a 2xx status code
func (o *DrResultCallbackUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this dr result callback using p o s t created response has a 3xx status code
func (o *DrResultCallbackUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dr result callback using p o s t created response has a 4xx status code
func (o *DrResultCallbackUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this dr result callback using p o s t created response has a 5xx status code
func (o *DrResultCallbackUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this dr result callback using p o s t created response a status code equal to that given
func (o *DrResultCallbackUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the dr result callback using p o s t created response
func (o *DrResultCallbackUsingPOSTCreated) Code() int {
	return 201
}

func (o *DrResultCallbackUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTCreated", 201)
}

func (o *DrResultCallbackUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTCreated", 201)
}

func (o *DrResultCallbackUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDrResultCallbackUsingPOSTUnauthorized creates a DrResultCallbackUsingPOSTUnauthorized with default headers values
func NewDrResultCallbackUsingPOSTUnauthorized() *DrResultCallbackUsingPOSTUnauthorized {
	return &DrResultCallbackUsingPOSTUnauthorized{}
}

/*
DrResultCallbackUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DrResultCallbackUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this dr result callback using p o s t unauthorized response has a 2xx status code
func (o *DrResultCallbackUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this dr result callback using p o s t unauthorized response has a 3xx status code
func (o *DrResultCallbackUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dr result callback using p o s t unauthorized response has a 4xx status code
func (o *DrResultCallbackUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this dr result callback using p o s t unauthorized response has a 5xx status code
func (o *DrResultCallbackUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this dr result callback using p o s t unauthorized response a status code equal to that given
func (o *DrResultCallbackUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the dr result callback using p o s t unauthorized response
func (o *DrResultCallbackUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *DrResultCallbackUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTUnauthorized", 401)
}

func (o *DrResultCallbackUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTUnauthorized", 401)
}

func (o *DrResultCallbackUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDrResultCallbackUsingPOSTForbidden creates a DrResultCallbackUsingPOSTForbidden with default headers values
func NewDrResultCallbackUsingPOSTForbidden() *DrResultCallbackUsingPOSTForbidden {
	return &DrResultCallbackUsingPOSTForbidden{}
}

/*
DrResultCallbackUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DrResultCallbackUsingPOSTForbidden struct {
}

// IsSuccess returns true when this dr result callback using p o s t forbidden response has a 2xx status code
func (o *DrResultCallbackUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this dr result callback using p o s t forbidden response has a 3xx status code
func (o *DrResultCallbackUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dr result callback using p o s t forbidden response has a 4xx status code
func (o *DrResultCallbackUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this dr result callback using p o s t forbidden response has a 5xx status code
func (o *DrResultCallbackUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this dr result callback using p o s t forbidden response a status code equal to that given
func (o *DrResultCallbackUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the dr result callback using p o s t forbidden response
func (o *DrResultCallbackUsingPOSTForbidden) Code() int {
	return 403
}

func (o *DrResultCallbackUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTForbidden", 403)
}

func (o *DrResultCallbackUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTForbidden", 403)
}

func (o *DrResultCallbackUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDrResultCallbackUsingPOSTNotFound creates a DrResultCallbackUsingPOSTNotFound with default headers values
func NewDrResultCallbackUsingPOSTNotFound() *DrResultCallbackUsingPOSTNotFound {
	return &DrResultCallbackUsingPOSTNotFound{}
}

/*
DrResultCallbackUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DrResultCallbackUsingPOSTNotFound struct {
}

// IsSuccess returns true when this dr result callback using p o s t not found response has a 2xx status code
func (o *DrResultCallbackUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this dr result callback using p o s t not found response has a 3xx status code
func (o *DrResultCallbackUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this dr result callback using p o s t not found response has a 4xx status code
func (o *DrResultCallbackUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this dr result callback using p o s t not found response has a 5xx status code
func (o *DrResultCallbackUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this dr result callback using p o s t not found response a status code equal to that given
func (o *DrResultCallbackUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the dr result callback using p o s t not found response
func (o *DrResultCallbackUsingPOSTNotFound) Code() int {
	return 404
}

func (o *DrResultCallbackUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTNotFound", 404)
}

func (o *DrResultCallbackUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/{cluster}/dr/{moduleType}/{instanceName}][%d] drResultCallbackUsingPOSTNotFound", 404)
}

func (o *DrResultCallbackUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
