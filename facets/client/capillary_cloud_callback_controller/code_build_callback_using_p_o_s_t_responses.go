// Code generated by go-swagger; DO NOT EDIT.

package capillary_cloud_callback_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// CodeBuildCallbackUsingPOSTReader is a Reader for the CodeBuildCallbackUsingPOST structure.
type CodeBuildCallbackUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CodeBuildCallbackUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCodeBuildCallbackUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCodeBuildCallbackUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCodeBuildCallbackUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCodeBuildCallbackUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCodeBuildCallbackUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc/v1/callbacks/codebuild] codeBuildCallbackUsingPOST", response, response.Code())
	}
}

// NewCodeBuildCallbackUsingPOSTOK creates a CodeBuildCallbackUsingPOSTOK with default headers values
func NewCodeBuildCallbackUsingPOSTOK() *CodeBuildCallbackUsingPOSTOK {
	return &CodeBuildCallbackUsingPOSTOK{}
}

/*
CodeBuildCallbackUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CodeBuildCallbackUsingPOSTOK struct {
	Payload bool
}

// IsSuccess returns true when this code build callback using p o s t o k response has a 2xx status code
func (o *CodeBuildCallbackUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this code build callback using p o s t o k response has a 3xx status code
func (o *CodeBuildCallbackUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this code build callback using p o s t o k response has a 4xx status code
func (o *CodeBuildCallbackUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this code build callback using p o s t o k response has a 5xx status code
func (o *CodeBuildCallbackUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this code build callback using p o s t o k response a status code equal to that given
func (o *CodeBuildCallbackUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the code build callback using p o s t o k response
func (o *CodeBuildCallbackUsingPOSTOK) Code() int {
	return 200
}

func (o *CodeBuildCallbackUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTOK %s", 200, payload)
}

func (o *CodeBuildCallbackUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTOK %s", 200, payload)
}

func (o *CodeBuildCallbackUsingPOSTOK) GetPayload() bool {
	return o.Payload
}

func (o *CodeBuildCallbackUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCodeBuildCallbackUsingPOSTCreated creates a CodeBuildCallbackUsingPOSTCreated with default headers values
func NewCodeBuildCallbackUsingPOSTCreated() *CodeBuildCallbackUsingPOSTCreated {
	return &CodeBuildCallbackUsingPOSTCreated{}
}

/*
CodeBuildCallbackUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CodeBuildCallbackUsingPOSTCreated struct {
}

// IsSuccess returns true when this code build callback using p o s t created response has a 2xx status code
func (o *CodeBuildCallbackUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this code build callback using p o s t created response has a 3xx status code
func (o *CodeBuildCallbackUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this code build callback using p o s t created response has a 4xx status code
func (o *CodeBuildCallbackUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this code build callback using p o s t created response has a 5xx status code
func (o *CodeBuildCallbackUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this code build callback using p o s t created response a status code equal to that given
func (o *CodeBuildCallbackUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the code build callback using p o s t created response
func (o *CodeBuildCallbackUsingPOSTCreated) Code() int {
	return 201
}

func (o *CodeBuildCallbackUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTCreated", 201)
}

func (o *CodeBuildCallbackUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTCreated", 201)
}

func (o *CodeBuildCallbackUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCodeBuildCallbackUsingPOSTUnauthorized creates a CodeBuildCallbackUsingPOSTUnauthorized with default headers values
func NewCodeBuildCallbackUsingPOSTUnauthorized() *CodeBuildCallbackUsingPOSTUnauthorized {
	return &CodeBuildCallbackUsingPOSTUnauthorized{}
}

/*
CodeBuildCallbackUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CodeBuildCallbackUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this code build callback using p o s t unauthorized response has a 2xx status code
func (o *CodeBuildCallbackUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this code build callback using p o s t unauthorized response has a 3xx status code
func (o *CodeBuildCallbackUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this code build callback using p o s t unauthorized response has a 4xx status code
func (o *CodeBuildCallbackUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this code build callback using p o s t unauthorized response has a 5xx status code
func (o *CodeBuildCallbackUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this code build callback using p o s t unauthorized response a status code equal to that given
func (o *CodeBuildCallbackUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the code build callback using p o s t unauthorized response
func (o *CodeBuildCallbackUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CodeBuildCallbackUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTUnauthorized", 401)
}

func (o *CodeBuildCallbackUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTUnauthorized", 401)
}

func (o *CodeBuildCallbackUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCodeBuildCallbackUsingPOSTForbidden creates a CodeBuildCallbackUsingPOSTForbidden with default headers values
func NewCodeBuildCallbackUsingPOSTForbidden() *CodeBuildCallbackUsingPOSTForbidden {
	return &CodeBuildCallbackUsingPOSTForbidden{}
}

/*
CodeBuildCallbackUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CodeBuildCallbackUsingPOSTForbidden struct {
}

// IsSuccess returns true when this code build callback using p o s t forbidden response has a 2xx status code
func (o *CodeBuildCallbackUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this code build callback using p o s t forbidden response has a 3xx status code
func (o *CodeBuildCallbackUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this code build callback using p o s t forbidden response has a 4xx status code
func (o *CodeBuildCallbackUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this code build callback using p o s t forbidden response has a 5xx status code
func (o *CodeBuildCallbackUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this code build callback using p o s t forbidden response a status code equal to that given
func (o *CodeBuildCallbackUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the code build callback using p o s t forbidden response
func (o *CodeBuildCallbackUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CodeBuildCallbackUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTForbidden", 403)
}

func (o *CodeBuildCallbackUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTForbidden", 403)
}

func (o *CodeBuildCallbackUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCodeBuildCallbackUsingPOSTNotFound creates a CodeBuildCallbackUsingPOSTNotFound with default headers values
func NewCodeBuildCallbackUsingPOSTNotFound() *CodeBuildCallbackUsingPOSTNotFound {
	return &CodeBuildCallbackUsingPOSTNotFound{}
}

/*
CodeBuildCallbackUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CodeBuildCallbackUsingPOSTNotFound struct {
}

// IsSuccess returns true when this code build callback using p o s t not found response has a 2xx status code
func (o *CodeBuildCallbackUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this code build callback using p o s t not found response has a 3xx status code
func (o *CodeBuildCallbackUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this code build callback using p o s t not found response has a 4xx status code
func (o *CodeBuildCallbackUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this code build callback using p o s t not found response has a 5xx status code
func (o *CodeBuildCallbackUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this code build callback using p o s t not found response a status code equal to that given
func (o *CodeBuildCallbackUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the code build callback using p o s t not found response
func (o *CodeBuildCallbackUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CodeBuildCallbackUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTNotFound", 404)
}

func (o *CodeBuildCallbackUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc/v1/callbacks/codebuild][%d] codeBuildCallbackUsingPOSTNotFound", 404)
}

func (o *CodeBuildCallbackUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
