// Code generated by go-swagger; DO NOT EDIT.

package ui_meta_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetSupportedComponentVersionsUsingGET1Reader is a Reader for the GetSupportedComponentVersionsUsingGET1 structure.
type GetSupportedComponentVersionsUsingGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSupportedComponentVersionsUsingGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSupportedComponentVersionsUsingGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSupportedComponentVersionsUsingGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSupportedComponentVersionsUsingGET1Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSupportedComponentVersionsUsingGET1NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/meta/components/supportedVersion] getSupportedComponentVersionsUsingGET_1", response, response.Code())
	}
}

// NewGetSupportedComponentVersionsUsingGET1OK creates a GetSupportedComponentVersionsUsingGET1OK with default headers values
func NewGetSupportedComponentVersionsUsingGET1OK() *GetSupportedComponentVersionsUsingGET1OK {
	return &GetSupportedComponentVersionsUsingGET1OK{}
}

/*
GetSupportedComponentVersionsUsingGET1OK describes a response with status code 200, with default header values.

OK
*/
type GetSupportedComponentVersionsUsingGET1OK struct {
	Payload []*models.SupportedVersions
}

// IsSuccess returns true when this get supported component versions using g e t1 o k response has a 2xx status code
func (o *GetSupportedComponentVersionsUsingGET1OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get supported component versions using g e t1 o k response has a 3xx status code
func (o *GetSupportedComponentVersionsUsingGET1OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get supported component versions using g e t1 o k response has a 4xx status code
func (o *GetSupportedComponentVersionsUsingGET1OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get supported component versions using g e t1 o k response has a 5xx status code
func (o *GetSupportedComponentVersionsUsingGET1OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get supported component versions using g e t1 o k response a status code equal to that given
func (o *GetSupportedComponentVersionsUsingGET1OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get supported component versions using g e t1 o k response
func (o *GetSupportedComponentVersionsUsingGET1OK) Code() int {
	return 200
}

func (o *GetSupportedComponentVersionsUsingGET1OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1OK %s", 200, payload)
}

func (o *GetSupportedComponentVersionsUsingGET1OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1OK %s", 200, payload)
}

func (o *GetSupportedComponentVersionsUsingGET1OK) GetPayload() []*models.SupportedVersions {
	return o.Payload
}

func (o *GetSupportedComponentVersionsUsingGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSupportedComponentVersionsUsingGET1Unauthorized creates a GetSupportedComponentVersionsUsingGET1Unauthorized with default headers values
func NewGetSupportedComponentVersionsUsingGET1Unauthorized() *GetSupportedComponentVersionsUsingGET1Unauthorized {
	return &GetSupportedComponentVersionsUsingGET1Unauthorized{}
}

/*
GetSupportedComponentVersionsUsingGET1Unauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSupportedComponentVersionsUsingGET1Unauthorized struct {
}

// IsSuccess returns true when this get supported component versions using g e t1 unauthorized response has a 2xx status code
func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get supported component versions using g e t1 unauthorized response has a 3xx status code
func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get supported component versions using g e t1 unauthorized response has a 4xx status code
func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get supported component versions using g e t1 unauthorized response has a 5xx status code
func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get supported component versions using g e t1 unauthorized response a status code equal to that given
func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get supported component versions using g e t1 unauthorized response
func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) Code() int {
	return 401
}

func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1Unauthorized", 401)
}

func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1Unauthorized", 401)
}

func (o *GetSupportedComponentVersionsUsingGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSupportedComponentVersionsUsingGET1Forbidden creates a GetSupportedComponentVersionsUsingGET1Forbidden with default headers values
func NewGetSupportedComponentVersionsUsingGET1Forbidden() *GetSupportedComponentVersionsUsingGET1Forbidden {
	return &GetSupportedComponentVersionsUsingGET1Forbidden{}
}

/*
GetSupportedComponentVersionsUsingGET1Forbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSupportedComponentVersionsUsingGET1Forbidden struct {
}

// IsSuccess returns true when this get supported component versions using g e t1 forbidden response has a 2xx status code
func (o *GetSupportedComponentVersionsUsingGET1Forbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get supported component versions using g e t1 forbidden response has a 3xx status code
func (o *GetSupportedComponentVersionsUsingGET1Forbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get supported component versions using g e t1 forbidden response has a 4xx status code
func (o *GetSupportedComponentVersionsUsingGET1Forbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get supported component versions using g e t1 forbidden response has a 5xx status code
func (o *GetSupportedComponentVersionsUsingGET1Forbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get supported component versions using g e t1 forbidden response a status code equal to that given
func (o *GetSupportedComponentVersionsUsingGET1Forbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get supported component versions using g e t1 forbidden response
func (o *GetSupportedComponentVersionsUsingGET1Forbidden) Code() int {
	return 403
}

func (o *GetSupportedComponentVersionsUsingGET1Forbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1Forbidden", 403)
}

func (o *GetSupportedComponentVersionsUsingGET1Forbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1Forbidden", 403)
}

func (o *GetSupportedComponentVersionsUsingGET1Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSupportedComponentVersionsUsingGET1NotFound creates a GetSupportedComponentVersionsUsingGET1NotFound with default headers values
func NewGetSupportedComponentVersionsUsingGET1NotFound() *GetSupportedComponentVersionsUsingGET1NotFound {
	return &GetSupportedComponentVersionsUsingGET1NotFound{}
}

/*
GetSupportedComponentVersionsUsingGET1NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSupportedComponentVersionsUsingGET1NotFound struct {
}

// IsSuccess returns true when this get supported component versions using g e t1 not found response has a 2xx status code
func (o *GetSupportedComponentVersionsUsingGET1NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get supported component versions using g e t1 not found response has a 3xx status code
func (o *GetSupportedComponentVersionsUsingGET1NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get supported component versions using g e t1 not found response has a 4xx status code
func (o *GetSupportedComponentVersionsUsingGET1NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get supported component versions using g e t1 not found response has a 5xx status code
func (o *GetSupportedComponentVersionsUsingGET1NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get supported component versions using g e t1 not found response a status code equal to that given
func (o *GetSupportedComponentVersionsUsingGET1NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get supported component versions using g e t1 not found response
func (o *GetSupportedComponentVersionsUsingGET1NotFound) Code() int {
	return 404
}

func (o *GetSupportedComponentVersionsUsingGET1NotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1NotFound", 404)
}

func (o *GetSupportedComponentVersionsUsingGET1NotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/components/supportedVersion][%d] getSupportedComponentVersionsUsingGET1NotFound", 404)
}

func (o *GetSupportedComponentVersionsUsingGET1NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
