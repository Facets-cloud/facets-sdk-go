// Code generated by go-swagger; DO NOT EDIT.

package ui_meta_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetCPAccountUsingGETReader is a Reader for the GetCPAccountUsingGET structure.
type GetCPAccountUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCPAccountUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCPAccountUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCPAccountUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCPAccountUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCPAccountUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/meta/cpAccount] getCPAccountUsingGET", response, response.Code())
	}
}

// NewGetCPAccountUsingGETOK creates a GetCPAccountUsingGETOK with default headers values
func NewGetCPAccountUsingGETOK() *GetCPAccountUsingGETOK {
	return &GetCPAccountUsingGETOK{}
}

/*
GetCPAccountUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetCPAccountUsingGETOK struct {
	Payload map[string]string
}

// IsSuccess returns true when this get c p account using g e t o k response has a 2xx status code
func (o *GetCPAccountUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get c p account using g e t o k response has a 3xx status code
func (o *GetCPAccountUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p account using g e t o k response has a 4xx status code
func (o *GetCPAccountUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get c p account using g e t o k response has a 5xx status code
func (o *GetCPAccountUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p account using g e t o k response a status code equal to that given
func (o *GetCPAccountUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get c p account using g e t o k response
func (o *GetCPAccountUsingGETOK) Code() int {
	return 200
}

func (o *GetCPAccountUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETOK %s", 200, payload)
}

func (o *GetCPAccountUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETOK %s", 200, payload)
}

func (o *GetCPAccountUsingGETOK) GetPayload() map[string]string {
	return o.Payload
}

func (o *GetCPAccountUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCPAccountUsingGETUnauthorized creates a GetCPAccountUsingGETUnauthorized with default headers values
func NewGetCPAccountUsingGETUnauthorized() *GetCPAccountUsingGETUnauthorized {
	return &GetCPAccountUsingGETUnauthorized{}
}

/*
GetCPAccountUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCPAccountUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get c p account using g e t unauthorized response has a 2xx status code
func (o *GetCPAccountUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p account using g e t unauthorized response has a 3xx status code
func (o *GetCPAccountUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p account using g e t unauthorized response has a 4xx status code
func (o *GetCPAccountUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p account using g e t unauthorized response has a 5xx status code
func (o *GetCPAccountUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p account using g e t unauthorized response a status code equal to that given
func (o *GetCPAccountUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get c p account using g e t unauthorized response
func (o *GetCPAccountUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetCPAccountUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETUnauthorized", 401)
}

func (o *GetCPAccountUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETUnauthorized", 401)
}

func (o *GetCPAccountUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCPAccountUsingGETForbidden creates a GetCPAccountUsingGETForbidden with default headers values
func NewGetCPAccountUsingGETForbidden() *GetCPAccountUsingGETForbidden {
	return &GetCPAccountUsingGETForbidden{}
}

/*
GetCPAccountUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCPAccountUsingGETForbidden struct {
}

// IsSuccess returns true when this get c p account using g e t forbidden response has a 2xx status code
func (o *GetCPAccountUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p account using g e t forbidden response has a 3xx status code
func (o *GetCPAccountUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p account using g e t forbidden response has a 4xx status code
func (o *GetCPAccountUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p account using g e t forbidden response has a 5xx status code
func (o *GetCPAccountUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p account using g e t forbidden response a status code equal to that given
func (o *GetCPAccountUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get c p account using g e t forbidden response
func (o *GetCPAccountUsingGETForbidden) Code() int {
	return 403
}

func (o *GetCPAccountUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETForbidden", 403)
}

func (o *GetCPAccountUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETForbidden", 403)
}

func (o *GetCPAccountUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCPAccountUsingGETNotFound creates a GetCPAccountUsingGETNotFound with default headers values
func NewGetCPAccountUsingGETNotFound() *GetCPAccountUsingGETNotFound {
	return &GetCPAccountUsingGETNotFound{}
}

/*
GetCPAccountUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCPAccountUsingGETNotFound struct {
}

// IsSuccess returns true when this get c p account using g e t not found response has a 2xx status code
func (o *GetCPAccountUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get c p account using g e t not found response has a 3xx status code
func (o *GetCPAccountUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get c p account using g e t not found response has a 4xx status code
func (o *GetCPAccountUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get c p account using g e t not found response has a 5xx status code
func (o *GetCPAccountUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get c p account using g e t not found response a status code equal to that given
func (o *GetCPAccountUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get c p account using g e t not found response
func (o *GetCPAccountUsingGETNotFound) Code() int {
	return 404
}

func (o *GetCPAccountUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETNotFound", 404)
}

func (o *GetCPAccountUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/meta/cpAccount][%d] getCPAccountUsingGETNotFound", 404)
}

func (o *GetCPAccountUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
