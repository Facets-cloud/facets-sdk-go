// Code generated by go-swagger; DO NOT EDIT.

package ui_theme_file_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SaveThemeFileUsingPOSTReader is a Reader for the SaveThemeFileUsingPOST structure.
type SaveThemeFileUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveThemeFileUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSaveThemeFileUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewSaveThemeFileUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSaveThemeFileUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSaveThemeFileUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSaveThemeFileUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/themeFile] saveThemeFileUsingPOST", response, response.Code())
	}
}

// NewSaveThemeFileUsingPOSTOK creates a SaveThemeFileUsingPOSTOK with default headers values
func NewSaveThemeFileUsingPOSTOK() *SaveThemeFileUsingPOSTOK {
	return &SaveThemeFileUsingPOSTOK{}
}

/*
SaveThemeFileUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type SaveThemeFileUsingPOSTOK struct {
	Payload bool
}

// IsSuccess returns true when this save theme file using p o s t o k response has a 2xx status code
func (o *SaveThemeFileUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save theme file using p o s t o k response has a 3xx status code
func (o *SaveThemeFileUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save theme file using p o s t o k response has a 4xx status code
func (o *SaveThemeFileUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this save theme file using p o s t o k response has a 5xx status code
func (o *SaveThemeFileUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this save theme file using p o s t o k response a status code equal to that given
func (o *SaveThemeFileUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the save theme file using p o s t o k response
func (o *SaveThemeFileUsingPOSTOK) Code() int {
	return 200
}

func (o *SaveThemeFileUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTOK %s", 200, payload)
}

func (o *SaveThemeFileUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTOK %s", 200, payload)
}

func (o *SaveThemeFileUsingPOSTOK) GetPayload() bool {
	return o.Payload
}

func (o *SaveThemeFileUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveThemeFileUsingPOSTCreated creates a SaveThemeFileUsingPOSTCreated with default headers values
func NewSaveThemeFileUsingPOSTCreated() *SaveThemeFileUsingPOSTCreated {
	return &SaveThemeFileUsingPOSTCreated{}
}

/*
SaveThemeFileUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type SaveThemeFileUsingPOSTCreated struct {
}

// IsSuccess returns true when this save theme file using p o s t created response has a 2xx status code
func (o *SaveThemeFileUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this save theme file using p o s t created response has a 3xx status code
func (o *SaveThemeFileUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save theme file using p o s t created response has a 4xx status code
func (o *SaveThemeFileUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this save theme file using p o s t created response has a 5xx status code
func (o *SaveThemeFileUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this save theme file using p o s t created response a status code equal to that given
func (o *SaveThemeFileUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the save theme file using p o s t created response
func (o *SaveThemeFileUsingPOSTCreated) Code() int {
	return 201
}

func (o *SaveThemeFileUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTCreated", 201)
}

func (o *SaveThemeFileUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTCreated", 201)
}

func (o *SaveThemeFileUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveThemeFileUsingPOSTUnauthorized creates a SaveThemeFileUsingPOSTUnauthorized with default headers values
func NewSaveThemeFileUsingPOSTUnauthorized() *SaveThemeFileUsingPOSTUnauthorized {
	return &SaveThemeFileUsingPOSTUnauthorized{}
}

/*
SaveThemeFileUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SaveThemeFileUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this save theme file using p o s t unauthorized response has a 2xx status code
func (o *SaveThemeFileUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save theme file using p o s t unauthorized response has a 3xx status code
func (o *SaveThemeFileUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save theme file using p o s t unauthorized response has a 4xx status code
func (o *SaveThemeFileUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this save theme file using p o s t unauthorized response has a 5xx status code
func (o *SaveThemeFileUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this save theme file using p o s t unauthorized response a status code equal to that given
func (o *SaveThemeFileUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the save theme file using p o s t unauthorized response
func (o *SaveThemeFileUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *SaveThemeFileUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTUnauthorized", 401)
}

func (o *SaveThemeFileUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTUnauthorized", 401)
}

func (o *SaveThemeFileUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveThemeFileUsingPOSTForbidden creates a SaveThemeFileUsingPOSTForbidden with default headers values
func NewSaveThemeFileUsingPOSTForbidden() *SaveThemeFileUsingPOSTForbidden {
	return &SaveThemeFileUsingPOSTForbidden{}
}

/*
SaveThemeFileUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SaveThemeFileUsingPOSTForbidden struct {
}

// IsSuccess returns true when this save theme file using p o s t forbidden response has a 2xx status code
func (o *SaveThemeFileUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save theme file using p o s t forbidden response has a 3xx status code
func (o *SaveThemeFileUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save theme file using p o s t forbidden response has a 4xx status code
func (o *SaveThemeFileUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this save theme file using p o s t forbidden response has a 5xx status code
func (o *SaveThemeFileUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this save theme file using p o s t forbidden response a status code equal to that given
func (o *SaveThemeFileUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the save theme file using p o s t forbidden response
func (o *SaveThemeFileUsingPOSTForbidden) Code() int {
	return 403
}

func (o *SaveThemeFileUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTForbidden", 403)
}

func (o *SaveThemeFileUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTForbidden", 403)
}

func (o *SaveThemeFileUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSaveThemeFileUsingPOSTNotFound creates a SaveThemeFileUsingPOSTNotFound with default headers values
func NewSaveThemeFileUsingPOSTNotFound() *SaveThemeFileUsingPOSTNotFound {
	return &SaveThemeFileUsingPOSTNotFound{}
}

/*
SaveThemeFileUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SaveThemeFileUsingPOSTNotFound struct {
}

// IsSuccess returns true when this save theme file using p o s t not found response has a 2xx status code
func (o *SaveThemeFileUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this save theme file using p o s t not found response has a 3xx status code
func (o *SaveThemeFileUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this save theme file using p o s t not found response has a 4xx status code
func (o *SaveThemeFileUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this save theme file using p o s t not found response has a 5xx status code
func (o *SaveThemeFileUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this save theme file using p o s t not found response a status code equal to that given
func (o *SaveThemeFileUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the save theme file using p o s t not found response
func (o *SaveThemeFileUsingPOSTNotFound) Code() int {
	return 404
}

func (o *SaveThemeFileUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTNotFound", 404)
}

func (o *SaveThemeFileUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/themeFile][%d] saveThemeFileUsingPOSTNotFound", 404)
}

func (o *SaveThemeFileUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
