// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// AddSettingValueUsingPUTReader is a Reader for the AddSettingValueUsingPUT structure.
type AddSettingValueUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSettingValueUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddSettingValueUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewAddSettingValueUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewAddSettingValueUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddSettingValueUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddSettingValueUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}] addSettingValueUsingPUT", response, response.Code())
	}
}

// NewAddSettingValueUsingPUTOK creates a AddSettingValueUsingPUTOK with default headers values
func NewAddSettingValueUsingPUTOK() *AddSettingValueUsingPUTOK {
	return &AddSettingValueUsingPUTOK{}
}

/*
AddSettingValueUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type AddSettingValueUsingPUTOK struct {
	Payload interface{}
}

// IsSuccess returns true when this add setting value using p u t o k response has a 2xx status code
func (o *AddSettingValueUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add setting value using p u t o k response has a 3xx status code
func (o *AddSettingValueUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value using p u t o k response has a 4xx status code
func (o *AddSettingValueUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add setting value using p u t o k response has a 5xx status code
func (o *AddSettingValueUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value using p u t o k response a status code equal to that given
func (o *AddSettingValueUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add setting value using p u t o k response
func (o *AddSettingValueUsingPUTOK) Code() int {
	return 200
}

func (o *AddSettingValueUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTOK %s", 200, payload)
}

func (o *AddSettingValueUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTOK %s", 200, payload)
}

func (o *AddSettingValueUsingPUTOK) GetPayload() interface{} {
	return o.Payload
}

func (o *AddSettingValueUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSettingValueUsingPUTCreated creates a AddSettingValueUsingPUTCreated with default headers values
func NewAddSettingValueUsingPUTCreated() *AddSettingValueUsingPUTCreated {
	return &AddSettingValueUsingPUTCreated{}
}

/*
AddSettingValueUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type AddSettingValueUsingPUTCreated struct {
}

// IsSuccess returns true when this add setting value using p u t created response has a 2xx status code
func (o *AddSettingValueUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add setting value using p u t created response has a 3xx status code
func (o *AddSettingValueUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value using p u t created response has a 4xx status code
func (o *AddSettingValueUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this add setting value using p u t created response has a 5xx status code
func (o *AddSettingValueUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value using p u t created response a status code equal to that given
func (o *AddSettingValueUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the add setting value using p u t created response
func (o *AddSettingValueUsingPUTCreated) Code() int {
	return 201
}

func (o *AddSettingValueUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTCreated", 201)
}

func (o *AddSettingValueUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTCreated", 201)
}

func (o *AddSettingValueUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSettingValueUsingPUTUnauthorized creates a AddSettingValueUsingPUTUnauthorized with default headers values
func NewAddSettingValueUsingPUTUnauthorized() *AddSettingValueUsingPUTUnauthorized {
	return &AddSettingValueUsingPUTUnauthorized{}
}

/*
AddSettingValueUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type AddSettingValueUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this add setting value using p u t unauthorized response has a 2xx status code
func (o *AddSettingValueUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value using p u t unauthorized response has a 3xx status code
func (o *AddSettingValueUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value using p u t unauthorized response has a 4xx status code
func (o *AddSettingValueUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this add setting value using p u t unauthorized response has a 5xx status code
func (o *AddSettingValueUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value using p u t unauthorized response a status code equal to that given
func (o *AddSettingValueUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the add setting value using p u t unauthorized response
func (o *AddSettingValueUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *AddSettingValueUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTUnauthorized", 401)
}

func (o *AddSettingValueUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTUnauthorized", 401)
}

func (o *AddSettingValueUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSettingValueUsingPUTForbidden creates a AddSettingValueUsingPUTForbidden with default headers values
func NewAddSettingValueUsingPUTForbidden() *AddSettingValueUsingPUTForbidden {
	return &AddSettingValueUsingPUTForbidden{}
}

/*
AddSettingValueUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddSettingValueUsingPUTForbidden struct {
}

// IsSuccess returns true when this add setting value using p u t forbidden response has a 2xx status code
func (o *AddSettingValueUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value using p u t forbidden response has a 3xx status code
func (o *AddSettingValueUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value using p u t forbidden response has a 4xx status code
func (o *AddSettingValueUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add setting value using p u t forbidden response has a 5xx status code
func (o *AddSettingValueUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value using p u t forbidden response a status code equal to that given
func (o *AddSettingValueUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add setting value using p u t forbidden response
func (o *AddSettingValueUsingPUTForbidden) Code() int {
	return 403
}

func (o *AddSettingValueUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTForbidden", 403)
}

func (o *AddSettingValueUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTForbidden", 403)
}

func (o *AddSettingValueUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddSettingValueUsingPUTNotFound creates a AddSettingValueUsingPUTNotFound with default headers values
func NewAddSettingValueUsingPUTNotFound() *AddSettingValueUsingPUTNotFound {
	return &AddSettingValueUsingPUTNotFound{}
}

/*
AddSettingValueUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddSettingValueUsingPUTNotFound struct {
}

// IsSuccess returns true when this add setting value using p u t not found response has a 2xx status code
func (o *AddSettingValueUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value using p u t not found response has a 3xx status code
func (o *AddSettingValueUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value using p u t not found response has a 4xx status code
func (o *AddSettingValueUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add setting value using p u t not found response has a 5xx status code
func (o *AddSettingValueUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value using p u t not found response a status code equal to that given
func (o *AddSettingValueUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add setting value using p u t not found response
func (o *AddSettingValueUsingPUTNotFound) Code() int {
	return 404
}

func (o *AddSettingValueUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTNotFound", 404)
}

func (o *AddSettingValueUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueUsingPUTNotFound", 404)
}

func (o *AddSettingValueUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
