// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SetOnboardingDisplayUsingPUTReader is a Reader for the SetOnboardingDisplayUsingPUT structure.
type SetOnboardingDisplayUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetOnboardingDisplayUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetOnboardingDisplayUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewSetOnboardingDisplayUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSetOnboardingDisplayUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetOnboardingDisplayUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetOnboardingDisplayUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/settings/onboarding-display/{value}] setOnboardingDisplayUsingPUT", response, response.Code())
	}
}

// NewSetOnboardingDisplayUsingPUTOK creates a SetOnboardingDisplayUsingPUTOK with default headers values
func NewSetOnboardingDisplayUsingPUTOK() *SetOnboardingDisplayUsingPUTOK {
	return &SetOnboardingDisplayUsingPUTOK{}
}

/*
SetOnboardingDisplayUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type SetOnboardingDisplayUsingPUTOK struct {
}

// IsSuccess returns true when this set onboarding display using p u t o k response has a 2xx status code
func (o *SetOnboardingDisplayUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set onboarding display using p u t o k response has a 3xx status code
func (o *SetOnboardingDisplayUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display using p u t o k response has a 4xx status code
func (o *SetOnboardingDisplayUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set onboarding display using p u t o k response has a 5xx status code
func (o *SetOnboardingDisplayUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display using p u t o k response a status code equal to that given
func (o *SetOnboardingDisplayUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set onboarding display using p u t o k response
func (o *SetOnboardingDisplayUsingPUTOK) Code() int {
	return 200
}

func (o *SetOnboardingDisplayUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTOK", 200)
}

func (o *SetOnboardingDisplayUsingPUTOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTOK", 200)
}

func (o *SetOnboardingDisplayUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetOnboardingDisplayUsingPUTCreated creates a SetOnboardingDisplayUsingPUTCreated with default headers values
func NewSetOnboardingDisplayUsingPUTCreated() *SetOnboardingDisplayUsingPUTCreated {
	return &SetOnboardingDisplayUsingPUTCreated{}
}

/*
SetOnboardingDisplayUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type SetOnboardingDisplayUsingPUTCreated struct {
}

// IsSuccess returns true when this set onboarding display using p u t created response has a 2xx status code
func (o *SetOnboardingDisplayUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set onboarding display using p u t created response has a 3xx status code
func (o *SetOnboardingDisplayUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display using p u t created response has a 4xx status code
func (o *SetOnboardingDisplayUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this set onboarding display using p u t created response has a 5xx status code
func (o *SetOnboardingDisplayUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display using p u t created response a status code equal to that given
func (o *SetOnboardingDisplayUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the set onboarding display using p u t created response
func (o *SetOnboardingDisplayUsingPUTCreated) Code() int {
	return 201
}

func (o *SetOnboardingDisplayUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTCreated", 201)
}

func (o *SetOnboardingDisplayUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTCreated", 201)
}

func (o *SetOnboardingDisplayUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetOnboardingDisplayUsingPUTUnauthorized creates a SetOnboardingDisplayUsingPUTUnauthorized with default headers values
func NewSetOnboardingDisplayUsingPUTUnauthorized() *SetOnboardingDisplayUsingPUTUnauthorized {
	return &SetOnboardingDisplayUsingPUTUnauthorized{}
}

/*
SetOnboardingDisplayUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SetOnboardingDisplayUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this set onboarding display using p u t unauthorized response has a 2xx status code
func (o *SetOnboardingDisplayUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set onboarding display using p u t unauthorized response has a 3xx status code
func (o *SetOnboardingDisplayUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display using p u t unauthorized response has a 4xx status code
func (o *SetOnboardingDisplayUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this set onboarding display using p u t unauthorized response has a 5xx status code
func (o *SetOnboardingDisplayUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display using p u t unauthorized response a status code equal to that given
func (o *SetOnboardingDisplayUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the set onboarding display using p u t unauthorized response
func (o *SetOnboardingDisplayUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *SetOnboardingDisplayUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTUnauthorized", 401)
}

func (o *SetOnboardingDisplayUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTUnauthorized", 401)
}

func (o *SetOnboardingDisplayUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetOnboardingDisplayUsingPUTForbidden creates a SetOnboardingDisplayUsingPUTForbidden with default headers values
func NewSetOnboardingDisplayUsingPUTForbidden() *SetOnboardingDisplayUsingPUTForbidden {
	return &SetOnboardingDisplayUsingPUTForbidden{}
}

/*
SetOnboardingDisplayUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetOnboardingDisplayUsingPUTForbidden struct {
}

// IsSuccess returns true when this set onboarding display using p u t forbidden response has a 2xx status code
func (o *SetOnboardingDisplayUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set onboarding display using p u t forbidden response has a 3xx status code
func (o *SetOnboardingDisplayUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display using p u t forbidden response has a 4xx status code
func (o *SetOnboardingDisplayUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this set onboarding display using p u t forbidden response has a 5xx status code
func (o *SetOnboardingDisplayUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display using p u t forbidden response a status code equal to that given
func (o *SetOnboardingDisplayUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the set onboarding display using p u t forbidden response
func (o *SetOnboardingDisplayUsingPUTForbidden) Code() int {
	return 403
}

func (o *SetOnboardingDisplayUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTForbidden", 403)
}

func (o *SetOnboardingDisplayUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTForbidden", 403)
}

func (o *SetOnboardingDisplayUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetOnboardingDisplayUsingPUTNotFound creates a SetOnboardingDisplayUsingPUTNotFound with default headers values
func NewSetOnboardingDisplayUsingPUTNotFound() *SetOnboardingDisplayUsingPUTNotFound {
	return &SetOnboardingDisplayUsingPUTNotFound{}
}

/*
SetOnboardingDisplayUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SetOnboardingDisplayUsingPUTNotFound struct {
}

// IsSuccess returns true when this set onboarding display using p u t not found response has a 2xx status code
func (o *SetOnboardingDisplayUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set onboarding display using p u t not found response has a 3xx status code
func (o *SetOnboardingDisplayUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display using p u t not found response has a 4xx status code
func (o *SetOnboardingDisplayUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set onboarding display using p u t not found response has a 5xx status code
func (o *SetOnboardingDisplayUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display using p u t not found response a status code equal to that given
func (o *SetOnboardingDisplayUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set onboarding display using p u t not found response
func (o *SetOnboardingDisplayUsingPUTNotFound) Code() int {
	return 404
}

func (o *SetOnboardingDisplayUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTNotFound", 404)
}

func (o *SetOnboardingDisplayUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayUsingPUTNotFound", 404)
}

func (o *SetOnboardingDisplayUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
