// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewAddSettingValueUsingPUTParams creates a new AddSettingValueUsingPUTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddSettingValueUsingPUTParams() *AddSettingValueUsingPUTParams {
	return &AddSettingValueUsingPUTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddSettingValueUsingPUTParamsWithTimeout creates a new AddSettingValueUsingPUTParams object
// with the ability to set a timeout on a request.
func NewAddSettingValueUsingPUTParamsWithTimeout(timeout time.Duration) *AddSettingValueUsingPUTParams {
	return &AddSettingValueUsingPUTParams{
		timeout: timeout,
	}
}

// NewAddSettingValueUsingPUTParamsWithContext creates a new AddSettingValueUsingPUTParams object
// with the ability to set a context for a request.
func NewAddSettingValueUsingPUTParamsWithContext(ctx context.Context) *AddSettingValueUsingPUTParams {
	return &AddSettingValueUsingPUTParams{
		Context: ctx,
	}
}

// NewAddSettingValueUsingPUTParamsWithHTTPClient creates a new AddSettingValueUsingPUTParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddSettingValueUsingPUTParamsWithHTTPClient(client *http.Client) *AddSettingValueUsingPUTParams {
	return &AddSettingValueUsingPUTParams{
		HTTPClient: client,
	}
}

/*
AddSettingValueUsingPUTParams contains all the parameters to send to the API endpoint

	for the add setting value using p u t operation.

	Typically these are written to a http.Request.
*/
type AddSettingValueUsingPUTParams struct {

	/* EntityID.

	   entityId
	*/
	EntityID string

	/* EntityType.

	   entityType
	*/
	EntityType string

	/* SettingValueRequest.

	   settingValueRequest
	*/
	SettingValueRequest interface{}

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add setting value using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddSettingValueUsingPUTParams) WithDefaults() *AddSettingValueUsingPUTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add setting value using p u t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddSettingValueUsingPUTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) WithTimeout(timeout time.Duration) *AddSettingValueUsingPUTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) WithContext(ctx context.Context) *AddSettingValueUsingPUTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) WithHTTPClient(client *http.Client) *AddSettingValueUsingPUTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEntityID adds the entityID to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) WithEntityID(entityID string) *AddSettingValueUsingPUTParams {
	o.SetEntityID(entityID)
	return o
}

// SetEntityID adds the entityId to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) SetEntityID(entityID string) {
	o.EntityID = entityID
}

// WithEntityType adds the entityType to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) WithEntityType(entityType string) *AddSettingValueUsingPUTParams {
	o.SetEntityType(entityType)
	return o
}

// SetEntityType adds the entityType to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) SetEntityType(entityType string) {
	o.EntityType = entityType
}

// WithSettingValueRequest adds the settingValueRequest to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) WithSettingValueRequest(settingValueRequest interface{}) *AddSettingValueUsingPUTParams {
	o.SetSettingValueRequest(settingValueRequest)
	return o
}

// SetSettingValueRequest adds the settingValueRequest to the add setting value using p u t params
func (o *AddSettingValueUsingPUTParams) SetSettingValueRequest(settingValueRequest interface{}) {
	o.SettingValueRequest = settingValueRequest
}

// WriteToRequest writes these params to a swagger request
func (o *AddSettingValueUsingPUTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param entityId
	if err := r.SetPathParam("entityId", o.EntityID); err != nil {
		return err
	}

	// path param entityType
	if err := r.SetPathParam("entityType", o.EntityType); err != nil {
		return err
	}
	if o.SettingValueRequest != nil {
		if err := r.SetBodyParam(o.SettingValueRequest); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
