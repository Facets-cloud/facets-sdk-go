// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetSettingValueUsingGETReader is a Reader for the GetSettingValueUsingGET structure.
type GetSettingValueUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSettingValueUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSettingValueUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetSettingValueUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetSettingValueUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetSettingValueUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}] getSettingValueUsingGET", response, response.Code())
	}
}

// NewGetSettingValueUsingGETOK creates a GetSettingValueUsingGETOK with default headers values
func NewGetSettingValueUsingGETOK() *GetSettingValueUsingGETOK {
	return &GetSettingValueUsingGETOK{}
}

/*
GetSettingValueUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetSettingValueUsingGETOK struct {
	Payload interface{}
}

// IsSuccess returns true when this get setting value using g e t o k response has a 2xx status code
func (o *GetSettingValueUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get setting value using g e t o k response has a 3xx status code
func (o *GetSettingValueUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get setting value using g e t o k response has a 4xx status code
func (o *GetSettingValueUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get setting value using g e t o k response has a 5xx status code
func (o *GetSettingValueUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get setting value using g e t o k response a status code equal to that given
func (o *GetSettingValueUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get setting value using g e t o k response
func (o *GetSettingValueUsingGETOK) Code() int {
	return 200
}

func (o *GetSettingValueUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETOK %s", 200, payload)
}

func (o *GetSettingValueUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETOK %s", 200, payload)
}

func (o *GetSettingValueUsingGETOK) GetPayload() interface{} {
	return o.Payload
}

func (o *GetSettingValueUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSettingValueUsingGETUnauthorized creates a GetSettingValueUsingGETUnauthorized with default headers values
func NewGetSettingValueUsingGETUnauthorized() *GetSettingValueUsingGETUnauthorized {
	return &GetSettingValueUsingGETUnauthorized{}
}

/*
GetSettingValueUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetSettingValueUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get setting value using g e t unauthorized response has a 2xx status code
func (o *GetSettingValueUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get setting value using g e t unauthorized response has a 3xx status code
func (o *GetSettingValueUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get setting value using g e t unauthorized response has a 4xx status code
func (o *GetSettingValueUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get setting value using g e t unauthorized response has a 5xx status code
func (o *GetSettingValueUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get setting value using g e t unauthorized response a status code equal to that given
func (o *GetSettingValueUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get setting value using g e t unauthorized response
func (o *GetSettingValueUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetSettingValueUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETUnauthorized", 401)
}

func (o *GetSettingValueUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETUnauthorized", 401)
}

func (o *GetSettingValueUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSettingValueUsingGETForbidden creates a GetSettingValueUsingGETForbidden with default headers values
func NewGetSettingValueUsingGETForbidden() *GetSettingValueUsingGETForbidden {
	return &GetSettingValueUsingGETForbidden{}
}

/*
GetSettingValueUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetSettingValueUsingGETForbidden struct {
}

// IsSuccess returns true when this get setting value using g e t forbidden response has a 2xx status code
func (o *GetSettingValueUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get setting value using g e t forbidden response has a 3xx status code
func (o *GetSettingValueUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get setting value using g e t forbidden response has a 4xx status code
func (o *GetSettingValueUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get setting value using g e t forbidden response has a 5xx status code
func (o *GetSettingValueUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get setting value using g e t forbidden response a status code equal to that given
func (o *GetSettingValueUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get setting value using g e t forbidden response
func (o *GetSettingValueUsingGETForbidden) Code() int {
	return 403
}

func (o *GetSettingValueUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETForbidden", 403)
}

func (o *GetSettingValueUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETForbidden", 403)
}

func (o *GetSettingValueUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSettingValueUsingGETNotFound creates a GetSettingValueUsingGETNotFound with default headers values
func NewGetSettingValueUsingGETNotFound() *GetSettingValueUsingGETNotFound {
	return &GetSettingValueUsingGETNotFound{}
}

/*
GetSettingValueUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetSettingValueUsingGETNotFound struct {
}

// IsSuccess returns true when this get setting value using g e t not found response has a 2xx status code
func (o *GetSettingValueUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get setting value using g e t not found response has a 3xx status code
func (o *GetSettingValueUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get setting value using g e t not found response has a 4xx status code
func (o *GetSettingValueUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get setting value using g e t not found response has a 5xx status code
func (o *GetSettingValueUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get setting value using g e t not found response a status code equal to that given
func (o *GetSettingValueUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get setting value using g e t not found response
func (o *GetSettingValueUsingGETNotFound) Code() int {
	return 404
}

func (o *GetSettingValueUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETNotFound", 404)
}

func (o *GetSettingValueUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] getSettingValueUsingGETNotFound", 404)
}

func (o *GetSettingValueUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
