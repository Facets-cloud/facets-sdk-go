// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllSettingsYamlUsingGETReader is a Reader for the GetAllSettingsYamlUsingGET structure.
type GetAllSettingsYamlUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSettingsYamlUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSettingsYamlUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllSettingsYamlUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllSettingsYamlUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllSettingsYamlUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/settings/ui-yaml] getAllSettingsYamlUsingGET", response, response.Code())
	}
}

// NewGetAllSettingsYamlUsingGETOK creates a GetAllSettingsYamlUsingGETOK with default headers values
func NewGetAllSettingsYamlUsingGETOK() *GetAllSettingsYamlUsingGETOK {
	return &GetAllSettingsYamlUsingGETOK{}
}

/*
GetAllSettingsYamlUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllSettingsYamlUsingGETOK struct {
	Payload models.JSONNode
}

// IsSuccess returns true when this get all settings yaml using g e t o k response has a 2xx status code
func (o *GetAllSettingsYamlUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all settings yaml using g e t o k response has a 3xx status code
func (o *GetAllSettingsYamlUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings yaml using g e t o k response has a 4xx status code
func (o *GetAllSettingsYamlUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all settings yaml using g e t o k response has a 5xx status code
func (o *GetAllSettingsYamlUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings yaml using g e t o k response a status code equal to that given
func (o *GetAllSettingsYamlUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all settings yaml using g e t o k response
func (o *GetAllSettingsYamlUsingGETOK) Code() int {
	return 200
}

func (o *GetAllSettingsYamlUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETOK %s", 200, payload)
}

func (o *GetAllSettingsYamlUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETOK %s", 200, payload)
}

func (o *GetAllSettingsYamlUsingGETOK) GetPayload() models.JSONNode {
	return o.Payload
}

func (o *GetAllSettingsYamlUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSettingsYamlUsingGETUnauthorized creates a GetAllSettingsYamlUsingGETUnauthorized with default headers values
func NewGetAllSettingsYamlUsingGETUnauthorized() *GetAllSettingsYamlUsingGETUnauthorized {
	return &GetAllSettingsYamlUsingGETUnauthorized{}
}

/*
GetAllSettingsYamlUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllSettingsYamlUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all settings yaml using g e t unauthorized response has a 2xx status code
func (o *GetAllSettingsYamlUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings yaml using g e t unauthorized response has a 3xx status code
func (o *GetAllSettingsYamlUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings yaml using g e t unauthorized response has a 4xx status code
func (o *GetAllSettingsYamlUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings yaml using g e t unauthorized response has a 5xx status code
func (o *GetAllSettingsYamlUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings yaml using g e t unauthorized response a status code equal to that given
func (o *GetAllSettingsYamlUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all settings yaml using g e t unauthorized response
func (o *GetAllSettingsYamlUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllSettingsYamlUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETUnauthorized", 401)
}

func (o *GetAllSettingsYamlUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETUnauthorized", 401)
}

func (o *GetAllSettingsYamlUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSettingsYamlUsingGETForbidden creates a GetAllSettingsYamlUsingGETForbidden with default headers values
func NewGetAllSettingsYamlUsingGETForbidden() *GetAllSettingsYamlUsingGETForbidden {
	return &GetAllSettingsYamlUsingGETForbidden{}
}

/*
GetAllSettingsYamlUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllSettingsYamlUsingGETForbidden struct {
}

// IsSuccess returns true when this get all settings yaml using g e t forbidden response has a 2xx status code
func (o *GetAllSettingsYamlUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings yaml using g e t forbidden response has a 3xx status code
func (o *GetAllSettingsYamlUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings yaml using g e t forbidden response has a 4xx status code
func (o *GetAllSettingsYamlUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings yaml using g e t forbidden response has a 5xx status code
func (o *GetAllSettingsYamlUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings yaml using g e t forbidden response a status code equal to that given
func (o *GetAllSettingsYamlUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all settings yaml using g e t forbidden response
func (o *GetAllSettingsYamlUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllSettingsYamlUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETForbidden", 403)
}

func (o *GetAllSettingsYamlUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETForbidden", 403)
}

func (o *GetAllSettingsYamlUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSettingsYamlUsingGETNotFound creates a GetAllSettingsYamlUsingGETNotFound with default headers values
func NewGetAllSettingsYamlUsingGETNotFound() *GetAllSettingsYamlUsingGETNotFound {
	return &GetAllSettingsYamlUsingGETNotFound{}
}

/*
GetAllSettingsYamlUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllSettingsYamlUsingGETNotFound struct {
}

// IsSuccess returns true when this get all settings yaml using g e t not found response has a 2xx status code
func (o *GetAllSettingsYamlUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings yaml using g e t not found response has a 3xx status code
func (o *GetAllSettingsYamlUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings yaml using g e t not found response has a 4xx status code
func (o *GetAllSettingsYamlUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings yaml using g e t not found response has a 5xx status code
func (o *GetAllSettingsYamlUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings yaml using g e t not found response a status code equal to that given
func (o *GetAllSettingsYamlUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all settings yaml using g e t not found response
func (o *GetAllSettingsYamlUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllSettingsYamlUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETNotFound", 404)
}

func (o *GetAllSettingsYamlUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/ui-yaml][%d] getAllSettingsYamlUsingGETNotFound", 404)
}

func (o *GetAllSettingsYamlUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
