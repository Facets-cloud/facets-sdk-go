// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// SetOnboardingDisplayReader is a Reader for the SetOnboardingDisplay structure.
type SetOnboardingDisplayReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetOnboardingDisplayReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetOnboardingDisplayOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetOnboardingDisplayBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetOnboardingDisplayNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewSetOnboardingDisplayMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetOnboardingDisplayInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/settings/onboarding-display/{value}] setOnboardingDisplay", response, response.Code())
	}
}

// NewSetOnboardingDisplayOK creates a SetOnboardingDisplayOK with default headers values
func NewSetOnboardingDisplayOK() *SetOnboardingDisplayOK {
	return &SetOnboardingDisplayOK{}
}

/*
SetOnboardingDisplayOK describes a response with status code 200, with default header values.

OK
*/
type SetOnboardingDisplayOK struct {
}

// IsSuccess returns true when this set onboarding display o k response has a 2xx status code
func (o *SetOnboardingDisplayOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this set onboarding display o k response has a 3xx status code
func (o *SetOnboardingDisplayOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display o k response has a 4xx status code
func (o *SetOnboardingDisplayOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this set onboarding display o k response has a 5xx status code
func (o *SetOnboardingDisplayOK) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display o k response a status code equal to that given
func (o *SetOnboardingDisplayOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the set onboarding display o k response
func (o *SetOnboardingDisplayOK) Code() int {
	return 200
}

func (o *SetOnboardingDisplayOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayOK", 200)
}

func (o *SetOnboardingDisplayOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayOK", 200)
}

func (o *SetOnboardingDisplayOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetOnboardingDisplayBadRequest creates a SetOnboardingDisplayBadRequest with default headers values
func NewSetOnboardingDisplayBadRequest() *SetOnboardingDisplayBadRequest {
	return &SetOnboardingDisplayBadRequest{}
}

/*
SetOnboardingDisplayBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SetOnboardingDisplayBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this set onboarding display bad request response has a 2xx status code
func (o *SetOnboardingDisplayBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set onboarding display bad request response has a 3xx status code
func (o *SetOnboardingDisplayBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display bad request response has a 4xx status code
func (o *SetOnboardingDisplayBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this set onboarding display bad request response has a 5xx status code
func (o *SetOnboardingDisplayBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display bad request response a status code equal to that given
func (o *SetOnboardingDisplayBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the set onboarding display bad request response
func (o *SetOnboardingDisplayBadRequest) Code() int {
	return 400
}

func (o *SetOnboardingDisplayBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayBadRequest %s", 400, payload)
}

func (o *SetOnboardingDisplayBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayBadRequest %s", 400, payload)
}

func (o *SetOnboardingDisplayBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SetOnboardingDisplayBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetOnboardingDisplayNotFound creates a SetOnboardingDisplayNotFound with default headers values
func NewSetOnboardingDisplayNotFound() *SetOnboardingDisplayNotFound {
	return &SetOnboardingDisplayNotFound{}
}

/*
SetOnboardingDisplayNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SetOnboardingDisplayNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this set onboarding display not found response has a 2xx status code
func (o *SetOnboardingDisplayNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set onboarding display not found response has a 3xx status code
func (o *SetOnboardingDisplayNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display not found response has a 4xx status code
func (o *SetOnboardingDisplayNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this set onboarding display not found response has a 5xx status code
func (o *SetOnboardingDisplayNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display not found response a status code equal to that given
func (o *SetOnboardingDisplayNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the set onboarding display not found response
func (o *SetOnboardingDisplayNotFound) Code() int {
	return 404
}

func (o *SetOnboardingDisplayNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayNotFound %s", 404, payload)
}

func (o *SetOnboardingDisplayNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayNotFound %s", 404, payload)
}

func (o *SetOnboardingDisplayNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SetOnboardingDisplayNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetOnboardingDisplayMethodNotAllowed creates a SetOnboardingDisplayMethodNotAllowed with default headers values
func NewSetOnboardingDisplayMethodNotAllowed() *SetOnboardingDisplayMethodNotAllowed {
	return &SetOnboardingDisplayMethodNotAllowed{}
}

/*
SetOnboardingDisplayMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type SetOnboardingDisplayMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this set onboarding display method not allowed response has a 2xx status code
func (o *SetOnboardingDisplayMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set onboarding display method not allowed response has a 3xx status code
func (o *SetOnboardingDisplayMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display method not allowed response has a 4xx status code
func (o *SetOnboardingDisplayMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this set onboarding display method not allowed response has a 5xx status code
func (o *SetOnboardingDisplayMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this set onboarding display method not allowed response a status code equal to that given
func (o *SetOnboardingDisplayMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the set onboarding display method not allowed response
func (o *SetOnboardingDisplayMethodNotAllowed) Code() int {
	return 405
}

func (o *SetOnboardingDisplayMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayMethodNotAllowed %s", 405, payload)
}

func (o *SetOnboardingDisplayMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayMethodNotAllowed %s", 405, payload)
}

func (o *SetOnboardingDisplayMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SetOnboardingDisplayMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetOnboardingDisplayInternalServerError creates a SetOnboardingDisplayInternalServerError with default headers values
func NewSetOnboardingDisplayInternalServerError() *SetOnboardingDisplayInternalServerError {
	return &SetOnboardingDisplayInternalServerError{}
}

/*
SetOnboardingDisplayInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SetOnboardingDisplayInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this set onboarding display internal server error response has a 2xx status code
func (o *SetOnboardingDisplayInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this set onboarding display internal server error response has a 3xx status code
func (o *SetOnboardingDisplayInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this set onboarding display internal server error response has a 4xx status code
func (o *SetOnboardingDisplayInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this set onboarding display internal server error response has a 5xx status code
func (o *SetOnboardingDisplayInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this set onboarding display internal server error response a status code equal to that given
func (o *SetOnboardingDisplayInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the set onboarding display internal server error response
func (o *SetOnboardingDisplayInternalServerError) Code() int {
	return 500
}

func (o *SetOnboardingDisplayInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayInternalServerError %s", 500, payload)
}

func (o *SetOnboardingDisplayInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/onboarding-display/{value}][%d] setOnboardingDisplayInternalServerError %s", 500, payload)
}

func (o *SetOnboardingDisplayInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *SetOnboardingDisplayInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
