// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllSettingsForEntityReader is a Reader for the GetAllSettingsForEntity structure.
type GetAllSettingsForEntityReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSettingsForEntityReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSettingsForEntityOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllSettingsForEntityBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllSettingsForEntityNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllSettingsForEntityMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllSettingsForEntityInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/settings/entity/{entity}] getAllSettingsForEntity", response, response.Code())
	}
}

// NewGetAllSettingsForEntityOK creates a GetAllSettingsForEntityOK with default headers values
func NewGetAllSettingsForEntityOK() *GetAllSettingsForEntityOK {
	return &GetAllSettingsForEntityOK{}
}

/*
GetAllSettingsForEntityOK describes a response with status code 200, with default header values.

OK
*/
type GetAllSettingsForEntityOK struct {
	Payload []*models.Setting
}

// IsSuccess returns true when this get all settings for entity o k response has a 2xx status code
func (o *GetAllSettingsForEntityOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all settings for entity o k response has a 3xx status code
func (o *GetAllSettingsForEntityOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity o k response has a 4xx status code
func (o *GetAllSettingsForEntityOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all settings for entity o k response has a 5xx status code
func (o *GetAllSettingsForEntityOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity o k response a status code equal to that given
func (o *GetAllSettingsForEntityOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all settings for entity o k response
func (o *GetAllSettingsForEntityOK) Code() int {
	return 200
}

func (o *GetAllSettingsForEntityOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityOK %s", 200, payload)
}

func (o *GetAllSettingsForEntityOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityOK %s", 200, payload)
}

func (o *GetAllSettingsForEntityOK) GetPayload() []*models.Setting {
	return o.Payload
}

func (o *GetAllSettingsForEntityOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSettingsForEntityBadRequest creates a GetAllSettingsForEntityBadRequest with default headers values
func NewGetAllSettingsForEntityBadRequest() *GetAllSettingsForEntityBadRequest {
	return &GetAllSettingsForEntityBadRequest{}
}

/*
GetAllSettingsForEntityBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllSettingsForEntityBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all settings for entity bad request response has a 2xx status code
func (o *GetAllSettingsForEntityBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings for entity bad request response has a 3xx status code
func (o *GetAllSettingsForEntityBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity bad request response has a 4xx status code
func (o *GetAllSettingsForEntityBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings for entity bad request response has a 5xx status code
func (o *GetAllSettingsForEntityBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity bad request response a status code equal to that given
func (o *GetAllSettingsForEntityBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all settings for entity bad request response
func (o *GetAllSettingsForEntityBadRequest) Code() int {
	return 400
}

func (o *GetAllSettingsForEntityBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityBadRequest %s", 400, payload)
}

func (o *GetAllSettingsForEntityBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityBadRequest %s", 400, payload)
}

func (o *GetAllSettingsForEntityBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllSettingsForEntityBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSettingsForEntityNotFound creates a GetAllSettingsForEntityNotFound with default headers values
func NewGetAllSettingsForEntityNotFound() *GetAllSettingsForEntityNotFound {
	return &GetAllSettingsForEntityNotFound{}
}

/*
GetAllSettingsForEntityNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllSettingsForEntityNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all settings for entity not found response has a 2xx status code
func (o *GetAllSettingsForEntityNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings for entity not found response has a 3xx status code
func (o *GetAllSettingsForEntityNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity not found response has a 4xx status code
func (o *GetAllSettingsForEntityNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings for entity not found response has a 5xx status code
func (o *GetAllSettingsForEntityNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity not found response a status code equal to that given
func (o *GetAllSettingsForEntityNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all settings for entity not found response
func (o *GetAllSettingsForEntityNotFound) Code() int {
	return 404
}

func (o *GetAllSettingsForEntityNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityNotFound %s", 404, payload)
}

func (o *GetAllSettingsForEntityNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityNotFound %s", 404, payload)
}

func (o *GetAllSettingsForEntityNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllSettingsForEntityNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSettingsForEntityMethodNotAllowed creates a GetAllSettingsForEntityMethodNotAllowed with default headers values
func NewGetAllSettingsForEntityMethodNotAllowed() *GetAllSettingsForEntityMethodNotAllowed {
	return &GetAllSettingsForEntityMethodNotAllowed{}
}

/*
GetAllSettingsForEntityMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllSettingsForEntityMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all settings for entity method not allowed response has a 2xx status code
func (o *GetAllSettingsForEntityMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings for entity method not allowed response has a 3xx status code
func (o *GetAllSettingsForEntityMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity method not allowed response has a 4xx status code
func (o *GetAllSettingsForEntityMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings for entity method not allowed response has a 5xx status code
func (o *GetAllSettingsForEntityMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity method not allowed response a status code equal to that given
func (o *GetAllSettingsForEntityMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all settings for entity method not allowed response
func (o *GetAllSettingsForEntityMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllSettingsForEntityMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityMethodNotAllowed %s", 405, payload)
}

func (o *GetAllSettingsForEntityMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityMethodNotAllowed %s", 405, payload)
}

func (o *GetAllSettingsForEntityMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllSettingsForEntityMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSettingsForEntityInternalServerError creates a GetAllSettingsForEntityInternalServerError with default headers values
func NewGetAllSettingsForEntityInternalServerError() *GetAllSettingsForEntityInternalServerError {
	return &GetAllSettingsForEntityInternalServerError{}
}

/*
GetAllSettingsForEntityInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllSettingsForEntityInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all settings for entity internal server error response has a 2xx status code
func (o *GetAllSettingsForEntityInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings for entity internal server error response has a 3xx status code
func (o *GetAllSettingsForEntityInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity internal server error response has a 4xx status code
func (o *GetAllSettingsForEntityInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all settings for entity internal server error response has a 5xx status code
func (o *GetAllSettingsForEntityInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all settings for entity internal server error response a status code equal to that given
func (o *GetAllSettingsForEntityInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all settings for entity internal server error response
func (o *GetAllSettingsForEntityInternalServerError) Code() int {
	return 500
}

func (o *GetAllSettingsForEntityInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityInternalServerError %s", 500, payload)
}

func (o *GetAllSettingsForEntityInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityInternalServerError %s", 500, payload)
}

func (o *GetAllSettingsForEntityInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllSettingsForEntityInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
