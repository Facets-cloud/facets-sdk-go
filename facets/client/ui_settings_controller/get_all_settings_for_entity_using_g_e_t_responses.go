// Code generated by go-swagger; DO NOT EDIT.

package ui_settings_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllSettingsForEntityUsingGETReader is a Reader for the GetAllSettingsForEntityUsingGET structure.
type GetAllSettingsForEntityUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllSettingsForEntityUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllSettingsForEntityUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllSettingsForEntityUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllSettingsForEntityUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllSettingsForEntityUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/settings/entity/{entity}] getAllSettingsForEntityUsingGET", response, response.Code())
	}
}

// NewGetAllSettingsForEntityUsingGETOK creates a GetAllSettingsForEntityUsingGETOK with default headers values
func NewGetAllSettingsForEntityUsingGETOK() *GetAllSettingsForEntityUsingGETOK {
	return &GetAllSettingsForEntityUsingGETOK{}
}

/*
GetAllSettingsForEntityUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllSettingsForEntityUsingGETOK struct {
	Payload []*models.Setting
}

// IsSuccess returns true when this get all settings for entity using g e t o k response has a 2xx status code
func (o *GetAllSettingsForEntityUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all settings for entity using g e t o k response has a 3xx status code
func (o *GetAllSettingsForEntityUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity using g e t o k response has a 4xx status code
func (o *GetAllSettingsForEntityUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all settings for entity using g e t o k response has a 5xx status code
func (o *GetAllSettingsForEntityUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity using g e t o k response a status code equal to that given
func (o *GetAllSettingsForEntityUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all settings for entity using g e t o k response
func (o *GetAllSettingsForEntityUsingGETOK) Code() int {
	return 200
}

func (o *GetAllSettingsForEntityUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETOK %s", 200, payload)
}

func (o *GetAllSettingsForEntityUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETOK %s", 200, payload)
}

func (o *GetAllSettingsForEntityUsingGETOK) GetPayload() []*models.Setting {
	return o.Payload
}

func (o *GetAllSettingsForEntityUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllSettingsForEntityUsingGETUnauthorized creates a GetAllSettingsForEntityUsingGETUnauthorized with default headers values
func NewGetAllSettingsForEntityUsingGETUnauthorized() *GetAllSettingsForEntityUsingGETUnauthorized {
	return &GetAllSettingsForEntityUsingGETUnauthorized{}
}

/*
GetAllSettingsForEntityUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllSettingsForEntityUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all settings for entity using g e t unauthorized response has a 2xx status code
func (o *GetAllSettingsForEntityUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings for entity using g e t unauthorized response has a 3xx status code
func (o *GetAllSettingsForEntityUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity using g e t unauthorized response has a 4xx status code
func (o *GetAllSettingsForEntityUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings for entity using g e t unauthorized response has a 5xx status code
func (o *GetAllSettingsForEntityUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity using g e t unauthorized response a status code equal to that given
func (o *GetAllSettingsForEntityUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all settings for entity using g e t unauthorized response
func (o *GetAllSettingsForEntityUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllSettingsForEntityUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETUnauthorized", 401)
}

func (o *GetAllSettingsForEntityUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETUnauthorized", 401)
}

func (o *GetAllSettingsForEntityUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSettingsForEntityUsingGETForbidden creates a GetAllSettingsForEntityUsingGETForbidden with default headers values
func NewGetAllSettingsForEntityUsingGETForbidden() *GetAllSettingsForEntityUsingGETForbidden {
	return &GetAllSettingsForEntityUsingGETForbidden{}
}

/*
GetAllSettingsForEntityUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllSettingsForEntityUsingGETForbidden struct {
}

// IsSuccess returns true when this get all settings for entity using g e t forbidden response has a 2xx status code
func (o *GetAllSettingsForEntityUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings for entity using g e t forbidden response has a 3xx status code
func (o *GetAllSettingsForEntityUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity using g e t forbidden response has a 4xx status code
func (o *GetAllSettingsForEntityUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings for entity using g e t forbidden response has a 5xx status code
func (o *GetAllSettingsForEntityUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity using g e t forbidden response a status code equal to that given
func (o *GetAllSettingsForEntityUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all settings for entity using g e t forbidden response
func (o *GetAllSettingsForEntityUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllSettingsForEntityUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETForbidden", 403)
}

func (o *GetAllSettingsForEntityUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETForbidden", 403)
}

func (o *GetAllSettingsForEntityUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllSettingsForEntityUsingGETNotFound creates a GetAllSettingsForEntityUsingGETNotFound with default headers values
func NewGetAllSettingsForEntityUsingGETNotFound() *GetAllSettingsForEntityUsingGETNotFound {
	return &GetAllSettingsForEntityUsingGETNotFound{}
}

/*
GetAllSettingsForEntityUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllSettingsForEntityUsingGETNotFound struct {
}

// IsSuccess returns true when this get all settings for entity using g e t not found response has a 2xx status code
func (o *GetAllSettingsForEntityUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all settings for entity using g e t not found response has a 3xx status code
func (o *GetAllSettingsForEntityUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all settings for entity using g e t not found response has a 4xx status code
func (o *GetAllSettingsForEntityUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all settings for entity using g e t not found response has a 5xx status code
func (o *GetAllSettingsForEntityUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all settings for entity using g e t not found response a status code equal to that given
func (o *GetAllSettingsForEntityUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all settings for entity using g e t not found response
func (o *GetAllSettingsForEntityUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllSettingsForEntityUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETNotFound", 404)
}

func (o *GetAllSettingsForEntityUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/settings/entity/{entity}][%d] getAllSettingsForEntityUsingGETNotFound", 404)
}

func (o *GetAllSettingsForEntityUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
