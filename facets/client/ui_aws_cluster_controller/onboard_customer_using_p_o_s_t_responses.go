// Code generated by go-swagger; DO NOT EDIT.

package ui_aws_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// OnboardCustomerUsingPOSTReader is a Reader for the OnboardCustomerUsingPOST structure.
type OnboardCustomerUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *OnboardCustomerUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewOnboardCustomerUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewOnboardCustomerUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewOnboardCustomerUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewOnboardCustomerUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewOnboardCustomerUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/aws/clusters/onboard-customer] onboardCustomerUsingPOST", response, response.Code())
	}
}

// NewOnboardCustomerUsingPOSTOK creates a OnboardCustomerUsingPOSTOK with default headers values
func NewOnboardCustomerUsingPOSTOK() *OnboardCustomerUsingPOSTOK {
	return &OnboardCustomerUsingPOSTOK{}
}

/*
OnboardCustomerUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type OnboardCustomerUsingPOSTOK struct {
}

// IsSuccess returns true when this onboard customer using p o s t o k response has a 2xx status code
func (o *OnboardCustomerUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this onboard customer using p o s t o k response has a 3xx status code
func (o *OnboardCustomerUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboard customer using p o s t o k response has a 4xx status code
func (o *OnboardCustomerUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this onboard customer using p o s t o k response has a 5xx status code
func (o *OnboardCustomerUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this onboard customer using p o s t o k response a status code equal to that given
func (o *OnboardCustomerUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the onboard customer using p o s t o k response
func (o *OnboardCustomerUsingPOSTOK) Code() int {
	return 200
}

func (o *OnboardCustomerUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTOK", 200)
}

func (o *OnboardCustomerUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTOK", 200)
}

func (o *OnboardCustomerUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOnboardCustomerUsingPOSTCreated creates a OnboardCustomerUsingPOSTCreated with default headers values
func NewOnboardCustomerUsingPOSTCreated() *OnboardCustomerUsingPOSTCreated {
	return &OnboardCustomerUsingPOSTCreated{}
}

/*
OnboardCustomerUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type OnboardCustomerUsingPOSTCreated struct {
}

// IsSuccess returns true when this onboard customer using p o s t created response has a 2xx status code
func (o *OnboardCustomerUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this onboard customer using p o s t created response has a 3xx status code
func (o *OnboardCustomerUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboard customer using p o s t created response has a 4xx status code
func (o *OnboardCustomerUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this onboard customer using p o s t created response has a 5xx status code
func (o *OnboardCustomerUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this onboard customer using p o s t created response a status code equal to that given
func (o *OnboardCustomerUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the onboard customer using p o s t created response
func (o *OnboardCustomerUsingPOSTCreated) Code() int {
	return 201
}

func (o *OnboardCustomerUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTCreated", 201)
}

func (o *OnboardCustomerUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTCreated", 201)
}

func (o *OnboardCustomerUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOnboardCustomerUsingPOSTUnauthorized creates a OnboardCustomerUsingPOSTUnauthorized with default headers values
func NewOnboardCustomerUsingPOSTUnauthorized() *OnboardCustomerUsingPOSTUnauthorized {
	return &OnboardCustomerUsingPOSTUnauthorized{}
}

/*
OnboardCustomerUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type OnboardCustomerUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this onboard customer using p o s t unauthorized response has a 2xx status code
func (o *OnboardCustomerUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this onboard customer using p o s t unauthorized response has a 3xx status code
func (o *OnboardCustomerUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboard customer using p o s t unauthorized response has a 4xx status code
func (o *OnboardCustomerUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this onboard customer using p o s t unauthorized response has a 5xx status code
func (o *OnboardCustomerUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this onboard customer using p o s t unauthorized response a status code equal to that given
func (o *OnboardCustomerUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the onboard customer using p o s t unauthorized response
func (o *OnboardCustomerUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *OnboardCustomerUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTUnauthorized", 401)
}

func (o *OnboardCustomerUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTUnauthorized", 401)
}

func (o *OnboardCustomerUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOnboardCustomerUsingPOSTForbidden creates a OnboardCustomerUsingPOSTForbidden with default headers values
func NewOnboardCustomerUsingPOSTForbidden() *OnboardCustomerUsingPOSTForbidden {
	return &OnboardCustomerUsingPOSTForbidden{}
}

/*
OnboardCustomerUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type OnboardCustomerUsingPOSTForbidden struct {
}

// IsSuccess returns true when this onboard customer using p o s t forbidden response has a 2xx status code
func (o *OnboardCustomerUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this onboard customer using p o s t forbidden response has a 3xx status code
func (o *OnboardCustomerUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboard customer using p o s t forbidden response has a 4xx status code
func (o *OnboardCustomerUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this onboard customer using p o s t forbidden response has a 5xx status code
func (o *OnboardCustomerUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this onboard customer using p o s t forbidden response a status code equal to that given
func (o *OnboardCustomerUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the onboard customer using p o s t forbidden response
func (o *OnboardCustomerUsingPOSTForbidden) Code() int {
	return 403
}

func (o *OnboardCustomerUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTForbidden", 403)
}

func (o *OnboardCustomerUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTForbidden", 403)
}

func (o *OnboardCustomerUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewOnboardCustomerUsingPOSTNotFound creates a OnboardCustomerUsingPOSTNotFound with default headers values
func NewOnboardCustomerUsingPOSTNotFound() *OnboardCustomerUsingPOSTNotFound {
	return &OnboardCustomerUsingPOSTNotFound{}
}

/*
OnboardCustomerUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type OnboardCustomerUsingPOSTNotFound struct {
}

// IsSuccess returns true when this onboard customer using p o s t not found response has a 2xx status code
func (o *OnboardCustomerUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this onboard customer using p o s t not found response has a 3xx status code
func (o *OnboardCustomerUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this onboard customer using p o s t not found response has a 4xx status code
func (o *OnboardCustomerUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this onboard customer using p o s t not found response has a 5xx status code
func (o *OnboardCustomerUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this onboard customer using p o s t not found response a status code equal to that given
func (o *OnboardCustomerUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the onboard customer using p o s t not found response
func (o *OnboardCustomerUsingPOSTNotFound) Code() int {
	return 404
}

func (o *OnboardCustomerUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTNotFound", 404)
}

func (o *OnboardCustomerUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/aws/clusters/onboard-customer][%d] onboardCustomerUsingPOSTNotFound", 404)
}

func (o *OnboardCustomerUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
