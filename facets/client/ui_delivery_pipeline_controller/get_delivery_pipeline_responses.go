// Code generated by go-swagger; DO NOT EDIT.

package ui_delivery_pipeline_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetDeliveryPipelineReader is a Reader for the GetDeliveryPipeline structure.
type GetDeliveryPipelineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeliveryPipelineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeliveryPipelineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDeliveryPipelineBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeliveryPipelineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetDeliveryPipelineMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDeliveryPipelineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/delivery-pipeline/{stackName}] getDeliveryPipeline", response, response.Code())
	}
}

// NewGetDeliveryPipelineOK creates a GetDeliveryPipelineOK with default headers values
func NewGetDeliveryPipelineOK() *GetDeliveryPipelineOK {
	return &GetDeliveryPipelineOK{}
}

/*
GetDeliveryPipelineOK describes a response with status code 200, with default header values.

OK
*/
type GetDeliveryPipelineOK struct {
	Payload []*models.PipelineNode
}

// IsSuccess returns true when this get delivery pipeline o k response has a 2xx status code
func (o *GetDeliveryPipelineOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get delivery pipeline o k response has a 3xx status code
func (o *GetDeliveryPipelineOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get delivery pipeline o k response has a 4xx status code
func (o *GetDeliveryPipelineOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get delivery pipeline o k response has a 5xx status code
func (o *GetDeliveryPipelineOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get delivery pipeline o k response a status code equal to that given
func (o *GetDeliveryPipelineOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get delivery pipeline o k response
func (o *GetDeliveryPipelineOK) Code() int {
	return 200
}

func (o *GetDeliveryPipelineOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineOK %s", 200, payload)
}

func (o *GetDeliveryPipelineOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineOK %s", 200, payload)
}

func (o *GetDeliveryPipelineOK) GetPayload() []*models.PipelineNode {
	return o.Payload
}

func (o *GetDeliveryPipelineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryPipelineBadRequest creates a GetDeliveryPipelineBadRequest with default headers values
func NewGetDeliveryPipelineBadRequest() *GetDeliveryPipelineBadRequest {
	return &GetDeliveryPipelineBadRequest{}
}

/*
GetDeliveryPipelineBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetDeliveryPipelineBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get delivery pipeline bad request response has a 2xx status code
func (o *GetDeliveryPipelineBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get delivery pipeline bad request response has a 3xx status code
func (o *GetDeliveryPipelineBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get delivery pipeline bad request response has a 4xx status code
func (o *GetDeliveryPipelineBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get delivery pipeline bad request response has a 5xx status code
func (o *GetDeliveryPipelineBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get delivery pipeline bad request response a status code equal to that given
func (o *GetDeliveryPipelineBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get delivery pipeline bad request response
func (o *GetDeliveryPipelineBadRequest) Code() int {
	return 400
}

func (o *GetDeliveryPipelineBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineBadRequest %s", 400, payload)
}

func (o *GetDeliveryPipelineBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineBadRequest %s", 400, payload)
}

func (o *GetDeliveryPipelineBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeliveryPipelineBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryPipelineNotFound creates a GetDeliveryPipelineNotFound with default headers values
func NewGetDeliveryPipelineNotFound() *GetDeliveryPipelineNotFound {
	return &GetDeliveryPipelineNotFound{}
}

/*
GetDeliveryPipelineNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeliveryPipelineNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get delivery pipeline not found response has a 2xx status code
func (o *GetDeliveryPipelineNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get delivery pipeline not found response has a 3xx status code
func (o *GetDeliveryPipelineNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get delivery pipeline not found response has a 4xx status code
func (o *GetDeliveryPipelineNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get delivery pipeline not found response has a 5xx status code
func (o *GetDeliveryPipelineNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get delivery pipeline not found response a status code equal to that given
func (o *GetDeliveryPipelineNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get delivery pipeline not found response
func (o *GetDeliveryPipelineNotFound) Code() int {
	return 404
}

func (o *GetDeliveryPipelineNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineNotFound %s", 404, payload)
}

func (o *GetDeliveryPipelineNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineNotFound %s", 404, payload)
}

func (o *GetDeliveryPipelineNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeliveryPipelineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryPipelineMethodNotAllowed creates a GetDeliveryPipelineMethodNotAllowed with default headers values
func NewGetDeliveryPipelineMethodNotAllowed() *GetDeliveryPipelineMethodNotAllowed {
	return &GetDeliveryPipelineMethodNotAllowed{}
}

/*
GetDeliveryPipelineMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetDeliveryPipelineMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get delivery pipeline method not allowed response has a 2xx status code
func (o *GetDeliveryPipelineMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get delivery pipeline method not allowed response has a 3xx status code
func (o *GetDeliveryPipelineMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get delivery pipeline method not allowed response has a 4xx status code
func (o *GetDeliveryPipelineMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get delivery pipeline method not allowed response has a 5xx status code
func (o *GetDeliveryPipelineMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get delivery pipeline method not allowed response a status code equal to that given
func (o *GetDeliveryPipelineMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get delivery pipeline method not allowed response
func (o *GetDeliveryPipelineMethodNotAllowed) Code() int {
	return 405
}

func (o *GetDeliveryPipelineMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineMethodNotAllowed %s", 405, payload)
}

func (o *GetDeliveryPipelineMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineMethodNotAllowed %s", 405, payload)
}

func (o *GetDeliveryPipelineMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeliveryPipelineMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeliveryPipelineInternalServerError creates a GetDeliveryPipelineInternalServerError with default headers values
func NewGetDeliveryPipelineInternalServerError() *GetDeliveryPipelineInternalServerError {
	return &GetDeliveryPipelineInternalServerError{}
}

/*
GetDeliveryPipelineInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetDeliveryPipelineInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get delivery pipeline internal server error response has a 2xx status code
func (o *GetDeliveryPipelineInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get delivery pipeline internal server error response has a 3xx status code
func (o *GetDeliveryPipelineInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get delivery pipeline internal server error response has a 4xx status code
func (o *GetDeliveryPipelineInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get delivery pipeline internal server error response has a 5xx status code
func (o *GetDeliveryPipelineInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get delivery pipeline internal server error response a status code equal to that given
func (o *GetDeliveryPipelineInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get delivery pipeline internal server error response
func (o *GetDeliveryPipelineInternalServerError) Code() int {
	return 500
}

func (o *GetDeliveryPipelineInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineInternalServerError %s", 500, payload)
}

func (o *GetDeliveryPipelineInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/delivery-pipeline/{stackName}][%d] getDeliveryPipelineInternalServerError %s", 500, payload)
}

func (o *GetDeliveryPipelineInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetDeliveryPipelineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
