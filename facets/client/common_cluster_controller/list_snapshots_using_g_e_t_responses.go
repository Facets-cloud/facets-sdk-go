// Code generated by go-swagger; DO NOT EDIT.

package common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// ListSnapshotsUsingGETReader is a Reader for the ListSnapshotsUsingGET structure.
type ListSnapshotsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListSnapshotsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListSnapshotsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewListSnapshotsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListSnapshotsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListSnapshotsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}] listSnapshotsUsingGET", response, response.Code())
	}
}

// NewListSnapshotsUsingGETOK creates a ListSnapshotsUsingGETOK with default headers values
func NewListSnapshotsUsingGETOK() *ListSnapshotsUsingGETOK {
	return &ListSnapshotsUsingGETOK{}
}

/*
ListSnapshotsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type ListSnapshotsUsingGETOK struct {
	Payload []*models.SnapshotInfo
}

// IsSuccess returns true when this list snapshots using g e t o k response has a 2xx status code
func (o *ListSnapshotsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this list snapshots using g e t o k response has a 3xx status code
func (o *ListSnapshotsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list snapshots using g e t o k response has a 4xx status code
func (o *ListSnapshotsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this list snapshots using g e t o k response has a 5xx status code
func (o *ListSnapshotsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this list snapshots using g e t o k response a status code equal to that given
func (o *ListSnapshotsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the list snapshots using g e t o k response
func (o *ListSnapshotsUsingGETOK) Code() int {
	return 200
}

func (o *ListSnapshotsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETOK %s", 200, payload)
}

func (o *ListSnapshotsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETOK %s", 200, payload)
}

func (o *ListSnapshotsUsingGETOK) GetPayload() []*models.SnapshotInfo {
	return o.Payload
}

func (o *ListSnapshotsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListSnapshotsUsingGETUnauthorized creates a ListSnapshotsUsingGETUnauthorized with default headers values
func NewListSnapshotsUsingGETUnauthorized() *ListSnapshotsUsingGETUnauthorized {
	return &ListSnapshotsUsingGETUnauthorized{}
}

/*
ListSnapshotsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ListSnapshotsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this list snapshots using g e t unauthorized response has a 2xx status code
func (o *ListSnapshotsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list snapshots using g e t unauthorized response has a 3xx status code
func (o *ListSnapshotsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list snapshots using g e t unauthorized response has a 4xx status code
func (o *ListSnapshotsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this list snapshots using g e t unauthorized response has a 5xx status code
func (o *ListSnapshotsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this list snapshots using g e t unauthorized response a status code equal to that given
func (o *ListSnapshotsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the list snapshots using g e t unauthorized response
func (o *ListSnapshotsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *ListSnapshotsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETUnauthorized", 401)
}

func (o *ListSnapshotsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETUnauthorized", 401)
}

func (o *ListSnapshotsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSnapshotsUsingGETForbidden creates a ListSnapshotsUsingGETForbidden with default headers values
func NewListSnapshotsUsingGETForbidden() *ListSnapshotsUsingGETForbidden {
	return &ListSnapshotsUsingGETForbidden{}
}

/*
ListSnapshotsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ListSnapshotsUsingGETForbidden struct {
}

// IsSuccess returns true when this list snapshots using g e t forbidden response has a 2xx status code
func (o *ListSnapshotsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list snapshots using g e t forbidden response has a 3xx status code
func (o *ListSnapshotsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list snapshots using g e t forbidden response has a 4xx status code
func (o *ListSnapshotsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this list snapshots using g e t forbidden response has a 5xx status code
func (o *ListSnapshotsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this list snapshots using g e t forbidden response a status code equal to that given
func (o *ListSnapshotsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the list snapshots using g e t forbidden response
func (o *ListSnapshotsUsingGETForbidden) Code() int {
	return 403
}

func (o *ListSnapshotsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETForbidden", 403)
}

func (o *ListSnapshotsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETForbidden", 403)
}

func (o *ListSnapshotsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListSnapshotsUsingGETNotFound creates a ListSnapshotsUsingGETNotFound with default headers values
func NewListSnapshotsUsingGETNotFound() *ListSnapshotsUsingGETNotFound {
	return &ListSnapshotsUsingGETNotFound{}
}

/*
ListSnapshotsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ListSnapshotsUsingGETNotFound struct {
}

// IsSuccess returns true when this list snapshots using g e t not found response has a 2xx status code
func (o *ListSnapshotsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this list snapshots using g e t not found response has a 3xx status code
func (o *ListSnapshotsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this list snapshots using g e t not found response has a 4xx status code
func (o *ListSnapshotsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this list snapshots using g e t not found response has a 5xx status code
func (o *ListSnapshotsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this list snapshots using g e t not found response a status code equal to that given
func (o *ListSnapshotsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the list snapshots using g e t not found response
func (o *ListSnapshotsUsingGETNotFound) Code() int {
	return 404
}

func (o *ListSnapshotsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETNotFound", 404)
}

func (o *ListSnapshotsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}][%d] listSnapshotsUsingGETNotFound", 404)
}

func (o *ListSnapshotsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
