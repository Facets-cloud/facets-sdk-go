// Code generated by go-swagger; DO NOT EDIT.

package common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// NotifyAlertsUsingPOSTReader is a Reader for the NotifyAlertsUsingPOST structure.
type NotifyAlertsUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NotifyAlertsUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNotifyAlertsUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewNotifyAlertsUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewNotifyAlertsUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewNotifyAlertsUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewNotifyAlertsUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc/v1/clusters/{clusterId}/alerts] notifyAlertsUsingPOST", response, response.Code())
	}
}

// NewNotifyAlertsUsingPOSTOK creates a NotifyAlertsUsingPOSTOK with default headers values
func NewNotifyAlertsUsingPOSTOK() *NotifyAlertsUsingPOSTOK {
	return &NotifyAlertsUsingPOSTOK{}
}

/*
NotifyAlertsUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type NotifyAlertsUsingPOSTOK struct {
	Payload bool
}

// IsSuccess returns true when this notify alerts using p o s t o k response has a 2xx status code
func (o *NotifyAlertsUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notify alerts using p o s t o k response has a 3xx status code
func (o *NotifyAlertsUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify alerts using p o s t o k response has a 4xx status code
func (o *NotifyAlertsUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this notify alerts using p o s t o k response has a 5xx status code
func (o *NotifyAlertsUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this notify alerts using p o s t o k response a status code equal to that given
func (o *NotifyAlertsUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the notify alerts using p o s t o k response
func (o *NotifyAlertsUsingPOSTOK) Code() int {
	return 200
}

func (o *NotifyAlertsUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTOK %s", 200, payload)
}

func (o *NotifyAlertsUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTOK %s", 200, payload)
}

func (o *NotifyAlertsUsingPOSTOK) GetPayload() bool {
	return o.Payload
}

func (o *NotifyAlertsUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNotifyAlertsUsingPOSTCreated creates a NotifyAlertsUsingPOSTCreated with default headers values
func NewNotifyAlertsUsingPOSTCreated() *NotifyAlertsUsingPOSTCreated {
	return &NotifyAlertsUsingPOSTCreated{}
}

/*
NotifyAlertsUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type NotifyAlertsUsingPOSTCreated struct {
}

// IsSuccess returns true when this notify alerts using p o s t created response has a 2xx status code
func (o *NotifyAlertsUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this notify alerts using p o s t created response has a 3xx status code
func (o *NotifyAlertsUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify alerts using p o s t created response has a 4xx status code
func (o *NotifyAlertsUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this notify alerts using p o s t created response has a 5xx status code
func (o *NotifyAlertsUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this notify alerts using p o s t created response a status code equal to that given
func (o *NotifyAlertsUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the notify alerts using p o s t created response
func (o *NotifyAlertsUsingPOSTCreated) Code() int {
	return 201
}

func (o *NotifyAlertsUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTCreated", 201)
}

func (o *NotifyAlertsUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTCreated", 201)
}

func (o *NotifyAlertsUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotifyAlertsUsingPOSTUnauthorized creates a NotifyAlertsUsingPOSTUnauthorized with default headers values
func NewNotifyAlertsUsingPOSTUnauthorized() *NotifyAlertsUsingPOSTUnauthorized {
	return &NotifyAlertsUsingPOSTUnauthorized{}
}

/*
NotifyAlertsUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type NotifyAlertsUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this notify alerts using p o s t unauthorized response has a 2xx status code
func (o *NotifyAlertsUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notify alerts using p o s t unauthorized response has a 3xx status code
func (o *NotifyAlertsUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify alerts using p o s t unauthorized response has a 4xx status code
func (o *NotifyAlertsUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this notify alerts using p o s t unauthorized response has a 5xx status code
func (o *NotifyAlertsUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this notify alerts using p o s t unauthorized response a status code equal to that given
func (o *NotifyAlertsUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the notify alerts using p o s t unauthorized response
func (o *NotifyAlertsUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *NotifyAlertsUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTUnauthorized", 401)
}

func (o *NotifyAlertsUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTUnauthorized", 401)
}

func (o *NotifyAlertsUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotifyAlertsUsingPOSTForbidden creates a NotifyAlertsUsingPOSTForbidden with default headers values
func NewNotifyAlertsUsingPOSTForbidden() *NotifyAlertsUsingPOSTForbidden {
	return &NotifyAlertsUsingPOSTForbidden{}
}

/*
NotifyAlertsUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type NotifyAlertsUsingPOSTForbidden struct {
}

// IsSuccess returns true when this notify alerts using p o s t forbidden response has a 2xx status code
func (o *NotifyAlertsUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notify alerts using p o s t forbidden response has a 3xx status code
func (o *NotifyAlertsUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify alerts using p o s t forbidden response has a 4xx status code
func (o *NotifyAlertsUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this notify alerts using p o s t forbidden response has a 5xx status code
func (o *NotifyAlertsUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this notify alerts using p o s t forbidden response a status code equal to that given
func (o *NotifyAlertsUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the notify alerts using p o s t forbidden response
func (o *NotifyAlertsUsingPOSTForbidden) Code() int {
	return 403
}

func (o *NotifyAlertsUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTForbidden", 403)
}

func (o *NotifyAlertsUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTForbidden", 403)
}

func (o *NotifyAlertsUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewNotifyAlertsUsingPOSTNotFound creates a NotifyAlertsUsingPOSTNotFound with default headers values
func NewNotifyAlertsUsingPOSTNotFound() *NotifyAlertsUsingPOSTNotFound {
	return &NotifyAlertsUsingPOSTNotFound{}
}

/*
NotifyAlertsUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type NotifyAlertsUsingPOSTNotFound struct {
}

// IsSuccess returns true when this notify alerts using p o s t not found response has a 2xx status code
func (o *NotifyAlertsUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this notify alerts using p o s t not found response has a 3xx status code
func (o *NotifyAlertsUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this notify alerts using p o s t not found response has a 4xx status code
func (o *NotifyAlertsUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this notify alerts using p o s t not found response has a 5xx status code
func (o *NotifyAlertsUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this notify alerts using p o s t not found response a status code equal to that given
func (o *NotifyAlertsUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the notify alerts using p o s t not found response
func (o *NotifyAlertsUsingPOSTNotFound) Code() int {
	return 404
}

func (o *NotifyAlertsUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTNotFound", 404)
}

func (o *NotifyAlertsUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/alerts][%d] notifyAlertsUsingPOSTNotFound", 404)
}

func (o *NotifyAlertsUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
