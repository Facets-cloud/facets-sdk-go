// Code generated by go-swagger; DO NOT EDIT.

package common_cluster_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetPinnedSnapshotUsingGETReader is a Reader for the GetPinnedSnapshotUsingGET structure.
type GetPinnedSnapshotUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPinnedSnapshotUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPinnedSnapshotUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetPinnedSnapshotUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetPinnedSnapshotUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPinnedSnapshotUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot] getPinnedSnapshotUsingGET", response, response.Code())
	}
}

// NewGetPinnedSnapshotUsingGETOK creates a GetPinnedSnapshotUsingGETOK with default headers values
func NewGetPinnedSnapshotUsingGETOK() *GetPinnedSnapshotUsingGETOK {
	return &GetPinnedSnapshotUsingGETOK{}
}

/*
GetPinnedSnapshotUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetPinnedSnapshotUsingGETOK struct {
	Payload *models.SnapshotInfo
}

// IsSuccess returns true when this get pinned snapshot using g e t o k response has a 2xx status code
func (o *GetPinnedSnapshotUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get pinned snapshot using g e t o k response has a 3xx status code
func (o *GetPinnedSnapshotUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pinned snapshot using g e t o k response has a 4xx status code
func (o *GetPinnedSnapshotUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get pinned snapshot using g e t o k response has a 5xx status code
func (o *GetPinnedSnapshotUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get pinned snapshot using g e t o k response a status code equal to that given
func (o *GetPinnedSnapshotUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get pinned snapshot using g e t o k response
func (o *GetPinnedSnapshotUsingGETOK) Code() int {
	return 200
}

func (o *GetPinnedSnapshotUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETOK %s", 200, payload)
}

func (o *GetPinnedSnapshotUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETOK %s", 200, payload)
}

func (o *GetPinnedSnapshotUsingGETOK) GetPayload() *models.SnapshotInfo {
	return o.Payload
}

func (o *GetPinnedSnapshotUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SnapshotInfo)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPinnedSnapshotUsingGETUnauthorized creates a GetPinnedSnapshotUsingGETUnauthorized with default headers values
func NewGetPinnedSnapshotUsingGETUnauthorized() *GetPinnedSnapshotUsingGETUnauthorized {
	return &GetPinnedSnapshotUsingGETUnauthorized{}
}

/*
GetPinnedSnapshotUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetPinnedSnapshotUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get pinned snapshot using g e t unauthorized response has a 2xx status code
func (o *GetPinnedSnapshotUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pinned snapshot using g e t unauthorized response has a 3xx status code
func (o *GetPinnedSnapshotUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pinned snapshot using g e t unauthorized response has a 4xx status code
func (o *GetPinnedSnapshotUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pinned snapshot using g e t unauthorized response has a 5xx status code
func (o *GetPinnedSnapshotUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get pinned snapshot using g e t unauthorized response a status code equal to that given
func (o *GetPinnedSnapshotUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get pinned snapshot using g e t unauthorized response
func (o *GetPinnedSnapshotUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetPinnedSnapshotUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETUnauthorized", 401)
}

func (o *GetPinnedSnapshotUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETUnauthorized", 401)
}

func (o *GetPinnedSnapshotUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPinnedSnapshotUsingGETForbidden creates a GetPinnedSnapshotUsingGETForbidden with default headers values
func NewGetPinnedSnapshotUsingGETForbidden() *GetPinnedSnapshotUsingGETForbidden {
	return &GetPinnedSnapshotUsingGETForbidden{}
}

/*
GetPinnedSnapshotUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetPinnedSnapshotUsingGETForbidden struct {
}

// IsSuccess returns true when this get pinned snapshot using g e t forbidden response has a 2xx status code
func (o *GetPinnedSnapshotUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pinned snapshot using g e t forbidden response has a 3xx status code
func (o *GetPinnedSnapshotUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pinned snapshot using g e t forbidden response has a 4xx status code
func (o *GetPinnedSnapshotUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pinned snapshot using g e t forbidden response has a 5xx status code
func (o *GetPinnedSnapshotUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get pinned snapshot using g e t forbidden response a status code equal to that given
func (o *GetPinnedSnapshotUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get pinned snapshot using g e t forbidden response
func (o *GetPinnedSnapshotUsingGETForbidden) Code() int {
	return 403
}

func (o *GetPinnedSnapshotUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETForbidden", 403)
}

func (o *GetPinnedSnapshotUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETForbidden", 403)
}

func (o *GetPinnedSnapshotUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetPinnedSnapshotUsingGETNotFound creates a GetPinnedSnapshotUsingGETNotFound with default headers values
func NewGetPinnedSnapshotUsingGETNotFound() *GetPinnedSnapshotUsingGETNotFound {
	return &GetPinnedSnapshotUsingGETNotFound{}
}

/*
GetPinnedSnapshotUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetPinnedSnapshotUsingGETNotFound struct {
}

// IsSuccess returns true when this get pinned snapshot using g e t not found response has a 2xx status code
func (o *GetPinnedSnapshotUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get pinned snapshot using g e t not found response has a 3xx status code
func (o *GetPinnedSnapshotUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get pinned snapshot using g e t not found response has a 4xx status code
func (o *GetPinnedSnapshotUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get pinned snapshot using g e t not found response has a 5xx status code
func (o *GetPinnedSnapshotUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get pinned snapshot using g e t not found response a status code equal to that given
func (o *GetPinnedSnapshotUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get pinned snapshot using g e t not found response
func (o *GetPinnedSnapshotUsingGETNotFound) Code() int {
	return 404
}

func (o *GetPinnedSnapshotUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETNotFound", 404)
}

func (o *GetPinnedSnapshotUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/dr/{resourceType}/snapshots/{instanceName}/pinnedSnapshot][%d] getPinnedSnapshotUsingGETNotFound", 404)
}

func (o *GetPinnedSnapshotUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
