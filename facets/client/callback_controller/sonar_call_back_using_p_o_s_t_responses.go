// Code generated by go-swagger; DO NOT EDIT.

package callback_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// SonarCallBackUsingPOSTReader is a Reader for the SonarCallBackUsingPOST structure.
type SonarCallBackUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SonarCallBackUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSonarCallBackUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewSonarCallBackUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSonarCallBackUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSonarCallBackUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSonarCallBackUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /callback/sonar] sonarCallBackUsingPOST", response, response.Code())
	}
}

// NewSonarCallBackUsingPOSTOK creates a SonarCallBackUsingPOSTOK with default headers values
func NewSonarCallBackUsingPOSTOK() *SonarCallBackUsingPOSTOK {
	return &SonarCallBackUsingPOSTOK{}
}

/*
SonarCallBackUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type SonarCallBackUsingPOSTOK struct {
	Payload bool
}

// IsSuccess returns true when this sonar call back using p o s t o k response has a 2xx status code
func (o *SonarCallBackUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sonar call back using p o s t o k response has a 3xx status code
func (o *SonarCallBackUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sonar call back using p o s t o k response has a 4xx status code
func (o *SonarCallBackUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this sonar call back using p o s t o k response has a 5xx status code
func (o *SonarCallBackUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this sonar call back using p o s t o k response a status code equal to that given
func (o *SonarCallBackUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the sonar call back using p o s t o k response
func (o *SonarCallBackUsingPOSTOK) Code() int {
	return 200
}

func (o *SonarCallBackUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTOK %s", 200, payload)
}

func (o *SonarCallBackUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTOK %s", 200, payload)
}

func (o *SonarCallBackUsingPOSTOK) GetPayload() bool {
	return o.Payload
}

func (o *SonarCallBackUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSonarCallBackUsingPOSTCreated creates a SonarCallBackUsingPOSTCreated with default headers values
func NewSonarCallBackUsingPOSTCreated() *SonarCallBackUsingPOSTCreated {
	return &SonarCallBackUsingPOSTCreated{}
}

/*
SonarCallBackUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type SonarCallBackUsingPOSTCreated struct {
}

// IsSuccess returns true when this sonar call back using p o s t created response has a 2xx status code
func (o *SonarCallBackUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this sonar call back using p o s t created response has a 3xx status code
func (o *SonarCallBackUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sonar call back using p o s t created response has a 4xx status code
func (o *SonarCallBackUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this sonar call back using p o s t created response has a 5xx status code
func (o *SonarCallBackUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this sonar call back using p o s t created response a status code equal to that given
func (o *SonarCallBackUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the sonar call back using p o s t created response
func (o *SonarCallBackUsingPOSTCreated) Code() int {
	return 201
}

func (o *SonarCallBackUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTCreated", 201)
}

func (o *SonarCallBackUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTCreated", 201)
}

func (o *SonarCallBackUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSonarCallBackUsingPOSTUnauthorized creates a SonarCallBackUsingPOSTUnauthorized with default headers values
func NewSonarCallBackUsingPOSTUnauthorized() *SonarCallBackUsingPOSTUnauthorized {
	return &SonarCallBackUsingPOSTUnauthorized{}
}

/*
SonarCallBackUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type SonarCallBackUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this sonar call back using p o s t unauthorized response has a 2xx status code
func (o *SonarCallBackUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sonar call back using p o s t unauthorized response has a 3xx status code
func (o *SonarCallBackUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sonar call back using p o s t unauthorized response has a 4xx status code
func (o *SonarCallBackUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this sonar call back using p o s t unauthorized response has a 5xx status code
func (o *SonarCallBackUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this sonar call back using p o s t unauthorized response a status code equal to that given
func (o *SonarCallBackUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the sonar call back using p o s t unauthorized response
func (o *SonarCallBackUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *SonarCallBackUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTUnauthorized", 401)
}

func (o *SonarCallBackUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTUnauthorized", 401)
}

func (o *SonarCallBackUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSonarCallBackUsingPOSTForbidden creates a SonarCallBackUsingPOSTForbidden with default headers values
func NewSonarCallBackUsingPOSTForbidden() *SonarCallBackUsingPOSTForbidden {
	return &SonarCallBackUsingPOSTForbidden{}
}

/*
SonarCallBackUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SonarCallBackUsingPOSTForbidden struct {
}

// IsSuccess returns true when this sonar call back using p o s t forbidden response has a 2xx status code
func (o *SonarCallBackUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sonar call back using p o s t forbidden response has a 3xx status code
func (o *SonarCallBackUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sonar call back using p o s t forbidden response has a 4xx status code
func (o *SonarCallBackUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this sonar call back using p o s t forbidden response has a 5xx status code
func (o *SonarCallBackUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this sonar call back using p o s t forbidden response a status code equal to that given
func (o *SonarCallBackUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the sonar call back using p o s t forbidden response
func (o *SonarCallBackUsingPOSTForbidden) Code() int {
	return 403
}

func (o *SonarCallBackUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTForbidden", 403)
}

func (o *SonarCallBackUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTForbidden", 403)
}

func (o *SonarCallBackUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSonarCallBackUsingPOSTNotFound creates a SonarCallBackUsingPOSTNotFound with default headers values
func NewSonarCallBackUsingPOSTNotFound() *SonarCallBackUsingPOSTNotFound {
	return &SonarCallBackUsingPOSTNotFound{}
}

/*
SonarCallBackUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SonarCallBackUsingPOSTNotFound struct {
}

// IsSuccess returns true when this sonar call back using p o s t not found response has a 2xx status code
func (o *SonarCallBackUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this sonar call back using p o s t not found response has a 3xx status code
func (o *SonarCallBackUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this sonar call back using p o s t not found response has a 4xx status code
func (o *SonarCallBackUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this sonar call back using p o s t not found response has a 5xx status code
func (o *SonarCallBackUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this sonar call back using p o s t not found response a status code equal to that given
func (o *SonarCallBackUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the sonar call back using p o s t not found response
func (o *SonarCallBackUsingPOSTNotFound) Code() int {
	return 404
}

func (o *SonarCallBackUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTNotFound", 404)
}

func (o *SonarCallBackUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /callback/sonar][%d] sonarCallBackUsingPOSTNotFound", 404)
}

func (o *SonarCallBackUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
