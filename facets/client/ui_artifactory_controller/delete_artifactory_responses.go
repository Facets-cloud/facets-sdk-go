// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteArtifactoryReader is a Reader for the DeleteArtifactory structure.
type DeleteArtifactoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteArtifactoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteArtifactoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteArtifactoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteArtifactoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteArtifactoryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteArtifactoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}] deleteArtifactory", response, response.Code())
	}
}

// NewDeleteArtifactoryOK creates a DeleteArtifactoryOK with default headers values
func NewDeleteArtifactoryOK() *DeleteArtifactoryOK {
	return &DeleteArtifactoryOK{}
}

/*
DeleteArtifactoryOK describes a response with status code 200, with default header values.

OK
*/
type DeleteArtifactoryOK struct {
}

// IsSuccess returns true when this delete artifactory o k response has a 2xx status code
func (o *DeleteArtifactoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete artifactory o k response has a 3xx status code
func (o *DeleteArtifactoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifactory o k response has a 4xx status code
func (o *DeleteArtifactoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifactory o k response has a 5xx status code
func (o *DeleteArtifactoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifactory o k response a status code equal to that given
func (o *DeleteArtifactoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete artifactory o k response
func (o *DeleteArtifactoryOK) Code() int {
	return 200
}

func (o *DeleteArtifactoryOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryOK", 200)
}

func (o *DeleteArtifactoryOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryOK", 200)
}

func (o *DeleteArtifactoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteArtifactoryBadRequest creates a DeleteArtifactoryBadRequest with default headers values
func NewDeleteArtifactoryBadRequest() *DeleteArtifactoryBadRequest {
	return &DeleteArtifactoryBadRequest{}
}

/*
DeleteArtifactoryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteArtifactoryBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifactory bad request response has a 2xx status code
func (o *DeleteArtifactoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifactory bad request response has a 3xx status code
func (o *DeleteArtifactoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifactory bad request response has a 4xx status code
func (o *DeleteArtifactoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifactory bad request response has a 5xx status code
func (o *DeleteArtifactoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifactory bad request response a status code equal to that given
func (o *DeleteArtifactoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete artifactory bad request response
func (o *DeleteArtifactoryBadRequest) Code() int {
	return 400
}

func (o *DeleteArtifactoryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryBadRequest %s", 400, payload)
}

func (o *DeleteArtifactoryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryBadRequest %s", 400, payload)
}

func (o *DeleteArtifactoryBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactoryNotFound creates a DeleteArtifactoryNotFound with default headers values
func NewDeleteArtifactoryNotFound() *DeleteArtifactoryNotFound {
	return &DeleteArtifactoryNotFound{}
}

/*
DeleteArtifactoryNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteArtifactoryNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifactory not found response has a 2xx status code
func (o *DeleteArtifactoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifactory not found response has a 3xx status code
func (o *DeleteArtifactoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifactory not found response has a 4xx status code
func (o *DeleteArtifactoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifactory not found response has a 5xx status code
func (o *DeleteArtifactoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifactory not found response a status code equal to that given
func (o *DeleteArtifactoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete artifactory not found response
func (o *DeleteArtifactoryNotFound) Code() int {
	return 404
}

func (o *DeleteArtifactoryNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryNotFound %s", 404, payload)
}

func (o *DeleteArtifactoryNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryNotFound %s", 404, payload)
}

func (o *DeleteArtifactoryNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactoryMethodNotAllowed creates a DeleteArtifactoryMethodNotAllowed with default headers values
func NewDeleteArtifactoryMethodNotAllowed() *DeleteArtifactoryMethodNotAllowed {
	return &DeleteArtifactoryMethodNotAllowed{}
}

/*
DeleteArtifactoryMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteArtifactoryMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifactory method not allowed response has a 2xx status code
func (o *DeleteArtifactoryMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifactory method not allowed response has a 3xx status code
func (o *DeleteArtifactoryMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifactory method not allowed response has a 4xx status code
func (o *DeleteArtifactoryMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete artifactory method not allowed response has a 5xx status code
func (o *DeleteArtifactoryMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete artifactory method not allowed response a status code equal to that given
func (o *DeleteArtifactoryMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete artifactory method not allowed response
func (o *DeleteArtifactoryMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteArtifactoryMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryMethodNotAllowed %s", 405, payload)
}

func (o *DeleteArtifactoryMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryMethodNotAllowed %s", 405, payload)
}

func (o *DeleteArtifactoryMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactoryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteArtifactoryInternalServerError creates a DeleteArtifactoryInternalServerError with default headers values
func NewDeleteArtifactoryInternalServerError() *DeleteArtifactoryInternalServerError {
	return &DeleteArtifactoryInternalServerError{}
}

/*
DeleteArtifactoryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteArtifactoryInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete artifactory internal server error response has a 2xx status code
func (o *DeleteArtifactoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete artifactory internal server error response has a 3xx status code
func (o *DeleteArtifactoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete artifactory internal server error response has a 4xx status code
func (o *DeleteArtifactoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete artifactory internal server error response has a 5xx status code
func (o *DeleteArtifactoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete artifactory internal server error response a status code equal to that given
func (o *DeleteArtifactoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete artifactory internal server error response
func (o *DeleteArtifactoryInternalServerError) Code() int {
	return 500
}

func (o *DeleteArtifactoryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryInternalServerError %s", 500, payload)
}

func (o *DeleteArtifactoryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/v2/{artifactoryId}][%d] deleteArtifactoryInternalServerError %s", 500, payload)
}

func (o *DeleteArtifactoryInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteArtifactoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
