// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewCreateBasicDockerArtifactoryUsingPOSTParams creates a new CreateBasicDockerArtifactoryUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewCreateBasicDockerArtifactoryUsingPOSTParams() *CreateBasicDockerArtifactoryUsingPOSTParams {
	return &CreateBasicDockerArtifactoryUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewCreateBasicDockerArtifactoryUsingPOSTParamsWithTimeout creates a new CreateBasicDockerArtifactoryUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewCreateBasicDockerArtifactoryUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateBasicDockerArtifactoryUsingPOSTParams {
	return &CreateBasicDockerArtifactoryUsingPOSTParams{
		timeout: timeout,
	}
}

// NewCreateBasicDockerArtifactoryUsingPOSTParamsWithContext creates a new CreateBasicDockerArtifactoryUsingPOSTParams object
// with the ability to set a context for a request.
func NewCreateBasicDockerArtifactoryUsingPOSTParamsWithContext(ctx context.Context) *CreateBasicDockerArtifactoryUsingPOSTParams {
	return &CreateBasicDockerArtifactoryUsingPOSTParams{
		Context: ctx,
	}
}

// NewCreateBasicDockerArtifactoryUsingPOSTParamsWithHTTPClient creates a new CreateBasicDockerArtifactoryUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewCreateBasicDockerArtifactoryUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateBasicDockerArtifactoryUsingPOSTParams {
	return &CreateBasicDockerArtifactoryUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
CreateBasicDockerArtifactoryUsingPOSTParams contains all the parameters to send to the API endpoint

	for the create basic docker artifactory using p o s t operation.

	Typically these are written to a http.Request.
*/
type CreateBasicDockerArtifactoryUsingPOSTParams struct {

	/* BasicDockerDTO.

	   basicDockerDTO
	*/
	BasicDockerDTO *models.BasicDockerDTO

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the create basic docker artifactory using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) WithDefaults() *CreateBasicDockerArtifactoryUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the create basic docker artifactory using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateBasicDockerArtifactoryUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) WithContext(ctx context.Context) *CreateBasicDockerArtifactoryUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateBasicDockerArtifactoryUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBasicDockerDTO adds the basicDockerDTO to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) WithBasicDockerDTO(basicDockerDTO *models.BasicDockerDTO) *CreateBasicDockerArtifactoryUsingPOSTParams {
	o.SetBasicDockerDTO(basicDockerDTO)
	return o
}

// SetBasicDockerDTO adds the basicDockerDTO to the create basic docker artifactory using p o s t params
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) SetBasicDockerDTO(basicDockerDTO *models.BasicDockerDTO) {
	o.BasicDockerDTO = basicDockerDTO
}

// WriteToRequest writes these params to a swagger request
func (o *CreateBasicDockerArtifactoryUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.BasicDockerDTO != nil {
		if err := r.SetBodyParam(o.BasicDockerDTO); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
