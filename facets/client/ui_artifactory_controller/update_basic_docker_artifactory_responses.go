// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateBasicDockerArtifactoryReader is a Reader for the UpdateBasicDockerArtifactory structure.
type UpdateBasicDockerArtifactoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBasicDockerArtifactoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBasicDockerArtifactoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBasicDockerArtifactoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBasicDockerArtifactoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateBasicDockerArtifactoryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBasicDockerArtifactoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifactories/others/{artifactoryId}] updateBasicDockerArtifactory", response, response.Code())
	}
}

// NewUpdateBasicDockerArtifactoryOK creates a UpdateBasicDockerArtifactoryOK with default headers values
func NewUpdateBasicDockerArtifactoryOK() *UpdateBasicDockerArtifactoryOK {
	return &UpdateBasicDockerArtifactoryOK{}
}

/*
UpdateBasicDockerArtifactoryOK describes a response with status code 200, with default header values.

OK
*/
type UpdateBasicDockerArtifactoryOK struct {
	Payload *models.BasicDockerArtifactory
}

// IsSuccess returns true when this update basic docker artifactory o k response has a 2xx status code
func (o *UpdateBasicDockerArtifactoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update basic docker artifactory o k response has a 3xx status code
func (o *UpdateBasicDockerArtifactoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic docker artifactory o k response has a 4xx status code
func (o *UpdateBasicDockerArtifactoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update basic docker artifactory o k response has a 5xx status code
func (o *UpdateBasicDockerArtifactoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic docker artifactory o k response a status code equal to that given
func (o *UpdateBasicDockerArtifactoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update basic docker artifactory o k response
func (o *UpdateBasicDockerArtifactoryOK) Code() int {
	return 200
}

func (o *UpdateBasicDockerArtifactoryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryOK %s", 200, payload)
}

func (o *UpdateBasicDockerArtifactoryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryOK %s", 200, payload)
}

func (o *UpdateBasicDockerArtifactoryOK) GetPayload() *models.BasicDockerArtifactory {
	return o.Payload
}

func (o *UpdateBasicDockerArtifactoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BasicDockerArtifactory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBasicDockerArtifactoryBadRequest creates a UpdateBasicDockerArtifactoryBadRequest with default headers values
func NewUpdateBasicDockerArtifactoryBadRequest() *UpdateBasicDockerArtifactoryBadRequest {
	return &UpdateBasicDockerArtifactoryBadRequest{}
}

/*
UpdateBasicDockerArtifactoryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBasicDockerArtifactoryBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update basic docker artifactory bad request response has a 2xx status code
func (o *UpdateBasicDockerArtifactoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic docker artifactory bad request response has a 3xx status code
func (o *UpdateBasicDockerArtifactoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic docker artifactory bad request response has a 4xx status code
func (o *UpdateBasicDockerArtifactoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update basic docker artifactory bad request response has a 5xx status code
func (o *UpdateBasicDockerArtifactoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic docker artifactory bad request response a status code equal to that given
func (o *UpdateBasicDockerArtifactoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update basic docker artifactory bad request response
func (o *UpdateBasicDockerArtifactoryBadRequest) Code() int {
	return 400
}

func (o *UpdateBasicDockerArtifactoryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryBadRequest %s", 400, payload)
}

func (o *UpdateBasicDockerArtifactoryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryBadRequest %s", 400, payload)
}

func (o *UpdateBasicDockerArtifactoryBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBasicDockerArtifactoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBasicDockerArtifactoryNotFound creates a UpdateBasicDockerArtifactoryNotFound with default headers values
func NewUpdateBasicDockerArtifactoryNotFound() *UpdateBasicDockerArtifactoryNotFound {
	return &UpdateBasicDockerArtifactoryNotFound{}
}

/*
UpdateBasicDockerArtifactoryNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBasicDockerArtifactoryNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update basic docker artifactory not found response has a 2xx status code
func (o *UpdateBasicDockerArtifactoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic docker artifactory not found response has a 3xx status code
func (o *UpdateBasicDockerArtifactoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic docker artifactory not found response has a 4xx status code
func (o *UpdateBasicDockerArtifactoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update basic docker artifactory not found response has a 5xx status code
func (o *UpdateBasicDockerArtifactoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic docker artifactory not found response a status code equal to that given
func (o *UpdateBasicDockerArtifactoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update basic docker artifactory not found response
func (o *UpdateBasicDockerArtifactoryNotFound) Code() int {
	return 404
}

func (o *UpdateBasicDockerArtifactoryNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryNotFound %s", 404, payload)
}

func (o *UpdateBasicDockerArtifactoryNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryNotFound %s", 404, payload)
}

func (o *UpdateBasicDockerArtifactoryNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBasicDockerArtifactoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBasicDockerArtifactoryMethodNotAllowed creates a UpdateBasicDockerArtifactoryMethodNotAllowed with default headers values
func NewUpdateBasicDockerArtifactoryMethodNotAllowed() *UpdateBasicDockerArtifactoryMethodNotAllowed {
	return &UpdateBasicDockerArtifactoryMethodNotAllowed{}
}

/*
UpdateBasicDockerArtifactoryMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateBasicDockerArtifactoryMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update basic docker artifactory method not allowed response has a 2xx status code
func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic docker artifactory method not allowed response has a 3xx status code
func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic docker artifactory method not allowed response has a 4xx status code
func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update basic docker artifactory method not allowed response has a 5xx status code
func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update basic docker artifactory method not allowed response a status code equal to that given
func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update basic docker artifactory method not allowed response
func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryMethodNotAllowed %s", 405, payload)
}

func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryMethodNotAllowed %s", 405, payload)
}

func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBasicDockerArtifactoryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBasicDockerArtifactoryInternalServerError creates a UpdateBasicDockerArtifactoryInternalServerError with default headers values
func NewUpdateBasicDockerArtifactoryInternalServerError() *UpdateBasicDockerArtifactoryInternalServerError {
	return &UpdateBasicDockerArtifactoryInternalServerError{}
}

/*
UpdateBasicDockerArtifactoryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateBasicDockerArtifactoryInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update basic docker artifactory internal server error response has a 2xx status code
func (o *UpdateBasicDockerArtifactoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update basic docker artifactory internal server error response has a 3xx status code
func (o *UpdateBasicDockerArtifactoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update basic docker artifactory internal server error response has a 4xx status code
func (o *UpdateBasicDockerArtifactoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update basic docker artifactory internal server error response has a 5xx status code
func (o *UpdateBasicDockerArtifactoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update basic docker artifactory internal server error response a status code equal to that given
func (o *UpdateBasicDockerArtifactoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update basic docker artifactory internal server error response
func (o *UpdateBasicDockerArtifactoryInternalServerError) Code() int {
	return 500
}

func (o *UpdateBasicDockerArtifactoryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryInternalServerError %s", 500, payload)
}

func (o *UpdateBasicDockerArtifactoryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/others/{artifactoryId}][%d] updateBasicDockerArtifactoryInternalServerError %s", 500, payload)
}

func (o *UpdateBasicDockerArtifactoryInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateBasicDockerArtifactoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
