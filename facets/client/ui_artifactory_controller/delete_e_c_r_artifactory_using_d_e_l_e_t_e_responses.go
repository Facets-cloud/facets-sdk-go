// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteECRArtifactoryUsingDELETEReader is a Reader for the DeleteECRArtifactoryUsingDELETE structure.
type DeleteECRArtifactoryUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteECRArtifactoryUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteECRArtifactoryUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteECRArtifactoryUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteECRArtifactoryUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteECRArtifactoryUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/artifactories/{artifactoryId}] deleteECRArtifactoryUsingDELETE", response, response.Code())
	}
}

// NewDeleteECRArtifactoryUsingDELETEOK creates a DeleteECRArtifactoryUsingDELETEOK with default headers values
func NewDeleteECRArtifactoryUsingDELETEOK() *DeleteECRArtifactoryUsingDELETEOK {
	return &DeleteECRArtifactoryUsingDELETEOK{}
}

/*
DeleteECRArtifactoryUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type DeleteECRArtifactoryUsingDELETEOK struct {
	Payload bool
}

// IsSuccess returns true when this delete e c r artifactory using d e l e t e o k response has a 2xx status code
func (o *DeleteECRArtifactoryUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete e c r artifactory using d e l e t e o k response has a 3xx status code
func (o *DeleteECRArtifactoryUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete e c r artifactory using d e l e t e o k response has a 4xx status code
func (o *DeleteECRArtifactoryUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete e c r artifactory using d e l e t e o k response has a 5xx status code
func (o *DeleteECRArtifactoryUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete e c r artifactory using d e l e t e o k response a status code equal to that given
func (o *DeleteECRArtifactoryUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete e c r artifactory using d e l e t e o k response
func (o *DeleteECRArtifactoryUsingDELETEOK) Code() int {
	return 200
}

func (o *DeleteECRArtifactoryUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETEOK %s", 200, payload)
}

func (o *DeleteECRArtifactoryUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETEOK %s", 200, payload)
}

func (o *DeleteECRArtifactoryUsingDELETEOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteECRArtifactoryUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteECRArtifactoryUsingDELETENoContent creates a DeleteECRArtifactoryUsingDELETENoContent with default headers values
func NewDeleteECRArtifactoryUsingDELETENoContent() *DeleteECRArtifactoryUsingDELETENoContent {
	return &DeleteECRArtifactoryUsingDELETENoContent{}
}

/*
DeleteECRArtifactoryUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteECRArtifactoryUsingDELETENoContent struct {
}

// IsSuccess returns true when this delete e c r artifactory using d e l e t e no content response has a 2xx status code
func (o *DeleteECRArtifactoryUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete e c r artifactory using d e l e t e no content response has a 3xx status code
func (o *DeleteECRArtifactoryUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete e c r artifactory using d e l e t e no content response has a 4xx status code
func (o *DeleteECRArtifactoryUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete e c r artifactory using d e l e t e no content response has a 5xx status code
func (o *DeleteECRArtifactoryUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete e c r artifactory using d e l e t e no content response a status code equal to that given
func (o *DeleteECRArtifactoryUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete e c r artifactory using d e l e t e no content response
func (o *DeleteECRArtifactoryUsingDELETENoContent) Code() int {
	return 204
}

func (o *DeleteECRArtifactoryUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETENoContent", 204)
}

func (o *DeleteECRArtifactoryUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETENoContent", 204)
}

func (o *DeleteECRArtifactoryUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteECRArtifactoryUsingDELETEUnauthorized creates a DeleteECRArtifactoryUsingDELETEUnauthorized with default headers values
func NewDeleteECRArtifactoryUsingDELETEUnauthorized() *DeleteECRArtifactoryUsingDELETEUnauthorized {
	return &DeleteECRArtifactoryUsingDELETEUnauthorized{}
}

/*
DeleteECRArtifactoryUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteECRArtifactoryUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete e c r artifactory using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete e c r artifactory using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete e c r artifactory using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete e c r artifactory using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete e c r artifactory using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete e c r artifactory using d e l e t e unauthorized response
func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETEUnauthorized", 401)
}

func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETEUnauthorized", 401)
}

func (o *DeleteECRArtifactoryUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteECRArtifactoryUsingDELETEForbidden creates a DeleteECRArtifactoryUsingDELETEForbidden with default headers values
func NewDeleteECRArtifactoryUsingDELETEForbidden() *DeleteECRArtifactoryUsingDELETEForbidden {
	return &DeleteECRArtifactoryUsingDELETEForbidden{}
}

/*
DeleteECRArtifactoryUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteECRArtifactoryUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete e c r artifactory using d e l e t e forbidden response has a 2xx status code
func (o *DeleteECRArtifactoryUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete e c r artifactory using d e l e t e forbidden response has a 3xx status code
func (o *DeleteECRArtifactoryUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete e c r artifactory using d e l e t e forbidden response has a 4xx status code
func (o *DeleteECRArtifactoryUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete e c r artifactory using d e l e t e forbidden response has a 5xx status code
func (o *DeleteECRArtifactoryUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete e c r artifactory using d e l e t e forbidden response a status code equal to that given
func (o *DeleteECRArtifactoryUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete e c r artifactory using d e l e t e forbidden response
func (o *DeleteECRArtifactoryUsingDELETEForbidden) Code() int {
	return 403
}

func (o *DeleteECRArtifactoryUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETEForbidden", 403)
}

func (o *DeleteECRArtifactoryUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/artifactories/{artifactoryId}][%d] deleteECRArtifactoryUsingDELETEForbidden", 403)
}

func (o *DeleteECRArtifactoryUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
