// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetRepositoriesReader is a Reader for the GetRepositories structure.
type GetRepositoriesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRepositoriesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoriesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetRepositoriesMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRepositoriesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos] getRepositories", response, response.Code())
	}
}

// NewGetRepositoriesOK creates a GetRepositoriesOK with default headers values
func NewGetRepositoriesOK() *GetRepositoriesOK {
	return &GetRepositoriesOK{}
}

/*
GetRepositoriesOK describes a response with status code 200, with default header values.

OK
*/
type GetRepositoriesOK struct {
	Payload []string
}

// IsSuccess returns true when this get repositories o k response has a 2xx status code
func (o *GetRepositoriesOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get repositories o k response has a 3xx status code
func (o *GetRepositoriesOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories o k response has a 4xx status code
func (o *GetRepositoriesOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get repositories o k response has a 5xx status code
func (o *GetRepositoriesOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories o k response a status code equal to that given
func (o *GetRepositoriesOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get repositories o k response
func (o *GetRepositoriesOK) Code() int {
	return 200
}

func (o *GetRepositoriesOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesOK %s", 200, payload)
}

func (o *GetRepositoriesOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesOK %s", 200, payload)
}

func (o *GetRepositoriesOK) GetPayload() []string {
	return o.Payload
}

func (o *GetRepositoriesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesBadRequest creates a GetRepositoriesBadRequest with default headers values
func NewGetRepositoriesBadRequest() *GetRepositoriesBadRequest {
	return &GetRepositoriesBadRequest{}
}

/*
GetRepositoriesBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRepositoriesBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories bad request response has a 2xx status code
func (o *GetRepositoriesBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories bad request response has a 3xx status code
func (o *GetRepositoriesBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories bad request response has a 4xx status code
func (o *GetRepositoriesBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories bad request response has a 5xx status code
func (o *GetRepositoriesBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories bad request response a status code equal to that given
func (o *GetRepositoriesBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get repositories bad request response
func (o *GetRepositoriesBadRequest) Code() int {
	return 400
}

func (o *GetRepositoriesBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesBadRequest %s", 400, payload)
}

func (o *GetRepositoriesBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesBadRequest %s", 400, payload)
}

func (o *GetRepositoriesBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesNotFound creates a GetRepositoriesNotFound with default headers values
func NewGetRepositoriesNotFound() *GetRepositoriesNotFound {
	return &GetRepositoriesNotFound{}
}

/*
GetRepositoriesNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRepositoriesNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories not found response has a 2xx status code
func (o *GetRepositoriesNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories not found response has a 3xx status code
func (o *GetRepositoriesNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories not found response has a 4xx status code
func (o *GetRepositoriesNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories not found response has a 5xx status code
func (o *GetRepositoriesNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories not found response a status code equal to that given
func (o *GetRepositoriesNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get repositories not found response
func (o *GetRepositoriesNotFound) Code() int {
	return 404
}

func (o *GetRepositoriesNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesNotFound %s", 404, payload)
}

func (o *GetRepositoriesNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesNotFound %s", 404, payload)
}

func (o *GetRepositoriesNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesMethodNotAllowed creates a GetRepositoriesMethodNotAllowed with default headers values
func NewGetRepositoriesMethodNotAllowed() *GetRepositoriesMethodNotAllowed {
	return &GetRepositoriesMethodNotAllowed{}
}

/*
GetRepositoriesMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetRepositoriesMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories method not allowed response has a 2xx status code
func (o *GetRepositoriesMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories method not allowed response has a 3xx status code
func (o *GetRepositoriesMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories method not allowed response has a 4xx status code
func (o *GetRepositoriesMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories method not allowed response has a 5xx status code
func (o *GetRepositoriesMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories method not allowed response a status code equal to that given
func (o *GetRepositoriesMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get repositories method not allowed response
func (o *GetRepositoriesMethodNotAllowed) Code() int {
	return 405
}

func (o *GetRepositoriesMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesMethodNotAllowed %s", 405, payload)
}

func (o *GetRepositoriesMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesMethodNotAllowed %s", 405, payload)
}

func (o *GetRepositoriesMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesInternalServerError creates a GetRepositoriesInternalServerError with default headers values
func NewGetRepositoriesInternalServerError() *GetRepositoriesInternalServerError {
	return &GetRepositoriesInternalServerError{}
}

/*
GetRepositoriesInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRepositoriesInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories internal server error response has a 2xx status code
func (o *GetRepositoriesInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories internal server error response has a 3xx status code
func (o *GetRepositoriesInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories internal server error response has a 4xx status code
func (o *GetRepositoriesInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get repositories internal server error response has a 5xx status code
func (o *GetRepositoriesInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get repositories internal server error response a status code equal to that given
func (o *GetRepositoriesInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get repositories internal server error response
func (o *GetRepositoriesInternalServerError) Code() int {
	return 500
}

func (o *GetRepositoriesInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesInternalServerError %s", 500, payload)
}

func (o *GetRepositoriesInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/repos][%d] getRepositoriesInternalServerError %s", 500, payload)
}

func (o *GetRepositoriesInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
