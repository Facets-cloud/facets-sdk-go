// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateECRArtifactoryReader is a Reader for the UpdateECRArtifactory structure.
type UpdateECRArtifactoryReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateECRArtifactoryReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateECRArtifactoryOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateECRArtifactoryBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateECRArtifactoryNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewUpdateECRArtifactoryMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateECRArtifactoryInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifactories/{artifactoryId}] updateECRArtifactory", response, response.Code())
	}
}

// NewUpdateECRArtifactoryOK creates a UpdateECRArtifactoryOK with default headers values
func NewUpdateECRArtifactoryOK() *UpdateECRArtifactoryOK {
	return &UpdateECRArtifactoryOK{}
}

/*
UpdateECRArtifactoryOK describes a response with status code 200, with default header values.

OK
*/
type UpdateECRArtifactoryOK struct {
	Payload *models.ECRArtifactory
}

// IsSuccess returns true when this update e c r artifactory o k response has a 2xx status code
func (o *UpdateECRArtifactoryOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update e c r artifactory o k response has a 3xx status code
func (o *UpdateECRArtifactoryOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update e c r artifactory o k response has a 4xx status code
func (o *UpdateECRArtifactoryOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update e c r artifactory o k response has a 5xx status code
func (o *UpdateECRArtifactoryOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update e c r artifactory o k response a status code equal to that given
func (o *UpdateECRArtifactoryOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update e c r artifactory o k response
func (o *UpdateECRArtifactoryOK) Code() int {
	return 200
}

func (o *UpdateECRArtifactoryOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryOK %s", 200, payload)
}

func (o *UpdateECRArtifactoryOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryOK %s", 200, payload)
}

func (o *UpdateECRArtifactoryOK) GetPayload() *models.ECRArtifactory {
	return o.Payload
}

func (o *UpdateECRArtifactoryOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ECRArtifactory)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateECRArtifactoryBadRequest creates a UpdateECRArtifactoryBadRequest with default headers values
func NewUpdateECRArtifactoryBadRequest() *UpdateECRArtifactoryBadRequest {
	return &UpdateECRArtifactoryBadRequest{}
}

/*
UpdateECRArtifactoryBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateECRArtifactoryBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update e c r artifactory bad request response has a 2xx status code
func (o *UpdateECRArtifactoryBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update e c r artifactory bad request response has a 3xx status code
func (o *UpdateECRArtifactoryBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update e c r artifactory bad request response has a 4xx status code
func (o *UpdateECRArtifactoryBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this update e c r artifactory bad request response has a 5xx status code
func (o *UpdateECRArtifactoryBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this update e c r artifactory bad request response a status code equal to that given
func (o *UpdateECRArtifactoryBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the update e c r artifactory bad request response
func (o *UpdateECRArtifactoryBadRequest) Code() int {
	return 400
}

func (o *UpdateECRArtifactoryBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryBadRequest %s", 400, payload)
}

func (o *UpdateECRArtifactoryBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryBadRequest %s", 400, payload)
}

func (o *UpdateECRArtifactoryBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateECRArtifactoryBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateECRArtifactoryNotFound creates a UpdateECRArtifactoryNotFound with default headers values
func NewUpdateECRArtifactoryNotFound() *UpdateECRArtifactoryNotFound {
	return &UpdateECRArtifactoryNotFound{}
}

/*
UpdateECRArtifactoryNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateECRArtifactoryNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update e c r artifactory not found response has a 2xx status code
func (o *UpdateECRArtifactoryNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update e c r artifactory not found response has a 3xx status code
func (o *UpdateECRArtifactoryNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update e c r artifactory not found response has a 4xx status code
func (o *UpdateECRArtifactoryNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update e c r artifactory not found response has a 5xx status code
func (o *UpdateECRArtifactoryNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update e c r artifactory not found response a status code equal to that given
func (o *UpdateECRArtifactoryNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update e c r artifactory not found response
func (o *UpdateECRArtifactoryNotFound) Code() int {
	return 404
}

func (o *UpdateECRArtifactoryNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryNotFound %s", 404, payload)
}

func (o *UpdateECRArtifactoryNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryNotFound %s", 404, payload)
}

func (o *UpdateECRArtifactoryNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateECRArtifactoryNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateECRArtifactoryMethodNotAllowed creates a UpdateECRArtifactoryMethodNotAllowed with default headers values
func NewUpdateECRArtifactoryMethodNotAllowed() *UpdateECRArtifactoryMethodNotAllowed {
	return &UpdateECRArtifactoryMethodNotAllowed{}
}

/*
UpdateECRArtifactoryMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type UpdateECRArtifactoryMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update e c r artifactory method not allowed response has a 2xx status code
func (o *UpdateECRArtifactoryMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update e c r artifactory method not allowed response has a 3xx status code
func (o *UpdateECRArtifactoryMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update e c r artifactory method not allowed response has a 4xx status code
func (o *UpdateECRArtifactoryMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this update e c r artifactory method not allowed response has a 5xx status code
func (o *UpdateECRArtifactoryMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this update e c r artifactory method not allowed response a status code equal to that given
func (o *UpdateECRArtifactoryMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the update e c r artifactory method not allowed response
func (o *UpdateECRArtifactoryMethodNotAllowed) Code() int {
	return 405
}

func (o *UpdateECRArtifactoryMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryMethodNotAllowed %s", 405, payload)
}

func (o *UpdateECRArtifactoryMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryMethodNotAllowed %s", 405, payload)
}

func (o *UpdateECRArtifactoryMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateECRArtifactoryMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateECRArtifactoryInternalServerError creates a UpdateECRArtifactoryInternalServerError with default headers values
func NewUpdateECRArtifactoryInternalServerError() *UpdateECRArtifactoryInternalServerError {
	return &UpdateECRArtifactoryInternalServerError{}
}

/*
UpdateECRArtifactoryInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UpdateECRArtifactoryInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this update e c r artifactory internal server error response has a 2xx status code
func (o *UpdateECRArtifactoryInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update e c r artifactory internal server error response has a 3xx status code
func (o *UpdateECRArtifactoryInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update e c r artifactory internal server error response has a 4xx status code
func (o *UpdateECRArtifactoryInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this update e c r artifactory internal server error response has a 5xx status code
func (o *UpdateECRArtifactoryInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this update e c r artifactory internal server error response a status code equal to that given
func (o *UpdateECRArtifactoryInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the update e c r artifactory internal server error response
func (o *UpdateECRArtifactoryInternalServerError) Code() int {
	return 500
}

func (o *UpdateECRArtifactoryInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryInternalServerError %s", 500, payload)
}

func (o *UpdateECRArtifactoryInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}][%d] updateECRArtifactoryInternalServerError %s", 500, payload)
}

func (o *UpdateECRArtifactoryInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *UpdateECRArtifactoryInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
