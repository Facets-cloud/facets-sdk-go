// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetTagsByArtifactoryNameUsingGETReader is a Reader for the GetTagsByArtifactoryNameUsingGET structure.
type GetTagsByArtifactoryNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsByArtifactoryNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsByArtifactoryNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTagsByArtifactoryNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTagsByArtifactoryNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTagsByArtifactoryNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactories/name/{name}/tags] getTagsByArtifactoryNameUsingGET", response, response.Code())
	}
}

// NewGetTagsByArtifactoryNameUsingGETOK creates a GetTagsByArtifactoryNameUsingGETOK with default headers values
func NewGetTagsByArtifactoryNameUsingGETOK() *GetTagsByArtifactoryNameUsingGETOK {
	return &GetTagsByArtifactoryNameUsingGETOK{}
}

/*
GetTagsByArtifactoryNameUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetTagsByArtifactoryNameUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get tags by artifactory name using g e t o k response has a 2xx status code
func (o *GetTagsByArtifactoryNameUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags by artifactory name using g e t o k response has a 3xx status code
func (o *GetTagsByArtifactoryNameUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name using g e t o k response has a 4xx status code
func (o *GetTagsByArtifactoryNameUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags by artifactory name using g e t o k response has a 5xx status code
func (o *GetTagsByArtifactoryNameUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name using g e t o k response a status code equal to that given
func (o *GetTagsByArtifactoryNameUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tags by artifactory name using g e t o k response
func (o *GetTagsByArtifactoryNameUsingGETOK) Code() int {
	return 200
}

func (o *GetTagsByArtifactoryNameUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETOK %s", 200, payload)
}

func (o *GetTagsByArtifactoryNameUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETOK %s", 200, payload)
}

func (o *GetTagsByArtifactoryNameUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetTagsByArtifactoryNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsByArtifactoryNameUsingGETUnauthorized creates a GetTagsByArtifactoryNameUsingGETUnauthorized with default headers values
func NewGetTagsByArtifactoryNameUsingGETUnauthorized() *GetTagsByArtifactoryNameUsingGETUnauthorized {
	return &GetTagsByArtifactoryNameUsingGETUnauthorized{}
}

/*
GetTagsByArtifactoryNameUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTagsByArtifactoryNameUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get tags by artifactory name using g e t unauthorized response has a 2xx status code
func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by artifactory name using g e t unauthorized response has a 3xx status code
func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name using g e t unauthorized response has a 4xx status code
func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags by artifactory name using g e t unauthorized response has a 5xx status code
func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name using g e t unauthorized response a status code equal to that given
func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get tags by artifactory name using g e t unauthorized response
func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETUnauthorized", 401)
}

func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETUnauthorized", 401)
}

func (o *GetTagsByArtifactoryNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsByArtifactoryNameUsingGETForbidden creates a GetTagsByArtifactoryNameUsingGETForbidden with default headers values
func NewGetTagsByArtifactoryNameUsingGETForbidden() *GetTagsByArtifactoryNameUsingGETForbidden {
	return &GetTagsByArtifactoryNameUsingGETForbidden{}
}

/*
GetTagsByArtifactoryNameUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTagsByArtifactoryNameUsingGETForbidden struct {
}

// IsSuccess returns true when this get tags by artifactory name using g e t forbidden response has a 2xx status code
func (o *GetTagsByArtifactoryNameUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by artifactory name using g e t forbidden response has a 3xx status code
func (o *GetTagsByArtifactoryNameUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name using g e t forbidden response has a 4xx status code
func (o *GetTagsByArtifactoryNameUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags by artifactory name using g e t forbidden response has a 5xx status code
func (o *GetTagsByArtifactoryNameUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name using g e t forbidden response a status code equal to that given
func (o *GetTagsByArtifactoryNameUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get tags by artifactory name using g e t forbidden response
func (o *GetTagsByArtifactoryNameUsingGETForbidden) Code() int {
	return 403
}

func (o *GetTagsByArtifactoryNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETForbidden", 403)
}

func (o *GetTagsByArtifactoryNameUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETForbidden", 403)
}

func (o *GetTagsByArtifactoryNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsByArtifactoryNameUsingGETNotFound creates a GetTagsByArtifactoryNameUsingGETNotFound with default headers values
func NewGetTagsByArtifactoryNameUsingGETNotFound() *GetTagsByArtifactoryNameUsingGETNotFound {
	return &GetTagsByArtifactoryNameUsingGETNotFound{}
}

/*
GetTagsByArtifactoryNameUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTagsByArtifactoryNameUsingGETNotFound struct {
}

// IsSuccess returns true when this get tags by artifactory name using g e t not found response has a 2xx status code
func (o *GetTagsByArtifactoryNameUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by artifactory name using g e t not found response has a 3xx status code
func (o *GetTagsByArtifactoryNameUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name using g e t not found response has a 4xx status code
func (o *GetTagsByArtifactoryNameUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags by artifactory name using g e t not found response has a 5xx status code
func (o *GetTagsByArtifactoryNameUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name using g e t not found response a status code equal to that given
func (o *GetTagsByArtifactoryNameUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tags by artifactory name using g e t not found response
func (o *GetTagsByArtifactoryNameUsingGETNotFound) Code() int {
	return 404
}

func (o *GetTagsByArtifactoryNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETNotFound", 404)
}

func (o *GetTagsByArtifactoryNameUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameUsingGETNotFound", 404)
}

func (o *GetTagsByArtifactoryNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
