// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AssociateStacksReader is a Reader for the AssociateStacks structure.
type AssociateStacksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AssociateStacksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAssociateStacksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAssociateStacksBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAssociateStacksNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAssociateStacksMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAssociateStacksInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects] associateStacks", response, response.Code())
	}
}

// NewAssociateStacksOK creates a AssociateStacksOK with default headers values
func NewAssociateStacksOK() *AssociateStacksOK {
	return &AssociateStacksOK{}
}

/*
AssociateStacksOK describes a response with status code 200, with default header values.

OK
*/
type AssociateStacksOK struct {
}

// IsSuccess returns true when this associate stacks o k response has a 2xx status code
func (o *AssociateStacksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this associate stacks o k response has a 3xx status code
func (o *AssociateStacksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this associate stacks o k response has a 4xx status code
func (o *AssociateStacksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this associate stacks o k response has a 5xx status code
func (o *AssociateStacksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this associate stacks o k response a status code equal to that given
func (o *AssociateStacksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the associate stacks o k response
func (o *AssociateStacksOK) Code() int {
	return 200
}

func (o *AssociateStacksOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksOK", 200)
}

func (o *AssociateStacksOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksOK", 200)
}

func (o *AssociateStacksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAssociateStacksBadRequest creates a AssociateStacksBadRequest with default headers values
func NewAssociateStacksBadRequest() *AssociateStacksBadRequest {
	return &AssociateStacksBadRequest{}
}

/*
AssociateStacksBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AssociateStacksBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this associate stacks bad request response has a 2xx status code
func (o *AssociateStacksBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this associate stacks bad request response has a 3xx status code
func (o *AssociateStacksBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this associate stacks bad request response has a 4xx status code
func (o *AssociateStacksBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this associate stacks bad request response has a 5xx status code
func (o *AssociateStacksBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this associate stacks bad request response a status code equal to that given
func (o *AssociateStacksBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the associate stacks bad request response
func (o *AssociateStacksBadRequest) Code() int {
	return 400
}

func (o *AssociateStacksBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksBadRequest %s", 400, payload)
}

func (o *AssociateStacksBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksBadRequest %s", 400, payload)
}

func (o *AssociateStacksBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AssociateStacksBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssociateStacksNotFound creates a AssociateStacksNotFound with default headers values
func NewAssociateStacksNotFound() *AssociateStacksNotFound {
	return &AssociateStacksNotFound{}
}

/*
AssociateStacksNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AssociateStacksNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this associate stacks not found response has a 2xx status code
func (o *AssociateStacksNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this associate stacks not found response has a 3xx status code
func (o *AssociateStacksNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this associate stacks not found response has a 4xx status code
func (o *AssociateStacksNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this associate stacks not found response has a 5xx status code
func (o *AssociateStacksNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this associate stacks not found response a status code equal to that given
func (o *AssociateStacksNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the associate stacks not found response
func (o *AssociateStacksNotFound) Code() int {
	return 404
}

func (o *AssociateStacksNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksNotFound %s", 404, payload)
}

func (o *AssociateStacksNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksNotFound %s", 404, payload)
}

func (o *AssociateStacksNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AssociateStacksNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssociateStacksMethodNotAllowed creates a AssociateStacksMethodNotAllowed with default headers values
func NewAssociateStacksMethodNotAllowed() *AssociateStacksMethodNotAllowed {
	return &AssociateStacksMethodNotAllowed{}
}

/*
AssociateStacksMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AssociateStacksMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this associate stacks method not allowed response has a 2xx status code
func (o *AssociateStacksMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this associate stacks method not allowed response has a 3xx status code
func (o *AssociateStacksMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this associate stacks method not allowed response has a 4xx status code
func (o *AssociateStacksMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this associate stacks method not allowed response has a 5xx status code
func (o *AssociateStacksMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this associate stacks method not allowed response a status code equal to that given
func (o *AssociateStacksMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the associate stacks method not allowed response
func (o *AssociateStacksMethodNotAllowed) Code() int {
	return 405
}

func (o *AssociateStacksMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksMethodNotAllowed %s", 405, payload)
}

func (o *AssociateStacksMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksMethodNotAllowed %s", 405, payload)
}

func (o *AssociateStacksMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AssociateStacksMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAssociateStacksInternalServerError creates a AssociateStacksInternalServerError with default headers values
func NewAssociateStacksInternalServerError() *AssociateStacksInternalServerError {
	return &AssociateStacksInternalServerError{}
}

/*
AssociateStacksInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AssociateStacksInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this associate stacks internal server error response has a 2xx status code
func (o *AssociateStacksInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this associate stacks internal server error response has a 3xx status code
func (o *AssociateStacksInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this associate stacks internal server error response has a 4xx status code
func (o *AssociateStacksInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this associate stacks internal server error response has a 5xx status code
func (o *AssociateStacksInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this associate stacks internal server error response a status code equal to that given
func (o *AssociateStacksInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the associate stacks internal server error response
func (o *AssociateStacksInternalServerError) Code() int {
	return 500
}

func (o *AssociateStacksInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksInternalServerError %s", 500, payload)
}

func (o *AssociateStacksInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/{artifactoryId}/associate-projects][%d] associateStacksInternalServerError %s", 500, payload)
}

func (o *AssociateStacksInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AssociateStacksInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
