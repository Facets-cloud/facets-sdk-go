// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RequestArtifactoryLinkingReader is a Reader for the RequestArtifactoryLinking structure.
type RequestArtifactoryLinkingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RequestArtifactoryLinkingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRequestArtifactoryLinkingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRequestArtifactoryLinkingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRequestArtifactoryLinkingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewRequestArtifactoryLinkingMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRequestArtifactoryLinkingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/artifactories/link-container-registry] requestArtifactoryLinking", response, response.Code())
	}
}

// NewRequestArtifactoryLinkingOK creates a RequestArtifactoryLinkingOK with default headers values
func NewRequestArtifactoryLinkingOK() *RequestArtifactoryLinkingOK {
	return &RequestArtifactoryLinkingOK{}
}

/*
RequestArtifactoryLinkingOK describes a response with status code 200, with default header values.

OK
*/
type RequestArtifactoryLinkingOK struct {
	Payload *models.OneTimeWebhook
}

// IsSuccess returns true when this request artifactory linking o k response has a 2xx status code
func (o *RequestArtifactoryLinkingOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this request artifactory linking o k response has a 3xx status code
func (o *RequestArtifactoryLinkingOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request artifactory linking o k response has a 4xx status code
func (o *RequestArtifactoryLinkingOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this request artifactory linking o k response has a 5xx status code
func (o *RequestArtifactoryLinkingOK) IsServerError() bool {
	return false
}

// IsCode returns true when this request artifactory linking o k response a status code equal to that given
func (o *RequestArtifactoryLinkingOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the request artifactory linking o k response
func (o *RequestArtifactoryLinkingOK) Code() int {
	return 200
}

func (o *RequestArtifactoryLinkingOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingOK %s", 200, payload)
}

func (o *RequestArtifactoryLinkingOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingOK %s", 200, payload)
}

func (o *RequestArtifactoryLinkingOK) GetPayload() *models.OneTimeWebhook {
	return o.Payload
}

func (o *RequestArtifactoryLinkingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OneTimeWebhook)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestArtifactoryLinkingBadRequest creates a RequestArtifactoryLinkingBadRequest with default headers values
func NewRequestArtifactoryLinkingBadRequest() *RequestArtifactoryLinkingBadRequest {
	return &RequestArtifactoryLinkingBadRequest{}
}

/*
RequestArtifactoryLinkingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RequestArtifactoryLinkingBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this request artifactory linking bad request response has a 2xx status code
func (o *RequestArtifactoryLinkingBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request artifactory linking bad request response has a 3xx status code
func (o *RequestArtifactoryLinkingBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request artifactory linking bad request response has a 4xx status code
func (o *RequestArtifactoryLinkingBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this request artifactory linking bad request response has a 5xx status code
func (o *RequestArtifactoryLinkingBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this request artifactory linking bad request response a status code equal to that given
func (o *RequestArtifactoryLinkingBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the request artifactory linking bad request response
func (o *RequestArtifactoryLinkingBadRequest) Code() int {
	return 400
}

func (o *RequestArtifactoryLinkingBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingBadRequest %s", 400, payload)
}

func (o *RequestArtifactoryLinkingBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingBadRequest %s", 400, payload)
}

func (o *RequestArtifactoryLinkingBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RequestArtifactoryLinkingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestArtifactoryLinkingNotFound creates a RequestArtifactoryLinkingNotFound with default headers values
func NewRequestArtifactoryLinkingNotFound() *RequestArtifactoryLinkingNotFound {
	return &RequestArtifactoryLinkingNotFound{}
}

/*
RequestArtifactoryLinkingNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RequestArtifactoryLinkingNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this request artifactory linking not found response has a 2xx status code
func (o *RequestArtifactoryLinkingNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request artifactory linking not found response has a 3xx status code
func (o *RequestArtifactoryLinkingNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request artifactory linking not found response has a 4xx status code
func (o *RequestArtifactoryLinkingNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this request artifactory linking not found response has a 5xx status code
func (o *RequestArtifactoryLinkingNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this request artifactory linking not found response a status code equal to that given
func (o *RequestArtifactoryLinkingNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the request artifactory linking not found response
func (o *RequestArtifactoryLinkingNotFound) Code() int {
	return 404
}

func (o *RequestArtifactoryLinkingNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingNotFound %s", 404, payload)
}

func (o *RequestArtifactoryLinkingNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingNotFound %s", 404, payload)
}

func (o *RequestArtifactoryLinkingNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RequestArtifactoryLinkingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestArtifactoryLinkingMethodNotAllowed creates a RequestArtifactoryLinkingMethodNotAllowed with default headers values
func NewRequestArtifactoryLinkingMethodNotAllowed() *RequestArtifactoryLinkingMethodNotAllowed {
	return &RequestArtifactoryLinkingMethodNotAllowed{}
}

/*
RequestArtifactoryLinkingMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type RequestArtifactoryLinkingMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this request artifactory linking method not allowed response has a 2xx status code
func (o *RequestArtifactoryLinkingMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request artifactory linking method not allowed response has a 3xx status code
func (o *RequestArtifactoryLinkingMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request artifactory linking method not allowed response has a 4xx status code
func (o *RequestArtifactoryLinkingMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this request artifactory linking method not allowed response has a 5xx status code
func (o *RequestArtifactoryLinkingMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this request artifactory linking method not allowed response a status code equal to that given
func (o *RequestArtifactoryLinkingMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the request artifactory linking method not allowed response
func (o *RequestArtifactoryLinkingMethodNotAllowed) Code() int {
	return 405
}

func (o *RequestArtifactoryLinkingMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingMethodNotAllowed %s", 405, payload)
}

func (o *RequestArtifactoryLinkingMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingMethodNotAllowed %s", 405, payload)
}

func (o *RequestArtifactoryLinkingMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RequestArtifactoryLinkingMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRequestArtifactoryLinkingInternalServerError creates a RequestArtifactoryLinkingInternalServerError with default headers values
func NewRequestArtifactoryLinkingInternalServerError() *RequestArtifactoryLinkingInternalServerError {
	return &RequestArtifactoryLinkingInternalServerError{}
}

/*
RequestArtifactoryLinkingInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RequestArtifactoryLinkingInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this request artifactory linking internal server error response has a 2xx status code
func (o *RequestArtifactoryLinkingInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this request artifactory linking internal server error response has a 3xx status code
func (o *RequestArtifactoryLinkingInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this request artifactory linking internal server error response has a 4xx status code
func (o *RequestArtifactoryLinkingInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this request artifactory linking internal server error response has a 5xx status code
func (o *RequestArtifactoryLinkingInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this request artifactory linking internal server error response a status code equal to that given
func (o *RequestArtifactoryLinkingInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the request artifactory linking internal server error response
func (o *RequestArtifactoryLinkingInternalServerError) Code() int {
	return 500
}

func (o *RequestArtifactoryLinkingInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingInternalServerError %s", 500, payload)
}

func (o *RequestArtifactoryLinkingInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/artifactories/link-container-registry][%d] requestArtifactoryLinkingInternalServerError %s", 500, payload)
}

func (o *RequestArtifactoryLinkingInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RequestArtifactoryLinkingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
