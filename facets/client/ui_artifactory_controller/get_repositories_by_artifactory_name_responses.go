// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetRepositoriesByArtifactoryNameReader is a Reader for the GetRepositoriesByArtifactoryName structure.
type GetRepositoriesByArtifactoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesByArtifactoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesByArtifactoryNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetRepositoriesByArtifactoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoriesByArtifactoryNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetRepositoriesByArtifactoryNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetRepositoriesByArtifactoryNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactories/name/{name}/repos] getRepositoriesByArtifactoryName", response, response.Code())
	}
}

// NewGetRepositoriesByArtifactoryNameOK creates a GetRepositoriesByArtifactoryNameOK with default headers values
func NewGetRepositoriesByArtifactoryNameOK() *GetRepositoriesByArtifactoryNameOK {
	return &GetRepositoriesByArtifactoryNameOK{}
}

/*
GetRepositoriesByArtifactoryNameOK describes a response with status code 200, with default header values.

OK
*/
type GetRepositoriesByArtifactoryNameOK struct {
	Payload []string
}

// IsSuccess returns true when this get repositories by artifactory name o k response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get repositories by artifactory name o k response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name o k response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get repositories by artifactory name o k response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name o k response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get repositories by artifactory name o k response
func (o *GetRepositoriesByArtifactoryNameOK) Code() int {
	return 200
}

func (o *GetRepositoriesByArtifactoryNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameOK %s", 200, payload)
}

func (o *GetRepositoriesByArtifactoryNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameOK %s", 200, payload)
}

func (o *GetRepositoriesByArtifactoryNameOK) GetPayload() []string {
	return o.Payload
}

func (o *GetRepositoriesByArtifactoryNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesByArtifactoryNameBadRequest creates a GetRepositoriesByArtifactoryNameBadRequest with default headers values
func NewGetRepositoriesByArtifactoryNameBadRequest() *GetRepositoriesByArtifactoryNameBadRequest {
	return &GetRepositoriesByArtifactoryNameBadRequest{}
}

/*
GetRepositoriesByArtifactoryNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetRepositoriesByArtifactoryNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories by artifactory name bad request response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories by artifactory name bad request response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name bad request response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories by artifactory name bad request response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name bad request response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get repositories by artifactory name bad request response
func (o *GetRepositoriesByArtifactoryNameBadRequest) Code() int {
	return 400
}

func (o *GetRepositoriesByArtifactoryNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameBadRequest %s", 400, payload)
}

func (o *GetRepositoriesByArtifactoryNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameBadRequest %s", 400, payload)
}

func (o *GetRepositoriesByArtifactoryNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesByArtifactoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesByArtifactoryNameNotFound creates a GetRepositoriesByArtifactoryNameNotFound with default headers values
func NewGetRepositoriesByArtifactoryNameNotFound() *GetRepositoriesByArtifactoryNameNotFound {
	return &GetRepositoriesByArtifactoryNameNotFound{}
}

/*
GetRepositoriesByArtifactoryNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRepositoriesByArtifactoryNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories by artifactory name not found response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories by artifactory name not found response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name not found response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories by artifactory name not found response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name not found response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get repositories by artifactory name not found response
func (o *GetRepositoriesByArtifactoryNameNotFound) Code() int {
	return 404
}

func (o *GetRepositoriesByArtifactoryNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameNotFound %s", 404, payload)
}

func (o *GetRepositoriesByArtifactoryNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameNotFound %s", 404, payload)
}

func (o *GetRepositoriesByArtifactoryNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesByArtifactoryNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesByArtifactoryNameMethodNotAllowed creates a GetRepositoriesByArtifactoryNameMethodNotAllowed with default headers values
func NewGetRepositoriesByArtifactoryNameMethodNotAllowed() *GetRepositoriesByArtifactoryNameMethodNotAllowed {
	return &GetRepositoriesByArtifactoryNameMethodNotAllowed{}
}

/*
GetRepositoriesByArtifactoryNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetRepositoriesByArtifactoryNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories by artifactory name method not allowed response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories by artifactory name method not allowed response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name method not allowed response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories by artifactory name method not allowed response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name method not allowed response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get repositories by artifactory name method not allowed response
func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameMethodNotAllowed %s", 405, payload)
}

func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameMethodNotAllowed %s", 405, payload)
}

func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesByArtifactoryNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesByArtifactoryNameInternalServerError creates a GetRepositoriesByArtifactoryNameInternalServerError with default headers values
func NewGetRepositoriesByArtifactoryNameInternalServerError() *GetRepositoriesByArtifactoryNameInternalServerError {
	return &GetRepositoriesByArtifactoryNameInternalServerError{}
}

/*
GetRepositoriesByArtifactoryNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetRepositoriesByArtifactoryNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get repositories by artifactory name internal server error response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories by artifactory name internal server error response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name internal server error response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get repositories by artifactory name internal server error response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get repositories by artifactory name internal server error response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get repositories by artifactory name internal server error response
func (o *GetRepositoriesByArtifactoryNameInternalServerError) Code() int {
	return 500
}

func (o *GetRepositoriesByArtifactoryNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameInternalServerError %s", 500, payload)
}

func (o *GetRepositoriesByArtifactoryNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameInternalServerError %s", 500, payload)
}

func (o *GetRepositoriesByArtifactoryNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetRepositoriesByArtifactoryNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
