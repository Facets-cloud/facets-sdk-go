// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTagsByArtifactoryNameReader is a Reader for the GetTagsByArtifactoryName structure.
type GetTagsByArtifactoryNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsByArtifactoryNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsByArtifactoryNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTagsByArtifactoryNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTagsByArtifactoryNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetTagsByArtifactoryNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTagsByArtifactoryNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactories/name/{name}/tags] getTagsByArtifactoryName", response, response.Code())
	}
}

// NewGetTagsByArtifactoryNameOK creates a GetTagsByArtifactoryNameOK with default headers values
func NewGetTagsByArtifactoryNameOK() *GetTagsByArtifactoryNameOK {
	return &GetTagsByArtifactoryNameOK{}
}

/*
GetTagsByArtifactoryNameOK describes a response with status code 200, with default header values.

OK
*/
type GetTagsByArtifactoryNameOK struct {
	Payload []string
}

// IsSuccess returns true when this get tags by artifactory name o k response has a 2xx status code
func (o *GetTagsByArtifactoryNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags by artifactory name o k response has a 3xx status code
func (o *GetTagsByArtifactoryNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name o k response has a 4xx status code
func (o *GetTagsByArtifactoryNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags by artifactory name o k response has a 5xx status code
func (o *GetTagsByArtifactoryNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name o k response a status code equal to that given
func (o *GetTagsByArtifactoryNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tags by artifactory name o k response
func (o *GetTagsByArtifactoryNameOK) Code() int {
	return 200
}

func (o *GetTagsByArtifactoryNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameOK %s", 200, payload)
}

func (o *GetTagsByArtifactoryNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameOK %s", 200, payload)
}

func (o *GetTagsByArtifactoryNameOK) GetPayload() []string {
	return o.Payload
}

func (o *GetTagsByArtifactoryNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsByArtifactoryNameBadRequest creates a GetTagsByArtifactoryNameBadRequest with default headers values
func NewGetTagsByArtifactoryNameBadRequest() *GetTagsByArtifactoryNameBadRequest {
	return &GetTagsByArtifactoryNameBadRequest{}
}

/*
GetTagsByArtifactoryNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTagsByArtifactoryNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags by artifactory name bad request response has a 2xx status code
func (o *GetTagsByArtifactoryNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by artifactory name bad request response has a 3xx status code
func (o *GetTagsByArtifactoryNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name bad request response has a 4xx status code
func (o *GetTagsByArtifactoryNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags by artifactory name bad request response has a 5xx status code
func (o *GetTagsByArtifactoryNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name bad request response a status code equal to that given
func (o *GetTagsByArtifactoryNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get tags by artifactory name bad request response
func (o *GetTagsByArtifactoryNameBadRequest) Code() int {
	return 400
}

func (o *GetTagsByArtifactoryNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameBadRequest %s", 400, payload)
}

func (o *GetTagsByArtifactoryNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameBadRequest %s", 400, payload)
}

func (o *GetTagsByArtifactoryNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsByArtifactoryNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsByArtifactoryNameNotFound creates a GetTagsByArtifactoryNameNotFound with default headers values
func NewGetTagsByArtifactoryNameNotFound() *GetTagsByArtifactoryNameNotFound {
	return &GetTagsByArtifactoryNameNotFound{}
}

/*
GetTagsByArtifactoryNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTagsByArtifactoryNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags by artifactory name not found response has a 2xx status code
func (o *GetTagsByArtifactoryNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by artifactory name not found response has a 3xx status code
func (o *GetTagsByArtifactoryNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name not found response has a 4xx status code
func (o *GetTagsByArtifactoryNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags by artifactory name not found response has a 5xx status code
func (o *GetTagsByArtifactoryNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name not found response a status code equal to that given
func (o *GetTagsByArtifactoryNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tags by artifactory name not found response
func (o *GetTagsByArtifactoryNameNotFound) Code() int {
	return 404
}

func (o *GetTagsByArtifactoryNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameNotFound %s", 404, payload)
}

func (o *GetTagsByArtifactoryNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameNotFound %s", 404, payload)
}

func (o *GetTagsByArtifactoryNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsByArtifactoryNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsByArtifactoryNameMethodNotAllowed creates a GetTagsByArtifactoryNameMethodNotAllowed with default headers values
func NewGetTagsByArtifactoryNameMethodNotAllowed() *GetTagsByArtifactoryNameMethodNotAllowed {
	return &GetTagsByArtifactoryNameMethodNotAllowed{}
}

/*
GetTagsByArtifactoryNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetTagsByArtifactoryNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags by artifactory name method not allowed response has a 2xx status code
func (o *GetTagsByArtifactoryNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by artifactory name method not allowed response has a 3xx status code
func (o *GetTagsByArtifactoryNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name method not allowed response has a 4xx status code
func (o *GetTagsByArtifactoryNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags by artifactory name method not allowed response has a 5xx status code
func (o *GetTagsByArtifactoryNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags by artifactory name method not allowed response a status code equal to that given
func (o *GetTagsByArtifactoryNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get tags by artifactory name method not allowed response
func (o *GetTagsByArtifactoryNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetTagsByArtifactoryNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameMethodNotAllowed %s", 405, payload)
}

func (o *GetTagsByArtifactoryNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameMethodNotAllowed %s", 405, payload)
}

func (o *GetTagsByArtifactoryNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsByArtifactoryNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsByArtifactoryNameInternalServerError creates a GetTagsByArtifactoryNameInternalServerError with default headers values
func NewGetTagsByArtifactoryNameInternalServerError() *GetTagsByArtifactoryNameInternalServerError {
	return &GetTagsByArtifactoryNameInternalServerError{}
}

/*
GetTagsByArtifactoryNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTagsByArtifactoryNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags by artifactory name internal server error response has a 2xx status code
func (o *GetTagsByArtifactoryNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags by artifactory name internal server error response has a 3xx status code
func (o *GetTagsByArtifactoryNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags by artifactory name internal server error response has a 4xx status code
func (o *GetTagsByArtifactoryNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags by artifactory name internal server error response has a 5xx status code
func (o *GetTagsByArtifactoryNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tags by artifactory name internal server error response a status code equal to that given
func (o *GetTagsByArtifactoryNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get tags by artifactory name internal server error response
func (o *GetTagsByArtifactoryNameInternalServerError) Code() int {
	return 500
}

func (o *GetTagsByArtifactoryNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameInternalServerError %s", 500, payload)
}

func (o *GetTagsByArtifactoryNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/tags][%d] getTagsByArtifactoryNameInternalServerError %s", 500, payload)
}

func (o *GetTagsByArtifactoryNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsByArtifactoryNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
