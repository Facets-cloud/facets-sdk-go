// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetRepositoriesByArtifactoryNameUsingGETReader is a Reader for the GetRepositoriesByArtifactoryNameUsingGET structure.
type GetRepositoriesByArtifactoryNameUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRepositoriesByArtifactoryNameUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetRepositoriesByArtifactoryNameUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetRepositoriesByArtifactoryNameUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetRepositoriesByArtifactoryNameUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetRepositoriesByArtifactoryNameUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactories/name/{name}/repos] getRepositoriesByArtifactoryNameUsingGET", response, response.Code())
	}
}

// NewGetRepositoriesByArtifactoryNameUsingGETOK creates a GetRepositoriesByArtifactoryNameUsingGETOK with default headers values
func NewGetRepositoriesByArtifactoryNameUsingGETOK() *GetRepositoriesByArtifactoryNameUsingGETOK {
	return &GetRepositoriesByArtifactoryNameUsingGETOK{}
}

/*
GetRepositoriesByArtifactoryNameUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetRepositoriesByArtifactoryNameUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get repositories by artifactory name using g e t o k response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get repositories by artifactory name using g e t o k response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name using g e t o k response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get repositories by artifactory name using g e t o k response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name using g e t o k response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get repositories by artifactory name using g e t o k response
func (o *GetRepositoriesByArtifactoryNameUsingGETOK) Code() int {
	return 200
}

func (o *GetRepositoriesByArtifactoryNameUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETOK %s", 200, payload)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETOK %s", 200, payload)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetRepositoriesByArtifactoryNameUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetRepositoriesByArtifactoryNameUsingGETUnauthorized creates a GetRepositoriesByArtifactoryNameUsingGETUnauthorized with default headers values
func NewGetRepositoriesByArtifactoryNameUsingGETUnauthorized() *GetRepositoriesByArtifactoryNameUsingGETUnauthorized {
	return &GetRepositoriesByArtifactoryNameUsingGETUnauthorized{}
}

/*
GetRepositoriesByArtifactoryNameUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetRepositoriesByArtifactoryNameUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get repositories by artifactory name using g e t unauthorized response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories by artifactory name using g e t unauthorized response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name using g e t unauthorized response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories by artifactory name using g e t unauthorized response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name using g e t unauthorized response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get repositories by artifactory name using g e t unauthorized response
func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETUnauthorized", 401)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETUnauthorized", 401)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoriesByArtifactoryNameUsingGETForbidden creates a GetRepositoriesByArtifactoryNameUsingGETForbidden with default headers values
func NewGetRepositoriesByArtifactoryNameUsingGETForbidden() *GetRepositoriesByArtifactoryNameUsingGETForbidden {
	return &GetRepositoriesByArtifactoryNameUsingGETForbidden{}
}

/*
GetRepositoriesByArtifactoryNameUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetRepositoriesByArtifactoryNameUsingGETForbidden struct {
}

// IsSuccess returns true when this get repositories by artifactory name using g e t forbidden response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories by artifactory name using g e t forbidden response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name using g e t forbidden response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories by artifactory name using g e t forbidden response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name using g e t forbidden response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get repositories by artifactory name using g e t forbidden response
func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) Code() int {
	return 403
}

func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETForbidden", 403)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETForbidden", 403)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetRepositoriesByArtifactoryNameUsingGETNotFound creates a GetRepositoriesByArtifactoryNameUsingGETNotFound with default headers values
func NewGetRepositoriesByArtifactoryNameUsingGETNotFound() *GetRepositoriesByArtifactoryNameUsingGETNotFound {
	return &GetRepositoriesByArtifactoryNameUsingGETNotFound{}
}

/*
GetRepositoriesByArtifactoryNameUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetRepositoriesByArtifactoryNameUsingGETNotFound struct {
}

// IsSuccess returns true when this get repositories by artifactory name using g e t not found response has a 2xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get repositories by artifactory name using g e t not found response has a 3xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get repositories by artifactory name using g e t not found response has a 4xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get repositories by artifactory name using g e t not found response has a 5xx status code
func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get repositories by artifactory name using g e t not found response a status code equal to that given
func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get repositories by artifactory name using g e t not found response
func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) Code() int {
	return 404
}

func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETNotFound", 404)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/name/{name}/repos][%d] getRepositoriesByArtifactoryNameUsingGETNotFound", 404)
}

func (o *GetRepositoriesByArtifactoryNameUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
