// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetTagsUsingGETReader is a Reader for the GetTagsUsingGET structure.
type GetTagsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTagsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTagsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTagsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags] getTagsUsingGET", response, response.Code())
	}
}

// NewGetTagsUsingGETOK creates a GetTagsUsingGETOK with default headers values
func NewGetTagsUsingGETOK() *GetTagsUsingGETOK {
	return &GetTagsUsingGETOK{}
}

/*
GetTagsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetTagsUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get tags using g e t o k response has a 2xx status code
func (o *GetTagsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags using g e t o k response has a 3xx status code
func (o *GetTagsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags using g e t o k response has a 4xx status code
func (o *GetTagsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags using g e t o k response has a 5xx status code
func (o *GetTagsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags using g e t o k response a status code equal to that given
func (o *GetTagsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tags using g e t o k response
func (o *GetTagsUsingGETOK) Code() int {
	return 200
}

func (o *GetTagsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETOK %s", 200, payload)
}

func (o *GetTagsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETOK %s", 200, payload)
}

func (o *GetTagsUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetTagsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsUsingGETUnauthorized creates a GetTagsUsingGETUnauthorized with default headers values
func NewGetTagsUsingGETUnauthorized() *GetTagsUsingGETUnauthorized {
	return &GetTagsUsingGETUnauthorized{}
}

/*
GetTagsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTagsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get tags using g e t unauthorized response has a 2xx status code
func (o *GetTagsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags using g e t unauthorized response has a 3xx status code
func (o *GetTagsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags using g e t unauthorized response has a 4xx status code
func (o *GetTagsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags using g e t unauthorized response has a 5xx status code
func (o *GetTagsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags using g e t unauthorized response a status code equal to that given
func (o *GetTagsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get tags using g e t unauthorized response
func (o *GetTagsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetTagsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETUnauthorized", 401)
}

func (o *GetTagsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETUnauthorized", 401)
}

func (o *GetTagsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsUsingGETForbidden creates a GetTagsUsingGETForbidden with default headers values
func NewGetTagsUsingGETForbidden() *GetTagsUsingGETForbidden {
	return &GetTagsUsingGETForbidden{}
}

/*
GetTagsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTagsUsingGETForbidden struct {
}

// IsSuccess returns true when this get tags using g e t forbidden response has a 2xx status code
func (o *GetTagsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags using g e t forbidden response has a 3xx status code
func (o *GetTagsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags using g e t forbidden response has a 4xx status code
func (o *GetTagsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags using g e t forbidden response has a 5xx status code
func (o *GetTagsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags using g e t forbidden response a status code equal to that given
func (o *GetTagsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get tags using g e t forbidden response
func (o *GetTagsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetTagsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETForbidden", 403)
}

func (o *GetTagsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETForbidden", 403)
}

func (o *GetTagsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTagsUsingGETNotFound creates a GetTagsUsingGETNotFound with default headers values
func NewGetTagsUsingGETNotFound() *GetTagsUsingGETNotFound {
	return &GetTagsUsingGETNotFound{}
}

/*
GetTagsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTagsUsingGETNotFound struct {
}

// IsSuccess returns true when this get tags using g e t not found response has a 2xx status code
func (o *GetTagsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags using g e t not found response has a 3xx status code
func (o *GetTagsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags using g e t not found response has a 4xx status code
func (o *GetTagsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags using g e t not found response has a 5xx status code
func (o *GetTagsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags using g e t not found response a status code equal to that given
func (o *GetTagsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tags using g e t not found response
func (o *GetTagsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetTagsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETNotFound", 404)
}

func (o *GetTagsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsUsingGETNotFound", 404)
}

func (o *GetTagsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
