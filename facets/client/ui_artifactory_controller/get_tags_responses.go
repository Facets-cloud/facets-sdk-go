// Code generated by go-swagger; DO NOT EDIT.

package ui_artifactory_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTagsReader is a Reader for the GetTags structure.
type GetTagsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTagsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTagsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTagsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTagsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetTagsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTagsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags] getTags", response, response.Code())
	}
}

// NewGetTagsOK creates a GetTagsOK with default headers values
func NewGetTagsOK() *GetTagsOK {
	return &GetTagsOK{}
}

/*
GetTagsOK describes a response with status code 200, with default header values.

OK
*/
type GetTagsOK struct {
	Payload []string
}

// IsSuccess returns true when this get tags o k response has a 2xx status code
func (o *GetTagsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tags o k response has a 3xx status code
func (o *GetTagsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags o k response has a 4xx status code
func (o *GetTagsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags o k response has a 5xx status code
func (o *GetTagsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags o k response a status code equal to that given
func (o *GetTagsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tags o k response
func (o *GetTagsOK) Code() int {
	return 200
}

func (o *GetTagsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsOK %s", 200, payload)
}

func (o *GetTagsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsOK %s", 200, payload)
}

func (o *GetTagsOK) GetPayload() []string {
	return o.Payload
}

func (o *GetTagsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsBadRequest creates a GetTagsBadRequest with default headers values
func NewGetTagsBadRequest() *GetTagsBadRequest {
	return &GetTagsBadRequest{}
}

/*
GetTagsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTagsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags bad request response has a 2xx status code
func (o *GetTagsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags bad request response has a 3xx status code
func (o *GetTagsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags bad request response has a 4xx status code
func (o *GetTagsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags bad request response has a 5xx status code
func (o *GetTagsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags bad request response a status code equal to that given
func (o *GetTagsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get tags bad request response
func (o *GetTagsBadRequest) Code() int {
	return 400
}

func (o *GetTagsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsBadRequest %s", 400, payload)
}

func (o *GetTagsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsBadRequest %s", 400, payload)
}

func (o *GetTagsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsNotFound creates a GetTagsNotFound with default headers values
func NewGetTagsNotFound() *GetTagsNotFound {
	return &GetTagsNotFound{}
}

/*
GetTagsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTagsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags not found response has a 2xx status code
func (o *GetTagsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags not found response has a 3xx status code
func (o *GetTagsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags not found response has a 4xx status code
func (o *GetTagsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags not found response has a 5xx status code
func (o *GetTagsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags not found response a status code equal to that given
func (o *GetTagsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tags not found response
func (o *GetTagsNotFound) Code() int {
	return 404
}

func (o *GetTagsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsNotFound %s", 404, payload)
}

func (o *GetTagsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsNotFound %s", 404, payload)
}

func (o *GetTagsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsMethodNotAllowed creates a GetTagsMethodNotAllowed with default headers values
func NewGetTagsMethodNotAllowed() *GetTagsMethodNotAllowed {
	return &GetTagsMethodNotAllowed{}
}

/*
GetTagsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetTagsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags method not allowed response has a 2xx status code
func (o *GetTagsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags method not allowed response has a 3xx status code
func (o *GetTagsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags method not allowed response has a 4xx status code
func (o *GetTagsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tags method not allowed response has a 5xx status code
func (o *GetTagsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get tags method not allowed response a status code equal to that given
func (o *GetTagsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get tags method not allowed response
func (o *GetTagsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetTagsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsMethodNotAllowed %s", 405, payload)
}

func (o *GetTagsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsMethodNotAllowed %s", 405, payload)
}

func (o *GetTagsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTagsInternalServerError creates a GetTagsInternalServerError with default headers values
func NewGetTagsInternalServerError() *GetTagsInternalServerError {
	return &GetTagsInternalServerError{}
}

/*
GetTagsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTagsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tags internal server error response has a 2xx status code
func (o *GetTagsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tags internal server error response has a 3xx status code
func (o *GetTagsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tags internal server error response has a 4xx status code
func (o *GetTagsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tags internal server error response has a 5xx status code
func (o *GetTagsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tags internal server error response a status code equal to that given
func (o *GetTagsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get tags internal server error response
func (o *GetTagsInternalServerError) Code() int {
	return 500
}

func (o *GetTagsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsInternalServerError %s", 500, payload)
}

func (o *GetTagsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/artifactories/{artifactoryId}/tags][%d] getTagsInternalServerError %s", 500, payload)
}

func (o *GetTagsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTagsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
