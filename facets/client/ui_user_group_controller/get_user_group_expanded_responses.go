// Code generated by go-swagger; DO NOT EDIT.

package ui_user_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetUserGroupExpandedReader is a Reader for the GetUserGroupExpanded structure.
type GetUserGroupExpandedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserGroupExpandedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserGroupExpandedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserGroupExpandedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserGroupExpandedNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetUserGroupExpandedMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetUserGroupExpandedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded] getUserGroupExpanded", response, response.Code())
	}
}

// NewGetUserGroupExpandedOK creates a GetUserGroupExpandedOK with default headers values
func NewGetUserGroupExpandedOK() *GetUserGroupExpandedOK {
	return &GetUserGroupExpandedOK{}
}

/*
GetUserGroupExpandedOK describes a response with status code 200, with default header values.

OK
*/
type GetUserGroupExpandedOK struct {
	Payload *models.ExpandedUserGroup
}

// IsSuccess returns true when this get user group expanded o k response has a 2xx status code
func (o *GetUserGroupExpandedOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get user group expanded o k response has a 3xx status code
func (o *GetUserGroupExpandedOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group expanded o k response has a 4xx status code
func (o *GetUserGroupExpandedOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user group expanded o k response has a 5xx status code
func (o *GetUserGroupExpandedOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group expanded o k response a status code equal to that given
func (o *GetUserGroupExpandedOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get user group expanded o k response
func (o *GetUserGroupExpandedOK) Code() int {
	return 200
}

func (o *GetUserGroupExpandedOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedOK %s", 200, payload)
}

func (o *GetUserGroupExpandedOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedOK %s", 200, payload)
}

func (o *GetUserGroupExpandedOK) GetPayload() *models.ExpandedUserGroup {
	return o.Payload
}

func (o *GetUserGroupExpandedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ExpandedUserGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupExpandedBadRequest creates a GetUserGroupExpandedBadRequest with default headers values
func NewGetUserGroupExpandedBadRequest() *GetUserGroupExpandedBadRequest {
	return &GetUserGroupExpandedBadRequest{}
}

/*
GetUserGroupExpandedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetUserGroupExpandedBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user group expanded bad request response has a 2xx status code
func (o *GetUserGroupExpandedBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group expanded bad request response has a 3xx status code
func (o *GetUserGroupExpandedBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group expanded bad request response has a 4xx status code
func (o *GetUserGroupExpandedBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group expanded bad request response has a 5xx status code
func (o *GetUserGroupExpandedBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group expanded bad request response a status code equal to that given
func (o *GetUserGroupExpandedBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get user group expanded bad request response
func (o *GetUserGroupExpandedBadRequest) Code() int {
	return 400
}

func (o *GetUserGroupExpandedBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedBadRequest %s", 400, payload)
}

func (o *GetUserGroupExpandedBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedBadRequest %s", 400, payload)
}

func (o *GetUserGroupExpandedBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserGroupExpandedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupExpandedNotFound creates a GetUserGroupExpandedNotFound with default headers values
func NewGetUserGroupExpandedNotFound() *GetUserGroupExpandedNotFound {
	return &GetUserGroupExpandedNotFound{}
}

/*
GetUserGroupExpandedNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetUserGroupExpandedNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user group expanded not found response has a 2xx status code
func (o *GetUserGroupExpandedNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group expanded not found response has a 3xx status code
func (o *GetUserGroupExpandedNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group expanded not found response has a 4xx status code
func (o *GetUserGroupExpandedNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group expanded not found response has a 5xx status code
func (o *GetUserGroupExpandedNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group expanded not found response a status code equal to that given
func (o *GetUserGroupExpandedNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get user group expanded not found response
func (o *GetUserGroupExpandedNotFound) Code() int {
	return 404
}

func (o *GetUserGroupExpandedNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedNotFound %s", 404, payload)
}

func (o *GetUserGroupExpandedNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedNotFound %s", 404, payload)
}

func (o *GetUserGroupExpandedNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserGroupExpandedNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupExpandedMethodNotAllowed creates a GetUserGroupExpandedMethodNotAllowed with default headers values
func NewGetUserGroupExpandedMethodNotAllowed() *GetUserGroupExpandedMethodNotAllowed {
	return &GetUserGroupExpandedMethodNotAllowed{}
}

/*
GetUserGroupExpandedMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetUserGroupExpandedMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user group expanded method not allowed response has a 2xx status code
func (o *GetUserGroupExpandedMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group expanded method not allowed response has a 3xx status code
func (o *GetUserGroupExpandedMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group expanded method not allowed response has a 4xx status code
func (o *GetUserGroupExpandedMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get user group expanded method not allowed response has a 5xx status code
func (o *GetUserGroupExpandedMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get user group expanded method not allowed response a status code equal to that given
func (o *GetUserGroupExpandedMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get user group expanded method not allowed response
func (o *GetUserGroupExpandedMethodNotAllowed) Code() int {
	return 405
}

func (o *GetUserGroupExpandedMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedMethodNotAllowed %s", 405, payload)
}

func (o *GetUserGroupExpandedMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedMethodNotAllowed %s", 405, payload)
}

func (o *GetUserGroupExpandedMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserGroupExpandedMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupExpandedInternalServerError creates a GetUserGroupExpandedInternalServerError with default headers values
func NewGetUserGroupExpandedInternalServerError() *GetUserGroupExpandedInternalServerError {
	return &GetUserGroupExpandedInternalServerError{}
}

/*
GetUserGroupExpandedInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetUserGroupExpandedInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get user group expanded internal server error response has a 2xx status code
func (o *GetUserGroupExpandedInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get user group expanded internal server error response has a 3xx status code
func (o *GetUserGroupExpandedInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get user group expanded internal server error response has a 4xx status code
func (o *GetUserGroupExpandedInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get user group expanded internal server error response has a 5xx status code
func (o *GetUserGroupExpandedInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get user group expanded internal server error response a status code equal to that given
func (o *GetUserGroupExpandedInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get user group expanded internal server error response
func (o *GetUserGroupExpandedInternalServerError) Code() int {
	return 500
}

func (o *GetUserGroupExpandedInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedInternalServerError %s", 500, payload)
}

func (o *GetUserGroupExpandedInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/{groupId}/group-expanded][%d] getUserGroupExpandedInternalServerError %s", 500, payload)
}

func (o *GetUserGroupExpandedInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetUserGroupExpandedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
