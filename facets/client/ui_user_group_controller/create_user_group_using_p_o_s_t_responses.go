// Code generated by go-swagger; DO NOT EDIT.

package ui_user_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateUserGroupUsingPOSTReader is a Reader for the CreateUserGroupUsingPOST structure.
type CreateUserGroupUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUserGroupUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUserGroupUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateUserGroupUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateUserGroupUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateUserGroupUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateUserGroupUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/user-groups/] createUserGroupUsingPOST", response, response.Code())
	}
}

// NewCreateUserGroupUsingPOSTOK creates a CreateUserGroupUsingPOSTOK with default headers values
func NewCreateUserGroupUsingPOSTOK() *CreateUserGroupUsingPOSTOK {
	return &CreateUserGroupUsingPOSTOK{}
}

/*
CreateUserGroupUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateUserGroupUsingPOSTOK struct {
	Payload *models.UserGroup
}

// IsSuccess returns true when this create user group using p o s t o k response has a 2xx status code
func (o *CreateUserGroupUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user group using p o s t o k response has a 3xx status code
func (o *CreateUserGroupUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group using p o s t o k response has a 4xx status code
func (o *CreateUserGroupUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user group using p o s t o k response has a 5xx status code
func (o *CreateUserGroupUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group using p o s t o k response a status code equal to that given
func (o *CreateUserGroupUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create user group using p o s t o k response
func (o *CreateUserGroupUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateUserGroupUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTOK %s", 200, payload)
}

func (o *CreateUserGroupUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTOK %s", 200, payload)
}

func (o *CreateUserGroupUsingPOSTOK) GetPayload() *models.UserGroup {
	return o.Payload
}

func (o *CreateUserGroupUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserGroupUsingPOSTCreated creates a CreateUserGroupUsingPOSTCreated with default headers values
func NewCreateUserGroupUsingPOSTCreated() *CreateUserGroupUsingPOSTCreated {
	return &CreateUserGroupUsingPOSTCreated{}
}

/*
CreateUserGroupUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateUserGroupUsingPOSTCreated struct {
}

// IsSuccess returns true when this create user group using p o s t created response has a 2xx status code
func (o *CreateUserGroupUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user group using p o s t created response has a 3xx status code
func (o *CreateUserGroupUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group using p o s t created response has a 4xx status code
func (o *CreateUserGroupUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user group using p o s t created response has a 5xx status code
func (o *CreateUserGroupUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group using p o s t created response a status code equal to that given
func (o *CreateUserGroupUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create user group using p o s t created response
func (o *CreateUserGroupUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateUserGroupUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTCreated", 201)
}

func (o *CreateUserGroupUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTCreated", 201)
}

func (o *CreateUserGroupUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserGroupUsingPOSTUnauthorized creates a CreateUserGroupUsingPOSTUnauthorized with default headers values
func NewCreateUserGroupUsingPOSTUnauthorized() *CreateUserGroupUsingPOSTUnauthorized {
	return &CreateUserGroupUsingPOSTUnauthorized{}
}

/*
CreateUserGroupUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateUserGroupUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create user group using p o s t unauthorized response has a 2xx status code
func (o *CreateUserGroupUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user group using p o s t unauthorized response has a 3xx status code
func (o *CreateUserGroupUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group using p o s t unauthorized response has a 4xx status code
func (o *CreateUserGroupUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user group using p o s t unauthorized response has a 5xx status code
func (o *CreateUserGroupUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group using p o s t unauthorized response a status code equal to that given
func (o *CreateUserGroupUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create user group using p o s t unauthorized response
func (o *CreateUserGroupUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateUserGroupUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTUnauthorized", 401)
}

func (o *CreateUserGroupUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTUnauthorized", 401)
}

func (o *CreateUserGroupUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserGroupUsingPOSTForbidden creates a CreateUserGroupUsingPOSTForbidden with default headers values
func NewCreateUserGroupUsingPOSTForbidden() *CreateUserGroupUsingPOSTForbidden {
	return &CreateUserGroupUsingPOSTForbidden{}
}

/*
CreateUserGroupUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateUserGroupUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create user group using p o s t forbidden response has a 2xx status code
func (o *CreateUserGroupUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user group using p o s t forbidden response has a 3xx status code
func (o *CreateUserGroupUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group using p o s t forbidden response has a 4xx status code
func (o *CreateUserGroupUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user group using p o s t forbidden response has a 5xx status code
func (o *CreateUserGroupUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group using p o s t forbidden response a status code equal to that given
func (o *CreateUserGroupUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create user group using p o s t forbidden response
func (o *CreateUserGroupUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateUserGroupUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTForbidden", 403)
}

func (o *CreateUserGroupUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTForbidden", 403)
}

func (o *CreateUserGroupUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserGroupUsingPOSTNotFound creates a CreateUserGroupUsingPOSTNotFound with default headers values
func NewCreateUserGroupUsingPOSTNotFound() *CreateUserGroupUsingPOSTNotFound {
	return &CreateUserGroupUsingPOSTNotFound{}
}

/*
CreateUserGroupUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateUserGroupUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create user group using p o s t not found response has a 2xx status code
func (o *CreateUserGroupUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user group using p o s t not found response has a 3xx status code
func (o *CreateUserGroupUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group using p o s t not found response has a 4xx status code
func (o *CreateUserGroupUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user group using p o s t not found response has a 5xx status code
func (o *CreateUserGroupUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group using p o s t not found response a status code equal to that given
func (o *CreateUserGroupUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create user group using p o s t not found response
func (o *CreateUserGroupUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateUserGroupUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTNotFound", 404)
}

func (o *CreateUserGroupUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupUsingPOSTNotFound", 404)
}

func (o *CreateUserGroupUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
