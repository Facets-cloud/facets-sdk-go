// Code generated by go-swagger; DO NOT EDIT.

package ui_user_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateUserGroupReader is a Reader for the CreateUserGroup structure.
type CreateUserGroupReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUserGroupReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUserGroupOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateUserGroupBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateUserGroupNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateUserGroupMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateUserGroupInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/user-groups/] createUserGroup", response, response.Code())
	}
}

// NewCreateUserGroupOK creates a CreateUserGroupOK with default headers values
func NewCreateUserGroupOK() *CreateUserGroupOK {
	return &CreateUserGroupOK{}
}

/*
CreateUserGroupOK describes a response with status code 200, with default header values.

OK
*/
type CreateUserGroupOK struct {
	Payload *models.UserGroup
}

// IsSuccess returns true when this create user group o k response has a 2xx status code
func (o *CreateUserGroupOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user group o k response has a 3xx status code
func (o *CreateUserGroupOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group o k response has a 4xx status code
func (o *CreateUserGroupOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user group o k response has a 5xx status code
func (o *CreateUserGroupOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group o k response a status code equal to that given
func (o *CreateUserGroupOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create user group o k response
func (o *CreateUserGroupOK) Code() int {
	return 200
}

func (o *CreateUserGroupOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupOK %s", 200, payload)
}

func (o *CreateUserGroupOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupOK %s", 200, payload)
}

func (o *CreateUserGroupOK) GetPayload() *models.UserGroup {
	return o.Payload
}

func (o *CreateUserGroupOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserGroup)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserGroupBadRequest creates a CreateUserGroupBadRequest with default headers values
func NewCreateUserGroupBadRequest() *CreateUserGroupBadRequest {
	return &CreateUserGroupBadRequest{}
}

/*
CreateUserGroupBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateUserGroupBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user group bad request response has a 2xx status code
func (o *CreateUserGroupBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user group bad request response has a 3xx status code
func (o *CreateUserGroupBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group bad request response has a 4xx status code
func (o *CreateUserGroupBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user group bad request response has a 5xx status code
func (o *CreateUserGroupBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group bad request response a status code equal to that given
func (o *CreateUserGroupBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create user group bad request response
func (o *CreateUserGroupBadRequest) Code() int {
	return 400
}

func (o *CreateUserGroupBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupBadRequest %s", 400, payload)
}

func (o *CreateUserGroupBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupBadRequest %s", 400, payload)
}

func (o *CreateUserGroupBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserGroupBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserGroupNotFound creates a CreateUserGroupNotFound with default headers values
func NewCreateUserGroupNotFound() *CreateUserGroupNotFound {
	return &CreateUserGroupNotFound{}
}

/*
CreateUserGroupNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateUserGroupNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user group not found response has a 2xx status code
func (o *CreateUserGroupNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user group not found response has a 3xx status code
func (o *CreateUserGroupNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group not found response has a 4xx status code
func (o *CreateUserGroupNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user group not found response has a 5xx status code
func (o *CreateUserGroupNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group not found response a status code equal to that given
func (o *CreateUserGroupNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create user group not found response
func (o *CreateUserGroupNotFound) Code() int {
	return 404
}

func (o *CreateUserGroupNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupNotFound %s", 404, payload)
}

func (o *CreateUserGroupNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupNotFound %s", 404, payload)
}

func (o *CreateUserGroupNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserGroupNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserGroupMethodNotAllowed creates a CreateUserGroupMethodNotAllowed with default headers values
func NewCreateUserGroupMethodNotAllowed() *CreateUserGroupMethodNotAllowed {
	return &CreateUserGroupMethodNotAllowed{}
}

/*
CreateUserGroupMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateUserGroupMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user group method not allowed response has a 2xx status code
func (o *CreateUserGroupMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user group method not allowed response has a 3xx status code
func (o *CreateUserGroupMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group method not allowed response has a 4xx status code
func (o *CreateUserGroupMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user group method not allowed response has a 5xx status code
func (o *CreateUserGroupMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create user group method not allowed response a status code equal to that given
func (o *CreateUserGroupMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create user group method not allowed response
func (o *CreateUserGroupMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateUserGroupMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupMethodNotAllowed %s", 405, payload)
}

func (o *CreateUserGroupMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupMethodNotAllowed %s", 405, payload)
}

func (o *CreateUserGroupMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserGroupMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserGroupInternalServerError creates a CreateUserGroupInternalServerError with default headers values
func NewCreateUserGroupInternalServerError() *CreateUserGroupInternalServerError {
	return &CreateUserGroupInternalServerError{}
}

/*
CreateUserGroupInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateUserGroupInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user group internal server error response has a 2xx status code
func (o *CreateUserGroupInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user group internal server error response has a 3xx status code
func (o *CreateUserGroupInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user group internal server error response has a 4xx status code
func (o *CreateUserGroupInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user group internal server error response has a 5xx status code
func (o *CreateUserGroupInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create user group internal server error response a status code equal to that given
func (o *CreateUserGroupInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create user group internal server error response
func (o *CreateUserGroupInternalServerError) Code() int {
	return 500
}

func (o *CreateUserGroupInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupInternalServerError %s", 500, payload)
}

func (o *CreateUserGroupInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/user-groups/][%d] createUserGroupInternalServerError %s", 500, payload)
}

func (o *CreateUserGroupInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserGroupInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
