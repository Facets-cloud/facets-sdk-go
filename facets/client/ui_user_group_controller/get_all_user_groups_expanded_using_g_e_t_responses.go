// Code generated by go-swagger; DO NOT EDIT.

package ui_user_group_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllUserGroupsExpandedUsingGETReader is a Reader for the GetAllUserGroupsExpandedUsingGET structure.
type GetAllUserGroupsExpandedUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllUserGroupsExpandedUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllUserGroupsExpandedUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllUserGroupsExpandedUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllUserGroupsExpandedUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllUserGroupsExpandedUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/user-groups/list/groups-expanded] getAllUserGroupsExpandedUsingGET", response, response.Code())
	}
}

// NewGetAllUserGroupsExpandedUsingGETOK creates a GetAllUserGroupsExpandedUsingGETOK with default headers values
func NewGetAllUserGroupsExpandedUsingGETOK() *GetAllUserGroupsExpandedUsingGETOK {
	return &GetAllUserGroupsExpandedUsingGETOK{}
}

/*
GetAllUserGroupsExpandedUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllUserGroupsExpandedUsingGETOK struct {
	Payload []*models.ExpandedUserGroup
}

// IsSuccess returns true when this get all user groups expanded using g e t o k response has a 2xx status code
func (o *GetAllUserGroupsExpandedUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all user groups expanded using g e t o k response has a 3xx status code
func (o *GetAllUserGroupsExpandedUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all user groups expanded using g e t o k response has a 4xx status code
func (o *GetAllUserGroupsExpandedUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all user groups expanded using g e t o k response has a 5xx status code
func (o *GetAllUserGroupsExpandedUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all user groups expanded using g e t o k response a status code equal to that given
func (o *GetAllUserGroupsExpandedUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all user groups expanded using g e t o k response
func (o *GetAllUserGroupsExpandedUsingGETOK) Code() int {
	return 200
}

func (o *GetAllUserGroupsExpandedUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETOK %s", 200, payload)
}

func (o *GetAllUserGroupsExpandedUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETOK %s", 200, payload)
}

func (o *GetAllUserGroupsExpandedUsingGETOK) GetPayload() []*models.ExpandedUserGroup {
	return o.Payload
}

func (o *GetAllUserGroupsExpandedUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllUserGroupsExpandedUsingGETUnauthorized creates a GetAllUserGroupsExpandedUsingGETUnauthorized with default headers values
func NewGetAllUserGroupsExpandedUsingGETUnauthorized() *GetAllUserGroupsExpandedUsingGETUnauthorized {
	return &GetAllUserGroupsExpandedUsingGETUnauthorized{}
}

/*
GetAllUserGroupsExpandedUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllUserGroupsExpandedUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all user groups expanded using g e t unauthorized response has a 2xx status code
func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all user groups expanded using g e t unauthorized response has a 3xx status code
func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all user groups expanded using g e t unauthorized response has a 4xx status code
func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all user groups expanded using g e t unauthorized response has a 5xx status code
func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all user groups expanded using g e t unauthorized response a status code equal to that given
func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all user groups expanded using g e t unauthorized response
func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETUnauthorized", 401)
}

func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETUnauthorized", 401)
}

func (o *GetAllUserGroupsExpandedUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUserGroupsExpandedUsingGETForbidden creates a GetAllUserGroupsExpandedUsingGETForbidden with default headers values
func NewGetAllUserGroupsExpandedUsingGETForbidden() *GetAllUserGroupsExpandedUsingGETForbidden {
	return &GetAllUserGroupsExpandedUsingGETForbidden{}
}

/*
GetAllUserGroupsExpandedUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllUserGroupsExpandedUsingGETForbidden struct {
}

// IsSuccess returns true when this get all user groups expanded using g e t forbidden response has a 2xx status code
func (o *GetAllUserGroupsExpandedUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all user groups expanded using g e t forbidden response has a 3xx status code
func (o *GetAllUserGroupsExpandedUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all user groups expanded using g e t forbidden response has a 4xx status code
func (o *GetAllUserGroupsExpandedUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all user groups expanded using g e t forbidden response has a 5xx status code
func (o *GetAllUserGroupsExpandedUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all user groups expanded using g e t forbidden response a status code equal to that given
func (o *GetAllUserGroupsExpandedUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all user groups expanded using g e t forbidden response
func (o *GetAllUserGroupsExpandedUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllUserGroupsExpandedUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETForbidden", 403)
}

func (o *GetAllUserGroupsExpandedUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETForbidden", 403)
}

func (o *GetAllUserGroupsExpandedUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllUserGroupsExpandedUsingGETNotFound creates a GetAllUserGroupsExpandedUsingGETNotFound with default headers values
func NewGetAllUserGroupsExpandedUsingGETNotFound() *GetAllUserGroupsExpandedUsingGETNotFound {
	return &GetAllUserGroupsExpandedUsingGETNotFound{}
}

/*
GetAllUserGroupsExpandedUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllUserGroupsExpandedUsingGETNotFound struct {
}

// IsSuccess returns true when this get all user groups expanded using g e t not found response has a 2xx status code
func (o *GetAllUserGroupsExpandedUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all user groups expanded using g e t not found response has a 3xx status code
func (o *GetAllUserGroupsExpandedUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all user groups expanded using g e t not found response has a 4xx status code
func (o *GetAllUserGroupsExpandedUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all user groups expanded using g e t not found response has a 5xx status code
func (o *GetAllUserGroupsExpandedUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all user groups expanded using g e t not found response a status code equal to that given
func (o *GetAllUserGroupsExpandedUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all user groups expanded using g e t not found response
func (o *GetAllUserGroupsExpandedUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllUserGroupsExpandedUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETNotFound", 404)
}

func (o *GetAllUserGroupsExpandedUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/user-groups/list/groups-expanded][%d] getAllUserGroupsExpandedUsingGETNotFound", 404)
}

func (o *GetAllUserGroupsExpandedUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
