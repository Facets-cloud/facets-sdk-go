// Code generated by go-swagger; DO NOT EDIT.

package deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetAutomationSuiteStatusUsingGETReader is a Reader for the GetAutomationSuiteStatusUsingGET structure.
type GetAutomationSuiteStatusUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAutomationSuiteStatusUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAutomationSuiteStatusUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAutomationSuiteStatusUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAutomationSuiteStatusUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAutomationSuiteStatusUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status] getAutomationSuiteStatusUsingGET", response, response.Code())
	}
}

// NewGetAutomationSuiteStatusUsingGETOK creates a GetAutomationSuiteStatusUsingGETOK with default headers values
func NewGetAutomationSuiteStatusUsingGETOK() *GetAutomationSuiteStatusUsingGETOK {
	return &GetAutomationSuiteStatusUsingGETOK{}
}

/*
GetAutomationSuiteStatusUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAutomationSuiteStatusUsingGETOK struct {
	Payload string
}

// IsSuccess returns true when this get automation suite status using g e t o k response has a 2xx status code
func (o *GetAutomationSuiteStatusUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get automation suite status using g e t o k response has a 3xx status code
func (o *GetAutomationSuiteStatusUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automation suite status using g e t o k response has a 4xx status code
func (o *GetAutomationSuiteStatusUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get automation suite status using g e t o k response has a 5xx status code
func (o *GetAutomationSuiteStatusUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get automation suite status using g e t o k response a status code equal to that given
func (o *GetAutomationSuiteStatusUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get automation suite status using g e t o k response
func (o *GetAutomationSuiteStatusUsingGETOK) Code() int {
	return 200
}

func (o *GetAutomationSuiteStatusUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETOK %s", 200, payload)
}

func (o *GetAutomationSuiteStatusUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETOK %s", 200, payload)
}

func (o *GetAutomationSuiteStatusUsingGETOK) GetPayload() string {
	return o.Payload
}

func (o *GetAutomationSuiteStatusUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAutomationSuiteStatusUsingGETUnauthorized creates a GetAutomationSuiteStatusUsingGETUnauthorized with default headers values
func NewGetAutomationSuiteStatusUsingGETUnauthorized() *GetAutomationSuiteStatusUsingGETUnauthorized {
	return &GetAutomationSuiteStatusUsingGETUnauthorized{}
}

/*
GetAutomationSuiteStatusUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAutomationSuiteStatusUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get automation suite status using g e t unauthorized response has a 2xx status code
func (o *GetAutomationSuiteStatusUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get automation suite status using g e t unauthorized response has a 3xx status code
func (o *GetAutomationSuiteStatusUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automation suite status using g e t unauthorized response has a 4xx status code
func (o *GetAutomationSuiteStatusUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get automation suite status using g e t unauthorized response has a 5xx status code
func (o *GetAutomationSuiteStatusUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get automation suite status using g e t unauthorized response a status code equal to that given
func (o *GetAutomationSuiteStatusUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get automation suite status using g e t unauthorized response
func (o *GetAutomationSuiteStatusUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAutomationSuiteStatusUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETUnauthorized", 401)
}

func (o *GetAutomationSuiteStatusUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETUnauthorized", 401)
}

func (o *GetAutomationSuiteStatusUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutomationSuiteStatusUsingGETForbidden creates a GetAutomationSuiteStatusUsingGETForbidden with default headers values
func NewGetAutomationSuiteStatusUsingGETForbidden() *GetAutomationSuiteStatusUsingGETForbidden {
	return &GetAutomationSuiteStatusUsingGETForbidden{}
}

/*
GetAutomationSuiteStatusUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAutomationSuiteStatusUsingGETForbidden struct {
}

// IsSuccess returns true when this get automation suite status using g e t forbidden response has a 2xx status code
func (o *GetAutomationSuiteStatusUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get automation suite status using g e t forbidden response has a 3xx status code
func (o *GetAutomationSuiteStatusUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automation suite status using g e t forbidden response has a 4xx status code
func (o *GetAutomationSuiteStatusUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get automation suite status using g e t forbidden response has a 5xx status code
func (o *GetAutomationSuiteStatusUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get automation suite status using g e t forbidden response a status code equal to that given
func (o *GetAutomationSuiteStatusUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get automation suite status using g e t forbidden response
func (o *GetAutomationSuiteStatusUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAutomationSuiteStatusUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETForbidden", 403)
}

func (o *GetAutomationSuiteStatusUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETForbidden", 403)
}

func (o *GetAutomationSuiteStatusUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAutomationSuiteStatusUsingGETNotFound creates a GetAutomationSuiteStatusUsingGETNotFound with default headers values
func NewGetAutomationSuiteStatusUsingGETNotFound() *GetAutomationSuiteStatusUsingGETNotFound {
	return &GetAutomationSuiteStatusUsingGETNotFound{}
}

/*
GetAutomationSuiteStatusUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAutomationSuiteStatusUsingGETNotFound struct {
}

// IsSuccess returns true when this get automation suite status using g e t not found response has a 2xx status code
func (o *GetAutomationSuiteStatusUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get automation suite status using g e t not found response has a 3xx status code
func (o *GetAutomationSuiteStatusUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get automation suite status using g e t not found response has a 4xx status code
func (o *GetAutomationSuiteStatusUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get automation suite status using g e t not found response has a 5xx status code
func (o *GetAutomationSuiteStatusUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get automation suite status using g e t not found response a status code equal to that given
func (o *GetAutomationSuiteStatusUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get automation suite status using g e t not found response
func (o *GetAutomationSuiteStatusUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAutomationSuiteStatusUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETNotFound", 404)
}

func (o *GetAutomationSuiteStatusUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/qa/{executionId}/status][%d] getAutomationSuiteStatusUsingGETNotFound", 404)
}

func (o *GetAutomationSuiteStatusUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
