// Code generated by go-swagger; DO NOT EDIT.

package deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// ValidateSanityResultUsingPOSTReader is a Reader for the ValidateSanityResultUsingPOST structure.
type ValidateSanityResultUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ValidateSanityResultUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewValidateSanityResultUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewValidateSanityResultUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewValidateSanityResultUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewValidateSanityResultUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewValidateSanityResultUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult] validateSanityResultUsingPOST", response, response.Code())
	}
}

// NewValidateSanityResultUsingPOSTOK creates a ValidateSanityResultUsingPOSTOK with default headers values
func NewValidateSanityResultUsingPOSTOK() *ValidateSanityResultUsingPOSTOK {
	return &ValidateSanityResultUsingPOSTOK{}
}

/*
ValidateSanityResultUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type ValidateSanityResultUsingPOSTOK struct {
}

// IsSuccess returns true when this validate sanity result using p o s t o k response has a 2xx status code
func (o *ValidateSanityResultUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate sanity result using p o s t o k response has a 3xx status code
func (o *ValidateSanityResultUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sanity result using p o s t o k response has a 4xx status code
func (o *ValidateSanityResultUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate sanity result using p o s t o k response has a 5xx status code
func (o *ValidateSanityResultUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sanity result using p o s t o k response a status code equal to that given
func (o *ValidateSanityResultUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the validate sanity result using p o s t o k response
func (o *ValidateSanityResultUsingPOSTOK) Code() int {
	return 200
}

func (o *ValidateSanityResultUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTOK", 200)
}

func (o *ValidateSanityResultUsingPOSTOK) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTOK", 200)
}

func (o *ValidateSanityResultUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSanityResultUsingPOSTCreated creates a ValidateSanityResultUsingPOSTCreated with default headers values
func NewValidateSanityResultUsingPOSTCreated() *ValidateSanityResultUsingPOSTCreated {
	return &ValidateSanityResultUsingPOSTCreated{}
}

/*
ValidateSanityResultUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type ValidateSanityResultUsingPOSTCreated struct {
}

// IsSuccess returns true when this validate sanity result using p o s t created response has a 2xx status code
func (o *ValidateSanityResultUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this validate sanity result using p o s t created response has a 3xx status code
func (o *ValidateSanityResultUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sanity result using p o s t created response has a 4xx status code
func (o *ValidateSanityResultUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this validate sanity result using p o s t created response has a 5xx status code
func (o *ValidateSanityResultUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sanity result using p o s t created response a status code equal to that given
func (o *ValidateSanityResultUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the validate sanity result using p o s t created response
func (o *ValidateSanityResultUsingPOSTCreated) Code() int {
	return 201
}

func (o *ValidateSanityResultUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTCreated", 201)
}

func (o *ValidateSanityResultUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTCreated", 201)
}

func (o *ValidateSanityResultUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSanityResultUsingPOSTUnauthorized creates a ValidateSanityResultUsingPOSTUnauthorized with default headers values
func NewValidateSanityResultUsingPOSTUnauthorized() *ValidateSanityResultUsingPOSTUnauthorized {
	return &ValidateSanityResultUsingPOSTUnauthorized{}
}

/*
ValidateSanityResultUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type ValidateSanityResultUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this validate sanity result using p o s t unauthorized response has a 2xx status code
func (o *ValidateSanityResultUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate sanity result using p o s t unauthorized response has a 3xx status code
func (o *ValidateSanityResultUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sanity result using p o s t unauthorized response has a 4xx status code
func (o *ValidateSanityResultUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate sanity result using p o s t unauthorized response has a 5xx status code
func (o *ValidateSanityResultUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sanity result using p o s t unauthorized response a status code equal to that given
func (o *ValidateSanityResultUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the validate sanity result using p o s t unauthorized response
func (o *ValidateSanityResultUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *ValidateSanityResultUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTUnauthorized", 401)
}

func (o *ValidateSanityResultUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTUnauthorized", 401)
}

func (o *ValidateSanityResultUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSanityResultUsingPOSTForbidden creates a ValidateSanityResultUsingPOSTForbidden with default headers values
func NewValidateSanityResultUsingPOSTForbidden() *ValidateSanityResultUsingPOSTForbidden {
	return &ValidateSanityResultUsingPOSTForbidden{}
}

/*
ValidateSanityResultUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type ValidateSanityResultUsingPOSTForbidden struct {
}

// IsSuccess returns true when this validate sanity result using p o s t forbidden response has a 2xx status code
func (o *ValidateSanityResultUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate sanity result using p o s t forbidden response has a 3xx status code
func (o *ValidateSanityResultUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sanity result using p o s t forbidden response has a 4xx status code
func (o *ValidateSanityResultUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate sanity result using p o s t forbidden response has a 5xx status code
func (o *ValidateSanityResultUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sanity result using p o s t forbidden response a status code equal to that given
func (o *ValidateSanityResultUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the validate sanity result using p o s t forbidden response
func (o *ValidateSanityResultUsingPOSTForbidden) Code() int {
	return 403
}

func (o *ValidateSanityResultUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTForbidden", 403)
}

func (o *ValidateSanityResultUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTForbidden", 403)
}

func (o *ValidateSanityResultUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewValidateSanityResultUsingPOSTNotFound creates a ValidateSanityResultUsingPOSTNotFound with default headers values
func NewValidateSanityResultUsingPOSTNotFound() *ValidateSanityResultUsingPOSTNotFound {
	return &ValidateSanityResultUsingPOSTNotFound{}
}

/*
ValidateSanityResultUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type ValidateSanityResultUsingPOSTNotFound struct {
}

// IsSuccess returns true when this validate sanity result using p o s t not found response has a 2xx status code
func (o *ValidateSanityResultUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this validate sanity result using p o s t not found response has a 3xx status code
func (o *ValidateSanityResultUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this validate sanity result using p o s t not found response has a 4xx status code
func (o *ValidateSanityResultUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this validate sanity result using p o s t not found response has a 5xx status code
func (o *ValidateSanityResultUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this validate sanity result using p o s t not found response a status code equal to that given
func (o *ValidateSanityResultUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the validate sanity result using p o s t not found response
func (o *ValidateSanityResultUsingPOSTNotFound) Code() int {
	return 404
}

func (o *ValidateSanityResultUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTNotFound", 404)
}

func (o *ValidateSanityResultUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc/v1/clusters/{clusterId}/deployments/qa/validateSanityResult][%d] validateSanityResultUsingPOSTNotFound", 404)
}

func (o *ValidateSanityResultUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
