// Code generated by go-swagger; DO NOT EDIT.

package deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetDeploymentsUsingGETReader is a Reader for the GetDeploymentsUsingGET structure.
type GetDeploymentsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDeploymentsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeploymentsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/clusters/{clusterId}/deployments] getDeploymentsUsingGET", response, response.Code())
	}
}

// NewGetDeploymentsUsingGETOK creates a GetDeploymentsUsingGETOK with default headers values
func NewGetDeploymentsUsingGETOK() *GetDeploymentsUsingGETOK {
	return &GetDeploymentsUsingGETOK{}
}

/*
GetDeploymentsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetDeploymentsUsingGETOK struct {
	Payload *models.ListDeploymentsWrapper
}

// IsSuccess returns true when this get deployments using g e t o k response has a 2xx status code
func (o *GetDeploymentsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deployments using g e t o k response has a 3xx status code
func (o *GetDeploymentsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments using g e t o k response has a 4xx status code
func (o *GetDeploymentsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployments using g e t o k response has a 5xx status code
func (o *GetDeploymentsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments using g e t o k response a status code equal to that given
func (o *GetDeploymentsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deployments using g e t o k response
func (o *GetDeploymentsUsingGETOK) Code() int {
	return 200
}

func (o *GetDeploymentsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETOK %s", 200, payload)
}

func (o *GetDeploymentsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETOK %s", 200, payload)
}

func (o *GetDeploymentsUsingGETOK) GetPayload() *models.ListDeploymentsWrapper {
	return o.Payload
}

func (o *GetDeploymentsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ListDeploymentsWrapper)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentsUsingGETUnauthorized creates a GetDeploymentsUsingGETUnauthorized with default headers values
func NewGetDeploymentsUsingGETUnauthorized() *GetDeploymentsUsingGETUnauthorized {
	return &GetDeploymentsUsingGETUnauthorized{}
}

/*
GetDeploymentsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDeploymentsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get deployments using g e t unauthorized response has a 2xx status code
func (o *GetDeploymentsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments using g e t unauthorized response has a 3xx status code
func (o *GetDeploymentsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments using g e t unauthorized response has a 4xx status code
func (o *GetDeploymentsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments using g e t unauthorized response has a 5xx status code
func (o *GetDeploymentsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments using g e t unauthorized response a status code equal to that given
func (o *GetDeploymentsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get deployments using g e t unauthorized response
func (o *GetDeploymentsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetDeploymentsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETUnauthorized", 401)
}

func (o *GetDeploymentsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETUnauthorized", 401)
}

func (o *GetDeploymentsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentsUsingGETForbidden creates a GetDeploymentsUsingGETForbidden with default headers values
func NewGetDeploymentsUsingGETForbidden() *GetDeploymentsUsingGETForbidden {
	return &GetDeploymentsUsingGETForbidden{}
}

/*
GetDeploymentsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDeploymentsUsingGETForbidden struct {
}

// IsSuccess returns true when this get deployments using g e t forbidden response has a 2xx status code
func (o *GetDeploymentsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments using g e t forbidden response has a 3xx status code
func (o *GetDeploymentsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments using g e t forbidden response has a 4xx status code
func (o *GetDeploymentsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments using g e t forbidden response has a 5xx status code
func (o *GetDeploymentsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments using g e t forbidden response a status code equal to that given
func (o *GetDeploymentsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get deployments using g e t forbidden response
func (o *GetDeploymentsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetDeploymentsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETForbidden", 403)
}

func (o *GetDeploymentsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETForbidden", 403)
}

func (o *GetDeploymentsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentsUsingGETNotFound creates a GetDeploymentsUsingGETNotFound with default headers values
func NewGetDeploymentsUsingGETNotFound() *GetDeploymentsUsingGETNotFound {
	return &GetDeploymentsUsingGETNotFound{}
}

/*
GetDeploymentsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeploymentsUsingGETNotFound struct {
}

// IsSuccess returns true when this get deployments using g e t not found response has a 2xx status code
func (o *GetDeploymentsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployments using g e t not found response has a 3xx status code
func (o *GetDeploymentsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployments using g e t not found response has a 4xx status code
func (o *GetDeploymentsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployments using g e t not found response has a 5xx status code
func (o *GetDeploymentsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployments using g e t not found response a status code equal to that given
func (o *GetDeploymentsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deployments using g e t not found response
func (o *GetDeploymentsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetDeploymentsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETNotFound", 404)
}

func (o *GetDeploymentsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments][%d] getDeploymentsUsingGETNotFound", 404)
}

func (o *GetDeploymentsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
