// Code generated by go-swagger; DO NOT EDIT.

package deployment_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetLogsUsingGETReader is a Reader for the GetLogsUsingGET structure.
type GetLogsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLogsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLogsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetLogsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetLogsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetLogsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc/v1/clusters/{clusterId}/deployments/{id}] getLogsUsingGET", response, response.Code())
	}
}

// NewGetLogsUsingGETOK creates a GetLogsUsingGETOK with default headers values
func NewGetLogsUsingGETOK() *GetLogsUsingGETOK {
	return &GetLogsUsingGETOK{}
}

/*
GetLogsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetLogsUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get logs using g e t o k response has a 2xx status code
func (o *GetLogsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get logs using g e t o k response has a 3xx status code
func (o *GetLogsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logs using g e t o k response has a 4xx status code
func (o *GetLogsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get logs using g e t o k response has a 5xx status code
func (o *GetLogsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get logs using g e t o k response a status code equal to that given
func (o *GetLogsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get logs using g e t o k response
func (o *GetLogsUsingGETOK) Code() int {
	return 200
}

func (o *GetLogsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETOK %s", 200, payload)
}

func (o *GetLogsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETOK %s", 200, payload)
}

func (o *GetLogsUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetLogsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetLogsUsingGETUnauthorized creates a GetLogsUsingGETUnauthorized with default headers values
func NewGetLogsUsingGETUnauthorized() *GetLogsUsingGETUnauthorized {
	return &GetLogsUsingGETUnauthorized{}
}

/*
GetLogsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetLogsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get logs using g e t unauthorized response has a 2xx status code
func (o *GetLogsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get logs using g e t unauthorized response has a 3xx status code
func (o *GetLogsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logs using g e t unauthorized response has a 4xx status code
func (o *GetLogsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get logs using g e t unauthorized response has a 5xx status code
func (o *GetLogsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get logs using g e t unauthorized response a status code equal to that given
func (o *GetLogsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get logs using g e t unauthorized response
func (o *GetLogsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetLogsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETUnauthorized", 401)
}

func (o *GetLogsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETUnauthorized", 401)
}

func (o *GetLogsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLogsUsingGETForbidden creates a GetLogsUsingGETForbidden with default headers values
func NewGetLogsUsingGETForbidden() *GetLogsUsingGETForbidden {
	return &GetLogsUsingGETForbidden{}
}

/*
GetLogsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetLogsUsingGETForbidden struct {
}

// IsSuccess returns true when this get logs using g e t forbidden response has a 2xx status code
func (o *GetLogsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get logs using g e t forbidden response has a 3xx status code
func (o *GetLogsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logs using g e t forbidden response has a 4xx status code
func (o *GetLogsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get logs using g e t forbidden response has a 5xx status code
func (o *GetLogsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get logs using g e t forbidden response a status code equal to that given
func (o *GetLogsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get logs using g e t forbidden response
func (o *GetLogsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetLogsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETForbidden", 403)
}

func (o *GetLogsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETForbidden", 403)
}

func (o *GetLogsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetLogsUsingGETNotFound creates a GetLogsUsingGETNotFound with default headers values
func NewGetLogsUsingGETNotFound() *GetLogsUsingGETNotFound {
	return &GetLogsUsingGETNotFound{}
}

/*
GetLogsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetLogsUsingGETNotFound struct {
}

// IsSuccess returns true when this get logs using g e t not found response has a 2xx status code
func (o *GetLogsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get logs using g e t not found response has a 3xx status code
func (o *GetLogsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get logs using g e t not found response has a 4xx status code
func (o *GetLogsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get logs using g e t not found response has a 5xx status code
func (o *GetLogsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get logs using g e t not found response a status code equal to that given
func (o *GetLogsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get logs using g e t not found response
func (o *GetLogsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetLogsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETNotFound", 404)
}

func (o *GetLogsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc/v1/clusters/{clusterId}/deployments/{id}][%d] getLogsUsingGETNotFound", 404)
}

func (o *GetLogsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
