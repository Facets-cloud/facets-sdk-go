// Code generated by go-swagger; DO NOT EDIT.

package t_f_output_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetOutputsByProviderSourceReader is a Reader for the GetOutputsByProviderSource structure.
type GetOutputsByProviderSourceReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutputsByProviderSourceReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutputsByProviderSourceOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutputsByProviderSourceBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutputsByProviderSourceNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetOutputsByProviderSourceMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutputsByProviderSourceInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/tf-outputs/provider] getOutputsByProviderSource", response, response.Code())
	}
}

// NewGetOutputsByProviderSourceOK creates a GetOutputsByProviderSourceOK with default headers values
func NewGetOutputsByProviderSourceOK() *GetOutputsByProviderSourceOK {
	return &GetOutputsByProviderSourceOK{}
}

/*
GetOutputsByProviderSourceOK describes a response with status code 200, with default header values.

OK
*/
type GetOutputsByProviderSourceOK struct {
	Payload []*models.TFOutputResponseDTO
}

// IsSuccess returns true when this get outputs by provider source o k response has a 2xx status code
func (o *GetOutputsByProviderSourceOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get outputs by provider source o k response has a 3xx status code
func (o *GetOutputsByProviderSourceOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outputs by provider source o k response has a 4xx status code
func (o *GetOutputsByProviderSourceOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outputs by provider source o k response has a 5xx status code
func (o *GetOutputsByProviderSourceOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get outputs by provider source o k response a status code equal to that given
func (o *GetOutputsByProviderSourceOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get outputs by provider source o k response
func (o *GetOutputsByProviderSourceOK) Code() int {
	return 200
}

func (o *GetOutputsByProviderSourceOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceOK %s", 200, payload)
}

func (o *GetOutputsByProviderSourceOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceOK %s", 200, payload)
}

func (o *GetOutputsByProviderSourceOK) GetPayload() []*models.TFOutputResponseDTO {
	return o.Payload
}

func (o *GetOutputsByProviderSourceOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputsByProviderSourceBadRequest creates a GetOutputsByProviderSourceBadRequest with default headers values
func NewGetOutputsByProviderSourceBadRequest() *GetOutputsByProviderSourceBadRequest {
	return &GetOutputsByProviderSourceBadRequest{}
}

/*
GetOutputsByProviderSourceBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOutputsByProviderSourceBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get outputs by provider source bad request response has a 2xx status code
func (o *GetOutputsByProviderSourceBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outputs by provider source bad request response has a 3xx status code
func (o *GetOutputsByProviderSourceBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outputs by provider source bad request response has a 4xx status code
func (o *GetOutputsByProviderSourceBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outputs by provider source bad request response has a 5xx status code
func (o *GetOutputsByProviderSourceBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get outputs by provider source bad request response a status code equal to that given
func (o *GetOutputsByProviderSourceBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get outputs by provider source bad request response
func (o *GetOutputsByProviderSourceBadRequest) Code() int {
	return 400
}

func (o *GetOutputsByProviderSourceBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceBadRequest %s", 400, payload)
}

func (o *GetOutputsByProviderSourceBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceBadRequest %s", 400, payload)
}

func (o *GetOutputsByProviderSourceBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputsByProviderSourceBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputsByProviderSourceNotFound creates a GetOutputsByProviderSourceNotFound with default headers values
func NewGetOutputsByProviderSourceNotFound() *GetOutputsByProviderSourceNotFound {
	return &GetOutputsByProviderSourceNotFound{}
}

/*
GetOutputsByProviderSourceNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOutputsByProviderSourceNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get outputs by provider source not found response has a 2xx status code
func (o *GetOutputsByProviderSourceNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outputs by provider source not found response has a 3xx status code
func (o *GetOutputsByProviderSourceNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outputs by provider source not found response has a 4xx status code
func (o *GetOutputsByProviderSourceNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outputs by provider source not found response has a 5xx status code
func (o *GetOutputsByProviderSourceNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get outputs by provider source not found response a status code equal to that given
func (o *GetOutputsByProviderSourceNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get outputs by provider source not found response
func (o *GetOutputsByProviderSourceNotFound) Code() int {
	return 404
}

func (o *GetOutputsByProviderSourceNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceNotFound %s", 404, payload)
}

func (o *GetOutputsByProviderSourceNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceNotFound %s", 404, payload)
}

func (o *GetOutputsByProviderSourceNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputsByProviderSourceNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputsByProviderSourceMethodNotAllowed creates a GetOutputsByProviderSourceMethodNotAllowed with default headers values
func NewGetOutputsByProviderSourceMethodNotAllowed() *GetOutputsByProviderSourceMethodNotAllowed {
	return &GetOutputsByProviderSourceMethodNotAllowed{}
}

/*
GetOutputsByProviderSourceMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetOutputsByProviderSourceMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get outputs by provider source method not allowed response has a 2xx status code
func (o *GetOutputsByProviderSourceMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outputs by provider source method not allowed response has a 3xx status code
func (o *GetOutputsByProviderSourceMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outputs by provider source method not allowed response has a 4xx status code
func (o *GetOutputsByProviderSourceMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get outputs by provider source method not allowed response has a 5xx status code
func (o *GetOutputsByProviderSourceMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get outputs by provider source method not allowed response a status code equal to that given
func (o *GetOutputsByProviderSourceMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get outputs by provider source method not allowed response
func (o *GetOutputsByProviderSourceMethodNotAllowed) Code() int {
	return 405
}

func (o *GetOutputsByProviderSourceMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceMethodNotAllowed %s", 405, payload)
}

func (o *GetOutputsByProviderSourceMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceMethodNotAllowed %s", 405, payload)
}

func (o *GetOutputsByProviderSourceMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputsByProviderSourceMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputsByProviderSourceInternalServerError creates a GetOutputsByProviderSourceInternalServerError with default headers values
func NewGetOutputsByProviderSourceInternalServerError() *GetOutputsByProviderSourceInternalServerError {
	return &GetOutputsByProviderSourceInternalServerError{}
}

/*
GetOutputsByProviderSourceInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOutputsByProviderSourceInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get outputs by provider source internal server error response has a 2xx status code
func (o *GetOutputsByProviderSourceInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get outputs by provider source internal server error response has a 3xx status code
func (o *GetOutputsByProviderSourceInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get outputs by provider source internal server error response has a 4xx status code
func (o *GetOutputsByProviderSourceInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get outputs by provider source internal server error response has a 5xx status code
func (o *GetOutputsByProviderSourceInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get outputs by provider source internal server error response a status code equal to that given
func (o *GetOutputsByProviderSourceInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get outputs by provider source internal server error response
func (o *GetOutputsByProviderSourceInternalServerError) Code() int {
	return 500
}

func (o *GetOutputsByProviderSourceInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceInternalServerError %s", 500, payload)
}

func (o *GetOutputsByProviderSourceInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/provider][%d] getOutputsByProviderSourceInternalServerError %s", 500, payload)
}

func (o *GetOutputsByProviderSourceInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputsByProviderSourceInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
