// Code generated by go-swagger; DO NOT EDIT.

package t_f_output_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllOutputsReader is a Reader for the GetAllOutputs structure.
type GetAllOutputsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllOutputsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllOutputsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllOutputsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllOutputsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllOutputsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllOutputsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/tf-outputs] getAllOutputs", response, response.Code())
	}
}

// NewGetAllOutputsOK creates a GetAllOutputsOK with default headers values
func NewGetAllOutputsOK() *GetAllOutputsOK {
	return &GetAllOutputsOK{}
}

/*
GetAllOutputsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllOutputsOK struct {
	Payload []*models.TFOutputResponseDTO
}

// IsSuccess returns true when this get all outputs o k response has a 2xx status code
func (o *GetAllOutputsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all outputs o k response has a 3xx status code
func (o *GetAllOutputsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all outputs o k response has a 4xx status code
func (o *GetAllOutputsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all outputs o k response has a 5xx status code
func (o *GetAllOutputsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all outputs o k response a status code equal to that given
func (o *GetAllOutputsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all outputs o k response
func (o *GetAllOutputsOK) Code() int {
	return 200
}

func (o *GetAllOutputsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsOK %s", 200, payload)
}

func (o *GetAllOutputsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsOK %s", 200, payload)
}

func (o *GetAllOutputsOK) GetPayload() []*models.TFOutputResponseDTO {
	return o.Payload
}

func (o *GetAllOutputsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllOutputsBadRequest creates a GetAllOutputsBadRequest with default headers values
func NewGetAllOutputsBadRequest() *GetAllOutputsBadRequest {
	return &GetAllOutputsBadRequest{}
}

/*
GetAllOutputsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllOutputsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all outputs bad request response has a 2xx status code
func (o *GetAllOutputsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all outputs bad request response has a 3xx status code
func (o *GetAllOutputsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all outputs bad request response has a 4xx status code
func (o *GetAllOutputsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all outputs bad request response has a 5xx status code
func (o *GetAllOutputsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all outputs bad request response a status code equal to that given
func (o *GetAllOutputsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all outputs bad request response
func (o *GetAllOutputsBadRequest) Code() int {
	return 400
}

func (o *GetAllOutputsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsBadRequest %s", 400, payload)
}

func (o *GetAllOutputsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsBadRequest %s", 400, payload)
}

func (o *GetAllOutputsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllOutputsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllOutputsNotFound creates a GetAllOutputsNotFound with default headers values
func NewGetAllOutputsNotFound() *GetAllOutputsNotFound {
	return &GetAllOutputsNotFound{}
}

/*
GetAllOutputsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllOutputsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all outputs not found response has a 2xx status code
func (o *GetAllOutputsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all outputs not found response has a 3xx status code
func (o *GetAllOutputsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all outputs not found response has a 4xx status code
func (o *GetAllOutputsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all outputs not found response has a 5xx status code
func (o *GetAllOutputsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all outputs not found response a status code equal to that given
func (o *GetAllOutputsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all outputs not found response
func (o *GetAllOutputsNotFound) Code() int {
	return 404
}

func (o *GetAllOutputsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsNotFound %s", 404, payload)
}

func (o *GetAllOutputsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsNotFound %s", 404, payload)
}

func (o *GetAllOutputsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllOutputsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllOutputsMethodNotAllowed creates a GetAllOutputsMethodNotAllowed with default headers values
func NewGetAllOutputsMethodNotAllowed() *GetAllOutputsMethodNotAllowed {
	return &GetAllOutputsMethodNotAllowed{}
}

/*
GetAllOutputsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllOutputsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all outputs method not allowed response has a 2xx status code
func (o *GetAllOutputsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all outputs method not allowed response has a 3xx status code
func (o *GetAllOutputsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all outputs method not allowed response has a 4xx status code
func (o *GetAllOutputsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all outputs method not allowed response has a 5xx status code
func (o *GetAllOutputsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all outputs method not allowed response a status code equal to that given
func (o *GetAllOutputsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all outputs method not allowed response
func (o *GetAllOutputsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllOutputsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllOutputsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllOutputsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllOutputsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllOutputsInternalServerError creates a GetAllOutputsInternalServerError with default headers values
func NewGetAllOutputsInternalServerError() *GetAllOutputsInternalServerError {
	return &GetAllOutputsInternalServerError{}
}

/*
GetAllOutputsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllOutputsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all outputs internal server error response has a 2xx status code
func (o *GetAllOutputsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all outputs internal server error response has a 3xx status code
func (o *GetAllOutputsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all outputs internal server error response has a 4xx status code
func (o *GetAllOutputsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all outputs internal server error response has a 5xx status code
func (o *GetAllOutputsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all outputs internal server error response a status code equal to that given
func (o *GetAllOutputsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all outputs internal server error response
func (o *GetAllOutputsInternalServerError) Code() int {
	return 500
}

func (o *GetAllOutputsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsInternalServerError %s", 500, payload)
}

func (o *GetAllOutputsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs][%d] getAllOutputsInternalServerError %s", 500, payload)
}

func (o *GetAllOutputsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllOutputsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
