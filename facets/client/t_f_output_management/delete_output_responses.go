// Code generated by go-swagger; DO NOT EDIT.

package t_f_output_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteOutputReader is a Reader for the DeleteOutput structure.
type DeleteOutputReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOutputReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteOutputOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteOutputBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteOutputNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteOutputMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteOutputInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/tf-outputs/{name}] deleteOutput", response, response.Code())
	}
}

// NewDeleteOutputOK creates a DeleteOutputOK with default headers values
func NewDeleteOutputOK() *DeleteOutputOK {
	return &DeleteOutputOK{}
}

/*
DeleteOutputOK describes a response with status code 200, with default header values.

OK
*/
type DeleteOutputOK struct {
}

// IsSuccess returns true when this delete output o k response has a 2xx status code
func (o *DeleteOutputOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete output o k response has a 3xx status code
func (o *DeleteOutputOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete output o k response has a 4xx status code
func (o *DeleteOutputOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete output o k response has a 5xx status code
func (o *DeleteOutputOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete output o k response a status code equal to that given
func (o *DeleteOutputOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete output o k response
func (o *DeleteOutputOK) Code() int {
	return 200
}

func (o *DeleteOutputOK) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputOK", 200)
}

func (o *DeleteOutputOK) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputOK", 200)
}

func (o *DeleteOutputOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOutputBadRequest creates a DeleteOutputBadRequest with default headers values
func NewDeleteOutputBadRequest() *DeleteOutputBadRequest {
	return &DeleteOutputBadRequest{}
}

/*
DeleteOutputBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteOutputBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete output bad request response has a 2xx status code
func (o *DeleteOutputBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete output bad request response has a 3xx status code
func (o *DeleteOutputBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete output bad request response has a 4xx status code
func (o *DeleteOutputBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete output bad request response has a 5xx status code
func (o *DeleteOutputBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete output bad request response a status code equal to that given
func (o *DeleteOutputBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete output bad request response
func (o *DeleteOutputBadRequest) Code() int {
	return 400
}

func (o *DeleteOutputBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputBadRequest %s", 400, payload)
}

func (o *DeleteOutputBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputBadRequest %s", 400, payload)
}

func (o *DeleteOutputBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteOutputBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutputNotFound creates a DeleteOutputNotFound with default headers values
func NewDeleteOutputNotFound() *DeleteOutputNotFound {
	return &DeleteOutputNotFound{}
}

/*
DeleteOutputNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteOutputNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete output not found response has a 2xx status code
func (o *DeleteOutputNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete output not found response has a 3xx status code
func (o *DeleteOutputNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete output not found response has a 4xx status code
func (o *DeleteOutputNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete output not found response has a 5xx status code
func (o *DeleteOutputNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete output not found response a status code equal to that given
func (o *DeleteOutputNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete output not found response
func (o *DeleteOutputNotFound) Code() int {
	return 404
}

func (o *DeleteOutputNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputNotFound %s", 404, payload)
}

func (o *DeleteOutputNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputNotFound %s", 404, payload)
}

func (o *DeleteOutputNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteOutputNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutputMethodNotAllowed creates a DeleteOutputMethodNotAllowed with default headers values
func NewDeleteOutputMethodNotAllowed() *DeleteOutputMethodNotAllowed {
	return &DeleteOutputMethodNotAllowed{}
}

/*
DeleteOutputMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteOutputMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete output method not allowed response has a 2xx status code
func (o *DeleteOutputMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete output method not allowed response has a 3xx status code
func (o *DeleteOutputMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete output method not allowed response has a 4xx status code
func (o *DeleteOutputMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete output method not allowed response has a 5xx status code
func (o *DeleteOutputMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete output method not allowed response a status code equal to that given
func (o *DeleteOutputMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete output method not allowed response
func (o *DeleteOutputMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteOutputMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputMethodNotAllowed %s", 405, payload)
}

func (o *DeleteOutputMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputMethodNotAllowed %s", 405, payload)
}

func (o *DeleteOutputMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteOutputMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteOutputInternalServerError creates a DeleteOutputInternalServerError with default headers values
func NewDeleteOutputInternalServerError() *DeleteOutputInternalServerError {
	return &DeleteOutputInternalServerError{}
}

/*
DeleteOutputInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteOutputInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete output internal server error response has a 2xx status code
func (o *DeleteOutputInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete output internal server error response has a 3xx status code
func (o *DeleteOutputInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete output internal server error response has a 4xx status code
func (o *DeleteOutputInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete output internal server error response has a 5xx status code
func (o *DeleteOutputInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete output internal server error response a status code equal to that given
func (o *DeleteOutputInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete output internal server error response
func (o *DeleteOutputInternalServerError) Code() int {
	return 500
}

func (o *DeleteOutputInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputInternalServerError %s", 500, payload)
}

func (o *DeleteOutputInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/tf-outputs/{name}][%d] deleteOutputInternalServerError %s", 500, payload)
}

func (o *DeleteOutputInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteOutputInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
