// Code generated by go-swagger; DO NOT EDIT.

package t_f_output_management

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetOutputByNameReader is a Reader for the GetOutputByName structure.
type GetOutputByNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetOutputByNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetOutputByNameOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetOutputByNameBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetOutputByNameNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetOutputByNameMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetOutputByNameInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/tf-outputs/{name}] getOutputByName", response, response.Code())
	}
}

// NewGetOutputByNameOK creates a GetOutputByNameOK with default headers values
func NewGetOutputByNameOK() *GetOutputByNameOK {
	return &GetOutputByNameOK{}
}

/*
GetOutputByNameOK describes a response with status code 200, with default header values.

OK
*/
type GetOutputByNameOK struct {
	Payload *models.TFOutputResponseDTO
}

// IsSuccess returns true when this get output by name o k response has a 2xx status code
func (o *GetOutputByNameOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get output by name o k response has a 3xx status code
func (o *GetOutputByNameOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output by name o k response has a 4xx status code
func (o *GetOutputByNameOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get output by name o k response has a 5xx status code
func (o *GetOutputByNameOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get output by name o k response a status code equal to that given
func (o *GetOutputByNameOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get output by name o k response
func (o *GetOutputByNameOK) Code() int {
	return 200
}

func (o *GetOutputByNameOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameOK %s", 200, payload)
}

func (o *GetOutputByNameOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameOK %s", 200, payload)
}

func (o *GetOutputByNameOK) GetPayload() *models.TFOutputResponseDTO {
	return o.Payload
}

func (o *GetOutputByNameOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TFOutputResponseDTO)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputByNameBadRequest creates a GetOutputByNameBadRequest with default headers values
func NewGetOutputByNameBadRequest() *GetOutputByNameBadRequest {
	return &GetOutputByNameBadRequest{}
}

/*
GetOutputByNameBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetOutputByNameBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output by name bad request response has a 2xx status code
func (o *GetOutputByNameBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output by name bad request response has a 3xx status code
func (o *GetOutputByNameBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output by name bad request response has a 4xx status code
func (o *GetOutputByNameBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output by name bad request response has a 5xx status code
func (o *GetOutputByNameBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get output by name bad request response a status code equal to that given
func (o *GetOutputByNameBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get output by name bad request response
func (o *GetOutputByNameBadRequest) Code() int {
	return 400
}

func (o *GetOutputByNameBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameBadRequest %s", 400, payload)
}

func (o *GetOutputByNameBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameBadRequest %s", 400, payload)
}

func (o *GetOutputByNameBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputByNameBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputByNameNotFound creates a GetOutputByNameNotFound with default headers values
func NewGetOutputByNameNotFound() *GetOutputByNameNotFound {
	return &GetOutputByNameNotFound{}
}

/*
GetOutputByNameNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetOutputByNameNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output by name not found response has a 2xx status code
func (o *GetOutputByNameNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output by name not found response has a 3xx status code
func (o *GetOutputByNameNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output by name not found response has a 4xx status code
func (o *GetOutputByNameNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output by name not found response has a 5xx status code
func (o *GetOutputByNameNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get output by name not found response a status code equal to that given
func (o *GetOutputByNameNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get output by name not found response
func (o *GetOutputByNameNotFound) Code() int {
	return 404
}

func (o *GetOutputByNameNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameNotFound %s", 404, payload)
}

func (o *GetOutputByNameNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameNotFound %s", 404, payload)
}

func (o *GetOutputByNameNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputByNameNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputByNameMethodNotAllowed creates a GetOutputByNameMethodNotAllowed with default headers values
func NewGetOutputByNameMethodNotAllowed() *GetOutputByNameMethodNotAllowed {
	return &GetOutputByNameMethodNotAllowed{}
}

/*
GetOutputByNameMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetOutputByNameMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output by name method not allowed response has a 2xx status code
func (o *GetOutputByNameMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output by name method not allowed response has a 3xx status code
func (o *GetOutputByNameMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output by name method not allowed response has a 4xx status code
func (o *GetOutputByNameMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get output by name method not allowed response has a 5xx status code
func (o *GetOutputByNameMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get output by name method not allowed response a status code equal to that given
func (o *GetOutputByNameMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get output by name method not allowed response
func (o *GetOutputByNameMethodNotAllowed) Code() int {
	return 405
}

func (o *GetOutputByNameMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetOutputByNameMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameMethodNotAllowed %s", 405, payload)
}

func (o *GetOutputByNameMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputByNameMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetOutputByNameInternalServerError creates a GetOutputByNameInternalServerError with default headers values
func NewGetOutputByNameInternalServerError() *GetOutputByNameInternalServerError {
	return &GetOutputByNameInternalServerError{}
}

/*
GetOutputByNameInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetOutputByNameInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get output by name internal server error response has a 2xx status code
func (o *GetOutputByNameInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get output by name internal server error response has a 3xx status code
func (o *GetOutputByNameInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get output by name internal server error response has a 4xx status code
func (o *GetOutputByNameInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get output by name internal server error response has a 5xx status code
func (o *GetOutputByNameInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get output by name internal server error response a status code equal to that given
func (o *GetOutputByNameInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get output by name internal server error response
func (o *GetOutputByNameInternalServerError) Code() int {
	return 500
}

func (o *GetOutputByNameInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameInternalServerError %s", 500, payload)
}

func (o *GetOutputByNameInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/tf-outputs/{name}][%d] getOutputByNameInternalServerError %s", 500, payload)
}

func (o *GetOutputByNameInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetOutputByNameInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
