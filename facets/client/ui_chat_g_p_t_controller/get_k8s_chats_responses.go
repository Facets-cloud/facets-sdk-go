// Code generated by go-swagger; DO NOT EDIT.

package ui_chat_g_p_t_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetK8sChatsReader is a Reader for the GetK8sChats structure.
type GetK8sChatsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetK8sChatsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetK8sChatsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetK8sChatsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetK8sChatsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetK8sChatsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetK8sChatsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat] getK8sChats", response, response.Code())
	}
}

// NewGetK8sChatsOK creates a GetK8sChatsOK with default headers values
func NewGetK8sChatsOK() *GetK8sChatsOK {
	return &GetK8sChatsOK{}
}

/*
GetK8sChatsOK describes a response with status code 200, with default header values.

Chats found
*/
type GetK8sChatsOK struct {
	Payload *models.ChatMessage
}

// IsSuccess returns true when this get k8s chats o k response has a 2xx status code
func (o *GetK8sChatsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get k8s chats o k response has a 3xx status code
func (o *GetK8sChatsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s chats o k response has a 4xx status code
func (o *GetK8sChatsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get k8s chats o k response has a 5xx status code
func (o *GetK8sChatsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s chats o k response a status code equal to that given
func (o *GetK8sChatsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get k8s chats o k response
func (o *GetK8sChatsOK) Code() int {
	return 200
}

func (o *GetK8sChatsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsOK %s", 200, payload)
}

func (o *GetK8sChatsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsOK %s", 200, payload)
}

func (o *GetK8sChatsOK) GetPayload() *models.ChatMessage {
	return o.Payload
}

func (o *GetK8sChatsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ChatMessage)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetK8sChatsBadRequest creates a GetK8sChatsBadRequest with default headers values
func NewGetK8sChatsBadRequest() *GetK8sChatsBadRequest {
	return &GetK8sChatsBadRequest{}
}

/*
GetK8sChatsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetK8sChatsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get k8s chats bad request response has a 2xx status code
func (o *GetK8sChatsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s chats bad request response has a 3xx status code
func (o *GetK8sChatsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s chats bad request response has a 4xx status code
func (o *GetK8sChatsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s chats bad request response has a 5xx status code
func (o *GetK8sChatsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s chats bad request response a status code equal to that given
func (o *GetK8sChatsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get k8s chats bad request response
func (o *GetK8sChatsBadRequest) Code() int {
	return 400
}

func (o *GetK8sChatsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsBadRequest %s", 400, payload)
}

func (o *GetK8sChatsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsBadRequest %s", 400, payload)
}

func (o *GetK8sChatsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetK8sChatsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetK8sChatsNotFound creates a GetK8sChatsNotFound with default headers values
func NewGetK8sChatsNotFound() *GetK8sChatsNotFound {
	return &GetK8sChatsNotFound{}
}

/*
GetK8sChatsNotFound describes a response with status code 404, with default header values.

Cluster not found
*/
type GetK8sChatsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get k8s chats not found response has a 2xx status code
func (o *GetK8sChatsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s chats not found response has a 3xx status code
func (o *GetK8sChatsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s chats not found response has a 4xx status code
func (o *GetK8sChatsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s chats not found response has a 5xx status code
func (o *GetK8sChatsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s chats not found response a status code equal to that given
func (o *GetK8sChatsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get k8s chats not found response
func (o *GetK8sChatsNotFound) Code() int {
	return 404
}

func (o *GetK8sChatsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsNotFound %s", 404, payload)
}

func (o *GetK8sChatsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsNotFound %s", 404, payload)
}

func (o *GetK8sChatsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetK8sChatsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetK8sChatsMethodNotAllowed creates a GetK8sChatsMethodNotAllowed with default headers values
func NewGetK8sChatsMethodNotAllowed() *GetK8sChatsMethodNotAllowed {
	return &GetK8sChatsMethodNotAllowed{}
}

/*
GetK8sChatsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetK8sChatsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get k8s chats method not allowed response has a 2xx status code
func (o *GetK8sChatsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s chats method not allowed response has a 3xx status code
func (o *GetK8sChatsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s chats method not allowed response has a 4xx status code
func (o *GetK8sChatsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get k8s chats method not allowed response has a 5xx status code
func (o *GetK8sChatsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get k8s chats method not allowed response a status code equal to that given
func (o *GetK8sChatsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get k8s chats method not allowed response
func (o *GetK8sChatsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetK8sChatsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsMethodNotAllowed %s", 405, payload)
}

func (o *GetK8sChatsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsMethodNotAllowed %s", 405, payload)
}

func (o *GetK8sChatsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetK8sChatsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetK8sChatsInternalServerError creates a GetK8sChatsInternalServerError with default headers values
func NewGetK8sChatsInternalServerError() *GetK8sChatsInternalServerError {
	return &GetK8sChatsInternalServerError{}
}

/*
GetK8sChatsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetK8sChatsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get k8s chats internal server error response has a 2xx status code
func (o *GetK8sChatsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get k8s chats internal server error response has a 3xx status code
func (o *GetK8sChatsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get k8s chats internal server error response has a 4xx status code
func (o *GetK8sChatsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get k8s chats internal server error response has a 5xx status code
func (o *GetK8sChatsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get k8s chats internal server error response a status code equal to that given
func (o *GetK8sChatsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get k8s chats internal server error response
func (o *GetK8sChatsInternalServerError) Code() int {
	return 500
}

func (o *GetK8sChatsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsInternalServerError %s", 500, payload)
}

func (o *GetK8sChatsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/clusters/{clusterId}/k8s-chat][%d] getK8sChatsInternalServerError %s", 500, payload)
}

func (o *GetK8sChatsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetK8sChatsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
