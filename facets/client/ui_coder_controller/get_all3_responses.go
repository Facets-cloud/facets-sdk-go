// Code generated by go-swagger; DO NOT EDIT.

package ui_coder_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAll3Reader is a Reader for the GetAll3 structure.
type GetAll3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAll3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAll3OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAll3BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAll3NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAll3MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAll3InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces] getAll_3", response, response.Code())
	}
}

// NewGetAll3OK creates a GetAll3OK with default headers values
func NewGetAll3OK() *GetAll3OK {
	return &GetAll3OK{}
}

/*
GetAll3OK describes a response with status code 200, with default header values.

OK
*/
type GetAll3OK struct {
	Payload []*models.CoderWorkspaceResponse
}

// IsSuccess returns true when this get all3 o k response has a 2xx status code
func (o *GetAll3OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all3 o k response has a 3xx status code
func (o *GetAll3OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all3 o k response has a 4xx status code
func (o *GetAll3OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all3 o k response has a 5xx status code
func (o *GetAll3OK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all3 o k response a status code equal to that given
func (o *GetAll3OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all3 o k response
func (o *GetAll3OK) Code() int {
	return 200
}

func (o *GetAll3OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3OK %s", 200, payload)
}

func (o *GetAll3OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3OK %s", 200, payload)
}

func (o *GetAll3OK) GetPayload() []*models.CoderWorkspaceResponse {
	return o.Payload
}

func (o *GetAll3OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll3BadRequest creates a GetAll3BadRequest with default headers values
func NewGetAll3BadRequest() *GetAll3BadRequest {
	return &GetAll3BadRequest{}
}

/*
GetAll3BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAll3BadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all3 bad request response has a 2xx status code
func (o *GetAll3BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all3 bad request response has a 3xx status code
func (o *GetAll3BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all3 bad request response has a 4xx status code
func (o *GetAll3BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all3 bad request response has a 5xx status code
func (o *GetAll3BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all3 bad request response a status code equal to that given
func (o *GetAll3BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all3 bad request response
func (o *GetAll3BadRequest) Code() int {
	return 400
}

func (o *GetAll3BadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3BadRequest %s", 400, payload)
}

func (o *GetAll3BadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3BadRequest %s", 400, payload)
}

func (o *GetAll3BadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll3BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll3NotFound creates a GetAll3NotFound with default headers values
func NewGetAll3NotFound() *GetAll3NotFound {
	return &GetAll3NotFound{}
}

/*
GetAll3NotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAll3NotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all3 not found response has a 2xx status code
func (o *GetAll3NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all3 not found response has a 3xx status code
func (o *GetAll3NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all3 not found response has a 4xx status code
func (o *GetAll3NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all3 not found response has a 5xx status code
func (o *GetAll3NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all3 not found response a status code equal to that given
func (o *GetAll3NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all3 not found response
func (o *GetAll3NotFound) Code() int {
	return 404
}

func (o *GetAll3NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3NotFound %s", 404, payload)
}

func (o *GetAll3NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3NotFound %s", 404, payload)
}

func (o *GetAll3NotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll3NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll3MethodNotAllowed creates a GetAll3MethodNotAllowed with default headers values
func NewGetAll3MethodNotAllowed() *GetAll3MethodNotAllowed {
	return &GetAll3MethodNotAllowed{}
}

/*
GetAll3MethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAll3MethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all3 method not allowed response has a 2xx status code
func (o *GetAll3MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all3 method not allowed response has a 3xx status code
func (o *GetAll3MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all3 method not allowed response has a 4xx status code
func (o *GetAll3MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all3 method not allowed response has a 5xx status code
func (o *GetAll3MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all3 method not allowed response a status code equal to that given
func (o *GetAll3MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all3 method not allowed response
func (o *GetAll3MethodNotAllowed) Code() int {
	return 405
}

func (o *GetAll3MethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3MethodNotAllowed %s", 405, payload)
}

func (o *GetAll3MethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3MethodNotAllowed %s", 405, payload)
}

func (o *GetAll3MethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll3MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAll3InternalServerError creates a GetAll3InternalServerError with default headers values
func NewGetAll3InternalServerError() *GetAll3InternalServerError {
	return &GetAll3InternalServerError{}
}

/*
GetAll3InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAll3InternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all3 internal server error response has a 2xx status code
func (o *GetAll3InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all3 internal server error response has a 3xx status code
func (o *GetAll3InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all3 internal server error response has a 4xx status code
func (o *GetAll3InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all3 internal server error response has a 5xx status code
func (o *GetAll3InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all3 internal server error response a status code equal to that given
func (o *GetAll3InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all3 internal server error response
func (o *GetAll3InternalServerError) Code() int {
	return 500
}

func (o *GetAll3InternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3InternalServerError %s", 500, payload)
}

func (o *GetAll3InternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/workspaces][%d] getAll3InternalServerError %s", 500, payload)
}

func (o *GetAll3InternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAll3InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
