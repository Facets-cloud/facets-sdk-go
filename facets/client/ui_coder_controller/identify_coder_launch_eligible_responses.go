// Code generated by go-swagger; DO NOT EDIT.

package ui_coder_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// IdentifyCoderLaunchEligibleReader is a Reader for the IdentifyCoderLaunchEligible structure.
type IdentifyCoderLaunchEligibleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *IdentifyCoderLaunchEligibleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewIdentifyCoderLaunchEligibleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewIdentifyCoderLaunchEligibleBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewIdentifyCoderLaunchEligibleNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewIdentifyCoderLaunchEligibleMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewIdentifyCoderLaunchEligibleInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility] identifyCoderLaunchEligible", response, response.Code())
	}
}

// NewIdentifyCoderLaunchEligibleOK creates a IdentifyCoderLaunchEligibleOK with default headers values
func NewIdentifyCoderLaunchEligibleOK() *IdentifyCoderLaunchEligibleOK {
	return &IdentifyCoderLaunchEligibleOK{}
}

/*
IdentifyCoderLaunchEligibleOK describes a response with status code 200, with default header values.

OK
*/
type IdentifyCoderLaunchEligibleOK struct {
	Payload *models.CoderLaunchEligibilityResponse
}

// IsSuccess returns true when this identify coder launch eligible o k response has a 2xx status code
func (o *IdentifyCoderLaunchEligibleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this identify coder launch eligible o k response has a 3xx status code
func (o *IdentifyCoderLaunchEligibleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identify coder launch eligible o k response has a 4xx status code
func (o *IdentifyCoderLaunchEligibleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this identify coder launch eligible o k response has a 5xx status code
func (o *IdentifyCoderLaunchEligibleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this identify coder launch eligible o k response a status code equal to that given
func (o *IdentifyCoderLaunchEligibleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the identify coder launch eligible o k response
func (o *IdentifyCoderLaunchEligibleOK) Code() int {
	return 200
}

func (o *IdentifyCoderLaunchEligibleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleOK %s", 200, payload)
}

func (o *IdentifyCoderLaunchEligibleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleOK %s", 200, payload)
}

func (o *IdentifyCoderLaunchEligibleOK) GetPayload() *models.CoderLaunchEligibilityResponse {
	return o.Payload
}

func (o *IdentifyCoderLaunchEligibleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.CoderLaunchEligibilityResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentifyCoderLaunchEligibleBadRequest creates a IdentifyCoderLaunchEligibleBadRequest with default headers values
func NewIdentifyCoderLaunchEligibleBadRequest() *IdentifyCoderLaunchEligibleBadRequest {
	return &IdentifyCoderLaunchEligibleBadRequest{}
}

/*
IdentifyCoderLaunchEligibleBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type IdentifyCoderLaunchEligibleBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this identify coder launch eligible bad request response has a 2xx status code
func (o *IdentifyCoderLaunchEligibleBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identify coder launch eligible bad request response has a 3xx status code
func (o *IdentifyCoderLaunchEligibleBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identify coder launch eligible bad request response has a 4xx status code
func (o *IdentifyCoderLaunchEligibleBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this identify coder launch eligible bad request response has a 5xx status code
func (o *IdentifyCoderLaunchEligibleBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this identify coder launch eligible bad request response a status code equal to that given
func (o *IdentifyCoderLaunchEligibleBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the identify coder launch eligible bad request response
func (o *IdentifyCoderLaunchEligibleBadRequest) Code() int {
	return 400
}

func (o *IdentifyCoderLaunchEligibleBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleBadRequest %s", 400, payload)
}

func (o *IdentifyCoderLaunchEligibleBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleBadRequest %s", 400, payload)
}

func (o *IdentifyCoderLaunchEligibleBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *IdentifyCoderLaunchEligibleBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentifyCoderLaunchEligibleNotFound creates a IdentifyCoderLaunchEligibleNotFound with default headers values
func NewIdentifyCoderLaunchEligibleNotFound() *IdentifyCoderLaunchEligibleNotFound {
	return &IdentifyCoderLaunchEligibleNotFound{}
}

/*
IdentifyCoderLaunchEligibleNotFound describes a response with status code 404, with default header values.

Not Found
*/
type IdentifyCoderLaunchEligibleNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this identify coder launch eligible not found response has a 2xx status code
func (o *IdentifyCoderLaunchEligibleNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identify coder launch eligible not found response has a 3xx status code
func (o *IdentifyCoderLaunchEligibleNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identify coder launch eligible not found response has a 4xx status code
func (o *IdentifyCoderLaunchEligibleNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this identify coder launch eligible not found response has a 5xx status code
func (o *IdentifyCoderLaunchEligibleNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this identify coder launch eligible not found response a status code equal to that given
func (o *IdentifyCoderLaunchEligibleNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the identify coder launch eligible not found response
func (o *IdentifyCoderLaunchEligibleNotFound) Code() int {
	return 404
}

func (o *IdentifyCoderLaunchEligibleNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleNotFound %s", 404, payload)
}

func (o *IdentifyCoderLaunchEligibleNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleNotFound %s", 404, payload)
}

func (o *IdentifyCoderLaunchEligibleNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *IdentifyCoderLaunchEligibleNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentifyCoderLaunchEligibleMethodNotAllowed creates a IdentifyCoderLaunchEligibleMethodNotAllowed with default headers values
func NewIdentifyCoderLaunchEligibleMethodNotAllowed() *IdentifyCoderLaunchEligibleMethodNotAllowed {
	return &IdentifyCoderLaunchEligibleMethodNotAllowed{}
}

/*
IdentifyCoderLaunchEligibleMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type IdentifyCoderLaunchEligibleMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this identify coder launch eligible method not allowed response has a 2xx status code
func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identify coder launch eligible method not allowed response has a 3xx status code
func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identify coder launch eligible method not allowed response has a 4xx status code
func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this identify coder launch eligible method not allowed response has a 5xx status code
func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this identify coder launch eligible method not allowed response a status code equal to that given
func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the identify coder launch eligible method not allowed response
func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) Code() int {
	return 405
}

func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleMethodNotAllowed %s", 405, payload)
}

func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleMethodNotAllowed %s", 405, payload)
}

func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *IdentifyCoderLaunchEligibleMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewIdentifyCoderLaunchEligibleInternalServerError creates a IdentifyCoderLaunchEligibleInternalServerError with default headers values
func NewIdentifyCoderLaunchEligibleInternalServerError() *IdentifyCoderLaunchEligibleInternalServerError {
	return &IdentifyCoderLaunchEligibleInternalServerError{}
}

/*
IdentifyCoderLaunchEligibleInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type IdentifyCoderLaunchEligibleInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this identify coder launch eligible internal server error response has a 2xx status code
func (o *IdentifyCoderLaunchEligibleInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this identify coder launch eligible internal server error response has a 3xx status code
func (o *IdentifyCoderLaunchEligibleInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this identify coder launch eligible internal server error response has a 4xx status code
func (o *IdentifyCoderLaunchEligibleInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this identify coder launch eligible internal server error response has a 5xx status code
func (o *IdentifyCoderLaunchEligibleInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this identify coder launch eligible internal server error response a status code equal to that given
func (o *IdentifyCoderLaunchEligibleInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the identify coder launch eligible internal server error response
func (o *IdentifyCoderLaunchEligibleInternalServerError) Code() int {
	return 500
}

func (o *IdentifyCoderLaunchEligibleInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleInternalServerError %s", 500, payload)
}

func (o *IdentifyCoderLaunchEligibleInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/coder/stack/{stackName}/coder-eligibility][%d] identifyCoderLaunchEligibleInternalServerError %s", 500, payload)
}

func (o *IdentifyCoderLaunchEligibleInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *IdentifyCoderLaunchEligibleInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
