// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTfVersionsForStreamReader is a Reader for the GetTfVersionsForStream structure.
type GetTfVersionsForStreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTfVersionsForStreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTfVersionsForStreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTfVersionsForStreamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTfVersionsForStreamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetTfVersionsForStreamMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetTfVersionsForStreamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions] getTfVersionsForStream", response, response.Code())
	}
}

// NewGetTfVersionsForStreamOK creates a GetTfVersionsForStreamOK with default headers values
func NewGetTfVersionsForStreamOK() *GetTfVersionsForStreamOK {
	return &GetTfVersionsForStreamOK{}
}

/*
GetTfVersionsForStreamOK describes a response with status code 200, with default header values.

OK
*/
type GetTfVersionsForStreamOK struct {
	Payload []*models.TfVersion
}

// IsSuccess returns true when this get tf versions for stream o k response has a 2xx status code
func (o *GetTfVersionsForStreamOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tf versions for stream o k response has a 3xx status code
func (o *GetTfVersionsForStreamOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tf versions for stream o k response has a 4xx status code
func (o *GetTfVersionsForStreamOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tf versions for stream o k response has a 5xx status code
func (o *GetTfVersionsForStreamOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tf versions for stream o k response a status code equal to that given
func (o *GetTfVersionsForStreamOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tf versions for stream o k response
func (o *GetTfVersionsForStreamOK) Code() int {
	return 200
}

func (o *GetTfVersionsForStreamOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamOK %s", 200, payload)
}

func (o *GetTfVersionsForStreamOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamOK %s", 200, payload)
}

func (o *GetTfVersionsForStreamOK) GetPayload() []*models.TfVersion {
	return o.Payload
}

func (o *GetTfVersionsForStreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTfVersionsForStreamBadRequest creates a GetTfVersionsForStreamBadRequest with default headers values
func NewGetTfVersionsForStreamBadRequest() *GetTfVersionsForStreamBadRequest {
	return &GetTfVersionsForStreamBadRequest{}
}

/*
GetTfVersionsForStreamBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetTfVersionsForStreamBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tf versions for stream bad request response has a 2xx status code
func (o *GetTfVersionsForStreamBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tf versions for stream bad request response has a 3xx status code
func (o *GetTfVersionsForStreamBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tf versions for stream bad request response has a 4xx status code
func (o *GetTfVersionsForStreamBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tf versions for stream bad request response has a 5xx status code
func (o *GetTfVersionsForStreamBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get tf versions for stream bad request response a status code equal to that given
func (o *GetTfVersionsForStreamBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get tf versions for stream bad request response
func (o *GetTfVersionsForStreamBadRequest) Code() int {
	return 400
}

func (o *GetTfVersionsForStreamBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamBadRequest %s", 400, payload)
}

func (o *GetTfVersionsForStreamBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamBadRequest %s", 400, payload)
}

func (o *GetTfVersionsForStreamBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTfVersionsForStreamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTfVersionsForStreamNotFound creates a GetTfVersionsForStreamNotFound with default headers values
func NewGetTfVersionsForStreamNotFound() *GetTfVersionsForStreamNotFound {
	return &GetTfVersionsForStreamNotFound{}
}

/*
GetTfVersionsForStreamNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTfVersionsForStreamNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tf versions for stream not found response has a 2xx status code
func (o *GetTfVersionsForStreamNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tf versions for stream not found response has a 3xx status code
func (o *GetTfVersionsForStreamNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tf versions for stream not found response has a 4xx status code
func (o *GetTfVersionsForStreamNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tf versions for stream not found response has a 5xx status code
func (o *GetTfVersionsForStreamNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get tf versions for stream not found response a status code equal to that given
func (o *GetTfVersionsForStreamNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get tf versions for stream not found response
func (o *GetTfVersionsForStreamNotFound) Code() int {
	return 404
}

func (o *GetTfVersionsForStreamNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamNotFound %s", 404, payload)
}

func (o *GetTfVersionsForStreamNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamNotFound %s", 404, payload)
}

func (o *GetTfVersionsForStreamNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTfVersionsForStreamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTfVersionsForStreamMethodNotAllowed creates a GetTfVersionsForStreamMethodNotAllowed with default headers values
func NewGetTfVersionsForStreamMethodNotAllowed() *GetTfVersionsForStreamMethodNotAllowed {
	return &GetTfVersionsForStreamMethodNotAllowed{}
}

/*
GetTfVersionsForStreamMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetTfVersionsForStreamMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tf versions for stream method not allowed response has a 2xx status code
func (o *GetTfVersionsForStreamMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tf versions for stream method not allowed response has a 3xx status code
func (o *GetTfVersionsForStreamMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tf versions for stream method not allowed response has a 4xx status code
func (o *GetTfVersionsForStreamMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get tf versions for stream method not allowed response has a 5xx status code
func (o *GetTfVersionsForStreamMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get tf versions for stream method not allowed response a status code equal to that given
func (o *GetTfVersionsForStreamMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get tf versions for stream method not allowed response
func (o *GetTfVersionsForStreamMethodNotAllowed) Code() int {
	return 405
}

func (o *GetTfVersionsForStreamMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamMethodNotAllowed %s", 405, payload)
}

func (o *GetTfVersionsForStreamMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamMethodNotAllowed %s", 405, payload)
}

func (o *GetTfVersionsForStreamMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTfVersionsForStreamMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTfVersionsForStreamInternalServerError creates a GetTfVersionsForStreamInternalServerError with default headers values
func NewGetTfVersionsForStreamInternalServerError() *GetTfVersionsForStreamInternalServerError {
	return &GetTfVersionsForStreamInternalServerError{}
}

/*
GetTfVersionsForStreamInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetTfVersionsForStreamInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get tf versions for stream internal server error response has a 2xx status code
func (o *GetTfVersionsForStreamInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get tf versions for stream internal server error response has a 3xx status code
func (o *GetTfVersionsForStreamInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tf versions for stream internal server error response has a 4xx status code
func (o *GetTfVersionsForStreamInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tf versions for stream internal server error response has a 5xx status code
func (o *GetTfVersionsForStreamInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get tf versions for stream internal server error response a status code equal to that given
func (o *GetTfVersionsForStreamInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get tf versions for stream internal server error response
func (o *GetTfVersionsForStreamInternalServerError) Code() int {
	return 500
}

func (o *GetTfVersionsForStreamInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamInternalServerError %s", 500, payload)
}

func (o *GetTfVersionsForStreamInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/stream/{tfStream}/versions][%d] getTfVersionsForStreamInternalServerError %s", 500, payload)
}

func (o *GetTfVersionsForStreamInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetTfVersionsForStreamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
