// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteTfStreamForClusterUsingDELETEReader is a Reader for the DeleteTfStreamForClusterUsingDELETE structure.
type DeleteTfStreamForClusterUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTfStreamForClusterUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTfStreamForClusterUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteTfStreamForClusterUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteTfStreamForClusterUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteTfStreamForClusterUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}] deleteTfStreamForClusterUsingDELETE", response, response.Code())
	}
}

// NewDeleteTfStreamForClusterUsingDELETEOK creates a DeleteTfStreamForClusterUsingDELETEOK with default headers values
func NewDeleteTfStreamForClusterUsingDELETEOK() *DeleteTfStreamForClusterUsingDELETEOK {
	return &DeleteTfStreamForClusterUsingDELETEOK{}
}

/*
DeleteTfStreamForClusterUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type DeleteTfStreamForClusterUsingDELETEOK struct {
	Payload bool
}

// IsSuccess returns true when this delete tf stream for cluster using d e l e t e o k response has a 2xx status code
func (o *DeleteTfStreamForClusterUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete tf stream for cluster using d e l e t e o k response has a 3xx status code
func (o *DeleteTfStreamForClusterUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster using d e l e t e o k response has a 4xx status code
func (o *DeleteTfStreamForClusterUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tf stream for cluster using d e l e t e o k response has a 5xx status code
func (o *DeleteTfStreamForClusterUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster using d e l e t e o k response a status code equal to that given
func (o *DeleteTfStreamForClusterUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete tf stream for cluster using d e l e t e o k response
func (o *DeleteTfStreamForClusterUsingDELETEOK) Code() int {
	return 200
}

func (o *DeleteTfStreamForClusterUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETEOK %s", 200, payload)
}

func (o *DeleteTfStreamForClusterUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETEOK %s", 200, payload)
}

func (o *DeleteTfStreamForClusterUsingDELETEOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteTfStreamForClusterUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfStreamForClusterUsingDELETENoContent creates a DeleteTfStreamForClusterUsingDELETENoContent with default headers values
func NewDeleteTfStreamForClusterUsingDELETENoContent() *DeleteTfStreamForClusterUsingDELETENoContent {
	return &DeleteTfStreamForClusterUsingDELETENoContent{}
}

/*
DeleteTfStreamForClusterUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteTfStreamForClusterUsingDELETENoContent struct {
}

// IsSuccess returns true when this delete tf stream for cluster using d e l e t e no content response has a 2xx status code
func (o *DeleteTfStreamForClusterUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete tf stream for cluster using d e l e t e no content response has a 3xx status code
func (o *DeleteTfStreamForClusterUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster using d e l e t e no content response has a 4xx status code
func (o *DeleteTfStreamForClusterUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tf stream for cluster using d e l e t e no content response has a 5xx status code
func (o *DeleteTfStreamForClusterUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster using d e l e t e no content response a status code equal to that given
func (o *DeleteTfStreamForClusterUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete tf stream for cluster using d e l e t e no content response
func (o *DeleteTfStreamForClusterUsingDELETENoContent) Code() int {
	return 204
}

func (o *DeleteTfStreamForClusterUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETENoContent", 204)
}

func (o *DeleteTfStreamForClusterUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETENoContent", 204)
}

func (o *DeleteTfStreamForClusterUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTfStreamForClusterUsingDELETEUnauthorized creates a DeleteTfStreamForClusterUsingDELETEUnauthorized with default headers values
func NewDeleteTfStreamForClusterUsingDELETEUnauthorized() *DeleteTfStreamForClusterUsingDELETEUnauthorized {
	return &DeleteTfStreamForClusterUsingDELETEUnauthorized{}
}

/*
DeleteTfStreamForClusterUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteTfStreamForClusterUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete tf stream for cluster using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf stream for cluster using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf stream for cluster using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete tf stream for cluster using d e l e t e unauthorized response
func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETEUnauthorized", 401)
}

func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETEUnauthorized", 401)
}

func (o *DeleteTfStreamForClusterUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteTfStreamForClusterUsingDELETEForbidden creates a DeleteTfStreamForClusterUsingDELETEForbidden with default headers values
func NewDeleteTfStreamForClusterUsingDELETEForbidden() *DeleteTfStreamForClusterUsingDELETEForbidden {
	return &DeleteTfStreamForClusterUsingDELETEForbidden{}
}

/*
DeleteTfStreamForClusterUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteTfStreamForClusterUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete tf stream for cluster using d e l e t e forbidden response has a 2xx status code
func (o *DeleteTfStreamForClusterUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf stream for cluster using d e l e t e forbidden response has a 3xx status code
func (o *DeleteTfStreamForClusterUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster using d e l e t e forbidden response has a 4xx status code
func (o *DeleteTfStreamForClusterUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf stream for cluster using d e l e t e forbidden response has a 5xx status code
func (o *DeleteTfStreamForClusterUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster using d e l e t e forbidden response a status code equal to that given
func (o *DeleteTfStreamForClusterUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete tf stream for cluster using d e l e t e forbidden response
func (o *DeleteTfStreamForClusterUsingDELETEForbidden) Code() int {
	return 403
}

func (o *DeleteTfStreamForClusterUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETEForbidden", 403)
}

func (o *DeleteTfStreamForClusterUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterUsingDELETEForbidden", 403)
}

func (o *DeleteTfStreamForClusterUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
