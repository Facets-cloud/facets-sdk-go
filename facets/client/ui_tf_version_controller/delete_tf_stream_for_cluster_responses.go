// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeleteTfStreamForClusterReader is a Reader for the DeleteTfStreamForCluster structure.
type DeleteTfStreamForClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteTfStreamForClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteTfStreamForClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteTfStreamForClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteTfStreamForClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewDeleteTfStreamForClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteTfStreamForClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}] deleteTfStreamForCluster", response, response.Code())
	}
}

// NewDeleteTfStreamForClusterOK creates a DeleteTfStreamForClusterOK with default headers values
func NewDeleteTfStreamForClusterOK() *DeleteTfStreamForClusterOK {
	return &DeleteTfStreamForClusterOK{}
}

/*
DeleteTfStreamForClusterOK describes a response with status code 200, with default header values.

OK
*/
type DeleteTfStreamForClusterOK struct {
	Payload bool
}

// IsSuccess returns true when this delete tf stream for cluster o k response has a 2xx status code
func (o *DeleteTfStreamForClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete tf stream for cluster o k response has a 3xx status code
func (o *DeleteTfStreamForClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster o k response has a 4xx status code
func (o *DeleteTfStreamForClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tf stream for cluster o k response has a 5xx status code
func (o *DeleteTfStreamForClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster o k response a status code equal to that given
func (o *DeleteTfStreamForClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete tf stream for cluster o k response
func (o *DeleteTfStreamForClusterOK) Code() int {
	return 200
}

func (o *DeleteTfStreamForClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterOK %s", 200, payload)
}

func (o *DeleteTfStreamForClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterOK %s", 200, payload)
}

func (o *DeleteTfStreamForClusterOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteTfStreamForClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfStreamForClusterBadRequest creates a DeleteTfStreamForClusterBadRequest with default headers values
func NewDeleteTfStreamForClusterBadRequest() *DeleteTfStreamForClusterBadRequest {
	return &DeleteTfStreamForClusterBadRequest{}
}

/*
DeleteTfStreamForClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteTfStreamForClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf stream for cluster bad request response has a 2xx status code
func (o *DeleteTfStreamForClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf stream for cluster bad request response has a 3xx status code
func (o *DeleteTfStreamForClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster bad request response has a 4xx status code
func (o *DeleteTfStreamForClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf stream for cluster bad request response has a 5xx status code
func (o *DeleteTfStreamForClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster bad request response a status code equal to that given
func (o *DeleteTfStreamForClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the delete tf stream for cluster bad request response
func (o *DeleteTfStreamForClusterBadRequest) Code() int {
	return 400
}

func (o *DeleteTfStreamForClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterBadRequest %s", 400, payload)
}

func (o *DeleteTfStreamForClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterBadRequest %s", 400, payload)
}

func (o *DeleteTfStreamForClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfStreamForClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfStreamForClusterNotFound creates a DeleteTfStreamForClusterNotFound with default headers values
func NewDeleteTfStreamForClusterNotFound() *DeleteTfStreamForClusterNotFound {
	return &DeleteTfStreamForClusterNotFound{}
}

/*
DeleteTfStreamForClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeleteTfStreamForClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf stream for cluster not found response has a 2xx status code
func (o *DeleteTfStreamForClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf stream for cluster not found response has a 3xx status code
func (o *DeleteTfStreamForClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster not found response has a 4xx status code
func (o *DeleteTfStreamForClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf stream for cluster not found response has a 5xx status code
func (o *DeleteTfStreamForClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster not found response a status code equal to that given
func (o *DeleteTfStreamForClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the delete tf stream for cluster not found response
func (o *DeleteTfStreamForClusterNotFound) Code() int {
	return 404
}

func (o *DeleteTfStreamForClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterNotFound %s", 404, payload)
}

func (o *DeleteTfStreamForClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterNotFound %s", 404, payload)
}

func (o *DeleteTfStreamForClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfStreamForClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfStreamForClusterMethodNotAllowed creates a DeleteTfStreamForClusterMethodNotAllowed with default headers values
func NewDeleteTfStreamForClusterMethodNotAllowed() *DeleteTfStreamForClusterMethodNotAllowed {
	return &DeleteTfStreamForClusterMethodNotAllowed{}
}

/*
DeleteTfStreamForClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type DeleteTfStreamForClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf stream for cluster method not allowed response has a 2xx status code
func (o *DeleteTfStreamForClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf stream for cluster method not allowed response has a 3xx status code
func (o *DeleteTfStreamForClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster method not allowed response has a 4xx status code
func (o *DeleteTfStreamForClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete tf stream for cluster method not allowed response has a 5xx status code
func (o *DeleteTfStreamForClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this delete tf stream for cluster method not allowed response a status code equal to that given
func (o *DeleteTfStreamForClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the delete tf stream for cluster method not allowed response
func (o *DeleteTfStreamForClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *DeleteTfStreamForClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterMethodNotAllowed %s", 405, payload)
}

func (o *DeleteTfStreamForClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterMethodNotAllowed %s", 405, payload)
}

func (o *DeleteTfStreamForClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfStreamForClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteTfStreamForClusterInternalServerError creates a DeleteTfStreamForClusterInternalServerError with default headers values
func NewDeleteTfStreamForClusterInternalServerError() *DeleteTfStreamForClusterInternalServerError {
	return &DeleteTfStreamForClusterInternalServerError{}
}

/*
DeleteTfStreamForClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteTfStreamForClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this delete tf stream for cluster internal server error response has a 2xx status code
func (o *DeleteTfStreamForClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete tf stream for cluster internal server error response has a 3xx status code
func (o *DeleteTfStreamForClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete tf stream for cluster internal server error response has a 4xx status code
func (o *DeleteTfStreamForClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete tf stream for cluster internal server error response has a 5xx status code
func (o *DeleteTfStreamForClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this delete tf stream for cluster internal server error response a status code equal to that given
func (o *DeleteTfStreamForClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the delete tf stream for cluster internal server error response
func (o *DeleteTfStreamForClusterInternalServerError) Code() int {
	return 500
}

func (o *DeleteTfStreamForClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterInternalServerError %s", 500, payload)
}

func (o *DeleteTfStreamForClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /cc-ui/v1/terraform/cluster/{clusterId}][%d] deleteTfStreamForClusterInternalServerError %s", 500, payload)
}

func (o *DeleteTfStreamForClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *DeleteTfStreamForClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
