// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllVersionsReader is a Reader for the GetAllVersions structure.
type GetAllVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAllVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllVersionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewGetAllVersionsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAllVersionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/terraform/versions] getAllVersions", response, response.Code())
	}
}

// NewGetAllVersionsOK creates a GetAllVersionsOK with default headers values
func NewGetAllVersionsOK() *GetAllVersionsOK {
	return &GetAllVersionsOK{}
}

/*
GetAllVersionsOK describes a response with status code 200, with default header values.

OK
*/
type GetAllVersionsOK struct {
	Payload []*models.TfVersion
}

// IsSuccess returns true when this get all versions o k response has a 2xx status code
func (o *GetAllVersionsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all versions o k response has a 3xx status code
func (o *GetAllVersionsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions o k response has a 4xx status code
func (o *GetAllVersionsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all versions o k response has a 5xx status code
func (o *GetAllVersionsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions o k response a status code equal to that given
func (o *GetAllVersionsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all versions o k response
func (o *GetAllVersionsOK) Code() int {
	return 200
}

func (o *GetAllVersionsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsOK %s", 200, payload)
}

func (o *GetAllVersionsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsOK %s", 200, payload)
}

func (o *GetAllVersionsOK) GetPayload() []*models.TfVersion {
	return o.Payload
}

func (o *GetAllVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVersionsBadRequest creates a GetAllVersionsBadRequest with default headers values
func NewGetAllVersionsBadRequest() *GetAllVersionsBadRequest {
	return &GetAllVersionsBadRequest{}
}

/*
GetAllVersionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetAllVersionsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all versions bad request response has a 2xx status code
func (o *GetAllVersionsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all versions bad request response has a 3xx status code
func (o *GetAllVersionsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions bad request response has a 4xx status code
func (o *GetAllVersionsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all versions bad request response has a 5xx status code
func (o *GetAllVersionsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions bad request response a status code equal to that given
func (o *GetAllVersionsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the get all versions bad request response
func (o *GetAllVersionsBadRequest) Code() int {
	return 400
}

func (o *GetAllVersionsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsBadRequest %s", 400, payload)
}

func (o *GetAllVersionsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsBadRequest %s", 400, payload)
}

func (o *GetAllVersionsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVersionsNotFound creates a GetAllVersionsNotFound with default headers values
func NewGetAllVersionsNotFound() *GetAllVersionsNotFound {
	return &GetAllVersionsNotFound{}
}

/*
GetAllVersionsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllVersionsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all versions not found response has a 2xx status code
func (o *GetAllVersionsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all versions not found response has a 3xx status code
func (o *GetAllVersionsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions not found response has a 4xx status code
func (o *GetAllVersionsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all versions not found response has a 5xx status code
func (o *GetAllVersionsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions not found response a status code equal to that given
func (o *GetAllVersionsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all versions not found response
func (o *GetAllVersionsNotFound) Code() int {
	return 404
}

func (o *GetAllVersionsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsNotFound %s", 404, payload)
}

func (o *GetAllVersionsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsNotFound %s", 404, payload)
}

func (o *GetAllVersionsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVersionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVersionsMethodNotAllowed creates a GetAllVersionsMethodNotAllowed with default headers values
func NewGetAllVersionsMethodNotAllowed() *GetAllVersionsMethodNotAllowed {
	return &GetAllVersionsMethodNotAllowed{}
}

/*
GetAllVersionsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type GetAllVersionsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all versions method not allowed response has a 2xx status code
func (o *GetAllVersionsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all versions method not allowed response has a 3xx status code
func (o *GetAllVersionsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions method not allowed response has a 4xx status code
func (o *GetAllVersionsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all versions method not allowed response has a 5xx status code
func (o *GetAllVersionsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions method not allowed response a status code equal to that given
func (o *GetAllVersionsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the get all versions method not allowed response
func (o *GetAllVersionsMethodNotAllowed) Code() int {
	return 405
}

func (o *GetAllVersionsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllVersionsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsMethodNotAllowed %s", 405, payload)
}

func (o *GetAllVersionsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVersionsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVersionsInternalServerError creates a GetAllVersionsInternalServerError with default headers values
func NewGetAllVersionsInternalServerError() *GetAllVersionsInternalServerError {
	return &GetAllVersionsInternalServerError{}
}

/*
GetAllVersionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetAllVersionsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this get all versions internal server error response has a 2xx status code
func (o *GetAllVersionsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all versions internal server error response has a 3xx status code
func (o *GetAllVersionsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions internal server error response has a 4xx status code
func (o *GetAllVersionsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all versions internal server error response has a 5xx status code
func (o *GetAllVersionsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this get all versions internal server error response a status code equal to that given
func (o *GetAllVersionsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the get all versions internal server error response
func (o *GetAllVersionsInternalServerError) Code() int {
	return 500
}

func (o *GetAllVersionsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsInternalServerError %s", 500, payload)
}

func (o *GetAllVersionsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsInternalServerError %s", 500, payload)
}

func (o *GetAllVersionsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *GetAllVersionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
