// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_version_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllVersionsUsingGETReader is a Reader for the GetAllVersionsUsingGET structure.
type GetAllVersionsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllVersionsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllVersionsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllVersionsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllVersionsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllVersionsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/terraform/versions] getAllVersionsUsingGET", response, response.Code())
	}
}

// NewGetAllVersionsUsingGETOK creates a GetAllVersionsUsingGETOK with default headers values
func NewGetAllVersionsUsingGETOK() *GetAllVersionsUsingGETOK {
	return &GetAllVersionsUsingGETOK{}
}

/*
GetAllVersionsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllVersionsUsingGETOK struct {
	Payload []*models.TfVersion
}

// IsSuccess returns true when this get all versions using g e t o k response has a 2xx status code
func (o *GetAllVersionsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all versions using g e t o k response has a 3xx status code
func (o *GetAllVersionsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions using g e t o k response has a 4xx status code
func (o *GetAllVersionsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all versions using g e t o k response has a 5xx status code
func (o *GetAllVersionsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions using g e t o k response a status code equal to that given
func (o *GetAllVersionsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all versions using g e t o k response
func (o *GetAllVersionsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllVersionsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETOK %s", 200, payload)
}

func (o *GetAllVersionsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETOK %s", 200, payload)
}

func (o *GetAllVersionsUsingGETOK) GetPayload() []*models.TfVersion {
	return o.Payload
}

func (o *GetAllVersionsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllVersionsUsingGETUnauthorized creates a GetAllVersionsUsingGETUnauthorized with default headers values
func NewGetAllVersionsUsingGETUnauthorized() *GetAllVersionsUsingGETUnauthorized {
	return &GetAllVersionsUsingGETUnauthorized{}
}

/*
GetAllVersionsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllVersionsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all versions using g e t unauthorized response has a 2xx status code
func (o *GetAllVersionsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all versions using g e t unauthorized response has a 3xx status code
func (o *GetAllVersionsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions using g e t unauthorized response has a 4xx status code
func (o *GetAllVersionsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all versions using g e t unauthorized response has a 5xx status code
func (o *GetAllVersionsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions using g e t unauthorized response a status code equal to that given
func (o *GetAllVersionsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all versions using g e t unauthorized response
func (o *GetAllVersionsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllVersionsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETUnauthorized", 401)
}

func (o *GetAllVersionsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETUnauthorized", 401)
}

func (o *GetAllVersionsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllVersionsUsingGETForbidden creates a GetAllVersionsUsingGETForbidden with default headers values
func NewGetAllVersionsUsingGETForbidden() *GetAllVersionsUsingGETForbidden {
	return &GetAllVersionsUsingGETForbidden{}
}

/*
GetAllVersionsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllVersionsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all versions using g e t forbidden response has a 2xx status code
func (o *GetAllVersionsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all versions using g e t forbidden response has a 3xx status code
func (o *GetAllVersionsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions using g e t forbidden response has a 4xx status code
func (o *GetAllVersionsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all versions using g e t forbidden response has a 5xx status code
func (o *GetAllVersionsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions using g e t forbidden response a status code equal to that given
func (o *GetAllVersionsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all versions using g e t forbidden response
func (o *GetAllVersionsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllVersionsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETForbidden", 403)
}

func (o *GetAllVersionsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETForbidden", 403)
}

func (o *GetAllVersionsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllVersionsUsingGETNotFound creates a GetAllVersionsUsingGETNotFound with default headers values
func NewGetAllVersionsUsingGETNotFound() *GetAllVersionsUsingGETNotFound {
	return &GetAllVersionsUsingGETNotFound{}
}

/*
GetAllVersionsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllVersionsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all versions using g e t not found response has a 2xx status code
func (o *GetAllVersionsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all versions using g e t not found response has a 3xx status code
func (o *GetAllVersionsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all versions using g e t not found response has a 4xx status code
func (o *GetAllVersionsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all versions using g e t not found response has a 5xx status code
func (o *GetAllVersionsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all versions using g e t not found response a status code equal to that given
func (o *GetAllVersionsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all versions using g e t not found response
func (o *GetAllVersionsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllVersionsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETNotFound", 404)
}

func (o *GetAllVersionsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /cc-ui/v1/terraform/versions][%d] getAllVersionsUsingGETNotFound", 404)
}

func (o *GetAllVersionsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
