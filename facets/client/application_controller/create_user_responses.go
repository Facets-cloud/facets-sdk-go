// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateUserReader is a Reader for the CreateUser structure.
type CreateUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewCreateUserMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCreateUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/users] createUser", response, response.Code())
	}
}

// NewCreateUserOK creates a CreateUserOK with default headers values
func NewCreateUserOK() *CreateUserOK {
	return &CreateUserOK{}
}

/*
CreateUserOK describes a response with status code 200, with default header values.

OK
*/
type CreateUserOK struct {
	Payload *models.User
}

// IsSuccess returns true when this create user o k response has a 2xx status code
func (o *CreateUserOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user o k response has a 3xx status code
func (o *CreateUserOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user o k response has a 4xx status code
func (o *CreateUserOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user o k response has a 5xx status code
func (o *CreateUserOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create user o k response a status code equal to that given
func (o *CreateUserOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create user o k response
func (o *CreateUserOK) Code() int {
	return 200
}

func (o *CreateUserOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserOK %s", 200, payload)
}

func (o *CreateUserOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserOK %s", 200, payload)
}

func (o *CreateUserOK) GetPayload() *models.User {
	return o.Payload
}

func (o *CreateUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserBadRequest creates a CreateUserBadRequest with default headers values
func NewCreateUserBadRequest() *CreateUserBadRequest {
	return &CreateUserBadRequest{}
}

/*
CreateUserBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CreateUserBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user bad request response has a 2xx status code
func (o *CreateUserBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user bad request response has a 3xx status code
func (o *CreateUserBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user bad request response has a 4xx status code
func (o *CreateUserBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user bad request response has a 5xx status code
func (o *CreateUserBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this create user bad request response a status code equal to that given
func (o *CreateUserBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the create user bad request response
func (o *CreateUserBadRequest) Code() int {
	return 400
}

func (o *CreateUserBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserBadRequest %s", 400, payload)
}

func (o *CreateUserBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserBadRequest %s", 400, payload)
}

func (o *CreateUserBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserNotFound creates a CreateUserNotFound with default headers values
func NewCreateUserNotFound() *CreateUserNotFound {
	return &CreateUserNotFound{}
}

/*
CreateUserNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateUserNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user not found response has a 2xx status code
func (o *CreateUserNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user not found response has a 3xx status code
func (o *CreateUserNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user not found response has a 4xx status code
func (o *CreateUserNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user not found response has a 5xx status code
func (o *CreateUserNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create user not found response a status code equal to that given
func (o *CreateUserNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create user not found response
func (o *CreateUserNotFound) Code() int {
	return 404
}

func (o *CreateUserNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserNotFound %s", 404, payload)
}

func (o *CreateUserNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserNotFound %s", 404, payload)
}

func (o *CreateUserNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserMethodNotAllowed creates a CreateUserMethodNotAllowed with default headers values
func NewCreateUserMethodNotAllowed() *CreateUserMethodNotAllowed {
	return &CreateUserMethodNotAllowed{}
}

/*
CreateUserMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type CreateUserMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user method not allowed response has a 2xx status code
func (o *CreateUserMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user method not allowed response has a 3xx status code
func (o *CreateUserMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user method not allowed response has a 4xx status code
func (o *CreateUserMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user method not allowed response has a 5xx status code
func (o *CreateUserMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this create user method not allowed response a status code equal to that given
func (o *CreateUserMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the create user method not allowed response
func (o *CreateUserMethodNotAllowed) Code() int {
	return 405
}

func (o *CreateUserMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserMethodNotAllowed %s", 405, payload)
}

func (o *CreateUserMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserMethodNotAllowed %s", 405, payload)
}

func (o *CreateUserMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserInternalServerError creates a CreateUserInternalServerError with default headers values
func NewCreateUserInternalServerError() *CreateUserInternalServerError {
	return &CreateUserInternalServerError{}
}

/*
CreateUserInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type CreateUserInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this create user internal server error response has a 2xx status code
func (o *CreateUserInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user internal server error response has a 3xx status code
func (o *CreateUserInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user internal server error response has a 4xx status code
func (o *CreateUserInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user internal server error response has a 5xx status code
func (o *CreateUserInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this create user internal server error response a status code equal to that given
func (o *CreateUserInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the create user internal server error response
func (o *CreateUserInternalServerError) Code() int {
	return 500
}

func (o *CreateUserInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserInternalServerError %s", 500, payload)
}

func (o *CreateUserInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserInternalServerError %s", 500, payload)
}

func (o *CreateUserInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *CreateUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
