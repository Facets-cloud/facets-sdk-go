// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GlobalStatsUsingGETReader is a Reader for the GlobalStatsUsingGET structure.
type GlobalStatsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GlobalStatsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGlobalStatsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGlobalStatsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGlobalStatsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGlobalStatsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/stats] globalStatsUsingGET", response, response.Code())
	}
}

// NewGlobalStatsUsingGETOK creates a GlobalStatsUsingGETOK with default headers values
func NewGlobalStatsUsingGETOK() *GlobalStatsUsingGETOK {
	return &GlobalStatsUsingGETOK{}
}

/*
GlobalStatsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GlobalStatsUsingGETOK struct {
	Payload *models.GlobalStats
}

// IsSuccess returns true when this global stats using g e t o k response has a 2xx status code
func (o *GlobalStatsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this global stats using g e t o k response has a 3xx status code
func (o *GlobalStatsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global stats using g e t o k response has a 4xx status code
func (o *GlobalStatsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this global stats using g e t o k response has a 5xx status code
func (o *GlobalStatsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this global stats using g e t o k response a status code equal to that given
func (o *GlobalStatsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the global stats using g e t o k response
func (o *GlobalStatsUsingGETOK) Code() int {
	return 200
}

func (o *GlobalStatsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETOK %s", 200, payload)
}

func (o *GlobalStatsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETOK %s", 200, payload)
}

func (o *GlobalStatsUsingGETOK) GetPayload() *models.GlobalStats {
	return o.Payload
}

func (o *GlobalStatsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GlobalStats)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGlobalStatsUsingGETUnauthorized creates a GlobalStatsUsingGETUnauthorized with default headers values
func NewGlobalStatsUsingGETUnauthorized() *GlobalStatsUsingGETUnauthorized {
	return &GlobalStatsUsingGETUnauthorized{}
}

/*
GlobalStatsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GlobalStatsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this global stats using g e t unauthorized response has a 2xx status code
func (o *GlobalStatsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global stats using g e t unauthorized response has a 3xx status code
func (o *GlobalStatsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global stats using g e t unauthorized response has a 4xx status code
func (o *GlobalStatsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this global stats using g e t unauthorized response has a 5xx status code
func (o *GlobalStatsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this global stats using g e t unauthorized response a status code equal to that given
func (o *GlobalStatsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the global stats using g e t unauthorized response
func (o *GlobalStatsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GlobalStatsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETUnauthorized", 401)
}

func (o *GlobalStatsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETUnauthorized", 401)
}

func (o *GlobalStatsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalStatsUsingGETForbidden creates a GlobalStatsUsingGETForbidden with default headers values
func NewGlobalStatsUsingGETForbidden() *GlobalStatsUsingGETForbidden {
	return &GlobalStatsUsingGETForbidden{}
}

/*
GlobalStatsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GlobalStatsUsingGETForbidden struct {
}

// IsSuccess returns true when this global stats using g e t forbidden response has a 2xx status code
func (o *GlobalStatsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global stats using g e t forbidden response has a 3xx status code
func (o *GlobalStatsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global stats using g e t forbidden response has a 4xx status code
func (o *GlobalStatsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this global stats using g e t forbidden response has a 5xx status code
func (o *GlobalStatsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this global stats using g e t forbidden response a status code equal to that given
func (o *GlobalStatsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the global stats using g e t forbidden response
func (o *GlobalStatsUsingGETForbidden) Code() int {
	return 403
}

func (o *GlobalStatsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETForbidden", 403)
}

func (o *GlobalStatsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETForbidden", 403)
}

func (o *GlobalStatsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGlobalStatsUsingGETNotFound creates a GlobalStatsUsingGETNotFound with default headers values
func NewGlobalStatsUsingGETNotFound() *GlobalStatsUsingGETNotFound {
	return &GlobalStatsUsingGETNotFound{}
}

/*
GlobalStatsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GlobalStatsUsingGETNotFound struct {
}

// IsSuccess returns true when this global stats using g e t not found response has a 2xx status code
func (o *GlobalStatsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this global stats using g e t not found response has a 3xx status code
func (o *GlobalStatsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this global stats using g e t not found response has a 4xx status code
func (o *GlobalStatsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this global stats using g e t not found response has a 5xx status code
func (o *GlobalStatsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this global stats using g e t not found response a status code equal to that given
func (o *GlobalStatsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the global stats using g e t not found response
func (o *GlobalStatsUsingGETNotFound) Code() int {
	return 404
}

func (o *GlobalStatsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETNotFound", 404)
}

func (o *GlobalStatsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/stats][%d] globalStatsUsingGETNotFound", 404)
}

func (o *GlobalStatsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
