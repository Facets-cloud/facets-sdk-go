// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetExecutedActionsForApplicationUsingGETReader is a Reader for the GetExecutedActionsForApplicationUsingGET structure.
type GetExecutedActionsForApplicationUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetExecutedActionsForApplicationUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetExecutedActionsForApplicationUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetExecutedActionsForApplicationUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetExecutedActionsForApplicationUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetExecutedActionsForApplicationUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions] getExecutedActionsForApplicationUsingGET", response, response.Code())
	}
}

// NewGetExecutedActionsForApplicationUsingGETOK creates a GetExecutedActionsForApplicationUsingGETOK with default headers values
func NewGetExecutedActionsForApplicationUsingGETOK() *GetExecutedActionsForApplicationUsingGETOK {
	return &GetExecutedActionsForApplicationUsingGETOK{}
}

/*
GetExecutedActionsForApplicationUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetExecutedActionsForApplicationUsingGETOK struct {
	Payload []*models.ActionExecution
}

// IsSuccess returns true when this get executed actions for application using g e t o k response has a 2xx status code
func (o *GetExecutedActionsForApplicationUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get executed actions for application using g e t o k response has a 3xx status code
func (o *GetExecutedActionsForApplicationUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executed actions for application using g e t o k response has a 4xx status code
func (o *GetExecutedActionsForApplicationUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get executed actions for application using g e t o k response has a 5xx status code
func (o *GetExecutedActionsForApplicationUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get executed actions for application using g e t o k response a status code equal to that given
func (o *GetExecutedActionsForApplicationUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get executed actions for application using g e t o k response
func (o *GetExecutedActionsForApplicationUsingGETOK) Code() int {
	return 200
}

func (o *GetExecutedActionsForApplicationUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETOK %s", 200, payload)
}

func (o *GetExecutedActionsForApplicationUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETOK %s", 200, payload)
}

func (o *GetExecutedActionsForApplicationUsingGETOK) GetPayload() []*models.ActionExecution {
	return o.Payload
}

func (o *GetExecutedActionsForApplicationUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetExecutedActionsForApplicationUsingGETUnauthorized creates a GetExecutedActionsForApplicationUsingGETUnauthorized with default headers values
func NewGetExecutedActionsForApplicationUsingGETUnauthorized() *GetExecutedActionsForApplicationUsingGETUnauthorized {
	return &GetExecutedActionsForApplicationUsingGETUnauthorized{}
}

/*
GetExecutedActionsForApplicationUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetExecutedActionsForApplicationUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get executed actions for application using g e t unauthorized response has a 2xx status code
func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executed actions for application using g e t unauthorized response has a 3xx status code
func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executed actions for application using g e t unauthorized response has a 4xx status code
func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executed actions for application using g e t unauthorized response has a 5xx status code
func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get executed actions for application using g e t unauthorized response a status code equal to that given
func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get executed actions for application using g e t unauthorized response
func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETUnauthorized", 401)
}

func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETUnauthorized", 401)
}

func (o *GetExecutedActionsForApplicationUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutedActionsForApplicationUsingGETForbidden creates a GetExecutedActionsForApplicationUsingGETForbidden with default headers values
func NewGetExecutedActionsForApplicationUsingGETForbidden() *GetExecutedActionsForApplicationUsingGETForbidden {
	return &GetExecutedActionsForApplicationUsingGETForbidden{}
}

/*
GetExecutedActionsForApplicationUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetExecutedActionsForApplicationUsingGETForbidden struct {
}

// IsSuccess returns true when this get executed actions for application using g e t forbidden response has a 2xx status code
func (o *GetExecutedActionsForApplicationUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executed actions for application using g e t forbidden response has a 3xx status code
func (o *GetExecutedActionsForApplicationUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executed actions for application using g e t forbidden response has a 4xx status code
func (o *GetExecutedActionsForApplicationUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executed actions for application using g e t forbidden response has a 5xx status code
func (o *GetExecutedActionsForApplicationUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get executed actions for application using g e t forbidden response a status code equal to that given
func (o *GetExecutedActionsForApplicationUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get executed actions for application using g e t forbidden response
func (o *GetExecutedActionsForApplicationUsingGETForbidden) Code() int {
	return 403
}

func (o *GetExecutedActionsForApplicationUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETForbidden", 403)
}

func (o *GetExecutedActionsForApplicationUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETForbidden", 403)
}

func (o *GetExecutedActionsForApplicationUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetExecutedActionsForApplicationUsingGETNotFound creates a GetExecutedActionsForApplicationUsingGETNotFound with default headers values
func NewGetExecutedActionsForApplicationUsingGETNotFound() *GetExecutedActionsForApplicationUsingGETNotFound {
	return &GetExecutedActionsForApplicationUsingGETNotFound{}
}

/*
GetExecutedActionsForApplicationUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetExecutedActionsForApplicationUsingGETNotFound struct {
}

// IsSuccess returns true when this get executed actions for application using g e t not found response has a 2xx status code
func (o *GetExecutedActionsForApplicationUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get executed actions for application using g e t not found response has a 3xx status code
func (o *GetExecutedActionsForApplicationUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get executed actions for application using g e t not found response has a 4xx status code
func (o *GetExecutedActionsForApplicationUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get executed actions for application using g e t not found response has a 5xx status code
func (o *GetExecutedActionsForApplicationUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get executed actions for application using g e t not found response a status code equal to that given
func (o *GetExecutedActionsForApplicationUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get executed actions for application using g e t not found response
func (o *GetExecutedActionsForApplicationUsingGETNotFound) Code() int {
	return 404
}

func (o *GetExecutedActionsForApplicationUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETNotFound", 404)
}

func (o *GetExecutedActionsForApplicationUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/executedActions][%d] getExecutedActionsForApplicationUsingGETNotFound", 404)
}

func (o *GetExecutedActionsForApplicationUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
