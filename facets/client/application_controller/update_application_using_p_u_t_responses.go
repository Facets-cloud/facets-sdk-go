// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateApplicationUsingPUTReader is a Reader for the UpdateApplicationUsingPUT structure.
type UpdateApplicationUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateApplicationUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateApplicationUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateApplicationUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateApplicationUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateApplicationUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateApplicationUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/{applicationFamily}/applications] updateApplicationUsingPUT", response, response.Code())
	}
}

// NewUpdateApplicationUsingPUTOK creates a UpdateApplicationUsingPUTOK with default headers values
func NewUpdateApplicationUsingPUTOK() *UpdateApplicationUsingPUTOK {
	return &UpdateApplicationUsingPUTOK{}
}

/*
UpdateApplicationUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateApplicationUsingPUTOK struct {
	Payload *models.Application
}

// IsSuccess returns true when this update application using p u t o k response has a 2xx status code
func (o *UpdateApplicationUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update application using p u t o k response has a 3xx status code
func (o *UpdateApplicationUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update application using p u t o k response has a 4xx status code
func (o *UpdateApplicationUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update application using p u t o k response has a 5xx status code
func (o *UpdateApplicationUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update application using p u t o k response a status code equal to that given
func (o *UpdateApplicationUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update application using p u t o k response
func (o *UpdateApplicationUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateApplicationUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTOK %s", 200, payload)
}

func (o *UpdateApplicationUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTOK %s", 200, payload)
}

func (o *UpdateApplicationUsingPUTOK) GetPayload() *models.Application {
	return o.Payload
}

func (o *UpdateApplicationUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Application)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateApplicationUsingPUTCreated creates a UpdateApplicationUsingPUTCreated with default headers values
func NewUpdateApplicationUsingPUTCreated() *UpdateApplicationUsingPUTCreated {
	return &UpdateApplicationUsingPUTCreated{}
}

/*
UpdateApplicationUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateApplicationUsingPUTCreated struct {
}

// IsSuccess returns true when this update application using p u t created response has a 2xx status code
func (o *UpdateApplicationUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update application using p u t created response has a 3xx status code
func (o *UpdateApplicationUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update application using p u t created response has a 4xx status code
func (o *UpdateApplicationUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update application using p u t created response has a 5xx status code
func (o *UpdateApplicationUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update application using p u t created response a status code equal to that given
func (o *UpdateApplicationUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update application using p u t created response
func (o *UpdateApplicationUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateApplicationUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTCreated", 201)
}

func (o *UpdateApplicationUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTCreated", 201)
}

func (o *UpdateApplicationUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateApplicationUsingPUTUnauthorized creates a UpdateApplicationUsingPUTUnauthorized with default headers values
func NewUpdateApplicationUsingPUTUnauthorized() *UpdateApplicationUsingPUTUnauthorized {
	return &UpdateApplicationUsingPUTUnauthorized{}
}

/*
UpdateApplicationUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateApplicationUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update application using p u t unauthorized response has a 2xx status code
func (o *UpdateApplicationUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update application using p u t unauthorized response has a 3xx status code
func (o *UpdateApplicationUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update application using p u t unauthorized response has a 4xx status code
func (o *UpdateApplicationUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update application using p u t unauthorized response has a 5xx status code
func (o *UpdateApplicationUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update application using p u t unauthorized response a status code equal to that given
func (o *UpdateApplicationUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update application using p u t unauthorized response
func (o *UpdateApplicationUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateApplicationUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTUnauthorized", 401)
}

func (o *UpdateApplicationUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTUnauthorized", 401)
}

func (o *UpdateApplicationUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateApplicationUsingPUTForbidden creates a UpdateApplicationUsingPUTForbidden with default headers values
func NewUpdateApplicationUsingPUTForbidden() *UpdateApplicationUsingPUTForbidden {
	return &UpdateApplicationUsingPUTForbidden{}
}

/*
UpdateApplicationUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateApplicationUsingPUTForbidden struct {
}

// IsSuccess returns true when this update application using p u t forbidden response has a 2xx status code
func (o *UpdateApplicationUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update application using p u t forbidden response has a 3xx status code
func (o *UpdateApplicationUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update application using p u t forbidden response has a 4xx status code
func (o *UpdateApplicationUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update application using p u t forbidden response has a 5xx status code
func (o *UpdateApplicationUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update application using p u t forbidden response a status code equal to that given
func (o *UpdateApplicationUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update application using p u t forbidden response
func (o *UpdateApplicationUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateApplicationUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTForbidden", 403)
}

func (o *UpdateApplicationUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTForbidden", 403)
}

func (o *UpdateApplicationUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateApplicationUsingPUTNotFound creates a UpdateApplicationUsingPUTNotFound with default headers values
func NewUpdateApplicationUsingPUTNotFound() *UpdateApplicationUsingPUTNotFound {
	return &UpdateApplicationUsingPUTNotFound{}
}

/*
UpdateApplicationUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateApplicationUsingPUTNotFound struct {
}

// IsSuccess returns true when this update application using p u t not found response has a 2xx status code
func (o *UpdateApplicationUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update application using p u t not found response has a 3xx status code
func (o *UpdateApplicationUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update application using p u t not found response has a 4xx status code
func (o *UpdateApplicationUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update application using p u t not found response has a 5xx status code
func (o *UpdateApplicationUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update application using p u t not found response a status code equal to that given
func (o *UpdateApplicationUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update application using p u t not found response
func (o *UpdateApplicationUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateApplicationUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTNotFound", 404)
}

func (o *UpdateApplicationUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications][%d] updateApplicationUsingPUTNotFound", 404)
}

func (o *UpdateApplicationUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
