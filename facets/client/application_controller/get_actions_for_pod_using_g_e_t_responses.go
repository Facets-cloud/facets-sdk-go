// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetActionsForPodUsingGETReader is a Reader for the GetActionsForPodUsingGET structure.
type GetActionsForPodUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetActionsForPodUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetActionsForPodUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetActionsForPodUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetActionsForPodUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetActionsForPodUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions] getActionsForPodUsingGET", response, response.Code())
	}
}

// NewGetActionsForPodUsingGETOK creates a GetActionsForPodUsingGETOK with default headers values
func NewGetActionsForPodUsingGETOK() *GetActionsForPodUsingGETOK {
	return &GetActionsForPodUsingGETOK{}
}

/*
GetActionsForPodUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetActionsForPodUsingGETOK struct {
	Payload []*models.ApplicationAction
}

// IsSuccess returns true when this get actions for pod using g e t o k response has a 2xx status code
func (o *GetActionsForPodUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get actions for pod using g e t o k response has a 3xx status code
func (o *GetActionsForPodUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get actions for pod using g e t o k response has a 4xx status code
func (o *GetActionsForPodUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get actions for pod using g e t o k response has a 5xx status code
func (o *GetActionsForPodUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get actions for pod using g e t o k response a status code equal to that given
func (o *GetActionsForPodUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get actions for pod using g e t o k response
func (o *GetActionsForPodUsingGETOK) Code() int {
	return 200
}

func (o *GetActionsForPodUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETOK %s", 200, payload)
}

func (o *GetActionsForPodUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETOK %s", 200, payload)
}

func (o *GetActionsForPodUsingGETOK) GetPayload() []*models.ApplicationAction {
	return o.Payload
}

func (o *GetActionsForPodUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetActionsForPodUsingGETUnauthorized creates a GetActionsForPodUsingGETUnauthorized with default headers values
func NewGetActionsForPodUsingGETUnauthorized() *GetActionsForPodUsingGETUnauthorized {
	return &GetActionsForPodUsingGETUnauthorized{}
}

/*
GetActionsForPodUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetActionsForPodUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get actions for pod using g e t unauthorized response has a 2xx status code
func (o *GetActionsForPodUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get actions for pod using g e t unauthorized response has a 3xx status code
func (o *GetActionsForPodUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get actions for pod using g e t unauthorized response has a 4xx status code
func (o *GetActionsForPodUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get actions for pod using g e t unauthorized response has a 5xx status code
func (o *GetActionsForPodUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get actions for pod using g e t unauthorized response a status code equal to that given
func (o *GetActionsForPodUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get actions for pod using g e t unauthorized response
func (o *GetActionsForPodUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetActionsForPodUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETUnauthorized", 401)
}

func (o *GetActionsForPodUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETUnauthorized", 401)
}

func (o *GetActionsForPodUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActionsForPodUsingGETForbidden creates a GetActionsForPodUsingGETForbidden with default headers values
func NewGetActionsForPodUsingGETForbidden() *GetActionsForPodUsingGETForbidden {
	return &GetActionsForPodUsingGETForbidden{}
}

/*
GetActionsForPodUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetActionsForPodUsingGETForbidden struct {
}

// IsSuccess returns true when this get actions for pod using g e t forbidden response has a 2xx status code
func (o *GetActionsForPodUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get actions for pod using g e t forbidden response has a 3xx status code
func (o *GetActionsForPodUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get actions for pod using g e t forbidden response has a 4xx status code
func (o *GetActionsForPodUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get actions for pod using g e t forbidden response has a 5xx status code
func (o *GetActionsForPodUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get actions for pod using g e t forbidden response a status code equal to that given
func (o *GetActionsForPodUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get actions for pod using g e t forbidden response
func (o *GetActionsForPodUsingGETForbidden) Code() int {
	return 403
}

func (o *GetActionsForPodUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETForbidden", 403)
}

func (o *GetActionsForPodUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETForbidden", 403)
}

func (o *GetActionsForPodUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetActionsForPodUsingGETNotFound creates a GetActionsForPodUsingGETNotFound with default headers values
func NewGetActionsForPodUsingGETNotFound() *GetActionsForPodUsingGETNotFound {
	return &GetActionsForPodUsingGETNotFound{}
}

/*
GetActionsForPodUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetActionsForPodUsingGETNotFound struct {
}

// IsSuccess returns true when this get actions for pod using g e t not found response has a 2xx status code
func (o *GetActionsForPodUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get actions for pod using g e t not found response has a 3xx status code
func (o *GetActionsForPodUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get actions for pod using g e t not found response has a 4xx status code
func (o *GetActionsForPodUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get actions for pod using g e t not found response has a 5xx status code
func (o *GetActionsForPodUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get actions for pod using g e t not found response a status code equal to that given
func (o *GetActionsForPodUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get actions for pod using g e t not found response
func (o *GetActionsForPodUsingGETNotFound) Code() int {
	return 404
}

func (o *GetActionsForPodUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETNotFound", 404)
}

func (o *GetActionsForPodUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/pods/{podName}/actions][%d] getActionsForPodUsingGETNotFound", 404)
}

func (o *GetActionsForPodUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
