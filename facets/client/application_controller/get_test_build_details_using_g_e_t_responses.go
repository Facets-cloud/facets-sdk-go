// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetTestBuildDetailsUsingGETReader is a Reader for the GetTestBuildDetailsUsingGET structure.
type GetTestBuildDetailsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTestBuildDetailsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTestBuildDetailsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetTestBuildDetailsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetTestBuildDetailsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTestBuildDetailsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails] getTestBuildDetailsUsingGET", response, response.Code())
	}
}

// NewGetTestBuildDetailsUsingGETOK creates a GetTestBuildDetailsUsingGETOK with default headers values
func NewGetTestBuildDetailsUsingGETOK() *GetTestBuildDetailsUsingGETOK {
	return &GetTestBuildDetailsUsingGETOK{}
}

/*
GetTestBuildDetailsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetTestBuildDetailsUsingGETOK struct {
	Payload *models.TestBuildDetails
}

// IsSuccess returns true when this get test build details using g e t o k response has a 2xx status code
func (o *GetTestBuildDetailsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get test build details using g e t o k response has a 3xx status code
func (o *GetTestBuildDetailsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test build details using g e t o k response has a 4xx status code
func (o *GetTestBuildDetailsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get test build details using g e t o k response has a 5xx status code
func (o *GetTestBuildDetailsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get test build details using g e t o k response a status code equal to that given
func (o *GetTestBuildDetailsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get test build details using g e t o k response
func (o *GetTestBuildDetailsUsingGETOK) Code() int {
	return 200
}

func (o *GetTestBuildDetailsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETOK %s", 200, payload)
}

func (o *GetTestBuildDetailsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETOK %s", 200, payload)
}

func (o *GetTestBuildDetailsUsingGETOK) GetPayload() *models.TestBuildDetails {
	return o.Payload
}

func (o *GetTestBuildDetailsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TestBuildDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTestBuildDetailsUsingGETUnauthorized creates a GetTestBuildDetailsUsingGETUnauthorized with default headers values
func NewGetTestBuildDetailsUsingGETUnauthorized() *GetTestBuildDetailsUsingGETUnauthorized {
	return &GetTestBuildDetailsUsingGETUnauthorized{}
}

/*
GetTestBuildDetailsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetTestBuildDetailsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get test build details using g e t unauthorized response has a 2xx status code
func (o *GetTestBuildDetailsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get test build details using g e t unauthorized response has a 3xx status code
func (o *GetTestBuildDetailsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test build details using g e t unauthorized response has a 4xx status code
func (o *GetTestBuildDetailsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get test build details using g e t unauthorized response has a 5xx status code
func (o *GetTestBuildDetailsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get test build details using g e t unauthorized response a status code equal to that given
func (o *GetTestBuildDetailsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get test build details using g e t unauthorized response
func (o *GetTestBuildDetailsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetTestBuildDetailsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETUnauthorized", 401)
}

func (o *GetTestBuildDetailsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETUnauthorized", 401)
}

func (o *GetTestBuildDetailsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTestBuildDetailsUsingGETForbidden creates a GetTestBuildDetailsUsingGETForbidden with default headers values
func NewGetTestBuildDetailsUsingGETForbidden() *GetTestBuildDetailsUsingGETForbidden {
	return &GetTestBuildDetailsUsingGETForbidden{}
}

/*
GetTestBuildDetailsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetTestBuildDetailsUsingGETForbidden struct {
}

// IsSuccess returns true when this get test build details using g e t forbidden response has a 2xx status code
func (o *GetTestBuildDetailsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get test build details using g e t forbidden response has a 3xx status code
func (o *GetTestBuildDetailsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test build details using g e t forbidden response has a 4xx status code
func (o *GetTestBuildDetailsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get test build details using g e t forbidden response has a 5xx status code
func (o *GetTestBuildDetailsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get test build details using g e t forbidden response a status code equal to that given
func (o *GetTestBuildDetailsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get test build details using g e t forbidden response
func (o *GetTestBuildDetailsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetTestBuildDetailsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETForbidden", 403)
}

func (o *GetTestBuildDetailsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETForbidden", 403)
}

func (o *GetTestBuildDetailsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetTestBuildDetailsUsingGETNotFound creates a GetTestBuildDetailsUsingGETNotFound with default headers values
func NewGetTestBuildDetailsUsingGETNotFound() *GetTestBuildDetailsUsingGETNotFound {
	return &GetTestBuildDetailsUsingGETNotFound{}
}

/*
GetTestBuildDetailsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetTestBuildDetailsUsingGETNotFound struct {
}

// IsSuccess returns true when this get test build details using g e t not found response has a 2xx status code
func (o *GetTestBuildDetailsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get test build details using g e t not found response has a 3xx status code
func (o *GetTestBuildDetailsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get test build details using g e t not found response has a 4xx status code
func (o *GetTestBuildDetailsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get test build details using g e t not found response has a 5xx status code
func (o *GetTestBuildDetailsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get test build details using g e t not found response a status code equal to that given
func (o *GetTestBuildDetailsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get test build details using g e t not found response
func (o *GetTestBuildDetailsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetTestBuildDetailsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETNotFound", 404)
}

func (o *GetTestBuildDetailsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/testDetails][%d] getTestBuildDetailsUsingGETNotFound", 404)
}

func (o *GetTestBuildDetailsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
