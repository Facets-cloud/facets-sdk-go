// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateECRRegistryUsingPOSTReader is a Reader for the CreateECRRegistryUsingPOST structure.
type CreateECRRegistryUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateECRRegistryUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateECRRegistryUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateECRRegistryUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateECRRegistryUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateECRRegistryUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateECRRegistryUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/ecrRegistry] createECRRegistryUsingPOST", response, response.Code())
	}
}

// NewCreateECRRegistryUsingPOSTOK creates a CreateECRRegistryUsingPOSTOK with default headers values
func NewCreateECRRegistryUsingPOSTOK() *CreateECRRegistryUsingPOSTOK {
	return &CreateECRRegistryUsingPOSTOK{}
}

/*
CreateECRRegistryUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateECRRegistryUsingPOSTOK struct {
	Payload *models.ECRRegistry
}

// IsSuccess returns true when this create e c r registry using p o s t o k response has a 2xx status code
func (o *CreateECRRegistryUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create e c r registry using p o s t o k response has a 3xx status code
func (o *CreateECRRegistryUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create e c r registry using p o s t o k response has a 4xx status code
func (o *CreateECRRegistryUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create e c r registry using p o s t o k response has a 5xx status code
func (o *CreateECRRegistryUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create e c r registry using p o s t o k response a status code equal to that given
func (o *CreateECRRegistryUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create e c r registry using p o s t o k response
func (o *CreateECRRegistryUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateECRRegistryUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTOK %s", 200, payload)
}

func (o *CreateECRRegistryUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTOK %s", 200, payload)
}

func (o *CreateECRRegistryUsingPOSTOK) GetPayload() *models.ECRRegistry {
	return o.Payload
}

func (o *CreateECRRegistryUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ECRRegistry)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateECRRegistryUsingPOSTCreated creates a CreateECRRegistryUsingPOSTCreated with default headers values
func NewCreateECRRegistryUsingPOSTCreated() *CreateECRRegistryUsingPOSTCreated {
	return &CreateECRRegistryUsingPOSTCreated{}
}

/*
CreateECRRegistryUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateECRRegistryUsingPOSTCreated struct {
}

// IsSuccess returns true when this create e c r registry using p o s t created response has a 2xx status code
func (o *CreateECRRegistryUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create e c r registry using p o s t created response has a 3xx status code
func (o *CreateECRRegistryUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create e c r registry using p o s t created response has a 4xx status code
func (o *CreateECRRegistryUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create e c r registry using p o s t created response has a 5xx status code
func (o *CreateECRRegistryUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create e c r registry using p o s t created response a status code equal to that given
func (o *CreateECRRegistryUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create e c r registry using p o s t created response
func (o *CreateECRRegistryUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateECRRegistryUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTCreated", 201)
}

func (o *CreateECRRegistryUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTCreated", 201)
}

func (o *CreateECRRegistryUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateECRRegistryUsingPOSTUnauthorized creates a CreateECRRegistryUsingPOSTUnauthorized with default headers values
func NewCreateECRRegistryUsingPOSTUnauthorized() *CreateECRRegistryUsingPOSTUnauthorized {
	return &CreateECRRegistryUsingPOSTUnauthorized{}
}

/*
CreateECRRegistryUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateECRRegistryUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create e c r registry using p o s t unauthorized response has a 2xx status code
func (o *CreateECRRegistryUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create e c r registry using p o s t unauthorized response has a 3xx status code
func (o *CreateECRRegistryUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create e c r registry using p o s t unauthorized response has a 4xx status code
func (o *CreateECRRegistryUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create e c r registry using p o s t unauthorized response has a 5xx status code
func (o *CreateECRRegistryUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create e c r registry using p o s t unauthorized response a status code equal to that given
func (o *CreateECRRegistryUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create e c r registry using p o s t unauthorized response
func (o *CreateECRRegistryUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateECRRegistryUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTUnauthorized", 401)
}

func (o *CreateECRRegistryUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTUnauthorized", 401)
}

func (o *CreateECRRegistryUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateECRRegistryUsingPOSTForbidden creates a CreateECRRegistryUsingPOSTForbidden with default headers values
func NewCreateECRRegistryUsingPOSTForbidden() *CreateECRRegistryUsingPOSTForbidden {
	return &CreateECRRegistryUsingPOSTForbidden{}
}

/*
CreateECRRegistryUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateECRRegistryUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create e c r registry using p o s t forbidden response has a 2xx status code
func (o *CreateECRRegistryUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create e c r registry using p o s t forbidden response has a 3xx status code
func (o *CreateECRRegistryUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create e c r registry using p o s t forbidden response has a 4xx status code
func (o *CreateECRRegistryUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create e c r registry using p o s t forbidden response has a 5xx status code
func (o *CreateECRRegistryUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create e c r registry using p o s t forbidden response a status code equal to that given
func (o *CreateECRRegistryUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create e c r registry using p o s t forbidden response
func (o *CreateECRRegistryUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateECRRegistryUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTForbidden", 403)
}

func (o *CreateECRRegistryUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTForbidden", 403)
}

func (o *CreateECRRegistryUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateECRRegistryUsingPOSTNotFound creates a CreateECRRegistryUsingPOSTNotFound with default headers values
func NewCreateECRRegistryUsingPOSTNotFound() *CreateECRRegistryUsingPOSTNotFound {
	return &CreateECRRegistryUsingPOSTNotFound{}
}

/*
CreateECRRegistryUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateECRRegistryUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create e c r registry using p o s t not found response has a 2xx status code
func (o *CreateECRRegistryUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create e c r registry using p o s t not found response has a 3xx status code
func (o *CreateECRRegistryUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create e c r registry using p o s t not found response has a 4xx status code
func (o *CreateECRRegistryUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create e c r registry using p o s t not found response has a 5xx status code
func (o *CreateECRRegistryUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create e c r registry using p o s t not found response a status code equal to that given
func (o *CreateECRRegistryUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create e c r registry using p o s t not found response
func (o *CreateECRRegistryUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateECRRegistryUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTNotFound", 404)
}

func (o *CreateECRRegistryUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /api/ecrRegistry][%d] createECRRegistryUsingPOSTNotFound", 404)
}

func (o *CreateECRRegistryUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
