// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// UpdateBuildUsingPUTReader is a Reader for the UpdateBuildUsingPUT structure.
type UpdateBuildUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBuildUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBuildUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewUpdateBuildUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewUpdateBuildUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBuildUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBuildUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}] updateBuildUsingPUT", response, response.Code())
	}
}

// NewUpdateBuildUsingPUTOK creates a UpdateBuildUsingPUTOK with default headers values
func NewUpdateBuildUsingPUTOK() *UpdateBuildUsingPUTOK {
	return &UpdateBuildUsingPUTOK{}
}

/*
UpdateBuildUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type UpdateBuildUsingPUTOK struct {
	Payload *models.Build
}

// IsSuccess returns true when this update build using p u t o k response has a 2xx status code
func (o *UpdateBuildUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update build using p u t o k response has a 3xx status code
func (o *UpdateBuildUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build using p u t o k response has a 4xx status code
func (o *UpdateBuildUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update build using p u t o k response has a 5xx status code
func (o *UpdateBuildUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update build using p u t o k response a status code equal to that given
func (o *UpdateBuildUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update build using p u t o k response
func (o *UpdateBuildUsingPUTOK) Code() int {
	return 200
}

func (o *UpdateBuildUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTOK %s", 200, payload)
}

func (o *UpdateBuildUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTOK %s", 200, payload)
}

func (o *UpdateBuildUsingPUTOK) GetPayload() *models.Build {
	return o.Payload
}

func (o *UpdateBuildUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Build)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBuildUsingPUTCreated creates a UpdateBuildUsingPUTCreated with default headers values
func NewUpdateBuildUsingPUTCreated() *UpdateBuildUsingPUTCreated {
	return &UpdateBuildUsingPUTCreated{}
}

/*
UpdateBuildUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type UpdateBuildUsingPUTCreated struct {
}

// IsSuccess returns true when this update build using p u t created response has a 2xx status code
func (o *UpdateBuildUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update build using p u t created response has a 3xx status code
func (o *UpdateBuildUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build using p u t created response has a 4xx status code
func (o *UpdateBuildUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this update build using p u t created response has a 5xx status code
func (o *UpdateBuildUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this update build using p u t created response a status code equal to that given
func (o *UpdateBuildUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the update build using p u t created response
func (o *UpdateBuildUsingPUTCreated) Code() int {
	return 201
}

func (o *UpdateBuildUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTCreated", 201)
}

func (o *UpdateBuildUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTCreated", 201)
}

func (o *UpdateBuildUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildUsingPUTUnauthorized creates a UpdateBuildUsingPUTUnauthorized with default headers values
func NewUpdateBuildUsingPUTUnauthorized() *UpdateBuildUsingPUTUnauthorized {
	return &UpdateBuildUsingPUTUnauthorized{}
}

/*
UpdateBuildUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type UpdateBuildUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this update build using p u t unauthorized response has a 2xx status code
func (o *UpdateBuildUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build using p u t unauthorized response has a 3xx status code
func (o *UpdateBuildUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build using p u t unauthorized response has a 4xx status code
func (o *UpdateBuildUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build using p u t unauthorized response has a 5xx status code
func (o *UpdateBuildUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this update build using p u t unauthorized response a status code equal to that given
func (o *UpdateBuildUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the update build using p u t unauthorized response
func (o *UpdateBuildUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *UpdateBuildUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTUnauthorized", 401)
}

func (o *UpdateBuildUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTUnauthorized", 401)
}

func (o *UpdateBuildUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildUsingPUTForbidden creates a UpdateBuildUsingPUTForbidden with default headers values
func NewUpdateBuildUsingPUTForbidden() *UpdateBuildUsingPUTForbidden {
	return &UpdateBuildUsingPUTForbidden{}
}

/*
UpdateBuildUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBuildUsingPUTForbidden struct {
}

// IsSuccess returns true when this update build using p u t forbidden response has a 2xx status code
func (o *UpdateBuildUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build using p u t forbidden response has a 3xx status code
func (o *UpdateBuildUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build using p u t forbidden response has a 4xx status code
func (o *UpdateBuildUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build using p u t forbidden response has a 5xx status code
func (o *UpdateBuildUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this update build using p u t forbidden response a status code equal to that given
func (o *UpdateBuildUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the update build using p u t forbidden response
func (o *UpdateBuildUsingPUTForbidden) Code() int {
	return 403
}

func (o *UpdateBuildUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTForbidden", 403)
}

func (o *UpdateBuildUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTForbidden", 403)
}

func (o *UpdateBuildUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUpdateBuildUsingPUTNotFound creates a UpdateBuildUsingPUTNotFound with default headers values
func NewUpdateBuildUsingPUTNotFound() *UpdateBuildUsingPUTNotFound {
	return &UpdateBuildUsingPUTNotFound{}
}

/*
UpdateBuildUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBuildUsingPUTNotFound struct {
}

// IsSuccess returns true when this update build using p u t not found response has a 2xx status code
func (o *UpdateBuildUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this update build using p u t not found response has a 3xx status code
func (o *UpdateBuildUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update build using p u t not found response has a 4xx status code
func (o *UpdateBuildUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this update build using p u t not found response has a 5xx status code
func (o *UpdateBuildUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this update build using p u t not found response a status code equal to that given
func (o *UpdateBuildUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the update build using p u t not found response
func (o *UpdateBuildUsingPUTNotFound) Code() int {
	return 404
}

func (o *UpdateBuildUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTNotFound", 404)
}

func (o *UpdateBuildUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] updateBuildUsingPUTNotFound", 404)
}

func (o *UpdateBuildUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
