// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetCurrentDeploymentUsingGETReader is a Reader for the GetCurrentDeploymentUsingGET structure.
type GetCurrentDeploymentUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCurrentDeploymentUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCurrentDeploymentUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetCurrentDeploymentUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetCurrentDeploymentUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetCurrentDeploymentUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current] getCurrentDeploymentUsingGET", response, response.Code())
	}
}

// NewGetCurrentDeploymentUsingGETOK creates a GetCurrentDeploymentUsingGETOK with default headers values
func NewGetCurrentDeploymentUsingGETOK() *GetCurrentDeploymentUsingGETOK {
	return &GetCurrentDeploymentUsingGETOK{}
}

/*
GetCurrentDeploymentUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetCurrentDeploymentUsingGETOK struct {
	Payload *models.Deployment
}

// IsSuccess returns true when this get current deployment using g e t o k response has a 2xx status code
func (o *GetCurrentDeploymentUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get current deployment using g e t o k response has a 3xx status code
func (o *GetCurrentDeploymentUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current deployment using g e t o k response has a 4xx status code
func (o *GetCurrentDeploymentUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get current deployment using g e t o k response has a 5xx status code
func (o *GetCurrentDeploymentUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get current deployment using g e t o k response a status code equal to that given
func (o *GetCurrentDeploymentUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get current deployment using g e t o k response
func (o *GetCurrentDeploymentUsingGETOK) Code() int {
	return 200
}

func (o *GetCurrentDeploymentUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETOK %s", 200, payload)
}

func (o *GetCurrentDeploymentUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETOK %s", 200, payload)
}

func (o *GetCurrentDeploymentUsingGETOK) GetPayload() *models.Deployment {
	return o.Payload
}

func (o *GetCurrentDeploymentUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deployment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCurrentDeploymentUsingGETUnauthorized creates a GetCurrentDeploymentUsingGETUnauthorized with default headers values
func NewGetCurrentDeploymentUsingGETUnauthorized() *GetCurrentDeploymentUsingGETUnauthorized {
	return &GetCurrentDeploymentUsingGETUnauthorized{}
}

/*
GetCurrentDeploymentUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetCurrentDeploymentUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get current deployment using g e t unauthorized response has a 2xx status code
func (o *GetCurrentDeploymentUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get current deployment using g e t unauthorized response has a 3xx status code
func (o *GetCurrentDeploymentUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current deployment using g e t unauthorized response has a 4xx status code
func (o *GetCurrentDeploymentUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get current deployment using g e t unauthorized response has a 5xx status code
func (o *GetCurrentDeploymentUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get current deployment using g e t unauthorized response a status code equal to that given
func (o *GetCurrentDeploymentUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get current deployment using g e t unauthorized response
func (o *GetCurrentDeploymentUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetCurrentDeploymentUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETUnauthorized", 401)
}

func (o *GetCurrentDeploymentUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETUnauthorized", 401)
}

func (o *GetCurrentDeploymentUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCurrentDeploymentUsingGETForbidden creates a GetCurrentDeploymentUsingGETForbidden with default headers values
func NewGetCurrentDeploymentUsingGETForbidden() *GetCurrentDeploymentUsingGETForbidden {
	return &GetCurrentDeploymentUsingGETForbidden{}
}

/*
GetCurrentDeploymentUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetCurrentDeploymentUsingGETForbidden struct {
}

// IsSuccess returns true when this get current deployment using g e t forbidden response has a 2xx status code
func (o *GetCurrentDeploymentUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get current deployment using g e t forbidden response has a 3xx status code
func (o *GetCurrentDeploymentUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current deployment using g e t forbidden response has a 4xx status code
func (o *GetCurrentDeploymentUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get current deployment using g e t forbidden response has a 5xx status code
func (o *GetCurrentDeploymentUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get current deployment using g e t forbidden response a status code equal to that given
func (o *GetCurrentDeploymentUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get current deployment using g e t forbidden response
func (o *GetCurrentDeploymentUsingGETForbidden) Code() int {
	return 403
}

func (o *GetCurrentDeploymentUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETForbidden", 403)
}

func (o *GetCurrentDeploymentUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETForbidden", 403)
}

func (o *GetCurrentDeploymentUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetCurrentDeploymentUsingGETNotFound creates a GetCurrentDeploymentUsingGETNotFound with default headers values
func NewGetCurrentDeploymentUsingGETNotFound() *GetCurrentDeploymentUsingGETNotFound {
	return &GetCurrentDeploymentUsingGETNotFound{}
}

/*
GetCurrentDeploymentUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetCurrentDeploymentUsingGETNotFound struct {
}

// IsSuccess returns true when this get current deployment using g e t not found response has a 2xx status code
func (o *GetCurrentDeploymentUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get current deployment using g e t not found response has a 3xx status code
func (o *GetCurrentDeploymentUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get current deployment using g e t not found response has a 4xx status code
func (o *GetCurrentDeploymentUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get current deployment using g e t not found response has a 5xx status code
func (o *GetCurrentDeploymentUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get current deployment using g e t not found response a status code equal to that given
func (o *GetCurrentDeploymentUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get current deployment using g e t not found response
func (o *GetCurrentDeploymentUsingGETNotFound) Code() int {
	return 404
}

func (o *GetCurrentDeploymentUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETNotFound", 404)
}

func (o *GetCurrentDeploymentUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deployment/current][%d] getCurrentDeploymentUsingGETNotFound", 404)
}

func (o *GetCurrentDeploymentUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
