// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteApplicationSecretUsingDELETEReader is a Reader for the DeleteApplicationSecretUsingDELETE structure.
type DeleteApplicationSecretUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteApplicationSecretUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteApplicationSecretUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteApplicationSecretUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteApplicationSecretUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteApplicationSecretUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}] deleteApplicationSecretUsingDELETE", response, response.Code())
	}
}

// NewDeleteApplicationSecretUsingDELETEOK creates a DeleteApplicationSecretUsingDELETEOK with default headers values
func NewDeleteApplicationSecretUsingDELETEOK() *DeleteApplicationSecretUsingDELETEOK {
	return &DeleteApplicationSecretUsingDELETEOK{}
}

/*
DeleteApplicationSecretUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type DeleteApplicationSecretUsingDELETEOK struct {
	Payload bool
}

// IsSuccess returns true when this delete application secret using d e l e t e o k response has a 2xx status code
func (o *DeleteApplicationSecretUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete application secret using d e l e t e o k response has a 3xx status code
func (o *DeleteApplicationSecretUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application secret using d e l e t e o k response has a 4xx status code
func (o *DeleteApplicationSecretUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete application secret using d e l e t e o k response has a 5xx status code
func (o *DeleteApplicationSecretUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application secret using d e l e t e o k response a status code equal to that given
func (o *DeleteApplicationSecretUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete application secret using d e l e t e o k response
func (o *DeleteApplicationSecretUsingDELETEOK) Code() int {
	return 200
}

func (o *DeleteApplicationSecretUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETEOK %s", 200, payload)
}

func (o *DeleteApplicationSecretUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETEOK %s", 200, payload)
}

func (o *DeleteApplicationSecretUsingDELETEOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteApplicationSecretUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteApplicationSecretUsingDELETENoContent creates a DeleteApplicationSecretUsingDELETENoContent with default headers values
func NewDeleteApplicationSecretUsingDELETENoContent() *DeleteApplicationSecretUsingDELETENoContent {
	return &DeleteApplicationSecretUsingDELETENoContent{}
}

/*
DeleteApplicationSecretUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteApplicationSecretUsingDELETENoContent struct {
}

// IsSuccess returns true when this delete application secret using d e l e t e no content response has a 2xx status code
func (o *DeleteApplicationSecretUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete application secret using d e l e t e no content response has a 3xx status code
func (o *DeleteApplicationSecretUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application secret using d e l e t e no content response has a 4xx status code
func (o *DeleteApplicationSecretUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete application secret using d e l e t e no content response has a 5xx status code
func (o *DeleteApplicationSecretUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application secret using d e l e t e no content response a status code equal to that given
func (o *DeleteApplicationSecretUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete application secret using d e l e t e no content response
func (o *DeleteApplicationSecretUsingDELETENoContent) Code() int {
	return 204
}

func (o *DeleteApplicationSecretUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETENoContent", 204)
}

func (o *DeleteApplicationSecretUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETENoContent", 204)
}

func (o *DeleteApplicationSecretUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteApplicationSecretUsingDELETEUnauthorized creates a DeleteApplicationSecretUsingDELETEUnauthorized with default headers values
func NewDeleteApplicationSecretUsingDELETEUnauthorized() *DeleteApplicationSecretUsingDELETEUnauthorized {
	return &DeleteApplicationSecretUsingDELETEUnauthorized{}
}

/*
DeleteApplicationSecretUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteApplicationSecretUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete application secret using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteApplicationSecretUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application secret using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteApplicationSecretUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application secret using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteApplicationSecretUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application secret using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteApplicationSecretUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application secret using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteApplicationSecretUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete application secret using d e l e t e unauthorized response
func (o *DeleteApplicationSecretUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *DeleteApplicationSecretUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETEUnauthorized", 401)
}

func (o *DeleteApplicationSecretUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETEUnauthorized", 401)
}

func (o *DeleteApplicationSecretUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteApplicationSecretUsingDELETEForbidden creates a DeleteApplicationSecretUsingDELETEForbidden with default headers values
func NewDeleteApplicationSecretUsingDELETEForbidden() *DeleteApplicationSecretUsingDELETEForbidden {
	return &DeleteApplicationSecretUsingDELETEForbidden{}
}

/*
DeleteApplicationSecretUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteApplicationSecretUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete application secret using d e l e t e forbidden response has a 2xx status code
func (o *DeleteApplicationSecretUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application secret using d e l e t e forbidden response has a 3xx status code
func (o *DeleteApplicationSecretUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application secret using d e l e t e forbidden response has a 4xx status code
func (o *DeleteApplicationSecretUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application secret using d e l e t e forbidden response has a 5xx status code
func (o *DeleteApplicationSecretUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application secret using d e l e t e forbidden response a status code equal to that given
func (o *DeleteApplicationSecretUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete application secret using d e l e t e forbidden response
func (o *DeleteApplicationSecretUsingDELETEForbidden) Code() int {
	return 403
}

func (o *DeleteApplicationSecretUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETEForbidden", 403)
}

func (o *DeleteApplicationSecretUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/{environment}/applications/{applicationId}/secrets/{secretName}][%d] deleteApplicationSecretUsingDELETEForbidden", 403)
}

func (o *DeleteApplicationSecretUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
