// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetMonitoringDetailsUsingGETReader is a Reader for the GetMonitoringDetailsUsingGET structure.
type GetMonitoringDetailsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMonitoringDetailsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetMonitoringDetailsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetMonitoringDetailsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetMonitoringDetailsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetMonitoringDetailsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring] getMonitoringDetailsUsingGET", response, response.Code())
	}
}

// NewGetMonitoringDetailsUsingGETOK creates a GetMonitoringDetailsUsingGETOK with default headers values
func NewGetMonitoringDetailsUsingGETOK() *GetMonitoringDetailsUsingGETOK {
	return &GetMonitoringDetailsUsingGETOK{}
}

/*
GetMonitoringDetailsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetMonitoringDetailsUsingGETOK struct {
	Payload *models.Monitoring
}

// IsSuccess returns true when this get monitoring details using g e t o k response has a 2xx status code
func (o *GetMonitoringDetailsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get monitoring details using g e t o k response has a 3xx status code
func (o *GetMonitoringDetailsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get monitoring details using g e t o k response has a 4xx status code
func (o *GetMonitoringDetailsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get monitoring details using g e t o k response has a 5xx status code
func (o *GetMonitoringDetailsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get monitoring details using g e t o k response a status code equal to that given
func (o *GetMonitoringDetailsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get monitoring details using g e t o k response
func (o *GetMonitoringDetailsUsingGETOK) Code() int {
	return 200
}

func (o *GetMonitoringDetailsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETOK %s", 200, payload)
}

func (o *GetMonitoringDetailsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETOK %s", 200, payload)
}

func (o *GetMonitoringDetailsUsingGETOK) GetPayload() *models.Monitoring {
	return o.Payload
}

func (o *GetMonitoringDetailsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Monitoring)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMonitoringDetailsUsingGETUnauthorized creates a GetMonitoringDetailsUsingGETUnauthorized with default headers values
func NewGetMonitoringDetailsUsingGETUnauthorized() *GetMonitoringDetailsUsingGETUnauthorized {
	return &GetMonitoringDetailsUsingGETUnauthorized{}
}

/*
GetMonitoringDetailsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetMonitoringDetailsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get monitoring details using g e t unauthorized response has a 2xx status code
func (o *GetMonitoringDetailsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get monitoring details using g e t unauthorized response has a 3xx status code
func (o *GetMonitoringDetailsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get monitoring details using g e t unauthorized response has a 4xx status code
func (o *GetMonitoringDetailsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get monitoring details using g e t unauthorized response has a 5xx status code
func (o *GetMonitoringDetailsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get monitoring details using g e t unauthorized response a status code equal to that given
func (o *GetMonitoringDetailsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get monitoring details using g e t unauthorized response
func (o *GetMonitoringDetailsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetMonitoringDetailsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETUnauthorized", 401)
}

func (o *GetMonitoringDetailsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETUnauthorized", 401)
}

func (o *GetMonitoringDetailsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMonitoringDetailsUsingGETForbidden creates a GetMonitoringDetailsUsingGETForbidden with default headers values
func NewGetMonitoringDetailsUsingGETForbidden() *GetMonitoringDetailsUsingGETForbidden {
	return &GetMonitoringDetailsUsingGETForbidden{}
}

/*
GetMonitoringDetailsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetMonitoringDetailsUsingGETForbidden struct {
}

// IsSuccess returns true when this get monitoring details using g e t forbidden response has a 2xx status code
func (o *GetMonitoringDetailsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get monitoring details using g e t forbidden response has a 3xx status code
func (o *GetMonitoringDetailsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get monitoring details using g e t forbidden response has a 4xx status code
func (o *GetMonitoringDetailsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get monitoring details using g e t forbidden response has a 5xx status code
func (o *GetMonitoringDetailsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get monitoring details using g e t forbidden response a status code equal to that given
func (o *GetMonitoringDetailsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get monitoring details using g e t forbidden response
func (o *GetMonitoringDetailsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetMonitoringDetailsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETForbidden", 403)
}

func (o *GetMonitoringDetailsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETForbidden", 403)
}

func (o *GetMonitoringDetailsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetMonitoringDetailsUsingGETNotFound creates a GetMonitoringDetailsUsingGETNotFound with default headers values
func NewGetMonitoringDetailsUsingGETNotFound() *GetMonitoringDetailsUsingGETNotFound {
	return &GetMonitoringDetailsUsingGETNotFound{}
}

/*
GetMonitoringDetailsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetMonitoringDetailsUsingGETNotFound struct {
}

// IsSuccess returns true when this get monitoring details using g e t not found response has a 2xx status code
func (o *GetMonitoringDetailsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get monitoring details using g e t not found response has a 3xx status code
func (o *GetMonitoringDetailsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get monitoring details using g e t not found response has a 4xx status code
func (o *GetMonitoringDetailsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get monitoring details using g e t not found response has a 5xx status code
func (o *GetMonitoringDetailsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get monitoring details using g e t not found response a status code equal to that given
func (o *GetMonitoringDetailsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get monitoring details using g e t not found response
func (o *GetMonitoringDetailsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetMonitoringDetailsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETNotFound", 404)
}

func (o *GetMonitoringDetailsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/monitoring][%d] getMonitoringDetailsUsingGETNotFound", 404)
}

func (o *GetMonitoringDetailsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
