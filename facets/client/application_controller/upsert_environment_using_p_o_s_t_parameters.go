// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// NewUpsertEnvironmentUsingPOSTParams creates a new UpsertEnvironmentUsingPOSTParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpsertEnvironmentUsingPOSTParams() *UpsertEnvironmentUsingPOSTParams {
	return &UpsertEnvironmentUsingPOSTParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpsertEnvironmentUsingPOSTParamsWithTimeout creates a new UpsertEnvironmentUsingPOSTParams object
// with the ability to set a timeout on a request.
func NewUpsertEnvironmentUsingPOSTParamsWithTimeout(timeout time.Duration) *UpsertEnvironmentUsingPOSTParams {
	return &UpsertEnvironmentUsingPOSTParams{
		timeout: timeout,
	}
}

// NewUpsertEnvironmentUsingPOSTParamsWithContext creates a new UpsertEnvironmentUsingPOSTParams object
// with the ability to set a context for a request.
func NewUpsertEnvironmentUsingPOSTParamsWithContext(ctx context.Context) *UpsertEnvironmentUsingPOSTParams {
	return &UpsertEnvironmentUsingPOSTParams{
		Context: ctx,
	}
}

// NewUpsertEnvironmentUsingPOSTParamsWithHTTPClient creates a new UpsertEnvironmentUsingPOSTParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpsertEnvironmentUsingPOSTParamsWithHTTPClient(client *http.Client) *UpsertEnvironmentUsingPOSTParams {
	return &UpsertEnvironmentUsingPOSTParams{
		HTTPClient: client,
	}
}

/*
UpsertEnvironmentUsingPOSTParams contains all the parameters to send to the API endpoint

	for the upsert environment using p o s t operation.

	Typically these are written to a http.Request.
*/
type UpsertEnvironmentUsingPOSTParams struct {

	/* ApplicationFamily.

	   applicationFamily
	*/
	ApplicationFamily string

	/* Environment.

	   environment
	*/
	Environment *models.Environment

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the upsert environment using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpsertEnvironmentUsingPOSTParams) WithDefaults() *UpsertEnvironmentUsingPOSTParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the upsert environment using p o s t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpsertEnvironmentUsingPOSTParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) WithTimeout(timeout time.Duration) *UpsertEnvironmentUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) WithContext(ctx context.Context) *UpsertEnvironmentUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) WithHTTPClient(client *http.Client) *UpsertEnvironmentUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationFamily adds the applicationFamily to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) WithApplicationFamily(applicationFamily string) *UpsertEnvironmentUsingPOSTParams {
	o.SetApplicationFamily(applicationFamily)
	return o
}

// SetApplicationFamily adds the applicationFamily to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) SetApplicationFamily(applicationFamily string) {
	o.ApplicationFamily = applicationFamily
}

// WithEnvironment adds the environment to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) WithEnvironment(environment *models.Environment) *UpsertEnvironmentUsingPOSTParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the upsert environment using p o s t params
func (o *UpsertEnvironmentUsingPOSTParams) SetEnvironment(environment *models.Environment) {
	o.Environment = environment
}

// WriteToRequest writes these params to a swagger request
func (o *UpsertEnvironmentUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param applicationFamily
	if err := r.SetPathParam("applicationFamily", o.ApplicationFamily); err != nil {
		return err
	}
	if o.Environment != nil {
		if err := r.SetBodyParam(o.Environment); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
