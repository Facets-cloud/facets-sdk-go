// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetApplicationsUsingGETReader is a Reader for the GetApplicationsUsingGET structure.
type GetApplicationsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications] getApplicationsUsingGET", response, response.Code())
	}
}

// NewGetApplicationsUsingGETOK creates a GetApplicationsUsingGETOK with default headers values
func NewGetApplicationsUsingGETOK() *GetApplicationsUsingGETOK {
	return &GetApplicationsUsingGETOK{}
}

/*
GetApplicationsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationsUsingGETOK struct {
	Payload []*models.Application
}

// IsSuccess returns true when this get applications using g e t o k response has a 2xx status code
func (o *GetApplicationsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get applications using g e t o k response has a 3xx status code
func (o *GetApplicationsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get applications using g e t o k response has a 4xx status code
func (o *GetApplicationsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get applications using g e t o k response has a 5xx status code
func (o *GetApplicationsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get applications using g e t o k response a status code equal to that given
func (o *GetApplicationsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get applications using g e t o k response
func (o *GetApplicationsUsingGETOK) Code() int {
	return 200
}

func (o *GetApplicationsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETOK %s", 200, payload)
}

func (o *GetApplicationsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETOK %s", 200, payload)
}

func (o *GetApplicationsUsingGETOK) GetPayload() []*models.Application {
	return o.Payload
}

func (o *GetApplicationsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationsUsingGETUnauthorized creates a GetApplicationsUsingGETUnauthorized with default headers values
func NewGetApplicationsUsingGETUnauthorized() *GetApplicationsUsingGETUnauthorized {
	return &GetApplicationsUsingGETUnauthorized{}
}

/*
GetApplicationsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get applications using g e t unauthorized response has a 2xx status code
func (o *GetApplicationsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get applications using g e t unauthorized response has a 3xx status code
func (o *GetApplicationsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get applications using g e t unauthorized response has a 4xx status code
func (o *GetApplicationsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get applications using g e t unauthorized response has a 5xx status code
func (o *GetApplicationsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get applications using g e t unauthorized response a status code equal to that given
func (o *GetApplicationsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get applications using g e t unauthorized response
func (o *GetApplicationsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETUnauthorized", 401)
}

func (o *GetApplicationsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETUnauthorized", 401)
}

func (o *GetApplicationsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationsUsingGETForbidden creates a GetApplicationsUsingGETForbidden with default headers values
func NewGetApplicationsUsingGETForbidden() *GetApplicationsUsingGETForbidden {
	return &GetApplicationsUsingGETForbidden{}
}

/*
GetApplicationsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationsUsingGETForbidden struct {
}

// IsSuccess returns true when this get applications using g e t forbidden response has a 2xx status code
func (o *GetApplicationsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get applications using g e t forbidden response has a 3xx status code
func (o *GetApplicationsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get applications using g e t forbidden response has a 4xx status code
func (o *GetApplicationsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get applications using g e t forbidden response has a 5xx status code
func (o *GetApplicationsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get applications using g e t forbidden response a status code equal to that given
func (o *GetApplicationsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get applications using g e t forbidden response
func (o *GetApplicationsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetApplicationsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETForbidden", 403)
}

func (o *GetApplicationsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETForbidden", 403)
}

func (o *GetApplicationsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationsUsingGETNotFound creates a GetApplicationsUsingGETNotFound with default headers values
func NewGetApplicationsUsingGETNotFound() *GetApplicationsUsingGETNotFound {
	return &GetApplicationsUsingGETNotFound{}
}

/*
GetApplicationsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationsUsingGETNotFound struct {
}

// IsSuccess returns true when this get applications using g e t not found response has a 2xx status code
func (o *GetApplicationsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get applications using g e t not found response has a 3xx status code
func (o *GetApplicationsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get applications using g e t not found response has a 4xx status code
func (o *GetApplicationsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get applications using g e t not found response has a 5xx status code
func (o *GetApplicationsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get applications using g e t not found response a status code equal to that given
func (o *GetApplicationsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get applications using g e t not found response
func (o *GetApplicationsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetApplicationsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETNotFound", 404)
}

func (o *GetApplicationsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications][%d] getApplicationsUsingGETNotFound", 404)
}

func (o *GetApplicationsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
