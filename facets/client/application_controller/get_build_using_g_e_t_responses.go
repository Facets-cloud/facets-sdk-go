// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetBuildUsingGETReader is a Reader for the GetBuildUsingGET structure.
type GetBuildUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBuildUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBuildUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetBuildUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBuildUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBuildUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}] getBuildUsingGET", response, response.Code())
	}
}

// NewGetBuildUsingGETOK creates a GetBuildUsingGETOK with default headers values
func NewGetBuildUsingGETOK() *GetBuildUsingGETOK {
	return &GetBuildUsingGETOK{}
}

/*
GetBuildUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetBuildUsingGETOK struct {
	Payload *models.Build
}

// IsSuccess returns true when this get build using g e t o k response has a 2xx status code
func (o *GetBuildUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get build using g e t o k response has a 3xx status code
func (o *GetBuildUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build using g e t o k response has a 4xx status code
func (o *GetBuildUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get build using g e t o k response has a 5xx status code
func (o *GetBuildUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get build using g e t o k response a status code equal to that given
func (o *GetBuildUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get build using g e t o k response
func (o *GetBuildUsingGETOK) Code() int {
	return 200
}

func (o *GetBuildUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETOK %s", 200, payload)
}

func (o *GetBuildUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETOK %s", 200, payload)
}

func (o *GetBuildUsingGETOK) GetPayload() *models.Build {
	return o.Payload
}

func (o *GetBuildUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Build)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildUsingGETUnauthorized creates a GetBuildUsingGETUnauthorized with default headers values
func NewGetBuildUsingGETUnauthorized() *GetBuildUsingGETUnauthorized {
	return &GetBuildUsingGETUnauthorized{}
}

/*
GetBuildUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBuildUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get build using g e t unauthorized response has a 2xx status code
func (o *GetBuildUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build using g e t unauthorized response has a 3xx status code
func (o *GetBuildUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build using g e t unauthorized response has a 4xx status code
func (o *GetBuildUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build using g e t unauthorized response has a 5xx status code
func (o *GetBuildUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get build using g e t unauthorized response a status code equal to that given
func (o *GetBuildUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get build using g e t unauthorized response
func (o *GetBuildUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBuildUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETUnauthorized", 401)
}

func (o *GetBuildUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETUnauthorized", 401)
}

func (o *GetBuildUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBuildUsingGETForbidden creates a GetBuildUsingGETForbidden with default headers values
func NewGetBuildUsingGETForbidden() *GetBuildUsingGETForbidden {
	return &GetBuildUsingGETForbidden{}
}

/*
GetBuildUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBuildUsingGETForbidden struct {
}

// IsSuccess returns true when this get build using g e t forbidden response has a 2xx status code
func (o *GetBuildUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build using g e t forbidden response has a 3xx status code
func (o *GetBuildUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build using g e t forbidden response has a 4xx status code
func (o *GetBuildUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build using g e t forbidden response has a 5xx status code
func (o *GetBuildUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get build using g e t forbidden response a status code equal to that given
func (o *GetBuildUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get build using g e t forbidden response
func (o *GetBuildUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBuildUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETForbidden", 403)
}

func (o *GetBuildUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETForbidden", 403)
}

func (o *GetBuildUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBuildUsingGETNotFound creates a GetBuildUsingGETNotFound with default headers values
func NewGetBuildUsingGETNotFound() *GetBuildUsingGETNotFound {
	return &GetBuildUsingGETNotFound{}
}

/*
GetBuildUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBuildUsingGETNotFound struct {
}

// IsSuccess returns true when this get build using g e t not found response has a 2xx status code
func (o *GetBuildUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build using g e t not found response has a 3xx status code
func (o *GetBuildUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build using g e t not found response has a 4xx status code
func (o *GetBuildUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build using g e t not found response has a 5xx status code
func (o *GetBuildUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get build using g e t not found response a status code equal to that given
func (o *GetBuildUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get build using g e t not found response
func (o *GetBuildUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBuildUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETNotFound", 404)
}

func (o *GetBuildUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}][%d] getBuildUsingGETNotFound", 404)
}

func (o *GetBuildUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
