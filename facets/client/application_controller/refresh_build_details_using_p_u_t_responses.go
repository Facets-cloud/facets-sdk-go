// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RefreshBuildDetailsUsingPUTReader is a Reader for the RefreshBuildDetailsUsingPUT structure.
type RefreshBuildDetailsUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RefreshBuildDetailsUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRefreshBuildDetailsUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRefreshBuildDetailsUsingPUTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRefreshBuildDetailsUsingPUTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRefreshBuildDetailsUsingPUTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRefreshBuildDetailsUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /api/codebuild/builds/{codeBuildId}/refresh] refreshBuildDetailsUsingPUT", response, response.Code())
	}
}

// NewRefreshBuildDetailsUsingPUTOK creates a RefreshBuildDetailsUsingPUTOK with default headers values
func NewRefreshBuildDetailsUsingPUTOK() *RefreshBuildDetailsUsingPUTOK {
	return &RefreshBuildDetailsUsingPUTOK{}
}

/*
RefreshBuildDetailsUsingPUTOK describes a response with status code 200, with default header values.

OK
*/
type RefreshBuildDetailsUsingPUTOK struct {
	Payload bool
}

// IsSuccess returns true when this refresh build details using p u t o k response has a 2xx status code
func (o *RefreshBuildDetailsUsingPUTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this refresh build details using p u t o k response has a 3xx status code
func (o *RefreshBuildDetailsUsingPUTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this refresh build details using p u t o k response has a 4xx status code
func (o *RefreshBuildDetailsUsingPUTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this refresh build details using p u t o k response has a 5xx status code
func (o *RefreshBuildDetailsUsingPUTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this refresh build details using p u t o k response a status code equal to that given
func (o *RefreshBuildDetailsUsingPUTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the refresh build details using p u t o k response
func (o *RefreshBuildDetailsUsingPUTOK) Code() int {
	return 200
}

func (o *RefreshBuildDetailsUsingPUTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTOK %s", 200, payload)
}

func (o *RefreshBuildDetailsUsingPUTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTOK %s", 200, payload)
}

func (o *RefreshBuildDetailsUsingPUTOK) GetPayload() bool {
	return o.Payload
}

func (o *RefreshBuildDetailsUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRefreshBuildDetailsUsingPUTCreated creates a RefreshBuildDetailsUsingPUTCreated with default headers values
func NewRefreshBuildDetailsUsingPUTCreated() *RefreshBuildDetailsUsingPUTCreated {
	return &RefreshBuildDetailsUsingPUTCreated{}
}

/*
RefreshBuildDetailsUsingPUTCreated describes a response with status code 201, with default header values.

Created
*/
type RefreshBuildDetailsUsingPUTCreated struct {
}

// IsSuccess returns true when this refresh build details using p u t created response has a 2xx status code
func (o *RefreshBuildDetailsUsingPUTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this refresh build details using p u t created response has a 3xx status code
func (o *RefreshBuildDetailsUsingPUTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this refresh build details using p u t created response has a 4xx status code
func (o *RefreshBuildDetailsUsingPUTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this refresh build details using p u t created response has a 5xx status code
func (o *RefreshBuildDetailsUsingPUTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this refresh build details using p u t created response a status code equal to that given
func (o *RefreshBuildDetailsUsingPUTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the refresh build details using p u t created response
func (o *RefreshBuildDetailsUsingPUTCreated) Code() int {
	return 201
}

func (o *RefreshBuildDetailsUsingPUTCreated) Error() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTCreated", 201)
}

func (o *RefreshBuildDetailsUsingPUTCreated) String() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTCreated", 201)
}

func (o *RefreshBuildDetailsUsingPUTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRefreshBuildDetailsUsingPUTUnauthorized creates a RefreshBuildDetailsUsingPUTUnauthorized with default headers values
func NewRefreshBuildDetailsUsingPUTUnauthorized() *RefreshBuildDetailsUsingPUTUnauthorized {
	return &RefreshBuildDetailsUsingPUTUnauthorized{}
}

/*
RefreshBuildDetailsUsingPUTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RefreshBuildDetailsUsingPUTUnauthorized struct {
}

// IsSuccess returns true when this refresh build details using p u t unauthorized response has a 2xx status code
func (o *RefreshBuildDetailsUsingPUTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this refresh build details using p u t unauthorized response has a 3xx status code
func (o *RefreshBuildDetailsUsingPUTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this refresh build details using p u t unauthorized response has a 4xx status code
func (o *RefreshBuildDetailsUsingPUTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this refresh build details using p u t unauthorized response has a 5xx status code
func (o *RefreshBuildDetailsUsingPUTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this refresh build details using p u t unauthorized response a status code equal to that given
func (o *RefreshBuildDetailsUsingPUTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the refresh build details using p u t unauthorized response
func (o *RefreshBuildDetailsUsingPUTUnauthorized) Code() int {
	return 401
}

func (o *RefreshBuildDetailsUsingPUTUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTUnauthorized", 401)
}

func (o *RefreshBuildDetailsUsingPUTUnauthorized) String() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTUnauthorized", 401)
}

func (o *RefreshBuildDetailsUsingPUTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRefreshBuildDetailsUsingPUTForbidden creates a RefreshBuildDetailsUsingPUTForbidden with default headers values
func NewRefreshBuildDetailsUsingPUTForbidden() *RefreshBuildDetailsUsingPUTForbidden {
	return &RefreshBuildDetailsUsingPUTForbidden{}
}

/*
RefreshBuildDetailsUsingPUTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RefreshBuildDetailsUsingPUTForbidden struct {
}

// IsSuccess returns true when this refresh build details using p u t forbidden response has a 2xx status code
func (o *RefreshBuildDetailsUsingPUTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this refresh build details using p u t forbidden response has a 3xx status code
func (o *RefreshBuildDetailsUsingPUTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this refresh build details using p u t forbidden response has a 4xx status code
func (o *RefreshBuildDetailsUsingPUTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this refresh build details using p u t forbidden response has a 5xx status code
func (o *RefreshBuildDetailsUsingPUTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this refresh build details using p u t forbidden response a status code equal to that given
func (o *RefreshBuildDetailsUsingPUTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the refresh build details using p u t forbidden response
func (o *RefreshBuildDetailsUsingPUTForbidden) Code() int {
	return 403
}

func (o *RefreshBuildDetailsUsingPUTForbidden) Error() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTForbidden", 403)
}

func (o *RefreshBuildDetailsUsingPUTForbidden) String() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTForbidden", 403)
}

func (o *RefreshBuildDetailsUsingPUTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRefreshBuildDetailsUsingPUTNotFound creates a RefreshBuildDetailsUsingPUTNotFound with default headers values
func NewRefreshBuildDetailsUsingPUTNotFound() *RefreshBuildDetailsUsingPUTNotFound {
	return &RefreshBuildDetailsUsingPUTNotFound{}
}

/*
RefreshBuildDetailsUsingPUTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RefreshBuildDetailsUsingPUTNotFound struct {
}

// IsSuccess returns true when this refresh build details using p u t not found response has a 2xx status code
func (o *RefreshBuildDetailsUsingPUTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this refresh build details using p u t not found response has a 3xx status code
func (o *RefreshBuildDetailsUsingPUTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this refresh build details using p u t not found response has a 4xx status code
func (o *RefreshBuildDetailsUsingPUTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this refresh build details using p u t not found response has a 5xx status code
func (o *RefreshBuildDetailsUsingPUTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this refresh build details using p u t not found response a status code equal to that given
func (o *RefreshBuildDetailsUsingPUTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the refresh build details using p u t not found response
func (o *RefreshBuildDetailsUsingPUTNotFound) Code() int {
	return 404
}

func (o *RefreshBuildDetailsUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTNotFound", 404)
}

func (o *RefreshBuildDetailsUsingPUTNotFound) String() string {
	return fmt.Sprintf("[PUT /api/codebuild/builds/{codeBuildId}/refresh][%d] refreshBuildDetailsUsingPUTNotFound", 404)
}

func (o *RefreshBuildDetailsUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
