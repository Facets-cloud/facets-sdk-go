// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetApplicationTypesUsingGETReader is a Reader for the GetApplicationTypesUsingGET structure.
type GetApplicationTypesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationTypesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationTypesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationTypesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationTypesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationTypesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/applicationTypes] getApplicationTypesUsingGET", response, response.Code())
	}
}

// NewGetApplicationTypesUsingGETOK creates a GetApplicationTypesUsingGETOK with default headers values
func NewGetApplicationTypesUsingGETOK() *GetApplicationTypesUsingGETOK {
	return &GetApplicationTypesUsingGETOK{}
}

/*
GetApplicationTypesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationTypesUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get application types using g e t o k response has a 2xx status code
func (o *GetApplicationTypesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application types using g e t o k response has a 3xx status code
func (o *GetApplicationTypesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application types using g e t o k response has a 4xx status code
func (o *GetApplicationTypesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application types using g e t o k response has a 5xx status code
func (o *GetApplicationTypesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application types using g e t o k response a status code equal to that given
func (o *GetApplicationTypesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application types using g e t o k response
func (o *GetApplicationTypesUsingGETOK) Code() int {
	return 200
}

func (o *GetApplicationTypesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETOK %s", 200, payload)
}

func (o *GetApplicationTypesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETOK %s", 200, payload)
}

func (o *GetApplicationTypesUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetApplicationTypesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationTypesUsingGETUnauthorized creates a GetApplicationTypesUsingGETUnauthorized with default headers values
func NewGetApplicationTypesUsingGETUnauthorized() *GetApplicationTypesUsingGETUnauthorized {
	return &GetApplicationTypesUsingGETUnauthorized{}
}

/*
GetApplicationTypesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationTypesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get application types using g e t unauthorized response has a 2xx status code
func (o *GetApplicationTypesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application types using g e t unauthorized response has a 3xx status code
func (o *GetApplicationTypesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application types using g e t unauthorized response has a 4xx status code
func (o *GetApplicationTypesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application types using g e t unauthorized response has a 5xx status code
func (o *GetApplicationTypesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get application types using g e t unauthorized response a status code equal to that given
func (o *GetApplicationTypesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get application types using g e t unauthorized response
func (o *GetApplicationTypesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationTypesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETUnauthorized", 401)
}

func (o *GetApplicationTypesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETUnauthorized", 401)
}

func (o *GetApplicationTypesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationTypesUsingGETForbidden creates a GetApplicationTypesUsingGETForbidden with default headers values
func NewGetApplicationTypesUsingGETForbidden() *GetApplicationTypesUsingGETForbidden {
	return &GetApplicationTypesUsingGETForbidden{}
}

/*
GetApplicationTypesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationTypesUsingGETForbidden struct {
}

// IsSuccess returns true when this get application types using g e t forbidden response has a 2xx status code
func (o *GetApplicationTypesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application types using g e t forbidden response has a 3xx status code
func (o *GetApplicationTypesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application types using g e t forbidden response has a 4xx status code
func (o *GetApplicationTypesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application types using g e t forbidden response has a 5xx status code
func (o *GetApplicationTypesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get application types using g e t forbidden response a status code equal to that given
func (o *GetApplicationTypesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get application types using g e t forbidden response
func (o *GetApplicationTypesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetApplicationTypesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETForbidden", 403)
}

func (o *GetApplicationTypesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETForbidden", 403)
}

func (o *GetApplicationTypesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationTypesUsingGETNotFound creates a GetApplicationTypesUsingGETNotFound with default headers values
func NewGetApplicationTypesUsingGETNotFound() *GetApplicationTypesUsingGETNotFound {
	return &GetApplicationTypesUsingGETNotFound{}
}

/*
GetApplicationTypesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationTypesUsingGETNotFound struct {
}

// IsSuccess returns true when this get application types using g e t not found response has a 2xx status code
func (o *GetApplicationTypesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application types using g e t not found response has a 3xx status code
func (o *GetApplicationTypesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application types using g e t not found response has a 4xx status code
func (o *GetApplicationTypesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application types using g e t not found response has a 5xx status code
func (o *GetApplicationTypesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application types using g e t not found response a status code equal to that given
func (o *GetApplicationTypesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application types using g e t not found response
func (o *GetApplicationTypesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetApplicationTypesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETNotFound", 404)
}

func (o *GetApplicationTypesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/applicationTypes][%d] getApplicationTypesUsingGETNotFound", 404)
}

func (o *GetApplicationTypesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
