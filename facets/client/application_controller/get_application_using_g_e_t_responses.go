// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetApplicationUsingGETReader is a Reader for the GetApplicationUsingGET structure.
type GetApplicationUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}] getApplicationUsingGET", response, response.Code())
	}
}

// NewGetApplicationUsingGETOK creates a GetApplicationUsingGETOK with default headers values
func NewGetApplicationUsingGETOK() *GetApplicationUsingGETOK {
	return &GetApplicationUsingGETOK{}
}

/*
GetApplicationUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationUsingGETOK struct {
	Payload *models.Application
}

// IsSuccess returns true when this get application using g e t o k response has a 2xx status code
func (o *GetApplicationUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application using g e t o k response has a 3xx status code
func (o *GetApplicationUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using g e t o k response has a 4xx status code
func (o *GetApplicationUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application using g e t o k response has a 5xx status code
func (o *GetApplicationUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application using g e t o k response a status code equal to that given
func (o *GetApplicationUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application using g e t o k response
func (o *GetApplicationUsingGETOK) Code() int {
	return 200
}

func (o *GetApplicationUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETOK %s", 200, payload)
}

func (o *GetApplicationUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETOK %s", 200, payload)
}

func (o *GetApplicationUsingGETOK) GetPayload() *models.Application {
	return o.Payload
}

func (o *GetApplicationUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Application)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationUsingGETUnauthorized creates a GetApplicationUsingGETUnauthorized with default headers values
func NewGetApplicationUsingGETUnauthorized() *GetApplicationUsingGETUnauthorized {
	return &GetApplicationUsingGETUnauthorized{}
}

/*
GetApplicationUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get application using g e t unauthorized response has a 2xx status code
func (o *GetApplicationUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application using g e t unauthorized response has a 3xx status code
func (o *GetApplicationUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using g e t unauthorized response has a 4xx status code
func (o *GetApplicationUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application using g e t unauthorized response has a 5xx status code
func (o *GetApplicationUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get application using g e t unauthorized response a status code equal to that given
func (o *GetApplicationUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get application using g e t unauthorized response
func (o *GetApplicationUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETUnauthorized", 401)
}

func (o *GetApplicationUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETUnauthorized", 401)
}

func (o *GetApplicationUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationUsingGETForbidden creates a GetApplicationUsingGETForbidden with default headers values
func NewGetApplicationUsingGETForbidden() *GetApplicationUsingGETForbidden {
	return &GetApplicationUsingGETForbidden{}
}

/*
GetApplicationUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationUsingGETForbidden struct {
}

// IsSuccess returns true when this get application using g e t forbidden response has a 2xx status code
func (o *GetApplicationUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application using g e t forbidden response has a 3xx status code
func (o *GetApplicationUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using g e t forbidden response has a 4xx status code
func (o *GetApplicationUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application using g e t forbidden response has a 5xx status code
func (o *GetApplicationUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get application using g e t forbidden response a status code equal to that given
func (o *GetApplicationUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get application using g e t forbidden response
func (o *GetApplicationUsingGETForbidden) Code() int {
	return 403
}

func (o *GetApplicationUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETForbidden", 403)
}

func (o *GetApplicationUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETForbidden", 403)
}

func (o *GetApplicationUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationUsingGETNotFound creates a GetApplicationUsingGETNotFound with default headers values
func NewGetApplicationUsingGETNotFound() *GetApplicationUsingGETNotFound {
	return &GetApplicationUsingGETNotFound{}
}

/*
GetApplicationUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationUsingGETNotFound struct {
}

// IsSuccess returns true when this get application using g e t not found response has a 2xx status code
func (o *GetApplicationUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application using g e t not found response has a 3xx status code
func (o *GetApplicationUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application using g e t not found response has a 4xx status code
func (o *GetApplicationUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application using g e t not found response has a 5xx status code
func (o *GetApplicationUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application using g e t not found response a status code equal to that given
func (o *GetApplicationUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application using g e t not found response
func (o *GetApplicationUsingGETNotFound) Code() int {
	return 404
}

func (o *GetApplicationUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETNotFound", 404)
}

func (o *GetApplicationUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}][%d] getApplicationUsingGETNotFound", 404)
}

func (o *GetApplicationUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
