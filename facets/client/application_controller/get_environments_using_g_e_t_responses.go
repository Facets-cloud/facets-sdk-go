// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetEnvironmentsUsingGETReader is a Reader for the GetEnvironmentsUsingGET structure.
type GetEnvironmentsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnvironmentsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnvironmentsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEnvironmentsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/environments] getEnvironmentsUsingGET", response, response.Code())
	}
}

// NewGetEnvironmentsUsingGETOK creates a GetEnvironmentsUsingGETOK with default headers values
func NewGetEnvironmentsUsingGETOK() *GetEnvironmentsUsingGETOK {
	return &GetEnvironmentsUsingGETOK{}
}

/*
GetEnvironmentsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetEnvironmentsUsingGETOK struct {
	Payload []*models.Environment
}

// IsSuccess returns true when this get environments using g e t o k response has a 2xx status code
func (o *GetEnvironmentsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get environments using g e t o k response has a 3xx status code
func (o *GetEnvironmentsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments using g e t o k response has a 4xx status code
func (o *GetEnvironmentsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get environments using g e t o k response has a 5xx status code
func (o *GetEnvironmentsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get environments using g e t o k response a status code equal to that given
func (o *GetEnvironmentsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get environments using g e t o k response
func (o *GetEnvironmentsUsingGETOK) Code() int {
	return 200
}

func (o *GetEnvironmentsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETOK %s", 200, payload)
}

func (o *GetEnvironmentsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETOK %s", 200, payload)
}

func (o *GetEnvironmentsUsingGETOK) GetPayload() []*models.Environment {
	return o.Payload
}

func (o *GetEnvironmentsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentsUsingGETUnauthorized creates a GetEnvironmentsUsingGETUnauthorized with default headers values
func NewGetEnvironmentsUsingGETUnauthorized() *GetEnvironmentsUsingGETUnauthorized {
	return &GetEnvironmentsUsingGETUnauthorized{}
}

/*
GetEnvironmentsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEnvironmentsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get environments using g e t unauthorized response has a 2xx status code
func (o *GetEnvironmentsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environments using g e t unauthorized response has a 3xx status code
func (o *GetEnvironmentsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments using g e t unauthorized response has a 4xx status code
func (o *GetEnvironmentsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environments using g e t unauthorized response has a 5xx status code
func (o *GetEnvironmentsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get environments using g e t unauthorized response a status code equal to that given
func (o *GetEnvironmentsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get environments using g e t unauthorized response
func (o *GetEnvironmentsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEnvironmentsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETUnauthorized", 401)
}

func (o *GetEnvironmentsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETUnauthorized", 401)
}

func (o *GetEnvironmentsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentsUsingGETForbidden creates a GetEnvironmentsUsingGETForbidden with default headers values
func NewGetEnvironmentsUsingGETForbidden() *GetEnvironmentsUsingGETForbidden {
	return &GetEnvironmentsUsingGETForbidden{}
}

/*
GetEnvironmentsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEnvironmentsUsingGETForbidden struct {
}

// IsSuccess returns true when this get environments using g e t forbidden response has a 2xx status code
func (o *GetEnvironmentsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environments using g e t forbidden response has a 3xx status code
func (o *GetEnvironmentsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments using g e t forbidden response has a 4xx status code
func (o *GetEnvironmentsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environments using g e t forbidden response has a 5xx status code
func (o *GetEnvironmentsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get environments using g e t forbidden response a status code equal to that given
func (o *GetEnvironmentsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get environments using g e t forbidden response
func (o *GetEnvironmentsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEnvironmentsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETForbidden", 403)
}

func (o *GetEnvironmentsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETForbidden", 403)
}

func (o *GetEnvironmentsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentsUsingGETNotFound creates a GetEnvironmentsUsingGETNotFound with default headers values
func NewGetEnvironmentsUsingGETNotFound() *GetEnvironmentsUsingGETNotFound {
	return &GetEnvironmentsUsingGETNotFound{}
}

/*
GetEnvironmentsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEnvironmentsUsingGETNotFound struct {
}

// IsSuccess returns true when this get environments using g e t not found response has a 2xx status code
func (o *GetEnvironmentsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environments using g e t not found response has a 3xx status code
func (o *GetEnvironmentsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environments using g e t not found response has a 4xx status code
func (o *GetEnvironmentsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environments using g e t not found response has a 5xx status code
func (o *GetEnvironmentsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get environments using g e t not found response a status code equal to that given
func (o *GetEnvironmentsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get environments using g e t not found response
func (o *GetEnvironmentsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEnvironmentsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETNotFound", 404)
}

func (o *GetEnvironmentsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments][%d] getEnvironmentsUsingGETNotFound", 404)
}

func (o *GetEnvironmentsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
