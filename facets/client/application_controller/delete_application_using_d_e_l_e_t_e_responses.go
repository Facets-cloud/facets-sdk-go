// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// DeleteApplicationUsingDELETEReader is a Reader for the DeleteApplicationUsingDELETE structure.
type DeleteApplicationUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteApplicationUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteApplicationUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewDeleteApplicationUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeleteApplicationUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteApplicationUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/{applicationFamily}/applications/{applicationId}] deleteApplicationUsingDELETE", response, response.Code())
	}
}

// NewDeleteApplicationUsingDELETEOK creates a DeleteApplicationUsingDELETEOK with default headers values
func NewDeleteApplicationUsingDELETEOK() *DeleteApplicationUsingDELETEOK {
	return &DeleteApplicationUsingDELETEOK{}
}

/*
DeleteApplicationUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type DeleteApplicationUsingDELETEOK struct {
	Payload bool
}

// IsSuccess returns true when this delete application using d e l e t e o k response has a 2xx status code
func (o *DeleteApplicationUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete application using d e l e t e o k response has a 3xx status code
func (o *DeleteApplicationUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using d e l e t e o k response has a 4xx status code
func (o *DeleteApplicationUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete application using d e l e t e o k response has a 5xx status code
func (o *DeleteApplicationUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application using d e l e t e o k response a status code equal to that given
func (o *DeleteApplicationUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the delete application using d e l e t e o k response
func (o *DeleteApplicationUsingDELETEOK) Code() int {
	return 200
}

func (o *DeleteApplicationUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETEOK %s", 200, payload)
}

func (o *DeleteApplicationUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETEOK %s", 200, payload)
}

func (o *DeleteApplicationUsingDELETEOK) GetPayload() bool {
	return o.Payload
}

func (o *DeleteApplicationUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteApplicationUsingDELETENoContent creates a DeleteApplicationUsingDELETENoContent with default headers values
func NewDeleteApplicationUsingDELETENoContent() *DeleteApplicationUsingDELETENoContent {
	return &DeleteApplicationUsingDELETENoContent{}
}

/*
DeleteApplicationUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type DeleteApplicationUsingDELETENoContent struct {
}

// IsSuccess returns true when this delete application using d e l e t e no content response has a 2xx status code
func (o *DeleteApplicationUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this delete application using d e l e t e no content response has a 3xx status code
func (o *DeleteApplicationUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using d e l e t e no content response has a 4xx status code
func (o *DeleteApplicationUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this delete application using d e l e t e no content response has a 5xx status code
func (o *DeleteApplicationUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application using d e l e t e no content response a status code equal to that given
func (o *DeleteApplicationUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the delete application using d e l e t e no content response
func (o *DeleteApplicationUsingDELETENoContent) Code() int {
	return 204
}

func (o *DeleteApplicationUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETENoContent", 204)
}

func (o *DeleteApplicationUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETENoContent", 204)
}

func (o *DeleteApplicationUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteApplicationUsingDELETEUnauthorized creates a DeleteApplicationUsingDELETEUnauthorized with default headers values
func NewDeleteApplicationUsingDELETEUnauthorized() *DeleteApplicationUsingDELETEUnauthorized {
	return &DeleteApplicationUsingDELETEUnauthorized{}
}

/*
DeleteApplicationUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeleteApplicationUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this delete application using d e l e t e unauthorized response has a 2xx status code
func (o *DeleteApplicationUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application using d e l e t e unauthorized response has a 3xx status code
func (o *DeleteApplicationUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using d e l e t e unauthorized response has a 4xx status code
func (o *DeleteApplicationUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application using d e l e t e unauthorized response has a 5xx status code
func (o *DeleteApplicationUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application using d e l e t e unauthorized response a status code equal to that given
func (o *DeleteApplicationUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the delete application using d e l e t e unauthorized response
func (o *DeleteApplicationUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *DeleteApplicationUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETEUnauthorized", 401)
}

func (o *DeleteApplicationUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETEUnauthorized", 401)
}

func (o *DeleteApplicationUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteApplicationUsingDELETEForbidden creates a DeleteApplicationUsingDELETEForbidden with default headers values
func NewDeleteApplicationUsingDELETEForbidden() *DeleteApplicationUsingDELETEForbidden {
	return &DeleteApplicationUsingDELETEForbidden{}
}

/*
DeleteApplicationUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteApplicationUsingDELETEForbidden struct {
}

// IsSuccess returns true when this delete application using d e l e t e forbidden response has a 2xx status code
func (o *DeleteApplicationUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this delete application using d e l e t e forbidden response has a 3xx status code
func (o *DeleteApplicationUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this delete application using d e l e t e forbidden response has a 4xx status code
func (o *DeleteApplicationUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this delete application using d e l e t e forbidden response has a 5xx status code
func (o *DeleteApplicationUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this delete application using d e l e t e forbidden response a status code equal to that given
func (o *DeleteApplicationUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the delete application using d e l e t e forbidden response
func (o *DeleteApplicationUsingDELETEForbidden) Code() int {
	return 403
}

func (o *DeleteApplicationUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETEForbidden", 403)
}

func (o *DeleteApplicationUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/{applicationFamily}/applications/{applicationId}][%d] deleteApplicationUsingDELETEForbidden", 403)
}

func (o *DeleteApplicationUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
