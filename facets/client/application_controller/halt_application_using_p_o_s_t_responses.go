// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// HaltApplicationUsingPOSTReader is a Reader for the HaltApplicationUsingPOST structure.
type HaltApplicationUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *HaltApplicationUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewHaltApplicationUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewHaltApplicationUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewHaltApplicationUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewHaltApplicationUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewHaltApplicationUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt] haltApplicationUsingPOST", response, response.Code())
	}
}

// NewHaltApplicationUsingPOSTOK creates a HaltApplicationUsingPOSTOK with default headers values
func NewHaltApplicationUsingPOSTOK() *HaltApplicationUsingPOSTOK {
	return &HaltApplicationUsingPOSTOK{}
}

/*
HaltApplicationUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type HaltApplicationUsingPOSTOK struct {
	Payload bool
}

// IsSuccess returns true when this halt application using p o s t o k response has a 2xx status code
func (o *HaltApplicationUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this halt application using p o s t o k response has a 3xx status code
func (o *HaltApplicationUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this halt application using p o s t o k response has a 4xx status code
func (o *HaltApplicationUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this halt application using p o s t o k response has a 5xx status code
func (o *HaltApplicationUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this halt application using p o s t o k response a status code equal to that given
func (o *HaltApplicationUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the halt application using p o s t o k response
func (o *HaltApplicationUsingPOSTOK) Code() int {
	return 200
}

func (o *HaltApplicationUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTOK %s", 200, payload)
}

func (o *HaltApplicationUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTOK %s", 200, payload)
}

func (o *HaltApplicationUsingPOSTOK) GetPayload() bool {
	return o.Payload
}

func (o *HaltApplicationUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewHaltApplicationUsingPOSTCreated creates a HaltApplicationUsingPOSTCreated with default headers values
func NewHaltApplicationUsingPOSTCreated() *HaltApplicationUsingPOSTCreated {
	return &HaltApplicationUsingPOSTCreated{}
}

/*
HaltApplicationUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type HaltApplicationUsingPOSTCreated struct {
}

// IsSuccess returns true when this halt application using p o s t created response has a 2xx status code
func (o *HaltApplicationUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this halt application using p o s t created response has a 3xx status code
func (o *HaltApplicationUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this halt application using p o s t created response has a 4xx status code
func (o *HaltApplicationUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this halt application using p o s t created response has a 5xx status code
func (o *HaltApplicationUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this halt application using p o s t created response a status code equal to that given
func (o *HaltApplicationUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the halt application using p o s t created response
func (o *HaltApplicationUsingPOSTCreated) Code() int {
	return 201
}

func (o *HaltApplicationUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTCreated", 201)
}

func (o *HaltApplicationUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTCreated", 201)
}

func (o *HaltApplicationUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHaltApplicationUsingPOSTUnauthorized creates a HaltApplicationUsingPOSTUnauthorized with default headers values
func NewHaltApplicationUsingPOSTUnauthorized() *HaltApplicationUsingPOSTUnauthorized {
	return &HaltApplicationUsingPOSTUnauthorized{}
}

/*
HaltApplicationUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type HaltApplicationUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this halt application using p o s t unauthorized response has a 2xx status code
func (o *HaltApplicationUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this halt application using p o s t unauthorized response has a 3xx status code
func (o *HaltApplicationUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this halt application using p o s t unauthorized response has a 4xx status code
func (o *HaltApplicationUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this halt application using p o s t unauthorized response has a 5xx status code
func (o *HaltApplicationUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this halt application using p o s t unauthorized response a status code equal to that given
func (o *HaltApplicationUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the halt application using p o s t unauthorized response
func (o *HaltApplicationUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *HaltApplicationUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTUnauthorized", 401)
}

func (o *HaltApplicationUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTUnauthorized", 401)
}

func (o *HaltApplicationUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHaltApplicationUsingPOSTForbidden creates a HaltApplicationUsingPOSTForbidden with default headers values
func NewHaltApplicationUsingPOSTForbidden() *HaltApplicationUsingPOSTForbidden {
	return &HaltApplicationUsingPOSTForbidden{}
}

/*
HaltApplicationUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type HaltApplicationUsingPOSTForbidden struct {
}

// IsSuccess returns true when this halt application using p o s t forbidden response has a 2xx status code
func (o *HaltApplicationUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this halt application using p o s t forbidden response has a 3xx status code
func (o *HaltApplicationUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this halt application using p o s t forbidden response has a 4xx status code
func (o *HaltApplicationUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this halt application using p o s t forbidden response has a 5xx status code
func (o *HaltApplicationUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this halt application using p o s t forbidden response a status code equal to that given
func (o *HaltApplicationUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the halt application using p o s t forbidden response
func (o *HaltApplicationUsingPOSTForbidden) Code() int {
	return 403
}

func (o *HaltApplicationUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTForbidden", 403)
}

func (o *HaltApplicationUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTForbidden", 403)
}

func (o *HaltApplicationUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewHaltApplicationUsingPOSTNotFound creates a HaltApplicationUsingPOSTNotFound with default headers values
func NewHaltApplicationUsingPOSTNotFound() *HaltApplicationUsingPOSTNotFound {
	return &HaltApplicationUsingPOSTNotFound{}
}

/*
HaltApplicationUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type HaltApplicationUsingPOSTNotFound struct {
}

// IsSuccess returns true when this halt application using p o s t not found response has a 2xx status code
func (o *HaltApplicationUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this halt application using p o s t not found response has a 3xx status code
func (o *HaltApplicationUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this halt application using p o s t not found response has a 4xx status code
func (o *HaltApplicationUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this halt application using p o s t not found response has a 5xx status code
func (o *HaltApplicationUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this halt application using p o s t not found response a status code equal to that given
func (o *HaltApplicationUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the halt application using p o s t not found response
func (o *HaltApplicationUsingPOSTNotFound) Code() int {
	return 404
}

func (o *HaltApplicationUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTNotFound", 404)
}

func (o *HaltApplicationUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/halt][%d] haltApplicationUsingPOSTNotFound", 404)
}

func (o *HaltApplicationUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
