// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateUserCCUsingPOSTReader is a Reader for the CreateUserCCUsingPOST structure.
type CreateUserCCUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUserCCUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUserCCUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateUserCCUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateUserCCUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateUserCCUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateUserCCUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/cc-users] createUserCCUsingPOST", response, response.Code())
	}
}

// NewCreateUserCCUsingPOSTOK creates a CreateUserCCUsingPOSTOK with default headers values
func NewCreateUserCCUsingPOSTOK() *CreateUserCCUsingPOSTOK {
	return &CreateUserCCUsingPOSTOK{}
}

/*
CreateUserCCUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateUserCCUsingPOSTOK struct {
	Payload *models.User
}

// IsSuccess returns true when this create user c c using p o s t o k response has a 2xx status code
func (o *CreateUserCCUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user c c using p o s t o k response has a 3xx status code
func (o *CreateUserCCUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user c c using p o s t o k response has a 4xx status code
func (o *CreateUserCCUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user c c using p o s t o k response has a 5xx status code
func (o *CreateUserCCUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create user c c using p o s t o k response a status code equal to that given
func (o *CreateUserCCUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create user c c using p o s t o k response
func (o *CreateUserCCUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateUserCCUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTOK %s", 200, payload)
}

func (o *CreateUserCCUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTOK %s", 200, payload)
}

func (o *CreateUserCCUsingPOSTOK) GetPayload() *models.User {
	return o.Payload
}

func (o *CreateUserCCUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserCCUsingPOSTCreated creates a CreateUserCCUsingPOSTCreated with default headers values
func NewCreateUserCCUsingPOSTCreated() *CreateUserCCUsingPOSTCreated {
	return &CreateUserCCUsingPOSTCreated{}
}

/*
CreateUserCCUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateUserCCUsingPOSTCreated struct {
}

// IsSuccess returns true when this create user c c using p o s t created response has a 2xx status code
func (o *CreateUserCCUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user c c using p o s t created response has a 3xx status code
func (o *CreateUserCCUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user c c using p o s t created response has a 4xx status code
func (o *CreateUserCCUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user c c using p o s t created response has a 5xx status code
func (o *CreateUserCCUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create user c c using p o s t created response a status code equal to that given
func (o *CreateUserCCUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create user c c using p o s t created response
func (o *CreateUserCCUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateUserCCUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTCreated", 201)
}

func (o *CreateUserCCUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTCreated", 201)
}

func (o *CreateUserCCUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserCCUsingPOSTUnauthorized creates a CreateUserCCUsingPOSTUnauthorized with default headers values
func NewCreateUserCCUsingPOSTUnauthorized() *CreateUserCCUsingPOSTUnauthorized {
	return &CreateUserCCUsingPOSTUnauthorized{}
}

/*
CreateUserCCUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateUserCCUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create user c c using p o s t unauthorized response has a 2xx status code
func (o *CreateUserCCUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user c c using p o s t unauthorized response has a 3xx status code
func (o *CreateUserCCUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user c c using p o s t unauthorized response has a 4xx status code
func (o *CreateUserCCUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user c c using p o s t unauthorized response has a 5xx status code
func (o *CreateUserCCUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create user c c using p o s t unauthorized response a status code equal to that given
func (o *CreateUserCCUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create user c c using p o s t unauthorized response
func (o *CreateUserCCUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateUserCCUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTUnauthorized", 401)
}

func (o *CreateUserCCUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTUnauthorized", 401)
}

func (o *CreateUserCCUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserCCUsingPOSTForbidden creates a CreateUserCCUsingPOSTForbidden with default headers values
func NewCreateUserCCUsingPOSTForbidden() *CreateUserCCUsingPOSTForbidden {
	return &CreateUserCCUsingPOSTForbidden{}
}

/*
CreateUserCCUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateUserCCUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create user c c using p o s t forbidden response has a 2xx status code
func (o *CreateUserCCUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user c c using p o s t forbidden response has a 3xx status code
func (o *CreateUserCCUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user c c using p o s t forbidden response has a 4xx status code
func (o *CreateUserCCUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user c c using p o s t forbidden response has a 5xx status code
func (o *CreateUserCCUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create user c c using p o s t forbidden response a status code equal to that given
func (o *CreateUserCCUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create user c c using p o s t forbidden response
func (o *CreateUserCCUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateUserCCUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTForbidden", 403)
}

func (o *CreateUserCCUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTForbidden", 403)
}

func (o *CreateUserCCUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserCCUsingPOSTNotFound creates a CreateUserCCUsingPOSTNotFound with default headers values
func NewCreateUserCCUsingPOSTNotFound() *CreateUserCCUsingPOSTNotFound {
	return &CreateUserCCUsingPOSTNotFound{}
}

/*
CreateUserCCUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateUserCCUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create user c c using p o s t not found response has a 2xx status code
func (o *CreateUserCCUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user c c using p o s t not found response has a 3xx status code
func (o *CreateUserCCUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user c c using p o s t not found response has a 4xx status code
func (o *CreateUserCCUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user c c using p o s t not found response has a 5xx status code
func (o *CreateUserCCUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create user c c using p o s t not found response a status code equal to that given
func (o *CreateUserCCUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create user c c using p o s t not found response
func (o *CreateUserCCUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateUserCCUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTNotFound", 404)
}

func (o *CreateUserCCUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /api/cc-users][%d] createUserCCUsingPOSTNotFound", 404)
}

func (o *CreateUserCCUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
