// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// Login6Reader is a Reader for the Login6 structure.
type Login6Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Login6Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogin6OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLogin6BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLogin6NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewLogin6MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLogin6InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[OPTIONS /api/login] login_6", response, response.Code())
	}
}

// NewLogin6OK creates a Login6OK with default headers values
func NewLogin6OK() *Login6OK {
	return &Login6OK{}
}

/*
Login6OK describes a response with status code 200, with default header values.

OK
*/
type Login6OK struct {
	Payload string
}

// IsSuccess returns true when this login6 o k response has a 2xx status code
func (o *Login6OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this login6 o k response has a 3xx status code
func (o *Login6OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login6 o k response has a 4xx status code
func (o *Login6OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this login6 o k response has a 5xx status code
func (o *Login6OK) IsServerError() bool {
	return false
}

// IsCode returns true when this login6 o k response a status code equal to that given
func (o *Login6OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the login6 o k response
func (o *Login6OK) Code() int {
	return 200
}

func (o *Login6OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6OK %s", 200, payload)
}

func (o *Login6OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6OK %s", 200, payload)
}

func (o *Login6OK) GetPayload() string {
	return o.Payload
}

func (o *Login6OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin6BadRequest creates a Login6BadRequest with default headers values
func NewLogin6BadRequest() *Login6BadRequest {
	return &Login6BadRequest{}
}

/*
Login6BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type Login6BadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login6 bad request response has a 2xx status code
func (o *Login6BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login6 bad request response has a 3xx status code
func (o *Login6BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login6 bad request response has a 4xx status code
func (o *Login6BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this login6 bad request response has a 5xx status code
func (o *Login6BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this login6 bad request response a status code equal to that given
func (o *Login6BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the login6 bad request response
func (o *Login6BadRequest) Code() int {
	return 400
}

func (o *Login6BadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6BadRequest %s", 400, payload)
}

func (o *Login6BadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6BadRequest %s", 400, payload)
}

func (o *Login6BadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login6BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin6NotFound creates a Login6NotFound with default headers values
func NewLogin6NotFound() *Login6NotFound {
	return &Login6NotFound{}
}

/*
Login6NotFound describes a response with status code 404, with default header values.

Not Found
*/
type Login6NotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login6 not found response has a 2xx status code
func (o *Login6NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login6 not found response has a 3xx status code
func (o *Login6NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login6 not found response has a 4xx status code
func (o *Login6NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this login6 not found response has a 5xx status code
func (o *Login6NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this login6 not found response a status code equal to that given
func (o *Login6NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the login6 not found response
func (o *Login6NotFound) Code() int {
	return 404
}

func (o *Login6NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6NotFound %s", 404, payload)
}

func (o *Login6NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6NotFound %s", 404, payload)
}

func (o *Login6NotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login6NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin6MethodNotAllowed creates a Login6MethodNotAllowed with default headers values
func NewLogin6MethodNotAllowed() *Login6MethodNotAllowed {
	return &Login6MethodNotAllowed{}
}

/*
Login6MethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type Login6MethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login6 method not allowed response has a 2xx status code
func (o *Login6MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login6 method not allowed response has a 3xx status code
func (o *Login6MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login6 method not allowed response has a 4xx status code
func (o *Login6MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this login6 method not allowed response has a 5xx status code
func (o *Login6MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this login6 method not allowed response a status code equal to that given
func (o *Login6MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the login6 method not allowed response
func (o *Login6MethodNotAllowed) Code() int {
	return 405
}

func (o *Login6MethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6MethodNotAllowed %s", 405, payload)
}

func (o *Login6MethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6MethodNotAllowed %s", 405, payload)
}

func (o *Login6MethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login6MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin6InternalServerError creates a Login6InternalServerError with default headers values
func NewLogin6InternalServerError() *Login6InternalServerError {
	return &Login6InternalServerError{}
}

/*
Login6InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type Login6InternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login6 internal server error response has a 2xx status code
func (o *Login6InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login6 internal server error response has a 3xx status code
func (o *Login6InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login6 internal server error response has a 4xx status code
func (o *Login6InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this login6 internal server error response has a 5xx status code
func (o *Login6InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this login6 internal server error response a status code equal to that given
func (o *Login6InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the login6 internal server error response
func (o *Login6InternalServerError) Code() int {
	return 500
}

func (o *Login6InternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6InternalServerError %s", 500, payload)
}

func (o *Login6InternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[OPTIONS /api/login][%d] login6InternalServerError %s", 500, payload)
}

func (o *Login6InternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login6InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
