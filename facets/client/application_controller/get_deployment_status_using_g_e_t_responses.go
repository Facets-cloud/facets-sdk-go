// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetDeploymentStatusUsingGETReader is a Reader for the GetDeploymentStatusUsingGET structure.
type GetDeploymentStatusUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDeploymentStatusUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDeploymentStatusUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetDeploymentStatusUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetDeploymentStatusUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetDeploymentStatusUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus] getDeploymentStatusUsingGET", response, response.Code())
	}
}

// NewGetDeploymentStatusUsingGETOK creates a GetDeploymentStatusUsingGETOK with default headers values
func NewGetDeploymentStatusUsingGETOK() *GetDeploymentStatusUsingGETOK {
	return &GetDeploymentStatusUsingGETOK{}
}

/*
GetDeploymentStatusUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetDeploymentStatusUsingGETOK struct {
	Payload *models.DeploymentStatusDetails
}

// IsSuccess returns true when this get deployment status using g e t o k response has a 2xx status code
func (o *GetDeploymentStatusUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get deployment status using g e t o k response has a 3xx status code
func (o *GetDeploymentStatusUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment status using g e t o k response has a 4xx status code
func (o *GetDeploymentStatusUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get deployment status using g e t o k response has a 5xx status code
func (o *GetDeploymentStatusUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment status using g e t o k response a status code equal to that given
func (o *GetDeploymentStatusUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get deployment status using g e t o k response
func (o *GetDeploymentStatusUsingGETOK) Code() int {
	return 200
}

func (o *GetDeploymentStatusUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETOK %s", 200, payload)
}

func (o *GetDeploymentStatusUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETOK %s", 200, payload)
}

func (o *GetDeploymentStatusUsingGETOK) GetPayload() *models.DeploymentStatusDetails {
	return o.Payload
}

func (o *GetDeploymentStatusUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeploymentStatusDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDeploymentStatusUsingGETUnauthorized creates a GetDeploymentStatusUsingGETUnauthorized with default headers values
func NewGetDeploymentStatusUsingGETUnauthorized() *GetDeploymentStatusUsingGETUnauthorized {
	return &GetDeploymentStatusUsingGETUnauthorized{}
}

/*
GetDeploymentStatusUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetDeploymentStatusUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get deployment status using g e t unauthorized response has a 2xx status code
func (o *GetDeploymentStatusUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment status using g e t unauthorized response has a 3xx status code
func (o *GetDeploymentStatusUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment status using g e t unauthorized response has a 4xx status code
func (o *GetDeploymentStatusUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployment status using g e t unauthorized response has a 5xx status code
func (o *GetDeploymentStatusUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment status using g e t unauthorized response a status code equal to that given
func (o *GetDeploymentStatusUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get deployment status using g e t unauthorized response
func (o *GetDeploymentStatusUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetDeploymentStatusUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETUnauthorized", 401)
}

func (o *GetDeploymentStatusUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETUnauthorized", 401)
}

func (o *GetDeploymentStatusUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentStatusUsingGETForbidden creates a GetDeploymentStatusUsingGETForbidden with default headers values
func NewGetDeploymentStatusUsingGETForbidden() *GetDeploymentStatusUsingGETForbidden {
	return &GetDeploymentStatusUsingGETForbidden{}
}

/*
GetDeploymentStatusUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetDeploymentStatusUsingGETForbidden struct {
}

// IsSuccess returns true when this get deployment status using g e t forbidden response has a 2xx status code
func (o *GetDeploymentStatusUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment status using g e t forbidden response has a 3xx status code
func (o *GetDeploymentStatusUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment status using g e t forbidden response has a 4xx status code
func (o *GetDeploymentStatusUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployment status using g e t forbidden response has a 5xx status code
func (o *GetDeploymentStatusUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment status using g e t forbidden response a status code equal to that given
func (o *GetDeploymentStatusUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get deployment status using g e t forbidden response
func (o *GetDeploymentStatusUsingGETForbidden) Code() int {
	return 403
}

func (o *GetDeploymentStatusUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETForbidden", 403)
}

func (o *GetDeploymentStatusUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETForbidden", 403)
}

func (o *GetDeploymentStatusUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDeploymentStatusUsingGETNotFound creates a GetDeploymentStatusUsingGETNotFound with default headers values
func NewGetDeploymentStatusUsingGETNotFound() *GetDeploymentStatusUsingGETNotFound {
	return &GetDeploymentStatusUsingGETNotFound{}
}

/*
GetDeploymentStatusUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetDeploymentStatusUsingGETNotFound struct {
}

// IsSuccess returns true when this get deployment status using g e t not found response has a 2xx status code
func (o *GetDeploymentStatusUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get deployment status using g e t not found response has a 3xx status code
func (o *GetDeploymentStatusUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get deployment status using g e t not found response has a 4xx status code
func (o *GetDeploymentStatusUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get deployment status using g e t not found response has a 5xx status code
func (o *GetDeploymentStatusUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get deployment status using g e t not found response a status code equal to that given
func (o *GetDeploymentStatusUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get deployment status using g e t not found response
func (o *GetDeploymentStatusUsingGETNotFound) Code() int {
	return 404
}

func (o *GetDeploymentStatusUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETNotFound", 404)
}

func (o *GetDeploymentStatusUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/{environment}/applications/{applicationId}/deploymentStatus][%d] getDeploymentStatusUsingGETNotFound", 404)
}

func (o *GetDeploymentStatusUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
