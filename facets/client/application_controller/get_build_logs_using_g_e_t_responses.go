// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetBuildLogsUsingGETReader is a Reader for the GetBuildLogsUsingGET structure.
type GetBuildLogsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBuildLogsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetBuildLogsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetBuildLogsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetBuildLogsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetBuildLogsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs] getBuildLogsUsingGET", response, response.Code())
	}
}

// NewGetBuildLogsUsingGETOK creates a GetBuildLogsUsingGETOK with default headers values
func NewGetBuildLogsUsingGETOK() *GetBuildLogsUsingGETOK {
	return &GetBuildLogsUsingGETOK{}
}

/*
GetBuildLogsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetBuildLogsUsingGETOK struct {
	Payload *models.TokenPaginatedResponseLogEvent
}

// IsSuccess returns true when this get build logs using g e t o k response has a 2xx status code
func (o *GetBuildLogsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get build logs using g e t o k response has a 3xx status code
func (o *GetBuildLogsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build logs using g e t o k response has a 4xx status code
func (o *GetBuildLogsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get build logs using g e t o k response has a 5xx status code
func (o *GetBuildLogsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get build logs using g e t o k response a status code equal to that given
func (o *GetBuildLogsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get build logs using g e t o k response
func (o *GetBuildLogsUsingGETOK) Code() int {
	return 200
}

func (o *GetBuildLogsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETOK %s", 200, payload)
}

func (o *GetBuildLogsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETOK %s", 200, payload)
}

func (o *GetBuildLogsUsingGETOK) GetPayload() *models.TokenPaginatedResponseLogEvent {
	return o.Payload
}

func (o *GetBuildLogsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TokenPaginatedResponseLogEvent)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBuildLogsUsingGETUnauthorized creates a GetBuildLogsUsingGETUnauthorized with default headers values
func NewGetBuildLogsUsingGETUnauthorized() *GetBuildLogsUsingGETUnauthorized {
	return &GetBuildLogsUsingGETUnauthorized{}
}

/*
GetBuildLogsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetBuildLogsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get build logs using g e t unauthorized response has a 2xx status code
func (o *GetBuildLogsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build logs using g e t unauthorized response has a 3xx status code
func (o *GetBuildLogsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build logs using g e t unauthorized response has a 4xx status code
func (o *GetBuildLogsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build logs using g e t unauthorized response has a 5xx status code
func (o *GetBuildLogsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get build logs using g e t unauthorized response a status code equal to that given
func (o *GetBuildLogsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get build logs using g e t unauthorized response
func (o *GetBuildLogsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetBuildLogsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETUnauthorized", 401)
}

func (o *GetBuildLogsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETUnauthorized", 401)
}

func (o *GetBuildLogsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBuildLogsUsingGETForbidden creates a GetBuildLogsUsingGETForbidden with default headers values
func NewGetBuildLogsUsingGETForbidden() *GetBuildLogsUsingGETForbidden {
	return &GetBuildLogsUsingGETForbidden{}
}

/*
GetBuildLogsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetBuildLogsUsingGETForbidden struct {
}

// IsSuccess returns true when this get build logs using g e t forbidden response has a 2xx status code
func (o *GetBuildLogsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build logs using g e t forbidden response has a 3xx status code
func (o *GetBuildLogsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build logs using g e t forbidden response has a 4xx status code
func (o *GetBuildLogsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build logs using g e t forbidden response has a 5xx status code
func (o *GetBuildLogsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get build logs using g e t forbidden response a status code equal to that given
func (o *GetBuildLogsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get build logs using g e t forbidden response
func (o *GetBuildLogsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetBuildLogsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETForbidden", 403)
}

func (o *GetBuildLogsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETForbidden", 403)
}

func (o *GetBuildLogsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetBuildLogsUsingGETNotFound creates a GetBuildLogsUsingGETNotFound with default headers values
func NewGetBuildLogsUsingGETNotFound() *GetBuildLogsUsingGETNotFound {
	return &GetBuildLogsUsingGETNotFound{}
}

/*
GetBuildLogsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetBuildLogsUsingGETNotFound struct {
}

// IsSuccess returns true when this get build logs using g e t not found response has a 2xx status code
func (o *GetBuildLogsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get build logs using g e t not found response has a 3xx status code
func (o *GetBuildLogsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get build logs using g e t not found response has a 4xx status code
func (o *GetBuildLogsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get build logs using g e t not found response has a 5xx status code
func (o *GetBuildLogsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get build logs using g e t not found response a status code equal to that given
func (o *GetBuildLogsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get build logs using g e t not found response
func (o *GetBuildLogsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetBuildLogsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETNotFound", 404)
}

func (o *GetBuildLogsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/builds/{buildId}/logs][%d] getBuildLogsUsingGETNotFound", 404)
}

func (o *GetBuildLogsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
