// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetApplicationBranchesUsingGETReader is a Reader for the GetApplicationBranchesUsingGET structure.
type GetApplicationBranchesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationBranchesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationBranchesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationBranchesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationBranchesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationBranchesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}/branches] getApplicationBranchesUsingGET", response, response.Code())
	}
}

// NewGetApplicationBranchesUsingGETOK creates a GetApplicationBranchesUsingGETOK with default headers values
func NewGetApplicationBranchesUsingGETOK() *GetApplicationBranchesUsingGETOK {
	return &GetApplicationBranchesUsingGETOK{}
}

/*
GetApplicationBranchesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationBranchesUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get application branches using g e t o k response has a 2xx status code
func (o *GetApplicationBranchesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application branches using g e t o k response has a 3xx status code
func (o *GetApplicationBranchesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application branches using g e t o k response has a 4xx status code
func (o *GetApplicationBranchesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application branches using g e t o k response has a 5xx status code
func (o *GetApplicationBranchesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application branches using g e t o k response a status code equal to that given
func (o *GetApplicationBranchesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application branches using g e t o k response
func (o *GetApplicationBranchesUsingGETOK) Code() int {
	return 200
}

func (o *GetApplicationBranchesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETOK %s", 200, payload)
}

func (o *GetApplicationBranchesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETOK %s", 200, payload)
}

func (o *GetApplicationBranchesUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetApplicationBranchesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationBranchesUsingGETUnauthorized creates a GetApplicationBranchesUsingGETUnauthorized with default headers values
func NewGetApplicationBranchesUsingGETUnauthorized() *GetApplicationBranchesUsingGETUnauthorized {
	return &GetApplicationBranchesUsingGETUnauthorized{}
}

/*
GetApplicationBranchesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationBranchesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get application branches using g e t unauthorized response has a 2xx status code
func (o *GetApplicationBranchesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application branches using g e t unauthorized response has a 3xx status code
func (o *GetApplicationBranchesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application branches using g e t unauthorized response has a 4xx status code
func (o *GetApplicationBranchesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application branches using g e t unauthorized response has a 5xx status code
func (o *GetApplicationBranchesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get application branches using g e t unauthorized response a status code equal to that given
func (o *GetApplicationBranchesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get application branches using g e t unauthorized response
func (o *GetApplicationBranchesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationBranchesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETUnauthorized", 401)
}

func (o *GetApplicationBranchesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETUnauthorized", 401)
}

func (o *GetApplicationBranchesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationBranchesUsingGETForbidden creates a GetApplicationBranchesUsingGETForbidden with default headers values
func NewGetApplicationBranchesUsingGETForbidden() *GetApplicationBranchesUsingGETForbidden {
	return &GetApplicationBranchesUsingGETForbidden{}
}

/*
GetApplicationBranchesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationBranchesUsingGETForbidden struct {
}

// IsSuccess returns true when this get application branches using g e t forbidden response has a 2xx status code
func (o *GetApplicationBranchesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application branches using g e t forbidden response has a 3xx status code
func (o *GetApplicationBranchesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application branches using g e t forbidden response has a 4xx status code
func (o *GetApplicationBranchesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application branches using g e t forbidden response has a 5xx status code
func (o *GetApplicationBranchesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get application branches using g e t forbidden response a status code equal to that given
func (o *GetApplicationBranchesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get application branches using g e t forbidden response
func (o *GetApplicationBranchesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetApplicationBranchesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETForbidden", 403)
}

func (o *GetApplicationBranchesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETForbidden", 403)
}

func (o *GetApplicationBranchesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationBranchesUsingGETNotFound creates a GetApplicationBranchesUsingGETNotFound with default headers values
func NewGetApplicationBranchesUsingGETNotFound() *GetApplicationBranchesUsingGETNotFound {
	return &GetApplicationBranchesUsingGETNotFound{}
}

/*
GetApplicationBranchesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationBranchesUsingGETNotFound struct {
}

// IsSuccess returns true when this get application branches using g e t not found response has a 2xx status code
func (o *GetApplicationBranchesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application branches using g e t not found response has a 3xx status code
func (o *GetApplicationBranchesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application branches using g e t not found response has a 4xx status code
func (o *GetApplicationBranchesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application branches using g e t not found response has a 5xx status code
func (o *GetApplicationBranchesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application branches using g e t not found response a status code equal to that given
func (o *GetApplicationBranchesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application branches using g e t not found response
func (o *GetApplicationBranchesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetApplicationBranchesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETNotFound", 404)
}

func (o *GetApplicationBranchesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/branches][%d] getApplicationBranchesUsingGETNotFound", 404)
}

func (o *GetApplicationBranchesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
