// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetImagesUsingGETReader is a Reader for the GetImagesUsingGET structure.
type GetImagesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetImagesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetImagesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetImagesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetImagesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetImagesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}/images] getImagesUsingGET", response, response.Code())
	}
}

// NewGetImagesUsingGETOK creates a GetImagesUsingGETOK with default headers values
func NewGetImagesUsingGETOK() *GetImagesUsingGETOK {
	return &GetImagesUsingGETOK{}
}

/*
GetImagesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetImagesUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get images using g e t o k response has a 2xx status code
func (o *GetImagesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get images using g e t o k response has a 3xx status code
func (o *GetImagesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get images using g e t o k response has a 4xx status code
func (o *GetImagesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get images using g e t o k response has a 5xx status code
func (o *GetImagesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get images using g e t o k response a status code equal to that given
func (o *GetImagesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get images using g e t o k response
func (o *GetImagesUsingGETOK) Code() int {
	return 200
}

func (o *GetImagesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETOK %s", 200, payload)
}

func (o *GetImagesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETOK %s", 200, payload)
}

func (o *GetImagesUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetImagesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetImagesUsingGETUnauthorized creates a GetImagesUsingGETUnauthorized with default headers values
func NewGetImagesUsingGETUnauthorized() *GetImagesUsingGETUnauthorized {
	return &GetImagesUsingGETUnauthorized{}
}

/*
GetImagesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetImagesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get images using g e t unauthorized response has a 2xx status code
func (o *GetImagesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get images using g e t unauthorized response has a 3xx status code
func (o *GetImagesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get images using g e t unauthorized response has a 4xx status code
func (o *GetImagesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get images using g e t unauthorized response has a 5xx status code
func (o *GetImagesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get images using g e t unauthorized response a status code equal to that given
func (o *GetImagesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get images using g e t unauthorized response
func (o *GetImagesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetImagesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETUnauthorized", 401)
}

func (o *GetImagesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETUnauthorized", 401)
}

func (o *GetImagesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetImagesUsingGETForbidden creates a GetImagesUsingGETForbidden with default headers values
func NewGetImagesUsingGETForbidden() *GetImagesUsingGETForbidden {
	return &GetImagesUsingGETForbidden{}
}

/*
GetImagesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetImagesUsingGETForbidden struct {
}

// IsSuccess returns true when this get images using g e t forbidden response has a 2xx status code
func (o *GetImagesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get images using g e t forbidden response has a 3xx status code
func (o *GetImagesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get images using g e t forbidden response has a 4xx status code
func (o *GetImagesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get images using g e t forbidden response has a 5xx status code
func (o *GetImagesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get images using g e t forbidden response a status code equal to that given
func (o *GetImagesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get images using g e t forbidden response
func (o *GetImagesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetImagesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETForbidden", 403)
}

func (o *GetImagesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETForbidden", 403)
}

func (o *GetImagesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetImagesUsingGETNotFound creates a GetImagesUsingGETNotFound with default headers values
func NewGetImagesUsingGETNotFound() *GetImagesUsingGETNotFound {
	return &GetImagesUsingGETNotFound{}
}

/*
GetImagesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetImagesUsingGETNotFound struct {
}

// IsSuccess returns true when this get images using g e t not found response has a 2xx status code
func (o *GetImagesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get images using g e t not found response has a 3xx status code
func (o *GetImagesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get images using g e t not found response has a 4xx status code
func (o *GetImagesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get images using g e t not found response has a 5xx status code
func (o *GetImagesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get images using g e t not found response a status code equal to that given
func (o *GetImagesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get images using g e t not found response
func (o *GetImagesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetImagesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETNotFound", 404)
}

func (o *GetImagesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/images][%d] getImagesUsingGETNotFound", 404)
}

func (o *GetImagesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
