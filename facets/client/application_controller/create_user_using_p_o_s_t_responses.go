// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateUserUsingPOSTReader is a Reader for the CreateUserUsingPOST structure.
type CreateUserUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUserUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUserUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateUserUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateUserUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateUserUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateUserUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/users] createUserUsingPOST", response, response.Code())
	}
}

// NewCreateUserUsingPOSTOK creates a CreateUserUsingPOSTOK with default headers values
func NewCreateUserUsingPOSTOK() *CreateUserUsingPOSTOK {
	return &CreateUserUsingPOSTOK{}
}

/*
CreateUserUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateUserUsingPOSTOK struct {
	Payload *models.User
}

// IsSuccess returns true when this create user using p o s t o k response has a 2xx status code
func (o *CreateUserUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user using p o s t o k response has a 3xx status code
func (o *CreateUserUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user using p o s t o k response has a 4xx status code
func (o *CreateUserUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user using p o s t o k response has a 5xx status code
func (o *CreateUserUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create user using p o s t o k response a status code equal to that given
func (o *CreateUserUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create user using p o s t o k response
func (o *CreateUserUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateUserUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTOK %s", 200, payload)
}

func (o *CreateUserUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTOK %s", 200, payload)
}

func (o *CreateUserUsingPOSTOK) GetPayload() *models.User {
	return o.Payload
}

func (o *CreateUserUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserUsingPOSTCreated creates a CreateUserUsingPOSTCreated with default headers values
func NewCreateUserUsingPOSTCreated() *CreateUserUsingPOSTCreated {
	return &CreateUserUsingPOSTCreated{}
}

/*
CreateUserUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateUserUsingPOSTCreated struct {
}

// IsSuccess returns true when this create user using p o s t created response has a 2xx status code
func (o *CreateUserUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create user using p o s t created response has a 3xx status code
func (o *CreateUserUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user using p o s t created response has a 4xx status code
func (o *CreateUserUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create user using p o s t created response has a 5xx status code
func (o *CreateUserUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create user using p o s t created response a status code equal to that given
func (o *CreateUserUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create user using p o s t created response
func (o *CreateUserUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateUserUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTCreated", 201)
}

func (o *CreateUserUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTCreated", 201)
}

func (o *CreateUserUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserUsingPOSTUnauthorized creates a CreateUserUsingPOSTUnauthorized with default headers values
func NewCreateUserUsingPOSTUnauthorized() *CreateUserUsingPOSTUnauthorized {
	return &CreateUserUsingPOSTUnauthorized{}
}

/*
CreateUserUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateUserUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create user using p o s t unauthorized response has a 2xx status code
func (o *CreateUserUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user using p o s t unauthorized response has a 3xx status code
func (o *CreateUserUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user using p o s t unauthorized response has a 4xx status code
func (o *CreateUserUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user using p o s t unauthorized response has a 5xx status code
func (o *CreateUserUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create user using p o s t unauthorized response a status code equal to that given
func (o *CreateUserUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create user using p o s t unauthorized response
func (o *CreateUserUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateUserUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTUnauthorized", 401)
}

func (o *CreateUserUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTUnauthorized", 401)
}

func (o *CreateUserUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserUsingPOSTForbidden creates a CreateUserUsingPOSTForbidden with default headers values
func NewCreateUserUsingPOSTForbidden() *CreateUserUsingPOSTForbidden {
	return &CreateUserUsingPOSTForbidden{}
}

/*
CreateUserUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateUserUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create user using p o s t forbidden response has a 2xx status code
func (o *CreateUserUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user using p o s t forbidden response has a 3xx status code
func (o *CreateUserUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user using p o s t forbidden response has a 4xx status code
func (o *CreateUserUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user using p o s t forbidden response has a 5xx status code
func (o *CreateUserUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create user using p o s t forbidden response a status code equal to that given
func (o *CreateUserUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create user using p o s t forbidden response
func (o *CreateUserUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateUserUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTForbidden", 403)
}

func (o *CreateUserUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTForbidden", 403)
}

func (o *CreateUserUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateUserUsingPOSTNotFound creates a CreateUserUsingPOSTNotFound with default headers values
func NewCreateUserUsingPOSTNotFound() *CreateUserUsingPOSTNotFound {
	return &CreateUserUsingPOSTNotFound{}
}

/*
CreateUserUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateUserUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create user using p o s t not found response has a 2xx status code
func (o *CreateUserUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create user using p o s t not found response has a 3xx status code
func (o *CreateUserUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create user using p o s t not found response has a 4xx status code
func (o *CreateUserUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create user using p o s t not found response has a 5xx status code
func (o *CreateUserUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create user using p o s t not found response a status code equal to that given
func (o *CreateUserUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create user using p o s t not found response
func (o *CreateUserUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateUserUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTNotFound", 404)
}

func (o *CreateUserUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /api/users][%d] createUserUsingPOSTNotFound", 404)
}

func (o *CreateUserUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
