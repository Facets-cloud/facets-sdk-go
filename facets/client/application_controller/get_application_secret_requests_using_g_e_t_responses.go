// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetApplicationSecretRequestsUsingGETReader is a Reader for the GetApplicationSecretRequestsUsingGET structure.
type GetApplicationSecretRequestsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationSecretRequestsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationSecretRequestsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationSecretRequestsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationSecretRequestsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationSecretRequestsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests] getApplicationSecretRequestsUsingGET", response, response.Code())
	}
}

// NewGetApplicationSecretRequestsUsingGETOK creates a GetApplicationSecretRequestsUsingGETOK with default headers values
func NewGetApplicationSecretRequestsUsingGETOK() *GetApplicationSecretRequestsUsingGETOK {
	return &GetApplicationSecretRequestsUsingGETOK{}
}

/*
GetApplicationSecretRequestsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationSecretRequestsUsingGETOK struct {
	Payload []*models.ApplicationSecretRequest
}

// IsSuccess returns true when this get application secret requests using g e t o k response has a 2xx status code
func (o *GetApplicationSecretRequestsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application secret requests using g e t o k response has a 3xx status code
func (o *GetApplicationSecretRequestsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application secret requests using g e t o k response has a 4xx status code
func (o *GetApplicationSecretRequestsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application secret requests using g e t o k response has a 5xx status code
func (o *GetApplicationSecretRequestsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application secret requests using g e t o k response a status code equal to that given
func (o *GetApplicationSecretRequestsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application secret requests using g e t o k response
func (o *GetApplicationSecretRequestsUsingGETOK) Code() int {
	return 200
}

func (o *GetApplicationSecretRequestsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETOK %s", 200, payload)
}

func (o *GetApplicationSecretRequestsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETOK %s", 200, payload)
}

func (o *GetApplicationSecretRequestsUsingGETOK) GetPayload() []*models.ApplicationSecretRequest {
	return o.Payload
}

func (o *GetApplicationSecretRequestsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationSecretRequestsUsingGETUnauthorized creates a GetApplicationSecretRequestsUsingGETUnauthorized with default headers values
func NewGetApplicationSecretRequestsUsingGETUnauthorized() *GetApplicationSecretRequestsUsingGETUnauthorized {
	return &GetApplicationSecretRequestsUsingGETUnauthorized{}
}

/*
GetApplicationSecretRequestsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationSecretRequestsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get application secret requests using g e t unauthorized response has a 2xx status code
func (o *GetApplicationSecretRequestsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application secret requests using g e t unauthorized response has a 3xx status code
func (o *GetApplicationSecretRequestsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application secret requests using g e t unauthorized response has a 4xx status code
func (o *GetApplicationSecretRequestsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application secret requests using g e t unauthorized response has a 5xx status code
func (o *GetApplicationSecretRequestsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get application secret requests using g e t unauthorized response a status code equal to that given
func (o *GetApplicationSecretRequestsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get application secret requests using g e t unauthorized response
func (o *GetApplicationSecretRequestsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationSecretRequestsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETUnauthorized", 401)
}

func (o *GetApplicationSecretRequestsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETUnauthorized", 401)
}

func (o *GetApplicationSecretRequestsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationSecretRequestsUsingGETForbidden creates a GetApplicationSecretRequestsUsingGETForbidden with default headers values
func NewGetApplicationSecretRequestsUsingGETForbidden() *GetApplicationSecretRequestsUsingGETForbidden {
	return &GetApplicationSecretRequestsUsingGETForbidden{}
}

/*
GetApplicationSecretRequestsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationSecretRequestsUsingGETForbidden struct {
}

// IsSuccess returns true when this get application secret requests using g e t forbidden response has a 2xx status code
func (o *GetApplicationSecretRequestsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application secret requests using g e t forbidden response has a 3xx status code
func (o *GetApplicationSecretRequestsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application secret requests using g e t forbidden response has a 4xx status code
func (o *GetApplicationSecretRequestsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application secret requests using g e t forbidden response has a 5xx status code
func (o *GetApplicationSecretRequestsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get application secret requests using g e t forbidden response a status code equal to that given
func (o *GetApplicationSecretRequestsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get application secret requests using g e t forbidden response
func (o *GetApplicationSecretRequestsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetApplicationSecretRequestsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETForbidden", 403)
}

func (o *GetApplicationSecretRequestsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETForbidden", 403)
}

func (o *GetApplicationSecretRequestsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationSecretRequestsUsingGETNotFound creates a GetApplicationSecretRequestsUsingGETNotFound with default headers values
func NewGetApplicationSecretRequestsUsingGETNotFound() *GetApplicationSecretRequestsUsingGETNotFound {
	return &GetApplicationSecretRequestsUsingGETNotFound{}
}

/*
GetApplicationSecretRequestsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationSecretRequestsUsingGETNotFound struct {
}

// IsSuccess returns true when this get application secret requests using g e t not found response has a 2xx status code
func (o *GetApplicationSecretRequestsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application secret requests using g e t not found response has a 3xx status code
func (o *GetApplicationSecretRequestsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application secret requests using g e t not found response has a 4xx status code
func (o *GetApplicationSecretRequestsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application secret requests using g e t not found response has a 5xx status code
func (o *GetApplicationSecretRequestsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application secret requests using g e t not found response a status code equal to that given
func (o *GetApplicationSecretRequestsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application secret requests using g e t not found response
func (o *GetApplicationSecretRequestsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetApplicationSecretRequestsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETNotFound", 404)
}

func (o *GetApplicationSecretRequestsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/applications/{applicationId}/secretRequests][%d] getApplicationSecretRequestsUsingGETNotFound", 404)
}

func (o *GetApplicationSecretRequestsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
