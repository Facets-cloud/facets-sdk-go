// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// DeployUsingPOSTReader is a Reader for the DeployUsingPOST structure.
type DeployUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeployUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeployUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewDeployUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewDeployUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeployUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeployUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments] deployUsingPOST", response, response.Code())
	}
}

// NewDeployUsingPOSTOK creates a DeployUsingPOSTOK with default headers values
func NewDeployUsingPOSTOK() *DeployUsingPOSTOK {
	return &DeployUsingPOSTOK{}
}

/*
DeployUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type DeployUsingPOSTOK struct {
	Payload *models.Deployment
}

// IsSuccess returns true when this deploy using p o s t o k response has a 2xx status code
func (o *DeployUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deploy using p o s t o k response has a 3xx status code
func (o *DeployUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy using p o s t o k response has a 4xx status code
func (o *DeployUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy using p o s t o k response has a 5xx status code
func (o *DeployUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy using p o s t o k response a status code equal to that given
func (o *DeployUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the deploy using p o s t o k response
func (o *DeployUsingPOSTOK) Code() int {
	return 200
}

func (o *DeployUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTOK %s", 200, payload)
}

func (o *DeployUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTOK %s", 200, payload)
}

func (o *DeployUsingPOSTOK) GetPayload() *models.Deployment {
	return o.Payload
}

func (o *DeployUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Deployment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeployUsingPOSTCreated creates a DeployUsingPOSTCreated with default headers values
func NewDeployUsingPOSTCreated() *DeployUsingPOSTCreated {
	return &DeployUsingPOSTCreated{}
}

/*
DeployUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type DeployUsingPOSTCreated struct {
}

// IsSuccess returns true when this deploy using p o s t created response has a 2xx status code
func (o *DeployUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deploy using p o s t created response has a 3xx status code
func (o *DeployUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy using p o s t created response has a 4xx status code
func (o *DeployUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this deploy using p o s t created response has a 5xx status code
func (o *DeployUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy using p o s t created response a status code equal to that given
func (o *DeployUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the deploy using p o s t created response
func (o *DeployUsingPOSTCreated) Code() int {
	return 201
}

func (o *DeployUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTCreated", 201)
}

func (o *DeployUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTCreated", 201)
}

func (o *DeployUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeployUsingPOSTUnauthorized creates a DeployUsingPOSTUnauthorized with default headers values
func NewDeployUsingPOSTUnauthorized() *DeployUsingPOSTUnauthorized {
	return &DeployUsingPOSTUnauthorized{}
}

/*
DeployUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type DeployUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this deploy using p o s t unauthorized response has a 2xx status code
func (o *DeployUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy using p o s t unauthorized response has a 3xx status code
func (o *DeployUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy using p o s t unauthorized response has a 4xx status code
func (o *DeployUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy using p o s t unauthorized response has a 5xx status code
func (o *DeployUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy using p o s t unauthorized response a status code equal to that given
func (o *DeployUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the deploy using p o s t unauthorized response
func (o *DeployUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *DeployUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTUnauthorized", 401)
}

func (o *DeployUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTUnauthorized", 401)
}

func (o *DeployUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeployUsingPOSTForbidden creates a DeployUsingPOSTForbidden with default headers values
func NewDeployUsingPOSTForbidden() *DeployUsingPOSTForbidden {
	return &DeployUsingPOSTForbidden{}
}

/*
DeployUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeployUsingPOSTForbidden struct {
}

// IsSuccess returns true when this deploy using p o s t forbidden response has a 2xx status code
func (o *DeployUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy using p o s t forbidden response has a 3xx status code
func (o *DeployUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy using p o s t forbidden response has a 4xx status code
func (o *DeployUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy using p o s t forbidden response has a 5xx status code
func (o *DeployUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy using p o s t forbidden response a status code equal to that given
func (o *DeployUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the deploy using p o s t forbidden response
func (o *DeployUsingPOSTForbidden) Code() int {
	return 403
}

func (o *DeployUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTForbidden", 403)
}

func (o *DeployUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTForbidden", 403)
}

func (o *DeployUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeployUsingPOSTNotFound creates a DeployUsingPOSTNotFound with default headers values
func NewDeployUsingPOSTNotFound() *DeployUsingPOSTNotFound {
	return &DeployUsingPOSTNotFound{}
}

/*
DeployUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type DeployUsingPOSTNotFound struct {
}

// IsSuccess returns true when this deploy using p o s t not found response has a 2xx status code
func (o *DeployUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deploy using p o s t not found response has a 3xx status code
func (o *DeployUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deploy using p o s t not found response has a 4xx status code
func (o *DeployUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this deploy using p o s t not found response has a 5xx status code
func (o *DeployUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this deploy using p o s t not found response a status code equal to that given
func (o *DeployUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the deploy using p o s t not found response
func (o *DeployUsingPOSTNotFound) Code() int {
	return 404
}

func (o *DeployUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTNotFound", 404)
}

func (o *DeployUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/applications/{applicationId}/deployments][%d] deployUsingPOSTNotFound", 404)
}

func (o *DeployUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
