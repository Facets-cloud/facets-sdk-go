// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// Login5Reader is a Reader for the Login5 structure.
type Login5Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *Login5Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLogin5OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewLogin5BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewLogin5NotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewLogin5MethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewLogin5InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/login] login_5", response, response.Code())
	}
}

// NewLogin5OK creates a Login5OK with default headers values
func NewLogin5OK() *Login5OK {
	return &Login5OK{}
}

/*
Login5OK describes a response with status code 200, with default header values.

OK
*/
type Login5OK struct {
	Payload string
}

// IsSuccess returns true when this login5 o k response has a 2xx status code
func (o *Login5OK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this login5 o k response has a 3xx status code
func (o *Login5OK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login5 o k response has a 4xx status code
func (o *Login5OK) IsClientError() bool {
	return false
}

// IsServerError returns true when this login5 o k response has a 5xx status code
func (o *Login5OK) IsServerError() bool {
	return false
}

// IsCode returns true when this login5 o k response a status code equal to that given
func (o *Login5OK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the login5 o k response
func (o *Login5OK) Code() int {
	return 200
}

func (o *Login5OK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5OK %s", 200, payload)
}

func (o *Login5OK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5OK %s", 200, payload)
}

func (o *Login5OK) GetPayload() string {
	return o.Payload
}

func (o *Login5OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin5BadRequest creates a Login5BadRequest with default headers values
func NewLogin5BadRequest() *Login5BadRequest {
	return &Login5BadRequest{}
}

/*
Login5BadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type Login5BadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login5 bad request response has a 2xx status code
func (o *Login5BadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login5 bad request response has a 3xx status code
func (o *Login5BadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login5 bad request response has a 4xx status code
func (o *Login5BadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this login5 bad request response has a 5xx status code
func (o *Login5BadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this login5 bad request response a status code equal to that given
func (o *Login5BadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the login5 bad request response
func (o *Login5BadRequest) Code() int {
	return 400
}

func (o *Login5BadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5BadRequest %s", 400, payload)
}

func (o *Login5BadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5BadRequest %s", 400, payload)
}

func (o *Login5BadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login5BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin5NotFound creates a Login5NotFound with default headers values
func NewLogin5NotFound() *Login5NotFound {
	return &Login5NotFound{}
}

/*
Login5NotFound describes a response with status code 404, with default header values.

Not Found
*/
type Login5NotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login5 not found response has a 2xx status code
func (o *Login5NotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login5 not found response has a 3xx status code
func (o *Login5NotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login5 not found response has a 4xx status code
func (o *Login5NotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this login5 not found response has a 5xx status code
func (o *Login5NotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this login5 not found response a status code equal to that given
func (o *Login5NotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the login5 not found response
func (o *Login5NotFound) Code() int {
	return 404
}

func (o *Login5NotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5NotFound %s", 404, payload)
}

func (o *Login5NotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5NotFound %s", 404, payload)
}

func (o *Login5NotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login5NotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin5MethodNotAllowed creates a Login5MethodNotAllowed with default headers values
func NewLogin5MethodNotAllowed() *Login5MethodNotAllowed {
	return &Login5MethodNotAllowed{}
}

/*
Login5MethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type Login5MethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login5 method not allowed response has a 2xx status code
func (o *Login5MethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login5 method not allowed response has a 3xx status code
func (o *Login5MethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login5 method not allowed response has a 4xx status code
func (o *Login5MethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this login5 method not allowed response has a 5xx status code
func (o *Login5MethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this login5 method not allowed response a status code equal to that given
func (o *Login5MethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the login5 method not allowed response
func (o *Login5MethodNotAllowed) Code() int {
	return 405
}

func (o *Login5MethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5MethodNotAllowed %s", 405, payload)
}

func (o *Login5MethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5MethodNotAllowed %s", 405, payload)
}

func (o *Login5MethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login5MethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLogin5InternalServerError creates a Login5InternalServerError with default headers values
func NewLogin5InternalServerError() *Login5InternalServerError {
	return &Login5InternalServerError{}
}

/*
Login5InternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type Login5InternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this login5 internal server error response has a 2xx status code
func (o *Login5InternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login5 internal server error response has a 3xx status code
func (o *Login5InternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login5 internal server error response has a 4xx status code
func (o *Login5InternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this login5 internal server error response has a 5xx status code
func (o *Login5InternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this login5 internal server error response a status code equal to that given
func (o *Login5InternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the login5 internal server error response
func (o *Login5InternalServerError) Code() int {
	return 500
}

func (o *Login5InternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5InternalServerError %s", 500, payload)
}

func (o *Login5InternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] login5InternalServerError %s", 500, payload)
}

func (o *Login5InternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *Login5InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
