// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetEnvironmentUsingGETReader is a Reader for the GetEnvironmentUsingGET structure.
type GetEnvironmentUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnvironmentUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnvironmentUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEnvironmentUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/environments/{id}] getEnvironmentUsingGET", response, response.Code())
	}
}

// NewGetEnvironmentUsingGETOK creates a GetEnvironmentUsingGETOK with default headers values
func NewGetEnvironmentUsingGETOK() *GetEnvironmentUsingGETOK {
	return &GetEnvironmentUsingGETOK{}
}

/*
GetEnvironmentUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetEnvironmentUsingGETOK struct {
	Payload *models.Environment
}

// IsSuccess returns true when this get environment using g e t o k response has a 2xx status code
func (o *GetEnvironmentUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get environment using g e t o k response has a 3xx status code
func (o *GetEnvironmentUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment using g e t o k response has a 4xx status code
func (o *GetEnvironmentUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get environment using g e t o k response has a 5xx status code
func (o *GetEnvironmentUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment using g e t o k response a status code equal to that given
func (o *GetEnvironmentUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get environment using g e t o k response
func (o *GetEnvironmentUsingGETOK) Code() int {
	return 200
}

func (o *GetEnvironmentUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETOK %s", 200, payload)
}

func (o *GetEnvironmentUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETOK %s", 200, payload)
}

func (o *GetEnvironmentUsingGETOK) GetPayload() *models.Environment {
	return o.Payload
}

func (o *GetEnvironmentUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Environment)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentUsingGETUnauthorized creates a GetEnvironmentUsingGETUnauthorized with default headers values
func NewGetEnvironmentUsingGETUnauthorized() *GetEnvironmentUsingGETUnauthorized {
	return &GetEnvironmentUsingGETUnauthorized{}
}

/*
GetEnvironmentUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEnvironmentUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get environment using g e t unauthorized response has a 2xx status code
func (o *GetEnvironmentUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environment using g e t unauthorized response has a 3xx status code
func (o *GetEnvironmentUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment using g e t unauthorized response has a 4xx status code
func (o *GetEnvironmentUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environment using g e t unauthorized response has a 5xx status code
func (o *GetEnvironmentUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment using g e t unauthorized response a status code equal to that given
func (o *GetEnvironmentUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get environment using g e t unauthorized response
func (o *GetEnvironmentUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEnvironmentUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETUnauthorized", 401)
}

func (o *GetEnvironmentUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETUnauthorized", 401)
}

func (o *GetEnvironmentUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentUsingGETForbidden creates a GetEnvironmentUsingGETForbidden with default headers values
func NewGetEnvironmentUsingGETForbidden() *GetEnvironmentUsingGETForbidden {
	return &GetEnvironmentUsingGETForbidden{}
}

/*
GetEnvironmentUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEnvironmentUsingGETForbidden struct {
}

// IsSuccess returns true when this get environment using g e t forbidden response has a 2xx status code
func (o *GetEnvironmentUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environment using g e t forbidden response has a 3xx status code
func (o *GetEnvironmentUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment using g e t forbidden response has a 4xx status code
func (o *GetEnvironmentUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environment using g e t forbidden response has a 5xx status code
func (o *GetEnvironmentUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment using g e t forbidden response a status code equal to that given
func (o *GetEnvironmentUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get environment using g e t forbidden response
func (o *GetEnvironmentUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEnvironmentUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETForbidden", 403)
}

func (o *GetEnvironmentUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETForbidden", 403)
}

func (o *GetEnvironmentUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentUsingGETNotFound creates a GetEnvironmentUsingGETNotFound with default headers values
func NewGetEnvironmentUsingGETNotFound() *GetEnvironmentUsingGETNotFound {
	return &GetEnvironmentUsingGETNotFound{}
}

/*
GetEnvironmentUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEnvironmentUsingGETNotFound struct {
}

// IsSuccess returns true when this get environment using g e t not found response has a 2xx status code
func (o *GetEnvironmentUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environment using g e t not found response has a 3xx status code
func (o *GetEnvironmentUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment using g e t not found response has a 4xx status code
func (o *GetEnvironmentUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environment using g e t not found response has a 5xx status code
func (o *GetEnvironmentUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment using g e t not found response a status code equal to that given
func (o *GetEnvironmentUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get environment using g e t not found response
func (o *GetEnvironmentUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEnvironmentUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETNotFound", 404)
}

func (o *GetEnvironmentUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environments/{id}][%d] getEnvironmentUsingGETNotFound", 404)
}

func (o *GetEnvironmentUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
