// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// RedeployUsingPOSTReader is a Reader for the RedeployUsingPOST structure.
type RedeployUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RedeployUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRedeployUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRedeployUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRedeployUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRedeployUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRedeployUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /api/{applicationFamily}/{environment}/redeployment] redeployUsingPOST", response, response.Code())
	}
}

// NewRedeployUsingPOSTOK creates a RedeployUsingPOSTOK with default headers values
func NewRedeployUsingPOSTOK() *RedeployUsingPOSTOK {
	return &RedeployUsingPOSTOK{}
}

/*
RedeployUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RedeployUsingPOSTOK struct {
	Payload map[string]bool
}

// IsSuccess returns true when this redeploy using p o s t o k response has a 2xx status code
func (o *RedeployUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this redeploy using p o s t o k response has a 3xx status code
func (o *RedeployUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this redeploy using p o s t o k response has a 4xx status code
func (o *RedeployUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this redeploy using p o s t o k response has a 5xx status code
func (o *RedeployUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this redeploy using p o s t o k response a status code equal to that given
func (o *RedeployUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the redeploy using p o s t o k response
func (o *RedeployUsingPOSTOK) Code() int {
	return 200
}

func (o *RedeployUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTOK %s", 200, payload)
}

func (o *RedeployUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTOK %s", 200, payload)
}

func (o *RedeployUsingPOSTOK) GetPayload() map[string]bool {
	return o.Payload
}

func (o *RedeployUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRedeployUsingPOSTCreated creates a RedeployUsingPOSTCreated with default headers values
func NewRedeployUsingPOSTCreated() *RedeployUsingPOSTCreated {
	return &RedeployUsingPOSTCreated{}
}

/*
RedeployUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RedeployUsingPOSTCreated struct {
}

// IsSuccess returns true when this redeploy using p o s t created response has a 2xx status code
func (o *RedeployUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this redeploy using p o s t created response has a 3xx status code
func (o *RedeployUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this redeploy using p o s t created response has a 4xx status code
func (o *RedeployUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this redeploy using p o s t created response has a 5xx status code
func (o *RedeployUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this redeploy using p o s t created response a status code equal to that given
func (o *RedeployUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the redeploy using p o s t created response
func (o *RedeployUsingPOSTCreated) Code() int {
	return 201
}

func (o *RedeployUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTCreated", 201)
}

func (o *RedeployUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTCreated", 201)
}

func (o *RedeployUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedeployUsingPOSTUnauthorized creates a RedeployUsingPOSTUnauthorized with default headers values
func NewRedeployUsingPOSTUnauthorized() *RedeployUsingPOSTUnauthorized {
	return &RedeployUsingPOSTUnauthorized{}
}

/*
RedeployUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RedeployUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this redeploy using p o s t unauthorized response has a 2xx status code
func (o *RedeployUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this redeploy using p o s t unauthorized response has a 3xx status code
func (o *RedeployUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this redeploy using p o s t unauthorized response has a 4xx status code
func (o *RedeployUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this redeploy using p o s t unauthorized response has a 5xx status code
func (o *RedeployUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this redeploy using p o s t unauthorized response a status code equal to that given
func (o *RedeployUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the redeploy using p o s t unauthorized response
func (o *RedeployUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RedeployUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTUnauthorized", 401)
}

func (o *RedeployUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTUnauthorized", 401)
}

func (o *RedeployUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedeployUsingPOSTForbidden creates a RedeployUsingPOSTForbidden with default headers values
func NewRedeployUsingPOSTForbidden() *RedeployUsingPOSTForbidden {
	return &RedeployUsingPOSTForbidden{}
}

/*
RedeployUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RedeployUsingPOSTForbidden struct {
}

// IsSuccess returns true when this redeploy using p o s t forbidden response has a 2xx status code
func (o *RedeployUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this redeploy using p o s t forbidden response has a 3xx status code
func (o *RedeployUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this redeploy using p o s t forbidden response has a 4xx status code
func (o *RedeployUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this redeploy using p o s t forbidden response has a 5xx status code
func (o *RedeployUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this redeploy using p o s t forbidden response a status code equal to that given
func (o *RedeployUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the redeploy using p o s t forbidden response
func (o *RedeployUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RedeployUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTForbidden", 403)
}

func (o *RedeployUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTForbidden", 403)
}

func (o *RedeployUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRedeployUsingPOSTNotFound creates a RedeployUsingPOSTNotFound with default headers values
func NewRedeployUsingPOSTNotFound() *RedeployUsingPOSTNotFound {
	return &RedeployUsingPOSTNotFound{}
}

/*
RedeployUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RedeployUsingPOSTNotFound struct {
}

// IsSuccess returns true when this redeploy using p o s t not found response has a 2xx status code
func (o *RedeployUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this redeploy using p o s t not found response has a 3xx status code
func (o *RedeployUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this redeploy using p o s t not found response has a 4xx status code
func (o *RedeployUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this redeploy using p o s t not found response has a 5xx status code
func (o *RedeployUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this redeploy using p o s t not found response a status code equal to that given
func (o *RedeployUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the redeploy using p o s t not found response
func (o *RedeployUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RedeployUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTNotFound", 404)
}

func (o *RedeployUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /api/{applicationFamily}/{environment}/redeployment][%d] redeployUsingPOSTNotFound", 404)
}

func (o *RedeployUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
