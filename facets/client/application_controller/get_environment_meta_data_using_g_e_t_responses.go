// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetEnvironmentMetaDataUsingGETReader is a Reader for the GetEnvironmentMetaDataUsingGET structure.
type GetEnvironmentMetaDataUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetEnvironmentMetaDataUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetEnvironmentMetaDataUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetEnvironmentMetaDataUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetEnvironmentMetaDataUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetEnvironmentMetaDataUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/environmentMetaData] getEnvironmentMetaDataUsingGET", response, response.Code())
	}
}

// NewGetEnvironmentMetaDataUsingGETOK creates a GetEnvironmentMetaDataUsingGETOK with default headers values
func NewGetEnvironmentMetaDataUsingGETOK() *GetEnvironmentMetaDataUsingGETOK {
	return &GetEnvironmentMetaDataUsingGETOK{}
}

/*
GetEnvironmentMetaDataUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetEnvironmentMetaDataUsingGETOK struct {
	Payload []*models.EnvironmentMetaData
}

// IsSuccess returns true when this get environment meta data using g e t o k response has a 2xx status code
func (o *GetEnvironmentMetaDataUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get environment meta data using g e t o k response has a 3xx status code
func (o *GetEnvironmentMetaDataUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment meta data using g e t o k response has a 4xx status code
func (o *GetEnvironmentMetaDataUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get environment meta data using g e t o k response has a 5xx status code
func (o *GetEnvironmentMetaDataUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment meta data using g e t o k response a status code equal to that given
func (o *GetEnvironmentMetaDataUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get environment meta data using g e t o k response
func (o *GetEnvironmentMetaDataUsingGETOK) Code() int {
	return 200
}

func (o *GetEnvironmentMetaDataUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETOK %s", 200, payload)
}

func (o *GetEnvironmentMetaDataUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETOK %s", 200, payload)
}

func (o *GetEnvironmentMetaDataUsingGETOK) GetPayload() []*models.EnvironmentMetaData {
	return o.Payload
}

func (o *GetEnvironmentMetaDataUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetEnvironmentMetaDataUsingGETUnauthorized creates a GetEnvironmentMetaDataUsingGETUnauthorized with default headers values
func NewGetEnvironmentMetaDataUsingGETUnauthorized() *GetEnvironmentMetaDataUsingGETUnauthorized {
	return &GetEnvironmentMetaDataUsingGETUnauthorized{}
}

/*
GetEnvironmentMetaDataUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetEnvironmentMetaDataUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get environment meta data using g e t unauthorized response has a 2xx status code
func (o *GetEnvironmentMetaDataUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environment meta data using g e t unauthorized response has a 3xx status code
func (o *GetEnvironmentMetaDataUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment meta data using g e t unauthorized response has a 4xx status code
func (o *GetEnvironmentMetaDataUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environment meta data using g e t unauthorized response has a 5xx status code
func (o *GetEnvironmentMetaDataUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment meta data using g e t unauthorized response a status code equal to that given
func (o *GetEnvironmentMetaDataUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get environment meta data using g e t unauthorized response
func (o *GetEnvironmentMetaDataUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetEnvironmentMetaDataUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETUnauthorized", 401)
}

func (o *GetEnvironmentMetaDataUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETUnauthorized", 401)
}

func (o *GetEnvironmentMetaDataUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentMetaDataUsingGETForbidden creates a GetEnvironmentMetaDataUsingGETForbidden with default headers values
func NewGetEnvironmentMetaDataUsingGETForbidden() *GetEnvironmentMetaDataUsingGETForbidden {
	return &GetEnvironmentMetaDataUsingGETForbidden{}
}

/*
GetEnvironmentMetaDataUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetEnvironmentMetaDataUsingGETForbidden struct {
}

// IsSuccess returns true when this get environment meta data using g e t forbidden response has a 2xx status code
func (o *GetEnvironmentMetaDataUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environment meta data using g e t forbidden response has a 3xx status code
func (o *GetEnvironmentMetaDataUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment meta data using g e t forbidden response has a 4xx status code
func (o *GetEnvironmentMetaDataUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environment meta data using g e t forbidden response has a 5xx status code
func (o *GetEnvironmentMetaDataUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment meta data using g e t forbidden response a status code equal to that given
func (o *GetEnvironmentMetaDataUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get environment meta data using g e t forbidden response
func (o *GetEnvironmentMetaDataUsingGETForbidden) Code() int {
	return 403
}

func (o *GetEnvironmentMetaDataUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETForbidden", 403)
}

func (o *GetEnvironmentMetaDataUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETForbidden", 403)
}

func (o *GetEnvironmentMetaDataUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetEnvironmentMetaDataUsingGETNotFound creates a GetEnvironmentMetaDataUsingGETNotFound with default headers values
func NewGetEnvironmentMetaDataUsingGETNotFound() *GetEnvironmentMetaDataUsingGETNotFound {
	return &GetEnvironmentMetaDataUsingGETNotFound{}
}

/*
GetEnvironmentMetaDataUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetEnvironmentMetaDataUsingGETNotFound struct {
}

// IsSuccess returns true when this get environment meta data using g e t not found response has a 2xx status code
func (o *GetEnvironmentMetaDataUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get environment meta data using g e t not found response has a 3xx status code
func (o *GetEnvironmentMetaDataUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get environment meta data using g e t not found response has a 4xx status code
func (o *GetEnvironmentMetaDataUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get environment meta data using g e t not found response has a 5xx status code
func (o *GetEnvironmentMetaDataUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get environment meta data using g e t not found response a status code equal to that given
func (o *GetEnvironmentMetaDataUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get environment meta data using g e t not found response
func (o *GetEnvironmentMetaDataUsingGETNotFound) Code() int {
	return 404
}

func (o *GetEnvironmentMetaDataUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETNotFound", 404)
}

func (o *GetEnvironmentMetaDataUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/environmentMetaData][%d] getEnvironmentMetaDataUsingGETNotFound", 404)
}

func (o *GetEnvironmentMetaDataUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
