// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GetApplicationFamiliesUsingGETReader is a Reader for the GetApplicationFamiliesUsingGET structure.
type GetApplicationFamiliesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetApplicationFamiliesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetApplicationFamiliesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetApplicationFamiliesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetApplicationFamiliesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetApplicationFamiliesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/applicationFamilies] getApplicationFamiliesUsingGET", response, response.Code())
	}
}

// NewGetApplicationFamiliesUsingGETOK creates a GetApplicationFamiliesUsingGETOK with default headers values
func NewGetApplicationFamiliesUsingGETOK() *GetApplicationFamiliesUsingGETOK {
	return &GetApplicationFamiliesUsingGETOK{}
}

/*
GetApplicationFamiliesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetApplicationFamiliesUsingGETOK struct {
	Payload []string
}

// IsSuccess returns true when this get application families using g e t o k response has a 2xx status code
func (o *GetApplicationFamiliesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get application families using g e t o k response has a 3xx status code
func (o *GetApplicationFamiliesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application families using g e t o k response has a 4xx status code
func (o *GetApplicationFamiliesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get application families using g e t o k response has a 5xx status code
func (o *GetApplicationFamiliesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get application families using g e t o k response a status code equal to that given
func (o *GetApplicationFamiliesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get application families using g e t o k response
func (o *GetApplicationFamiliesUsingGETOK) Code() int {
	return 200
}

func (o *GetApplicationFamiliesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETOK %s", 200, payload)
}

func (o *GetApplicationFamiliesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETOK %s", 200, payload)
}

func (o *GetApplicationFamiliesUsingGETOK) GetPayload() []string {
	return o.Payload
}

func (o *GetApplicationFamiliesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetApplicationFamiliesUsingGETUnauthorized creates a GetApplicationFamiliesUsingGETUnauthorized with default headers values
func NewGetApplicationFamiliesUsingGETUnauthorized() *GetApplicationFamiliesUsingGETUnauthorized {
	return &GetApplicationFamiliesUsingGETUnauthorized{}
}

/*
GetApplicationFamiliesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetApplicationFamiliesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get application families using g e t unauthorized response has a 2xx status code
func (o *GetApplicationFamiliesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application families using g e t unauthorized response has a 3xx status code
func (o *GetApplicationFamiliesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application families using g e t unauthorized response has a 4xx status code
func (o *GetApplicationFamiliesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application families using g e t unauthorized response has a 5xx status code
func (o *GetApplicationFamiliesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get application families using g e t unauthorized response a status code equal to that given
func (o *GetApplicationFamiliesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get application families using g e t unauthorized response
func (o *GetApplicationFamiliesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetApplicationFamiliesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETUnauthorized", 401)
}

func (o *GetApplicationFamiliesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETUnauthorized", 401)
}

func (o *GetApplicationFamiliesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationFamiliesUsingGETForbidden creates a GetApplicationFamiliesUsingGETForbidden with default headers values
func NewGetApplicationFamiliesUsingGETForbidden() *GetApplicationFamiliesUsingGETForbidden {
	return &GetApplicationFamiliesUsingGETForbidden{}
}

/*
GetApplicationFamiliesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetApplicationFamiliesUsingGETForbidden struct {
}

// IsSuccess returns true when this get application families using g e t forbidden response has a 2xx status code
func (o *GetApplicationFamiliesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application families using g e t forbidden response has a 3xx status code
func (o *GetApplicationFamiliesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application families using g e t forbidden response has a 4xx status code
func (o *GetApplicationFamiliesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application families using g e t forbidden response has a 5xx status code
func (o *GetApplicationFamiliesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get application families using g e t forbidden response a status code equal to that given
func (o *GetApplicationFamiliesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get application families using g e t forbidden response
func (o *GetApplicationFamiliesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetApplicationFamiliesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETForbidden", 403)
}

func (o *GetApplicationFamiliesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETForbidden", 403)
}

func (o *GetApplicationFamiliesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetApplicationFamiliesUsingGETNotFound creates a GetApplicationFamiliesUsingGETNotFound with default headers values
func NewGetApplicationFamiliesUsingGETNotFound() *GetApplicationFamiliesUsingGETNotFound {
	return &GetApplicationFamiliesUsingGETNotFound{}
}

/*
GetApplicationFamiliesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetApplicationFamiliesUsingGETNotFound struct {
}

// IsSuccess returns true when this get application families using g e t not found response has a 2xx status code
func (o *GetApplicationFamiliesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get application families using g e t not found response has a 3xx status code
func (o *GetApplicationFamiliesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get application families using g e t not found response has a 4xx status code
func (o *GetApplicationFamiliesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get application families using g e t not found response has a 5xx status code
func (o *GetApplicationFamiliesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get application families using g e t not found response a status code equal to that given
func (o *GetApplicationFamiliesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get application families using g e t not found response
func (o *GetApplicationFamiliesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetApplicationFamiliesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETNotFound", 404)
}

func (o *GetApplicationFamiliesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/applicationFamilies][%d] getApplicationFamiliesUsingGETNotFound", 404)
}

func (o *GetApplicationFamiliesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
