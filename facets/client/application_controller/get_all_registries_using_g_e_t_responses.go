// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllRegistriesUsingGETReader is a Reader for the GetAllRegistriesUsingGET structure.
type GetAllRegistriesUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllRegistriesUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllRegistriesUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllRegistriesUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllRegistriesUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllRegistriesUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/getRegistries] getAllRegistriesUsingGET", response, response.Code())
	}
}

// NewGetAllRegistriesUsingGETOK creates a GetAllRegistriesUsingGETOK with default headers values
func NewGetAllRegistriesUsingGETOK() *GetAllRegistriesUsingGETOK {
	return &GetAllRegistriesUsingGETOK{}
}

/*
GetAllRegistriesUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllRegistriesUsingGETOK struct {
	Payload []*models.Registry
}

// IsSuccess returns true when this get all registries using g e t o k response has a 2xx status code
func (o *GetAllRegistriesUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all registries using g e t o k response has a 3xx status code
func (o *GetAllRegistriesUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all registries using g e t o k response has a 4xx status code
func (o *GetAllRegistriesUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all registries using g e t o k response has a 5xx status code
func (o *GetAllRegistriesUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all registries using g e t o k response a status code equal to that given
func (o *GetAllRegistriesUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all registries using g e t o k response
func (o *GetAllRegistriesUsingGETOK) Code() int {
	return 200
}

func (o *GetAllRegistriesUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETOK %s", 200, payload)
}

func (o *GetAllRegistriesUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETOK %s", 200, payload)
}

func (o *GetAllRegistriesUsingGETOK) GetPayload() []*models.Registry {
	return o.Payload
}

func (o *GetAllRegistriesUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllRegistriesUsingGETUnauthorized creates a GetAllRegistriesUsingGETUnauthorized with default headers values
func NewGetAllRegistriesUsingGETUnauthorized() *GetAllRegistriesUsingGETUnauthorized {
	return &GetAllRegistriesUsingGETUnauthorized{}
}

/*
GetAllRegistriesUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllRegistriesUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all registries using g e t unauthorized response has a 2xx status code
func (o *GetAllRegistriesUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all registries using g e t unauthorized response has a 3xx status code
func (o *GetAllRegistriesUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all registries using g e t unauthorized response has a 4xx status code
func (o *GetAllRegistriesUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all registries using g e t unauthorized response has a 5xx status code
func (o *GetAllRegistriesUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all registries using g e t unauthorized response a status code equal to that given
func (o *GetAllRegistriesUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all registries using g e t unauthorized response
func (o *GetAllRegistriesUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllRegistriesUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETUnauthorized", 401)
}

func (o *GetAllRegistriesUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETUnauthorized", 401)
}

func (o *GetAllRegistriesUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllRegistriesUsingGETForbidden creates a GetAllRegistriesUsingGETForbidden with default headers values
func NewGetAllRegistriesUsingGETForbidden() *GetAllRegistriesUsingGETForbidden {
	return &GetAllRegistriesUsingGETForbidden{}
}

/*
GetAllRegistriesUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllRegistriesUsingGETForbidden struct {
}

// IsSuccess returns true when this get all registries using g e t forbidden response has a 2xx status code
func (o *GetAllRegistriesUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all registries using g e t forbidden response has a 3xx status code
func (o *GetAllRegistriesUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all registries using g e t forbidden response has a 4xx status code
func (o *GetAllRegistriesUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all registries using g e t forbidden response has a 5xx status code
func (o *GetAllRegistriesUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all registries using g e t forbidden response a status code equal to that given
func (o *GetAllRegistriesUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all registries using g e t forbidden response
func (o *GetAllRegistriesUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllRegistriesUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETForbidden", 403)
}

func (o *GetAllRegistriesUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETForbidden", 403)
}

func (o *GetAllRegistriesUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllRegistriesUsingGETNotFound creates a GetAllRegistriesUsingGETNotFound with default headers values
func NewGetAllRegistriesUsingGETNotFound() *GetAllRegistriesUsingGETNotFound {
	return &GetAllRegistriesUsingGETNotFound{}
}

/*
GetAllRegistriesUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllRegistriesUsingGETNotFound struct {
}

// IsSuccess returns true when this get all registries using g e t not found response has a 2xx status code
func (o *GetAllRegistriesUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all registries using g e t not found response has a 3xx status code
func (o *GetAllRegistriesUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all registries using g e t not found response has a 4xx status code
func (o *GetAllRegistriesUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all registries using g e t not found response has a 5xx status code
func (o *GetAllRegistriesUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all registries using g e t not found response a status code equal to that given
func (o *GetAllRegistriesUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all registries using g e t not found response
func (o *GetAllRegistriesUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllRegistriesUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETNotFound", 404)
}

func (o *GetAllRegistriesUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/getRegistries][%d] getAllRegistriesUsingGETNotFound", 404)
}

func (o *GetAllRegistriesUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
