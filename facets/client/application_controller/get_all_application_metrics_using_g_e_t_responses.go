// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// GetAllApplicationMetricsUsingGETReader is a Reader for the GetAllApplicationMetricsUsingGET structure.
type GetAllApplicationMetricsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAllApplicationMetricsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAllApplicationMetricsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewGetAllApplicationMetricsUsingGETUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAllApplicationMetricsUsingGETForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAllApplicationMetricsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /api/{applicationFamily}/appmetrics] getAllApplicationMetricsUsingGET", response, response.Code())
	}
}

// NewGetAllApplicationMetricsUsingGETOK creates a GetAllApplicationMetricsUsingGETOK with default headers values
func NewGetAllApplicationMetricsUsingGETOK() *GetAllApplicationMetricsUsingGETOK {
	return &GetAllApplicationMetricsUsingGETOK{}
}

/*
GetAllApplicationMetricsUsingGETOK describes a response with status code 200, with default header values.

OK
*/
type GetAllApplicationMetricsUsingGETOK struct {
	Payload []*models.ApplicationMetricsWrapper
}

// IsSuccess returns true when this get all application metrics using g e t o k response has a 2xx status code
func (o *GetAllApplicationMetricsUsingGETOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get all application metrics using g e t o k response has a 3xx status code
func (o *GetAllApplicationMetricsUsingGETOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all application metrics using g e t o k response has a 4xx status code
func (o *GetAllApplicationMetricsUsingGETOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get all application metrics using g e t o k response has a 5xx status code
func (o *GetAllApplicationMetricsUsingGETOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get all application metrics using g e t o k response a status code equal to that given
func (o *GetAllApplicationMetricsUsingGETOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get all application metrics using g e t o k response
func (o *GetAllApplicationMetricsUsingGETOK) Code() int {
	return 200
}

func (o *GetAllApplicationMetricsUsingGETOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETOK %s", 200, payload)
}

func (o *GetAllApplicationMetricsUsingGETOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETOK %s", 200, payload)
}

func (o *GetAllApplicationMetricsUsingGETOK) GetPayload() []*models.ApplicationMetricsWrapper {
	return o.Payload
}

func (o *GetAllApplicationMetricsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAllApplicationMetricsUsingGETUnauthorized creates a GetAllApplicationMetricsUsingGETUnauthorized with default headers values
func NewGetAllApplicationMetricsUsingGETUnauthorized() *GetAllApplicationMetricsUsingGETUnauthorized {
	return &GetAllApplicationMetricsUsingGETUnauthorized{}
}

/*
GetAllApplicationMetricsUsingGETUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type GetAllApplicationMetricsUsingGETUnauthorized struct {
}

// IsSuccess returns true when this get all application metrics using g e t unauthorized response has a 2xx status code
func (o *GetAllApplicationMetricsUsingGETUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all application metrics using g e t unauthorized response has a 3xx status code
func (o *GetAllApplicationMetricsUsingGETUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all application metrics using g e t unauthorized response has a 4xx status code
func (o *GetAllApplicationMetricsUsingGETUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all application metrics using g e t unauthorized response has a 5xx status code
func (o *GetAllApplicationMetricsUsingGETUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this get all application metrics using g e t unauthorized response a status code equal to that given
func (o *GetAllApplicationMetricsUsingGETUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the get all application metrics using g e t unauthorized response
func (o *GetAllApplicationMetricsUsingGETUnauthorized) Code() int {
	return 401
}

func (o *GetAllApplicationMetricsUsingGETUnauthorized) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETUnauthorized", 401)
}

func (o *GetAllApplicationMetricsUsingGETUnauthorized) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETUnauthorized", 401)
}

func (o *GetAllApplicationMetricsUsingGETUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllApplicationMetricsUsingGETForbidden creates a GetAllApplicationMetricsUsingGETForbidden with default headers values
func NewGetAllApplicationMetricsUsingGETForbidden() *GetAllApplicationMetricsUsingGETForbidden {
	return &GetAllApplicationMetricsUsingGETForbidden{}
}

/*
GetAllApplicationMetricsUsingGETForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetAllApplicationMetricsUsingGETForbidden struct {
}

// IsSuccess returns true when this get all application metrics using g e t forbidden response has a 2xx status code
func (o *GetAllApplicationMetricsUsingGETForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all application metrics using g e t forbidden response has a 3xx status code
func (o *GetAllApplicationMetricsUsingGETForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all application metrics using g e t forbidden response has a 4xx status code
func (o *GetAllApplicationMetricsUsingGETForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all application metrics using g e t forbidden response has a 5xx status code
func (o *GetAllApplicationMetricsUsingGETForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this get all application metrics using g e t forbidden response a status code equal to that given
func (o *GetAllApplicationMetricsUsingGETForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the get all application metrics using g e t forbidden response
func (o *GetAllApplicationMetricsUsingGETForbidden) Code() int {
	return 403
}

func (o *GetAllApplicationMetricsUsingGETForbidden) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETForbidden", 403)
}

func (o *GetAllApplicationMetricsUsingGETForbidden) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETForbidden", 403)
}

func (o *GetAllApplicationMetricsUsingGETForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAllApplicationMetricsUsingGETNotFound creates a GetAllApplicationMetricsUsingGETNotFound with default headers values
func NewGetAllApplicationMetricsUsingGETNotFound() *GetAllApplicationMetricsUsingGETNotFound {
	return &GetAllApplicationMetricsUsingGETNotFound{}
}

/*
GetAllApplicationMetricsUsingGETNotFound describes a response with status code 404, with default header values.

Not Found
*/
type GetAllApplicationMetricsUsingGETNotFound struct {
}

// IsSuccess returns true when this get all application metrics using g e t not found response has a 2xx status code
func (o *GetAllApplicationMetricsUsingGETNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this get all application metrics using g e t not found response has a 3xx status code
func (o *GetAllApplicationMetricsUsingGETNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get all application metrics using g e t not found response has a 4xx status code
func (o *GetAllApplicationMetricsUsingGETNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this get all application metrics using g e t not found response has a 5xx status code
func (o *GetAllApplicationMetricsUsingGETNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this get all application metrics using g e t not found response a status code equal to that given
func (o *GetAllApplicationMetricsUsingGETNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the get all application metrics using g e t not found response
func (o *GetAllApplicationMetricsUsingGETNotFound) Code() int {
	return 404
}

func (o *GetAllApplicationMetricsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETNotFound", 404)
}

func (o *GetAllApplicationMetricsUsingGETNotFound) String() string {
	return fmt.Sprintf("[GET /api/{applicationFamily}/appmetrics][%d] getAllApplicationMetricsUsingGETNotFound", 404)
}

func (o *GetAllApplicationMetricsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
