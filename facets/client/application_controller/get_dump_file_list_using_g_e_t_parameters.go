// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetDumpFileListUsingGETParams creates a new GetDumpFileListUsingGETParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDumpFileListUsingGETParams() *GetDumpFileListUsingGETParams {
	return &GetDumpFileListUsingGETParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDumpFileListUsingGETParamsWithTimeout creates a new GetDumpFileListUsingGETParams object
// with the ability to set a timeout on a request.
func NewGetDumpFileListUsingGETParamsWithTimeout(timeout time.Duration) *GetDumpFileListUsingGETParams {
	return &GetDumpFileListUsingGETParams{
		timeout: timeout,
	}
}

// NewGetDumpFileListUsingGETParamsWithContext creates a new GetDumpFileListUsingGETParams object
// with the ability to set a context for a request.
func NewGetDumpFileListUsingGETParamsWithContext(ctx context.Context) *GetDumpFileListUsingGETParams {
	return &GetDumpFileListUsingGETParams{
		Context: ctx,
	}
}

// NewGetDumpFileListUsingGETParamsWithHTTPClient creates a new GetDumpFileListUsingGETParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDumpFileListUsingGETParamsWithHTTPClient(client *http.Client) *GetDumpFileListUsingGETParams {
	return &GetDumpFileListUsingGETParams{
		HTTPClient: client,
	}
}

/*
GetDumpFileListUsingGETParams contains all the parameters to send to the API endpoint

	for the get dump file list using g e t operation.

	Typically these are written to a http.Request.
*/
type GetDumpFileListUsingGETParams struct {

	/* ApplicationFamily.

	   applicationFamily
	*/
	ApplicationFamily string

	/* ApplicationID.

	   applicationId
	*/
	ApplicationID string

	/* Date.

	   date
	*/
	Date *string

	/* Environment.

	   environment
	*/
	Environment string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get dump file list using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDumpFileListUsingGETParams) WithDefaults() *GetDumpFileListUsingGETParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get dump file list using g e t params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDumpFileListUsingGETParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) WithTimeout(timeout time.Duration) *GetDumpFileListUsingGETParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) WithContext(ctx context.Context) *GetDumpFileListUsingGETParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) WithHTTPClient(client *http.Client) *GetDumpFileListUsingGETParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApplicationFamily adds the applicationFamily to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) WithApplicationFamily(applicationFamily string) *GetDumpFileListUsingGETParams {
	o.SetApplicationFamily(applicationFamily)
	return o
}

// SetApplicationFamily adds the applicationFamily to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) SetApplicationFamily(applicationFamily string) {
	o.ApplicationFamily = applicationFamily
}

// WithApplicationID adds the applicationID to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) WithApplicationID(applicationID string) *GetDumpFileListUsingGETParams {
	o.SetApplicationID(applicationID)
	return o
}

// SetApplicationID adds the applicationId to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) SetApplicationID(applicationID string) {
	o.ApplicationID = applicationID
}

// WithDate adds the date to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) WithDate(date *string) *GetDumpFileListUsingGETParams {
	o.SetDate(date)
	return o
}

// SetDate adds the date to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) SetDate(date *string) {
	o.Date = date
}

// WithEnvironment adds the environment to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) WithEnvironment(environment string) *GetDumpFileListUsingGETParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the get dump file list using g e t params
func (o *GetDumpFileListUsingGETParams) SetEnvironment(environment string) {
	o.Environment = environment
}

// WriteToRequest writes these params to a swagger request
func (o *GetDumpFileListUsingGETParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param applicationFamily
	if err := r.SetPathParam("applicationFamily", o.ApplicationFamily); err != nil {
		return err
	}

	// path param applicationId
	if err := r.SetPathParam("applicationId", o.ApplicationID); err != nil {
		return err
	}

	if o.Date != nil {

		// query param date
		var qrDate string

		if o.Date != nil {
			qrDate = *o.Date
		}
		qDate := qrDate
		if qDate != "" {

			if err := r.SetQueryParam("date", qDate); err != nil {
				return err
			}
		}
	}

	// path param environment
	if err := r.SetPathParam("environment", o.Environment); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
