// Code generated by go-swagger; DO NOT EDIT.

package application_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// LoginUsingDELETEReader is a Reader for the LoginUsingDELETE structure.
type LoginUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LoginUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewLoginUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 204:
		result := NewLoginUsingDELETENoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewLoginUsingDELETEUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewLoginUsingDELETEForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /api/login] loginUsingDELETE", response, response.Code())
	}
}

// NewLoginUsingDELETEOK creates a LoginUsingDELETEOK with default headers values
func NewLoginUsingDELETEOK() *LoginUsingDELETEOK {
	return &LoginUsingDELETEOK{}
}

/*
LoginUsingDELETEOK describes a response with status code 200, with default header values.

OK
*/
type LoginUsingDELETEOK struct {
	Payload string
}

// IsSuccess returns true when this login using d e l e t e o k response has a 2xx status code
func (o *LoginUsingDELETEOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this login using d e l e t e o k response has a 3xx status code
func (o *LoginUsingDELETEOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login using d e l e t e o k response has a 4xx status code
func (o *LoginUsingDELETEOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this login using d e l e t e o k response has a 5xx status code
func (o *LoginUsingDELETEOK) IsServerError() bool {
	return false
}

// IsCode returns true when this login using d e l e t e o k response a status code equal to that given
func (o *LoginUsingDELETEOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the login using d e l e t e o k response
func (o *LoginUsingDELETEOK) Code() int {
	return 200
}

func (o *LoginUsingDELETEOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETEOK %s", 200, payload)
}

func (o *LoginUsingDELETEOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETEOK %s", 200, payload)
}

func (o *LoginUsingDELETEOK) GetPayload() string {
	return o.Payload
}

func (o *LoginUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewLoginUsingDELETENoContent creates a LoginUsingDELETENoContent with default headers values
func NewLoginUsingDELETENoContent() *LoginUsingDELETENoContent {
	return &LoginUsingDELETENoContent{}
}

/*
LoginUsingDELETENoContent describes a response with status code 204, with default header values.

No Content
*/
type LoginUsingDELETENoContent struct {
}

// IsSuccess returns true when this login using d e l e t e no content response has a 2xx status code
func (o *LoginUsingDELETENoContent) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this login using d e l e t e no content response has a 3xx status code
func (o *LoginUsingDELETENoContent) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login using d e l e t e no content response has a 4xx status code
func (o *LoginUsingDELETENoContent) IsClientError() bool {
	return false
}

// IsServerError returns true when this login using d e l e t e no content response has a 5xx status code
func (o *LoginUsingDELETENoContent) IsServerError() bool {
	return false
}

// IsCode returns true when this login using d e l e t e no content response a status code equal to that given
func (o *LoginUsingDELETENoContent) IsCode(code int) bool {
	return code == 204
}

// Code gets the status code for the login using d e l e t e no content response
func (o *LoginUsingDELETENoContent) Code() int {
	return 204
}

func (o *LoginUsingDELETENoContent) Error() string {
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETENoContent", 204)
}

func (o *LoginUsingDELETENoContent) String() string {
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETENoContent", 204)
}

func (o *LoginUsingDELETENoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoginUsingDELETEUnauthorized creates a LoginUsingDELETEUnauthorized with default headers values
func NewLoginUsingDELETEUnauthorized() *LoginUsingDELETEUnauthorized {
	return &LoginUsingDELETEUnauthorized{}
}

/*
LoginUsingDELETEUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type LoginUsingDELETEUnauthorized struct {
}

// IsSuccess returns true when this login using d e l e t e unauthorized response has a 2xx status code
func (o *LoginUsingDELETEUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login using d e l e t e unauthorized response has a 3xx status code
func (o *LoginUsingDELETEUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login using d e l e t e unauthorized response has a 4xx status code
func (o *LoginUsingDELETEUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this login using d e l e t e unauthorized response has a 5xx status code
func (o *LoginUsingDELETEUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this login using d e l e t e unauthorized response a status code equal to that given
func (o *LoginUsingDELETEUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the login using d e l e t e unauthorized response
func (o *LoginUsingDELETEUnauthorized) Code() int {
	return 401
}

func (o *LoginUsingDELETEUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETEUnauthorized", 401)
}

func (o *LoginUsingDELETEUnauthorized) String() string {
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETEUnauthorized", 401)
}

func (o *LoginUsingDELETEUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewLoginUsingDELETEForbidden creates a LoginUsingDELETEForbidden with default headers values
func NewLoginUsingDELETEForbidden() *LoginUsingDELETEForbidden {
	return &LoginUsingDELETEForbidden{}
}

/*
LoginUsingDELETEForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type LoginUsingDELETEForbidden struct {
}

// IsSuccess returns true when this login using d e l e t e forbidden response has a 2xx status code
func (o *LoginUsingDELETEForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this login using d e l e t e forbidden response has a 3xx status code
func (o *LoginUsingDELETEForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this login using d e l e t e forbidden response has a 4xx status code
func (o *LoginUsingDELETEForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this login using d e l e t e forbidden response has a 5xx status code
func (o *LoginUsingDELETEForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this login using d e l e t e forbidden response a status code equal to that given
func (o *LoginUsingDELETEForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the login using d e l e t e forbidden response
func (o *LoginUsingDELETEForbidden) Code() int {
	return 403
}

func (o *LoginUsingDELETEForbidden) Error() string {
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETEForbidden", 403)
}

func (o *LoginUsingDELETEForbidden) String() string {
	return fmt.Sprintf("[DELETE /api/login][%d] loginUsingDELETEForbidden", 403)
}

func (o *LoginUsingDELETEForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
