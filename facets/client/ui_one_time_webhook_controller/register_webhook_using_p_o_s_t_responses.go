// Code generated by go-swagger; DO NOT EDIT.

package ui_one_time_webhook_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RegisterWebhookUsingPOSTReader is a Reader for the RegisterWebhookUsingPOST structure.
type RegisterWebhookUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterWebhookUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterWebhookUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewRegisterWebhookUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewRegisterWebhookUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRegisterWebhookUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterWebhookUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/onetime-webhook/register] registerWebhookUsingPOST", response, response.Code())
	}
}

// NewRegisterWebhookUsingPOSTOK creates a RegisterWebhookUsingPOSTOK with default headers values
func NewRegisterWebhookUsingPOSTOK() *RegisterWebhookUsingPOSTOK {
	return &RegisterWebhookUsingPOSTOK{}
}

/*
RegisterWebhookUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type RegisterWebhookUsingPOSTOK struct {
	Payload *models.OneTimeWebhook
}

// IsSuccess returns true when this register webhook using p o s t o k response has a 2xx status code
func (o *RegisterWebhookUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register webhook using p o s t o k response has a 3xx status code
func (o *RegisterWebhookUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook using p o s t o k response has a 4xx status code
func (o *RegisterWebhookUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register webhook using p o s t o k response has a 5xx status code
func (o *RegisterWebhookUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook using p o s t o k response a status code equal to that given
func (o *RegisterWebhookUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register webhook using p o s t o k response
func (o *RegisterWebhookUsingPOSTOK) Code() int {
	return 200
}

func (o *RegisterWebhookUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTOK %s", 200, payload)
}

func (o *RegisterWebhookUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTOK %s", 200, payload)
}

func (o *RegisterWebhookUsingPOSTOK) GetPayload() *models.OneTimeWebhook {
	return o.Payload
}

func (o *RegisterWebhookUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OneTimeWebhook)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterWebhookUsingPOSTCreated creates a RegisterWebhookUsingPOSTCreated with default headers values
func NewRegisterWebhookUsingPOSTCreated() *RegisterWebhookUsingPOSTCreated {
	return &RegisterWebhookUsingPOSTCreated{}
}

/*
RegisterWebhookUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type RegisterWebhookUsingPOSTCreated struct {
}

// IsSuccess returns true when this register webhook using p o s t created response has a 2xx status code
func (o *RegisterWebhookUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register webhook using p o s t created response has a 3xx status code
func (o *RegisterWebhookUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook using p o s t created response has a 4xx status code
func (o *RegisterWebhookUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this register webhook using p o s t created response has a 5xx status code
func (o *RegisterWebhookUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook using p o s t created response a status code equal to that given
func (o *RegisterWebhookUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the register webhook using p o s t created response
func (o *RegisterWebhookUsingPOSTCreated) Code() int {
	return 201
}

func (o *RegisterWebhookUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTCreated", 201)
}

func (o *RegisterWebhookUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTCreated", 201)
}

func (o *RegisterWebhookUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterWebhookUsingPOSTUnauthorized creates a RegisterWebhookUsingPOSTUnauthorized with default headers values
func NewRegisterWebhookUsingPOSTUnauthorized() *RegisterWebhookUsingPOSTUnauthorized {
	return &RegisterWebhookUsingPOSTUnauthorized{}
}

/*
RegisterWebhookUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type RegisterWebhookUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this register webhook using p o s t unauthorized response has a 2xx status code
func (o *RegisterWebhookUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register webhook using p o s t unauthorized response has a 3xx status code
func (o *RegisterWebhookUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook using p o s t unauthorized response has a 4xx status code
func (o *RegisterWebhookUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this register webhook using p o s t unauthorized response has a 5xx status code
func (o *RegisterWebhookUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook using p o s t unauthorized response a status code equal to that given
func (o *RegisterWebhookUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the register webhook using p o s t unauthorized response
func (o *RegisterWebhookUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *RegisterWebhookUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTUnauthorized", 401)
}

func (o *RegisterWebhookUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTUnauthorized", 401)
}

func (o *RegisterWebhookUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterWebhookUsingPOSTForbidden creates a RegisterWebhookUsingPOSTForbidden with default headers values
func NewRegisterWebhookUsingPOSTForbidden() *RegisterWebhookUsingPOSTForbidden {
	return &RegisterWebhookUsingPOSTForbidden{}
}

/*
RegisterWebhookUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RegisterWebhookUsingPOSTForbidden struct {
}

// IsSuccess returns true when this register webhook using p o s t forbidden response has a 2xx status code
func (o *RegisterWebhookUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register webhook using p o s t forbidden response has a 3xx status code
func (o *RegisterWebhookUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook using p o s t forbidden response has a 4xx status code
func (o *RegisterWebhookUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this register webhook using p o s t forbidden response has a 5xx status code
func (o *RegisterWebhookUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook using p o s t forbidden response a status code equal to that given
func (o *RegisterWebhookUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the register webhook using p o s t forbidden response
func (o *RegisterWebhookUsingPOSTForbidden) Code() int {
	return 403
}

func (o *RegisterWebhookUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTForbidden", 403)
}

func (o *RegisterWebhookUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTForbidden", 403)
}

func (o *RegisterWebhookUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewRegisterWebhookUsingPOSTNotFound creates a RegisterWebhookUsingPOSTNotFound with default headers values
func NewRegisterWebhookUsingPOSTNotFound() *RegisterWebhookUsingPOSTNotFound {
	return &RegisterWebhookUsingPOSTNotFound{}
}

/*
RegisterWebhookUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RegisterWebhookUsingPOSTNotFound struct {
}

// IsSuccess returns true when this register webhook using p o s t not found response has a 2xx status code
func (o *RegisterWebhookUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register webhook using p o s t not found response has a 3xx status code
func (o *RegisterWebhookUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook using p o s t not found response has a 4xx status code
func (o *RegisterWebhookUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this register webhook using p o s t not found response has a 5xx status code
func (o *RegisterWebhookUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook using p o s t not found response a status code equal to that given
func (o *RegisterWebhookUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the register webhook using p o s t not found response
func (o *RegisterWebhookUsingPOSTNotFound) Code() int {
	return 404
}

func (o *RegisterWebhookUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTNotFound", 404)
}

func (o *RegisterWebhookUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookUsingPOSTNotFound", 404)
}

func (o *RegisterWebhookUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
