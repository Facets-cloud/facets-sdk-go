// Code generated by go-swagger; DO NOT EDIT.

package ui_one_time_webhook_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// RegisterWebhookReader is a Reader for the RegisterWebhook structure.
type RegisterWebhookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RegisterWebhookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRegisterWebhookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRegisterWebhookBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRegisterWebhookNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewRegisterWebhookMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRegisterWebhookInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/onetime-webhook/register] registerWebhook", response, response.Code())
	}
}

// NewRegisterWebhookOK creates a RegisterWebhookOK with default headers values
func NewRegisterWebhookOK() *RegisterWebhookOK {
	return &RegisterWebhookOK{}
}

/*
RegisterWebhookOK describes a response with status code 200, with default header values.

OK
*/
type RegisterWebhookOK struct {
	Payload *models.OneTimeWebhook
}

// IsSuccess returns true when this register webhook o k response has a 2xx status code
func (o *RegisterWebhookOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this register webhook o k response has a 3xx status code
func (o *RegisterWebhookOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook o k response has a 4xx status code
func (o *RegisterWebhookOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this register webhook o k response has a 5xx status code
func (o *RegisterWebhookOK) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook o k response a status code equal to that given
func (o *RegisterWebhookOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the register webhook o k response
func (o *RegisterWebhookOK) Code() int {
	return 200
}

func (o *RegisterWebhookOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookOK %s", 200, payload)
}

func (o *RegisterWebhookOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookOK %s", 200, payload)
}

func (o *RegisterWebhookOK) GetPayload() *models.OneTimeWebhook {
	return o.Payload
}

func (o *RegisterWebhookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.OneTimeWebhook)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterWebhookBadRequest creates a RegisterWebhookBadRequest with default headers values
func NewRegisterWebhookBadRequest() *RegisterWebhookBadRequest {
	return &RegisterWebhookBadRequest{}
}

/*
RegisterWebhookBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RegisterWebhookBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register webhook bad request response has a 2xx status code
func (o *RegisterWebhookBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register webhook bad request response has a 3xx status code
func (o *RegisterWebhookBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook bad request response has a 4xx status code
func (o *RegisterWebhookBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this register webhook bad request response has a 5xx status code
func (o *RegisterWebhookBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook bad request response a status code equal to that given
func (o *RegisterWebhookBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the register webhook bad request response
func (o *RegisterWebhookBadRequest) Code() int {
	return 400
}

func (o *RegisterWebhookBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookBadRequest %s", 400, payload)
}

func (o *RegisterWebhookBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookBadRequest %s", 400, payload)
}

func (o *RegisterWebhookBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterWebhookBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterWebhookNotFound creates a RegisterWebhookNotFound with default headers values
func NewRegisterWebhookNotFound() *RegisterWebhookNotFound {
	return &RegisterWebhookNotFound{}
}

/*
RegisterWebhookNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RegisterWebhookNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register webhook not found response has a 2xx status code
func (o *RegisterWebhookNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register webhook not found response has a 3xx status code
func (o *RegisterWebhookNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook not found response has a 4xx status code
func (o *RegisterWebhookNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this register webhook not found response has a 5xx status code
func (o *RegisterWebhookNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook not found response a status code equal to that given
func (o *RegisterWebhookNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the register webhook not found response
func (o *RegisterWebhookNotFound) Code() int {
	return 404
}

func (o *RegisterWebhookNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookNotFound %s", 404, payload)
}

func (o *RegisterWebhookNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookNotFound %s", 404, payload)
}

func (o *RegisterWebhookNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterWebhookNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterWebhookMethodNotAllowed creates a RegisterWebhookMethodNotAllowed with default headers values
func NewRegisterWebhookMethodNotAllowed() *RegisterWebhookMethodNotAllowed {
	return &RegisterWebhookMethodNotAllowed{}
}

/*
RegisterWebhookMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type RegisterWebhookMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register webhook method not allowed response has a 2xx status code
func (o *RegisterWebhookMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register webhook method not allowed response has a 3xx status code
func (o *RegisterWebhookMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook method not allowed response has a 4xx status code
func (o *RegisterWebhookMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this register webhook method not allowed response has a 5xx status code
func (o *RegisterWebhookMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this register webhook method not allowed response a status code equal to that given
func (o *RegisterWebhookMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the register webhook method not allowed response
func (o *RegisterWebhookMethodNotAllowed) Code() int {
	return 405
}

func (o *RegisterWebhookMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookMethodNotAllowed %s", 405, payload)
}

func (o *RegisterWebhookMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookMethodNotAllowed %s", 405, payload)
}

func (o *RegisterWebhookMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterWebhookMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRegisterWebhookInternalServerError creates a RegisterWebhookInternalServerError with default headers values
func NewRegisterWebhookInternalServerError() *RegisterWebhookInternalServerError {
	return &RegisterWebhookInternalServerError{}
}

/*
RegisterWebhookInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type RegisterWebhookInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this register webhook internal server error response has a 2xx status code
func (o *RegisterWebhookInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this register webhook internal server error response has a 3xx status code
func (o *RegisterWebhookInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this register webhook internal server error response has a 4xx status code
func (o *RegisterWebhookInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this register webhook internal server error response has a 5xx status code
func (o *RegisterWebhookInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this register webhook internal server error response a status code equal to that given
func (o *RegisterWebhookInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the register webhook internal server error response
func (o *RegisterWebhookInternalServerError) Code() int {
	return 500
}

func (o *RegisterWebhookInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookInternalServerError %s", 500, payload)
}

func (o *RegisterWebhookInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/onetime-webhook/register][%d] registerWebhookInternalServerError %s", 500, payload)
}

func (o *RegisterWebhookInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *RegisterWebhookInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
