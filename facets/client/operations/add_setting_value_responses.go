// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddSettingValueReader is a Reader for the AddSettingValue structure.
type AddSettingValueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddSettingValueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddSettingValueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddSettingValueBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddSettingValueForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddSettingValueNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAddSettingValueMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddSettingValueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}] addSettingValue", response, response.Code())
	}
}

// NewAddSettingValueOK creates a AddSettingValueOK with default headers values
func NewAddSettingValueOK() *AddSettingValueOK {
	return &AddSettingValueOK{}
}

/*
AddSettingValueOK describes a response with status code 200, with default header values.

OK
*/
type AddSettingValueOK struct {
	Payload map[string]interface{}
}

// IsSuccess returns true when this add setting value o k response has a 2xx status code
func (o *AddSettingValueOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add setting value o k response has a 3xx status code
func (o *AddSettingValueOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value o k response has a 4xx status code
func (o *AddSettingValueOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add setting value o k response has a 5xx status code
func (o *AddSettingValueOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value o k response a status code equal to that given
func (o *AddSettingValueOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add setting value o k response
func (o *AddSettingValueOK) Code() int {
	return 200
}

func (o *AddSettingValueOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueOK %s", 200, payload)
}

func (o *AddSettingValueOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueOK %s", 200, payload)
}

func (o *AddSettingValueOK) GetPayload() map[string]interface{} {
	return o.Payload
}

func (o *AddSettingValueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSettingValueBadRequest creates a AddSettingValueBadRequest with default headers values
func NewAddSettingValueBadRequest() *AddSettingValueBadRequest {
	return &AddSettingValueBadRequest{}
}

/*
AddSettingValueBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddSettingValueBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add setting value bad request response has a 2xx status code
func (o *AddSettingValueBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value bad request response has a 3xx status code
func (o *AddSettingValueBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value bad request response has a 4xx status code
func (o *AddSettingValueBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add setting value bad request response has a 5xx status code
func (o *AddSettingValueBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value bad request response a status code equal to that given
func (o *AddSettingValueBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add setting value bad request response
func (o *AddSettingValueBadRequest) Code() int {
	return 400
}

func (o *AddSettingValueBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueBadRequest %s", 400, payload)
}

func (o *AddSettingValueBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueBadRequest %s", 400, payload)
}

func (o *AddSettingValueBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddSettingValueBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSettingValueForbidden creates a AddSettingValueForbidden with default headers values
func NewAddSettingValueForbidden() *AddSettingValueForbidden {
	return &AddSettingValueForbidden{}
}

/*
AddSettingValueForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddSettingValueForbidden struct {
	Payload string
}

// IsSuccess returns true when this add setting value forbidden response has a 2xx status code
func (o *AddSettingValueForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value forbidden response has a 3xx status code
func (o *AddSettingValueForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value forbidden response has a 4xx status code
func (o *AddSettingValueForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add setting value forbidden response has a 5xx status code
func (o *AddSettingValueForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value forbidden response a status code equal to that given
func (o *AddSettingValueForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add setting value forbidden response
func (o *AddSettingValueForbidden) Code() int {
	return 403
}

func (o *AddSettingValueForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueForbidden %s", 403, payload)
}

func (o *AddSettingValueForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueForbidden %s", 403, payload)
}

func (o *AddSettingValueForbidden) GetPayload() string {
	return o.Payload
}

func (o *AddSettingValueForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSettingValueNotFound creates a AddSettingValueNotFound with default headers values
func NewAddSettingValueNotFound() *AddSettingValueNotFound {
	return &AddSettingValueNotFound{}
}

/*
AddSettingValueNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddSettingValueNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add setting value not found response has a 2xx status code
func (o *AddSettingValueNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value not found response has a 3xx status code
func (o *AddSettingValueNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value not found response has a 4xx status code
func (o *AddSettingValueNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add setting value not found response has a 5xx status code
func (o *AddSettingValueNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value not found response a status code equal to that given
func (o *AddSettingValueNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add setting value not found response
func (o *AddSettingValueNotFound) Code() int {
	return 404
}

func (o *AddSettingValueNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueNotFound %s", 404, payload)
}

func (o *AddSettingValueNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueNotFound %s", 404, payload)
}

func (o *AddSettingValueNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddSettingValueNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSettingValueMethodNotAllowed creates a AddSettingValueMethodNotAllowed with default headers values
func NewAddSettingValueMethodNotAllowed() *AddSettingValueMethodNotAllowed {
	return &AddSettingValueMethodNotAllowed{}
}

/*
AddSettingValueMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AddSettingValueMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add setting value method not allowed response has a 2xx status code
func (o *AddSettingValueMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value method not allowed response has a 3xx status code
func (o *AddSettingValueMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value method not allowed response has a 4xx status code
func (o *AddSettingValueMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this add setting value method not allowed response has a 5xx status code
func (o *AddSettingValueMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this add setting value method not allowed response a status code equal to that given
func (o *AddSettingValueMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the add setting value method not allowed response
func (o *AddSettingValueMethodNotAllowed) Code() int {
	return 405
}

func (o *AddSettingValueMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueMethodNotAllowed %s", 405, payload)
}

func (o *AddSettingValueMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueMethodNotAllowed %s", 405, payload)
}

func (o *AddSettingValueMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddSettingValueMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddSettingValueInternalServerError creates a AddSettingValueInternalServerError with default headers values
func NewAddSettingValueInternalServerError() *AddSettingValueInternalServerError {
	return &AddSettingValueInternalServerError{}
}

/*
AddSettingValueInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddSettingValueInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add setting value internal server error response has a 2xx status code
func (o *AddSettingValueInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add setting value internal server error response has a 3xx status code
func (o *AddSettingValueInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add setting value internal server error response has a 4xx status code
func (o *AddSettingValueInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add setting value internal server error response has a 5xx status code
func (o *AddSettingValueInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add setting value internal server error response a status code equal to that given
func (o *AddSettingValueInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add setting value internal server error response
func (o *AddSettingValueInternalServerError) Code() int {
	return 500
}

func (o *AddSettingValueInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueInternalServerError %s", 500, payload)
}

func (o *AddSettingValueInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/settings/value/{entityType}/{entityId}][%d] addSettingValueInternalServerError %s", 500, payload)
}

func (o *AddSettingValueInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddSettingValueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
