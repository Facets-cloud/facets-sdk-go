// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddGenericOAuthIntegrationReader is a Reader for the AddGenericOAuthIntegration structure.
type AddGenericOAuthIntegrationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddGenericOAuthIntegrationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewAddGenericOAuthIntegrationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddGenericOAuthIntegrationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddGenericOAuthIntegrationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddGenericOAuthIntegrationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAddGenericOAuthIntegrationMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddGenericOAuthIntegrationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/oauth/generic-oauth-integration] addGenericOAuthIntegration", response, response.Code())
	}
}

// NewAddGenericOAuthIntegrationOK creates a AddGenericOAuthIntegrationOK with default headers values
func NewAddGenericOAuthIntegrationOK() *AddGenericOAuthIntegrationOK {
	return &AddGenericOAuthIntegrationOK{}
}

/*
AddGenericOAuthIntegrationOK describes a response with status code 200, with default header values.

OK
*/
type AddGenericOAuthIntegrationOK struct {
	Payload []*models.CustomOAuth2ClientRegistration
}

// IsSuccess returns true when this add generic o auth integration o k response has a 2xx status code
func (o *AddGenericOAuthIntegrationOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add generic o auth integration o k response has a 3xx status code
func (o *AddGenericOAuthIntegrationOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add generic o auth integration o k response has a 4xx status code
func (o *AddGenericOAuthIntegrationOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add generic o auth integration o k response has a 5xx status code
func (o *AddGenericOAuthIntegrationOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add generic o auth integration o k response a status code equal to that given
func (o *AddGenericOAuthIntegrationOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add generic o auth integration o k response
func (o *AddGenericOAuthIntegrationOK) Code() int {
	return 200
}

func (o *AddGenericOAuthIntegrationOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationOK %s", 200, payload)
}

func (o *AddGenericOAuthIntegrationOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationOK %s", 200, payload)
}

func (o *AddGenericOAuthIntegrationOK) GetPayload() []*models.CustomOAuth2ClientRegistration {
	return o.Payload
}

func (o *AddGenericOAuthIntegrationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddGenericOAuthIntegrationBadRequest creates a AddGenericOAuthIntegrationBadRequest with default headers values
func NewAddGenericOAuthIntegrationBadRequest() *AddGenericOAuthIntegrationBadRequest {
	return &AddGenericOAuthIntegrationBadRequest{}
}

/*
AddGenericOAuthIntegrationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddGenericOAuthIntegrationBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add generic o auth integration bad request response has a 2xx status code
func (o *AddGenericOAuthIntegrationBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add generic o auth integration bad request response has a 3xx status code
func (o *AddGenericOAuthIntegrationBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add generic o auth integration bad request response has a 4xx status code
func (o *AddGenericOAuthIntegrationBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add generic o auth integration bad request response has a 5xx status code
func (o *AddGenericOAuthIntegrationBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add generic o auth integration bad request response a status code equal to that given
func (o *AddGenericOAuthIntegrationBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add generic o auth integration bad request response
func (o *AddGenericOAuthIntegrationBadRequest) Code() int {
	return 400
}

func (o *AddGenericOAuthIntegrationBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationBadRequest %s", 400, payload)
}

func (o *AddGenericOAuthIntegrationBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationBadRequest %s", 400, payload)
}

func (o *AddGenericOAuthIntegrationBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddGenericOAuthIntegrationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddGenericOAuthIntegrationForbidden creates a AddGenericOAuthIntegrationForbidden with default headers values
func NewAddGenericOAuthIntegrationForbidden() *AddGenericOAuthIntegrationForbidden {
	return &AddGenericOAuthIntegrationForbidden{}
}

/*
AddGenericOAuthIntegrationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddGenericOAuthIntegrationForbidden struct {
	Payload string
}

// IsSuccess returns true when this add generic o auth integration forbidden response has a 2xx status code
func (o *AddGenericOAuthIntegrationForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add generic o auth integration forbidden response has a 3xx status code
func (o *AddGenericOAuthIntegrationForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add generic o auth integration forbidden response has a 4xx status code
func (o *AddGenericOAuthIntegrationForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add generic o auth integration forbidden response has a 5xx status code
func (o *AddGenericOAuthIntegrationForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add generic o auth integration forbidden response a status code equal to that given
func (o *AddGenericOAuthIntegrationForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add generic o auth integration forbidden response
func (o *AddGenericOAuthIntegrationForbidden) Code() int {
	return 403
}

func (o *AddGenericOAuthIntegrationForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationForbidden %s", 403, payload)
}

func (o *AddGenericOAuthIntegrationForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationForbidden %s", 403, payload)
}

func (o *AddGenericOAuthIntegrationForbidden) GetPayload() string {
	return o.Payload
}

func (o *AddGenericOAuthIntegrationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddGenericOAuthIntegrationNotFound creates a AddGenericOAuthIntegrationNotFound with default headers values
func NewAddGenericOAuthIntegrationNotFound() *AddGenericOAuthIntegrationNotFound {
	return &AddGenericOAuthIntegrationNotFound{}
}

/*
AddGenericOAuthIntegrationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddGenericOAuthIntegrationNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add generic o auth integration not found response has a 2xx status code
func (o *AddGenericOAuthIntegrationNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add generic o auth integration not found response has a 3xx status code
func (o *AddGenericOAuthIntegrationNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add generic o auth integration not found response has a 4xx status code
func (o *AddGenericOAuthIntegrationNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add generic o auth integration not found response has a 5xx status code
func (o *AddGenericOAuthIntegrationNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add generic o auth integration not found response a status code equal to that given
func (o *AddGenericOAuthIntegrationNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add generic o auth integration not found response
func (o *AddGenericOAuthIntegrationNotFound) Code() int {
	return 404
}

func (o *AddGenericOAuthIntegrationNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationNotFound %s", 404, payload)
}

func (o *AddGenericOAuthIntegrationNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationNotFound %s", 404, payload)
}

func (o *AddGenericOAuthIntegrationNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddGenericOAuthIntegrationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddGenericOAuthIntegrationMethodNotAllowed creates a AddGenericOAuthIntegrationMethodNotAllowed with default headers values
func NewAddGenericOAuthIntegrationMethodNotAllowed() *AddGenericOAuthIntegrationMethodNotAllowed {
	return &AddGenericOAuthIntegrationMethodNotAllowed{}
}

/*
AddGenericOAuthIntegrationMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AddGenericOAuthIntegrationMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add generic o auth integration method not allowed response has a 2xx status code
func (o *AddGenericOAuthIntegrationMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add generic o auth integration method not allowed response has a 3xx status code
func (o *AddGenericOAuthIntegrationMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add generic o auth integration method not allowed response has a 4xx status code
func (o *AddGenericOAuthIntegrationMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this add generic o auth integration method not allowed response has a 5xx status code
func (o *AddGenericOAuthIntegrationMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this add generic o auth integration method not allowed response a status code equal to that given
func (o *AddGenericOAuthIntegrationMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the add generic o auth integration method not allowed response
func (o *AddGenericOAuthIntegrationMethodNotAllowed) Code() int {
	return 405
}

func (o *AddGenericOAuthIntegrationMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationMethodNotAllowed %s", 405, payload)
}

func (o *AddGenericOAuthIntegrationMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationMethodNotAllowed %s", 405, payload)
}

func (o *AddGenericOAuthIntegrationMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddGenericOAuthIntegrationMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddGenericOAuthIntegrationInternalServerError creates a AddGenericOAuthIntegrationInternalServerError with default headers values
func NewAddGenericOAuthIntegrationInternalServerError() *AddGenericOAuthIntegrationInternalServerError {
	return &AddGenericOAuthIntegrationInternalServerError{}
}

/*
AddGenericOAuthIntegrationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddGenericOAuthIntegrationInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add generic o auth integration internal server error response has a 2xx status code
func (o *AddGenericOAuthIntegrationInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add generic o auth integration internal server error response has a 3xx status code
func (o *AddGenericOAuthIntegrationInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add generic o auth integration internal server error response has a 4xx status code
func (o *AddGenericOAuthIntegrationInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add generic o auth integration internal server error response has a 5xx status code
func (o *AddGenericOAuthIntegrationInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add generic o auth integration internal server error response a status code equal to that given
func (o *AddGenericOAuthIntegrationInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add generic o auth integration internal server error response
func (o *AddGenericOAuthIntegrationInternalServerError) Code() int {
	return 500
}

func (o *AddGenericOAuthIntegrationInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationInternalServerError %s", 500, payload)
}

func (o *AddGenericOAuthIntegrationInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth/generic-oauth-integration][%d] addGenericOAuthIntegrationInternalServerError %s", 500, payload)
}

func (o *AddGenericOAuthIntegrationInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddGenericOAuthIntegrationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
