// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddVariablesBulkReader is a Reader for the AddVariablesBulk structure.
type AddVariablesBulkReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddVariablesBulkReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewAddVariablesBulkOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddVariablesBulkBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddVariablesBulkForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddVariablesBulkNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAddVariablesBulkMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddVariablesBulkInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk] addVariablesBulk", response, response.Code())
	}
}

// NewAddVariablesBulkOK creates a AddVariablesBulkOK with default headers values
func NewAddVariablesBulkOK() *AddVariablesBulkOK {
	return &AddVariablesBulkOK{}
}

/*
AddVariablesBulkOK describes a response with status code 200, with default header values.

Variables added successfully
*/
type AddVariablesBulkOK struct {
}

// IsSuccess returns true when this add variables bulk o k response has a 2xx status code
func (o *AddVariablesBulkOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add variables bulk o k response has a 3xx status code
func (o *AddVariablesBulkOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add variables bulk o k response has a 4xx status code
func (o *AddVariablesBulkOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add variables bulk o k response has a 5xx status code
func (o *AddVariablesBulkOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add variables bulk o k response a status code equal to that given
func (o *AddVariablesBulkOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add variables bulk o k response
func (o *AddVariablesBulkOK) Code() int {
	return 200
}

func (o *AddVariablesBulkOK) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkOK", 200)
}

func (o *AddVariablesBulkOK) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkOK", 200)
}

func (o *AddVariablesBulkOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddVariablesBulkBadRequest creates a AddVariablesBulkBadRequest with default headers values
func NewAddVariablesBulkBadRequest() *AddVariablesBulkBadRequest {
	return &AddVariablesBulkBadRequest{}
}

/*
AddVariablesBulkBadRequest describes a response with status code 400, with default header values.

Invalid request or variables already exist
*/
type AddVariablesBulkBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add variables bulk bad request response has a 2xx status code
func (o *AddVariablesBulkBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add variables bulk bad request response has a 3xx status code
func (o *AddVariablesBulkBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add variables bulk bad request response has a 4xx status code
func (o *AddVariablesBulkBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add variables bulk bad request response has a 5xx status code
func (o *AddVariablesBulkBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add variables bulk bad request response a status code equal to that given
func (o *AddVariablesBulkBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add variables bulk bad request response
func (o *AddVariablesBulkBadRequest) Code() int {
	return 400
}

func (o *AddVariablesBulkBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkBadRequest %s", 400, payload)
}

func (o *AddVariablesBulkBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkBadRequest %s", 400, payload)
}

func (o *AddVariablesBulkBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddVariablesBulkBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddVariablesBulkForbidden creates a AddVariablesBulkForbidden with default headers values
func NewAddVariablesBulkForbidden() *AddVariablesBulkForbidden {
	return &AddVariablesBulkForbidden{}
}

/*
AddVariablesBulkForbidden describes a response with status code 403, with default header values.

Access denied
*/
type AddVariablesBulkForbidden struct {
	Payload string
}

// IsSuccess returns true when this add variables bulk forbidden response has a 2xx status code
func (o *AddVariablesBulkForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add variables bulk forbidden response has a 3xx status code
func (o *AddVariablesBulkForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add variables bulk forbidden response has a 4xx status code
func (o *AddVariablesBulkForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add variables bulk forbidden response has a 5xx status code
func (o *AddVariablesBulkForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add variables bulk forbidden response a status code equal to that given
func (o *AddVariablesBulkForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add variables bulk forbidden response
func (o *AddVariablesBulkForbidden) Code() int {
	return 403
}

func (o *AddVariablesBulkForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkForbidden %s", 403, payload)
}

func (o *AddVariablesBulkForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkForbidden %s", 403, payload)
}

func (o *AddVariablesBulkForbidden) GetPayload() string {
	return o.Payload
}

func (o *AddVariablesBulkForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddVariablesBulkNotFound creates a AddVariablesBulkNotFound with default headers values
func NewAddVariablesBulkNotFound() *AddVariablesBulkNotFound {
	return &AddVariablesBulkNotFound{}
}

/*
AddVariablesBulkNotFound describes a response with status code 404, with default header values.

Project not found
*/
type AddVariablesBulkNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add variables bulk not found response has a 2xx status code
func (o *AddVariablesBulkNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add variables bulk not found response has a 3xx status code
func (o *AddVariablesBulkNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add variables bulk not found response has a 4xx status code
func (o *AddVariablesBulkNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add variables bulk not found response has a 5xx status code
func (o *AddVariablesBulkNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add variables bulk not found response a status code equal to that given
func (o *AddVariablesBulkNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add variables bulk not found response
func (o *AddVariablesBulkNotFound) Code() int {
	return 404
}

func (o *AddVariablesBulkNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkNotFound %s", 404, payload)
}

func (o *AddVariablesBulkNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkNotFound %s", 404, payload)
}

func (o *AddVariablesBulkNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddVariablesBulkNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddVariablesBulkMethodNotAllowed creates a AddVariablesBulkMethodNotAllowed with default headers values
func NewAddVariablesBulkMethodNotAllowed() *AddVariablesBulkMethodNotAllowed {
	return &AddVariablesBulkMethodNotAllowed{}
}

/*
AddVariablesBulkMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AddVariablesBulkMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add variables bulk method not allowed response has a 2xx status code
func (o *AddVariablesBulkMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add variables bulk method not allowed response has a 3xx status code
func (o *AddVariablesBulkMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add variables bulk method not allowed response has a 4xx status code
func (o *AddVariablesBulkMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this add variables bulk method not allowed response has a 5xx status code
func (o *AddVariablesBulkMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this add variables bulk method not allowed response a status code equal to that given
func (o *AddVariablesBulkMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the add variables bulk method not allowed response
func (o *AddVariablesBulkMethodNotAllowed) Code() int {
	return 405
}

func (o *AddVariablesBulkMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkMethodNotAllowed %s", 405, payload)
}

func (o *AddVariablesBulkMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkMethodNotAllowed %s", 405, payload)
}

func (o *AddVariablesBulkMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddVariablesBulkMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAddVariablesBulkInternalServerError creates a AddVariablesBulkInternalServerError with default headers values
func NewAddVariablesBulkInternalServerError() *AddVariablesBulkInternalServerError {
	return &AddVariablesBulkInternalServerError{}
}

/*
AddVariablesBulkInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddVariablesBulkInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add variables bulk internal server error response has a 2xx status code
func (o *AddVariablesBulkInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add variables bulk internal server error response has a 3xx status code
func (o *AddVariablesBulkInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add variables bulk internal server error response has a 4xx status code
func (o *AddVariablesBulkInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add variables bulk internal server error response has a 5xx status code
func (o *AddVariablesBulkInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add variables bulk internal server error response a status code equal to that given
func (o *AddVariablesBulkInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add variables bulk internal server error response
func (o *AddVariablesBulkInternalServerError) Code() int {
	return 500
}

func (o *AddVariablesBulkInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkInternalServerError %s", 500, payload)
}

func (o *AddVariablesBulkInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/stacks/{stackName}/variables/bulk][%d] addVariablesBulkInternalServerError %s", 500, payload)
}

func (o *AddVariablesBulkInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddVariablesBulkInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
