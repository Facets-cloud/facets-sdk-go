// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AddIntegrationsReader is a Reader for the AddIntegrations structure.
type AddIntegrationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddIntegrationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddIntegrationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddIntegrationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddIntegrationsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddIntegrationsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAddIntegrationsMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddIntegrationsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/oauth] addIntegrations", response, response.Code())
	}
}

// NewAddIntegrationsOK creates a AddIntegrationsOK with default headers values
func NewAddIntegrationsOK() *AddIntegrationsOK {
	return &AddIntegrationsOK{}
}

/*
AddIntegrationsOK describes a response with status code 200, with default header values.

OK
*/
type AddIntegrationsOK struct {
	Payload []*models.CustomOAuth2ClientRegistration
}

// IsSuccess returns true when this add integrations o k response has a 2xx status code
func (o *AddIntegrationsOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this add integrations o k response has a 3xx status code
func (o *AddIntegrationsOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations o k response has a 4xx status code
func (o *AddIntegrationsOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this add integrations o k response has a 5xx status code
func (o *AddIntegrationsOK) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations o k response a status code equal to that given
func (o *AddIntegrationsOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the add integrations o k response
func (o *AddIntegrationsOK) Code() int {
	return 200
}

func (o *AddIntegrationsOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsOK %s", 200, payload)
}

func (o *AddIntegrationsOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsOK %s", 200, payload)
}

func (o *AddIntegrationsOK) GetPayload() []*models.CustomOAuth2ClientRegistration {
	return o.Payload
}

func (o *AddIntegrationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddIntegrationsBadRequest creates a AddIntegrationsBadRequest with default headers values
func NewAddIntegrationsBadRequest() *AddIntegrationsBadRequest {
	return &AddIntegrationsBadRequest{}
}

/*
AddIntegrationsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddIntegrationsBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add integrations bad request response has a 2xx status code
func (o *AddIntegrationsBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations bad request response has a 3xx status code
func (o *AddIntegrationsBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations bad request response has a 4xx status code
func (o *AddIntegrationsBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this add integrations bad request response has a 5xx status code
func (o *AddIntegrationsBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations bad request response a status code equal to that given
func (o *AddIntegrationsBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the add integrations bad request response
func (o *AddIntegrationsBadRequest) Code() int {
	return 400
}

func (o *AddIntegrationsBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsBadRequest %s", 400, payload)
}

func (o *AddIntegrationsBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsBadRequest %s", 400, payload)
}

func (o *AddIntegrationsBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddIntegrationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddIntegrationsForbidden creates a AddIntegrationsForbidden with default headers values
func NewAddIntegrationsForbidden() *AddIntegrationsForbidden {
	return &AddIntegrationsForbidden{}
}

/*
AddIntegrationsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddIntegrationsForbidden struct {
	Payload string
}

// IsSuccess returns true when this add integrations forbidden response has a 2xx status code
func (o *AddIntegrationsForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations forbidden response has a 3xx status code
func (o *AddIntegrationsForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations forbidden response has a 4xx status code
func (o *AddIntegrationsForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this add integrations forbidden response has a 5xx status code
func (o *AddIntegrationsForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations forbidden response a status code equal to that given
func (o *AddIntegrationsForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the add integrations forbidden response
func (o *AddIntegrationsForbidden) Code() int {
	return 403
}

func (o *AddIntegrationsForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsForbidden %s", 403, payload)
}

func (o *AddIntegrationsForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsForbidden %s", 403, payload)
}

func (o *AddIntegrationsForbidden) GetPayload() string {
	return o.Payload
}

func (o *AddIntegrationsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddIntegrationsNotFound creates a AddIntegrationsNotFound with default headers values
func NewAddIntegrationsNotFound() *AddIntegrationsNotFound {
	return &AddIntegrationsNotFound{}
}

/*
AddIntegrationsNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddIntegrationsNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add integrations not found response has a 2xx status code
func (o *AddIntegrationsNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations not found response has a 3xx status code
func (o *AddIntegrationsNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations not found response has a 4xx status code
func (o *AddIntegrationsNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this add integrations not found response has a 5xx status code
func (o *AddIntegrationsNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations not found response a status code equal to that given
func (o *AddIntegrationsNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the add integrations not found response
func (o *AddIntegrationsNotFound) Code() int {
	return 404
}

func (o *AddIntegrationsNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsNotFound %s", 404, payload)
}

func (o *AddIntegrationsNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsNotFound %s", 404, payload)
}

func (o *AddIntegrationsNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddIntegrationsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddIntegrationsMethodNotAllowed creates a AddIntegrationsMethodNotAllowed with default headers values
func NewAddIntegrationsMethodNotAllowed() *AddIntegrationsMethodNotAllowed {
	return &AddIntegrationsMethodNotAllowed{}
}

/*
AddIntegrationsMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AddIntegrationsMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add integrations method not allowed response has a 2xx status code
func (o *AddIntegrationsMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations method not allowed response has a 3xx status code
func (o *AddIntegrationsMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations method not allowed response has a 4xx status code
func (o *AddIntegrationsMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this add integrations method not allowed response has a 5xx status code
func (o *AddIntegrationsMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this add integrations method not allowed response a status code equal to that given
func (o *AddIntegrationsMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the add integrations method not allowed response
func (o *AddIntegrationsMethodNotAllowed) Code() int {
	return 405
}

func (o *AddIntegrationsMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsMethodNotAllowed %s", 405, payload)
}

func (o *AddIntegrationsMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsMethodNotAllowed %s", 405, payload)
}

func (o *AddIntegrationsMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddIntegrationsMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddIntegrationsInternalServerError creates a AddIntegrationsInternalServerError with default headers values
func NewAddIntegrationsInternalServerError() *AddIntegrationsInternalServerError {
	return &AddIntegrationsInternalServerError{}
}

/*
AddIntegrationsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AddIntegrationsInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this add integrations internal server error response has a 2xx status code
func (o *AddIntegrationsInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this add integrations internal server error response has a 3xx status code
func (o *AddIntegrationsInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this add integrations internal server error response has a 4xx status code
func (o *AddIntegrationsInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this add integrations internal server error response has a 5xx status code
func (o *AddIntegrationsInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this add integrations internal server error response a status code equal to that given
func (o *AddIntegrationsInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the add integrations internal server error response
func (o *AddIntegrationsInternalServerError) Code() int {
	return 500
}

func (o *AddIntegrationsInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsInternalServerError %s", 500, payload)
}

func (o *AddIntegrationsInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/oauth][%d] addIntegrationsInternalServerError %s", 500, payload)
}

func (o *AddIntegrationsInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AddIntegrationsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
