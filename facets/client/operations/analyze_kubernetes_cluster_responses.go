// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AnalyzeKubernetesClusterReader is a Reader for the AnalyzeKubernetesCluster structure.
type AnalyzeKubernetesClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AnalyzeKubernetesClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewAnalyzeKubernetesClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAnalyzeKubernetesClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAnalyzeKubernetesClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAnalyzeKubernetesClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAnalyzeKubernetesClusterMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAnalyzeKubernetesClusterInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze] analyzeKubernetesCluster", response, response.Code())
	}
}

// NewAnalyzeKubernetesClusterOK creates a AnalyzeKubernetesClusterOK with default headers values
func NewAnalyzeKubernetesClusterOK() *AnalyzeKubernetesClusterOK {
	return &AnalyzeKubernetesClusterOK{}
}

/*
AnalyzeKubernetesClusterOK describes a response with status code 200, with default header values.

OK
*/
type AnalyzeKubernetesClusterOK struct {
	Payload *models.K8sAnalyzeResponse
}

// IsSuccess returns true when this analyze kubernetes cluster o k response has a 2xx status code
func (o *AnalyzeKubernetesClusterOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this analyze kubernetes cluster o k response has a 3xx status code
func (o *AnalyzeKubernetesClusterOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this analyze kubernetes cluster o k response has a 4xx status code
func (o *AnalyzeKubernetesClusterOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this analyze kubernetes cluster o k response has a 5xx status code
func (o *AnalyzeKubernetesClusterOK) IsServerError() bool {
	return false
}

// IsCode returns true when this analyze kubernetes cluster o k response a status code equal to that given
func (o *AnalyzeKubernetesClusterOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the analyze kubernetes cluster o k response
func (o *AnalyzeKubernetesClusterOK) Code() int {
	return 200
}

func (o *AnalyzeKubernetesClusterOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterOK %s", 200, payload)
}

func (o *AnalyzeKubernetesClusterOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterOK %s", 200, payload)
}

func (o *AnalyzeKubernetesClusterOK) GetPayload() *models.K8sAnalyzeResponse {
	return o.Payload
}

func (o *AnalyzeKubernetesClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.K8sAnalyzeResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAnalyzeKubernetesClusterBadRequest creates a AnalyzeKubernetesClusterBadRequest with default headers values
func NewAnalyzeKubernetesClusterBadRequest() *AnalyzeKubernetesClusterBadRequest {
	return &AnalyzeKubernetesClusterBadRequest{}
}

/*
AnalyzeKubernetesClusterBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AnalyzeKubernetesClusterBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this analyze kubernetes cluster bad request response has a 2xx status code
func (o *AnalyzeKubernetesClusterBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this analyze kubernetes cluster bad request response has a 3xx status code
func (o *AnalyzeKubernetesClusterBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this analyze kubernetes cluster bad request response has a 4xx status code
func (o *AnalyzeKubernetesClusterBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this analyze kubernetes cluster bad request response has a 5xx status code
func (o *AnalyzeKubernetesClusterBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this analyze kubernetes cluster bad request response a status code equal to that given
func (o *AnalyzeKubernetesClusterBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the analyze kubernetes cluster bad request response
func (o *AnalyzeKubernetesClusterBadRequest) Code() int {
	return 400
}

func (o *AnalyzeKubernetesClusterBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterBadRequest %s", 400, payload)
}

func (o *AnalyzeKubernetesClusterBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterBadRequest %s", 400, payload)
}

func (o *AnalyzeKubernetesClusterBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AnalyzeKubernetesClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAnalyzeKubernetesClusterForbidden creates a AnalyzeKubernetesClusterForbidden with default headers values
func NewAnalyzeKubernetesClusterForbidden() *AnalyzeKubernetesClusterForbidden {
	return &AnalyzeKubernetesClusterForbidden{}
}

/*
AnalyzeKubernetesClusterForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AnalyzeKubernetesClusterForbidden struct {
	Payload string
}

// IsSuccess returns true when this analyze kubernetes cluster forbidden response has a 2xx status code
func (o *AnalyzeKubernetesClusterForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this analyze kubernetes cluster forbidden response has a 3xx status code
func (o *AnalyzeKubernetesClusterForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this analyze kubernetes cluster forbidden response has a 4xx status code
func (o *AnalyzeKubernetesClusterForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this analyze kubernetes cluster forbidden response has a 5xx status code
func (o *AnalyzeKubernetesClusterForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this analyze kubernetes cluster forbidden response a status code equal to that given
func (o *AnalyzeKubernetesClusterForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the analyze kubernetes cluster forbidden response
func (o *AnalyzeKubernetesClusterForbidden) Code() int {
	return 403
}

func (o *AnalyzeKubernetesClusterForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterForbidden %s", 403, payload)
}

func (o *AnalyzeKubernetesClusterForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterForbidden %s", 403, payload)
}

func (o *AnalyzeKubernetesClusterForbidden) GetPayload() string {
	return o.Payload
}

func (o *AnalyzeKubernetesClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAnalyzeKubernetesClusterNotFound creates a AnalyzeKubernetesClusterNotFound with default headers values
func NewAnalyzeKubernetesClusterNotFound() *AnalyzeKubernetesClusterNotFound {
	return &AnalyzeKubernetesClusterNotFound{}
}

/*
AnalyzeKubernetesClusterNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AnalyzeKubernetesClusterNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this analyze kubernetes cluster not found response has a 2xx status code
func (o *AnalyzeKubernetesClusterNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this analyze kubernetes cluster not found response has a 3xx status code
func (o *AnalyzeKubernetesClusterNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this analyze kubernetes cluster not found response has a 4xx status code
func (o *AnalyzeKubernetesClusterNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this analyze kubernetes cluster not found response has a 5xx status code
func (o *AnalyzeKubernetesClusterNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this analyze kubernetes cluster not found response a status code equal to that given
func (o *AnalyzeKubernetesClusterNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the analyze kubernetes cluster not found response
func (o *AnalyzeKubernetesClusterNotFound) Code() int {
	return 404
}

func (o *AnalyzeKubernetesClusterNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterNotFound %s", 404, payload)
}

func (o *AnalyzeKubernetesClusterNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterNotFound %s", 404, payload)
}

func (o *AnalyzeKubernetesClusterNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AnalyzeKubernetesClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAnalyzeKubernetesClusterMethodNotAllowed creates a AnalyzeKubernetesClusterMethodNotAllowed with default headers values
func NewAnalyzeKubernetesClusterMethodNotAllowed() *AnalyzeKubernetesClusterMethodNotAllowed {
	return &AnalyzeKubernetesClusterMethodNotAllowed{}
}

/*
AnalyzeKubernetesClusterMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AnalyzeKubernetesClusterMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this analyze kubernetes cluster method not allowed response has a 2xx status code
func (o *AnalyzeKubernetesClusterMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this analyze kubernetes cluster method not allowed response has a 3xx status code
func (o *AnalyzeKubernetesClusterMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this analyze kubernetes cluster method not allowed response has a 4xx status code
func (o *AnalyzeKubernetesClusterMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this analyze kubernetes cluster method not allowed response has a 5xx status code
func (o *AnalyzeKubernetesClusterMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this analyze kubernetes cluster method not allowed response a status code equal to that given
func (o *AnalyzeKubernetesClusterMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the analyze kubernetes cluster method not allowed response
func (o *AnalyzeKubernetesClusterMethodNotAllowed) Code() int {
	return 405
}

func (o *AnalyzeKubernetesClusterMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterMethodNotAllowed %s", 405, payload)
}

func (o *AnalyzeKubernetesClusterMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterMethodNotAllowed %s", 405, payload)
}

func (o *AnalyzeKubernetesClusterMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AnalyzeKubernetesClusterMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAnalyzeKubernetesClusterInternalServerError creates a AnalyzeKubernetesClusterInternalServerError with default headers values
func NewAnalyzeKubernetesClusterInternalServerError() *AnalyzeKubernetesClusterInternalServerError {
	return &AnalyzeKubernetesClusterInternalServerError{}
}

/*
AnalyzeKubernetesClusterInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AnalyzeKubernetesClusterInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this analyze kubernetes cluster internal server error response has a 2xx status code
func (o *AnalyzeKubernetesClusterInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this analyze kubernetes cluster internal server error response has a 3xx status code
func (o *AnalyzeKubernetesClusterInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this analyze kubernetes cluster internal server error response has a 4xx status code
func (o *AnalyzeKubernetesClusterInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this analyze kubernetes cluster internal server error response has a 5xx status code
func (o *AnalyzeKubernetesClusterInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this analyze kubernetes cluster internal server error response a status code equal to that given
func (o *AnalyzeKubernetesClusterInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the analyze kubernetes cluster internal server error response
func (o *AnalyzeKubernetesClusterInternalServerError) Code() int {
	return 500
}

func (o *AnalyzeKubernetesClusterInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterInternalServerError %s", 500, payload)
}

func (o *AnalyzeKubernetesClusterInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /cc-ui/v1/clusters/{clusterId}/kubernetes/analyze][%d] analyzeKubernetesClusterInternalServerError %s", 500, payload)
}

func (o *AnalyzeKubernetesClusterInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AnalyzeKubernetesClusterInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
