// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// AbortReader is a Reader for the Abort structure.
type AbortReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AbortReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewAbortOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAbortBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAbortForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAbortNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 405:
		result := NewAbortMethodNotAllowed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAbortInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /cc-ui/v1/clusters/{clusterId}/abort] abort", response, response.Code())
	}
}

// NewAbortOK creates a AbortOK with default headers values
func NewAbortOK() *AbortOK {
	return &AbortOK{}
}

/*
AbortOK describes a response with status code 200, with default header values.

OK
*/
type AbortOK struct {
}

// IsSuccess returns true when this abort o k response has a 2xx status code
func (o *AbortOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this abort o k response has a 3xx status code
func (o *AbortOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this abort o k response has a 4xx status code
func (o *AbortOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this abort o k response has a 5xx status code
func (o *AbortOK) IsServerError() bool {
	return false
}

// IsCode returns true when this abort o k response a status code equal to that given
func (o *AbortOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the abort o k response
func (o *AbortOK) Code() int {
	return 200
}

func (o *AbortOK) Error() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortOK", 200)
}

func (o *AbortOK) String() string {
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortOK", 200)
}

func (o *AbortOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAbortBadRequest creates a AbortBadRequest with default headers values
func NewAbortBadRequest() *AbortBadRequest {
	return &AbortBadRequest{}
}

/*
AbortBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AbortBadRequest struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this abort bad request response has a 2xx status code
func (o *AbortBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this abort bad request response has a 3xx status code
func (o *AbortBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this abort bad request response has a 4xx status code
func (o *AbortBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this abort bad request response has a 5xx status code
func (o *AbortBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this abort bad request response a status code equal to that given
func (o *AbortBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the abort bad request response
func (o *AbortBadRequest) Code() int {
	return 400
}

func (o *AbortBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortBadRequest %s", 400, payload)
}

func (o *AbortBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortBadRequest %s", 400, payload)
}

func (o *AbortBadRequest) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AbortBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAbortForbidden creates a AbortForbidden with default headers values
func NewAbortForbidden() *AbortForbidden {
	return &AbortForbidden{}
}

/*
AbortForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AbortForbidden struct {
	Payload string
}

// IsSuccess returns true when this abort forbidden response has a 2xx status code
func (o *AbortForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this abort forbidden response has a 3xx status code
func (o *AbortForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this abort forbidden response has a 4xx status code
func (o *AbortForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this abort forbidden response has a 5xx status code
func (o *AbortForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this abort forbidden response a status code equal to that given
func (o *AbortForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the abort forbidden response
func (o *AbortForbidden) Code() int {
	return 403
}

func (o *AbortForbidden) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortForbidden %s", 403, payload)
}

func (o *AbortForbidden) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortForbidden %s", 403, payload)
}

func (o *AbortForbidden) GetPayload() string {
	return o.Payload
}

func (o *AbortForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAbortNotFound creates a AbortNotFound with default headers values
func NewAbortNotFound() *AbortNotFound {
	return &AbortNotFound{}
}

/*
AbortNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AbortNotFound struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this abort not found response has a 2xx status code
func (o *AbortNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this abort not found response has a 3xx status code
func (o *AbortNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this abort not found response has a 4xx status code
func (o *AbortNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this abort not found response has a 5xx status code
func (o *AbortNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this abort not found response a status code equal to that given
func (o *AbortNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the abort not found response
func (o *AbortNotFound) Code() int {
	return 404
}

func (o *AbortNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortNotFound %s", 404, payload)
}

func (o *AbortNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortNotFound %s", 404, payload)
}

func (o *AbortNotFound) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AbortNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAbortMethodNotAllowed creates a AbortMethodNotAllowed with default headers values
func NewAbortMethodNotAllowed() *AbortMethodNotAllowed {
	return &AbortMethodNotAllowed{}
}

/*
AbortMethodNotAllowed describes a response with status code 405, with default header values.

Method Not Allowed
*/
type AbortMethodNotAllowed struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this abort method not allowed response has a 2xx status code
func (o *AbortMethodNotAllowed) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this abort method not allowed response has a 3xx status code
func (o *AbortMethodNotAllowed) IsRedirect() bool {
	return false
}

// IsClientError returns true when this abort method not allowed response has a 4xx status code
func (o *AbortMethodNotAllowed) IsClientError() bool {
	return true
}

// IsServerError returns true when this abort method not allowed response has a 5xx status code
func (o *AbortMethodNotAllowed) IsServerError() bool {
	return false
}

// IsCode returns true when this abort method not allowed response a status code equal to that given
func (o *AbortMethodNotAllowed) IsCode(code int) bool {
	return code == 405
}

// Code gets the status code for the abort method not allowed response
func (o *AbortMethodNotAllowed) Code() int {
	return 405
}

func (o *AbortMethodNotAllowed) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortMethodNotAllowed %s", 405, payload)
}

func (o *AbortMethodNotAllowed) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortMethodNotAllowed %s", 405, payload)
}

func (o *AbortMethodNotAllowed) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AbortMethodNotAllowed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewAbortInternalServerError creates a AbortInternalServerError with default headers values
func NewAbortInternalServerError() *AbortInternalServerError {
	return &AbortInternalServerError{}
}

/*
AbortInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AbortInternalServerError struct {
	Payload *models.ErrorDetails
}

// IsSuccess returns true when this abort internal server error response has a 2xx status code
func (o *AbortInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this abort internal server error response has a 3xx status code
func (o *AbortInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this abort internal server error response has a 4xx status code
func (o *AbortInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this abort internal server error response has a 5xx status code
func (o *AbortInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this abort internal server error response a status code equal to that given
func (o *AbortInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the abort internal server error response
func (o *AbortInternalServerError) Code() int {
	return 500
}

func (o *AbortInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortInternalServerError %s", 500, payload)
}

func (o *AbortInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PUT /cc-ui/v1/clusters/{clusterId}/abort][%d] abortInternalServerError %s", 500, payload)
}

func (o *AbortInternalServerError) GetPayload() *models.ErrorDetails {
	return o.Payload
}

func (o *AbortInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorDetails)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
