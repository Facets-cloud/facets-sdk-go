// Code generated by go-swagger; DO NOT EDIT.

package ui_tf_output_controller

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/Facets-cloud/facets-sdk-go/facets/models"
)

// CreateOrUpdateOutputUsingPOSTReader is a Reader for the CreateOrUpdateOutputUsingPOST structure.
type CreateOrUpdateOutputUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateOrUpdateOutputUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateOrUpdateOutputUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 201:
		result := NewCreateOrUpdateOutputUsingPOSTCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewCreateOrUpdateOutputUsingPOSTUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateOrUpdateOutputUsingPOSTForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateOrUpdateOutputUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[POST /cc-ui/v1/tf-outputs] createOrUpdateOutputUsingPOST", response, response.Code())
	}
}

// NewCreateOrUpdateOutputUsingPOSTOK creates a CreateOrUpdateOutputUsingPOSTOK with default headers values
func NewCreateOrUpdateOutputUsingPOSTOK() *CreateOrUpdateOutputUsingPOSTOK {
	return &CreateOrUpdateOutputUsingPOSTOK{}
}

/*
CreateOrUpdateOutputUsingPOSTOK describes a response with status code 200, with default header values.

OK
*/
type CreateOrUpdateOutputUsingPOSTOK struct {
	Payload *models.TFOutput
}

// IsSuccess returns true when this create or update output using p o s t o k response has a 2xx status code
func (o *CreateOrUpdateOutputUsingPOSTOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create or update output using p o s t o k response has a 3xx status code
func (o *CreateOrUpdateOutputUsingPOSTOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update output using p o s t o k response has a 4xx status code
func (o *CreateOrUpdateOutputUsingPOSTOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this create or update output using p o s t o k response has a 5xx status code
func (o *CreateOrUpdateOutputUsingPOSTOK) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update output using p o s t o k response a status code equal to that given
func (o *CreateOrUpdateOutputUsingPOSTOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the create or update output using p o s t o k response
func (o *CreateOrUpdateOutputUsingPOSTOK) Code() int {
	return 200
}

func (o *CreateOrUpdateOutputUsingPOSTOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTOK %s", 200, payload)
}

func (o *CreateOrUpdateOutputUsingPOSTOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTOK %s", 200, payload)
}

func (o *CreateOrUpdateOutputUsingPOSTOK) GetPayload() *models.TFOutput {
	return o.Payload
}

func (o *CreateOrUpdateOutputUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TFOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateOrUpdateOutputUsingPOSTCreated creates a CreateOrUpdateOutputUsingPOSTCreated with default headers values
func NewCreateOrUpdateOutputUsingPOSTCreated() *CreateOrUpdateOutputUsingPOSTCreated {
	return &CreateOrUpdateOutputUsingPOSTCreated{}
}

/*
CreateOrUpdateOutputUsingPOSTCreated describes a response with status code 201, with default header values.

Created
*/
type CreateOrUpdateOutputUsingPOSTCreated struct {
}

// IsSuccess returns true when this create or update output using p o s t created response has a 2xx status code
func (o *CreateOrUpdateOutputUsingPOSTCreated) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this create or update output using p o s t created response has a 3xx status code
func (o *CreateOrUpdateOutputUsingPOSTCreated) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update output using p o s t created response has a 4xx status code
func (o *CreateOrUpdateOutputUsingPOSTCreated) IsClientError() bool {
	return false
}

// IsServerError returns true when this create or update output using p o s t created response has a 5xx status code
func (o *CreateOrUpdateOutputUsingPOSTCreated) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update output using p o s t created response a status code equal to that given
func (o *CreateOrUpdateOutputUsingPOSTCreated) IsCode(code int) bool {
	return code == 201
}

// Code gets the status code for the create or update output using p o s t created response
func (o *CreateOrUpdateOutputUsingPOSTCreated) Code() int {
	return 201
}

func (o *CreateOrUpdateOutputUsingPOSTCreated) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTCreated", 201)
}

func (o *CreateOrUpdateOutputUsingPOSTCreated) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTCreated", 201)
}

func (o *CreateOrUpdateOutputUsingPOSTCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateOutputUsingPOSTUnauthorized creates a CreateOrUpdateOutputUsingPOSTUnauthorized with default headers values
func NewCreateOrUpdateOutputUsingPOSTUnauthorized() *CreateOrUpdateOutputUsingPOSTUnauthorized {
	return &CreateOrUpdateOutputUsingPOSTUnauthorized{}
}

/*
CreateOrUpdateOutputUsingPOSTUnauthorized describes a response with status code 401, with default header values.

Unauthorized
*/
type CreateOrUpdateOutputUsingPOSTUnauthorized struct {
}

// IsSuccess returns true when this create or update output using p o s t unauthorized response has a 2xx status code
func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update output using p o s t unauthorized response has a 3xx status code
func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update output using p o s t unauthorized response has a 4xx status code
func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update output using p o s t unauthorized response has a 5xx status code
func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update output using p o s t unauthorized response a status code equal to that given
func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the create or update output using p o s t unauthorized response
func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) Code() int {
	return 401
}

func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTUnauthorized", 401)
}

func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTUnauthorized", 401)
}

func (o *CreateOrUpdateOutputUsingPOSTUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateOutputUsingPOSTForbidden creates a CreateOrUpdateOutputUsingPOSTForbidden with default headers values
func NewCreateOrUpdateOutputUsingPOSTForbidden() *CreateOrUpdateOutputUsingPOSTForbidden {
	return &CreateOrUpdateOutputUsingPOSTForbidden{}
}

/*
CreateOrUpdateOutputUsingPOSTForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CreateOrUpdateOutputUsingPOSTForbidden struct {
}

// IsSuccess returns true when this create or update output using p o s t forbidden response has a 2xx status code
func (o *CreateOrUpdateOutputUsingPOSTForbidden) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update output using p o s t forbidden response has a 3xx status code
func (o *CreateOrUpdateOutputUsingPOSTForbidden) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update output using p o s t forbidden response has a 4xx status code
func (o *CreateOrUpdateOutputUsingPOSTForbidden) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update output using p o s t forbidden response has a 5xx status code
func (o *CreateOrUpdateOutputUsingPOSTForbidden) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update output using p o s t forbidden response a status code equal to that given
func (o *CreateOrUpdateOutputUsingPOSTForbidden) IsCode(code int) bool {
	return code == 403
}

// Code gets the status code for the create or update output using p o s t forbidden response
func (o *CreateOrUpdateOutputUsingPOSTForbidden) Code() int {
	return 403
}

func (o *CreateOrUpdateOutputUsingPOSTForbidden) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTForbidden", 403)
}

func (o *CreateOrUpdateOutputUsingPOSTForbidden) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTForbidden", 403)
}

func (o *CreateOrUpdateOutputUsingPOSTForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateOrUpdateOutputUsingPOSTNotFound creates a CreateOrUpdateOutputUsingPOSTNotFound with default headers values
func NewCreateOrUpdateOutputUsingPOSTNotFound() *CreateOrUpdateOutputUsingPOSTNotFound {
	return &CreateOrUpdateOutputUsingPOSTNotFound{}
}

/*
CreateOrUpdateOutputUsingPOSTNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CreateOrUpdateOutputUsingPOSTNotFound struct {
}

// IsSuccess returns true when this create or update output using p o s t not found response has a 2xx status code
func (o *CreateOrUpdateOutputUsingPOSTNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this create or update output using p o s t not found response has a 3xx status code
func (o *CreateOrUpdateOutputUsingPOSTNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this create or update output using p o s t not found response has a 4xx status code
func (o *CreateOrUpdateOutputUsingPOSTNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this create or update output using p o s t not found response has a 5xx status code
func (o *CreateOrUpdateOutputUsingPOSTNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this create or update output using p o s t not found response a status code equal to that given
func (o *CreateOrUpdateOutputUsingPOSTNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the create or update output using p o s t not found response
func (o *CreateOrUpdateOutputUsingPOSTNotFound) Code() int {
	return 404
}

func (o *CreateOrUpdateOutputUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTNotFound", 404)
}

func (o *CreateOrUpdateOutputUsingPOSTNotFound) String() string {
	return fmt.Sprintf("[POST /cc-ui/v1/tf-outputs][%d] createOrUpdateOutputUsingPOSTNotFound", 404)
}

func (o *CreateOrUpdateOutputUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
