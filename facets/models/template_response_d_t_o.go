// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TemplateResponseDTO TemplateResponseDTO
//
// swagger:model TemplateResponseDTO
type TemplateResponseDTO struct {

	// clouds
	Clouds []string `json:"clouds"`

	// description
	Description string `json:"description,omitempty"`

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// group
	Group string `json:"group,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// type
	// Enum: ["MULTI_INSTANCE","SINGLE_INSTANCE","AUTO_INJECT"]
	Type string `json:"type,omitempty"`
}

// Validate validates this template response d t o
func (m *TemplateResponseDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var templateResponseDTOTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MULTI_INSTANCE","SINGLE_INSTANCE","AUTO_INJECT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		templateResponseDTOTypeTypePropEnum = append(templateResponseDTOTypeTypePropEnum, v)
	}
}

const (

	// TemplateResponseDTOTypeMULTIINSTANCE captures enum value "MULTI_INSTANCE"
	TemplateResponseDTOTypeMULTIINSTANCE string = "MULTI_INSTANCE"

	// TemplateResponseDTOTypeSINGLEINSTANCE captures enum value "SINGLE_INSTANCE"
	TemplateResponseDTOTypeSINGLEINSTANCE string = "SINGLE_INSTANCE"

	// TemplateResponseDTOTypeAUTOINJECT captures enum value "AUTO_INJECT"
	TemplateResponseDTOTypeAUTOINJECT string = "AUTO_INJECT"
)

// prop value enum
func (m *TemplateResponseDTO) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, templateResponseDTOTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TemplateResponseDTO) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this template response d t o based on context it is used
func (m *TemplateResponseDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TemplateResponseDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TemplateResponseDTO) UnmarshalBinary(b []byte) error {
	var res TemplateResponseDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
