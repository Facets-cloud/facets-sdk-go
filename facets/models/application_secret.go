// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ApplicationSecret ApplicationSecret
//
// swagger:model ApplicationSecret
type ApplicationSecret struct {

	// secret name
	SecretName string `json:"secretName,omitempty"`

	// secret status
	// Enum: ["FULFILLED","UNFULFILLED","PENDING"]
	SecretStatus string `json:"secretStatus,omitempty"`

	// secret value
	SecretValue string `json:"secretValue,omitempty"`
}

// Validate validates this application secret
func (m *ApplicationSecret) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSecretStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var applicationSecretTypeSecretStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["FULFILLED","UNFULFILLED","PENDING"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		applicationSecretTypeSecretStatusPropEnum = append(applicationSecretTypeSecretStatusPropEnum, v)
	}
}

const (

	// ApplicationSecretSecretStatusFULFILLED captures enum value "FULFILLED"
	ApplicationSecretSecretStatusFULFILLED string = "FULFILLED"

	// ApplicationSecretSecretStatusUNFULFILLED captures enum value "UNFULFILLED"
	ApplicationSecretSecretStatusUNFULFILLED string = "UNFULFILLED"

	// ApplicationSecretSecretStatusPENDING captures enum value "PENDING"
	ApplicationSecretSecretStatusPENDING string = "PENDING"
)

// prop value enum
func (m *ApplicationSecret) validateSecretStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, applicationSecretTypeSecretStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ApplicationSecret) validateSecretStatus(formats strfmt.Registry) error {
	if swag.IsZero(m.SecretStatus) { // not required
		return nil
	}

	// value enum
	if err := m.validateSecretStatusEnum("secretStatus", "body", m.SecretStatus); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this application secret based on context it is used
func (m *ApplicationSecret) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ApplicationSecret) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ApplicationSecret) UnmarshalBinary(b []byte) error {
	var res ApplicationSecret
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
