// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ReplicasetDTO ReplicasetDTO
//
// swagger:model ReplicasetDTO
type ReplicasetDTO struct {

	// age in seconds
	AgeInSeconds int64 `json:"ageInSeconds,omitempty"`

	// current
	Current int32 `json:"current,omitempty"`

	// desired
	Desired int32 `json:"desired,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// ready
	Ready int32 `json:"ready,omitempty"`

	// role
	// Enum: ["active","preview","na"]
	Role string `json:"role,omitempty"`
}

// Validate validates this replicaset d t o
func (m *ReplicasetDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var replicasetDTOTypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["active","preview","na"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		replicasetDTOTypeRolePropEnum = append(replicasetDTOTypeRolePropEnum, v)
	}
}

const (

	// ReplicasetDTORoleActive captures enum value "active"
	ReplicasetDTORoleActive string = "active"

	// ReplicasetDTORolePreview captures enum value "preview"
	ReplicasetDTORolePreview string = "preview"

	// ReplicasetDTORoleNa captures enum value "na"
	ReplicasetDTORoleNa string = "na"
)

// prop value enum
func (m *ReplicasetDTO) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, replicasetDTOTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ReplicasetDTO) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(m.Role) { // not required
		return nil
	}

	// value enum
	if err := m.validateRoleEnum("role", "body", m.Role); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this replicaset d t o based on context it is used
func (m *ReplicasetDTO) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ReplicasetDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ReplicasetDTO) UnmarshalBinary(b []byte) error {
	var res ReplicasetDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
