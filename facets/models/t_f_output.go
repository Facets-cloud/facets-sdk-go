// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// TFOutput TFOutput
//
// swagger:model TFOutput
type TFOutput struct {

	// account Id
	AccountID string `json:"accountId,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// creation date
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creationDate,omitempty"`

	// facets yaml
	FacetsYaml string `json:"facetsYaml,omitempty"`

	// git ref
	GitRef string `json:"gitRef,omitempty"`

	// git Url
	GitURL string `json:"gitUrl,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// inferred from module
	InferredFromModule bool `json:"inferredFromModule,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// last modified date
	// Format: date-time
	LastModifiedDate strfmt.DateTime `json:"lastModifiedDate,omitempty"`

	// lookup tree
	LookupTree string `json:"lookupTree,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// relative path
	RelativePath string `json:"relativePath,omitempty"`

	// source
	// Enum: ["BUILT_IN","CUSTOM"]
	Source string `json:"source,omitempty"`
}

// Validate validates this t f output
func (m *TFOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastModifiedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSource(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TFOutput) validateCreationDate(formats strfmt.Registry) error {
	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creationDate", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *TFOutput) validateLastModifiedDate(formats strfmt.Registry) error {
	if swag.IsZero(m.LastModifiedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("lastModifiedDate", "body", "date-time", m.LastModifiedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var tFOutputTypeSourcePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["BUILT_IN","CUSTOM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		tFOutputTypeSourcePropEnum = append(tFOutputTypeSourcePropEnum, v)
	}
}

const (

	// TFOutputSourceBUILTIN captures enum value "BUILT_IN"
	TFOutputSourceBUILTIN string = "BUILT_IN"

	// TFOutputSourceCUSTOM captures enum value "CUSTOM"
	TFOutputSourceCUSTOM string = "CUSTOM"
)

// prop value enum
func (m *TFOutput) validateSourceEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, tFOutputTypeSourcePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *TFOutput) validateSource(formats strfmt.Registry) error {
	if swag.IsZero(m.Source) { // not required
		return nil
	}

	// value enum
	if err := m.validateSourceEnum("source", "body", m.Source); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this t f output based on context it is used
func (m *TFOutput) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TFOutput) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TFOutput) UnmarshalBinary(b []byte) error {
	var res TFOutput
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
