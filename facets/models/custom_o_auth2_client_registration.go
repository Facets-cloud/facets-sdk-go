// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CustomOAuth2ClientRegistration custom o auth2 client registration
//
// swagger:model CustomOAuth2ClientRegistration
type CustomOAuth2ClientRegistration struct {

	// client Id
	// Required: true
	ClientID *string `json:"clientId"`

	// client secret
	// Required: true
	ClientSecret *string `json:"clientSecret"`

	// is system configured
	// Read Only: true
	IsSystemConfigured *bool `json:"isSystemConfigured,omitempty"`

	// issuer Url
	IssuerURL string `json:"issuerUrl,omitempty"`

	// login button text
	// Required: true
	LoginButtonText *string `json:"loginButtonText"`

	// provider
	// Required: true
	// Enum: ["GOOGLE","OKTA","ONE_LOGIN","AZURE_AD","JUMP_CLOUD","OPEN_ID"]
	Provider *string `json:"provider"`

	// registration Id
	// Required: true
	RegistrationID *string `json:"registrationId"`

	// scope
	// Required: true
	Scope *string `json:"scope"`

	// system configured
	SystemConfigured bool `json:"systemConfigured,omitempty"`
}

// Validate validates this custom o auth2 client registration
func (m *CustomOAuth2ClientRegistration) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientSecret(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLoginButtonText(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegistrationID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateScope(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomOAuth2ClientRegistration) validateClientID(formats strfmt.Registry) error {

	if err := validate.Required("clientId", "body", m.ClientID); err != nil {
		return err
	}

	return nil
}

func (m *CustomOAuth2ClientRegistration) validateClientSecret(formats strfmt.Registry) error {

	if err := validate.Required("clientSecret", "body", m.ClientSecret); err != nil {
		return err
	}

	return nil
}

func (m *CustomOAuth2ClientRegistration) validateLoginButtonText(formats strfmt.Registry) error {

	if err := validate.Required("loginButtonText", "body", m.LoginButtonText); err != nil {
		return err
	}

	return nil
}

var customOAuth2ClientRegistrationTypeProviderPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GOOGLE","OKTA","ONE_LOGIN","AZURE_AD","JUMP_CLOUD","OPEN_ID"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		customOAuth2ClientRegistrationTypeProviderPropEnum = append(customOAuth2ClientRegistrationTypeProviderPropEnum, v)
	}
}

const (

	// CustomOAuth2ClientRegistrationProviderGOOGLE captures enum value "GOOGLE"
	CustomOAuth2ClientRegistrationProviderGOOGLE string = "GOOGLE"

	// CustomOAuth2ClientRegistrationProviderOKTA captures enum value "OKTA"
	CustomOAuth2ClientRegistrationProviderOKTA string = "OKTA"

	// CustomOAuth2ClientRegistrationProviderONELOGIN captures enum value "ONE_LOGIN"
	CustomOAuth2ClientRegistrationProviderONELOGIN string = "ONE_LOGIN"

	// CustomOAuth2ClientRegistrationProviderAZUREAD captures enum value "AZURE_AD"
	CustomOAuth2ClientRegistrationProviderAZUREAD string = "AZURE_AD"

	// CustomOAuth2ClientRegistrationProviderJUMPCLOUD captures enum value "JUMP_CLOUD"
	CustomOAuth2ClientRegistrationProviderJUMPCLOUD string = "JUMP_CLOUD"

	// CustomOAuth2ClientRegistrationProviderOPENID captures enum value "OPEN_ID"
	CustomOAuth2ClientRegistrationProviderOPENID string = "OPEN_ID"
)

// prop value enum
func (m *CustomOAuth2ClientRegistration) validateProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, customOAuth2ClientRegistrationTypeProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CustomOAuth2ClientRegistration) validateProvider(formats strfmt.Registry) error {

	if err := validate.Required("provider", "body", m.Provider); err != nil {
		return err
	}

	// value enum
	if err := m.validateProviderEnum("provider", "body", *m.Provider); err != nil {
		return err
	}

	return nil
}

func (m *CustomOAuth2ClientRegistration) validateRegistrationID(formats strfmt.Registry) error {

	if err := validate.Required("registrationId", "body", m.RegistrationID); err != nil {
		return err
	}

	return nil
}

func (m *CustomOAuth2ClientRegistration) validateScope(formats strfmt.Registry) error {

	if err := validate.Required("scope", "body", m.Scope); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this custom o auth2 client registration based on the context it is used
func (m *CustomOAuth2ClientRegistration) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateIsSystemConfigured(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *CustomOAuth2ClientRegistration) contextValidateIsSystemConfigured(ctx context.Context, formats strfmt.Registry) error {

	if err := validate.ReadOnly(ctx, "isSystemConfigured", "body", m.IsSystemConfigured); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *CustomOAuth2ClientRegistration) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CustomOAuth2ClientRegistration) UnmarshalBinary(b []byte) error {
	var res CustomOAuth2ClientRegistration
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
