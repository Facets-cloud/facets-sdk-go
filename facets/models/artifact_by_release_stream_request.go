// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ArtifactByReleaseStreamRequest ArtifactByReleaseStreamRequest
//
// swagger:model ArtifactByReleaseStreamRequest
type ArtifactByReleaseStreamRequest struct {

	// application name
	ApplicationName string `json:"applicationName,omitempty"`

	// artifact Uri
	ArtifactURI string `json:"artifactUri,omitempty"`

	// artifactory
	Artifactory string `json:"artifactory,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// external Id
	ExternalID string `json:"externalId,omitempty"`

	// release stream
	ReleaseStream string `json:"releaseStream,omitempty"`

	// stack name
	StackName string `json:"stackName,omitempty"`
}

// Validate validates this artifact by release stream request
func (m *ArtifactByReleaseStreamRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this artifact by release stream request based on context it is used
func (m *ArtifactByReleaseStreamRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ArtifactByReleaseStreamRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ArtifactByReleaseStreamRequest) UnmarshalBinary(b []byte) error {
	var res ArtifactByReleaseStreamRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
