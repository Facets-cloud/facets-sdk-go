// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AzureClusterRequest azure cluster request
//
// swagger:model AzureClusterRequest
type AzureClusterRequest struct {

	// auto sign off schedule
	AutoSignOffSchedule string `json:"autoSignOffSchedule,omitempty"`

	// azs
	Azs []string `json:"azs"`

	// base cluster Id
	BaseClusterID string `json:"baseClusterId,omitempty"`

	// cd pipeline parent
	CdPipelineParent string `json:"cdPipelineParent,omitempty"`

	// client Id
	ClientID string `json:"clientId,omitempty"`

	// client secret
	ClientSecret string `json:"clientSecret,omitempty"`

	// cloud
	// Enum: ["AWS","AZURE","LOCAL","GCP","KUBERNETES"]
	Cloud string `json:"cloud,omitempty"`

	// cloud account Id
	CloudAccountID string `json:"cloudAccountId,omitempty"`

	// cluster name
	ClusterName string `json:"clusterName,omitempty"`

	// component versions
	ComponentVersions map[string]string `json:"componentVersions,omitempty"`

	// enable auto sign off
	EnableAutoSignOff bool `json:"enableAutoSignOff,omitempty"`

	// instance types
	InstanceTypes []string `json:"instanceTypes"`

	// is ephemeral
	IsEphemeral bool `json:"isEphemeral,omitempty"`

	// k8s requests to limits ratio
	K8sRequestsToLimitsRatio float64 `json:"k8sRequestsToLimitsRatio,omitempty"`

	// namespace
	Namespace string `json:"namespace,omitempty"`

	// region
	Region string `json:"region,omitempty"`

	// release stream
	ReleaseStream string `json:"releaseStream,omitempty"`

	// require sign off
	RequireSignOff bool `json:"requireSignOff,omitempty"`

	// resource group name
	ResourceGroupName string `json:"resourceGroupName,omitempty"`

	// schedules
	Schedules map[string]string `json:"schedules,omitempty"`

	// stack name
	StackName string `json:"stackName,omitempty"`

	// subscription Id
	SubscriptionID string `json:"subscriptionId,omitempty"`

	// tenant Id
	TenantID string `json:"tenantId,omitempty"`

	// tz
	Tz *AzureClusterRequestTz `json:"tz,omitempty"`

	// vnet name
	VnetName string `json:"vnetName,omitempty"`

	// vpc c ID r
	VpcCIDR string `json:"vpcCIDR,omitempty"`
}

// Validate validates this azure cluster request
func (m *AzureClusterRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCloud(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTz(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var azureClusterRequestTypeCloudPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AWS","AZURE","LOCAL","GCP","KUBERNETES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		azureClusterRequestTypeCloudPropEnum = append(azureClusterRequestTypeCloudPropEnum, v)
	}
}

const (

	// AzureClusterRequestCloudAWS captures enum value "AWS"
	AzureClusterRequestCloudAWS string = "AWS"

	// AzureClusterRequestCloudAZURE captures enum value "AZURE"
	AzureClusterRequestCloudAZURE string = "AZURE"

	// AzureClusterRequestCloudLOCAL captures enum value "LOCAL"
	AzureClusterRequestCloudLOCAL string = "LOCAL"

	// AzureClusterRequestCloudGCP captures enum value "GCP"
	AzureClusterRequestCloudGCP string = "GCP"

	// AzureClusterRequestCloudKUBERNETES captures enum value "KUBERNETES"
	AzureClusterRequestCloudKUBERNETES string = "KUBERNETES"
)

// prop value enum
func (m *AzureClusterRequest) validateCloudEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, azureClusterRequestTypeCloudPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *AzureClusterRequest) validateCloud(formats strfmt.Registry) error {
	if swag.IsZero(m.Cloud) { // not required
		return nil
	}

	// value enum
	if err := m.validateCloudEnum("cloud", "body", m.Cloud); err != nil {
		return err
	}

	return nil
}

func (m *AzureClusterRequest) validateTz(formats strfmt.Registry) error {
	if swag.IsZero(m.Tz) { // not required
		return nil
	}

	if m.Tz != nil {
		if err := m.Tz.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tz")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("tz")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this azure cluster request based on the context it is used
func (m *AzureClusterRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateTz(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AzureClusterRequest) contextValidateTz(ctx context.Context, formats strfmt.Registry) error {

	if m.Tz != nil {

		if swag.IsZero(m.Tz) { // not required
			return nil
		}

		if err := m.Tz.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("tz")
			} else if ce, ok := err.(*errors.CompositeError); ok {
				return ce.ValidateName("tz")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *AzureClusterRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureClusterRequest) UnmarshalBinary(b []byte) error {
	var res AzureClusterRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// AzureClusterRequestTz azure cluster request tz
//
// swagger:model AzureClusterRequestTz
type AzureClusterRequestTz struct {

	// display name
	DisplayName string `json:"displayName,omitempty"`

	// dstsavings
	Dstsavings int32 `json:"dstsavings,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// raw offset
	RawOffset int32 `json:"rawOffset,omitempty"`
}

// Validate validates this azure cluster request tz
func (m *AzureClusterRequestTz) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this azure cluster request tz based on context it is used
func (m *AzureClusterRequestTz) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AzureClusterRequestTz) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AzureClusterRequestTz) UnmarshalBinary(b []byte) error {
	var res AzureClusterRequestTz
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
