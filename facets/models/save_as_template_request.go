// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SaveAsTemplateRequest SaveAsTemplateRequest
//
// swagger:model SaveAsTemplateRequest
type SaveAsTemplateRequest struct {

	// account Id
	AccountID string `json:"accountId,omitempty"`

	// clouds
	Clouds []string `json:"clouds"`

	// description
	Description string `json:"description,omitempty"`

	// git ref
	GitRef string `json:"gitRef,omitempty"`

	// git Url
	GitURL string `json:"gitUrl,omitempty"`

	// group
	Group string `json:"group,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// organisation name
	OrganisationName string `json:"organisationName,omitempty"`

	// relative path
	RelativePath string `json:"relativePath,omitempty"`

	// type
	// Enum: ["MULTI_INSTANCE","SINGLE_INSTANCE","AUTO_INJECT"]
	Type string `json:"type,omitempty"`
}

// Validate validates this save as template request
func (m *SaveAsTemplateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClouds(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var saveAsTemplateRequestCloudsItemsEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["AWS","AZURE","LOCAL","GCP","KUBERNETES"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		saveAsTemplateRequestCloudsItemsEnum = append(saveAsTemplateRequestCloudsItemsEnum, v)
	}
}

func (m *SaveAsTemplateRequest) validateCloudsItemsEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, saveAsTemplateRequestCloudsItemsEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SaveAsTemplateRequest) validateClouds(formats strfmt.Registry) error {
	if swag.IsZero(m.Clouds) { // not required
		return nil
	}

	for i := 0; i < len(m.Clouds); i++ {

		// value enum
		if err := m.validateCloudsItemsEnum("clouds"+"."+strconv.Itoa(i), "body", m.Clouds[i]); err != nil {
			return err
		}

	}

	return nil
}

var saveAsTemplateRequestTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["MULTI_INSTANCE","SINGLE_INSTANCE","AUTO_INJECT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		saveAsTemplateRequestTypeTypePropEnum = append(saveAsTemplateRequestTypeTypePropEnum, v)
	}
}

const (

	// SaveAsTemplateRequestTypeMULTIINSTANCE captures enum value "MULTI_INSTANCE"
	SaveAsTemplateRequestTypeMULTIINSTANCE string = "MULTI_INSTANCE"

	// SaveAsTemplateRequestTypeSINGLEINSTANCE captures enum value "SINGLE_INSTANCE"
	SaveAsTemplateRequestTypeSINGLEINSTANCE string = "SINGLE_INSTANCE"

	// SaveAsTemplateRequestTypeAUTOINJECT captures enum value "AUTO_INJECT"
	SaveAsTemplateRequestTypeAUTOINJECT string = "AUTO_INJECT"
)

// prop value enum
func (m *SaveAsTemplateRequest) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, saveAsTemplateRequestTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *SaveAsTemplateRequest) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this save as template request based on context it is used
func (m *SaveAsTemplateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SaveAsTemplateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SaveAsTemplateRequest) UnmarshalBinary(b []byte) error {
	var res SaveAsTemplateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
