// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"
	stderrors "errors"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// KubernetesAccount kubernetes account
//
// swagger:model KubernetesAccount
type KubernetesAccount struct {

	// account type
	// Enum: ["VERSION_CONTROL","CLOUD","CODER"]
	AccountType string `json:"accountType,omitempty"`

	// associated to
	AssociatedTo []*AccountAssociationInfo `json:"associatedTo"`

	// certificate authority
	CertificateAuthority string `json:"certificateAuthority,omitempty"`

	// change log
	ChangeLog string `json:"changeLog,omitempty"`

	// created by
	CreatedBy string `json:"createdBy,omitempty"`

	// creation date
	// Format: date-time
	CreationDate strfmt.DateTime `json:"creationDate,omitempty"`

	// host
	Host string `json:"host,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// in use
	InUse bool `json:"inUse,omitempty"`

	// last modified by
	LastModifiedBy string `json:"lastModifiedBy,omitempty"`

	// last modified date
	// Format: date-time
	LastModifiedDate strfmt.DateTime `json:"lastModifiedDate,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// provider
	// Enum: ["GITHUB","BITBUCKET","GITLAB","AWS","AZURE","GCP","KUBERNETES","CODER"]
	Provider string `json:"provider,omitempty"`

	// system defined
	SystemDefined bool `json:"systemDefined,omitempty"`

	// token
	Token string `json:"token,omitempty"`

	// versioning key
	VersioningKey string `json:"versioningKey,omitempty"`
}

// Validate validates this kubernetes account
func (m *KubernetesAccount) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAccountType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateAssociatedTo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCreationDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastModifiedDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateProvider(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var kubernetesAccountTypeAccountTypePropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["VERSION_CONTROL","CLOUD","CODER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		kubernetesAccountTypeAccountTypePropEnum = append(kubernetesAccountTypeAccountTypePropEnum, v)
	}
}

const (

	// KubernetesAccountAccountTypeVERSIONCONTROL captures enum value "VERSION_CONTROL"
	KubernetesAccountAccountTypeVERSIONCONTROL string = "VERSION_CONTROL"

	// KubernetesAccountAccountTypeCLOUD captures enum value "CLOUD"
	KubernetesAccountAccountTypeCLOUD string = "CLOUD"

	// KubernetesAccountAccountTypeCODER captures enum value "CODER"
	KubernetesAccountAccountTypeCODER string = "CODER"
)

// prop value enum
func (m *KubernetesAccount) validateAccountTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, kubernetesAccountTypeAccountTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *KubernetesAccount) validateAccountType(formats strfmt.Registry) error {
	if swag.IsZero(m.AccountType) { // not required
		return nil
	}

	// value enum
	if err := m.validateAccountTypeEnum("accountType", "body", m.AccountType); err != nil {
		return err
	}

	return nil
}

func (m *KubernetesAccount) validateAssociatedTo(formats strfmt.Registry) error {
	if swag.IsZero(m.AssociatedTo) { // not required
		return nil
	}

	for i := 0; i < len(m.AssociatedTo); i++ {
		if swag.IsZero(m.AssociatedTo[i]) { // not required
			continue
		}

		if m.AssociatedTo[i] != nil {
			if err := m.AssociatedTo[i].Validate(formats); err != nil {
				ve := new(errors.Validation)
				if stderrors.As(err, &ve) {
					return ve.ValidateName("associatedTo" + "." + strconv.Itoa(i))
				}
				ce := new(errors.CompositeError)
				if stderrors.As(err, &ce) {
					return ce.ValidateName("associatedTo" + "." + strconv.Itoa(i))
				}

				return err
			}
		}

	}

	return nil
}

func (m *KubernetesAccount) validateCreationDate(formats strfmt.Registry) error {
	if swag.IsZero(m.CreationDate) { // not required
		return nil
	}

	if err := validate.FormatOf("creationDate", "body", "date-time", m.CreationDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *KubernetesAccount) validateLastModifiedDate(formats strfmt.Registry) error {
	if swag.IsZero(m.LastModifiedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("lastModifiedDate", "body", "date-time", m.LastModifiedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

var kubernetesAccountTypeProviderPropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GITHUB","BITBUCKET","GITLAB","AWS","AZURE","GCP","KUBERNETES","CODER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		kubernetesAccountTypeProviderPropEnum = append(kubernetesAccountTypeProviderPropEnum, v)
	}
}

const (

	// KubernetesAccountProviderGITHUB captures enum value "GITHUB"
	KubernetesAccountProviderGITHUB string = "GITHUB"

	// KubernetesAccountProviderBITBUCKET captures enum value "BITBUCKET"
	KubernetesAccountProviderBITBUCKET string = "BITBUCKET"

	// KubernetesAccountProviderGITLAB captures enum value "GITLAB"
	KubernetesAccountProviderGITLAB string = "GITLAB"

	// KubernetesAccountProviderAWS captures enum value "AWS"
	KubernetesAccountProviderAWS string = "AWS"

	// KubernetesAccountProviderAZURE captures enum value "AZURE"
	KubernetesAccountProviderAZURE string = "AZURE"

	// KubernetesAccountProviderGCP captures enum value "GCP"
	KubernetesAccountProviderGCP string = "GCP"

	// KubernetesAccountProviderKUBERNETES captures enum value "KUBERNETES"
	KubernetesAccountProviderKUBERNETES string = "KUBERNETES"

	// KubernetesAccountProviderCODER captures enum value "CODER"
	KubernetesAccountProviderCODER string = "CODER"
)

// prop value enum
func (m *KubernetesAccount) validateProviderEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, kubernetesAccountTypeProviderPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *KubernetesAccount) validateProvider(formats strfmt.Registry) error {
	if swag.IsZero(m.Provider) { // not required
		return nil
	}

	// value enum
	if err := m.validateProviderEnum("provider", "body", m.Provider); err != nil {
		return err
	}

	return nil
}

// ContextValidate validate this kubernetes account based on the context it is used
func (m *KubernetesAccount) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAssociatedTo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *KubernetesAccount) contextValidateAssociatedTo(ctx context.Context, formats strfmt.Registry) error {

	for i := 0; i < len(m.AssociatedTo); i++ {

		if m.AssociatedTo[i] != nil {

			if swag.IsZero(m.AssociatedTo[i]) { // not required
				return nil
			}

			if err := m.AssociatedTo[i].ContextValidate(ctx, formats); err != nil {
				ve := new(errors.Validation)
				if stderrors.As(err, &ve) {
					return ve.ValidateName("associatedTo" + "." + strconv.Itoa(i))
				}
				ce := new(errors.CompositeError)
				if stderrors.As(err, &ce) {
					return ce.ValidateName("associatedTo" + "." + strconv.Itoa(i))
				}

				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *KubernetesAccount) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *KubernetesAccount) UnmarshalBinary(b []byte) error {
	var res KubernetesAccount
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
