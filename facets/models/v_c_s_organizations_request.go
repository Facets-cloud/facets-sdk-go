// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// VCSOrganizationsRequest v c s organizations request
//
// swagger:model VCSOrganizationsRequest
type VCSOrganizationsRequest struct {

	// access token
	AccessToken string `json:"accessToken,omitempty"`

	// enterprise host name
	EnterpriseHostName string `json:"enterpriseHostName,omitempty"`

	// username
	Username string `json:"username,omitempty"`

	// vcs type
	// Enum: ["GITHUB","BITBUCKET","GITLAB"]
	VcsType string `json:"vcsType,omitempty"`
}

// Validate validates this v c s organizations request
func (m *VCSOrganizationsRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateVcsType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var vCSOrganizationsRequestTypeVcsTypePropEnum []any

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["GITHUB","BITBUCKET","GITLAB"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		vCSOrganizationsRequestTypeVcsTypePropEnum = append(vCSOrganizationsRequestTypeVcsTypePropEnum, v)
	}
}

const (

	// VCSOrganizationsRequestVcsTypeGITHUB captures enum value "GITHUB"
	VCSOrganizationsRequestVcsTypeGITHUB string = "GITHUB"

	// VCSOrganizationsRequestVcsTypeBITBUCKET captures enum value "BITBUCKET"
	VCSOrganizationsRequestVcsTypeBITBUCKET string = "BITBUCKET"

	// VCSOrganizationsRequestVcsTypeGITLAB captures enum value "GITLAB"
	VCSOrganizationsRequestVcsTypeGITLAB string = "GITLAB"
)

// prop value enum
func (m *VCSOrganizationsRequest) validateVcsTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, vCSOrganizationsRequestTypeVcsTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *VCSOrganizationsRequest) validateVcsType(formats strfmt.Registry) error {
	if swag.IsZero(m.VcsType) { // not required
		return nil
	}

	// value enum
	if err := m.validateVcsTypeEnum("vcsType", "body", m.VcsType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this v c s organizations request based on context it is used
func (m *VCSOrganizationsRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *VCSOrganizationsRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *VCSOrganizationsRequest) UnmarshalBinary(b []byte) error {
	var res VCSOrganizationsRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
