// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// ChannelTypePayload channel type payload
//
// swagger:model ChannelTypePayload
type ChannelTypePayload struct {

	// label
	Label string `json:"label,omitempty"`

	// type
	// Enum: ["SLACK","CAPILLARY_VALIDATOR","WEBHOOK","PAGER_DUTY","ZEN_DUTY","EMAIL","MS_TEAMS","MS_TEAMS_WORKFLOW"]
	Type string `json:"type,omitempty"`
}

// Validate validates this channel type payload
func (m *ChannelTypePayload) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var channelTypePayloadTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["SLACK","CAPILLARY_VALIDATOR","WEBHOOK","PAGER_DUTY","ZEN_DUTY","EMAIL","MS_TEAMS","MS_TEAMS_WORKFLOW"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		channelTypePayloadTypeTypePropEnum = append(channelTypePayloadTypeTypePropEnum, v)
	}
}

const (

	// ChannelTypePayloadTypeSLACK captures enum value "SLACK"
	ChannelTypePayloadTypeSLACK string = "SLACK"

	// ChannelTypePayloadTypeCAPILLARYVALIDATOR captures enum value "CAPILLARY_VALIDATOR"
	ChannelTypePayloadTypeCAPILLARYVALIDATOR string = "CAPILLARY_VALIDATOR"

	// ChannelTypePayloadTypeWEBHOOK captures enum value "WEBHOOK"
	ChannelTypePayloadTypeWEBHOOK string = "WEBHOOK"

	// ChannelTypePayloadTypePAGERDUTY captures enum value "PAGER_DUTY"
	ChannelTypePayloadTypePAGERDUTY string = "PAGER_DUTY"

	// ChannelTypePayloadTypeZENDUTY captures enum value "ZEN_DUTY"
	ChannelTypePayloadTypeZENDUTY string = "ZEN_DUTY"

	// ChannelTypePayloadTypeEMAIL captures enum value "EMAIL"
	ChannelTypePayloadTypeEMAIL string = "EMAIL"

	// ChannelTypePayloadTypeMSTEAMS captures enum value "MS_TEAMS"
	ChannelTypePayloadTypeMSTEAMS string = "MS_TEAMS"

	// ChannelTypePayloadTypeMSTEAMSWORKFLOW captures enum value "MS_TEAMS_WORKFLOW"
	ChannelTypePayloadTypeMSTEAMSWORKFLOW string = "MS_TEAMS_WORKFLOW"
)

// prop value enum
func (m *ChannelTypePayload) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, channelTypePayloadTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *ChannelTypePayload) validateType(formats strfmt.Registry) error {
	if swag.IsZero(m.Type) { // not required
		return nil
	}

	// value enum
	if err := m.validateTypeEnum("type", "body", m.Type); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this channel type payload based on context it is used
func (m *ChannelTypePayload) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ChannelTypePayload) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ChannelTypePayload) UnmarshalBinary(b []byte) error {
	var res ChannelTypePayload
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
